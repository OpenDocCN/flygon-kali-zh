["```kt\nif(isComingOverBridge){\n\n\u00a0\u00a0\u00a0// Shoot them\n\n}\n```", "```kt\nif(isComingOverBridge){\n\n\u00a0\u00a0\u00a0// Shoot them\n}else{\n\n\u00a0\u00a0\u00a0// Hold position\n}\n```", "```kt\nboolean isComingOverBridge;\nint enemyTroops;\nint friendlyTroops;\n// Code that initializes the above variables one way or another\n// Now the if\nif(isComingOverBridge && friendlyTroops > enemyTroops){\n\u00a0\u00a0\u00a0// shoot them\n}else if(isComingOveBridge && friendlyTroops < enemyTroops) {\n\u00a0\u00a0\u00a0// blow the bridge\n}else{\n\u00a0\u00a0\u00a0// Hold position\n}\n```", "```kt\nif(isComingOverBridge && friendlyTroops > enemyTroops)\n```", "```kt\nelse if(isComingOveBridge && friendlyTroops < enemyTroops)\n```", "```kt\nif (wavingWhiteFlag){\n\u00a0\u00a0\u00a0// Take prisoners\n}\n```", "```kt\nif (!wavingWhiteFlag){\n\u00a0\u00a0\u00a0// not surrendering so check everything else\n\n\u00a0\u00a0\u00a0if(isComingOverTheBridge && friendlyTroops >= \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enemyTroops){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// shoot them\n\u00a0\u00a0\u00a0}else if(isComingOverTheBridge && friendlyTroops < \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enemyTroops) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// blow the bridge\n\u00a0\u00a0\u00a0}\n}else{\n\n\u00a0\u00a0\u00a0// this is the else for our first if\n\u00a0\u00a0\u00a0// Take prisoners\n{\n// Holding position\n```", "```kt\nswitch(argument){\n}\n```", "```kt\ncase x:\n\u00a0\u00a0\u00a0// code for case x\n\u00a0\u00a0\u00a0break;\ncase y:\n\u00a0\u00a0\u00a0// code for case y\n\u00a0\u00a0\u00a0break;\n```", "```kt\ndefault:// Look no value\n\u00a0\u00a0\u00a0// Do something here if no other case statements are \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0true\n\u00a0\u00a0\u00a0break;\n```", "```kt\n// get input from user in a String variable called command\nString command = \"go east\";\nswitch(command){\n\u00a0\u00a0\u00a0case \"go east\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"Player: \", \"Moves to the East\" );\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0case \"go west\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"Player: \", \"Moves to the West\" );\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0case \"go north\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"Player: \", \"Moves to the North\" );\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0case \"go south\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"Player: \", \"Moves to the South\" );\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\n\u00a0\u00a0\u00a0case \"take sword\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"Player: \", \"Takes the silver sword\" );\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0// more possible cases\n\u00a0\u00a0\u00a0default:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"Message: \", \"Sorry I don't speak Elfish\" );\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n}\n```", "```kt\n\u00a0\u00a0\u00a0case \"go west\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0goWest();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n```", "```kt\nint x = 10;\nwhile(x > 0){\n\u00a0\u00a0\u00a0x--;\n\u00a0\u00a0\u00a0// x decreases by one each pass through the loop\n}\n```", "```kt\nint x = 10;\nwhile(x > 10){\n\u00a0\u00a0\u00a0// more code here.\n\u00a0\u00a0\u00a0// but it will never run \n\u00a0\u00a0\u00a0// unless x is greater than 10.\n}\n```", "```kt\nint newMessages = 3;\nint unreadMessages = 0;\nwhile(newMessages > 0 || unreadMessages > 0){\n\u00a0\u00a0\u00a0// Display next message\n\u00a0\u00a0\u00a0// etc.\n}\n// continue here when newMessages and unreadMessages equal 0\n```", "```kt\nint x = 1;\nwhile(x > 0){\n\u00a0\u00a0\u00a0x--;\n\u00a0\u00a0\u00a0// x is now 0 so the condition is false\n\u00a0\u00a0\u00a0// But this line still runs\n\u00a0\u00a0\u00a0// and this one\n\u00a0\u00a0\u00a0// and me!\n}\n```", "```kt\nint x = 0;\nwhile(true){\n\u00a0\u00a0\u00a0x++; // I am going to get very big!\n}\n```", "```kt\nint x = 0;\nwhile(true){\n\u00a0\u00a0\u00a0x++; //I am going to get very big!\n\u00a0\u00a0\u00a0break; // No, you're not- ha!\n\u00a0\u00a0\u00a0// code doesn't reach here\n}\n```", "```kt\nint x = 0;\nint tooBig = 10;\nwhile(true){\n\u00a0\u00a0\u00a0x++; // I am going to get very big!\n\u00a0\u00a0\u00a0if(x == tooBig){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0} // No, you're not- ha!\n\n\u00a0\u00a0\u00a0// code reaches here only until x = 10\n}\n```", "```kt\nint x = 0;\nint tooBig = 10;\nint tooBigToPrint = 5;\nwhile(true){\n\u00a0\u00a0\u00a0x++; // I am going to get very big!\n\u00a0\u00a0\u00a0if(x == tooBig){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0} // No, you're not- ha!\n\n\u00a0\u00a0\u00a0// code reaches here only until x = 10\n\u00a0\u00a0\u00a0if(x >= tooBigToPrint){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// No more printing but keep looping\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0continue;\n\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0// code reaches here only until x = 5\n\u00a0\u00a0\u00a0// Print out x \n}\n```", "```kt\nint x= 1\ndo{\n\u00a0\u00a0\u00a0x++;\n}while(x < 1);\n// x now = 2 \n```", "```kt\nfor(int i = 0; i < 10;\u00a0\u00a0i++){\n\u00a0\u00a0\u00a0//Something that needs to happen 10 times goes here\n}\n```", "```kt\nfor(declaration and initialization; condition; change after each pass through loop).\n```", "```kt\n    for(int i = 10; i > 0;\u00a0\u00a0i--){\n    \u00a0\u00a0\u00a0// countdown\n    }\n    // blast off i = 0\n    ```", "```kt\npublic void countUp(View v){\n\u00a0\u00a0\u00a0Log.i(\"message:\",\"In countUp method\");\n\n\u00a0\u00a0\u00a0int x = 0;\n\u00a0\u00a0\u00a0// Now an apparently infinite while loop\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while(true){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Add 1 to x each time\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x++;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"x =\", \"\" + x);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(x == 3){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Get me out of here\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0}\n}\n```", "```kt\npublic void countDown(View v){\n\u00a0\u00a0\u00a0Log.i(\"message:\",\"In countDown method\");\n\u00a0\u00a0\u00a0int x = 4;\n\u00a0\u00a0\u00a0// Now an apparently infinite while loop\n\u00a0\u00a0\u00a0while(true){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Add 1 to x each time\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x--;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"x =\", \"\" + x);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(x == 1){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Get me out of here\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0}\n}\n```", "```kt\npublic void nested(View v){\n\u00a0\u00a0\u00a0Log.i(\"message:\",\"In nested method\");\n\u00a0\u00a0\u00a0// a nested for loop\n\u00a0\u00a0\u00a0for(int i = 0; i < 3; i ++){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for(int j = 3; j > 0; j --){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Output the values of i and j\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Log.i(\"i =\" + i,\"j=\" + j);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0}\n}\n```", "```kt\nmessage:: In countUp method\nx =: 1\nx =: 2\nx =: 3\nmessage: : In countDown method\nx =: 3\nx =: 2\nx =: 1\nmessage: : In nested method\ni =0: j=3\ni =0: j=2\ni =0: j=1\ni =1: j=3\ni =1: j=2\ni =1: j=1\ni =2: j=3\ni =2: j=2\ni =2: j=1\n```"]