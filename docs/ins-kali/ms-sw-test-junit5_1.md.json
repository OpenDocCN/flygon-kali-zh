["```java\npackage io.github.bonigarcia;\n\nimport junit.framework.TestCase;\n\npublic class TestSimple extends TestCase {\n\n    // Phase 1: Setup (for each test)\n    protected void setUp() throws Exception {\n        System.*out*.println(\"<Setup>\");\n    }\n\n    // Test 1: This test is going to succeed\n    public void testSuccess() {\n        // Phase 2: Simulation of exercise\n        int expected = 60;\n        int real = 60;\n        System.*out*.println(\"** Test 1 **\");\n\n        // Phase 3: Verify\n        *assertEquals*(expected + \" should be equals to \" \n         + real, expected, real);\n    }\n\n    // Test 2: This test is going to fail\n    public void testFailure() {\n        // Phase 2: Simulation of exercise\n        int expected = 60;\n        int real = 20;\n        System.*out*.println(\"** Test 2 **\");\n\n        // Phase 3: Verify\n        *assertEquals*(expected + \" should be equals to \" \n         + real, expected, real);\n    }\n\n    // Phase 4: Teardown (for each test)\n    protected void tearDown() throws Exception {\n        System.*out*.println(\"</Ending>\");\n    }\n\n}\n```", "```java\nTestSuite object, and then add single test cases using the method addTestSuite():\n```", "```java\npackage io.github.bonigarcia;\n\nimport junit.framework.Test;\nimport junit.framework.TestSuite;\n\npublic class TestAll {\n\n    public static Test suite() {\n        TestSuite suite = new TestSuite(\"All tests\");\n        suite.addTestSuite(TestSimple.class);\n        suite.addTestSuite(TestMinimal.class);\n        return suite;\n    }\n}\n```", "```java\npackage io.github.bonigarcia;\n\nimport static org.junit.Assert.*assertEquals*;\n\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\n\npublic class TestSimple {\n\n    // Phase 1.1: Setup (for all tests)\n    @BeforeClass\n    public static void setupAll() {\n        System.*out*.println(\"<Setup Class>\");\n    }\n\n    // Phase 1.2: Setup (for each test)\n    @Before\n    public void setupTest() {\n        System.*out*.println(\"<Setup Test>\");\n    }\n\n    // Test 1: This test is going to succeed\n    @Test\n    public void testSuccess() {\n        // Phase 2: Simulation of exercise\n        int expected = 60;\n        int real = 60;\n        System.*out*.println(\"** Test 1 **\");\n\n        // Phase 3: Verify\n        *assertEquals*(expected + \" should be equals to \" \n          + real, expected, real);\n    }\n\n    // Test 2: This test is going to fail\n    @Test\n    public void testFailure() {\n        // Phase 2: Simulation of exercise\n        int expected = 60;\n        int real = 20;\n        System.*out*.println(\"** Test 2 **\");\n\n        // Phase 3: Verify\n        *assertEquals*(expected + \" should be equals to \" \n          + real, expected, real);\n    }\n\n    // Phase 4.1: Teardown (for each test)\n    @After\n    public void teardownTest() {\n        System.*out*.println(\"</Ending Test>\");\n    }\n\n    // Phase 4.2: Teardown (for all test)\n    @AfterClass\n    public static void teardownClass() {\n        System.*out*.println(\"</Ending Class>\");\n    }\n\n}\n```", "```java\n package io.github.bonigarcia;\n\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;\n\n     @RunWith(Suite.class)\n     @Suite.SuiteClasses({ TestMinimal1.class, TestMinimal2.class })\n public class MySuite {\n     }\n```", "```java\npackage io.github.bonigarcia;\n\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Parameterized;\nimport org.junit.runners.Parameterized.Parameter;\nimport org.junit.runners.Parameterized.Parameters;\n\n@RunWith(Parameterized.class)\npublic class TestParameterized {\n\n    @Parameter(0)\n    public int input1;\n\n    @Parameter(1)\n    public int input2;\n\n    @Parameter(2)\n    public int sum;\n\n    @Parameters(name = \"{index}: input1={0} input2={1} sum={2}?\")\n    public static Collection<Object[]> data() {\n        return Arrays.*asList*(\n                new Object[][] { { 1, 1, 2 }, { 2, 2, 4 }, { 3, 3, 9 } });\n    }\n\n    @Test\n    public void testSum() {\n        *assertTrue*(input1 + \"+\" + input2 + \" is not \" + sum,\n                input1 + input2 == sum);\n    }\n\n}\n```", "```java\n package io.github.bonigarcia;\n\n import static org.junit.Assert.assertTrue;\n\n import org.junit.experimental.theories.DataPoints;\n import org.junit.experimental.theories.Theories;\n import org.junit.experimental.theories.Theory;\n import org.junit.runner.RunWith;\n\n      @RunWith(Theories.class)\n public class MyTheoryTest {\n\n         @DataPoints\n         public static int[] positiveIntegers() {\n             return new int[] { 1, 10, 100 };\n         }\n\n         @Theory\n         public void testSum(int a, int b) {\n             System.out.println(\"Checking \" + a + \"+\" + b);\n             *assertTrue*(a + b > a);\n             *assertTrue*(a + b > b);\n         }\n     }\n```"]