- en: Chapter 7. Identifying and Finding Features
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。识别和查找要素
- en: 'In this chapter, we''re going to cover two ArcGIS Server tasks related to returning
    feature attributes: `IdentifyTask` and `FindTask`. Identifying features is another
    common operation found in GIS applications. This task returns the attributes of
    features that have been clicked on a map. The attribute information is often presented
    in a pop-up window. This functionality is accomplished through the ArcGIS API
    for JavaScript with the `IdentifyTask` class. As with the other task processes
    that we have seen, the `IdentifyTask` object uses an input parameter object, which
    in this case is called `IdentifyParameters`. The `IdentifyParameters` object contains
    various parameters that control the results of the identify operation. These parameters
    give you the ability to perform an identification on individual layers, the topmost
    layer in a service, all visible layers in a service, or all layers in a service
    along with a search tolerance. An instance of `IdentifyResult` is used to hold
    the results of the task.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍与返回要素属性相关的两个ArcGIS Server任务：IdentifyTask和FindTask。识别要素是GIS应用程序中的另一个常见操作。此任务返回在地图上单击的要素的属性。属性信息通常显示在弹出窗口中。通过ArcGIS
    API for JavaScript的IdentifyTask类实现此功能。与我们所见的其他任务过程一样，IdentifyTask对象使用输入参数对象，本例中称为IdentifyParameters。IdentifyParameters对象包含各种参数，用于控制识别操作的结果。这些参数使您能够对单个图层、服务中的最顶层图层、服务中的所有可见图层或服务中的所有图层以及搜索容差执行识别。IdentifyResult的实例用于保存任务的结果。
- en: The tasks that you can execute with the ArcGIS API for JavaScript replicate
    some of the most commonly used functions in ArcGIS Desktop. `FindTask` is one
    such tool. Just as in the desktop version of ArcGIS, this task can be used to
    find features in a layer that match a string value. Before executing a Find operation
    with a `FindTask` object, you will need to set various parameters of the operation
    in an instance of `FindParameters`. `FindParameters` gives you the ability to
    set various options, including the search text, fields to search, and others.
    Using a `FindParameters` object, `FindTask` then executes its tasks against one
    or more layers and fields then returns a `FindResult` object that contains `layerID`,
    `layerName`, and feature that matched the search string.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用ArcGIS API for JavaScript执行一些在ArcGIS Desktop中最常用的功能的任务。FindTask就是这样一个工具。与ArcGIS桌面版本一样，此任务可用于在图层中查找与字符串值匹配的要素。在使用FindTask对象执行查找操作之前，您需要在FindParameters的实例中设置操作的各种参数。FindParameters使您能够设置各种选项，包括搜索文本、要搜索的字段等。使用FindParameters对象，FindTask然后针对一个或多个图层和字段执行其任务，然后返回包含与搜索字符串匹配的layerID、layerName和要素的FindResult对象。
- en: 'In this chapter, we will deal with the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涉及以下主题：
- en: Using `IdentifyTask` to get feature attributes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用IdentifyTask获取要素属性
- en: Using `FindTask` to get feature attributes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用FindTask获取要素属性
- en: Using IdentifyTask to get feature attributes
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用IdentifyTask获取要素属性
- en: Attributes from the fields in a layer can be returned to your application using
    `IdentifyTask`. In this section, you will learn how to use the various objects
    associated with `IdentifyTask` to return this information.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IdentifyTask可以返回图层中字段的属性到您的应用程序。在本节中，您将学习如何使用与IdentifyTask相关的各种对象来返回此信息。
- en: Introducing IdentifyTask
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍IdentifyTask
- en: 'As with the other tasks in ArcGIS Server, the `IdentifyTask` functionality
    is separated into three distinct classes in the API including `IdentifyParameters`,
    `IdentifyTask`, and `IdentifyResult`. These three classes are illustrated in the
    following figure:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与ArcGIS Server中的其他任务一样，IdentifyTask功能在API中分为三个不同的类，包括IdentifyParameters，IdentifyTask和IdentifyResult。这三个类如下图所示：
- en: '![Introducing IdentifyTask](graphics/7965OT_07_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![介绍IdentifyTask](graphics/7965OT_07_01.jpg)'
- en: The IdentifyParameters object
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IdentifyParameters对象
- en: The input parameter object for `IdentifyTask` is `IdentifyParameters`. A number
    of properties can be set for your identification operation using the `IdentifyParameters`
    class. Parameters include the geometry used to select features (`IdentifyParameters.geometry`),
    the layer IDs on which to perform the identification (`IdentifyParameters.layerIds`),
    and the tolerance (`IdentifyParameters.tolerance`) from the specified geometry
    within which the identification should be performed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: IdentifyTask的输入参数对象是IdentifyParameters。使用IdentifyParameters类可以为您的识别操作设置多个属性。参数包括用于选择要素的几何（IdentifyParameters.geometry）、要执行识别的图层ID（IdentifyParameters.layerIds）以及在其中执行识别的指定几何的容差（IdentifyParameters.tolerance）。
- en: 'You''ll need to import the identify resource shown as follows before you can
    use the identify functionality provided by ArcGIS Server:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在您可以使用ArcGIS Server提供的识别功能之前，您需要导入如下所示的识别资源。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Before setting the various parameters on the `IdentifyParameters` object, you
    need to first create an instance of this object. This can be done with code shown
    as follows. The code for this constructor doesn''t accept any parameters:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在IdentifyParameters对象上设置各种参数之前，您需要首先创建此对象的实例。可以使用如下所示的代码完成此操作。此构造函数的代码不接受任何参数：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now that you''ve created a new instance of `IdentifyParameters`, you can set
    various properties shown as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经创建了IdentifyParameters的新实例，可以设置如下所示的各种属性：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In most cases, an identification operation is performed using a point that the
    user has clicked on the map. You can obtain this using the point returned from
    the map-click event as seen in the preceding code example. The layers that should
    be searched can be defined using an array of layer IDs, which are passed into
    the `IdentifyParameters.layerIds` property. The array should contain numeric values
    that reference the layers to be searched. You can obtain the layer index numbers
    by consulting the services directory. The tolerance property is especially important.
    It sets the distance in pixels around the geometry. Remember that most of the
    time the geometry will be a point so you can think of this as a circle that is
    placed around the point at whatever tolerance value you have set. The value will
    be in screen pixels. When the `IdentifyTask` attribute is executed, any features
    from the layers to be identified (that are within or intersect the circle) will
    be returned.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，使用用户在地图上单击的点执行识别操作。您可以使用从地图单击事件返回的点来获取这一点，就像在前面的代码示例中所看到的那样。应该搜索的图层可以使用图层ID数组来定义，这些ID被传递到`IdentifyParameters.layerIds`属性中。数组应包含引用要搜索的图层的数值。您可以通过查看服务目录来获取图层索引号。容差属性尤为重要。它设置了几何图形周围的像素距离。请记住，大多数情况下几何图形将是一个点，因此您可以将其视为在您设置的任何容差值周围放置的圆。该值将以屏幕像素为单位。执行`IdentifyTask`属性时，将返回任何在或与圆内的要识别的图层中的要素。
- en: It's likely that you'll need to experiment with this tolerance value to obtain
    a value that is best for your application. If the value is set too low, you run
    the risk of the identify operation not identifying any features and conversely,
    if the value is set too high, you may get too many features returned. It can be
    difficult to find the right balance, and the tolerance value that works for one
    application may not work for another.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要尝试不同的容差值，以获得最适合您的应用程序的值。如果值设置得太低，您可能面临识别操作未识别任何要素的风险，反之，如果值设置得太高，您可能会得到太多的要素返回。找到合适的平衡可能很困难，对一个应用程序有效的容差值可能对另一个应用程序无效。
- en: The IdentifyTask attribute
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`IdentifyTask`属性'
- en: '`IdentifyTask` performs the identify operation on one or more layers using
    the parameters specified in `IdentifyParameters`. As with the other tasks that
    we''ve examined, `IdentifyTask` needs a pointer to a URL that identifies the map
    service to be used in the identify operation.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`IdentifyTask`使用`IdentifyParameters`中指定的参数在一个或多个图层上执行识别操作。与我们已经检查过的其他任务一样，`IdentifyTask`需要一个指向标识要在识别操作中使用的地图服务的URL的指针。'
- en: A new instance of `IdentifyTask` can be created with the following code example.
    The constructor for this task simply accepts a URL that points to the map service
    containing the layer against which an identify operation can be executed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`IdentifyTask`的新实例可以使用以下代码示例创建。该任务的构造函数简单地接受一个指向包含可以执行识别操作的图层的地图服务的URL。'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once you've created a new instance of the `IdentifyTask` object, you can initiate
    the execution of this task through the `IdentifyTask.execute()` method, which
    accepts an `IdentifyParameters` object along with optional `success` callback
    and `error` callback functions. In the following code example, the `IdentifyTask.execute()`
    method is called. An instance of `IdentifyParameters` is passed as a parameter
    into the method, along with a reference to an `addToMap()` method, which will
    process the results that are returned to the method.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了`IdentifyTask`对象的新实例，您可以通过`IdentifyTask.execute()`方法启动执行此任务，该方法接受一个`IdentifyParameters`对象以及可选的`success`回调和`error`回调函数。在以下代码示例中，调用了`IdentifyTask.execute()`方法。将`IdentifyParameters`的实例作为参数传递到该方法中，并引用一个`addToMap()`方法，该方法将处理返回给该方法的结果。
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The results of an identify operation performed with `IdentifyTask` are stored
    in an instance of `IdentifyResult`. We'll examine this result object in the next
    section.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`IdentifyTask`执行的识别操作的结果存储在`IdentifyResult`的实例中。我们将在下一节中检查这个结果对象。
- en: IdentifyResult
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IdentifyResult
- en: 'The result returned by the `IdentifyTask` operation is an array of `IdentifyResult`
    objects. Each `IdentifyResult` object contains the feature returned from the identify
    operation, along with the layer ID and layer name where the feature was found.
    The following code illustrates how an array of `IdentifyResult` objects is processed
    by a callback function:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`IdentifyTask`操作返回的结果是`IdentifyResult`对象的数组。每个`IdentifyResult`对象包含从识别操作返回的要素，以及找到该要素的图层ID和图层名称。以下代码说明了如何通过回调函数处理`IdentifyResult`对象数组：'
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Time to practice – implementing the identify functionality
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习时间-实现标识功能
- en: In this exercise, you will learn how to implement the identify functionality
    in an application. You are going to create a simple application that will display
    attribute information from buildings and land parcels in an info window when the
    user clicks the map. We have prewritten some of the code for you so that you can
    focus on the functionality directly related to the identification of features.
    Before we begin, I'll have you copy and paste the prewritten code into the sandbox.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您将学习如何在应用程序中实现标识功能。您将创建一个简单的应用程序，当用户单击地图时，它将在信息窗口中显示建筑物和土地包裹的属性信息。我们已经为您预先编写了一些代码，这样您就可以专注于与要素识别直接相关的功能。在我们开始之前，我会让您将预先编写的代码复制并粘贴到沙箱中。
- en: 'Perform the following steps to complete the exercise:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成练习：
- en: Open the JavaScript Sandbox at [http://developers.arcgis.com/en/javascript/sandbox/sandbox.html](http://developers.arcgis.com/en/javascript/sandbox/sandbox.html).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[http://developers.arcgis.com/en/javascript/sandbox/sandbox.html](http://developers.arcgis.com/en/javascript/sandbox/sandbox.html)打开JavaScript沙箱。
- en: 'Remove the JavaScript content from the `<script>` tag that I have highlighted
    in the following code snippet:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我在以下代码片段中突出显示的`<script>`标签中删除JavaScript内容：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create the variables that you''ll use in the application:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建您将在应用程序中使用的变量：
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Create the `require()` function that defines the resources you''ll use in this
    application:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`require()`函数，定义您将在此应用程序中使用的资源：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create a new instance of the `Map` object:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`Map`对象的新实例：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create a new dynamic map service layer and add it to the map:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的动态地图服务图层并将其添加到地图中：
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add a `Map.click` event that will trigger the execution of a function, which
    will respond when the map is clicked on:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个`Map.click`事件，将触发执行一个函数，当地图被点击时将会响应：
- en: '[PRE11]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create an `IdentifyTask` object:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`IdentifyTask`对象：
- en: '[PRE12]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create an `IdentifyParameters` object and set various properties:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`IdentifyParameters`对象并设置各种属性：
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create the `executeIdentifyTask()` function, which is the function that responds
    to the `Map.click` event. In a previous step, you had set up the event handler
    for the `Map.click` event. The `executeIdentifyTask()` function was specified
    as the JavaScript function that will handle this event when it occurs. In this
    step, you''ll create this function by adding the code shown as follows. The `executeIdentifyTask()`
    function accepts one parameter, which is an instance of the `Event` object. Each
    event generates an `Event` object, which has various properties. In the case of
    a `Map.click` event, this `Event` object has a property that contains the point
    that was clicked. This can be retrieved with the `Event.mapPoint` property and
    is used when setting the `IdentifyParameters.geometry` property. The `IdentifyTask.execute()`
    method also returns a `Deferred` object. You then add a callback function to this
    `Deferred` object, which parses the results. Add the following code to create
    the `executeIdentifyTask()` function. This function should be created outside
    the `require()` function:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`executeIdentifyTask()`函数，该函数是响应`Map.click`事件的函数。在之前的步骤中，您已经为`Map.click`事件设置了事件处理程序。`executeIdentifyTask()`函数被指定为处理此事件发生时的JavaScript函数。在此步骤中，您将通过添加以下代码来创建此函数。`executeIdentifyTask()`函数接受一个参数，即`Event`对象的实例。每个事件都会生成一个`Event`对象，该对象具有各种属性。在`Map.click`事件的情况下，此`Event`对象具有包含被点击的点的属性。这可以通过`Event.mapPoint`属性检索，并在设置`IdentifyParameters.geometry`属性时使用。`IdentifyTask.execute()`方法还返回一个`Deferred`对象。然后，您将一个回调函数添加到此`Deferred`对象中，该函数解析结果。添加以下代码以创建`executeIdentifyTask()`函数。此函数应该在`require()`函数之外创建：
- en: '[PRE14]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You may want to review the solution file (`identify.html`) in your `ArcGISJavaScriptAPI`
    folder to verify that your code has been written correctly.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能希望查看您的`ArcGISJavaScriptAPI`文件夹中的解决方案文件（`identify.html`），以验证您的代码是否已正确编写。
- en: Execute the code by clicking on the **Run** button and you should see the following
    output if everything has been coded correctly:![Time to practice – implementing
    the identify functionality](graphics/7965OT_07_02.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击**Run**按钮执行代码，如果一切编码正确，您应该看到以下输出：![练习时间-实现识别功能](graphics/7965OT_07_02.jpg)
- en: Using FindTask to get the feature attributes
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`FindTask`获取要素属性
- en: 'You can use `FindTask` to search a map service exposed by the ArcGIS Server
    REST API, based on a string value. The search can be conducted on a single field
    of a single layer, on many fields of a layer, or on many fields of many layers.
    As with the other tasks that we''ve examined, the Find operation is composed of
    three complementary objects including `FindParameters`, `FindTask`, and `FindResult`.
    The `FindParameters` object serves as the input parameter object, which is used
    by `FindTask` to accomplish its work, and `FindResult` contains the results returned
    by the task. Take a look at the following figure:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`FindTask`根据字符串值搜索由ArcGIS Server REST API公开的地图服务。搜索可以在单个图层的单个字段上进行，也可以在图层的多个字段上进行，或者在多个图层的多个字段上进行。与我们已经检查过的其他任务一样，查找操作由三个互补的对象组成，包括`FindParameters`、`FindTask`和`FindResult`。`FindParameters`对象充当输入参数对象，由`FindTask`用于完成其工作，而`FindResult`包含任务返回的结果。看一下以下图：
- en: '![Using FindTask to get the feature attributes](graphics/7965OT_07_03.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![使用`FindTask`获取要素属性](graphics/7965OT_07_03.jpg)'
- en: FindParameters
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FindParameters
- en: The `FindParameters` object is used to specify the search criteria for a Find
    operation and includes a `searchText` property that includes the text that will
    be searched for along with properties that specify the fields and layers that
    will be searched. In addition to this, setting the `returnGeometry` property to
    `true` indicates that you want to return the geometry of the features that matched
    the Find operation, and can be used to highlight the results.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`FindParameters`对象用于指定查找操作的搜索条件，并包括一个`searchText`属性，其中包括将要搜索的文本，以及指定要搜索的字段和图层的属性。除此之外，将`returnGeometry`属性设置为`true`表示您希望返回与查找操作匹配的要素的几何，并可用于突出显示结果。'
- en: The following code example shows how to create a new instance of `FindParameters`
    and assign various attributes. Before using any of the objects associated with
    a Find operation, you'll need to import the `esri/tasks/find resource`. The `searchText`
    property defines the string value that will be used in the search across fields,
    defined in the `searchFields` property. The layers that will be searched are defined
    through an array of index numbers assigned to the `layerIds` property. The index
    numbers correspond to the layers in the map service. The `geometry` property defines
    whether the geometric definition of a feature should be returned in the results.
    There may be times when you don't need the feature geometry, such as when the
    attributes simply need to be populated inside a table. In such a case, you would
    set the `geometry` property to `false`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码示例显示了如何创建`FindParameters`的新实例并分配各种属性。在使用与查找操作相关的任何对象之前，您需要导入`esri/tasks/find
    resource`。`searchText`属性定义了将在字段之间搜索的字符串值，该字段在`searchFields`属性中定义。将要搜索的图层通过分配给`layerIds`属性的索引号数组来定义。索引号对应于地图服务中的图层。`geometry`属性定义了是否应在结果中返回要素的几何定义。有时您可能不需要要素的几何，例如当属性只需在表内填充时。在这种情况下，您将把`geometry`属性设置为`false`。
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You can use the `contains` property to determine whether to look for an exact
    match of the search text or not. If it is set to `true`, it searches for a value
    that contains the `searchText` property. This is a case-insensitive search. If
    it is set to `false`, it searches for an exact match of the `searchText` string.
    The exact match is case-sensitive.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`contains`属性来确定是否要查找搜索文本的精确匹配。如果设置为`true`，它将搜索包含`searchText`属性的值。这是一个不区分大小写的搜索。如果设置为`false`，它将搜索`searchText`字符串的精确匹配。精确匹配是区分大小写的。
- en: FindTask
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FindTask
- en: '`FindTask`, illustrated in the preceding figure, executes a Find operation
    against the layers and fields specified in `FindParameters` and returns a `FindResult`
    object, which contains the records that were found. Take a look at the following
    code snippet:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`FindTask`在上图中执行了对`FindParameters`中指定的图层和字段进行查找操作，并返回一个`FindResult`对象，其中包含找到的记录。看一下以下代码片段：'
- en: '[PRE16]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Just as with `QueryTask`, you must specify a URL pointer to the map service
    that will be used in the Find operation, but you do not need to include an integer
    value specifying the exact data layer to be used. This is not necessary because
    the layers and fields to be used in the Find operation are defined in the `FindParameters`
    object. Once created, you can then call the `FindTask.execute()` method to initiate
    the Find operation. The `FindParameters` object is passed into this method as
    the first parameter, and you can also define optional `success` and `error` callback
    functions. This is shown in the preceding code example. The `success` callback
    function passes an instance of `FindResults`, which contains the results of the
    Find operation.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 就像`QueryTask`一样，您必须指定一个指向将在查找操作中使用的地图服务的URL指针，但您不需要包括指定要使用的确切数据图层的整数值。这是不必要的，因为在`FindParameters`对象中定义了要在查找操作中使用的图层和字段。创建后，您可以调用`FindTask.execute()`方法来启动查找操作。`FindParameters`对象作为第一个参数传递到此方法中，您还可以定义可选的`success`和`error`回调函数。这在上面的代码示例中显示。`success`回调函数传递了一个`FindResults`的实例，其中包含了查找操作的结果。
- en: FindResult
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FindResult
- en: '`FindResult` contains the results of a `FindTask` operation and also contains
    features that can be represented as graphics, layer IDs and names where the feature
    was found, and the field name that contains the search string. Take a look at
    the following code snippet:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`FindResult`包含`FindTask`操作的结果，还包含可以表示为图形的要素，找到要素的图层ID和名称，以及包含搜索字符串的字段名称。看一下以下代码片段：'
- en: '[PRE17]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Summary
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'The return of attributes associated with features is one of the most common
    operations in GIS. ArcGIS Server has two tasks that can return attributes: `IdentifyTask`
    and `FindTask`. The `IdentifyTask` attribute is used to return the attributes
    of a feature that has been clicked on the map. `FindTask` also returns attributes
    of a feature but uses a simple attribute query to return the attributes. In this
    chapter, you learned how to use both tasks using the ArcGIS API for JavaScript.
    In the next chapter, you will learn how to perform geocoding and reverse geocoding
    using a `Locator` task.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 与要素相关的属性的返回是GIS中最常见的操作之一。ArcGIS Server有两个可以返回属性的任务：`IdentifyTask`和`FindTask`。`IdentifyTask`属性用于返回在地图上单击的要素的属性。`FindTask`也返回要素的属性，但使用简单的属性查询来返回属性。在本章中，您学习了如何使用ArcGIS
    API for JavaScript来使用这两个任务。在下一章中，您将学习如何使用`Locator`任务执行地理编码和反向地理编码。
