- en: '*Chapter 3*: Working with Cypress Command-Line Tools'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第3章*：使用Cypress命令行工具'
- en: In the previous chapter, we learned how Cypress differs from other test automation
    tools such as Selenium and how it stands out when it comes to web automation testing.
    In this chapter, we will build on our knowledge of using Cypress using command-line
    tools. To do this, we will cover commands that you can use to make use of Cypress'
    functionality.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了Cypress与Selenium等其他测试自动化工具的不同之处，以及在Web自动化测试方面的突出表现。在本章中，我们将继续使用Cypress命令行工具来构建我们对Cypress的使用知识。为此，我们将介绍您可以使用的命令，以利用Cypress的功能。
- en: Some of the commands will involve functions such as running individual or all
    tests, debugging Cypress, and launching Cypress tests on different browsers, among
    other Cypress command-line functions. We will be referencing the GitHub repository
    folder for this chapter, and every command and piece of code that will be written
    will be included in the repository for your reference and practice.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些命令将涉及功能，如运行单个或所有测试，调试Cypress，在不同浏览器上启动Cypress测试，以及其他Cypress命令行功能。我们将参考本章的GitHub存储库文件夹，并将为您的参考和练习包括在存储库中编写的每个命令和代码。
- en: 'We will cover the following key topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下关键主题：
- en: Running Cypress commands
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行Cypress命令
- en: Understanding basic Cypress commands
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解基本的Cypress命令
- en: Cypress debugging on the command line
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cypress在命令行上调试
- en: Once you've worked through each of these topics, you will be ready to write
    your first test.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了每个主题，您将准备好编写您的第一个测试。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术要求
- en: The GitHub repository for this chapter can be found at [https://github.com/PacktPublishing/End-to-End-Web-Testing-with-Cypress](https://github.com/PacktPublishing/End-to-End-Web-Testing-with-Cypress).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的GitHub存储库可以在[https://github.com/PacktPublishing/End-to-End-Web-Testing-with-Cypress](https://github.com/PacktPublishing/End-to-End-Web-Testing-with-Cypress)找到。
- en: The source code for this chapter can be found in the `chapter-03` directory.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可以在`chapter-03`目录中找到。
- en: To run the examples in this chapter, you will need to clone this book's GitHub
    repository and follow the `READMe.md` file's instructions on how to properly set
    up and run the tests. You can read more about how to use GitHub to clone projects
    on your local machine at [https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository](mailto:https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行本章中的示例，您需要克隆本书的GitHub存储库，并按照`READMe.md`文件中的说明正确设置和运行测试。您可以在[https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository](mailto:https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository)上阅读有关如何使用GitHub在本地机器上克隆项目的更多信息。
- en: Running Cypress commands
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行Cypress命令
- en: Effective utilization of the Cypress framework requires you to have an understanding
    of Cypress and how different functionalities can be run using the command line.
    Cypress commands allow the users of the Cypress framework to automate processes,
    and also to provide specific instructions to the framework and to the tests during
    initialization and runtime.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有效利用Cypress框架需要您了解Cypress以及如何使用命令行运行不同功能。Cypress命令允许Cypress框架的用户自动化流程，并在初始化和运行时向框架和测试提供特定指令。
- en: In most instances, running Cypress tests through the command line is quicker
    than running them using the browser. This is because running tests through the
    command line reduces the number of resources required to run a specific test.
    The reason for this is that tests that run in the command line are normally headless,
    which means less resources are allocated to run the tests, which is not the same
    for test execution in headed mode.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，通过命令行运行Cypress测试比使用浏览器运行测试更快。这是因为通过命令行运行测试可以减少运行特定测试所需的资源数量。原因是在命令行中运行的测试通常是无头的，这意味着分配给运行测试的资源较少，而在有头模式下执行测试则不同。
- en: Important note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Headed mode is when tests can be visually seen running on a browser, while in
    headless mode, the test execution process does not open a visible browser. Instead,
    all the tests are run and output on the command line.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 有头模式是指测试可以在浏览器上可视化运行，而无头模式是指测试执行过程不会打开可见的浏览器。相反，所有测试都在命令行上运行并输出。
- en: First, let's look at how to run global and local Cypress commands.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看如何运行全局和本地的Cypress命令。
- en: Global and local commands
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 全局和本地命令
- en: Cypress commands can either be run from a specific directory containing a Cypress
    installation and code, or run from the global Cypress installation. Globally installing
    Cypress ensures that users can run Cypress from any directory in the operating
    system, while with a local Cypress installation, Cypress can only be accessed
    from the single directory that it has been installed in.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress命令可以从包含Cypress安装和代码的特定目录中运行，也可以从全局Cypress安装中运行。全局安装Cypress可确保用户可以从操作系统中的任何目录运行Cypress，而使用本地Cypress安装，Cypress只能从安装的单个目录中访问。
- en: Running global Cypress commands
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行全局Cypress命令
- en: 'Global commands in Cypress are run by accessing the globally installed version
    of Cypress. The commands that are invoked when running the global version of Cypress
    are not necessarily generated or defined by the user since they are built into
    the framework. To be able to run Cypress commands globally, you need to install
    Cypress globally with the following command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Cypress中，全局命令是通过访问全局安装的Cypress版本来运行的。运行全局版本的Cypress时调用的命令不一定是用户生成或定义的，因为它们内置在框架中。要能够全局运行Cypress命令，您需要使用以下命令全局安装Cypress：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding command will install Cypress globally and ensure that invoking
    any known Cypress command from any Cypress installation directory will yield a
    result or an error, depending on the execution of the provided command.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将全局安装Cypress，并确保从任何Cypress安装目录调用任何已知的Cypress命令都会产生结果或错误，具体取决于提供的命令的执行情况。
- en: To run a global command, you need to define the command using the `cypress`
    keyword, then the command; for example, `cypress run` or `cypress open`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行全局命令，您需要使用`cypress`关键字定义命令，然后是命令；例如，`cypress run`或`cypress open`。
- en: Running local Cypress commands
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本地运行Cypress命令
- en: 'Local Cypress commands are derived from Cypress global commands and are an
    alternative to running commands globally. To run Cypress commands locally, you
    will need to install Cypress in your directory with the following command:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本地Cypress命令源自Cypress全局命令，并且是运行命令的另一种选择。要在本地运行Cypress命令，您需要使用以下命令在您的目录中安装Cypress：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can integrate the required commands into the development environment by
    defining them in the `package.json` file, under the `scripts` section, as shown
    here:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在`package.json`文件的`scripts`部分中定义所需的命令来将其集成到开发环境中，如下所示：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Adding commands to `package.json` allows us to use these commands in the same
    way we would execute npm commands for JavaScript packages. The commands defined
    in the `package.json` file are interpreted by the Node.js environment at runtime
    and when executed, they are executed as if the commands are global commands.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 将命令添加到`package.json`中允许我们以与执行JavaScript包的npm命令相同的方式使用这些命令。`package.json`文件中定义的命令在运行时由Node.js环境解释，并且在执行时，它们会被执行为全局命令。
- en: Important note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It is recommended that you run the `npm init` command in a Terminal before running
    the `npm install cypress` command. If Cypress is run without a project being initialized,
    Cypress' directories will not be visible. By running the `init` command, cypress
    recognizes the project directory as an existing project, so it initializes and
    creates its directories without us needing to run additional commands on the Terminal.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 建议在运行`npm install cypress`命令之前在终端中运行`npm init`命令。如果在未初始化项目的情况下运行Cypress，Cypress的目录将不可见。通过运行`init`命令，Cypress将识别项目目录为现有项目，因此它会初始化并创建其目录，而无需我们在终端上运行额外的命令。
- en: Defining commands in `package.json` not only makes it easier for developers
    and QA engineers to know which commands to run, but it also simplifies the nature
    of the commands that a person needs to run when running, debugging, or maintaining
    their tests.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在`package.json`中定义命令不仅使开发人员和质量保证工程师更容易知道要运行哪些命令，而且简化了运行、调试或维护测试时需要运行的命令的性质。
- en: Important note
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The Cypress development team recommends installing Cypress per project and not
    using the global installation approach. The local installation provides certain
    advantages, such as users having the ability to quickly update the Cypress dependency
    and reducing the Cyclic dependency problems that would break some tests in a different
    project, while Cypress runs fine in another project.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress开发团队建议按项目安装Cypress，而不是使用全局安装方法。本地安装提供了某些优势，例如用户能够快速更新Cypress依赖项，并减少循环依赖问题，这些问题会在不同项目中破坏一些测试，而Cypress在另一个项目中运行良好。
- en: 'To run scripts in the command line, you need to invoke `npm run`, followed
    by the command''s name. In the commands we defined previously, you would simply
    need to run the following to execute the commands simultaneously:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要在命令行中运行脚本，您需要调用`npm run`，然后是命令的名称。在我们之前定义的命令中，您只需要运行以下命令来同时执行这些命令：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Time for a quick recap.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候快速回顾一下了。
- en: Recap – running Cypress commands
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回顾-运行Cypress命令
- en: In this section, we learned how to invoke either local or global commands, as
    well as how to run tests from the Cypress Terminal or the test runner, which utilizes
    a graphical user interface. In the next section, we build on the knowledge we
    have garnered of running Cypress commands to understand how different commands
    are utilized within Cypress.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何调用本地或全局命令，以及如何从Cypress终端或测试运行程序中运行测试，后者利用了图形用户界面。在接下来的部分中，我们将在已经获得的运行Cypress命令的知识基础上，了解如何在Cypress中使用不同的命令。
- en: Understanding basic Cypress commands
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解基本的Cypress命令
- en: 'In this section, we will explore various Cypress commands that we can use to
    run our tests either via the Terminal or using the Cypress test runner. We will
    also observe how the commands can be used to achieve different results. This section
    will also introduce us to customizing different tests that interact with our applications
    to achieve specific results. We will dive into the most common Cypress commands
    and how they can be extended with options that come pre-built into the Cypress
    framework. The commands we will explore are as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨各种Cypress命令，我们可以使用这些命令通过终端或使用Cypress测试运行程序来运行我们的测试。我们还将观察这些命令如何用于实现不同的结果。本节还将介绍如何定制与我们的应用程序交互的不同测试，以实现特定的结果。我们将深入了解最常见的Cypress命令以及如何使用Cypress框架中预先构建的选项来扩展这些命令。我们将探讨的命令如下：
- en: '`cypress run`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cypress run`'
- en: '`cypress open`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cypress open`'
- en: '`cypress info`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cypress info`'
- en: '`cypress version`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cypress version`'
- en: Let's start with `cypress run`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从`cypress run`开始。
- en: cypress run
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: cypress run
- en: 'The `cypress run` command executes all the tests in a Cypress suite in a headless
    manner, and runs the tests in the Electron browser by default. If it''s not extended
    with any other configurations, the command will run all the files in `.spec.js`
    format in the `integration` folder of Cypress. The `Cypress run` commands can
    be run with the following configuration options:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`cypress run`命令以无头方式执行Cypress套件中的所有测试，并默认在Electron浏览器中运行测试。如果没有使用其他配置扩展，该命令将运行Cypress的`integration`文件夹中所有`.spec.js`格式的文件。`Cypress
    run`命令可以使用以下配置选项运行：'
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The most common Cypress configuration options include the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的Cypress配置选项包括以下内容：
- en: '![](image/Table_3.1.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](image/Table_3.1.jpg)'
- en: The next few sections will expand on each configuration option shown in the
    preceding table.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几节将扩展前面表格中显示的每个配置选项。
- en: cypress run --env <env-variable>
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress run --env <env-variable>
- en: Cypress environment variables are *dynamic name-value pairs* that influence
    the way Cypress executes tests. These environment variables are useful when there
    is a need to run the tests in multiple environments, or when the values defined
    are prone to quickly changing.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress环境变量是*动态名称-值对*，影响Cypress执行测试的方式。当需要在多个环境中运行测试，或者定义的值容易快速更改时，这些环境变量非常有用。
- en: In Cypress, you can define single or multiple environment variables either as
    strings or JSON objects.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在Cypress中，您可以将单个或多个环境变量定义为字符串或JSON对象。
- en: In this section, we will write tests for an open source **todoMVC** application.
    The code base for these tests can be found in the `chapter 03` directory, in the
    GitHub repository for this book. The application under test is a **To-do list**
    application that's been developed in React. Using the application, we can add
    our todo items, mark them as completed, delete them, view completed items, and
    even toggle between the *active*, *all*, and *completed* todo items.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为一个开源的**todoMVC**应用程序编写测试。这些测试的代码基础可以在本书的GitHub存储库中的`chapter 03`目录中找到。被测试的应用程序是一个使用React开发的**待办事项列表**应用程序。使用该应用程序，我们可以添加待办事项，标记为已完成，删除它们，查看已完成的项目，甚至在*活动*、*全部*和*已完成*待办事项之间切换。
- en: Using this application, we may have plans to extend the application to serve
    a secure version of the application using **HTTPS** instead of the current **HTTP**
    protocol. Even though the functionality for HTTPS is not currently supported,
    we can add provisions for it using our environment variables in the Cypress tests.
    To achieve this, we will define the **Transfer protocol** URL portion as an environment
    variable, then pass this to our commands in `package.json`, as shown in the following
    examples.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用该应用程序，我们可能计划扩展应用程序以使用**HTTPS**而不是当前的**HTTP**协议。即使目前不支持HTTPS功能，我们可以在Cypress测试中添加对其的支持。为此，我们将把**传输协议**URL部分定义为环境变量，然后将其传递给`package.json`中的命令，如下例所示。
- en: The following code snippets can be found in the GitHub repository mentioned
    in the subfolder in `chapter 03`. The full source code for the `Todo-app.spec.js`
    file is located under the `Cypress/integration/examples` folder. The Cypress tests
    we will be exploring in this chapter are the version 1 tests.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段可以在`chapter 03`的子文件夹中提到的GitHub存储库中找到。`Todo-app.spec.js`文件的完整源代码位于`Cypress/integration/examples`文件夹下。我们将在本章中探讨的Cypress测试是版本1的测试。
- en: 'The following `Todo-app.spec.js` file demonstrates how to use environment variables
    when navigating to a URL. It is the main test file and is located in `chapter-03/cypress/integration/examples/todo-app.spec.js`
    in this book''s GitHub repository:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的`Todo-app.spec.js`文件演示了在导航到URL时如何使用环境变量。它是主要的测试文件，位于本书的GitHub存储库中的`chapter-03/cypress/integration/examples/todo-app.spec.js`中。
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following `package.json` file is also located in the `chapter-03/` directory
    and holds all the commands that are used to execute the testing or execution commands
    of the JavaScript application. It is located in the root location of the `chapter-03/`
    directory:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的`package.json`文件也位于`chapter-03/`目录中，包含了用于执行JavaScript应用程序的测试或执行命令的所有命令。它位于`chapter-03/`目录的根位置：
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The preceding script demonstrates that in the event of a change occurring in
    the URL protocol, we can run any of the aforementioned test commands to replace
    the environment variable we declared in the URL when we are running our Cypress
    tests. We can execute the preceding scripts with `npm run cypress:run` and `npm
    run cypress:run:v2` consecutively.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 上述脚本表明，如果URL协议发生变化，我们可以运行前述任何测试命令来替换我们在运行Cypress测试时声明的环境变量。我们可以依次执行前述脚本，使用`npm
    run cypress:run`和`npm run cypress:run:v2`。
- en: Important note
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: HTTPS is the same as HTTP, with the difference being that HTTPS is more secure.
    This is because the process of sending requests and receiving responses is encrypted
    using the TLS(SSL) security protocol.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: HTTPS与HTTP相同，不同之处在于HTTPS更安全。这是因为发送请求和接收响应的过程使用TLS(SSL)安全协议进行加密。
- en: The transfer protocol is the portion of the URL that determines whether the
    URL uses the HTTP or HTTPS protocol. A URL using the HTTP protocol begins with
    `http://`, while one that uses HTTPS begins with `https://`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 传输协议是URL的一部分，它确定URL是否使用HTTP或HTTPS协议。使用HTTP协议的URL以`http://`开头，而使用HTTPS的URL以`https://`开头。
- en: cypress run --browser <browser-name>
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress run --browser <browser-name>
- en: The Cypress command line has the built-in capability to run Cypress tests in
    different browsers that have been installed on the host computer, and that are
    supported by the Cypress framework. Cypress tries to automatically detect the
    installed browsers and can run the tests in either `chrome`, `chromium`, `edge`,
    `firefox`, or `electron`. To run tests in a specific browser, you will need to
    supply the browser name using the `--browser` configuration option. You can also
    choose to supply the browser path instead of the browser name; Cypress will still
    run the tests in the supplied browser path, as long as it is valid and supported
    by Cypress.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress命令行具有内置功能，可以在主机计算机上安装的不同浏览器中运行Cypress测试，并且这些浏览器受Cypress框架支持。Cypress会尝试自动检测已安装的浏览器，并可以在`chrome`、`chromium`、`edge`、`firefox`或`electron`中运行测试。要在特定浏览器中运行测试，您需要使用`--browser`配置选项提供浏览器名称。您还可以选择提供浏览器路径而不是浏览器名称；只要它是有效的并且受Cypress支持，Cypress仍然会在提供的浏览器路径中运行测试。
- en: 'The following code snippet shows scripts that have been defined in the `scripts`
    section of `package.json` in the `chapter-03` directory of this book''s GitHub
    repository. The scripts define the browsers that our tests will run in and also
    pass in an environment variable for a part of the URL:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段显示了在本书GitHub存储库的`chapter-03`目录中的`package.json`的`scripts`部分中定义的脚本。这些脚本定义了我们的测试将在其中运行的浏览器，并且还传递了URL的一部分作为环境变量：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the preceding commands, we can run our tests in either Chrome or Firefox
    using the `npm run cypress:chrome` and `npm run cypress:firefox` commands, respectively.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，我们可以使用`npm run cypress:chrome`和`npm run cypress:firefox`命令在Chrome或Firefox中运行测试。
- en: Important note
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: To run tests in a specific browser, the browser must be installed on your machine
    and it must also be among the list of Cypress supported browsers.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要在特定浏览器中运行测试，该浏览器必须安装在您的计算机上，并且还必须是Cypress支持的浏览器列表中的一员。
- en: Cypress run --config <configuration(s)-option>
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cypress run --config <configuration(s)-option>
- en: Cypress can set and override configurations using commands running on the terminal.
    Cypress' configuration can either be passed as a single value, as multiple values
    separated by commas, or as a stringified JSON object. Any defined configuration
    in Cypress can be changed or modified by the `cypress run --config` configuration
    option. Configuration options may include specifying an alternative `viewportHeight`
    and `ViewportWidth`, timeouts, and file changes, among other configurations. In
    our script, we will change the viewport that Cypress runs our tests on, and instead
    of the default viewport, which is 1000x660, we will run our tests in the tablet
    viewport of 763x700.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress可以使用在终端上运行的命令设置和覆盖配置。Cypress的配置可以作为单个值、以逗号分隔的多个值，或作为字符串化的JSON对象传递。Cypress中的任何定义的配置都可以通过`cypress
    run --config`配置选项进行更改或修改。配置选项可能包括指定替代的`viewportHeight`和`ViewportWidth`、超时和文件更改等其他配置。在我们的脚本中，我们将更改Cypress运行测试的视口，而不是默认的视口，即1000x660，我们将在平板视口的763x700上运行测试。
- en: 'The following code snippet is defined in the `package.json` file of our `chapter-03`
    root directory. The following script is used to run tests in a tablet viewport.
    To do this, you must override the Cypress default configuration for the viewport''s
    height and width:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段在我们的`chapter-03`根目录的`package.json`文件中定义。以下脚本用于在平板视图中运行测试。为此，您必须覆盖Cypress默认配置的视口高度和宽度：
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The previous script can be run with the `npm run cypress:tablet-view` command.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的脚本可以使用`npm run cypress:tablet-view`命令运行。
- en: Important Note
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When passing more than one configuration option in Cypress, leave no spaces
    between the comma-separated values for the different configurations (as shown
    in the preceding code); otherwise, Cypress will throw an error.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在Cypress中传递多个配置选项时，不要在不同配置的逗号分隔值之间留下空格（如上面的代码所示）；否则，Cypress会抛出错误。
- en: cypress run --config-file <configuration-file>
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress run --config-file <configuration-file>
- en: Cypress can override the default configuration file located at `/cypressRootDirectory/cypress.json`.
    You can define one or more secondary Cypress configuration files in order to run
    their tests. Cypress also allows you to entirely disable the use of a configuration
    file.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress可以覆盖位于`/cypressRootDirectory/cypress.json`的默认配置文件。您可以定义一个或多个次要的Cypress配置文件以运行它们的测试。Cypress还允许您完全禁用使用配置文件。
- en: 'The following script, which is located in `package.json` in the root directory
    of our `chapter-03` directory, is a command that enables Cypress to override the
    configuration file that it uses to run the tests. When the command is executed,
    rather than using the default `cypress.json` file located in `chapter-03`, it
    will use the `cypress-config.json` file, which is located under `chapter-03/config/cypress-config.json`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的脚本位于本书GitHub存储库的`chapter-03`目录中的`package.json`中，这是一个命令，使Cypress能够覆盖用于运行测试的配置文件。执行该命令时，将使用位于`chapter-03/config/cypress-config.json`下的`cypress-config.json`文件，而不是使用位于`chapter-03`中的默认`cypress.json`文件：
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To run the preceding script, you will need to run the `npm run cypress:run:secondary-configuraton`
    command, which will run the tests with the configuration file located at `/cypressRootDirectory/config/cypress-config.json`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述脚本，您需要运行`npm run cypress:run:secondary-configuraton`命令，该命令将使用位于`/cypressRootDirectory/config/cypress-config.json`的配置文件运行测试。
- en: cypress run --headed
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress run --headed
- en: Cypress provides a command that allows you to run browsers in both headless
    and headed mode. When headed mode is defined, the tests open a browser when they
    are run. This option can be used in the default Electron browser that Cypress
    comes bundled with. The default mode for running Cypress tests using the `run`
    command in Electron is headless, and to override this, we need to pass the `--headed`
    configuration when the tests are running.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress提供了一个命令，允许您以无头和有头模式运行浏览器。当定义有头模式时，测试在运行时会打开浏览器。此选项可以在Cypress捆绑的默认Electron浏览器中使用。在Electron中使用`run`命令运行Cypress测试的默认模式是无头模式，要覆盖这一点，我们需要在运行测试时传递`--headed`配置。
- en: 'The following script can be found in the `package.json` file, which is located
    in the `chapter-03` directory of this book''s GitHub repository. Running the following
    script command will enable Cypress to be run in headed mode, which allows tests
    being run to be visible on the browser:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的脚本可以在本书GitHub存储库的`chapter-03`目录中的`package.json`文件中找到。运行以下脚本命令将使Cypress以有头模式运行，允许在浏览器上看到运行的测试：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The previous script can be run with the `npm run cypress:electron:headed` command.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的脚本可以使用`npm run cypress:electron:headed`命令运行。
- en: cypress run --headless
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress run --headless
- en: Cypress runs tests in both Chrome and Firefox browsers in headed mode, and this
    launches a browser every time the tests are run. To change this behavior and ensure
    that test runs occur without launching a browser, you need to configure the commands
    running either the Chrome or Firefox browser so that they run headlessly.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress 在 Chrome 和 Firefox 浏览器中以有头模式运行测试，并且每次运行测试时都会启动一个浏览器。要更改此行为并确保测试在不启动浏览器的情况下运行，您需要配置运行
    Chrome 或 Firefox 浏览器的命令，以便它们以无头模式运行。
- en: 'The following script can be found in the `package.json` file, which is located
    in the `chapter-03` directory of this book''s GitHub repository. Running the following
    command will enable Cypress to run in headless mode, where the test commands can
    only be seen running on the command-line interface:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下脚本位于本书 GitHub 仓库的 `chapter-03` 目录中的 `package.json` 文件中。运行以下命令将使 Cypress 以无头模式运行，测试命令只能在命令行界面上看到：
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To run Chrome in headless mode using the preceding commands, you will need to
    run `npm run cypress:chrome:headless`. To run the commands in headless mode in
    Firefox, you will need to run the `npm run cypress:firefox:headless` command.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述命令以无头模式运行 Chrome，您需要运行 `npm run cypress:chrome:headless`。要在 Firefox 中以无头模式运行命令，您需要运行
    `npm run cypress:firefox:headless` 命令。
- en: cypress run --spec <spec-file>
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress run --spec <spec-file>
- en: Cypress allows us to specify the different test files that can be run. With
    this command, it is possible to specify a *single* test file to be run in a directory,
    instead of running *all* the test files in a directory. It is also possible to
    specify different tests in different directories so that they run simultaneously,
    and to specify a regex pattern that matches a specific directory.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress 允许我们指定可以运行的不同测试文件。使用此命令，可以指定在目录中运行 *单个* 测试文件，而不是在目录中运行 *所有* 测试文件。还可以指定不同目录中的不同测试，以便它们同时运行，并指定与特定目录匹配的正则表达式模式。
- en: 'The following code snippet is part of the `package.json` file, which is located
    in the `chapter-03` directory of this book''s GitHub repository. The first script
    can only run a specific file in a directory, while the second script can run multiple
    files within a single directory:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段是 `package.json` 文件的一部分，位于本书 GitHub 仓库的 `chapter-03` 目录中。第一个脚本只能运行目录中的特定文件，而第二个脚本可以运行单个目录中的多个文件：
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The first command specifies that the test will run the `todo-app.spec.js` file,
    which is located in the `integration-v2` folder. The second command will run all
    the test files that are located in the `integration-v2` folder.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令指定将运行位于 `integration-v2` 文件夹中的 `todo-app.spec.js` 文件的测试。第二个命令将运行位于 `integration-v2`
    文件夹中的所有测试文件。
- en: cypress open
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: cypress open
- en: 'The `cypress open` command runs Cypress tests in a test runner, with the configuration
    options being applied to the tests of the project that you are running. The configuration
    options that are passed when you''re running the `cypress open` command also override
    the specified defaults in the `cypress.json` file, which is located in the `tests
    root` folder, if configurations are specified when the tests are running. The
    following command shows how to run any `cypress open` commands:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`cypress open` 命令在测试运行器中运行 Cypress 测试，并将配置选项应用于您正在运行的项目的测试。当运行 `cypress open`
    命令时传递的配置选项也会覆盖 `cypress.json` 文件中指定的默认值，该文件位于 `tests root` 文件夹中，如果在运行测试时指定了配置。以下命令显示如何运行任何
    `cypress open` 命令：'
- en: '[PRE13]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The first part of the command shows the `cypress open` command, while the second
    part shows the configuration options that can be chained with it.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的第一部分显示了 `cypress open` 命令，而第二部分显示了可以与其链接的配置选项。
- en: 'The most common Cypress configuration options include the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的 Cypress 配置选项包括以下内容：
- en: '![](image/Table_3.2.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](image/Table_3.2.jpg)'
- en: We will look at each option in detail in the next few sections.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的几节中详细介绍每个选项。
- en: cypress open --env <env-variable(s)>
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --env <env-variable(s)>
- en: Just like running the `cypress run` commands, the `cypress open` command can
    be run with specified environment variables that are declared when the tests are
    running. Similar to the `cypress run` command, it is possible to declare one or
    multiple environment variables using the `--env` configuration option when running
    the tests in the test runner.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 就像运行 `cypress run` 命令一样，`cypress open` 命令可以在运行测试时使用指定的环境变量运行。与 `cypress run`
    命令类似，可以使用 `--env` 配置选项声明一个或多个环境变量来运行测试运行器中的测试。
- en: In the previous section, we specified how we can run tests via the command line
    by passing an environment variable in the `cypress run` command. We will pass
    the same environment variable to run the tests using our Cypress test runner,
    and the tests should run okay. The environment variable that's passed will determine
    whether the transfer protocol of the **todoMVC** application URL is **HTTP** or
    the secure **HTTPS**.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们指定了如何通过在 `cypress run` 命令中传递环境变量来通过命令行运行测试。我们将传递相同的环境变量来使用我们的 Cypress
    测试运行器运行测试，并且测试应该正常运行。传递的环境变量将确定 **todoMVC** 应用程序 URL 的传输协议是 **HTTP** 还是安全的 **HTTPS**。
- en: 'The following code snippet is located in the `Todo-app.spec.js` file, which
    is the main test file in our `chapter-03/` directory. The `todo-app.spec.js` file
    can be found under `integration/examples` in the `chapter-03/` directory. In the
    following snippet, just like in `cypress run`, we can pass environment variables
    to the URL using the `cypress open` command:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段位于 `Todo-app.spec.js` 文件中，该文件是我们 `chapter-03/` 目录中的主要测试文件。`todo-app.spec.js`
    文件位于 `chapter-03/` 目录中的 `integration/examples` 下。在以下代码片段中，就像在 `cypress run` 中一样，我们可以使用
    `cypress open` 命令将环境变量传递给 URL：
- en: '[PRE14]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following code snippet is located in the `chapter-03/` root directory in
    the `package.json` file. Using this snippet, we pass the `''http''` environment
    variable to our tests. This is when we can complete our URL and execute our tests:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段位于本书 GitHub 仓库的 `chapter-03/` 根目录中的 `package.json` 文件中。使用此片段，我们将 `'http'`
    环境变量传递给我们的测试。这是我们可以完成我们的 URL 并执行我们的测试的时候：
- en: '[PRE15]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To open the test runner and verify that the tests run, you can run `npm run
    cypress:open`, which should automatically add the **TransferProtocol** environment
    variable to the running tests' configuration.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开测试运行器并验证测试运行，您可以运行`npm run cypress:open`，这应该会自动将**TransferProtocol**环境变量添加到运行测试的配置中。
- en: cypress open --browser </path/to/browser>
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --browser </path/to/browser>
- en: When specified, the `--browser` option points to a custom browser that will
    be added to the list of available browsers in the test runner. The browser to
    be added must be supported by Cypress and must be installed on the machine that
    is running the Cypress tests.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定时，`--browser`选项指向一个自定义浏览器，该浏览器将被添加到测试运行器中的可用浏览器列表中。要添加的浏览器必须得到Cypress的支持，并且必须安装在运行Cypress测试的计算机上。
- en: 'By default, all the available browsers can be viewed in Cypress by clicking
    on the browser selection button in the test runner, before selecting the spec
    to run. The browser selection dropdown contains all the browsers that have been
    installed on the system and are supported by Cypress. The browser selection dropdown
    also allows you to switch the test browsers, and therefore test the functionality
    under different browsers:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，在选择要运行的规范之前，可以通过单击测试运行器中的浏览器选择按钮来查看Cypress中的所有可用浏览器。浏览器选择下拉菜单包含已在系统上安装并得到Cypress支持的所有浏览器。浏览器选择下拉菜单还允许您切换测试浏览器，从而在不同的浏览器下测试功能：
- en: '![Figure 3.1 – Test browser selection dropdown'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.1 - 测试浏览器选择下拉菜单'
- en: '](image/Chapter_3_Image01.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Chapter_3_Image01.jpg)'
- en: Figure 3.1 – Test browser selection dropdown
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 - 测试浏览器选择下拉菜单
- en: To specify a path so that the browser can be added (for example, Chromium),
    you need to have the following configuration to add Chromium to the list of available
    browsers. Here, you need to run the `npm run cypress:chromium` command.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要指定路径以便添加浏览器（例如Chromium），您需要具有以下配置以将Chromium添加到可用浏览器列表中。在这里，您需要运行`npm run cypress:chromium`命令。
- en: 'The following script is located in the `chapter-03/` directory under the `package.json`
    file in this book''s GitHub repository. When the script is executed as a command,
    it will look for a browser in the specified location and add it to the list of
    browsers used to run the Cypress tests:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的GitHub存储库中的`chapter-03/`目录下的`package.json`文件中包含以下脚本。当执行该脚本作为命令时，它将查找指定位置的浏览器，并将其添加到用于运行Cypress测试的浏览器列表中。
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: To execute the preceding script to run our tests, we need to run the `npm run
    cypress:chromium` command in our Terminal. This will locate the Chromium browser
    in the `location` `/usr/bin/chromium` and use it to run our tests.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行上述脚本来运行我们的测试，我们需要在终端中运行`npm run cypress:chromium`命令。这将在`/usr/bin/chromium`位置找到Chromium浏览器并用它来运行我们的测试。
- en: cypress open --config <configuration-option(s)>
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --config <configuration-option(s)>
- en: The Cypress framework allows us to run tests in a test runner and provide configuration
    options that must be passed when initializing the test runner. While passing the
    `--config` option, it is possible to either pass one environment variable or multiple
    environment variables that are separated by commas. The following script specifies
    that the viewport dimensions should be for a tablet and that the configurations
    are passed through the `–config` option. To run the required command, you need
    to run `npm run cypress:open:tablet-view`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress框架允许我们在测试运行器中运行测试并提供必须在初始化测试运行器时传递的配置选项。在传递`--config`选项时，可以传递一个环境变量或用逗号分隔的多个环境变量。以下脚本指定了视口尺寸应为平板电脑，并通过`--config`选项传递配置。要运行所需的命令，您需要运行`npm
    run cypress:open:tablet-view`。
- en: 'The following script, located in the `package.json` file in this book''s `chapter-03/`
    root directory, is used to change the configuration of the viewport for a test
    running on the visible browser:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 位于该书的`chapter-03/`根目录下的`package.json`文件中的以下脚本用于更改可见浏览器上运行的测试的视口配置。
- en: '[PRE17]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: When executed, the command modifies the default Cypress configuration for the
    browser's size. The provided viewport height and viewport width will show content
    in a similar fashion to a tablet display.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 执行时，该命令会修改浏览器尺寸的默认Cypress配置。提供的视口高度和视口宽度将以类似于平板显示屏的方式显示内容。
- en: Important note
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The configuration options specified using the `--config` option will overwrite
    the default configuration specified in the `cypress.json` file.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`--config`选项指定的配置选项将覆盖`cypress.json`文件中指定的默认配置。
- en: cypress open --config-file <configuration-file>
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --config-file <configuration-file>
- en: Just like in the case of the `Cypress run` command, Cypress tests running through
    the test runner can have an override configuration file that overrides the default
    `cypress.json` file, which contains the default Cypress configuration. It is located
    in the root folder of the test file.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在`Cypress run`命令的情况下一样，通过测试运行器运行的Cypress测试可以具有覆盖默认`cypress.json`文件的覆盖配置文件，该文件包含默认的Cypress配置。它位于测试文件的根文件夹中。
- en: 'The following code snippet, located in the root folder of the `chapter-03/`
    directory''s `package.json` file, overrides the default Cypress configuration
    file, which is identified as `cypress.json`. When executed, the command will read
    an alternative configuration file that has already been declared in `chapter-03/config/cpress-config.json`:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 位于`chapter-03/`目录的根文件夹中的`package.json`文件中的以下代码片段覆盖了默认的Cypress配置文件，该文件被标识为`cypress.json`。当执行时，该命令将读取一个已在`chapter-03/config/cpress-config.json`中声明的替代配置文件：
- en: '[PRE18]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To execute the previous command and change the default Cypress configuration
    file''s location, you need to run the following command in your command-line interface:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行上述命令并更改默认的Cypress配置文件位置，您需要在命令行界面中运行以下命令：
- en: '[PRE19]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now, let's look at another command.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看另一个命令。
- en: cypress open --global
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --global
- en: 'As we mentioned earlier, Cypress can be installed globally. Instead of installing
    it in every project, you can use the global Cypress installation to run different
    Cypress tests. This global installation also allows you to trigger global commands
    without necessarily having an installation of Cypress in the specific directory
    where the Cypress commands are invoked. To open Cypress in global mode, you need
    to pass in the `--global` option, as shown here:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，Cypress可以全局安装。您可以使用全局Cypress安装来运行不同的Cypress测试，而不是在每个项目中安装它。这种全局安装还允许您触发全局命令，而不必在调用Cypress命令的特定目录中安装Cypress。要以全局模式打开Cypress，您需要传递`--global`选项，如下所示：
- en: '[PRE20]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: By running this command, Cypress will recognize that we want to execute the
    tests using the global version of Cypress, not our local instance.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行此命令，Cypress将识别我们要使用全局版本的Cypress执行测试，而不是我们的本地实例。
- en: cypress open --project <project-path>
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --project <project-path>
- en: Cypress comes with the built-in capability to override the default path that
    Cypress starts when running the tests. When the `--project` option is defined,
    it instructs Cypress to abandon the default directory/project path, and instead
    use the provided project path to run the Cypress tests that are located in the
    specified project path. In this setup, it is possible to run totally different
    Cypress projects located in different directories or nested directories.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress具有内置功能，可以覆盖Cypress运行测试时的默认路径。当定义了`--project`选项时，它指示Cypress放弃默认的目录/项目路径，而是使用提供的项目路径来运行位于指定项目路径中的Cypress测试。在这种设置中，可以在不同的目录或嵌套目录中运行完全不同的Cypress项目。
- en: 'The following code snippet, located in the `package.json` file of this book''s
    `chapter-03/` root directory, executes tests in a totally different Cypress project.
    The script executes a project located in `chapter-03/cypress/todo-app-v3`:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 本书`chapter-03/`根目录中的`package.json`文件中的以下代码片段执行了完全不同的Cypress项目中的测试。该脚本执行了位于`chapter-03/cypress/todo-app-v3`中的项目：
- en: '[PRE21]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the previous script, a user can run a different Cypress project located
    in the `cypress/todo-app-v3` folder. To run the script, we need to run the `npm
    run:cypress:project:v3` command. The `version-3` project is a standalone project
    that does not depend on the parent Cypress project. It can use its `cypress.json`
    file to determine its run configurations, as shown in the following screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个脚本中，用户可以运行位于`cypress/todo-app-v3`文件夹中的不同Cypress项目。要运行该脚本，我们需要运行`npm run:cypress:project:v3`命令。`version-3`项目是一个独立的项目，不依赖于父Cypress项目。它可以使用自己的`cypress.json`文件来确定运行配置，如下面的截图所示：
- en: '![Figure 3.2 – todo-app-v3 project test folder'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.2 - todo-app-v3项目测试文件夹'
- en: '](image/Chapter_3_Image02.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '](图像/第3章_图像02.jpg)'
- en: Figure 3.2 – todo-app-v3 project test folder
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 - todo-app-v3项目测试文件夹
- en: As shown in the preceding screenshot, we have modified the `integrationFolder`
    property in the `todo-app-v3` project to set the test folder from `cypress/integration`
    in the main tests folder to `cypress/tests` in the todo-app-v3 project.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们已经修改了`todo-app-v3`项目中的`integrationFolder`属性，将主测试文件夹中的`cypress/integration`设置为`cypress/tests`。
- en: cypress open --port <port-number>
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cypress open --port <port-number>
- en: By default, Cypress runs on port `8080`. Running the `cypress run` command while
    passing the `--port` option enables you to override the default port where the
    tests are run, to a specific port that is chosen by you.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Cypress在端口`8080`上运行。在传递`--port`选项的同时运行`cypress run`命令，可以覆盖测试运行的默认端口，将其更改为您选择的特定端口。
- en: 'The following code snippet is part of the `package.json` file located in the
    `chapter-03/` directory of this book''s GitHub repository. Running the following
    command changes the default port that Cypress runs on:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段是本书GitHub存储库中`chapter-03/`目录中的`package.json`文件的一部分。运行以下命令会更改Cypress运行的默认端口：
- en: '[PRE22]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To run the previous Cypress script, you need to run the `npm run cypress:open:changed-port`
    command. Running this command will ensure that the tests are being run on port
    `3004`, instead of the port where Cypress runs its tests by default on the test
    runner:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行前面的Cypress脚本，您需要运行`npm run cypress:open:changed-port`命令。运行此命令将确保测试在端口`3004`上运行，而不是Cypress默认在测试运行器上运行的端口：
- en: '![Figure 3.3 – Overriding the default Cypress tests port'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.3 - 覆盖默认的Cypress测试端口'
- en: '](image/Chapter_3_Image03.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '](图像/第3章_图像03.jpg)'
- en: Figure 3.3 – Overriding the default Cypress tests port
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 - 覆盖默认的Cypress测试端口
- en: The preceding screenshot shows how to run tests on port `3004` after an override
    using the `--port` option, which was passed to the `cypress run` command. The
    port being used here is for demonstration purposes only; any usable port on a
    user's machine can be passed as an override port for a Cypress application.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了如何在使用`--port`选项覆盖后，在端口`3004`上运行测试，该选项被传递给`cypress run`命令。这里使用的端口仅用于演示目的；用户的机器上可以传递任何可用端口作为Cypress应用程序的覆盖端口。
- en: Using the cypress info command
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用cypress info命令
- en: 'Running the `cypress info` command on a Terminal will print the Cypress installation
    information and the environment configuration on the Terminal. The information
    that the command prints includes the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端上运行`cypress info`命令将在终端上打印Cypress安装信息和环境配置。该命令打印的信息包括以下内容：
- en: Browsers that have been installed on the machine and that have been detected
    by Cypress.
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已在计算机上安装并被Cypress检测到的浏览器。
- en: Information about the host operating system.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关主机操作系统的信息。
- en: The location of the Cypress binary cache.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cypress二进制缓存的位置。
- en: The location of the runtime data storage.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行时数据存储的位置。
- en: Environment variables that have been prefixed with **CYPRESS** and that control
    configurations such as the system proxy.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已添加前缀**CYPRESS**的环境变量，用于控制配置，如系统代理。
- en: Using the cypress version command
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用cypress版本命令
- en: 'The `cypress version` command prints out the binary version of Cypress and
    the npm version of the Cypress module that''s been installed. While most of the
    time, the versions should be the same, they can differ when the installed module,
    such as the binary version, was unable to be installed as a package module from
    npm, hence resulting in a difference in versions. The output from the `cypress
    version` command is shown in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`cypress version`命令打印出Cypress的二进制版本和已安装的Cypress模块的npm版本。大多数情况下，版本应该是相同的，但当安装的模块（如二进制版本）无法作为npm包模块安装时，版本可能会有所不同。`cypress
    version`命令的输出如下截图所示：'
- en: '![Figure 3.4 – cypress version command''s output'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.4 - cypress版本命令的输出'
- en: '](image/Chapter_3_Image04.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Chapter_3_Image04.jpg)'
- en: Figure 3.4 – cypress version command's output
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 - cypress版本命令的输出
- en: The preceding screenshot shows both the Cypress package and binary version that
    have been installed on my machine. Both the package and binary versions of Cypress
    are the same versions.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了我机器上安装的Cypress包和二进制版本。Cypress的包版本和二进制版本都是相同的版本。
- en: Optional exercise for Cypress command usage
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cypress命令使用的可选练习
- en: 'Using the **todoMVC** project defined in our project specifications, create
    a script that can run the following test scenarios:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们项目规范中定义的**todoMVC**项目中，创建一个脚本，可以运行以下测试场景：
- en: Headless tests using the edge browser.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用edge浏览器进行无头测试。
- en: Tests on the test runner where the `TransferProtocol` environment variable is
    specified in `cypress.json` in the `chapter 03` root folder.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`chapter 03`根文件夹中的`cypress.json`中指定`TransferProtocol`环境变量的测试运行器上的测试。
- en: By the end of this exercise, you will understand how to run headed and headless
    tests, as well as how to add environment variables to scripts that we can use
    to execute different Cypress commands. You will also learn how to use different
    browsers to execute Cypress tests.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个练习，您将了解如何运行有头和无头测试，以及如何向脚本添加环境变量，以便我们可以使用不同的Cypress命令来执行。您还将学习如何使用不同的浏览器来执行Cypress测试。
- en: Recap – understanding basic Cypress commands
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结 - 了解基本的Cypress命令
- en: In this section, we learned how to use different Cypress commands to run Cypress
    using the command line or using the Cypress test runner, which runs using different
    browsers that have been installed on the system. We learned that although Cypress
    comes with default commands to run tests, we can extend these commands and increase
    the efficiency of running our tests by utilizing the commands and options available
    to customize Cypress for our use cases. We also provided an exercise so that you
    can apply the knowledge you've gained of using the `cypress run` and `cypress
    open` commands. In the next section, you will learn how to use the built-in Cypress
    debugger to view important debugging information that's necessary for troubleshooting
    errors using our terminals.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何使用不同的Cypress命令来使用命令行或Cypress测试运行器运行Cypress，后者使用已安装在系统上的不同浏览器运行。我们了解到，尽管Cypress带有默认命令来运行测试，但我们可以扩展这些命令，并通过利用可用的命令和选项来定制Cypress以增加运行测试的效率。我们还提供了一个练习，让您应用您对`cypress
    run`和`cypress open`命令的使用知识。在下一节中，您将学习如何使用内置的Cypress调试器来查看重要的调试信息，这对于使用我们的终端进行故障排除非常重要。
- en: Cypress debugging on the command line
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在命令行上进行Cypress调试
- en: In this section, we will explore how to use the command line debugging properties
    of Cypress to troubleshoot the problems that we may encounter when running our
    tests. We will also explore the different debugging options that Cypress offers
    through the command line.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨如何使用Cypress的命令行调试属性来解决运行测试时可能遇到的问题。我们还将探讨Cypress通过命令行提供的不同调试选项。
- en: Cypress has a built-in debug module that can be exposed to users by passing
    debug commands before you run the tests using either `cypress run` or `cypress
    open`. To receive debugging output from the Terminal, the `DEBUG` environment
    variable needs to be set prior to the Cypress test runs in Mac or Linux environments.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress具有内置的调试模块，可以通过在运行测试之前使用`cypress run`或`cypress open`传递调试命令来向用户公开。要从终端接收调试输出，需要在Mac或Linux环境中设置`DEBUG`环境变量，然后再运行Cypress测试。
- en: 'The following scripts can be found in the `chapter-03/` root directory''s `package.json`
    file and are used to show debug output when the commands are executed. The first
    script can be used to show debug output when the `cypress open` command is used
    to run tests, while the second script can be used to show debug output when the
    `cypress run` command is used to run tests:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 以下脚本可以在`chapter-03/`根目录的`package.json`文件中找到，并用于在执行命令时显示调试输出。第一个脚本可用于在使用`cypress
    open`命令运行测试时显示调试输出，而第二个脚本可用于在使用`cypress run`命令运行测试时显示调试输出：
- en: '[PRE23]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: As shown in the preceding commands, running `npm run cypress:open:debugger`
    will run the Cypress tests in a Terminal and log the debug output from the run.
    The second command, which can be run with `npm run cypress:run:debugger`, will
    run the debugger while running the tests on the Cypress test runner.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述命令所示，运行`npm run cypress:open:debugger`将在终端中运行Cypress测试，并记录运行时的调试输出。第二个命令可以通过`npm
    run cypress:run:debugger`运行，将在Cypress测试运行器上运行测试时运行调试器。
- en: Cypress makes it easy to filter through the debug output since you can choose
    to have debugging information about specific modules, such as the Cypress server,
    the CLI, or the launcher modules.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress使得过滤调试输出变得容易，因为您可以选择有关特定模块的调试信息，例如Cypress服务器、CLI或启动器模块。
- en: 'The following script is located in the `package.json` file in the `chapter-03/`
    directory of this book''s GitHub repository. When run, it will provide debug output
    for all the logs that are under the Cypress server module:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 以下脚本位于本书GitHub存储库的`chapter-03/`目录中的`package.json`文件中。运行时，它将为Cypress服务器模块下的所有日志提供调试输出：
- en: '[PRE24]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Running the preceding command with `npm run cypress:run:server-debugger` will
    only output the debugger information related to the Cypress server. Using the
    filtering commands not only makes it easy to narrow down issues in Cypress, but
    also helps filter out noise, leaving logs that are important for debugging Cypress
    information and that will lead us to the source of the problem.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`npm run cypress:run:server-debugger`运行上述命令将只输出与Cypress服务器相关的调试器信息。使用过滤命令不仅可以轻松缩小Cypress中的问题范围，还有助于过滤噪音，留下对于调试Cypress信息重要的日志，并将我们带到问题的源头。
- en: Optional exercise for Cypress debugging
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cypress调试的可选练习
- en: 'Using the **todoMVC** project defined in our project''s specifications, create
    a script that will run the following test scenarios:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们项目规范中定义的**todoMVC**项目，在脚本中创建将运行以下测试场景的脚本：
- en: Debugging the Cypress CLI module
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试Cypress CLI模块
- en: Debugging the `cypress:server` project module
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试`cypress:server`项目模块
- en: By the end of this exercise, you will have a grasp of the concepts of debugging
    in Cypress, and also have knowledge of how to create and run Cypress scripts in
    the `package.json` file.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本次练习，您将掌握Cypress调试的概念，并了解如何在`package.json`文件中创建和运行Cypress脚本。
- en: Recap – Cypress debugging on the command line
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回顾-在命令行上调试Cypress
- en: In this section, we learned how to utilize Cypress to view additional information
    about our test runs by setting the `DEBUG` environment variable. We also learned
    how to utilize Cypress' `debug` variable to filter out the debug output that we
    require, and performed an exercise to extend our knowledge on debugging using
    the command line.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何利用Cypress通过设置`DEBUG`环境变量查看有关测试运行的其他信息。我们还学习了如何利用Cypress的`debug`变量来过滤我们需要的调试输出，并进行了一项练习，以扩展我们在命令行上调试的知识。
- en: Summary
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the `cypress open` and `cypress run` commands,
    as well as how the two commands can be chained with configuration options to extend
    their usage. We also learned how to check the Cypress information and Cypress
    versions that have been installed on our system. In the final section, we learned
    how to use Cypress to provide debug output and find out the cause of failures
    in our tests. In the next chapter, we will dive into writing Cypress tests and
    understanding the different parts of a test.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了`cypress open`和`cypress run`命令，以及如何使用配置选项将这两个命令链接起来以扩展它们的用途。我们还学习了如何检查已安装在系统上的Cypress信息和Cypress版本。在最后一节中，我们学习了如何使用Cypress提供调试输出，并找出测试失败的原因。在下一章中，我们将深入了解编写Cypress测试和理解测试的不同部分。
