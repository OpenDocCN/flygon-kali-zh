- en: Murano – Containerized Application Deployment on OpenStack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano - 在OpenStack上的容器化应用部署
- en: 'This chapter will explain the OpenStack project, Murano, which is the application
    catalog to OpenStack that enables application developers and cloud administrators
    to publish various cloud-ready applications in a browsable categorized catalog.
    Murano greatly eases the application deployment on the OpenStack infrastructure
    with just a click. In this chapter, we will discuss the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将解释OpenStack项目Murano，它是OpenStack的应用程序目录，使应用程序开发人员和云管理员能够发布各种云就绪应用程序在一个可浏览的分类目录中。Murano大大简化了在OpenStack基础设施上的应用程序部署，只需点击一下即可。在本章中，我们将讨论以下主题：
- en: Introduction to Murano
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Murano简介
- en: Murano concepts
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Murano概念
- en: Key features
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要特点
- en: Murano components
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Murano组件
- en: Walk-through
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演练
- en: Murano DevStack installation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Murano DevStack安装
- en: Deploying containerized application
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署容器化应用程序
- en: Introduction to Murano
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano简介
- en: Murano is the OpenStack application catalog service, which provides various
    cloud-ready applications to be easily deployed on OpenStack, abstracting all the
    complexities behind. It simplifies the packaging and deployment of various applications
    on top of OpenStack IaaS. It is an integration point for external applications
    and OpenStack with the support of complete life cycle management of applications. Murano
    applications can be run inside Docker containers or Kubernetes Pod.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Murano是OpenStack应用程序目录服务，提供各种云就绪应用程序，可以轻松部署在OpenStack上，抽象出所有复杂性。它简化了在OpenStack
    IaaS上打包和部署各种应用程序。它是外部应用程序和OpenStack的集成点，支持应用程序的完整生命周期管理。Murano应用程序可以在Docker容器或Kubernetes
    Pod中运行。
- en: Murano is a powerful solution for end users, looking for application deployment
    on top of OpenStack, who don't want to worry about deployment complexities.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Murano是一个强大的解决方案，适用于寻求在OpenStack上部署应用程序的最终用户，他们不想担心部署复杂性。
- en: 'The following is a list of features provided by Murano:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Murano提供的功能列表：
- en: Provides production ready applications and dynamic UI
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供生产就绪的应用程序和动态UI
- en: Supports running containerized application
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持运行容器化应用程序
- en: Supports provisioning applications on both Windows and Linux systems
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持在Windows和Linux系统上部署应用程序
- en: Secures data with Barbican
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Barbican保护数据
- en: Supports running application packages using **Heat Orchestration Templates**
    (**HOT**)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持使用**Heat Orchestration Templates** (**HOT**)运行应用程序包
- en: Deploys multiregion application
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署多区域应用程序
- en: Allows attaching of Cinder volumes to the VMs in an application and storing
    of packages in Glare
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许将Cinder卷附加到应用程序中的VM，并将包存储在Glare中
- en: Packages similar packages in a bundle, such as container-based apps
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将类似的包打包在一起，比如基于容器的应用程序
- en: Provides statistics related to the environment and applications for billing
    purpose
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为计费目的提供与环境和应用程序相关的统计信息
- en: Murano concepts
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano概念
- en: In this section, we will discuss the different concepts used in Murano.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论Murano中使用的不同概念。
- en: Environment
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境
- en: An environment in Murano represents a set of applications, which is managed
    by a single tenant. No two tenants can share the applications in an environment.
    Also an application in one environment is independent of other environments. Multiple
    applications, that are logically related in an environment, can together form
    a more complex application.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在Murano中，环境表示由单个租户管理的一组应用程序。没有两个租户可以共享环境中的应用程序。另外，一个环境中的应用程序与其他环境是独立的。在一个环境中逻辑相关的多个应用程序可以共同形成一个更复杂的应用程序。
- en: Package
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打包
- en: A package in Murano is a ZIP archive that contains all the installation scripts,
    class definitions, dynamic UI forms, image lists, and the instruction of an application
    deployment. This package is imported by Murano and used for deploying an application.
    Various packages can be uploaded to Murano for different applications.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Murano中的软件包是一个ZIP存档，其中包含所有安装脚本、类定义、动态UI表单、图像列表和应用部署的指令。这个软件包被Murano导入并用于部署应用程序。可以将各种软件包上传到Murano以用于不同的应用程序。
- en: Session
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会话
- en: Murano allows modification to an environment from multiple users who are from
    different locations. To allow modification from multiple users at the same time,
    Murano uses sessions that stores local modification from all users. A session
    is created when any application is added to an environment, and after the deployment
    is started, the session becomes invalid. A session can't be shared among multiple
    users.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Murano允许来自不同位置的多个用户对环境进行修改。为了允许多个用户同时进行修改，Murano使用会话来存储所有用户的本地修改。当将任何应用程序添加到环境时，会创建一个会话，部署开始后，会话将变为无效。会话不能在多个用户之间共享。
- en: The environment template
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境模板
- en: A set of applications can form a complex application. To define such applications,
    Murano uses the concept of **environment template**. Each application in the template
    is managed by a single tenant. This template can be deployed by translating it
    into an environment.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一组应用程序可以形成一个复杂的应用程序。为了定义这样的应用程序，Murano使用**环境模板**的概念。模板中的每个应用程序由单个租户管理。可以通过将模板转换为环境来部署此模板。
- en: Deployments
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: A deployment is used to represent a process of installing an application. It
    stores information such as environment status, events, and errors in any application
    deployment.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 部署用于表示安装应用程序的过程。它存储环境状态、事件和任何应用程序部署中的错误等信息。
- en: Bundle
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包
- en: A bundle in Murano represents a group of similar applications. Applications
    in a bundle need not to be closely related. They are sorted according to usage.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Murano中，包代表一组类似的应用程序。包中的应用程序不需要紧密相关。它们根据使用情况进行排序。
- en: An example for this is, creating a bundle of database apps consisting of a MySQL
    or Oracle application. A bundle can be imported directly in Murano, which will
    in turn import all the applications in the bundle.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是，创建一个由MySQL或Oracle应用程序组成的数据库应用程序包。可以直接在Murano中导入一个包，这将依次导入包中的所有应用程序。
- en: Categories
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类别
- en: Applications can be grouped into different categories, based on their types,
    such as application servers, big data, and databases.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序可以根据其类型分为不同的类别，例如应用程序服务器、大数据和数据库。
- en: Key features
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键特性
- en: Murano has many advanced features that makes it a strong solution for application
    management on OpenStack. In this section, we will talk about some of the advanced
    features in Murano.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Murano具有许多先进的功能，使其成为OpenStack上应用程序管理的强大解决方案。在本节中，我们将讨论Murano中的一些高级功能。
- en: Production-ready applications
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生产就绪的应用程序
- en: Murano has various cloud-ready applications that can be configured very easily
    on either VM or baremetal. This doesn't need any knowledge of installation, infrastructure
    management, and so on, making deployment of complex applications an easy task
    for OpenStack users. Users can choose to run their application on Docker Host
    or Kubernetes Pod.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Murano有各种云就绪的应用程序，可以在VM或裸金属上非常轻松地配置。这不需要任何安装、基础设施管理等知识，使得对于OpenStack用户来说，部署复杂应用程序变得非常容易。用户可以选择在Docker主机或Kubernetes
    Pod上运行他们的应用程序。
- en: Application catalog UI
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序目录UI
- en: Murano provides a UI for end users to easily browse the applications available.
    Users can deploy any complex application with just a push of a button. The UI
    is dynamic, in the sense that it provides forms for user input while an application
    is provisioned. It also allows application tagging, provides information about
    each application, shows recent activities, and so on.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Murano为最终用户提供了一个界面，可以轻松浏览可用的应用程序。用户只需点击一个按钮即可部署任何复杂的应用程序。该界面是动态的，它在应用程序被部署时提供用户输入的表单。它还允许应用程序标记，提供有关每个应用程序的信息，显示最近的活动等。
- en: Distributing workloads
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分发工作负载
- en: Murano allows its users to select regions while provisioning any application.
    This way, your application can be distributed in cross-regions for achieving scalability
    and high availability while any disaster recovery.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Murano允许用户在部署任何应用程序时选择区域。这样，您的应用程序可以在跨区域进行分布，以实现可伸缩性和高可用性，同时进行任何灾难恢复。
- en: Application development
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序开发
- en: '**Murano Programming Language** (**MuranoPL**) can be used to define an application.
    It uses YAML and YAQL for application definition. It also has some core libraries
    that define the common function used in several applications. MuranoPL also supports
    garbage collection, which means it deallocates all the resources of an application.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**Murano编程语言**（**MuranoPL**）可用于定义应用程序。它使用YAML和YAQL进行应用程序定义。它还具有一些核心库，定义了几个应用程序中使用的常见函数。MuranoPL还支持垃圾回收，这意味着它会释放应用程序的所有资源。'
- en: Murano repository
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano存储库
- en: Murano supports installing packages from different sources such as a file, URL,
    and repository. Murano can import an application package from a custom repository.
    It downloads all the dependent packages and images, if defined from the repository
    for application deployment.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Murano支持从不同来源安装包，如文件、URL和存储库。Murano可以从自定义存储库导入应用程序包。它会从存储库下载所有依赖的包和镜像（如果已定义）以进行应用程序部署。
- en: Refer to [https://docs.openstack.org/murano/latest/admin/appdev-guide/muranopackages/repository.html](https://docs.openstack.org/murano/latest/admin/appdev-guide/muranopackages/repository.html)
    for setting up a custom repository.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[https://docs.openstack.org/murano/latest/admin/appdev-guide/muranopackages/repository.html](https://docs.openstack.org/murano/latest/admin/appdev-guide/muranopackages/repository.html)设置自定义存储库。
- en: Cinder volumes
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cinder卷
- en: Murano supports the attaching of Cinder volumes to the VMs in an application
    and also supports the booting of these VMs from a Cinder volume. Multiple volumes
    can be attached to an application for storage purpose.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Murano支持将Cinder卷附加到应用程序中的虚拟机，并支持从Cinder卷引导这些虚拟机。可以附加多个卷到应用程序以用于存储目的。
- en: Refer to [https://docs.openstack.org/murano/latest/admin/appdev-guide/cinder_volume_supporting.html](https://docs.openstack.org/murano/latest/admin/appdev-guide/cinder_volume_supporting.html)
    for the detailed step of using Cinder volumes with Murano.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[https://docs.openstack.org/murano/latest/admin/appdev-guide/cinder_volume_supporting.html](https://docs.openstack.org/murano/latest/admin/appdev-guide/cinder_volume_supporting.html)了解如何在Murano中使用Cinder卷的详细步骤。
- en: Barbican support
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Barbican支持
- en: Barbican is the OpenStack project to support sensitive data such as password
    and certificates. Murano ensures that your data is secured by storing it in Barbican.
    You need to install Barbican, and configure Murano to use Barbican as the backend
    storage solution.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Barbican是OpenStack项目，用于支持诸如密码和证书之类的敏感数据。Murano确保通过将数据存储在Barbican中来保护您的数据。您需要安装Barbican，并配置Murano以使用Barbican作为后端存储解决方案。
- en: HOT packages
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HOT包
- en: Murano supports the composing of an application package from the Heat template.
    You can add any Heat template to Murano as a new package for deployment. Murano
    supports both the automatic and manual way of composing an application package
    from the Heat template.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Murano支持从Heat模板中组合应用程序包。您可以将任何Heat模板添加到Murano作为新的部署包。Murano支持从Heat模板自动和手动组合应用程序包的方式。
- en: Refer to [https://docs.openstack.org/murano/latest/admin/appdev-guide/hot_packages.html](https://docs.openstack.org/murano/latest/admin/appdev-guide/hot_packages.html)
    for details on using Heat templates with Murano.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在Murano中使用Heat模板的详细信息，请参阅[https://docs.openstack.org/murano/latest/admin/appdev-guide/hot_packages.html](https://docs.openstack.org/murano/latest/admin/appdev-guide/hot_packages.html)。
- en: Murano components
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano组件
- en: The figure in *The Murano dashboard* section explains the architecture of Murano.
    Murano has a similar architecture to other OpenStack components. It also has the
    API service and an engine as the main components. There are other components as
    well, such as `murano-agent`, Murano dashboard, and the python client, that is,
    `murano-pythonclient`. Let's take a look at each component in detail.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*The Murano dashboard*部分的图解释了Murano的架构。Murano具有与其他OpenStack组件类似的架构。它也有API服务和引擎作为主要组件。还有其他组件，如`murano-agent`，Murano仪表板和python客户端，即`murano-pythonclient`。让我们详细看看每个组件。'
- en: The Murano API
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano API
- en: The Murano API (`murano-api`) is a WSGI server that serves the API requests
    of users. The Murano API has different controllers for each resource type. Each
    controller handles a request for specific resources. They validate the request
    for permissions, validate the data provided in the request, and create a DB object
    for the resource with the input data. The request is forwarded to the `murano-engine`
    service. Upon receiving a response from `murano-engine`, the `murano-api` service
    returns the response to the user.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Murano API（`murano-api`）是一个WSGI服务器，用于为用户提供API请求。Murano API针对每种资源类型都有不同的控制器。每个控制器处理特定资源的请求。它们验证权限的请求，验证请求中提供的数据，并为具有输入数据的资源创建一个DB对象。请求被转发到`murano-engine`服务。收到来自`murano-engine`的响应后，`murano-api`服务将响应返回给用户。
- en: The Murano engine
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano引擎
- en: The Murano engine (`murano-engine`) is the service where most of the orchestration
    happens. It makes a series of calls to Heat, the OpenStack Orchestration service,
    to create the infrastructural resources, such as VMs and volumes, required for
    the deployment of the application. It also starts an agent known as `murano-agent`
    inside the VMs, to do the installation of external applications.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Murano引擎（`murano-engine`）是大部分编排发生的地方。它向Heat（OpenStack编排服务）发出一系列调用，以创建部署应用程序所需的基础资源，如VM和卷。它还在VM内启动一个名为`murano-agent`的代理，以安装外部应用程序。
- en: The Murano agent
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano代理
- en: The Murano agent (`murano-agent`) is a service that runs inside the VMs of a
    deployment. It does the software configuration and installation on the VMs. VM
    images are built using this agent.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Murano代理（`murano-agent`）是在部署的虚拟机内运行的服务。它在虚拟机上进行软件配置和安装。VM镜像是使用此代理构建的。
- en: The Murano dashboard
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano仪表板
- en: 'The Murano dashboard provides the Web UI to the users for easy, browsable access
    to the application available in Murano. It supports role-based access control
    for it users:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Murano仪表板为用户提供Web UI，以便轻松浏览访问Murano中可用的应用程序。它支持基于角色的访问控制：
- en: '![](../images/00024.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00024.jpeg)'
- en: Walk-through
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤
- en: In this section, we will do a walk-through on how an application is deployed
    by Murano. Murano interacts with multiple OpenStack services for resources needed
    for application deployment.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍Murano如何部署应用程序。Murano与多个OpenStack服务进行交互，以获取应用程序部署所需的资源。
- en: 'The request flow for deploying an application in Murano is as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在Murano中部署应用程序的请求流程如下：
- en: The user sends a REST API call to the `murano-api` service for deploying an
    environment via a CLI or Horizon when an authentication token is received from
    KeyStone
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户在收到KeyStone的身份验证令牌后，通过CLI或Horizon向`murano-api`服务发送REST API调用以部署环境
- en: The `murano-api` service receives the request and sends the request for validation
    token and access permission to KeyStone
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-api`服务接收请求，并向KeyStone发送验证令牌和访问权限的请求'
- en: KeyStone validates the token and sends updated authentications headers with
    roles and permissions
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: KeyStone验证令牌，并发送带有角色和权限的更新身份验证标头
- en: The `murano-api` service checks whether the session is valid or not. If the
    session is not valid or already deployed, the request fails with a `403` HTTP
    status
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-api`服务检查会话是否有效。如果会话无效或已部署，则请求将以`403` HTTP状态失败'
- en: A check is done to check if the environment was deleted previously or not. If
    not deleted, an entry is made in the task table to store the information of this
    action
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以确定之前是否已删除环境。如果未删除，则在任务表中创建条目以存储此操作的信息
- en: The `murano-api` service sends the request to the `murano-engine` service via
    an RPC asynchronous call with the JSON object containing class types, application
    details, and the user data, if any
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-api`服务通过RPC异步调用将请求发送到`murano-engine`服务，JSON对象包含类类型、应用程序详情和用户数据（如果有的话）'
- en: The `murano-engine` service picks the request from the message queue
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-engine`服务从消息队列中接收请求'
- en: It creates a KeyStone trust, which is to be used with the application
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它创建一个将与应用程序一起使用的KeyStone信任
- en: It downloads the needed packages, and also validates if the required class are
    available and accessible
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它下载所需的软件包，并验证所需的类是否可用和可访问
- en: The `murano-engine` service then creates all the classes defined in the model
    sent to it
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-engine`服务然后创建模型中定义的所有类'
- en: Then the deploy method for each application is called. In this stage, `murano-engine`
    interacts with Heat to create networks, VMs, and other resources needed for the
    application to run
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后调用每个应用程序的部署方法。在此阶段，`murano-engine`与Heat交互以创建应用程序运行所需的网络、虚拟机和其他资源
- en: After the instance is running, a userdata script is run to install and run `murano-agent`
    on the VM
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例运行后，将运行一个用户数据脚本来安装和运行VM上的`murano-agent`
- en: The `murano-agent` service does the software configuration and installation
    steps
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-agent`服务执行软件配置和安装步骤'
- en: After the installation is done, `murano-engine` sends a response to the API
    service about the completion
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，`murano-engine`向API服务发送关于完成情况的响应
- en: The `murano-api` service then marks the environment as deployed in the database
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`murano-api`服务然后在数据库中将环境标记为已部署'
- en: Murano DevStack installation
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Murano DevStack安装
- en: We will now see how to install a development setup of Murano using DevStack.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看到如何使用DevStack安装Murano的开发设置。
- en: 'Create a root directory for DevStack if needed:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有需要，为DevStack创建根目录：
- en: '[PRE0]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Clone DevStack repository:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆DevStack存储库：
- en: '[PRE1]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now create a minimal `local.conf` for running the DevStack setup:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建一个用于运行DevStack设置的最小`local.conf`：
- en: '[PRE2]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now run DevStack:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行DevStack：
- en: '[PRE3]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Murano should be installed now. To verify the installation, run the following:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应该已安装Murano。要验证安装，请运行以下命令：
- en: '[PRE4]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can see that both the `murano-api` and `murano-engine` services are up and
    running.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到`murano-api`和`murano-engine`服务都已启动并运行。
- en: Deploying a containerized application
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署容器化应用程序
- en: In the previous section, you learned how to install Murano with DevStack. Now
    we will see how to use Murano in order to install an application on OpenStack.
    As Murano is all about the ease that it provides with the browsable, dynamic UI,
    we will use the Application Catalog tab in Horizon to run our application.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，您学习了如何使用DevStack安装Murano。现在我们将看到如何使用Murano来在OpenStack上安装应用程序。由于Murano提供了可浏览的动态UI，我们将使用Horizon中的应用程序目录选项卡来运行我们的应用程序。
- en: 'We will install an NGINX containerized application inside Docker in this example.
    We will need the following packages for running this application:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将在Docker中安装一个NGINX容器化应用程序。我们将需要以下软件包来运行此应用程序：
- en: 'Docker Interface Library: This library defines a framework for building Docker
    applications. It provides the data structures and common interfaces used by all
    the applications and hosting services backed by Docker.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker接口库：此库定义了构建Docker应用程序的框架。它提供了所有应用程序和由Docker支持的主机服务使用的数据结构和常用接口。
- en: 'Docker Standalone Host: This is a regular Docker host application. All the
    container applications are run inside a dedicated VM running image built with
    Docker and `murano-agent`.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker独立主机：这是一个常规的Docker主机应用程序。所有容器应用程序都在运行使用Docker和`murano-agent`构建的映像的专用VM内运行。
- en: 'Kubernetes Pod: This application provides an infrastructure for running containerized
    applications with Kubernetes. Kubernetes is installed on OpenStack VMs. This is
    optional for the Docker Standalone Host application.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes Pod：此应用程序提供了在OpenStack VM上使用Kubernetes运行容器化应用程序的基础设施。这对于Docker独立主机应用程序是可选的。
- en: 'Nginx applications: Nginx is a web server application that will be run using
    either Docker Standalone Host or Kubernetes Pod application.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nginx应用程序：Nginx是一个Web服务器应用程序，将使用Docker独立主机或Kubernetes Pod应用程序运行。
- en: All the container applications for Murano can be found at [https://github.com/openstack/k8s-docker-suite-app-murano](https://github.com/openstack/k8s-docker-suite-app-murano).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 所有Murano的容器应用程序都可以在[https://github.com/openstack/k8s-docker-suite-app-murano](https://github.com/openstack/k8s-docker-suite-app-murano)找到。
- en: 'Now let''s start using the Murano dashboard to run our container application.
    Log in to your Horizon dashboard by entering your credentials:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始使用Murano仪表板来运行我们的容器应用程序。通过输入您的凭据登录到您的Horizon仪表板：
- en: Download the packages from [https://github.com/openstack/k8s-docker-suite-app-murano](https://github.com/openstack/k8s-docker-suite-app-murano)
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://github.com/openstack/k8s-docker-suite-app-murano](https://github.com/openstack/k8s-docker-suite-app-murano)下载软件包
- en: Create a `.zip` archive for each of the preceding listed applications
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为上述列出的每个应用程序创建一个`.zip`存档
- en: Now navigate to App Catalogue | Manage | Packages on the dashboard
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在仪表板上导航到应用程序目录|管理|软件包
- en: Click on Import Package
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导入软件包
- en: 'Select File as Package Source, and browse to upload the ZIP file of your application.
    Fill in the UI form with necessary details for each application and click on Click
    to finish uploading a package. You can now browse the available application by
    navigating to App Catalogue | Browse | Browse Local. You will see a page like
    this:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 选择文件作为软件包源，并浏览上传您的应用程序的ZIP文件。填写每个应用程序所需的UI表单，并单击“单击完成上传软件包”。现在，通过导航到应用程序目录|浏览|本地浏览，您可以浏览可用的应用程序。您将看到这样的页面：
- en: '![](../images/00025.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00025.jpeg)'
- en: Build the VM image by following the steps provided at [https://github.com/openstack/k8s-docker-suite-app-murano/tree/master/DockerStandaloneHost/elements](https://github.com/openstack/k8s-docker-suite-app-murano/tree/master/DockerStandaloneHost/elements)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[https://github.com/openstack/k8s-docker-suite-app-murano/tree/master/DockerStandaloneHost/elements](https://github.com/openstack/k8s-docker-suite-app-murano/tree/master/DockerStandaloneHost/elements)中提供的步骤构建VM映像
- en: 'Mark the image to be used by Murano. Navigate to App Catalogue | Manage | Marked
    Images, click on Mark Image, and fill the details exactly as provided in the following
    screenshot:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标记要由Murano使用的图像。导航到应用程序目录|管理|标记的图像，单击标记图像，并按照以下截图中提供的详细信息填写：
- en: '![](../images/00026.jpeg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00026.jpeg)'
- en: Deploy an application by clicking on Quick Deploy
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击快速部署来部署应用程序
- en: 'You can see in the following screenshot that we are given two options to choose
    for our container host: Kubernetes Pod and Docker Standalone Host. We will choose
    the latter one as the option:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在下面的截图中看到，我们有两个选择供我们选择作为容器主机：Kubernetes Pod和Docker独立主机。我们将选择后者作为选项：
- en: '![](../images/00027.jpeg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00027.jpeg)'
- en: 'Fill in the details for the VM to be created for running our application, as
    shown here:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写要为我们的应用程序创建的VM的详细信息，如下所示：
- en: '![](../images/00028.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00028.jpeg)'
- en: Click on Create to create the environment for our deployment
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击创建以创建我们部署的环境
- en: You will be automatically redirected to the newly created environment in App
    Catalogue | Applications | Environment.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被自动重定向到应用程序目录|应用程序|环境中新创建的环境。
- en: Click on Deploy Environment to start the installation of your application and
    the necessary infrastructure required.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击部署环境以开始安装您的应用程序和所需的基础设施。
- en: 'You will see the following screenshot, which shows that it started creating
    the VM on which Docker will run:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到下面的截图，显示它开始创建VM，Docker将在其上运行：
- en: '![](../images/00029.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00029.jpeg)'
- en: 'Upon the successful completion of the preceding deployment, you will be able
    to see that a new VM will be created, as shown in the following screenshot, and
    your Nginx application running in a Docker container inside the VM:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部署成功完成后，您将能够看到一个新的虚拟机被创建，如下面的截图所示，并且您的Nginx应用程序在VM内的Docker容器中运行：
- en: '![](../images/00030.jpeg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00030.jpeg)'
- en: You can log in to the VM and access the Nginx application. We have now successfully
    installed a containerized Nginx application on OpenStack.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以登录到VM并访问Nginx应用程序。我们现在已经成功在OpenStack上安装了一个容器化的Nginx应用程序。
- en: Summary
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about Murano, which is the application catalog
    service for OpenStack, in detail. We looked into the different concepts available
    in Murano. Then, you also learned about the components and architecture of Murano.
    The chapter also gave a detailed overview of the workflow of a user request for
    deploying an application with Murano. Then we saw how to install a development
    setup of Murano using DevStack, and we did a hands-on on using the Murano dashboard
    to create an environment, add applications to it, and deploy the environment.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您详细了解了Murano，这是OpenStack的应用程序目录服务。我们深入研究了Murano中可用的不同概念。然后，您还了解了Murano的组件和架构。本章还详细概述了用户请求使用Murano部署应用程序的工作流程。然后我们看到如何使用DevStack安装Murano的开发设置，并且我们在使用Murano仪表板创建环境，向其添加应用程序并部署环境时进行了实际操作。
- en: In the next chapter, you will learn about Kolla, which provides production ready
    containers and tools for deployment of the OpenStack services.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将了解Kolla，它提供了用于部署OpenStack服务的生产就绪容器和工具。
