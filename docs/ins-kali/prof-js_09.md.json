["```js\nclass Room {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.users = [];\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0addUser(user) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.users.push(user);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0sendMessage(message) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.users.forEach(user => user.sendMessage(message));\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nclass User {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms = {}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0joinRoom(roomName, room) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms[roomName] = room;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0room.addUser(this);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0sendMessage(roomName, message) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms[roomName].sendMessage(message);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nclass Agent {\n\u00a0\u00a0\u00a0\u00a0constructor(id, agentInfo, voteObj, messageObj) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.voteObj = voteObj;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messageObj = messageObj;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0checkMessage() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.messageObj.hasMessage()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const message = this.messageObj.nextMessate();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return message;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return undefined;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0checkVote() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.voteObj.hasNewVote()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nclass Agent {\n\u00a0\u00a0\u00a0\u00a0constructor(id, agentInfo, voteObj, messageObj, socialPage, gamePage, liveStreamPage, managerPage, paymentPage...) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.voteObj = voteObj;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messageObj = messageObj;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.socialPage = socialPage;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.gamePage = gamePage;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.liveStreamPage = liveStreamPage;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.managerPage = managerPage;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.paymentPage = paymentPage;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0...\n}\n```", "```js\nclass Agent {\n\u00a0\u00a0\u00a0\u00a0constructor(id, agentInfo, emitter) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages = [];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.vote = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0emitter.on('message', (message) => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages.push(message);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0emitter.on('vote', () => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.vote += 1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\n    const EventEmitter = require('events');\n    ```", "```js\n    const emitter = new EventEmitter();\n    ```", "```js\n    emitter.emit('my-event', { value: 'event value' });\n    ```", "```js\n    emitter.on('my-event', (value) => {\n    \u00a0\u00a0\u00a0\u00a0console.log(value);\n    });\n    ```", "```js\n    emitter.emit('my-event', { value: 'another value' });\n    ```", "```js\n    emitter.on('my-event', (value) => {\n    \u00a0\u00a0\u00a0\u00a0console.log('i am handling it again');\n    });\n    ```", "```js\n    emitter.emit('my-event', { value: 'new value' });\n    ```", "```js\n    function handleEvent(event) {\n    \u00a0\u00a0\u00a0\u00a0console.log('i am handling event type: ', event.type);\n    }\n    ```", "```js\n    emitter.on('event-with-type', handleEvent);\n    ```", "```js\n    emitter.emit('event-with-type', { type: 'sync' });\n    ```", "```js\n    emitter.removeListener('event-with-type', handleEvent);\n    ```", "```js\n    emitter.emit('event-with-type', { type: 'sync2' });\n    ```", "```js\nemitter.removeListener('event-with-type', handleEvent);\n```", "```js\nconst emitter = new EventEmitter();\nfunction handleEvent(event) {\n\u00a0\u00a0\u00a0\u00a0console.log('i am handling event type: ', event.type);\n}\nemitter.on('event-with-type', handleEvent);\nemitter.on('event-with-type', handleEvent);\nemitter.on('event-with-type', handleEvent);\nemitter.emit('event-with-type', { type: 'sync' });\nemitter.removeListener('event-with-type', handleEvent);\n```", "```js\nconst emitter = new EventEmitter();\nfunction handleEvent(event) {\n\u00a0\u00a0\u00a0\u00a0console.log('i am handling event type: ', event.type);\n}\nemitter.on('event-with-type', handleEvent);\nemitter.on('event-with-type', handleEvent);\nemitter.on('event-with-type', handleEvent);\n```", "```js\nemitter.removeAllListeners('event-with-type');\n```", "```js\nemitter.emit('event-with-type', { type: 'sync' });\n```", "```js\nconst EventEmitter = require('events');\nconst emitter = new EventEmitter();\nfunction handleEvent(event) {\n\u00a0\u00a0\u00a0\u00a0console.log('i am handling event type once : ', event.type);\n\u00a0\u00a0\u00a0\u00a0emitter.removeListener('event-with-type', handleEvent);\n}\nemitter.on('event-with-type', handleEvent);\nemitter.emit('event-with-type', { type: 'sync' });\nemitter.emit('event-with-type', { type: 'sync' });\nemitter.emit('event-with-type', { type: 'sync' });\n```", "```js\n...\nemitter.once('event-with-type', handleEvent);\nemitter.emit('event-with-type', { type: 'sync' });\nemitter.emit('event-with-type', { type: 'sync' });\nemitter.emit('event-with-type', { type: 'sync' });\n```", "```js\nconst EventEmitter = require('events');\nconst emitter = new EventEmitter();\nemitter.on('event 1', () => {});\nemitter.on('event 2', () => {});\nemitter.on('event 2', () => {});\nemitter.on('event 3', () => {});\n```", "```js\nemitter.listenerCount('event 1');\n```", "```js\nemitter.listenerCount('event 2');\n```", "```js\nfunction anotherHandler() {}\nemitter.on('event 4', () => {});\nemitter.on('event 4', anotherHandler);\n```", "```js\nconst event4Listeners = emitter.listeners('event 4');\n```", "```js\nevent4Listeners.includes(anotherHandler);\n```", "```js\nemitter.eventNames();\n```", "```js\nemitter.setMaxListeners(20)\n```", "```js\nconst EventEmitter = require('events');\nconst emitter = new EventEmitter();\nfunction handleEventSecond() {\n\u00a0\u00a0\u00a0\u00a0console.log('I should be called second');\n}\nfunction handleEventFirst() {\n\u00a0\u00a0\u00a0\u00a0console.log('I should be called first');\n}\nemitter.on('event', handleEventSecond);\nemitter.on('event', handleEventFirst);\nemitter.emit('event');\n```", "```js\n...\nemitter.on('event', handleEventSecond);\nemitter.prependListener('event', handleEventFirst);\nemitter.emit('event');\n```", "```js\nconst EventEmitter = require('events');\nconst emitter = new EventEmitter();\nfunction slowHandle() {\n\u00a0\u00a0\u00a0\u00a0console.log('doing calculation');\n\u00a0\u00a0\u00a0\u00a0for(let i = 0; i < 10000000; i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Math.random();\n\u00a0\u00a0\u00a0\u00a0}\n}\nfunction quickHandle() {\n\u00a0\u00a0\u00a0\u00a0console.log('i am called finally.');\n}\nemitter.on('event', slowHandle);\nemitter.on('event', quickHandle);\nemitter.emit('event');\n```", "```js\n...\nfunction slowHandle() {\n\u00a0\u00a0\u00a0\u00a0console.log('doing calculation');\n\u00a0\u00a0\u00a0\u00a0setImmediate(() => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for(let i = 0; i < 10000000; i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Math.random();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0});\n}\n```", "```js\nclass FireAlarm {\n\u00a0\u00a0\u00a0\u00a0constructor(modelNumber, type, cost) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.modelNumber = modelNumber;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cost = cost;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.batteryLevel = 10;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0getDetail() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return '${this.modelNumber}:[${this.type}] - $${this.cost}';\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0test() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.batteryLevel > 0) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.batteryLevel -= 0.1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nconst livingRoomAlarm = new FireAlarm('AX-00101', 'BATT', '20');\nconsole.log(livingRoomAlarm.getDetail());\n```", "```js\nclass FireAlarm {\n\u00a0\u00a0\u00a0\u00a0constructor(modelNumber, type, cost) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.modelNumber = modelNumber;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cost = cost;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.batteryLevel = 10;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.emitter = new EventEmitter();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0...\n}\n```", "```js\nlivingRoomAlarm.emitter.on('low-battery', () => {\n\u00a0\u00a0\u00a0\u00a0console.log('battery low');\n});\n```", "```js\nlivingRoomAlarm.on('low-battery', () => {\n\u00a0\u00a0\u00a0\u00a0console.log('battery low');\n});\n```", "```js\nclass FireAlarm extends EventEmitter {\n\u00a0\u00a0\u00a0\u00a0constructor(modelNumber, type, cost) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.modelNumber = modelNumber;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cost = cost;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.batteryLevel = 10;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0...\n}\n```", "```js\nclass FireAlarm extends EventEmitter {\n\u00a0\u00a0\u00a0\u00a0constructor(modelNumber, type, cost) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.modelNumber = modelNumber;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cost = cost;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.batteryLevel = 10;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0...\n}\n```", "```js\nlivingRoomAlarm.on('low-battery', () => {\n\u00a0\u00a0\u00a0\u00a0console.log('battery low');\n});\nlivingRoomAlarm.emit('low-battery');\n```", "```js\n    class User {\n    \u00a0\u00a0\u00a0\u00a0constructor(name) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages = [];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms = {};\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0joinRoom(room) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0room.on('newMessage', (message) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages.push(message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms[room.name] = room;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0getMesssages(roomName) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.messages.filter((message) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return message.roomName === roomName;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0printMessages(roomName) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.getMesssages(roomName).forEach((message) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`>> [${message.roomName}]:(${message.from}): ${message.message}`);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0sendMessage(roomName, message) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms[roomName].emit('newMessage', {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0message,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0roomName,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: this.name\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```js\n    class Room extends EventEmitter {\n    \u00a0\u00a0\u00a0\u00a0constructor(name) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```js\n    const bob = new User('Bob');\n    const kevin = new User('Kevin');\n    ```", "```js\n    const lobby = new Room('Lobby');\n    ```", "```js\n    bob.joinRoom(lobby);\n    kevin.joinRoom(lobby);\n    ```", "```js\n    bob.sendMessage('Lobby', 'Hi all');\n    bob.sendMessage('Lobby', 'I am new to this room.');\n    ```", "```js\n    bob.printMessages('Lobby');\n    ```", "```js\n    kevin.printMessage('Lobby');\n    ```", "```js\n    kevin.sendMessage('Lobby', 'Hi bob');\n    bob.sendMessage('Lobby', 'Hey kevin');\n    kevin.sendMessage('Lobby', 'Welcome!');\n    ```", "```js\n    kevin.printMessages('Lobby');\n    ```", "```js\n    class User {\n    \u00a0\u00a0\u00a0\u00a0constructor(name) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages = [];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms = {};\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messageListener = (message) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages.push(message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0joinRoom(room) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messageListener = (message) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.messages.push(message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0room.on('newMessage', this.messageListener);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms[room.name] = room;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0...\n    }\n    ```", "```js\n    class User {\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0leaveRoom(roomName) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.rooms[roomName].removeListener('newMessage', this.messageListener);\n    delete this.rooms[roomName];\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```js\n    bob.leaveRoom('Lobby');\n    ```", "```js\n    kevin.sendMessage('Lobby', 'I got a good news for you guys');\n    ```", "```js\n    bob.printMessages('Lobby');\n    ```", "```js\n    kevin.printMessages('Lobby');\n    ```", "```js\nconst EventEmitter = require('events');\nconst emitter = new EventEmitter();\nemitter.emit('event');\n```", "```js\nconst EventEmitter = require('events');\nconst userEmitter = new EventEmitter();\nconst registrationEmitter = new EventEmitter();\nconst votingEmitter = new EventEmitter();\nconst postEmitter = new EventEmitter();\nconst commentEmitter = new EventEmitter();\nuserEmitter.on('update', (diff) => {\n\u00a0\u00a0\u00a0\u00a0userProfile.update(diff);\n});\nregistrationEmitter.on('user registered:activated', (user) => {\n\u00a0\u00a0\u00a0\u00a0database.add(user, true);\n});\nregistrationEmitter.on('user registered: not activated', (user) => {\n\u00a0\u00a0\u00a0\u00a0database.add(user, false);\n});\nvotingEmitter.on('upvote', () => {\n\u00a0\u00a0\u00a0\u00a0userProfile.addVote();\n});\nvotingEmitter.on('downvote', () => {\n\u00a0\u00a0\u00a0\u00a0userProfile.removeVote();\n});\npostEmitter.on('new post', (post) => {\n\u00a0\u00a0\u00a0\u00a0database.addPost(post);\n});\npostEmitter.on('edit post', (post) => {\n\u00a0\u00a0\u00a0\u00a0database.upsertPost(post);\n});\ncommentEmitter.on('new comment', (comment) => {\n\u00a0\u00a0\u00a0\u00a0database.addComment(comment.post, comment);\n});\n```", "```js\n// index.js\nconst EventEmitter = require('events');\nconst userEmitter = new EventEmitter();\nconst registrationEmitter = new EventEmitter();\nconst votingEmitter = new EventEmitter();\nconst postEmitter = new EventEmitter();\nconst commentEmitter = new EventEmitter();\n// Listeners\nconst updateListener = () => {};\nconst activationListener = () => {};\nconst noActivationListener = () => {};\nconst upvoteListener = () => {};\nconst downVoteListener = () => {};\nconst newPostListener = () => {};\nconst editPostListener = () => {};\nconst newCommentListener = () => {};\nuserEmitter.on('update', updateListener);\nregistrationEmitter.on('user registered:activated', activationListener);\nregistrationEmitter.on('user registered: not activated', noActivationListener);\nvotingEmitter.on('upvote', upvoteListener);\nvotingEmitter.on('downvote', downVoteListener);\npostEmitter.on('new post', newPostListener);\npostEmitter.on('edit post', editPostListener);\ncommentEmitter.on('new comment', newCommentListener);\n```", "```js\n// emitters.js\nconst EventEmitter = require('events');\nconst userEmitter = new EventEmitter();\nconst registrationEmitter = new EventEmitter();\nconst votingEmitter = new EventEmitter();\nconst postEmitter = new EventEmitter();\nconst commentEmitter = new EventEmitter();\nmodule.exports = {\n\u00a0\u00a0\u00a0\u00a0userEmitter,\n\u00a0\u00a0\u00a0\u00a0registrationEmitter,\n\u00a0\u00a0\u00a0\u00a0votingEmitter,\n\u00a0\u00a0\u00a0\u00a0postEmitter,\n\u00a0\u00a0\u00a0\u00a0commentEmitter\n};\n```", "```js\n// index.js\n// Emitters\nconst {\n\u00a0\u00a0\u00a0\u00a0userEmitter,\n\u00a0\u00a0\u00a0\u00a0registrationEmitter,\n\u00a0\u00a0\u00a0\u00a0votingEmitter,\n\u00a0\u00a0\u00a0\u00a0postEmitter,\n\u00a0\u00a0\u00a0\u00a0commentEmitter\n} = require('./emitters.js');\n... rest of index.js\n```", "```js\nconst { userEmitter } = require('./emitters.js');\nfunction userAPIHandler(request, response) {\n\u00a0\u00a0\u00a0\u00a0const payload = request.payload;\n\u00a0\u00a0\u00a0\u00a0const event = {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0diff: payload.diff\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0userEmitter.emit('update', event);\n}\n```", "```js\nconst { userEmitter } = require('./emitters.js');\nuserEmitter.on('update', (diff) => {\n\u00a0\u00a0\u00a0\u00a0database.update(diff);\n})\n```", "```js\nconst currentDir = '/usr/home/me/Documents/project';\nconst dataDir = './data';\nconst assetDir = './assets';\n```", "```js\nconst absoluteDataDir = path.join(currentDir, dataDir);\n```", "```js\nconst parentOfProject = path.join(currentDir, '..');\n```", "```js\nconst myData = '/usr/home/me/Documents/project/data/data.json';\n```", "```js\npath.parse(myData);\n```", "```js\npath.format({\n\u00a0\u00a0\u00a0\u00a0dir: '/usr/home/me/Pictures',\n\u00a0\u00a0\u00a0\u00a0name: 'me',\n\u00a0\u00a0\u00a0\u00a0ext: '.jpeg'\n});\n```", "```js\nconst fs = require('fs');\n```", "```js\nconst stream = fs.createReadStream('file.txt', 'utf-8');\n```", "```js\nconst stream = fs.createWriteStream('output', 'utf-8');\n```", "```js\nconst fs = require('fs');\nfs.stat('index.js', (error, stat) => {\n\u00a0\u00a0\u00a0\u00a0console.log(stat);\n});\n```", "```js\nconst fs = require('fs');\nfs.readFile('index.js', (error, data) => {\n\u00a0\u00a0\u00a0\u00a0console.log(data);\n});\n```", "```js\nfs.readFile('index.js', 'utf-8', (error, data) => {\n\u00a0\u00a0\u00a0\u00a0console.log(data);\n});\n```", "```js\n    fs.writeFile('test.txt', 'Hello world', (error) => {\n    \u00a0\u00a0\u00a0\u00a0if (error) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.error(error);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0console.log('Write complete');\n    });\n    ```", "```js\n    fs.readFile('test.txt', 'utf-8', (error, data) => {\n    \u00a0\u00a0\u00a0\u00a0if (error) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.error(error);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0console.log(data);\n    });\n    ```", "```js\n    fs.readFile('nofile.txt', 'utf-8', (error, data) => {\n    \u00a0\u00a0\u00a0\u00a0if (error) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.error(error);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0console.log(data);\n    });\n    ```", "```js\n    function readFile(file, options) {\n    \u00a0\u00a0\u00a0\u00a0return new Promise((resolve, reject) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fs.readFile(file, options, (error, data) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (error) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return reject(error);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resolve(data);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0})\n    }\n    ```", "```js\n    readFile('test.txt', 'utf-8').then(console.log);\n    ```", "```js\n    const fsPromises = require('fs').promises;\n    fsPromises.stat('test.txt').then(console.log);\n    ```", "```js\nconst fs = require('fs');\nconst stream = fs.createReadStream('file.txt', 'utf-8');\n```", "```js\nstream.on('data', data => {\n\u00a0\u00a0\u00a0\u00a0// Data will be the content of our file\n\u00a0\u00a0\u00a0\u00a0Console.log(data);\n\u00a0\u00a0\u00a0\u00a0// Or\n\u00a0\u00a0\u00a0\u00a0Data = data + data;\n});\n```", "```js\nstream.on('close', () => {\n\u00a0\u00a0\u00a0\u00a0// Process clean up process\n});\n```", "```js\nasync function outputSomething() {\n\u00a0\u00a0\u00a0\u00a0return 'Something';\n}\noutputSomething().then(console.log);\n```", "```js\nconst callbackOutputSomething = util.callbackify(outputSomething);\n```", "```js\ncallbackOutputSomething((err, result) => {\n\u00a0\u00a0\u00a0\u00a0if (err) throw err;\n\u00a0\u00a0\u00a0\u00a0console.log('got result', result);\n})\n```", "```js\nfunction callbackFunction(param, callback) {\n\u00a0\u00a0\u00a0\u00a0callback(null, 'I am calling back with: ${param}');\n}\n```", "```js\nconst promisifiedFunction = util.promisify(callbackFunction);\n```", "```js\npromisifiedFunction('hello world').then(console.log);\n```", "```js\nsetInterval(() => {\n\u00a0\u00a0\u00a0\u00a0console.log('I am running every second');\n}, 1000);\n```", "```js\nsetTimeout(() => {\n\u00a0\u00a0\u00a0\u00a0console.log('I waited 3 seconds to run');\n}, 3000);\n```", "```js\nsetImmediate(() => {\n\u00a0\u00a0\u00a0\u00a0console.log('I will be printed out second');\n});\nconsole.log('I am printed out first');\n```", "```js\nsetTimeout(() => {\n\u00a0\u00a0\u00a0\u00a0console.log('I will be printed out second');\n}, 0);\nconsole.log('I am printed out first');\n```", "```js\nconst myInterval = setInterval(() => {\n\u00a0\u00a0\u00a0\u00a0console.log('I am being printed out');\n}, 1000);\nclearInterval(myInterval);\n```", "```js\nsetTimeout(() => {\n\u00a0\u00a0\u00a0\u00a0clearInterval(myInterval);\n}, 3100);\n```"]