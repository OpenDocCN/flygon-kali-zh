["```\n    **$ git clone https://github.com/mitsuhiko/flask**\n\n    ```", "```\n    **$ cat /tmp/ Dockerfile_2.7**\n    **FROM python:2.7** \n    **RUN pip install flask** \n    **RUN pip install pytest** \n    **WORKDIR /test** \n    **CMD [\"/usr/local/bin/py.test\"]** \n\n    ```", "```\n    **$ docker build -t python2.7test - < /tmp/Dockerfile_2.7**\n\n    ```", "```\n    **$ cat /tmp/Dockerfile_3.3**\n    **FROM python:3.3** \n    **RUN pip install flask** \n    **RUN pip install pytest** \n    **WORKDIR /test** \n    **CMD [\"/usr/local/bin/py.test\"]** \n\n    ```", "```\n    **$ docker build -t python3.3test  - < /tmp/Dockerfile_3.3**\n\n    ```", "```\n    **$ cd /tmp/flask/examples/**\n\n    ```", "```\n    **$ docker run -d -v `pwd`/blueprintexample:/test python2.7test**\n\n    ```", "```\n     **$ docker run -d -v `pwd`/blueprintexample:/test python3.3test** \n\n    ```", "```\n    **$ docker run -d -v `pwd`/blueprintexample:/test:z python2.7test** \n\n    ```", "```\n    **$ git clone git@github.com:nkhare/flask-example.git**\n\n    ```", "```\n        **$ git clone https://github.com/mitsuhiko/flask.git**\n\n        ```", "```\n        **$ cp -Rv flask/examples/blueprintexample/* flask-example/wsgi/**\n\n        ```", "```\n    from blueprintexample import app as application\n    ```", "```\n    flask \n    pytest\n    ```", "```\n    language: python \n\n    python: \n      - 2.6 \n      - 2.7 \n\n    install: \n      - pip install -r requirements.txt \n\n    # Make folders for the reports \n    before_script: \n      - mkdir -p shippable/testresults \n      - mkdir -p shippable/codecoverage \n\n    script: \n      - py.test \n\n    archive: true \n    ```", "```\n    env: \n      global: \n        - **OPENSHIFT_REPO**=ssh://545ea4964382ec337f000009@blueprint-neependra.rhcloud.com/~/git/blueprint.git \n\n    language: python \n\n    python: \n      - 2.6 \n      - 2.7 \n\n    install: \n      - pip install -r requirements.txt \n\n    # Make folders for the reports \n    before_script: \n      - mkdir -p shippable/testresults \n      - mkdir -p shippable/codecoverage \n      - git remote -v | grep ^openshift || git remote add openshift $OPENSHIFT_REPO \n      - cd wsgi \n\n    script: \n      - py.test \n\n    after_success: \n      - git push -f openshift $BRANCH:master \n\n    archive: true \n    ```", "```\n    **pip install -r requirements.txt --use-mirrors**\n    **cd wsgi**\n    **py.test**\n\n    ```", "```\n    **$ git clone https://github.com/openshift/origin.git**\n\n    ```", "```\n    **$ cd origin**\n    **$ git checkout tags/v0.4.3**\n\n    ```", "```\n    **$ vagrant up --provider=virtualbox**\n\n    ```", "```\n    **$ vagrant ssh**\n\n    ```", "```\n    **$ cd /data/src/github.com/openshift/origin** \n    **$ make clean build**\n\n    ```", "```\n    **$  cd /data/src/github.com/openshift/origin/examples/hello-openshift**\n\n    ```", "```\n    **$ mkdir logs**\n    **$ sudo /data/src/github.com/openshift/origin/_output/local/go/bin/openshift start --public-master=localhost &> logs/openshift.log &** \n\n    ```", "```\n    **$ export OPENSHIFTCONFIG=`pwd`/openshift.local.certificates/admin/.kubeconfig** \n    **$ export CURL_CA_BUNDLE=`pwd`/openshift.local.certificates/ca/cert.crt** \n    **$ sudo chmod a+rwX \"$OPENSHIFTCONFIG\"**\n\n    ```", "```\n    **$ osc create -f hello-pod.json** \n\n    ```", "```\n    **$ curl localhost:6061**\n\n    ```", "```\n    **$ sudo openshift ex registry --create --credentials=./openshift.local.certificates/openshift-registry/.kubeconfig** \n\n    ```", "```\n    **$ osc describe service docker-registry** \n\n    ```", "```\n    **$ openshift ex new-project test --display-name=\"OpenShift 3 Sample\" --description=\"This is an example project to demonstrate OpenShift v3\" --admin=test-admin** \n\n    ```", "```\n    **$ osc login -u test-admin -p pass** \n    **$ osc project test** \n\n    ```", "```\n    **$ osc process -f application-template-stibuild.json | osc create -f -** \n\n    ```", "```\n    **$ osc start-build ruby-sample-build** \n\n    ```", "```\n    **$ osc get builds** \n\n    ```", "```\n    **$ osc get services** \n\n    ```", "```\n    **$ openshift ex policy add-role-to-user view test-admin**\n\n    ```", "```\n    **$ git clone https://git.openstack.org/stackforge/nova-docker /opt/stack/nova-docker** \n    **$ git clone https://git.openstack.org/openstack-dev/devstack /opt/stack/devstack** \n\n    ```", "```\n    **$ git clone https://git.openstack.org/openstack/nova /opt/stack/nova**\n\n    ```", "```\n    **$ cd /opt/stack/nova-docker** \n    **$ ./contrib/devstack/prepare_devstack.sh**\n\n    ```", "```\n    **$ /opt/stack/devstack/tools/create-stack-user.sh**\n\n    ```", "```\n    **$ yum install python-pip**\n    **$ pip install docker-py**\n\n    ```", "```\n    **$ cd /opt/stack/devstack** \n    **$ ./stack.sh**\n\n    ```", "```\n    export VIRT_DRIVER=docker \n    export DEFAULT_IMAGE_NAME=cirros \n    export NON_STANDARD_REQS=1 \n    export IMAGE_URLS=\" \" \n    ```", "```\n         [DEFAULT] \n         compute_driver = novadocker.virt.docker.DockerDriver \n        ```", "```\n        [Filters] \n        # nova/virt/docker/driver.py: 'ln', '-sf', '/var/run/netns/.*' \n        ln: CommandFilter, /bin/ln, root \n        ```", "```\n        [DEFAULT] \n        container_formats = ami,ari,aki,bare,ovf,docker \n        ```", "```\n        **$ docker pull fedora** \n\n        ```", "```\n        **$ source openrc** \n        **$ export OS_USERNAME=admin** \n        **$ sudo docker save fedora | glance image-create --is-public=True --container-format=docker --disk-format=raw --name fedora** \n\n        ```", "```\n    **$ pip uninstall  six** \n    **$ pip install --upgrade   six** \n\n    ```"]