["```js\nconst df = new DataFrame({...})\ndf.plot(\"my_div_id\").<chart type>\n```", "```js\nconfig = {\n\u00a0\u00a0layout: {\u2026}, // plotly layout parameters like title, font, e.t.c.\n\u00a0\u00a0... // other Plotly configuration parameters like showLegend, displayModeBar, e.t.c.\n}\n```", "```js\nload_package([\"https://cdn.plot.ly/plotly-1.58.4.min.js\",\"https://cdn.jsdelivr.net/npm/danfojs@0.2.3/lib/bundle.min.js\"])\n```", "```js\n...\n<head>\n<script src=\"img/plotly-1.2.0.min.js\"></script> \n<script src=\"img/bundle.min.js\"></script>\n</head>\n...\n```", "```js\nvar financial_df;\ndfd.read_csv(\"https://raw.githubusercontent.com/plotly/datasets/master/finance-charts-apple.csv\")\n\u00a0\u00a0\u00a0\u00a0.then(data => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0financial_df\u00a0\u00a0= data\n\u00a0\u00a0\u00a0\u00a0})\n```", "```js\ntable(financial_df.head())\n```", "```js\nvar layout = {\n\u00a0\u00a0\u00a0\u00a0yaxis: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0title: 'AAPL open points',\n\u00a0\u00a0\u00a0\u00a0}\n}\nvar config = {\n\u00a0\u00a0displayModeBar: false,\n\u00a0\u00a0layout\n}\nfinancial_df ['AAPL.Open'].plot(this_div()).line(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0\u00a0\u00a0yaxis: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0title: 'AAPL open points',\n\u00a0\u00a0\u00a0\u00a0}\n}\nvar config = {\n\u00a0\u00a0columns: [\"AAPL.Open\", \"AAPL.Close\"],\n\u00a0\u00a0displayModeBar: true,\n\u00a0\u00a0layout\n}\nfinancial_df.plot(this_div()).line(config)\n```", "```js\nvar new_df = financial_df.set_index({key: \"Date\"})\ntable(new_df.head())\n```", "```js\nvar layout = {\n\n\u00a0\u00a0...\u00a0\u00a0legend: {bgcolor: \"#fcba03\", \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bordercolor: \"#444\", \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0borderwidth: 1, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0font: {family: \"Arial\", size: 10, color: \"#fff\"}\n\u00a0\u00a0},\n\u00a0\u00a0...}\nvar config = {\n\u00a0\u00a0columns: [\"AAPL.Open\", \"AAPL.Close\"],\n\u00a0\u00a0displayModeBar: true,\n\u00a0\u00a0modeBarButtonsToAdd: [{ \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: 'about', \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0icon: Plotly.Icons.question, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0click: function (gd) { \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0alert('An example of configuring Danfo.Js Plots') \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n\u00a0\u00a0\u00a0\u00a0}] ,\n\u00a0\u00a0layout\n}\nnew_df.plot(this_div()).line(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Time series plot of AAPL open and close points\",\n\u00a0\u00a0width: 1000,\n\u00a0\u00a0yaxis: {\n\u00a0\u00a0\u00a0\u00a0title: 'AAPL open points',\n\u00a0\u00a0},\n\u00a0\u00a0xaxis: {\n\u00a0\u00a0\u00a0\u00a0title: 'Date',\n\u00a0\u00a0}\n}\nvar config = {\n\u00a0\u00a0columns: [\"AAPL.Open\", \"AAPL.Close\"],\n\u00a0\u00a0layout\n}\nnew_df.plot(this_div()).scatter(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Time series plot of AAPL open and close points\",\n\u00a0\u00a0width: 1000,\n\u00a0\u00a0yaxis: {\n\u00a0\u00a0\u00a0\u00a0title: 'AAPL open points',\n\u00a0\u00a0},\n\u00a0\u00a0xaxis: {\n\u00a0\u00a0\u00a0\u00a0title: 'Date',\n\u00a0\u00a0}\n}\nvar config = {\n\u00a0\u00a0x: \"AAPL.Low\",\n\u00a0\u00a0y: \"AAPL.High\",\n\u00a0\u00a0layout\n}\nnew_df.plot(this_div()).scatter(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Box plot on a Series\",\n}\nvar config = {\n\u00a0\u00a0layout\n}\nnew_df[\"AAPL.Open\"].plot(this_div()).box(config)\n```", "```js\n...\nnew_df[\"AAPL.Open\"].plot(this_div()).violin(config)\n\u2026\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Box plot on multiple columns\",\n}\nvar config = {\n\u00a0\u00a0columns: [\"AAPL.Open\", \"AAPL.Close\", \"AAPL.Low\", \"AAPL.High\"],\n\u00a0\u00a0layout\n}\nnew_df.plot(this_div()).box(config)\n```", "```js\n\u2026\nnew_df.plot(this_div()).violin(config)\n...\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Box plot on x and y values\",\n}\nvar config = {\n\u00a0\u00a0x: \"direction\",\n\u00a0\u00a0y: \"AAPL.Open\",\n\u00a0\u00a0layout\n}\nnew_df.plot(this_div()).box(config)\n```", "```js\n...\nnew_df.plot(this_div()).violin(config)\n\u2026\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Box plot on two continuous variables\",\n}\nvar config = {\n\u00a0\u00a0x: \"AAPL.Low\",\n\u00a0\u00a0y: \"AAPL.Open\",\n\u00a0\u00a0layout\n}\nnew_df.plot(this_div()).box(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0\u00a0title: \"Histogram on a Series data\",\n}\nvar config = { \n\u00a0\u00a0layout \n} \nnew_df[\"AAPL.Open\"].plot(this_div()).hist(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"Histogram of two columns\",\n}\nvar config = { \n\u00a0\u00a0columns: [\"dn\", \"AAPL.Adjusted\"],\n\u00a0\u00a0layout \n} \nnew_df.plot(this_div()).hist(config)\n```", "```js\nvar layout = {\n\u00a0\u00a0title: \"A horizontal histogram\",\n}\nvar config = { \n\u00a0\u00a0y: \"dn\",\n\u00a0\u00a0layout \n} \nnew_df.plot(this_div()).hist(config)\n```", "```js\nvar layout = { \n\u00a0\u00a0\u00a0title: \"A simple bar chart on a series\",\n} \nvar config = {\u00a0\u00a0\n\u00a0\u00a0layout\u00a0\u00a0\n}\u00a0\u00a0\nnew_df[\"AAPL.Volume\"].plot(this_div()).bar(config)\n```", "```js\ncustom_sf = new dfd.Series([1, 3, 2, 6, 10, 34, 40, 51, 90, 75])\ncustom_sf.plot(this_div()).bar(config)\n```", "```js\nvar layout = { \n\u00a0\u00a0title: \"A bar chart on two columns\", \n} \nvar config = {\u00a0\u00a0\n\u00a0\u00a0columns: [\"price\", \"cost\"],\n\u00a0\u00a0layout\u00a0\u00a0\n}\u00a0\u00a0\u00a0\nvar df = new dfd.DataFrame({'price': [20, 18, 489, 675, 1776],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'cost': [40, 22, 21, 60, 19],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'count': [4, 25, 281, 600, 1900]},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{index: [1990, 1997, 2003, 2009, 2014]})\ndf.plot(this_div()).bar(config)\n```"]