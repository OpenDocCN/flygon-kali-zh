["```\n$ kubectl patch deployment my-app -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"app\",\"image\":\"alpine:3.6\"}]}}}}'\n```", "```\n$ kubectl set image deployment my-app app=alpine:3.6\n```", "```\n$ kubectl replace -f ex-deployment.yml\ndeployment \"my-app\" replaced\nThe Service \"my-app-svc\" is invalid: spec.clusterIP: Invalid value: \"\": field is immutable\n$ echo $?\n1\n```", "```\n$ kubectl apply -f ex-deployment.yml view-last-applied\n```", "```\n$ curl -X PATCH -H 'Content-Type: application/strategic-merge-patch+json' --data '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"app\",\"image\":\"alpine:3.6\"}]}}}}' 'https://$KUBEAPI/apis/apps/v1beta1/namespaces/default/deployments/my-app'\n```", "```\n$ kubectl apply -f ex-deployment.yml\ndeployment \"my-app\" created\nservice \"my-app-svc\" created\n$ kubectl proxy\nStarting to serve on 127.0.0.1:8001\n// switch to another terminal #2\n$ while :; do curl localhost:8001/api/v1/proxy/namespaces/default/services/my-app-svc:80/; sleep 1; \n\ndone\nmy-app-3318684939-pwh41-v-3.5.2 is running...\nmy-app-3318684939-smd0t-v-3.5.2 is running...\n...\n```", "```\n$ kubectl set image deployment my-app app=alpine:3.6\ndeployment \"my-app\" image updated\n// switch to terminal #2\nmy-app-99427026-7r5lr-v-3.6.2 is running...\nmy-app-3318684939-pwh41-v-3.5.2 is running...\n...\n```", "```\n$ kubectl rollout status deployment my-app\nWaiting for rollout to finish: 3 of 5 updated replicas are available...\nWaiting for rollout to finish: 3 of 5 updated replicas are available...\nWaiting for rollout to finish: 4 of 5 updated replicas are available...\nWaiting for rollout to finish: 4 of 5 updated replicas are available...\ndeployment \"my-app\" successfully rolled out\n```", "```\n$ kubectl rollout history deployment my-app\nREVISION    CHANGE-CAUSE\n1           <none>\n2           <none>  \n```", "```\n$ kubectl patch deployment my-app -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"app\",\"env\":[{\"name\":\"DEMO\",\"value\":\"1\"}]}]}}}}' --record\ndeployment \"my-app\" patched\n$ kubectl rollout history deployment my-app\ndeployments \"my-app\"\nREVISION    CHANGE-CAUSE\n1           <none>\n2           <none>\n3           kubectl patch deployment my-app --\npatch={\"spec\":{\"template\":{\"spec\":{\"containers\":\n[{\"name\":\"app\",\"env\":[{\"name\":\"DEMO\",\"value\":\"1\"}]}]}}}} --record=true  \n```", "```\n$ kubectl rollout undo deployment my-app\ndeployment \"my-app\" rolled back\n```", "```\nDOCKER_REPO=devopswithkubernetes/my-app     BUILD_IMAGE_PATH=${DOCKER_REPO}:b${TRAVIS_BUILD_NUMBER}\nRELEASE_IMAGE_PATH=${DOCKER_REPO}:${TRAVIS_TAG}\nRELEASE_TARGET_NAMESPACE=default  \n```", "```\ndocker build -t my-app .\ndocker run --rm --name app -dp 5000:5000 my-app\nsleep 10\nCODE=$(curl -IXGET -so /dev/null -w \"%{http_code}\" localhost:5000)\n'[ ${CODE} -eq 200 ] && echo \"Image is OK\"'\ndocker stop app  \n```", "```\ndocker login -u ${CI_ENV_REGISTRY_USER} -p \"${CI_ENV_REGISTRY_PASS}\"\ndocker tag my-app ${BUILD_IMAGE_PATH}\ndocker push ${BUILD_IMAGE_PATH}\nif [[ ${TRAVIS_TAG} =~ ^rel.*$ ]]; then\n docker tag my-app ${RELEASE_IMAGE_PATH}\n docker push ${RELEASE_IMAGE_PATH}\nfi\n```", "```\n$ docker run --name test -dp 5000:5000 devopswithkubernetes/my-app:b1\n72f0ef501dc4c86786a81363e278973295a1f67555eeba102a8d25e488831813\n$ curl localhost:5000\nOK\n```", "```\n$ ./get-sa-token.sh --namespace cd --account cd-agent\nAPI endpoint:\nhttps://35.184.53.170\nca.crt and sa.token exported\n$ cat ca.crt | base64\nLS0tLS1C...\n$ cat sa.token\neyJhbGci...\n```", "```\n$ kubectl get deployment\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nmy-app    3         3         3            3           30s\n$ kubectl proxy &\n$ curl localhost:8001/api/v1/namespaces/default/services/my-app-svc:80/proxy/\nOK\n```", "```\n...\n containers:\n - name: main\n image: devopswithkubernetes/my-app:b5\n readinessProbe:\n httpGet:\n path: /\n port: 5000\n periodSeconds: 5\n initialDelaySeconds: 10\n successThreshold: 2\n failureThreshold: 3 \n timeoutSeconds: 1\n command:\n...\n```", "```\n...\nPod is created at 1505315576\nstarting server at 1505315583.436334\n1505315586.443435 - GET / HTTP/1.1\n1505315591.443195 - GET / HTTP/1.1\n1505315595.869020 - GET /from-tester\n1505315596.443414 - GET / HTTP/1.1\n1505315599.871162 - GET /from-tester\nstopping server at 1505315599.964793\n1505315601 readiness test fail#1\n1505315606 readiness test fail#2\n1505315611 readiness test fail#3\n...\n```", "```\n$ kubectl logs tester\n1505315577 - nc: timed out\n1505315583 - nc: timed out\n1505315589 - nc: timed out\n1505315595 - OK\n1505315599 - OK\n1505315603 - HTTP/1.1 500\n1505315607 - HTTP/1.1 500\n1505315612 - nc: timed out\n1505315617 - nc: timed out\n1505315623 - nc: timed out\n...\n```", "```\n...\nspec:\n containers:\n - name: my-app\n image: <my-app>\n initContainers:\n - name: init-my-app\n image: <init-my-app>\n...\n```", "```\n--- Dockerfile.shell-sh ---\nFROM python:3-alpine\nEXPOSE 5000\nADD app.py .\nCMD python -u app.py\n```", "```\n$ docker run -d --rm --name my-app my-app:shell-sh\n8962005f3722131f820e750e72d0eb5caf08222bfbdc5d25b6f587de0f6f5f3f \n$ docker logs my-app\nstarting server at 1503839211.025133\n$ docker kill --signal TERM my-app\nmy-app\n$ docker ps --filter name=my-app --format '{{.Names}}'\nmy-app\n```", "```\n$ docker exec my-app ps\nPID   USER     TIME    COMMAND\n1     root      0:00  /bin/sh -c python -u app.py\n5     root      0:00  python -u app.py\n6     root      0:00  ps  \n```", "```\nCMD exec python -u app.py\n```", "```\nCMD [ \"python\", \"-u\", \"app.py\" ] \n```", "```\n---Dockerfile.exec-sh---\nFROM python:3-alpine\nEXPOSE 5000\nADD app.py .\nCMD [ \"python\", \"-u\", \"app.py\" ]\n---\n$ docker run -d --rm --name my-app my-app:exec-sh\n5114cabae9fcec530a2f68703d5bc910d988cb28acfede2689ae5eebdfd46441\n$ docker exec my-app ps\nPID   USER     TIME   COMMAND\n1     root       0:00  python -u app.py\n5     root       0:00  ps\n$ docker kill --signal TERM my-app && docker logs -f my-app\nmy-app\nstarting server at 1503842040.339449\nstopping server at 1503842134.455339 \n```", "```\n...\n containers:\n - name: main\n image: nginx\n lifecycle:\n preStop:\n exec:\n command: [ \"nginx\", \"-s\", \"quit\" ]\n... \n```", "```\n...\n containers:\n - name: main\n image: my-app\n lifecycle:\n preStop:\n exec:\n command: [ \"/bin/sh\", \"-c\", \"sleep 5\" ]\n...\n```", "```\n...\n spec:\n containers:\n - name: main\n image: my-app\n nodeSelector:\n purpose: sandbox\n disk: ssd\n...\n```", "```\n$ kubectl describe node gke-my-cluster-ins-49e8f52a-lz4l\nName:       gke-my-cluster-ins-49e8f52a-lz4l\nRole:\nLabels:   beta.kubernetes.io/arch=amd64\n beta.kubernetes.io/fluentd-ds-ready=true\n beta.kubernetes.io/instance-type=g1-small\n beta.kubernetes.io/os=linux\n cloud.google.com/gke-nodepool=ins\n failure-domain.beta.kubernetes.io/region=us-  \n          central1\n failure-domain.beta.kubernetes.io/zone=us-\n          central1-b\n kubernetes.io/hostname=gke-my-cluster-ins- \n          49e8f52a-lz4l\n... \n```", "```\n$ kubectl label node gke-my-cluster-ins-49e8f52a-lz4l \\\n purpose=sandbox disk=ssd\nnode \"gke-my-cluster-ins-49e8f52a-lz4l\" labeled\n$ kubectl get node --selector purpose=sandbox,disk=ssd\nNAME                               STATUS    AGE       VERSION\ngke-my-cluster-ins-49e8f52a-lz4l   Ready     5d        v1.7.3\n```"]