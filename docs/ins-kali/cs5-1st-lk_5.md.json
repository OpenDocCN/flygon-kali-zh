["```cs\n<h2>@ViewBag.Message</h2>\n<p>\n    Find like-minded individuals with JoinUp\n</p>\n```", "```cs\npublic ActionResult Index()\n{\n    ViewBag.Message = \"MeetUp. TalkUp. JoinUp\";\n\n    return View();\n}\n```", "```cs\nprivate async Task<string> GetSiteMessage()\n{\n    await Task.Delay(1);\n    return \"MeetUp. TalkUp. JoinUp\";\n}\n```", "```cs\npublic async Task<ActionResult> Index()\n{\n    ViewBag.Message = await GetSiteMessage();\n\n    return View();\n}\n```", "```cs\ninstall-package signalr\n\n```", "```cs\npublic class MapController : Controller\n{\n    public ActionResult Index()\n    {\n        return View();\n    }\n}\n```", "```cs\n@{\n    ViewBag.Title = \"JoinUp Map\";\n}\n\n<h2>Index</h2>\n```", "```cs\n@section scripts {\n    @Scripts.Render(\"~/Scripts/map.js\")\n}\n```", "```cs\n$(function () {\n    var geo = navigator.geolocation;\n\n    if (geo) {\n        geo.getCurrentPosition(userAccepted, userDenied);\n    } else {\n        userDenied({message:'not supported'}); \n    }\n});\n```", "```cs\nfunction userAccepted(pos) {\n    alert(\"lat: \" +\n        pos.coords.latitude +\n        \", lon: \" +\n        pos.coords.longitude);\n}\n\nfunction userDenied(msg) {\n    alert(msg.message);\n}\n```", "```cs\n<ul id=\"messages\"></ul>\n\n@section scripts {\n    @Scripts.Render(\"~/Scripts/jquery.signalR-0.5.3.min.js\")\n    @Scripts.Render(\"~/signalr/hubs\")\n    @Scripts.Render(\"~/Scripts/map.js\")\n}\n```", "```cs\nvar app = {\n    geoAccepted: function(pos) {\n        var coord = JSON.stringify(pos.coords);\n        app.server.notifyNewPosition(coord);\n    },\n\n    initializeLocation: function() {\n        var geo = navigator.geolocation;\n\n        if (geo) {\n            geo.getCurrentPosition(this.geoAccepted);\n        } else {\n            error('not supported');\n        }\n    },\n\n    onNewPosition: function(name, coord) {\n        var pos = JSON.parse(coord);\n        $('#messages').append('<li>' + name + ', at '+ pos.latitude +', '+ pos.longitude +'</li>');\n    }\n};\n```", "```cs\n$(function () {\n    var server = $.connection.serverHub;\n\n    server.onNewPosition = app.onNewPosition;\n\n    app.server = server;\n\n    $.connection.hub.start()\n        .done(function () {\n            app.initializeLocation();\n        });\n});\n```", "```cs\npublic class ServerHub : Hub\n{\n    public void notifyNewPosition(string coord)\n    {\n        string name = HttpContext.Current.User.Identity.Name;\n\n        Clients.onNewPosition(name, coord);\n    }\n}\n```", "```cs\n[Authorize]\npublic class MapController : Controller\n```", "```cs\n<div \n    id=\"map\"\n    style=\"width:100%; height: 200px;\">\n</div>\n```", "```cs\n@section scripts {\n    @Scripts.Render(\"~/Scripts/jquery.signalR-0.5.3.min.js\")\n    @Scripts.Render(\"~/signalr/hubs\")\n    @Scripts.Render(\"http://maps.google.com/maps/api/js?sensor=false\");\n    @Scripts.Render(\"~/Scripts/map.js\")\n}\n```", "```cs\nfunction initMap(coord) {\n    var googleCoord = new google.maps.LatLng(coord.latitude, coord.longitude);\n\n    if (!app.map) {\n        var mapElement = document.getElementById(\"map\");\n        var map = new google.maps.Map(mapElement, {\n            zoom: 15,\n            center: googleCoord,\n            mapTypeControl: false,\n            navigationControlOptions: { style: google.maps.NavigationControlStyle.SMALL },\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        });\n        app.map = map;\n    }\n    else {\n        app.map.setCenter(googleCoord);\n    }\n}\n```", "```cs\nfunction addMarker(name, coord) {\n    var googleCoord = new google.maps.LatLng(coord.latitude, coord.longitude);\n\n    if (!app.markers) app.markers = {};\n\n    if (!app.markers[name]) {\n        var marker = new google.maps.Marker({\n            position: googleCoord,\n            map: app.map,\n            title: name\n        });\n        app.markers[name] = marker;\n    }\n    else {\n        app.markers[name].setPosition(googleCoord);\n    }\n}\n```", "```cs\ninitializeLocation: function() {\n    var geo = navigator.geolocation;\n\n    if (geo) {\n        geo.watchPosition(this.geoAccepted);\n    } else {\n        error('not supported');\n    }\n},\n```", "```cs\ngeoAccepted: function (pos) {\n    var coord = JSON.stringify(pos.coords);\n\n    initMap(pos.coords);\n\n    app.server.notifyNewPosition(coord);\n},\n```", "```cs\nonNewPosition: function(name, coord) {\n    var pos = JSON.parse(coord);\n\n    addMarker(name, pos);\n\n    $('#messages').append('<li>' + name + ', at '+ pos.latitude +', '+ pos.longitude +'</li>');\n}\n```"]