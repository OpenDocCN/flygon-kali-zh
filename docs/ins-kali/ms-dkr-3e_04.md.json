["```\n$ docker container run hello-world\n```", "```\nFROM scratch\nCOPY hello /\nCMD [\"/hello\"]\n```", "```\n$ docker container ls -a\n```", "```\nif name == \"boring_wozniak\" /* Steve Wozniak is not boring */ {\n  goto begin\n}\n```", "```\n$ docker container rm pensive_hermann\n```", "```\n$ docker container run -d --name nginx-test -p 8080:80 nginx\n```", "```\n$ docker container ls\n```", "```\n$ docker container run --name nginx-foreground -p 9090:80 nginx\n```", "```\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint nginx-foreground (3f5b355607f24e03f09a60ee688645f223bafe4492f807459e4a2b83571f23f4): Bind for 0.0.0.0:8080 failed: port is already allocated.\n```", "```\nERRO[0003] error getting events from daemon: net/http: request cancelled\n```", "```\n$ docker container attach nginx-test\n```", "```\n$ docker container start nginx-test\n```", "```\n$ docker container attach --sig-proxy=false nginx-test \n```", "```\n$ docker container exec nginx-test cat /etc/debian_version\n```", "```\n$ docker container exec -i -t nginx-test /bin/bash\n```", "```\n$ docker container logs --tail 5 nginx-test\n```", "```\n$ docker container logs -f nginx-test\n```", "```\n$ docker container logs --since 2018-08-25T18:00 nginx-test\n```", "```\n$ date\n$ docker container exec nginx-test date \n```", "```\n$ docker container logs --since 2018-08-25T18:00 -t nginx-test\n```", "```\n$ docker container top nginx-test\n```", "```\n$ docker container stats nginx-test\n```", "```\n$ docker container stats -a\n```", "```\n$ docker container run -d --name nginx-test --cpu-shares 512 --memory 128M -p 8080:80 nginx\n```", "```\n$ docker container update --cpu-shares 512 --memory 128M nginx-test\n```", "```\nError response from daemon: Cannot update container 3f2ce315a006373c075ba7feb35c1368362356cb5fe6837acf80b77da9ed053b: Memory limit should be smaller than already set memoryswap limit, update the memoryswap at the same time\n```", "```\n$ docker container inspect nginx-test\n```", "```\n$ docker container inspect nginx-test | grep -i memory\n```", "```\n \"Memory\": 0,\n \"KernelMemory\": 0, \"MemoryReservation\": 0,\n \"MemorySwap\": 0,\n \"MemorySwappiness\": null,\n```", "```\n$ docker container update --cpu-shares 512 --memory 128M --memory-swap 256M nginx-test\n```", "```\n \"Memory\": 134217728,\n \"KernelMemory\": 0,\n \"MemoryReservation\": 0,\n \"MemorySwap\": 268435456,\n \"MemorySwappiness\": null,\n```", "```\n$ for i in {1..5}; do docker container run -d --name nginx$(printf \"$i\") nginx; done\n```", "```\n$ docker container pause nginx1\n```", "```\n$ docker container unpause nginx1\n```", "```\n$ docker container stop nginx2\n```", "```\n$ docker container stop -t 60 nginx3\n```", "```\n$ docker container start nginx2 nginx3\n```", "```\n$ docker container restart -t 60 nginx4\n```", "```\n$ docker container kill nginx5 \n```", "```\n$ docker container prune\n```", "```\n$ docker container rm nginx4\n```", "```\n$ docker container stop nginx3 && docker container rm nginx3\n```", "```\n$ docker container create --name nginx-test -p 8080:80 nginx\n```", "```\n$ docker container port nginx-test\n```", "```\n80/tcp -> 0.0.0.0:8080\n```", "```\n$ docker container exec nginx-test touch /tmp/testing\n```", "```\n$ docker container diff nginx-test\n```", "```\nC /run\nA /run/nginx.pid\nC /tmp\nA /tmp/testing\nC /var/cache/nginx\nA /var/cache/nginx/client_temp A /var/cache/nginx/fastcgi_temp A /var/cache/nginx/proxy_temp\nA /var/cache/nginx/scgi_temp\nA /var/cache/nginx/uwsgi_temp\n```", "```\n$ docker image pull redis:alpine\n$ docker image pull russmckendrick/moby-counter\n$ docker network create moby-counter\n```", "```\n$ docker container run -d --name redis --network moby-counter redis:alpine\n```", "```\n$ docker container run -d --name moby-counter --network moby-counter -p 8080:80 russmckendrick/moby-counter\n```", "```\nvar port = opts.redis_port || process.env.USE_REDIS_PORT || 6379\nvar host = opts.redis_host || process.env.USE_REDIS_HOST || 'redis'\n```", "```\n$ docker container exec moby-counter ping -c 3 redis\n```", "```\n$ docker container exec moby-counter cat /etc/hosts\n```", "```\n127.0.0.1 localhost\n::1 localhost ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n172.18.0.3 4e7931312ed2\n```", "```\n$ docker container exec moby-counter cat /etc/resolv.conf\n```", "```\nnameserver 127.0.0.11\noptions ndots:0\n```", "```\n$ docker container exec moby-counter nslookup redis 127.0.0.11\n```", "```\nServer: 127.0.0.11\nAddress 1: 127.0.0.11\n\nName: redis\nAddress 1: 172.18.0.2 redis.moby-counter\n```", "```\n$ docker network create moby-counter2\n$ docker run -itd --name moby-counter2 --network moby-counter2 -p 9090:80 russmckendrick/moby-counter\n```", "```\n$ docker container exec moby-counter2 ping -c 3 redis\n```", "```\n$ docker container exec moby-counter2 cat /etc/resolv.conf\n```", "```\nnameserver 127.0.0.11\noptions ndots:0\n```", "```\n$ docker container exec moby-counter2 nslookup redis 127.0.0.11\nServer: 127.0.0.11\nAddress 1: 127.0.0.11\n\nnslookup: can't resolve 'redis': Name does not resolve\n```", "```\n$ docker container run -d --name redis2 --network moby-counter2 --network-alias redis redis:alpine\n```", "```\n$ docker container exec moby-counter2 nslookup redis 127.0.0.1\nServer: 127.0.0.1\nAddress 1: 127.0.0.1 localhost\n\nName: redis\nAddress 1: 172.19.0.3 redis2.moby-counter2\n```", "```\n$ docker network inspect moby-counter\n```", "```\n[\n {\n \"Name\": \"moby-counter\",\n \"Id\": \"c8b38a10efbefd701c83203489459d9d5a1c78a79fa055c1c81c18dea3f1883c\",\n \"Created\": \"2018-08-26T11:51:09.7958001Z\",\n \"Scope\": \"local\",\n \"Driver\": \"bridge\",\n \"EnableIPv6\": false,\n \"IPAM\": {\n \"Driver\": \"default\",\n \"Options\": {},\n \"Config\": [\n {\n \"Subnet\": \"172.18.0.0/16\",\n \"Gateway\": \"172.18.0.1\"\n }\n ]\n },\n \"Internal\": false,\n \"Attachable\": false,\n \"Ingress\": false,\n \"ConfigFrom\": {\n \"Network\": \"\"\n },\n \"ConfigOnly\": false,\n \"Containers\": {\n \"4e7931312ed299ed9132f3553e0518db79b4c36c43d36e88306aed7f6f9749d8\": {\n \"Name\": \"moby-counter\",\n \"EndpointID\": \"dc83770ae0939c98416ee69d939b30a1da391b11d14012c8188be287baa9c325\",\n \"MacAddress\": \"02:42:ac:12:00:03\",\n \"IPv4Address\": \"172.18.0.3/16\",\n \"IPv6Address\": \"\"\n },\n \"d760bc59c3ac5f9ba8b7aa8e9f61fd21ce0b8982f3a85db888a5bcf103bedf6e\": {\n \"Name\": \"redis\",\n \"EndpointID\": \"5af2bfd1ce486e38a9c5cddf9e16878fdb91389cc122cfef62d5e575a91b89b9\",\n \"MacAddress\": \"02:42:ac:12:00:02\",\n \"IPv4Address\": \"172.18.0.2/16\",\n \"IPv6Address\": \"\"\n }\n },\n \"Options\": {},\n \"Labels\": {}\n }\n]\n```", "```\n$ docker container stop moby-counter2 redis2\n$ docker container prune\n$ docker network prune\n```", "```\n$ docker container stop redis\n$ docker container rm redis\n```", "```\n$ docker container run -d --name redis --network moby-counter redis:alpine\n```", "```\n$ docker container stop redis\n$ docker container rm redis\n```", "```\nFROM alpine:3.8\n\nRUN addgroup -S redis && adduser -S -G redis redis\nRUN apk add --no-cache 'su-exec>=0.2'\n\nENV REDIS_VERSION 4.0.11\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-4.0.11.tar.gz\nENV REDIS_DOWNLOAD_SHA fc53e73ae7586bcdacb4b63875d1ff04f68c5474c1ddeda78f00e5ae2eed1bbb\n\nRUN set -ex; \\\n \\\n apk add --no-cache --virtual .build-deps \\\n coreutils \\\n gcc \\\n jemalloc-dev \\\n linux-headers \\\n make \\\n musl-dev \\\n ; \\\n \\\n wget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \\\n echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c -; \\\n mkdir -p /usr/src/redis; \\\n tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \\\n rm redis.tar.gz; \\\n \\\n grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \\\n sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \\\n grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h; \\\n \\\n make -C /usr/src/redis -j \"$(nproc)\"; \\\n make -C /usr/src/redis install; \\\n \\\n rm -r /usr/src/redis; \\\n \\\n runDeps=\"$( \\\n scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n | tr ',' '\\n' \\\n | sort -u \\\n | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n )\"; \\\n apk add --virtual .redis-rundeps $runDeps; \\\n apk del .build-deps; \\\n \\\n redis-server --version\n\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 6379\nCMD [\"redis-server\"]\n```", "```\n$ docker volume ls\n```", "```\n$ docker container run -d --name redis -v c2e417eab8fa20944582e2de525ab87b749099043b8c487194b7b6415b537e6a:/data --network moby-counter redis:alpine \n```", "```\n$ docker container exec redis ls -lhat /data\n```", "```\ntotal 12\ndrwxr-xr-x 1 root root 4.0K Aug 26 13:30 ..\ndrwxr-xr-x 2 redis redis 4.0K Aug 26 12:44 .\n-rw-r--r-- 1 redis redis 392 Aug 26 12:44 dump.rdb\n```", "```\n$ docker volume create redis_data\n```", "```\n$ docker container run -d --name redis -v redis_data:/data --network moby-counter redis:alpine\n```", "```\n$ docker volume inspect redis_data\n```", "```\n[\n {\n \"CreatedAt\": \"2018-08-26T13:39:33Z\",\n \"Driver\": \"local\",\n \"Labels\": {},\n \"Mountpoint\": \"/var/lib/docker/volumes/redis_data/_data\",\n \"Name\": \"redis_data\",\n \"Options\": {},\n \"Scope\": \"local\"\n }\n]\n```", "```\n$ docker container stop redis moby-counter $ docker container prune\n$ docker network prune\n```", "```\n$ docker volume prune\n```", "```\n$ docker container [command]\n$ docker network [command]\n$ docker volume [command]\n$ docker image [command]\n```"]