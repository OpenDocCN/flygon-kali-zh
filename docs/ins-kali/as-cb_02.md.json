["```kt\n    dependencies {\n        compile 'com.android.support:appcompat-v7:22.0.0'\n        compile 'com.parse.bolts:bolts-android:1.+'\n        compile fileTree(dir: 'libs', include: 'Parse-*.jar')\n    }\n    ```", "```kt\n    dependencies {\n    \u2026\n        compile 'com.parse:android:1.8.2'}\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <manifest \n        package=\"com.packtpub.cloudorder\" >\n        <uses-permission android:name=\"android.permission.INTERNET\" />\n        <uses-permission android:name= \"android.permission.ACCESS_NETWORK_STATE\" />\n    <application\n        android:name=\"com.packtpub.cloudorder.CloudOrderApplication\"\n    ```", "```kt\n    Parse.initialize(this, \"your application Id\", \"your client Id\");\n    ```", "```kt\n    package com.packt.cloudorder; \n    import android.app.Application;\n    import com.parse.Parse;\n    public class CloudOrderApplication extends Application{\n        @Override\n        public void onCreate(){\n            super.onCreate();\n            Parse.enableLocalDatastore(this);\n            Parse.initialize(this, \"your application Id\", \"your client Id\");\n        }\n    }\n    ```", "```kt\n    ParseObject testObject = new ParseObject(\"CloudOrder\");\n    testObject.put(\"customer\", \"Packt Publishing Ltd\");\n    testObject.saveInBackground();\n    ```", "```kt\n    package com.packt.cloudorder; \n    import com.parse.ParseClassName;\n    import com.parse.ParseObject;\n    @ParseClassName(\"CloudOrder\")\n    public class CloudOrder extends ParseObject {...\n    ```", "```kt\n    public void setCustomer (String value) {\n        put(\"customer\", value);\n    }\n    public String getCustomer (){\n        return getString(\"customer\");\n    }\n    public void setAddress (String value) {\n        put(\"address\", value);\n    }\n    public String getAddress (){\n        return getString(\"address\");\n    }\n    ```", "```kt\n    ParseObject.registerSubclass(CloudOrder.class); \n    ```", "```kt\n    ParseQuery<ParseObject> query = ParseQuery.getQuery(\"CloudOrder\");\n    ```", "```kt\n    query.findInBackground(new FindCallback<ParseObject>() {\n        public void done(List<ParseObject> items, ParseException e) {\n            if (e==null){\n                Log.i(\"TEST\", String.format(\"%d objects found\", items.size()));\n            }\n        }\n    });\n    ```", "```kt\n    public class CloudOrderAdapter extends ArrayAdapter<CloudOrder> { \u2026\n    ```", "```kt\n    public class CloudOrderAdapter extends ArrayAdapter<CloudOrder> {\n        private Context mContext;\n        private int mAdapterResourceId;\n        public ArrayList<CloudOrder> mItems = null;\n        static class ViewHolder{\n            TextView customer;\n            TextView address;\n        }\n        @Override\t\n        public int getCount(){\n            super.getCount();\n            int count = mItems !=null ? mItems.size() : 0;\n            return count;\n        }\n        public CloudOrderAdapter (Context context, int adapterResourceId, ArrayList<CloudOrder>items) {\n            super(context, adapterResourceId, items);\n            this.mItems = items;\n            this.mContext = context;\n            this.mAdapterResourceId = adapterResourceId;\n        }\n        @Override\n        public View getView(int position, View convertView, ViewGroup parent) {\n            View v = null;\n            v = convertView;\n            if (v == null){\n                LayoutInflater vi = (LayoutInflater)this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                v = vi.inflate(mAdapterResourceId, null);\n                ViewHolder holder = new ViewHolder();\n                holder.customer = (TextView) v.findViewById(R.id.adapter_main_customer);\n                holder.address = (TextView)v.findViewById(R.id.adapter_main_address);\n                v.setTag(holder);\n            }\n            final CloudOrder item = mItems.get(position);\n            if(item != null){\n                final ViewHolder holder = (ViewHolder)v.getTag();\n                holder.customer.setText(item.getCustomer());\n                holder.address.setText(item.getAddress());\n            }\n            return v;\n        }\n    }\n    ```", "```kt\n    ParseQuery<ParseObject> query = ParseQuery.getQuery(\"CloudOrder\");\n    query.findInBackground(new FindCallback<ParseObject>(){\n        public void done(List<ParseObject> items, ParseException e) {\n            Object result = items;\n            if (e == null){\n                ArrayList<CloudOrder> orders = (ArrayList<CloudOrder>) result;\n                Log.i(\"TEST\", String.format(\"%d objects found\", orders.size()));\n                CloudOrderAdapter adapter = new CloudOrderAdapter(getApplicationContext(), R.layout.adapter_main, orders);\n                ListView listView = (ListView)findViewById(R.id.main_list_orders);\n                listView.setAdapter(adapter);;\n            }\n        }\n    });\n    ```", "```kt\n    <ListView\n    android:id=\"@+id/main_list_orders\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"match_parent\"/>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout \n        android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n        android:padding=\"8dp\" android:layout_height=\"match_parent\">\n        <TextView\n            android:text=\"(Customer)\"\n            android:textStyle=\"bold\"\n            android:textSize=\"20sp\"\n            android:textColor=\"@android:color/black\"\n            android:id=\"@+id/adapter_main_customer\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n        <TextView\n            android:text=\"(Address)\"\n            android:textSize=\"16sp\"\n            android:textColor=\"@android:color/darker_gray\"\n            android:id=\"@+id/adapter_main_address\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout \n        android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n        android:padding=\"8dp\" android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/signature_text\"\n            android:text=\" Please sign here:\"\n            android:textSize=\"24sp\"\n            android:textColor=\"@android:color/black\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n        <Button\n            android:id=\"@+id/signature_button\"\n            android:text=\"Send signature\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n    ```", "```kt\n    package com.packt.cloudorder.widget;\n    import android.content.Context;\n    import android.graphics.Bitmap;\n    import android.graphics.Canvas;\n    import android.graphics.Color;\n    import android.graphics.Paint;\n    import android.graphics.Path;\n    import android.graphics.drawable.Drawable;\n    import android.util.AttributeSet;\n    import android.view.MotionEvent;\n    import android.view.View;\n    public class SignatureView extends View {\n        private Paint paint = new Paint();\n        private Path path = new Path();\n        public SignatureView(Context context, AttributeSet attrs) {\n            super(context, attrs);\n            paint.setAntiAlias(true);\n            paint.setStrokeWidth(3f);\n            paint.setColor(Color.BLACK);\n            paint.setStyle(Paint.Style.STROKE);\n            paint.setStrokeJoin(Paint.Join.ROUND);\n        }\n        @Override\n        protected void onDraw(Canvas canvas) {\n            canvas.drawPath(path, paint);\n        }\n        @Override\n        public boolean onTouchEvent(MotionEvent event) {\n            float eventX = event.getX();\n            float eventY = event.getY();\n            switch (event.getAction()) {\n                case MotionEvent.ACTION_DOWN:\n                    path.moveTo(eventX, eventY);\n                    return true;\n                case MotionEvent.ACTION_MOVE:\n                    path.lineTo(eventX, eventY);\n                    break;\n                case MotionEvent.ACTION_UP: \n                    break;\n                default:\n                    return false;\n            }\n            invalidate();\n            return true;\n        } \n    ```", "```kt\n    public Bitmap getSignatureBitmap() {\n            Bitmap result = Bitmap.createBitmap(getWidth(), getHeight(), Bitmap.Config.ARGB_8888);\n            Canvas canvas = new Canvas(result);\n            Drawable bgDrawable =getBackground();\n            if (bgDrawable!=null) {\n                bgDrawable.draw(canvas);\n            }else {\n                canvas.drawColor(Color.WHITE);\n                draw(canvas);\n            }\n            return result;\n        }\n    } \n    ```", "```kt\n    <com.packt.cloudorder.widget.SignatureView\n        android:id=\"@+id/signature_view\"\n        android:layout_width=\"match_parent\"\n    \tandroid:layout_height=\"200dp\"\n    \tandroid:layout_marginLeft=\"3dp\"\n    \tandroid:layout_marginTop=\"3dp\"\n    \tandroid:layout_marginRight=\"0dp\"\n    \tandroid:layout_marginBottom=\"18dp\"/>\n    ```", "```kt\n    public class SignatureActivity  extends Activity {\n        @Override\n    \tprotected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            setContentView(R.layout.activity_signature);\n            findViewById(R.id.signature_button).setOnClickListener(new View.OnClickListener(){\n                @Override\n    \t\t\tpublic void onClick(View v) {\n                }\n            });\n        }\n    }\n    ```", "```kt\n    <activity android:name=\".SignatureActivity\"/>\n    ```", "```kt\n    ((ListView)findViewById(R.id.main_list_orders)).setOnItemClickListener(new AdapterView.OnItemClickListener() {\n        @Override\n    \tpublic void onItemClick(AdapterView<?> parent, View view, int position, long id) {        }\n    });\n    ```", "```kt\n    ListView listView = (ListView)findViewById(R.id.main_list_orders);\n    CloudOrder order = (CloudOrder)listView.getAdapter().getItem(position);\n    gotoSignatureActivity(order);\n    ```", "```kt\n    private void gotoSignatureActivity(CloudOrder order){\n        Intent intent = new Intent(this, SignatureActivity.class);\n        Bundle extras = new Bundle();\n        extras.putString(\"orderId\", order.getObjectId());\n        intent.putExtras(extras);\n        this.startActivity(intent);\n    }\n    ```", "```kt\n    sendSignature();  \n    ```", "```kt\n    private void sendSignature() {\n        final Activity activity = this; \n        SignatureView signatureView = (SignatureView)findViewById(R.id.signature_view); \n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        signatureView.getSignatureBitmap().compress(Bitmap.CompressFormat.PNG, 100, stream);\n        byte[] data = stream.toByteArray();\n        final ParseFile file = new ParseFile(\"signature.jpg\", data); \n        file.saveInBackground(new SaveCallback() {\n            @Override\n    \t\tpublic void done(com.parse.ParseException e) {\n            }\n        });\n    }\n    ```", "```kt\n    if (e == null) {\n     Bundle extras = getIntent().getExtras();\n    ParseObject order = ParseObject.createWithoutData(\"CloudOrder\", extras.getString(\"orderId\"));\n                    order.put(\"signature\", file);\n                    order.put(\"status\", 10);\n    order.saveInBackground(new SaveCallback() {\n                        @Override\n                        public void done(ParseException e) {\n                            if (e==null){\n                                Toast.makeText(activity, \"Signature has been sent!\", Toast.LENGTH_SHORT).show();\n                            }\n                        }\n                    });\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <resources>\n    \u2026<string name=\"app_name\">Cloud order</string><string name=\"parse_class_cargo_order\">CargoOrder</string>\n        <string name=\"signature_send\">Your signature has been sent.</string>\n    ```", "```kt\n    Toast.makeText(activity, getString(R.string.signature_send), Toast.LENGTH_SHORT).show();\n    ```", "```kt\n    <TextView\n        android:text=\"@string/signature_send\"\n    \tandroid:layout_width=\"wrap_content\"\n    \tandroid:layout_height=\"match_parent\" />\n    ```"]