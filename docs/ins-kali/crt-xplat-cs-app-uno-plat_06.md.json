["```cs\n    <Grid.RowDefinitions>\n    \u00a0\u00a0\u00a0\u00a0<RowDefinition Height=\"*\" />\n    \u00a0\u00a0\u00a0\u00a0<RowDefinition Height=\"Auto\" />\n    </Grid.RowDefinitions>\n    <CommandBar VerticalAlignment=\"Bottom\" Grid.Row=\"1\">\n    \u00a0\u00a0\u00a0\u00a0<CommandBar.PrimaryCommands>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<AppBarButton Icon=\"Clock\" Label=\"Arrivals\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Click=\"ShowArrivals\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<AppBarButton Label=\"Quick Report\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Click=\"ShowQuickReport\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<AppBarButton.Icon>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<FontIcon Glyph=\"&#xE724;\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</AppBarButton.Icon>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</AppBarButton>\n    \u00a0\u00a0\u00a0\u00a0</CommandBar.PrimaryCommands>\n    </CommandBar>\n    ```", "```cs\n    <views:ArrivalsControl x:Name=\"Arrivals\" Visibility=\"Visible\" />\n    <views:QuickReportControl x:Name=\"QuickReport\" Visibility=\"Collapsed\" />\n    ```", "```cs\n    public void ShowArrivals(object sender, RoutedEventArgs args) \n    {\n    \u00a0\u00a0\u00a0\u00a0Arrivals.Visibility = Visibility.Visible; \n    \u00a0\u00a0\u00a0\u00a0QuickReport.Visibility = Visibility.Collapsed;\n    }\n    public void ShowQuickReport(object sender, RoutedEventArgs args) \n    {\n    \u00a0\u00a0\u00a0\u00a0Arrivals.Visibility = Visibility.Collapsed; \n    \u00a0\u00a0\u00a0\u00a0QuickReport.Visibility = Visibility.Visible;\n    }\n    ```", "```cs\n    <Grid.ColumnDefinitions>\n    \u00a0\u00a0\u00a0\u00a0<ColumnDefinition Width=\"*\" />\n    \u00a0\u00a0\u00a0\u00a0<ColumnDefinition Width=\"Auto\" />\n    </Grid.ColumnDefinitions>\n    <Grid.RowDefinitions>\n    \u00a0\u00a0\u00a0\u00a0<RowDefinition Height=\"Auto\" />\n    \u00a0\u00a0\u00a0\u00a0<RowDefinition Height=\"Auto\" />\n    \u00a0\u00a0\u00a0\u00a0<RowDefinition Height=\"Auto\" />\n    \u00a0\u00a0\u00a0\u00a0<RowDefinition Height=\"*\" />\n    </Grid.RowDefinitions>\n    ```", "```cs\n    <ComboBox x:Name=\"StationList\"\n    \u00a0\u00a0\u00a0\u00a0HorizontalAlignment=\"Stretch\" \n    \u00a0\u00a0\u00a0\u00a0VerticalAlignment=\"Stretch\"\n    \u00a0\u00a0\u00a0\u00a0ItemsSource=\"{x:Bind VM.ListOfStations}\"\n    \u00a0\u00a0\u00a0\u00a0SelectedItem=\"{x:Bind VM.SelectedStation, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Mode=TwoWay}\"\n    \u00a0\u00a0\u00a0\u00a0SelectionChanged=\"OnStationListSelectionChanged\"\n    \u00a0\u00a0\u00a0\u00a0SelectionChangedTrigger=\"Always\">\n    \u00a0\u00a0\u00a0\u00a0<ComboBox.ItemTemplate>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<DataTemplate xmlns:network=\"using:UnoBookRail.Common.Network\".\n    ```", "```cs\n    <TextBlock \n    \u00a0\u00a0\u00a0\u00a0Grid.Row=\"1\" \n    \u00a0\u00a0\u00a0\u00a0Grid.ColumnSpan=\"2\" \n    \u00a0\u00a0\u00a0\u00a0Margin=\"4\"\n    \u00a0\u00a0\u00a0\u00a0HorizontalAlignment=\"Stretch\"\n    \u00a0\u00a0\u00a0\u00a0HorizontalTextAlignment=\"Right\"\n    \u00a0\u00a0\u00a0\u00a0Text=\"{x:Bind VM.DataTimestamp, Mode=OneWay}\" />\n    <TextBlock \n    \u00a0\u00a0\u00a0\u00a0Grid.Row=\"2\" \n    \u00a0\u00a0\u00a0\u00a0Grid.ColumnSpan=\"2\"\n    \u00a0\u00a0\u00a0\u00a0Margin=\"4\"\n    \u00a0\u00a0\u00a0\u00a0HorizontalAlignment=\"Stretch\"\n    \u00a0\u00a0\u00a0\u00a0HorizontalTextAlignment=\"Right\"\n    \u00a0\u00a0\u00a0\u00a0Foreground=\"Red\" \n    \u00a0\u00a0\u00a0\u00a0TextWrapping=\"WrapWholeWords\"\n    \u00a0\u00a0\u00a0\u00a0Text=\"Connectivity issues: data may not be up to \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0date!\"\n    \u00a0\u00a0\u00a0\u00a0Visibility=\"{x:Bind VM.ShowErrorMsg, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Mode=OneWay}\"/>\n    ```", "```cs\n    <UserControl.Resources>\n    \u00a0\u00a0<DataTemplate x:Key=\"HeaderTemplate\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<Grid HorizontalAlignment=\"Stretch\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Background=\"{ThemeResource \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ApplicationPageBackgroundThemeBrush}\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<TextBlock \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Margin=\"0\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FontWeight=\"Bold\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Style=\"{StaticResource \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SubheaderTextBlockStyle}\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Text=\"{Binding Platform}\" />\n    \u00a0\u00a0\u00a0\u00a0</Grid>\n    \u00a0\u00a0</DataTemplate>\n    \u00a0\u00a0<DataTemplate x:Key=\"ItemTemplate\">\n    \u00a0\u00a0\u00a0\u00a0<Grid Margin=\"0,10\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<Grid.ColumnDefinitions>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ColumnDefinition Width=\"100\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ColumnDefinition Width=\"*\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</Grid.ColumnDefinitions>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<TextBlock \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Margin=\"0,10\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Style=\"{StaticResource TitleTextBlockStyle}\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Text=\"{Binding DisplayedTime}\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<TextBlock \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Grid.Column=\"1\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Margin=\"0,10\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Style=\"{StaticResource TitleTextBlockStyle}\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Text=\"{Binding Destination}\" />\n    \u00a0\u00a0\u00a0\u00a0</Grid>\n    \u00a0\u00a0</DataTemplate>\n    </UserControl.Resources>\n    ```", "```cs\n    <ListView Grid.Row=\"3\" \n    \u00a0\u00a0\u00a0\u00a0Grid.ColumnSpan=\"2\"\n    \u00a0\u00a0\u00a0\u00a0ItemTemplate=\"{StaticResource ItemTemplate}\"\n    \u00a0\u00a0\u00a0\u00a0ItemsSource=\"{x:Bind VM.ArrivalsViewSource}\"\n    \u00a0\u00a0\u00a0\u00a0SelectionMode=\"None\">\n    \u00a0\u00a0\u00a0\u00a0<ListView.GroupStyle>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<GroupStyle HeaderTemplate=\"{StaticResource \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HeaderTemplate}\" />\n    \u00a0\u00a0\u00a0\u00a0</ListView.GroupStyle>\n    </ListView>\n    ```", "```cs\n    <Grid Grid.Row=\"3\" Grid.ColumnSpan=\"2\">\n    \u00a0\u00a0\u00a0\u00a0<TextBlock HorizontalAlignment=\"Stretch\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0VerticalAlignment=\"Center\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HorizontalTextAlignment=\"Center\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Style=\"{StaticResource \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SubheaderTextBlockStyle}\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Text=\"Select a station\" TextWrapping=\"NoWrap\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Visibility=\"{x:Bind VM.ShowNoStnMsg,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Mode=OneWay}\" />\n    \u00a0\u00a0\u00a0\u00a0<ProgressRing Width=\"100\" Height=\"100\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IsActive=\"True\" IsEnabled=\"True\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Visibility=\"{x:Bind VM.IsBusy, Mode=OneWay}\"\n    \u00a0\u00a0\u00a0\u00a0/>\n    </Grid>\n    ```", "```cs\n    public sealed partial class ArrivalsControl : UserControl {\n    \u00a0\u00a0\u00a0\u00a0private ArrivalsViewModel VM to help keep the code concise) in the constructor, and it's this class that contains most of the logic.The code-behind also includes a method to handle the `SelectionChanged` event on the `ComboBox`. This is currently necessary as a workaround for a bug due to the order that `ComboBox` events are raised in. The bug is logged at [https://github.com/unoplatform/uno/issues/5792](https://github.com/unoplatform/uno/issues/5792). Once fixed, it should be possible to bind to a `Command` on the ViewModel to perform the equivalent functionality.\n    ```", "```cs\n    using NetworkAssist.ViewModels;\n    using UnoBookRail.Common.Network;\n    ```", "```cs\n    Install-Package Microsoft.Toolkit.Mvvm -Version 7.0.2\n    ```", "```cs\n    using Microsoft.Toolkit.Mvvm.Input;\n    using System.Collections.ObjectModel;\n    using System.Threading.Tasks;\n    using System.Windows.Input;\n    using UnoBookRail.Common.Network;\n    using Windows.UI.Xaml.Data;\n    ```", "```cs\n    private static DataService _data = DataService.Instance;\n    private List<Station> _listOfStations;\n    private ObservableCollection<StationArrivalDetails> \n    _arrivals = \n    \u00a0\u00a0\u00a0\u00a0new ObservableCollection<StationArrivalDetails>();\n    private Station _selectedStation = null;\n    private string _dataTimestamp;\n    private bool _isBusy;\n    private bool _showErrorMsg;\n    ```", "```cs\n    public List<Station> ListOfStations \n    {\n    \u00a0\u00a0\u00a0\u00a0get => _listOfStations;\n    \u00a0\u00a0\u00a0\u00a0set => SetProperty(ref _listOfStations, value);\n    }\n    public bool ShowErrorMsg \n    {\n    \u00a0\u00a0\u00a0\u00a0get => _showErrorMsg;\n    \u00a0\u00a0\u00a0\u00a0set => SetProperty(ref _showErrorMsg, value);\n    }\n    public Station SelectedStation \n    {\n    \u00a0\u00a0\u00a0\u00a0get => _selectedStation;\n    \u00a0\u00a0\u00a0\u00a0set {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (SetProperty(ref _selectedStation, value)) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OnPropertyChanged(nameof(ShowNoStnMsg));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    public ObservableCollection<StationArrivalDetails> Arrivals \n    {\n    \u00a0\u00a0\u00a0\u00a0get => _arrivals;\n    \u00a0\u00a0\u00a0\u00a0set => SetProperty(ref _arrivals, value);\n    }\n    public string DataTimestamp \n    {\n    \u00a0\u00a0\u00a0\u00a0get => _dataTimestamp;\n    \u00a0\u00a0\u00a0\u00a0set => SetProperty(ref _dataTimestamp, value);\n    }\n    public bool IsBusy \n    {\n    \u00a0\u00a0\u00a0\u00a0get => _isBusy;\n    \u00a0\u00a0\u00a0\u00a0set => SetProperty(ref _isBusy, value);\n    }\n    public IEnumerable<object> ArrivalsViewSource => new CollectionViewSource() \n    {\n    \u00a0\u00a0\u00a0\u00a0Source = Arrivals,\n    \u00a0\u00a0\u00a0\u00a0IsSourceGrouped = true\n    }.View;\n    public bool ShowNoStnMsg => SelectedStation == null;\n    public ICommand RefreshCommand { get; }\n    public ICommand SelectionChangedCommand { get; }\n    ```", "```cs\n    public ArrivalsViewModel() \n    {\n    \u00a0\u00a0\u00a0\u00a0ListOfStations = _data.GetAllStations();\n    \u00a0\u00a0\u00a0\u00a0RefreshCommand = new AsyncRelayCommand(async () =>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ await LoadArrivalsDataAsync(); });\n    \u00a0\u00a0\u00a0\u00a0SelectionChangedCommand = new AsyncRelayCommand(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0async () => { await LoadArrivalsDataAsync(); \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    }\n    ```", "```cs\n    public async Task LoadArrivalsDataAsync(int stationId = 0)\n    {\n    \u00a0\u00a0if (stationId < 1) \n    \u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0// if no value passed use the previously selected \n    \u00a0\u00a0\u00a0\u00a0// Id.\n    \u00a0\u00a0\u00a0\u00a0stationId = SelectedStation?.Id ?? 0;\n    \u00a0\u00a0}\n    \u00a0\u00a0else \n    \u00a0\u00a0{ \n    \u00a0\u00a0\u00a0\u00a0// We've changed station so clear current details\n    \u00a0\u00a0\u00a0\u00a0Arrivals.Clear();\n    \u00a0\u00a0\u00a0\u00a0DataTimestamp = string.Empty;\n    \u00a0\u00a0\u00a0\u00a0ShowErrorMsg = false;\n    \u00a0\u00a0}\n    \u00a0\u00a0if (stationId > 0) \n    \u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0IsBusy = true;\n    \u00a0\u00a0\u00a0\u00a0try {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var arr = await \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_data.GetArrivalsForStationAsync(stationId);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ShowErrorMsg = false;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (arr.ForStationId == stationId) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DataTimestamp = \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$\"Updated at {arr.Timestamp:t}\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Arrivals.Clear();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!string.IsNullOrEmpty(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0arr.DirectionOneName)) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var d1details = new StationArrivalDetails\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(arr.DirectionOneName);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0d1details.AddRange(arr.DirectionOneDetails);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Arrivals.Add(d1details);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!string.IsNullOrEmpty(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0arr.DirectionTwoName)) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var d2details = new StationArrivalDetails(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0arr.DirectionTwoName);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0d2details.AddRange(arr.DirectionTwoDetails);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Arrivals.Add(d2details);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0catch (Exception exc) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Log this or take other appropriate action\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ShowErrorMsg = true;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0finally {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IsBusy = false;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0}\n    }\n    ```", "```cs\n    using System.Linq;\n    using System.Threading.Tasks;\n    using UnoBookRail.Common.Network;\n    public class DataService \n    {\n    \u00a0\u00a0\u00a0\u00a0private static readonly Lazy<DataService> ds =\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new Lazy<DataService>(() => new\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DataService());\n    \u00a0\u00a0\u00a0\u00a0private static readonly Lazy<Stations> stations =\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new Lazy<Stations>(() => new Stations());\n    \u00a0\u00a0\u00a0\u00a0public static DataService Instance => ds.Value;\n    \u00a0\u00a0\u00a0\u00a0private DataService() { }\n    \u00a0\u00a0\u00a0\u00a0public List<Station> GetAllStations() => \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0stations.Value.GetAll().OrderBy(s => \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0s.Name).ToList();\n    \u00a0\u00a0\u00a0\u00a0public async Task<Arrivals> \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0GetArrivalsForStationAsync method may seem overly complex.\n    ```", "```cs\n    using UnoBookRail.Common.Network;\n    public class StationArrivalDetails : \n    List<ArrivalDetail> \n    {\n    \u00a0\u00a0\u00a0\u00a0public StationArrivalDetails(string platform) \n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Platform = platform;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0public string Platform { get; set; }\n    }\n    ```", "```cs\n    Install-Package System.Net.Http -Version 4.3.4\n    ```", "```cs\n    Install-Package Newtonsoft.Json -Version 12.0.3\n    ```", "```cs\n    using System.Net.Http;\n    private static readonly HttpClient _http = new HttpClient();\n    ```", "```cs\n    using Newtonsoft.Json;\n    public async Task<Arrivals> GetArrivalsForStationAsync(int stationId) \n    {\n    \u00a0\u00a0var url = $\"{WebApiDomain}/stations/?stationid=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{stationId}\";\n    \u00a0\u00a0var rawJson = await _http.GetStringAsync(url);\n    \u00a0\u00a0return JsonConvert.DeserializeObject<Arrivals>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(rawJson);\n    }\n    ```", "```cs\n    Install-Package Polly.Extensions.Http -Version 3.0.0\n    ```", "```cs\n    Install-Package Uno.Material -Version 1.0.0-dev.790\n    ```", "```cs\n    Install-Package Xamarin.AndroidX.AppCompat.AppCompatResources -Version 1.2.0.5\n    Install-Package Xamarin.AndroidX.Lifecycle.LiveData -Version 2.3.1\n    ```", "```cs\n    <Application\n    \u00a0\u00a0\u00a0\u00a0x:Class=\"NetworkAssist.App\"\n    \u00a0\u00a0\u00a0\u00a0xmlns=\"http://schemas.microsoft.com/winfx/2006/\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xaml/presentation\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:x=\"http://schemas.microsoft.com/winfx/2006/\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xaml\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:android=\"http://uno.ui/android\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:local=\"using:NetworkAssist\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:mc=\"http://schemas.openxmlformats.org/\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0markup-compatibility/2006\"\n    \u00a0\u00a0\u00a0\u00a0mc:Ignorable=\"android\">\n    \u00a0\u00a0\u00a0\u00a0<Application.Resources>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ResourceDictionary>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ResourceDictionary.MergedDictionaries>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<XamlControlsResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Microsoft.UI.Xaml.Controls\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<android:MaterialColors xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Material\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<android:MaterialResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Material\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ResourceDictionary.MergedDictionaries>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ResourceDictionary>\n    \u00a0\u00a0\u00a0\u00a0</Application.Resources>\n    </Application>\n    ```", "```cs\n    Button control looks on the arrivals control, but it hasn't improved the buttons in CommandBar at the bottom of the shell page. Let's address this now.\n    ```", "```cs\n    Click events as before. It's only the control that's displaying them that we're changing.NoteAfter adding the `Xamarin.AndroidX` packages, you may get a compilation error related to a file called `abc_vector_test.xml`. This error is due to compatibility inconsistencies between different preview versions of the packages and Visual Studio. This error can be addressed by opening the **Properties** section of the **Android** project, selecting **Android Options**, and unchecking the **Use incremental Android packaging system (aap2)** option. This may lead to a separate build warning and slightly slower builds, but the code will now compile. Hopefully, future updates that are made to these packages will help us avoid this issue.\n    ```", "```cs\n    Install-Package Uno.Cupertino -Version 1.0.0-dev.790\n    ```", "```cs\n    xmlns:ios=\"http://uno.ui/ios\"\n    mc:Ignorable=\"android ios\">\n    <Application.Resources>\n    \u00a0\u00a0\u00a0\u00a0<ResourceDictionary>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ResourceDictionary.MergedDictionaries>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<XamlControlsResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Microsoft.UI.Xaml.Controls\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<android:MaterialColors xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Material\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<android:MaterialResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Material\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ios:CupertinoColors xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Cupertino\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ios:CupertinoResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Cupertino\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ResourceDictionary.MergedDictionaries>\n    \u00a0\u00a0\u00a0\u00a0</ResourceDictionary>\n    </Application.Resources>\n    ```", "```cs\n    Click events that we did previously, but we're using a new converter for ForegroundColor of the Buttons. For this, you'll need to *create a folder* called Converters and *create a file* called CupertinoButtonColorConverter.cs containing the following code:\n\n    ```", "```cs\n\n    ```", "```cs\n    <Application.Resources>\n    \u00a0\u00a0\u00a0\u00a0<ResourceDictionary>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ResourceDictionary.MergedDictionaries>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<XamlControlsResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Microsoft.UI.Xaml.Controls\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<android:MaterialColors xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Material\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<android:MaterialResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Material\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ios:CupertinoColors xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Cupertino\"\u00a0\u00a0/>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ios:CupertinoResources xmlns=\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"using:Uno.Cupertino\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</ResourceDictionary.MergedDictionaries>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<ios:Style TargetType=\"Button\"\n    BasedOn=\"{StaticResource \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CupertinoButtonStyle}\" />\n    \u00a0\u00a0\u00a0\u00a0</ResourceDictionary>\n    </Application.Resources>\n    ```", "```cs\n    Button elements on Android. This is to highlight the importance of each button.\n    ```", "```cs\n    using Windows.Media.Capture;\n    using Windows.UI.Xaml.Media.Imaging;\n    Windows.Storage.StorageFile capturedPhoto;\n    private async void CaptureImageClicked(object sender, RoutedEventArgs e) \n    {\n    \u00a0\u00a0\u00a0\u00a0try \n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var captureUI = new CameraCaptureUI and call CaptureFileAsync to ask it to capture a photograph. When that returns successfully (it isn't canceled by the user), we display the image on the screen and store it in a field to send it to the server later.\n    ```", "```cs\n    using Windows.Devices.Geolocation;\n    using System.Threading.Tasks;\n    private async Task<string> GetLocationAsync() \n    {\n    \u00a0\u00a0\u00a0\u00a0try \n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var accessStatus = await \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Geolocator.RequestAccessAsync();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0switch (accessStatus) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case GeolocationAccessStatus.Allowed:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var geolocator = new Geolocator();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var pos = await \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0geolocator.GetGeopositionAsync();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $\"{pos.Coordinate.Latitude},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{pos.Coordinate.Longitude},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{pos.Coordinate.Altitude}\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case GeolocationAccessStatus.Denied:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"Location access denied\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case GeolocationAccessStatus.Unspecified:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"Location Error\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0catch (Exception ex) \n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Log the exception as appropriate\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return string.Empty;\n    }\n    ```"]