- en: '*Chapter 2*: Setting Up Unity'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第2章*：设置Unity'
- en: In this chapter, we will learn why Unity is a good **game engine** to start
    out with. There are lots of ways to begin a game development career, so choosing
    the proper tool to do so is a huge first step. Then, we will see how to install
    Unity and create a project with Unity Hub, a tool that manages different Unity
    installations and projects, helping us to deal with a whole host of them.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习为什么Unity是一个很好的**游戏引擎**入门工具。开始游戏开发职业有很多种方式，因此选择合适的工具是迈出的重要第一步。然后，我们将看到如何安装Unity并使用Unity
    Hub创建项目，这是一个管理不同Unity安装和项目的工具，帮助我们处理大量项目。
- en: 'Specifically, we will examine the following concepts in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，在本章中我们将研究以下概念：
- en: Why use a game engine such as Unity?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么要使用Unity这样的游戏引擎？
- en: Installing Unity
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Unity
- en: Creating projects
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建项目
- en: Let's start by talking about why you should choose Unity to start your game
    development career.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先讨论为什么选择Unity来开始你的游戏开发职业。
- en: Why use a game engine such as Unity?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要使用Unity这样的游戏引擎？
- en: 'When you want to create a game, you have several ways to do so, each with their
    pros and cons. So, why choose Unity? In this section, we will discuss the reasons
    for this, providing an overview of the previous and the current industry state,
    and specifically seeing the following concepts:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想创建一个游戏时，有几种方法可以选择，每种方法都有其利弊。那么，为什么选择Unity呢？在本节中，我们将讨论这些原因，概述先前和当前行业状态，并具体看到以下概念：
- en: Past and present industry insight
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去和现在的行业洞察
- en: Game engines
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏引擎
- en: Positives of Unity
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity的优势
- en: Past and present industry insight
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过去和现在的行业洞察
- en: 'At the beginning, users struggled with devices with limited resources but simple
    game designs. As the industry evolved, the hardware became more powerful and the
    games more complex than before. A big AAA game title requires almost 200 developers,
    working on different areas of the game. Each one of those roles requires years
    of experience, making games an expensive and risky task: you never know whether
    a game is going to be a success or a big waste of money. For these reasons, it
    was very difficult for a single person to make an entire game.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始阶段，用户们在设备资源有限但游戏设计简单的情况下挣扎。随着行业的发展，硬件变得更加强大，游戏也比以前更加复杂。一个大型AAA游戏标题需要近200名开发人员，负责游戏的不同领域。这些角色中的每一个都需要多年的经验，使得游戏成为一项昂贵且风险高的任务：你永远不知道一个游戏是成功还是浪费了大量资金。因此，一个人很难制作整个游戏。
- en: 'Important Note:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: AAA games are created by lots of people working in big companies, and this usually
    costs millions of dollars. There are also AA games, which denote the difference
    in team size and budget.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: AAA游戏是由许多在大公司工作的人创建的，通常成本数百万美元。还有AA游戏，这意味着团队规模和预算的差异。
- en: In the past, a programmer needed to learn how to use lots of tools in order
    to solve different game development problems. Some tools stopped receiving support
    from their creators, leaving them with unresolved bugs and features. Because of
    that, big companies started to hire highly skilled developers to create all those
    tools, resulting in what is called a game engine. Let's review what this is.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，程序员需要学习如何使用许多工具来解决不同的游戏开发问题。一些工具停止了来自其创建者的支持，留下了未解决的错误和功能。因此，大公司开始雇佣高技能的开发人员来创建所有这些工具，结果就是所谓的游戏引擎。让我们来回顾一下这是什么。
- en: Game engines
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏引擎
- en: A game engine is a set of different pieces of software that solve game development
    problems, such as audio, graphics, and physics issues, but that are designed to
    work together, all operating on the same philosophy. This is important because
    every team and company has its own way of working. Creating a game engine from
    scratch is a great task, and only a few big companies are able to do this. The
    game engines that companies create are usually private, so only the company is
    allowed to use them. Some companies sell their engine, but the cost is too high.
    But another way of getting game engines became available a few years ago.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏引擎是一组不同的软件，解决游戏开发中的问题，如音频、图形和物理问题，但它们被设计为一起工作，都遵循相同的理念。这很重要，因为每个团队和公司都有自己的工作方式。从零开始创建游戏引擎是一项艰巨的任务，只有少数大公司能够做到这一点。公司创建的游戏引擎通常是私有的，所以只有公司被允许使用它们。一些公司出售他们的引擎，但成本太高。但几年前出现了另一种获取游戏引擎的方式。
- en: You have probably heard about indie games created by between 1 and 10 developers,
    but how can such a small team create games? The answer is **general-purpose**
    game engines. These are game engines just like the ones that companies create,
    but they are designed to be a good foundation for every game and provide a toolset
    ready to be used by anyone in any game. These kinds of engines created a whole
    generation of enthusiast developers who are now able to develop their own games
    more easily than before. There were lots of game-engine companies in the past
    but only a few of these survive today, Unity being one of the most influential
    ones. But why is that? Let's discuss this further.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能听说过由1至10名开发人员创建的独立游戏，但是这样一个小团队如何创建游戏呢？答案是**通用**游戏引擎。这些游戏引擎就像公司创建的那些一样，但它们被设计为每个游戏的良好基础，并提供一个准备好供任何游戏开发者使用的工具集。这些引擎创造了一整代的热衷开发者，他们现在能够比以前更容易地开发自己的游戏。过去有很多游戏引擎公司，但只有少数公司今天还在生存，Unity是其中最有影响力的之一。但为什么呢？让我们进一步讨论这个问题。
- en: 'Important Note:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: Other examples of general-purpose engines are Unreal Engine, Godot, Torque,
    and CryEngine.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 其他通用引擎的例子包括虚幻引擎、Godot、扭矩和CryEngine。
- en: Positives of Unity
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity的优势
- en: 'Well, there are lots of potential reasons why Unity is so popular. Let''s enumerate
    a few of them, as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，有很多潜在原因解释了为什么Unity如此受欢迎。让我们列举其中一些，如下：
- en: Unity was designed with simplicity in mind, featuring a very simple and polished
    interface, and tools with few—but powerful—settings. This helps newcomers to not
    immediately feel lost the very second they start the engine.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity的设计初衷是简单易用，具有非常简单和精致的界面，以及少量但功能强大的工具设置。这有助于新手在启动引擎的第一秒就不会立即感到迷失。
- en: The programming language of Unity, C#, is very well known to both beginner and
    advanced programmers, and the Unity way of coding with C# is sleek and easy to
    understand. Unity and C# handle most of the programming problems you may encounter
    in other languages, decreasing your production time greatly.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity的编程语言C#对于初学者和高级程序员都非常熟悉，使用C#进行编码的Unity方式简洁易懂。Unity和C#处理了您在其他语言中可能遇到的大部分编程问题，大大减少了您的生产时间。
- en: Unity was there when the mobile-gaming market era started, and its creators
    just put all their efforts into creating all the features any mobile engine needed.
    In my opinion, this is one of the most important reasons why Unity became what
    it is today.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当移动游戏市场时代开始时，Unity就已经存在了，它的创作者们全力以赴地创造了任何移动引擎所需的所有功能。在我看来，这是Unity成为今天的样子的最重要原因之一。
- en: With other new technologies such as **augmented reality** (**AR**) and **virtual
    reality** (**VR**), Unity has expanded their use not only to gaming, but also
    to applications, training simulations, architecture visualization the, automotive
    industry, films, and so on. Using Unity, you can create applications for a wide
    spectrum of industries, and their use out there is increasing year on year.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着其他新技术，如增强现实（AR）和虚拟现实（VR），Unity不仅将其用于游戏，还用于应用程序、培训模拟、建筑可视化、汽车行业、电影等等。使用Unity，您可以为广泛的行业创建应用程序，它们的使用范围每年都在增加。
- en: Unity has a big community of developers using it, creating bibliographies and
    tutorials, asking and answering questions, and creating plugins for the engine.
    All this helps a lot when you start using Unity because the answer to your problem
    is just a Google search away (and, sometimes, just a few dollars away).
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity拥有庞大的开发者社区，他们创建了参考书目和教程，提出并回答问题，并为引擎创建插件。所有这些在您开始使用Unity时都会有很大帮助，因为解决问题的答案只是一个谷歌搜索（有时只是几美元）之遥。
- en: Because of its growth, there are lots of Unity jobs worldwide, more than for
    other game engines, and some of those jobs are looking for junior developers,
    so there's a big chance for a newcomer to enter the industry.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于其增长，全球范围内有大量的Unity工作机会，比其他游戏引擎的工作机会更多，其中一些工作机会正在寻找初级开发人员，因此新人进入这个行业的机会很大。
- en: Unity is not all good—it has its cons, and there are other engines out there
    (such as Unreal Engine 4 or Godot) that compete with Unity over several of those
    limitations, having some better features than Unity but also having their own
    caveats. In my opinion, picking Unity or another engine depends on what you are
    intending to do, and what the technologies are that you are used to using, but
    at the end of the day, you can do everything you need just with Unity and deal
    with any weaknesses with the help of their big community. Now that we know about
    Unity, let's see how to install the engine.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Unity并非完美无缺，它也有缺点，还有其他引擎（如Unreal Engine 4或Godot）与Unity竞争，它们在一些方面比Unity更好，但也有自己的缺点。在我看来，选择Unity还是其他引擎取决于您的意图以及您习惯使用的技术，但归根结底，您可以使用Unity做任何您需要做的事情，并借助其庞大的社区来解决任何弱点。现在我们了解了Unity，让我们看看如何安装引擎。
- en: Installing Unity
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Unity
- en: 'Okay; after all of that, you''ve decided to go with Unity—great decision! Now,
    where do we start? Let''s start with a simple but necessary first step: installing
    Unity. It seems like a straightforward first step, but we can discuss a little
    bit about the proper ways to install it. In this section, we will be looking at
    the following concepts:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，经过所有这些，您已经决定选择Unity——很好的决定！现在，我们从哪里开始呢？让我们从一个简单但必要的第一步开始：安装Unity。这似乎是一个直接的第一步，但我们可以讨论一下正确的安装方式。在本节中，我们将讨论以下概念：
- en: Unity technical requirements
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity技术要求
- en: Unity versions
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity版本
- en: Installing Unity
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Unity
- en: 'To run Unity 2020, your computer will need to met the next requirements:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行Unity 2020，您的计算机需要满足以下要求：
- en: If you use Windows, you need Windows 7 SP1 or higher, 8 or 10\. Unity will run
    only on 64-bit versions of those systems; there is no 32-bit support.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您使用Windows，您需要Windows 7 SP1或更高版本，8或10。Unity只能在这些系统的64位版本上运行；不支持32位。
- en: For Mac you need macOS High Sierra 10.13 or higher.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于Mac，您需要macOS High Sierra 10.13或更高版本。
- en: For Linux you need exactly Ubuntu 16.04 or 18.04 or CentOS 7.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于Linux，您需要Ubuntu 16.04或18.04或CentOS 7。
- en: Your CPU needs to support 64 bits and SSE2 (most CPUs support it).
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的CPU需要支持64位和SSE2（大多数CPU都支持）。
- en: A graphics card with DirectX 10 support (most modern GPUs support it) on Windows,
    Metal support on Mac and Open GL 3.2+ or Vulkan support on Linux.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有DirectX 10支持的显卡（大多数现代GPU都支持）在Windows上，Mac上支持Metal，在Linux上支持Open GL 3.2+或Vulkan支持。
- en: Now that we know the requirements, let's discuss the Unity versioning system.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了要求，让我们讨论一下Unity的版本控制系统。
- en: Unity versions
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity版本
- en: In previous versions of Unity, we used to simply download the installer of a
    specific Unity version and hit **Next** until it was installed. But when you use
    Unity professionally, you need to have several versions of Unity installed because
    you will be working on different projects made with different versions. You may
    be wondering why you can't just use the latest Unity version for every project,
    but there are some problems with that.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的Unity版本中，我们通常只需下载特定Unity版本的安装程序，然后一直点击“下一步”直到安装完成。但是当您专业使用Unity时，您需要安装几个不同版本的Unity，因为您将使用不同版本制作的不同项目。您可能会想为什么不能只使用最新的Unity版本来处理每个项目，但这会带来一些问题。
- en: In new versions of Unity, there are usually lots of changes about how the engine
    works, so you may need to rework lots of pieces of the game to upgrade it. Also,
    you may be using plugins that just haven't adapted to updates yet, so those will
    stop working. In my personal projects, I am used to doing project upgrades; but
    just for learning purposes, in a project that has a specific release date, it
    can take lots of time to upgrade the whole project, and that can push the release
    date back a lot. Maybe you need a specific feature that comes with an update that
    will help you a lot. In such a case, the cost of upgrading may be worthwhile,
    but take into account that most of the time, this doesn't happen.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity的新版本中，通常会有很多关于引擎如何工作的变化，因此您可能需要重新调整游戏的许多部分以进行升级。此外，您可能正在使用尚未适应更新的插件，因此这些插件将停止工作。在我的个人项目中，我习惯于进行项目升级；但仅仅出于学习目的，在具有特定发布日期的项目中，可能需要花费大量时间来升级整个项目，这可能会大大推迟发布日期。也许您需要一个特定的功能，该功能随着更新而带来了很大帮助。在这种情况下，升级的成本可能是值得的，但请注意，大多数情况下，这种情况并不会发生。
- en: Managing different projects made with different Unity versions, installing and
    updating new Unity releases, and so on used to be a huge hassle, but Unity Hub
    was created just to help us with this, and it has become the default way to install
    Unity. Let's see more about it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '管理使用不同Unity版本制作的不同项目，安装和更新新的Unity版本等过去是一件很麻烦的事情，但Unity Hub就是为了帮助我们解决这个问题而创建的，并且已经成为安装Unity的默认方式。让我们更多地了解一下。 '
- en: Installing Unity with Unity Hub
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Unity Hub安装Unity
- en: 'Unity Hub is a small piece of software you install before installing Unity.
    It centralizes the management of all your Unity projects and installations. You
    can get it from the Unity official site. The steps to download it change frequently,
    but at the time of writing this book, you need to do the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Unity Hub是您在安装Unity之前安装的一小部分软件。它集中管理所有您的Unity项目和安装。您可以从Unity官方网站获取它。下载它的步骤经常会发生变化，但在撰写本书时，您需要执行以下操作：
- en: Go to [unity.com](http://unity.com).
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[unity.com](http://unity.com)。
- en: Click on the **Get started** blue button, as shown in the following screenshot:![Figure
    2.1 – TheGet started button on the Unity site
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**开始**蓝色按钮，如下截图所示：![图2.1-Unity网站上的开始按钮
- en: '](img/Figure_2.01_B14199.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.01_B14199.jpg)'
- en: Figure 2.1 – The Get started button on the Unity site
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1-Unity网站上的开始按钮
- en: Click on the **Individual** tab and on the **Get started** button under the
    **Personal** section, as illustrated in the following screenshot:![Figure 2.2
    – Choosing an individual/free license
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**个人**选项卡，然后点击**个人**部分下的**开始**按钮，如下截图所示：![图2.2-选择个人/免费许可证
- en: '](img/Figure_2.02_B14199.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.02_B14199.jpg)'
- en: Figure 2.2 – Choosing an individual/free license
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2-选择个人/免费许可证
- en: Click on the **Start here** button in the **New Users** section, as illustrated
    in the following screenshot:![Figure 2.3 – Starting the download
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新用户**部分的**从这里开始**按钮，如下截图所示：![图2.3-开始下载
- en: '](img/Figure_2.03_B14199.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.03_B14199.jpg)'
- en: Figure 2.3 – Starting the download
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3-开始下载
- en: Accept the terms and conditions, as illustrated in the following screenshot:![Figure
    2.4 – Agreeing to the privacy policy
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受条款和条件，如下截图所示：![图2.4-同意隐私政策
- en: '](img/Figure_2.04_B14199.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.04_B14199.jpg)'
- en: Figure 2.4 – Agreeing to the privacy policy
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4-同意隐私政策
- en: Execute the downloaded installer.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行下载的安装程序。
- en: 'Consider that we are using Unity Hub 2.3.2, the latest version at the moment
    of writing this book. If you use a newer one some steps might change, but the
    main concepts usually remain. Now that we have Unity Hub installed, we must use
    it to install a specific Unity version. You can do this with the following steps:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用的是Unity Hub 2.3.2，这是撰写本书时的最新版本。如果您使用更新版本，某些步骤可能会发生变化，但主要概念通常保持不变。现在我们已经安装了Unity
    Hub，我们必须使用它来安装特定的Unity版本。您可以按照以下步骤执行：
- en: Start Unity Hub.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Unity Hub。
- en: It may ask you to create a Unity account. If so, just create one and log in
    with that account. If not, click the person icon at the top-right part of the
    window and select **Sign in** to have the option to log in or create an account,
    as illustrated in the following screenshot:![Figure 2.5 – Logging in to Unity
    Hub
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它可能会要求您创建一个Unity账户。如果是这样，请创建一个账户并用该账户登录。如果没有，请点击窗口右上角的人物图标，然后选择**登录**以有登录或创建账户的选项，如下截图所示：![图2.5-登录到Unity
    Hub
- en: '](img/Figure_2.05_B14199.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.05_B14199.jpg)'
- en: Figure 2.5 – Logging in to Unity Hub
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5-登录到Unity Hub
- en: Follow the steps on the installer and then, you should see the following screen:![Figure
    2.6 – Unity Hub window
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照安装程序上的步骤，然后您应该会看到以下屏幕：![图2.6-Unity Hub窗口
- en: '](img/Figure_2.06_B14199.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.06_B14199.jpg)'
- en: Figure 2.6 – Unity Hub window
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6-Unity Hub窗口
- en: Newer versions of Unity guides you through the Unity Installation and first
    project creation. In that case skip the next steps, but if you already have Unity
    installed, please follow them
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新版本的Unity会指导您完成Unity安装和第一个项目的创建。在这种情况下，请跳过下一步，但如果您已经安装了Unity，请按照它们的步骤进行。
- en: Click on the **Installs** button and check if you have Unity 2020 listed there.
    If not press the **ADD** button. Make sure the latest Unity 2020 release (in my
    case Unity 2020.1.0f1) is selected, and then click on the **NEXT** button. Your
    screen may show a newer version than mine, so don't worry about that. The process
    is illustrated in the following screenshot:![Figure 2.7 – Picking the Unity version
    to install
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**安装**按钮，检查您是否在那里列出了Unity 2020。如果没有，请按**添加**按钮。确保选择了最新的Unity 2020版本（在我的情况下是Unity
    2020.1.0f1），然后点击**下一步**按钮。您的屏幕可能显示比我的更新版本，所以不用担心。该过程如下截图所示：![图2.7-选择要安装的Unity版本
- en: '](img/Figure_2.07_B14199.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.07_B14199.jpg)'
- en: Figure 2.7 – Picking the Unity version to install
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7-选择要安装的Unity版本
- en: 'Important Note:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: This is the program we will use in [*Chapter 13*](B14199_13_Final_SK_ePub.xhtml#_idTextAnchor172)*,
    Introduction to Scripting with C#*, to create our code. We do not need the other
    Unity features right now, but you can go back later and install them if you need
    them.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将在[*第13章*](B14199_13_Final_SK_ePub.xhtml#_idTextAnchor172)*，使用C#进行脚本编写的介绍*中使用的程序。我们现在不需要其他Unity功能，但如果您需要，可以随时返回并安装它们。
- en: A feature selection window will show up. Make sure **Microsoft Visual Studio
    Community** is checked. At the time of writing this book, the latest version is
    2019, but a newer one could work just as well. Now, click the **NEXT** button.
    The process is illustrated in the following screenshot:![Figure 2.8 – Selecting
    Visual Studio
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会出现一个功能选择窗口。确保**Microsoft Visual Studio Community**被选中。在撰写本书时，最新版本是2019，但更新版本也同样适用。现在，点击**下一步**按钮。该过程如下截图所示：![图2.8
    - 选择Visual Studio
- en: '](img/Figure_2.08_B14199.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.08_B14199.jpg)'
- en: Figure 2.8 – Selecting Visual Studio
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8 - 选择Visual Studio
- en: Accept Visual Studios terms and conditions, as illustrated in the following
    screenshot:![Figure 2.9 – Accepting Visual Studio’s terms and conditions
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受Visual Studios的条款和条件，如下截图所示：![图2.9 - 接受Visual Studio的条款和条件
- en: '](img/Figure_2.09_B14199.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.09_B14199.jpg)'
- en: Figure 2.9 – Accepting Visual Studio's terms and conditions
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9 - 接受Visual Studio的条款和条件
- en: You will see the selected Unity version downloading and installing in the list.
    Wait for this to finish. In the following screenshot, you will see that I have
    other Unity versions installed, but you will only be seeing one version, which
    is fine:![Figure 2.10 – All Unity installations I currently have on my machine
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到所选的Unity版本正在下载并安装。等待此过程完成。在下图中，您将看到我安装了其他Unity版本，但您只会看到一个版本，这是正常的：![图2.10
    - 我目前在计算机上安装的所有Unity版本
- en: '](img/Figure_2.10_B14199.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.10_B14199.jpg)'
- en: Figure 2.10 – All Unity installations I currently have on my machine
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10 - 我目前在计算机上安装的所有Unity版本
- en: 'After Unity has finished installing, Visual Studio Installer will automatically
    execute. It will download an installer that will download and install Visual Studio
    Community 2019, as illustrated in the following screenshot:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当Unity安装完成后，Visual Studio Installer将自动执行。它将下载一个安装程序，该安装程序将下载并安装Visual Studio
    Community 2019，如下截图所示：
- en: '![Figure 2.11 – Installing Visual Studio'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.11 - 安装Visual Studio'
- en: '](img/Figure_2.11_B14199.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.11_B14199.jpg)'
- en: Figure 2.11 – Installing Visual Studio
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11 - 安装Visual Studio
- en: Remember that the preceding steps may be different in new Unity versions, so
    just try to follow the flow that Unity designed—most of the time, it is intuitive.
    Now is the time to create a project using Unity.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，新的Unity版本可能会有不同的步骤，所以尽量按照Unity设计的流程进行操作——大多数情况下，这是直观的。现在是使用Unity创建项目的时候了。
- en: Creating projects
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建项目
- en: 'Now that we have Unity installed, we can start creating our game. To do so,
    we first need to create a project, which is basically a folder containing all
    the files that your game will be composed of. These files are called assets and
    there are different types of them, such as images, audio, 3D models, script files,
    and so on. In this section, we will see how to manage a project, addressing the
    following concepts:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了Unity，可以开始创建我们的游戏了。为此，我们首先需要创建一个项目，这基本上是一个包含游戏所有文件的文件夹。这些文件称为资源，有不同类型，如图像、音频、3D模型、脚本文件等。在本节中，我们将看到如何管理项目，涉及以下概念：
- en: Creating a project
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建项目
- en: Project structure
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目结构
- en: Creating a project
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建项目
- en: 'As with Unity installations, we will use Unity Hub to manage projects. We need
    to follow these steps to create one:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 与Unity安装一样，我们将使用Unity Hub来管理项目。我们需要按照以下步骤创建一个项目：
- en: Open Unity Hub and click on the **Projects** button, and then click on **NEW**,
    as illustrated in the following screenshot:![Figure 2.12 – Creating a new project
    in Unity Hub
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Unity Hub，点击**项目**按钮，然后点击**新建**，如下截图所示：![图2.12 - 在Unity Hub中创建新项目
- en: '](img/Figure_2.12_B14199.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.12_B14199.jpg)'
- en: Figure 2.12 – Creating a new project in Unity Hub
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.12 - 在Unity Hub中创建新项目
- en: Pick the **Universal Render Pipeline** template, then a project name and a location,
    and hit **Create**. We will be creating a 3D game with simple graphics, prepared
    to run on every device Unity can be executed on, so the **Universal Render Pipeline**
    (or **URP**) is the better choice for that. In [*Chapter 6*](B14199_06_Final_SK_ePub.xhtml#_idTextAnchor098)*,
    Materials and Effects with URP and Shader Graph*, we will be discussing exactly
    why. The process can be seen in the following screenshot:![Figure 2.13 – Selecting
    the Universal Render Pipeline template
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**通用渲染管线**模板，然后输入项目名称和位置，然后点击**创建**。我们将创建一个简单图形的3D游戏，准备在Unity可以执行的每个设备上运行，因此**通用渲染管线**（或**URP**）是更好的选择。在[*第6章*](B14199_06_Final_SK_ePub.xhtml#_idTextAnchor098)*，使用URP和Shader
    Graph进行材质和效果*中，我们将详细讨论原因。该过程如下截图所示：![图2.13 - 选择通用渲染管线模板
- en: '](img/Figure_2.13_B14199.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.13_B14199.jpg)'
- en: Figure 2.13 – Selecting the Universal Render Pipeline template
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13 - 选择通用渲染管线模板
- en: 'Important Note:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: Try to put the project in Dropbox, Google Drive, or any cloud-synchronized folder
    to make sure you always have the project at hand. This project will grow, so make
    sure you have enough space in that folder. If you don't have enough space in your
    hosting service, just skip this. If you know how to use Git, that would be a better
    option.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将项目放在Dropbox、Google Drive或任何云同步文件夹中，以确保您随时可以使用该项目。这个项目会不断增长，所以确保您在该文件夹中有足够的空间。如果您的托管服务空间不足，可以跳过这一步。如果您知道如何使用Git，那将是一个更好的选择。
- en: Unity will create and automatically open the project. This can take a while,
    but after that, you will see a screen similar to the one shown in the following
    screenshot:![Figure 2.14 – The Unity Editor window
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity将创建并自动打开项目。这可能需要一些时间，但之后，您将看到一个类似于下图所示的屏幕：![图2.14 - Unity编辑器窗口
- en: '](img/Figure_2.14_B14199.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.14_B14199.jpg)'
- en: Figure 2.14 – The Unity Editor window
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.14 – Unity编辑器窗口
- en: 'Try closing the window and opening it again, then going back to Unity Hub and
    picking the project from the list, as follows:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试关闭窗口，然后再次打开它，然后返回Unity Hub并从列表中选择项目，如下所示：
- en: '![Figure 2.15 – Reopening the project'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.15 – 重新打开项目'
- en: '](img/Figure_2.15_B14199.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.15_B14199.jpg)'
- en: Figure 2.15 – Reopening the project
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.15 – 重新打开项目
- en: Now that we have created the project, let's explore its structure.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了项目，让我们来探索它的结构。
- en: Project structure
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目结构
- en: 'We have just opened Unity but we won''t start using it until the next chapter.
    Now, it''s time to see how the project folder structure is composed. To do so,
    we need to open the folder in which we created the project. If you don''t remember
    where this is, you can do the following:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚打开了Unity，但在下一章之前我们不会开始使用它。现在是时候看看项目文件夹结构是如何组成的了。为此，我们需要打开创建项目的文件夹。如果您不记得这是在哪里，可以这样做：
- en: Right-click the `Assets` folder in the **Project** panel, located in the bottom
    part of the editor.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击编辑器底部的**项目**面板中的`Assets`文件夹。
- en: 'Click the **Show in Explorer** option. If you are using a Mac, the option is
    called **Reveal in Finder**. The following screenshot illustrates this:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**在资源管理器中显示**选项。如果您使用的是Mac，该选项称为**在Finder中显示**。以下截图说明了这一点：
- en: '![Figure 2.16 – Opening the project folder in Explorer'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.16 – 在资源管理器中打开项目文件夹'
- en: '](img/Figure_2.16_B14199.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.16_B14199.jpg)'
- en: Figure 2.16 – Opening the project folder in Explorer
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16 – 在资源管理器中打开项目文件夹
- en: 'Then, you will see the following folder structure:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您将看到以下文件夹结构：
- en: '![Figure 2.17 – Unity project folder structure'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.17 – Unity项目文件夹结构'
- en: '](img/Figure_2.17_B14199.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.17_B14199.jpg)'
- en: Figure 2.17 – Unity project folder structure
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.17 – Unity项目文件夹结构
- en: If anytime you want to move this project to another PC or send it to a colleague,
    you can just compress all those files and send it to them as a ZIP file, but not
    all the folders are necessary all of the time. The important folders are `Assets`,
    `Packages`, and `ProjectSettings`. The `Assets folder` will hold all the files
    we will create and use for our game, so this is a must. We will also configure
    different Unity systems to tailor the engine to our game. All the settings related
    to this are in the `ProjectSettings` folder. Finally, we will install different
    Unity modules or packages to expand its functionality, so the `Packages` folder
    will hold which ones we are using, for Unity to be aware of that. It's not necessary
    to copy the rest of the folders if you need to move the project elsewhere, but
    let's at least discuss what the `Library` folder is.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想随时将此项目移动到另一台PC或发送给同事，只需压缩所有这些文件并将其作为ZIP文件发送给他们，但并非所有文件夹都是必需的。重要的文件夹是`Assets`，`Packages`和`ProjectSettings`。`Assets文件夹`将保存我们为游戏创建和使用的所有文件，因此这是必须的。我们还将配置不同的Unity系统以定制引擎以适应我们的游戏。所有与此相关的设置都在`ProjectSettings`文件夹中。最后，我们将安装不同的Unity模块或包以扩展其功能，因此`Packages`文件夹将保存我们正在使用的模块，以便Unity知道。如果您需要将项目移动到其他地方，则无需复制其余文件夹，但让我们至少讨论一下`Library`文件夹是什么。
- en: Unity needs to convert the files we will use into its own format in order to
    operate, and an example would be audio and graphics. Unity supports `Assets` folder
    and recreate the `Library` folder entirely. This process can take time, and the
    bigger the project, the more time involved.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Unity需要将我们将要使用的文件转换为自己的格式才能运行，一个例子就是音频和图形。Unity支持`Assets`文件夹并完全重新创建`Library`文件夹。这个过程可能需要时间，项目越大，所需的时间就越多。
- en: Take into account that you want to have all the folders Unity created while
    you are working on the project, so don't delete any of them while doing so, but
    if you need to move an entire project, you now know exactly what you need to take
    with you.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您在项目上工作时希望保留Unity创建的所有文件夹，因此在这期间不要删除任何文件夹，但如果您需要移动整个项目，现在您知道需要携带哪些文件。
- en: Summary
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed why Unity is a great tool for creating games,
    comparing it with other engines in the market. This analysis has the intention
    of helping you choose Unity as your first game development tool. After that, we
    also reviewed how to install and manage different Unity versions using Unity Hub,
    and, finally, we saw how to create and manage multiple projects with the same
    tool. We will use Unity Hub a lot, so it is important to know how to use it initially.
    Now, we are prepared to dive into the Unity Editor.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了为什么Unity是一个用于创建游戏的好工具，并将其与市场上的其他引擎进行了比较。这个分析旨在帮助您选择Unity作为您的第一个游戏开发工具。之后，我们还回顾了如何使用Unity
    Hub安装和管理不同的Unity版本，最后，我们看到了如何使用相同的工具创建和管理多个项目。我们将经常使用Unity Hub，因此最初了解如何使用它是很重要的。现在，我们已经准备好进入Unity编辑器。
- en: In the next chapter, we will start learning the basic Unity tools to author
    our first-level prototype.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始学习基本的Unity工具，以制作我们的第一级原型。
