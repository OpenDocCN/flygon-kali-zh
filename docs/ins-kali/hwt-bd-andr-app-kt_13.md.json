["```kt\nval observable = Observable.just(\"This observable emits this string\")\nval observableFromList = Observable.fromIterable(listOf(1, 2, 3, 4))\n```", "```kt\nObservable.range(1, 10)\n.filter { it % 2 == 0 }\n.map { it * it }\n```", "```kt\nObservable.fromIterable(listOf(2, 4, 6, 8, 10))\n\u00a0\u00a0\u00a0\u00a0.subscribe(object : Observer<Int> {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onComplete() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0println(\"completed\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onSubscribe(d: Disposable) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0println(\"subscribed\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onNext(t: Int) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0println(\"next integer is $t\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onError(e: Throwable) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0println(\"error encountered\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0})\n```", "```kt\nval disposable = observable\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.subscribe(...)\n```", "```kt\noverride fun onDestroy() {\n\u00a0\u00a0\u00a0\u00a0super.onDestroy()\n\u00a0\u00a0\u00a0\u00a0disposable.dispose()\n}\n```", "```kt\nval observable = getData()\n\u00a0\u00a0\u00a0.subscribeOn(Schedulers.io())\n\u00a0\u00a0\u00a0.observeOn(AndroidSchedulers.mainThread())\n\u00a0\u00a0\u00a0...\n```", "```kt\nimplementation 'io.reactivex.rxjava3:rxandroid:3.0.0'\nimplementation 'io.reactivex.rxjava3:rxjava:3.0.7'\n```", "```kt\nimplementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'\n```", "```kt\nval retrofit = Retrofit.Builder()\n\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0\u00a0\u00a0.addCallAdapterFactory(RxJava3CallAdapterFactory.create())\n\u00a0\u00a0\u00a0\u00a0...\n```", "```kt\n@GET(\"movie\")\nfun getMovies() : Observable<Movie>\n```", "```kt\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    ```", "```kt\n    plugins {\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0id 'kotlin-parcelize'\n    }\n    ```", "```kt\n    compileOptions {\n    \u00a0\u00a0\u00a0\u00a0sourceCompatibility JavaVersion.VERSION_1_8\n    \u00a0\u00a0\u00a0\u00a0targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n    \u00a0\u00a0\u00a0\u00a0jvmTarget = '1.8'\n    }\n    ```", "```kt\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'\n    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'\n    implementation 'io.reactivex.rxjava3:rxjava:3.0.7'\n    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\n    ```", "```kt\n    <resources>\n    \u00a0\u00a0\u00a0\u00a0<dimen name=\"layout_margin\">16dp</dimen>\n    </resources>\n    ```", "```kt\n    view_movie_item.xml\n    9\u00a0\u00a0\u00a0\u00a0<ImageView\n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/movie_poster\"\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"240dp\"\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:contentDescription=\"Movie Poster\"\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintBottom_toBottomOf=\"parent\"\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintEnd_toEndOf=\"parent\"\n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"parent\"\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\"\n    18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tools:src=\"img/scenic\" />\n    19\n    20\u00a0\u00a0\u00a0\u00a0<TextView\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/movie_title\"\n    22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginStart=\"@dimen/layout_margin\"\n    25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginEnd=\"@dimen/layout_margin\"\n    26\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:ellipsize=\"end\"\n    27\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:gravity=\"center\"\n    28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:lines=\"1\"\n    29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:textSize=\"20sp\"\n    30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintEnd_toEndOf=\"@id/movie_poster\"\n    31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"@id/movie_poster\"\n    32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toBottomOf=\"@id/movie_poster\"\n    33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tools:text=\"Movie\" />\n    The complete code for this step can be found at http://packt.live/3sD8zmN.\n    ```", "```kt\n    <androidx.recyclerview.widget.RecyclerView\n    \u00a0\u00a0\u00a0\u00a0android:id=\"@+id/movie_list\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_height=\"match_parent\"\n    app:layoutManager=  \"androidx.recyclerview.widget.GridLayoutManager\"\n    \u00a0\u00a0\u00a0\u00a0app:layout_constraintBottom_toBottomOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0app:spanCount=\"2\"\n    \u00a0\u00a0\u00a0\u00a0tools:listitem=\"@layout/view_movie_item\" />\n    ```", "```kt\n    @Parcelize\n    data class Movie(\n    \u00a0\u00a0\u00a0\u00a0val adult: Boolean = false,\n    \u00a0\u00a0\u00a0\u00a0val backdrop_path: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val id: Int = 0,\n    \u00a0\u00a0\u00a0\u00a0val original_language: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val original_title: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val overview: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val popularity: Float = 0f,\n    \u00a0\u00a0\u00a0\u00a0val poster_path: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val release_date: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val title: String = \"\",\n    \u00a0\u00a0\u00a0\u00a0val video: Boolean = false,\n    \u00a0\u00a0\u00a0\u00a0val vote_average: Float = 0f,\n    \u00a0\u00a0\u00a0\u00a0val vote_count: Int = 0\n    ) : Parcelable\n    ```", "```kt\n    <activity android:name=\".DetailsActivity\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:parentActivityName=\".MainActivity\" />\n    ```", "```kt\n    activity_details.xml\n    9\u00a0\u00a0\u00a0\u00a0<ImageView\n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/movie_poster\"\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"160dp\"\n    12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"160dp\"\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_margin=\"@dimen/layout_margin\"\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:contentDescription=\"Poster\"\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"parent\"\n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\"\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tools:src=\"img/avatars\" />\n    18\n    19\u00a0\u00a0\u00a0\u00a0<TextView\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/title_text\"\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0style=\"@style/TextAppearance.AppCompat.Title\"\n    22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"0dp\"\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_margin=\"@dimen/layout_margin\"\n    25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:ellipsize=\"end\"\n    26\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:maxLines=\"4\"\n    27\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintEnd_toEndOf=\"parent\"\n    28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toEndOf=\"@+id/movie_poster\"\n    29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\"\n    30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tools:text=\"Title\" />\n    The complete code for this step can be found at http://packt.live/38WyRbQ.\n    ```", "```kt\n    class DetailsActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0companion object {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const val EXTRA_MOVIE = \"movie\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const val IMAGE_URL = \"https://image.tmdb.org/t/p/w185/\"\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_details)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val titleText: TextView = findViewById(R.id.title_text)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val releaseText: TextView = findViewById(R.id.release_text)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val overviewText: TextView = findViewById(R.id.overview_text)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val poster: ImageView = findViewById(R.id.movie_poster)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val movie = intent.getParcelableExtra<Movie>(EXTRA_MOVIE)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movie?.run {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0titleText.text = title\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0releaseText.text = release_date.take(4)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0overviewText.text = \"Overview: $overview\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Glide.with(this@DetailsActivity)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.load(\"$IMAGE_URL$poster_path\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.placeholder(R.mipmap.ic_launcher)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.fitCenter()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.into(poster)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MovieAdapter(private val clickListener: MovieClickListener) :   RecyclerView.Adapter<MovieAdapter.MovieViewHolder>() {\n    \u00a0\u00a0\u00a0\u00a0private val movies = mutableListOf<Movie>()\n    override fun onCreateViewHolder(parent: ViewGroup,   viewType: Int): MovieViewHolder {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val view = LayoutInflater.from(parent.context)          .inflate(R.layout.view_movie_item, parent, false)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return MovieViewHolder(view)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0override fun getItemCount() = movies.size\n    \u00a0\u00a0\u00a0\u00a0override fun onBindViewHolder(holder: MovieViewHolder,       position: Int) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val movie = movies[position]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0holder.bind(movie)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0holder.itemView.setOnClickListener {           clickListener.onMovieClick(movie) }\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun addMovies(movieList: List<Movie>) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movies.addAll(movieList)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0notifyItemRangeInserted(0, movieList.size)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MovieAdapter...\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0class MovieViewHolder(itemView: View) :       RecyclerView.ViewHolder(itemView) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val imageUrl = \"https://image.tmdb.org/t/p/w185/\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val titleText: TextView by lazy {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0itemView.findViewById(R.id.movie_title)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val poster: ImageView by lazy {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0itemView.findViewById(R.id.movie_poster)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun bind(movie: Movie) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0titleText.text = movie.title\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Glide.with(itemView.context)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.load(\"$imageUrl${movie.poster_path}\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.placeholder(R.mipmap.ic_launcher)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.fitCenter()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.into(itemView.poster)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MovieAdapter...\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0interface MovieClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun onMovieClick(movie: Movie)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    data class PopularMoviesResponse (\n    \u00a0\u00a0\u00a0\u00a0val page: Int,\n    \u00a0\u00a0\u00a0\u00a0val results: List<Movie>\n    )\n    ```", "```kt\n    interface MovieService {\n    @GET(\"movie/popular\")\n    fun getPopularMovies(@Query(\"api_key\") apiKey: String):   Observable<PopularMoviesResponse>\n    }\n    ```", "```kt\n    class MovieRepository(private val movieService: MovieService) { ... } \n    ```", "```kt\n    private val apiKey = \"your_api_key_here\"\n    fun fetchMovies() = movieService.getPopularMovies(apiKey)\n    ```", "```kt\n    class MovieApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0lateinit var movieRepository: MovieRepository\n    }\n    ```", "```kt\n    override fun onCreate() { \n    \u00a0\u00a0super.onCreate()\n    \u00a0\u00a0val retrofit = Retrofit.Builder()\n    \u00a0\u00a0\u00a0\u00a0.baseUrl(\"https://api.themoviedb.org/3/\")\n    \u00a0\u00a0\u00a0\u00a0.addConverterFactory(MoshiConverterFactory.create())\n    \u00a0\u00a0\u00a0\u00a0.addCallAdapterFactory(RxJava3CallAdapterFactory.create())\n    \u00a0\u00a0\u00a0\u00a0.build()\n    \u00a0\u00a0val movieService = retrofit.create(MovieService::class.java)\n    \u00a0\u00a0movieRepository = MovieRepository(movieService) \n    }\n    ```", "```kt\n    <application\n    \u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0android:name=\".MovieApplication\"\n    \u00a0\u00a0\u00a0\u00a0... />\n    ```", "```kt\n    class MovieViewModel(private val movieRepository: MovieRepository) :   ViewModel() { ... }\n    ```", "```kt\n    private val popularMoviesLiveData = MutableLiveData<List<Movie>>()\n    private val errorLiveData = MutableLiveData<String>()\n    val popularMovies: LiveData<List<Movie>>\n    \u00a0\u00a0\u00a0\u00a0get() = popularMoviesLiveData\n    val error: LiveData<String>\n    \u00a0\u00a0\u00a0\u00a0get() = errorLiveData\n    private var disposable = CompositeDisposable()\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0fun fetchPopularMovies() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0disposable.add(movieRepository.fetchMovies()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.subscribeOn(Schedulers.io())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.map { it.results }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.observeOn(AndroidSchedulers.mainThread())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.subscribe({\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0popularMoviesLiveData.postValue(it)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}, { error ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorLiveData.postValue(\"An error occurred:                   ${error.message}\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0override fun onCleared() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCleared()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0disposable.dispose()\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    private val movieAdapter by lazy {\n    \u00a0\u00a0\u00a0\u00a0MovieAdapter(object : MovieAdapter.MovieClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onMovieClick(movie: Movie) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openMovieDetails(movie)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0})\n    }\n    ```", "```kt\n    val recyclerView: RecyclerView = findViewById(R.id.movie_list)\n    recyclerView.adapter = movieAdapter \n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0private fun getMovies() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val movieRepository = (application as           MovieApplication).movieRepository\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val movieViewModel = ViewModelProvider(this, object :           ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?>               create(modelClass: Class<T>): T {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return MovieViewModel(movieRepository) as T\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}).get(MovieViewModel::class.java)\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    private fun getMovies() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieViewModel.fetchPopularMovies()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieViewModel.popularMovies\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.observe(this, { popularMovies ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieAdapter.addMovies(popularMovies)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieViewModel.error.observe(this, { error ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Toast.makeText(this, error, Toast.LENGTH_LONG).show()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    getMovies()\n    ```", "```kt\n    private fun openMovieDetails(movie: Movie) { \n    \u00a0\u00a0\u00a0\u00a0val intent =       Intent(this, DetailsActivity::class.java).apply { \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0putExtra(DetailsActivity.EXTRA_MOVIE, movie)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0startActivity(intent)\n    }\n    ```", "```kt\n.flatMap { Observable.fromIterable(it.results) }\n```", "```kt\n.map { it * 2 }\n```", "```kt\n.filter { it % 2 != 0 }\n```", "```kt\n    .flatMap { Observable.fromIterable(it.results) }\n    .toList()\n    ```", "```kt\n    .filter {\n    \u00a0\u00a0\u00a0\u00a0val cal = Calendar.getInstance()\n    \u00a0\u00a0\u00a0\u00a0cal.add(Calendar.MONTH, -1)\n    \u00a0\u00a0\u00a0\u00a0it.release_date.startsWith(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"${cal.get(Calendar.YEAR)}-${cal.get(Calendar.MONTH) + 1}\"\n    \u00a0\u00a0\u00a0\u00a0)\n    }\n    ```", "```kt\n    .sorted { movie, movie2 -> movie.title.compareTo(movie2.title) }\n    ```", "```kt\n    .map { it.copy(title = it.title.toUpperCase(Locale.getDefault())) }\n    ```", "```kt\n    .take(4)\n    ```", "```kt\nval movies = getMovies()\ndisplayMovies(movies) \n```", "```kt\nsuspend fun getMovies(): List<Movies> { ... }\n```", "```kt\nsuspend fun getMovies(): List<Movies>\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0withContext(Dispatchers.IO) { ... }\n}\n```", "```kt\nMainScope().async { ... }\nMainScope().launch { ... }\n```", "```kt\nval scope = CoroutineScope(Dispatchers.IO)\n```", "```kt\nscope.cancel()\n```", "```kt\nimplementation \"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9\"\nimplementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9\"\n```", "```kt\n@GET(\"movie/latest\")\nsuspend fun getMovies() : List<Movies>\n```", "```kt\nCoroutineScope(Dispatchers.IO).launch {\n\u00a0\u00a0\u00a0\u00a0val movies = movieService.getMovies()\n\u00a0\u00a0\u00a0\u00a0withContext(Dispatchers.Main) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayMovies(movies)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\nimplementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\n```", "```kt\n    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'\n    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'\n    implementation 'io.reactivex.rxjava3:rxjava:3.0.7'\n    ```", "```kt\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\n    ```", "```kt\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\n    ```", "```kt\n    interface MovieService {\n    \u00a0\u00a0\u00a0\u00a0@GET(\"movie/popular\")\n    \u00a0\u00a0\u00a0\u00a0suspend fun getPopularMovies(@Query(\"api_key\") apiKey: String):       PopularMoviesResponse\n    }\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0private val movieLiveData = MutableLiveData<List<Movie>>()\n    \u00a0\u00a0\u00a0\u00a0private val errorLiveData = MutableLiveData<String>()\n    \u00a0\u00a0\u00a0\u00a0val movies: LiveData<List<Movie>>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get() = movieLiveData\n    \u00a0\u00a0\u00a0\u00a0val error: LiveData<String>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get() = errorLiveData\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0suspend fun fetchMovies() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val popularMovies = movieService.getPopularMovies(apiKey)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieLiveData.postValue(popularMovies.results)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (exception: Exception) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorLiveData.postValue(\"An error occurred:               ${exception.message}\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0init {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fetchPopularMovies()\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0val popularMovies: LiveData<List<Movie>>\n    \u00a0\u00a0\u00a0\u00a0get() = movieRepository.movies\n    \u00a0\u00a0\u00a0\u00a0fun getError(): LiveData<String> = movieRepository.error\n    \u00a0\u00a0\u00a0\u00a0private fun fetchPopularMovies() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModelScope.launch(Dispatchers.IO)\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieRepository.fetchMovies()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val retrofit = Retrofit.Builder()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.baseUrl(\"https://api.themoviedb.org/3/\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.addConverterFactory(MoshiConverterFactory.create())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.build()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    val movieRepository =   (application as MovieApplication).movieRepository\n    val movieViewModel =   ViewModelProvider(this, object: ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?>       create(modelClass: Class<T>): T {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return MovieViewModel(movieRepository) as T\n    \u00a0\u00a0\u00a0\u00a0}\n    }).get(MovieViewModel::class.java)\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieViewModel.popularMovies.observe(this, { popularMovies ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieAdapter.addMovies(popularMovies\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.filter {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it.release_date.startsWith(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Calendar.getInstance().get(Calendar.YEAR)                          .toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.sortedBy { it.title }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0movieViewModel.getError().observe(this, { error ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Toast.makeText(this, error, Toast.LENGTH_LONG).show()\n    })\n    ```", "```kt\nprivate val movieLiveData: LiveData<Movie>\nval movieTitleLiveData : LiveData<String> = \n\u00a0\u00a0\u00a0Transformations.map(movieLiveData) { it.title }\n```", "```kt\nprivate val idLiveData: LiveData<Int> = MutableLiveData()\nval movieLiveData : LiveData<Movie> = \n\u00a0\u00a0\u00a0\u00a0Transformations.switchMap(idLiveData) { getMovieDetails(it) }\nfun getMovieDetails(id: Int) : LiveData<Movie> = { ... }\n```", "```kt\n    movieViewModel.getPopularMovies().observe(this,   Observer { popularMovies ->\n    \u00a0\u00a0\u00a0\u00a0movieAdapter.addMovies(popularMovies)\n    })\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val popularMovies: LiveData<List<Movie>>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get() = movieRepository.movies.map { list ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0list.filter {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val cal = Calendar.getInstance()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cal.add(Calendar.MONTH, -1)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it.release_date.startsWith(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"${cal.get(Calendar.YEAR)}-${cal.get(Calendar.MONTH)                   + 1}\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}.sortedBy { it.title }\n    \u00a0\u00a0\u00a0\u00a0}\n    ```"]