- en: Magnum – COE Management in OpenStack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Magnum - OpenStack中的COE管理
- en: 'This chapter will explain the OpenStack project for managing the **Container
    Orchestration Engine** (**COE**), Magnum. Magnum is the OpenStack project for
    managing infrastructure and for running containers on top of OpenStack, backed
    by different technologies. In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将解释用于管理**容器编排引擎**（**COE**）的OpenStack项目Magnum。Magnum是用于管理基础架构并在OpenStack顶部运行容器的OpenStack项目，由不同的技术支持。在本章中，我们将涵盖以下主题：
- en: Magnum introduction
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Magnum介绍
- en: Concepts
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念
- en: Key features
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要特点
- en: Components
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件
- en: Walk-through
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演练
- en: Magnum DevStack installation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Magnum DevStack安装
- en: Managing COEs
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理COE
- en: Magnum introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Magnum介绍
- en: Magnum is an OpenStack service that was created in 2014 by the OpenStack containers
    team to enable a **Container Orchestration Engine** (**COE**) offering the ability
    to deploy and manage containers as first-class resources in OpenStack.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum是一个OpenStack服务，由OpenStack容器团队于2014年创建，旨在实现**容器编排引擎**（**COE**），提供在OpenStack中将容器部署和管理为一流资源的能力。
- en: Currently, Magnum supports Kubernetes, Apache Mesos, and Docker Swarm COEs.
    Magnum uses Heat to do the orchestration of these COEs on VMs or bare metals provisioned
    by OpenStack. It uses OS images that contain the required tools to run containers.
    Magnum offers KeyStone compatible APIs and a complete multi-tenant solution for
    managing your COEs on top of an OpenStack cluster.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Magnum支持Kubernetes、Apache Mesos和Docker Swarm COE。Magnum使用Heat在OpenStack提供的VM或裸金属上进行这些COE的编排。它使用包含运行容器所需工具的OS映像。Magnum提供了与KeyStone兼容的API和一个完整的多租户解决方案，用于在OpenStack集群顶部管理您的COE。
- en: A Magnum cluster is a set of various resources provided by different OpenStack
    services. It consists of a group of VMs provisioned by Nova, networks connecting
    these VMs created by Neutron, volumes attached to VMs created by Cinder, and so
    on. A Magnum cluster can also have some external resources depending on the options
    provided while creating a cluster. For example, we can create an external load
    balancer for our cluster by specifying the `-master-lb-enabled` option in the
    cluster template.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum集群是由不同的OpenStack服务提供的各种资源集合。它由Nova提供的一组VM、Neutron创建的连接这些VM的网络、Cinder创建的连接VM的卷等组成。Magnum集群还可以具有一些外部资源，具体取决于创建集群时提供的选项。例如，我们可以通过在集群模板中指定`-master-lb-enabled`选项来为我们的集群创建外部负载均衡器。
- en: 'Some of the salient features of Magnum are:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum的一些显着特点是：
- en: Provides a standard API for complete life cycle management of COEs
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为COE的完整生命周期管理提供标准API
- en: Supports multiple COEs such as Kubernetes, Swarm, Mesos, and DC/OS
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持多个COE，如Kubernetes、Swarm、Mesos和DC/OS
- en: Supports the ability to scale a cluster up or down
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持扩展或缩小集群的能力
- en: Supports multi-tenancy for container clusters
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持容器集群的多租户
- en: 'Different choices of container cluster deployment models: VM or bare-metal'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的容器集群部署模型选择：VM或裸金属
- en: Provides KeyStone-based multi-tenant security and auth management
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供基于KeyStone的多租户安全和认证管理
- en: Neutron based multi-tenant network control and isolation
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于Neutron的多租户网络控制和隔离
- en: Supports Cinder to provide volume for containers
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Cinder为容器提供卷
- en: Integrated with OpenStack
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与OpenStack集成
- en: Secure container cluster access (**Transport Layer Security** (**TLS**)) enabled
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用安全容器集群访问（**传输层安全**（**TLS**））
- en: Support for external infrastructure can also be used by the cluster, such as
    DNS, public network, public discovery service, Docker registry, load balancer,
    and so on
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群还可以使用外部基础设施，如DNS、公共网络、公共发现服务、Docker注册表、负载均衡器等
- en: Barbican provides the storage of secrets such as certificates used for TLS within
    the cluster
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Barbican提供了用于集群内部的TLS证书等秘密的存储
- en: Kuryr-based networking for container-level isolation
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于Kuryr的容器级隔离网络
- en: Concepts
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概念
- en: 'Magnum has several different types of objects that form the Magnum system.
    In this section, we will learn about each of them in detail and also learn what
    they are used for in Magnum. Two important objects are the cluster and the cluster
    template. Here is a list of Magnum objects:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum有几种不同类型的对象构成了Magnum系统。在本节中，我们将详细了解每一个对象，以及它们在Magnum中的用途。两个重要的对象是集群和集群模板。以下是Magnum对象的列表：
- en: Cluster template
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集群模板
- en: This was previously known as **Baymodel**. Cluster template is equivalent to
    a Nova flavor. An object stores template information about the cluster such as
    a keypair, image, and so on, and this is used to create new clusters consistently.
    Some parameters are relevant to the infrastructure of the cluster, while others
    are for the particular COE. Multiple cluster templates can exist for different
    COEs.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这以前被称为**Baymodel**。集群模板相当于一个Nova flavor。一个对象存储关于集群的模板信息，比如密钥对、镜像等，这些信息用于一致地创建新的集群。一些参数与集群的基础设施相关，而另一些参数则是针对特定的COE。不同的COE可以存在多个集群模板。
- en: A cluster template cannot be updated or deleted if is used by any cluster.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个集群模板被任何集群使用，那么它就不能被更新或删除。
- en: Cluster
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集群
- en: This was previously known as **Bay**. It is a collection of node objects where
    work is scheduled. This node can be a VM or bare metal. Magnum deploys a cluster
    according to the attributes defined in the particular cluster template as well
    as a few additional parameters for the cluster. Magnum deploys the orchestration
    templates provided by the cluster driver to create and configure all of the necessary
    infrastructure where the COE runs. After a cluster is created, users can use the
    native CLIs of each COE to run their application on top of OpenStack.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这以前被称为**Bay**。它是一个节点对象的集合，用于调度工作。这个节点可以是虚拟机或裸金属。Magnum根据特定的集群模板中定义的属性以及集群的一些额外参数来部署集群。Magnum部署由集群驱动程序提供的编排模板，以创建和配置COE运行所需的所有基础设施。创建集群后，用户可以使用每个COE的本机CLI在OpenStack上运行他们的应用程序。
- en: Cluster driver
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集群驱动程序
- en: Cluster driver contains all of the necessary files that are needed for setting
    up a cluster. It contains a heat template defining the resources to be created
    for any cluster, scripts to install and configure services on the cluster, the
    version information of the driver, and the template definition.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 集群驱动程序包含了设置集群所需的所有必要文件。它包含了一个热模板，定义了为任何集群创建的资源，安装和配置集群上的服务的脚本，驱动程序的版本信息，以及模板定义。
- en: Heat Stack Template
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 热堆栈模板
- en: The **Heat Stack Template** (**HOT**) is a template that defines the resources
    which will form a COE cluster. Every COE type has a different template depending
    on the steps of its installation. This template is passed to Heat by Magnum to
    set up a full COE cluster.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**Heat Stack Template**（**HOT**）是一个定义将形成COE集群的资源的模板。每种COE类型都有一个不同的模板，取决于其安装步骤。这个模板被Magnum传递给Heat，以建立一个完整的COE集群。'
- en: Template definition
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模板定义
- en: Template definition represents the mapping between Magnum attributes and Heat
    template attributes. It also has outputs that are consumed by Magnum. It indicates
    which cluster type it will use for a given cluster.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 模板定义表示Magnum属性和Heat模板属性之间的映射。它还有一些被Magnum使用的输出。它指示了给定集群将使用哪种集群类型。
- en: Certificate
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 证书
- en: Certificate is an object that represents the CA certificate for a cluster in
    Magnum. Magnum generates both server and client certificates while creating a
    cluster to provide a secure communication between Magnum services and COE services.
    The CA certificate and key are stored in Magnum for use by a user to access the
    cluster securely. Users need to generate a client certificate, a client key, and
    a Certificate Signing Request (CSR), and then send a request to Magnum to get
    it signed and also download the signing cert for accessing the cluster.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 证书是Magnum中代表集群CA证书的对象。Magnum在创建集群时生成服务器和客户端证书，以提供Magnum服务和COE服务之间的安全通信。CA证书和密钥存储在Magnum中，供用户安全访问集群。用户需要生成客户端证书、客户端密钥和证书签名请求（CSR），然后发送请求给Magnum进行签名，并下载签名证书以访问集群。
- en: Service
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务
- en: Service is an object that stores the information about the `magnum-conductor`
    binary. This object contains information such as the host where the service is
    running, if the service is disabled or not, the last seen details, and so on.
    This information can be used by admins to see the status of the `magnum-conductor`
    services.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是一个存储有关`magnum-conductor`二进制信息的对象。该对象包含有关服务运行的主机、服务是否已禁用、最后一次的详细信息等信息。管理员可以使用这些信息来查看`magnum-conductor`服务的状态。
- en: Stats
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 统计
- en: Magnum also manages the statistics of each project usage. This information is
    helpful for administration purposes. Stats objects contain some metrics about
    the current usage of any admin or user for a tenant or even for all active tenants.
    They provide information, such as the total number of clusters, nodes, and so
    on.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum还管理每个项目使用情况的统计信息。这些信息对于管理目的很有帮助。统计对象包含有关管理员或用户对租户的当前使用情况的一些指标，甚至对所有活动租户的信息。它们提供信息，例如集群总数、节点总数等。
- en: Quotas
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配额
- en: Quotas is an object that stores the resource quota of any given project. Imposing
    quotas on resources puts a limitation on a number of resources that can be consumed,
    which helps to guarantee *fairness* or the fair distribution of resources at creation
    time. If a particular project needs more resources, the concept of quota provides
    the ability to increase the resource count on-demand, given that the system constraints
    are not exceeded. Quotas are tied closely to physical resources and are billable
    entities.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 配额是一个存储任何给定项目资源配额的对象。对资源施加配额限制了可以消耗的资源数量，这有助于在创建时保证资源的公平分配。如果特定项目需要更多资源，配额的概念提供了根据需求增加资源计数的能力，前提是不超出系统约束。配额与物理资源密切相关，并且是可计费的实体。
- en: Key features
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键特性
- en: We have learned that Magnum provides various features in addition to the management
    of COE infrastructure in the previous section. In the following sections, we will
    talk about some of the advanced features present in Magnum.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们了解到Magnum除了管理COE基础设施外，还提供了各种功能。在接下来的章节中，我们将讨论Magnum中的一些高级功能。
- en: External load balancer for Kubernetes
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes的外部负载均衡器
- en: Magnum uses Flannel by default to provide networking for the resources in Kuberenetes.
    The pods and services can access each other and the external internet using this
    private container networking. However, these resources can't be accessed from
    an external network. To allow access from the external network, Magnum provides
    the support for setting up an external load balancer for a Kubernetes cluster.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum默认使用Flannel为Kubernetes中的资源提供网络。Pod和服务可以使用这个私有容器网络相互访问和访问外部互联网。然而，这些资源无法从外部网络访问。为了允许外部网络访问，Magnum提供了为Kubernetes集群设置外部负载均衡器的支持。
- en: Please refer to [https://docs.openstack.org/magnum/latest/user/#steps-for-the-cluster-administrator](https://docs.openstack.org/magnum/latest/user/#steps-for-the-cluster-administrator)
    to set up a Kubernetes load balancer using Magnum.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[https://docs.openstack.org/magnum/latest/user/#steps-for-the-cluster-administrator](https://docs.openstack.org/magnum/latest/user/#steps-for-the-cluster-administrator)以使用Magnum设置Kubernetes负载均衡器。
- en: Transport Layer Security
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 传输层安全性
- en: 'Magnum allows us to set up secure communication between a cluster''s services
    and the outside world using TLS. The TLS communication in Magnum is employed at
    three layers:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum允许我们使用TLS在集群服务和外部世界之间建立安全通信。Magnum中的TLS通信在三个层面上使用：
- en: Communication between Magnum services and the cluster API endpoint.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Magnum服务与集群API端点之间的通信。
- en: Communication between the cluster worker nodes and the master nodes.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群工作节点与主节点之间的通信。
- en: Communication between the end user and the cluster. End users use the native
    client libraries to interact with the cluster and with the certificates to communicate
    over a secure network. This applies to both a CLI and a program that uses a client
    for the particular cluster. Each client needs a valid certificate to authenticate
    and communicate with a cluster.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终端用户与集群之间的通信。终端用户使用本机客户端库与集群交互，并使用证书在安全网络上进行通信。这适用于CLI和使用特定集群客户端的程序。每个客户端都需要有效的证书来进行身份验证并与集群通信。
- en: The first two cases are implemented internally by Magnum, and it creates, stores,
    and configures services to use the certificate for communication and are not exposed
    to the users. The last case involves the users creating a certificate, signing
    it, and then using it to access the cluster.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 前两种情况由Magnum在内部实现，并创建、存储和配置服务以使用证书进行通信，不向用户公开。最后一种情况涉及用户创建证书、签名并使用它来访问集群。
- en: Magnum uses Barbican to store the certificates. This provides another level
    of security with the storage of a certificate. Magnum also supports other ways
    of storing certificates, such as storing them in a local filesystem of the conductor
    node or in the Magnum database.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum使用Barbican存储证书。这提供了另一层证书存储的安全性。Magnum还支持其他存储证书的方式，例如将它们存储在主节点的本地文件系统中或在Magnum数据库中存储。
- en: Please refer to [https://docs.openstack.org/magnum/latest/user/#interfacing-with-a-secure-cluster](https://docs.openstack.org/magnum/latest/user/#interfacing-with-a-secure-cluster)
    for more details on how to configure clients to access the secure cluster.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何配置客户端以访问安全集群的更多详细信息，请参阅[https://docs.openstack.org/magnum/latest/user/#interfacing-with-a-secure-cluster](https://docs.openstack.org/magnum/latest/user/#interfacing-with-a-secure-cluster)。
- en: Scaling
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展
- en: Scaling is yet another powerful feature of Magnum. Magnum supports the scaling
    of the cluster, whereas the scaling of containers is outside of Magnum's scope.
    Scaling a cluster can help users to either add or remove nodes from the cluster.
    While scaling up, Magnum creates a VM or bare metal, deploys the COE services
    on it, and then register it to the cluster. When scaling down, Magnum tries to
    remove the node with the least workload.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展是Magnum的另一个强大功能。Magnum支持集群的扩展，而容器的扩展不在Magnum的范围内。扩展集群可以帮助用户向集群添加或删除节点。在扩展时，Magnum创建一个虚拟机或裸金属，部署COE服务，然后将其注册到集群。在缩减规模时，Magnum尝试删除工作负载最小的节点。
- en: See the *Managing COEs* section to learn how to scale a cluster.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅*管理COEs*部分，了解如何扩展集群。
- en: Storage
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储
- en: Magnum supports Cinder to provide block storage to the containers, which can
    either be persistent or ephemeral storage.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum支持Cinder为容器提供块存储，可以是持久的或临时的存储。
- en: Ephemeral storage
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 临时存储
- en: All of the changes to a container's filesystem can be either stored in a local
    filesystem or in Cinder volume. This is the ephemeral storage which gets deleted
    after the container exits. Magnum provides additional Cinder volume to be used
    as ephemeral storage with containers. Users can specify the volume size in the
    cluster template using the `docker-volume-size` attribute. Also, users can select
    a different volume type, such as a device mapper, and overlay this with the `docker_volume_type`
    attribute.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 容器文件系统的所有更改都可以存储在本地文件系统或Cinder卷中。这是在容器退出后被删除的临时存储。Magnum提供额外的Cinder卷用作容器的临时存储。用户可以在集群模板中使用`docker-volume-size`属性指定卷的大小。此外，用户还可以选择不同的卷类型，例如设备映射器，并使用`docker_volume_type`属性覆盖此选项。
- en: Persistent storage
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持久存储
- en: There can be a need to persist the container's data when it exits. A container
    can be mounted with Cinder volume for this purpose. When a container exits, the
    volume is unmounted, thus persisting the data.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当容器退出时，可能需要持久保存容器的数据。可以为此目的挂载Cinder卷。当容器退出时，卷将被卸载，从而保留数据。
- en: There are a number of third-party volume drivers that support Cinder as the
    backend, such as Rexray and Flocker. Magnum currently supports Rexray as the volume
    driver for Swarm, and Mesos and Cinder for Kubernetes.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多第三方卷驱动程序支持Cinder作为后端，例如Rexray和Flocker。Magnum目前支持Rexray作为Swarm的卷驱动程序，以及Mesos和Cinder作为Kubernetes的卷驱动程序。
- en: Notifications
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通知
- en: Magnum generates notification about usage data. This data is useful for third-party
    applications for the purpose of billing, quota management, monitoring, and so
    on. To provide a standard format for the notification, Magnum uses the **Cloud
    Auditing Data Federation** (**CADF**) format.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum生成有关使用数据的通知。这些数据对于第三方应用程序用于计费、配额管理、监控等目的非常有用。为了提供通知的标准格式，Magnum使用**Cloud
    Auditing Data Federation**（**CADF**）格式。
- en: Container monitoring
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 容器监控
- en: 'Magnum also supports the monitoring of containers. It collects metrics such
    as the container CPU load, the number of available Inodes, the cumulative count
    of bytes received, memory, CPU statistics of the node, and so on. The offered
    monitoring stack relies on the following set of containers and services present
    in the COE environment:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum还支持对容器进行监控。它收集诸如容器CPU负载、可用Inodes数量、累积接收字节数、内存、节点的CPU统计等指标。提供的监控堆栈依赖于COE环境中存在的一组容器和服务：
- en: cAdvisor
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cAdvisor
- en: Node exporter
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点导出器
- en: Prometheus
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prometheus
- en: Grafana
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grafana
- en: Users can set up this monitoring stack by specifying the given two configurable
    labels in the Magnum cluster template's definition that are `prometheus_monitoring`
    when set to True, the monitoring will be enabled and `grafana_admin_password`
    which the admin password.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以通过在Magnum集群模板的定义中指定给定的两个可配置标签来设置此监控堆栈，即`prometheus_monitoring`设置为True时，监控将被启用，以及`grafana_admin_password`，这是管理员密码。
- en: Components
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组件
- en: The diagram in the *Magnum Conduct*or section shows the architecture of Magnum,
    which has two binaries named `magnum-api` and `magnum-conductor` that form the
    Magnum system. Magnum interacts with Heat to do the orchestration. This means
    Heat is the OpenStack component that talks to various other projects such as Nova,
    Neutron, and Cinder to set up the infrastructure for COE, and then it installs
    the COE on top of it. We will now learn about the detailed functions of the services.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*Magnum Conductor*部分的图表显示了Magnum的架构，其中有两个名为`magnum-api`和`magnum-conductor`的二进制文件构成了Magnum系统。Magnum与Heat进行交互进行编排。这意味着Heat是与其他项目（如Nova、Neutron和Cinder）交流以为COE设置基础设施的OpenStack组件，然后在其上安装COE。我们现在将了解服务的详细功能。'
- en: Magnum API
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Magnum API
- en: 'Magnum API is a WSGI server that serves the API requests that the user sends
    to Magnum. The Magnum API has many controllers to handle a request for each of
    the resources:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum API是一个WSGI服务器，用于为用户发送给Magnum的API请求提供服务。Magnum API有许多控制器来处理每个资源的请求：
- en: Baymodel
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Baymodel
- en: Bay
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bay
- en: Certificate
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书
- en: Cluster
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群
- en: Cluster template
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群模板
- en: Magnum services
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Magnum服务
- en: Quota
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配额
- en: Stats
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统计
- en: Baymodel and Bay will be replaced by cluster and cluster templates respectively.
    Each of the controllers handle a request for specific resources. They validate
    the request for permissions, validate the OpenStack resources (such as validating
    if an image passed in the cluster template exists in Glance or not), create DB
    objects for the resource with the input data, and passes the request to `magnum-conductor`
    via the AMQP server. The call to `magnum-conductor` can be synchronous or asynchronous
    depending on the processing time taken by each of the operations.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Baymodel和Bay将分别由集群和集群模板替换。每个控制器处理特定资源的请求。它们验证权限请求，验证OpenStack资源（例如验证集群模板中传递的镜像是否存在于Glance中），为资源创建带有输入数据的数据库对象，并通过AMQP服务器将请求传递给`magnum-conductor`。对`magnum-conductor`的调用可以是同步的或异步的，具体取决于每个操作所花费的处理时间。
- en: For example, the list calls can be synchronous as they are not time-consuming,
    whereas the create requests can be asynchronous. Upon receiving a response from
    the conductor service, the `magnum-api` service returns the response to the user.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，列表调用可以是同步的，因为它们不耗时，而创建请求可以是异步的。收到来自conductor服务的响应后，`magnum-api`服务将响应返回给用户。
- en: Magnum conductor
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Magnum conductor
- en: Magnum conductor is an RPC server that provides coordination and database query
    support for Magnum. It is stateless and horizontally scalable, meaning multiple
    instances of the conductor service can run at the same time. The `magnum-conductor`
    service selects the cluster driver and then sends the template files to the Heat
    service to do the installation, and finally updates the database with the object
    details.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum conductor是为Magnum提供协调和数据库查询支持的RPC服务器。它是无状态的和水平可扩展的，这意味着可以同时运行多个conductor服务实例。`magnum-conductor`服务选择集群驱动程序，然后将模板文件发送到Heat服务进行安装，并最终更新数据库以获取对象详细信息。
- en: 'Here is an architecture diagram for Magnum, which shows the different components
    in Magnum, what other OpenStack projects they communicate to, and the infrastructure
    provisioned for running any COE:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Magnum的架构图，显示了Magnum中的不同组件，它们与其他OpenStack项目的通信，以及为运行任何COE而提供的基础设施：
- en: '![](../images/00020.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00020.jpeg)'
- en: Walk-through
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演练
- en: In this section, we will walk you through the process of a COE cluster being
    created by Magnum. This section deals with the request flow and the component
    interaction of various projects in OpenStack. Provisioning a cluster in Magnum
    involves interaction between multiple components inside OpenStack.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为您介绍Magnum创建COE集群的过程。本节涉及OpenStack中各个项目的请求流程和组件交互。在Magnum中，为集群提供基础设施涉及OpenStack内部多个组件之间的交互。
- en: 'The request flow for provisioning a cluster in Magnum goes like this:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在Magnum中为集群提供基础设施的请求流程如下：
- en: The user sends a REST API call to `magnum-api` for creating a cluster via a
    CLI or Horizon, with the authentication token received from KeyStone.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户通过CLI或Horizon向`magnum-api`发送REST API调用以创建集群，并使用从KeyStone接收的身份验证令牌。
- en: '`magnum-api` receives the request and sends the request for the validation
    of token and access permission to KeyStone.'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-api`接收请求，并将请求发送到KeyStone进行令牌验证和访问权限验证。'
- en: KeyStone validates the token and sends the updated authentications headers with
    roles and permissions.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: KeyStone验证令牌，并发送带有角色和权限的更新身份验证标头。
- en: '`magnum-api` then validates the quota for the request. If the quota exceeds
    the hard limit, an exception is raised complaining that the *resource limit has
    exceeded* and the request exists with `403` HTTP status.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-api`然后验证请求的配额。如果配额超过硬限制，将引发异常，指出*资源限制已超出*，并且请求将以`403` HTTP状态退出。'
- en: Then the validation of all OpenStack resources specified in the cluster template
    is done. For example, `magnum-api` talks to `nova-api` to check if the specified
    keypair exists or not. If the validation fails, the requests exists with `400`
    HTTP status.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后对集群模板中指定的所有OpenStack资源进行验证。例如，`magnum-api`会与`nova-api`进行通信，以检查指定的密钥对是否存在。如果验证失败，请求将以`400`
    HTTP状态退出。
- en: '`magnum-api` generates a name for the cluster if the name is not specified
    in the request.'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果请求中未指定名称，`magnum-api`会为集群生成一个名称。
- en: '`magnum-api` then creates a database object for the cluster.'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-api`然后为集群创建数据库对象。'
- en: '`magnum-api` sends the RPC asynchronous call request to magnum-conductor to
    process the request further.'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-api`向magnum-conductor发送RPC异步调用请求，以进一步处理请求。'
- en: '`magnum-conductor` picks the request from the message queue.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-conductor`从消息队列中提取请求。'
- en: '`magnum-conductor` sets the status of the cluster to `CREATE_IN_PROGRESS` and
    stores the entry in the database.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-conductor`将集群的状态设置为`CREATE_IN_PROGRESS`并将条目存储在数据库中。'
- en: '`magnum-conductor` creates the trustee, trust, and certificate for the cluster
    and sets them to cluster for later use.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`magnum-conductor`为集群创建受托人、信任和证书，并将它们设置为以后使用的集群。'
- en: Based on the cluster distribution, COE type, and server type provided in the
    cluster template, `magnum-conductor` selects a driver for the cluster.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据集群分布、COE类型和集群模板中提供的服务器类型，`magnum-conductor`为集群选择驱动程序。
- en: '`magnum-conductor` then extracts the template files, template, environment
    files, and heat parameters from the cluster driver and then sends the request
    to Heat to create the stack.'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，`magnum-conductor`从集群驱动程序中提取模板文件、模板、环境文件和热参数，然后将请求发送到Heat以创建堆栈。
- en: Heat then talks to multiple OpenStack services such as Nova, Neutron, and Cinder
    to set up the cluster and install the COE on top of it.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，Heat会与多个OpenStack服务进行通信，如Nova、Neutron和Cinder，以设置集群并在其上安装COE。
- en: After the stack is created in Heat, the stack ID and cluster status is set to
    `CREATE_COMPLETE` in the Magnum database.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Heat中创建堆栈后，在Magnum数据库中将堆栈ID和集群状态设置为`CREATE_COMPLETE`。
- en: There are periodic tasks in Magnum which sync the cluster status in the Magnum
    database at a specific time interval.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum中有定期任务，会在特定时间间隔内同步Magnum数据库中的集群状态。
- en: Magnum DevStack installation
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Magnum DevStack安装
- en: 'To install Magnum with DevStack for development purposes, follow these steps:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开发目的安装Magnum与DevStack，请按照以下步骤进行：
- en: 'Create a root directory for DevStack if needed:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有需要，为DevStack创建一个根目录：
- en: '[PRE0]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We will run DevStack with minimal `local.conf` settings required to enable
    Magnum, Heat, and Neutron:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用最小的`local.conf`设置来运行DevStack，以启用Magnum、Heat和Neutron：
- en: '[PRE1]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Please note that we have to use Barbican here for storing the TLS certificate
    generated by Magnum. For details, see the *Transport Layer Security* section under
    the *Key Features* section.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们必须在这里使用Barbican来存储Magnum生成的TLS证书。有关详细信息，请参阅*关键特性*部分下的*传输层安全*部分。
- en: Also, make sure to use the appropriate interface for setup in `local.conf`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 还要确保在`local.conf`中使用适当的接口进行设置。
- en: 'Now, run DevStack:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行DevStack：
- en: '[PRE2]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will have a Magnum setup running. To verify the installation, check the
    list of Magnum services running:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将拥有一个正在运行的Magnum设置。要验证安装，请检查正在运行的Magnum服务列表：
- en: '[PRE3]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Managing COEs
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理COE
- en: Magnum provides seamless management for the life cycle of the cluster in OpenStack.
    The current operations are the basic CRUD operations, with some advance features
    such as the scaling of the cluster, setting up external load balancers, setting
    up a secure cluster with TLS, and so on. In this section, we will create a Swarm
    Cluster Template, use this template to create a Swarm cluster, and then, we will
    run some workloads on the cluster to verify our cluster status.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Magnum为OpenStack集群的生命周期提供无缝管理。当前操作是基本的CRUD操作，还有一些高级功能，如集群的扩展、设置外部负载均衡器、使用TLS设置安全集群等。在本节中，我们将创建一个Swarm集群模板，使用该模板创建一个Swarm集群，然后在集群上运行一些工作负载以验证我们的集群状态。
- en: 'First, we will prepare our session to be able to use the various OpenStack
    clients including Magnum, Neutron, and Glance. Create a new shell and source the
    DevStack `openrc` script:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将准备我们的会话，以便能够使用各种OpenStack客户端，包括Magnum、Neutron和Glance。创建一个新的shell并源自DevStack的`openrc`脚本：
- en: '[PRE4]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create a keypair to use with the cluster template. This keypair will be used
    to ssh to the cluster nodes:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个用于集群模板的密钥对。这个密钥对将用于ssh到集群节点：
- en: '[PRE5]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'DevStack creates a Fedora Atomic micro-OS image in Glance for Magnum''s use.
    Users can also create additional images in Glance for use in their cluster. Verify
    the image created in Glance:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: DevStack在Glance中为Magnum的使用创建了一个Fedora Atomic微型OS镜像。用户还可以在Glance中创建其他镜像以供其集群使用。验证在Glance中创建的镜像：
- en: '[PRE6]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, create a Magnum cluster template with the swarm COE type. This is similar
    in nature to a Nova flavor and tells Magnum how to construct the cluster. The
    cluster template specifies all of the resources to be used in our cluster, such
    as a Fedora Atomic image, a Nova keypair, a network, and so on:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建一个具有swarm COE类型的Magnum集群模板。这与Nova flavor类似，告诉Magnum如何构建集群。集群模板指定了集群中要使用的所有资源，例如Fedora
    Atomic镜像、Nova密钥对、网络等等：
- en: '[PRE7]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Verify the cluster template creation by using the following command:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令验证集群模板的创建：
- en: '[PRE8]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create a cluster using the preceding template. This cluster will result in
    a group of VMs to be created with Docker Swarm installed on them:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的模板创建一个集群。这个集群将导致创建一组安装了Docker Swarm的VM：
- en: '[PRE9]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Clusters will have an initial status of `CREATE_IN_PROGRESS`. Magnum will update
    the status to `CREATE_COMPLETE` when it is done creating the cluster.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 集群将初始状态设置为`CREATE_IN_PROGRESS`。当Magnum完成创建集群时，将把状态更新为`CREATE_COMPLETE`。
- en: Heat can be used to see detailed information on the status of a stack or specific
    cluster.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Heat可以用来查看堆栈或特定集群状态的详细信息。
- en: 'To check the list of all cluster stacks, use the following:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查所有集群堆栈的列表，请使用以下命令：
- en: '[PRE10]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To see the details of cluster, do the following:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看集群的详细信息，请执行以下操作：
- en: '[PRE11]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We now need to set up the Docker CLI to use the swarm cluster we have created
    with the appropriate credentials.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要设置Docker CLI以使用我们使用适当凭据创建的swarm集群。
- en: 'Create a `dir` to store `certs` and `cd`. The `DOCKER_CERT_PATH` env variable
    is consumed by Docker, which expects `ca.pem`, `key.pem`, and `cert.pem` to be
    in that directory:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个`dir`来存储`certs`和`cd`。`DOCKER_CERT_PATH`环境变量被Docker使用，它期望这个目录中有`ca.pem`、`key.pem`和`cert.pem`：
- en: '[PRE12]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Generate an RSA key:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 生成RSA密钥：
- en: '[PRE13]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create `openssl` config to help generated a CSR:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`openssl`配置以帮助生成CSR：
- en: '[PRE14]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Run the `openssl req` command to generate the CSR:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`openssl req`命令生成CSR：
- en: '[PRE15]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now that you have your client CSR, use the Magnum CLI to get it signed and
    also download the signing cert:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经有了客户端CSR，请使用Magnum CLI对其进行签名，并下载签名证书：
- en: '[PRE16]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Set the CLI to use TLS. This `env var` is consumed by Docker:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 设置CLI以使用TLS。这个`env var`被Docker使用：
- en: '[PRE17]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Set the correct host to use, which is the public IP address of the Swarm API
    server endpoint.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 设置要使用的正确主机，即Swarm API服务器端点的公共IP地址。
- en: 'This `env var` is consumed by Docker:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`env var`被Docker使用：
- en: '[PRE18]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Next, we will create a container in this Swarm cluster. This container will
    ping the address `8.8.8.8` four times:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在这个Swarm集群中创建一个容器。这个容器将四次ping地址`8.8.8.8`：
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You should see a similar output to the following:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似以下的输出：
- en: '[PRE20]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'After a cluster is created, you can dynamically add or remove node(s) to or
    from the cluster by updating the `node_count` attribute. For example, to add one
    more node, do the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 创建集群后，您可以通过更新`node_count`属性动态地向集群中添加或删除节点。例如，要添加一个节点，执行以下操作：
- en: '[PRE21]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Clusters will have a status of `UPDATE_IN_PROGRESS` while the process of the
    update continues. After the completion of update, the status will be updated to
    `UPDATE_COMPLETE`. Reducing `node_count` removes all of the existing pods/containers
    on the nodes that were deleted. Magnum tries to delete the node with the least
    workload.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 当更新过程继续进行时，集群的状态将为`UPDATE_IN_PROGRESS`。更新完成后，状态将更新为`UPDATE_COMPLETE`。减少`node_count`会删除已删除节点上的所有现有pod/容器。Magnum尝试删除工作负载最小的节点。
- en: Summary
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the OpenStack container infrastructure management
    service, Magnum, in detail. We looked into the different objects in Magnum. Then,
    we learned about the components and architecture of Magnum. Then, we provided
    a detailed overview of the user request workflow in Magnum.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们详细了解了OpenStack容器基础设施管理服务Magnum。我们研究了Magnum中的不同对象。然后，我们了解了Magnum的组件和架构。接着，我们提供了Magnum中用户请求工作流程的详细概述。
- en: Finally, we looked at how to install a development setup for Magnum using DevStack
    and then did a hands-on exercise using Magnum CLI to create a Docker Swarm COE.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们看了如何使用DevStack安装Magnum的开发设置，然后使用Magnum CLI进行了实际操作，创建了一个Docker Swarm COE。
- en: In the next chapter, we will learn about Zun, which is a container management
    service for OpenStack.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习Zun，这是OpenStack的一个容器管理服务。
