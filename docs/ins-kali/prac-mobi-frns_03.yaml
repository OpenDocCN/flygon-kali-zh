- en: Understanding the Internals of iOS Devices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解iOS设备的内部
- en: According to Apple, there were 1.4 billion active Apple devices in 2019, 900
    million of which were running on iOS. While iOS is the leading **operating system**
    (**OS**) for tablets worldwide, Android continues to be the leading OS for smartphones.
    Regardless of the statistics, if you are a forensic examiner, the chances are
    that you will need to conduct an examination of an iOS device.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 根据苹果公司的说法，2019年有14亿活跃的苹果设备，其中9亿台设备运行的是iOS。尽管iOS是全球平板电脑的领先**操作系统**（**OS**），但安卓仍然是智能手机的领先操作系统。无论统计数据如何，如果您是取证人员，您很可能需要对iOS设备进行取证调查。
- en: In order to perform a forensic examination of an iOS device, you as the examiner
    must understand the internal components and inner workings of that device. Developing
    an understanding of the underlying components of a mobile device will help you
    understand the criticalities involved in the forensic process, including what
    data can be acquired, where the data is stored, and what methods can be used to
    access the data from that device. So, before we delve into the examination of
    iOS devices, it is necessary to gain an understanding of the different models
    that exist and their internal components. Throughout this book, we will perform
    forensic acquisition and analysis on iOS devices, including the iPhone, iPad,
    and Apple Watch.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对iOS设备进行取证调查，作为取证人员，您必须了解该设备的内部组件和内部工作原理。了解移动设备的基本组件将有助于您了解取证过程中涉及的关键问题，包括可以获取哪些数据、数据存储在何处以及可以使用哪些方法从该设备访问数据。因此，在深入研究iOS设备之前，有必要了解存在的不同型号及其内部组件。在本书中，我们将对iOS设备进行取证获取和分析，包括iPhone、iPad和Apple
    Watch。
- en: The goal of this chapter is to introduce you to iOS device technology. We will
    cover details that may often get overlooked but will help you during your forensic
    investigation. You must understand the different iOS devices and how data is stored
    on these devices before you can successfully extract it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是向您介绍iOS设备技术。我们将涵盖一些可能经常被忽视的细节，但这些细节将在您进行取证调查时帮助您。在成功提取数据之前，您必须了解不同的iOS设备以及数据存储在这些设备上的方式。
- en: 'In this chapter, we will cover the following topics in detail:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细介绍以下主题：
- en: iPhone models and hardware
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPhone型号和硬件
- en: iPad models and hardware
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPad型号和硬件
- en: The **Hierarchical File System** (**HFS**) Plus and **Apple File System** (**APFS**)
    filesystems
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分层文件系统**（**HFS**）Plus和**苹果文件系统**（**APFS**）文件系统'
- en: The iPhone OS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPhone操作系统
- en: iPhone models and hardware
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iPhone型号和硬件
- en: The iPhone is among the most popular smartphones on the market. Apple released
    the first-generation iPhone in June 2007\. Since the first release, the iPhone
    became extremely popular due to its many groundbreaking features and usability.
    The introduction of the iPhone has since redefined the entire world of mobile
    computing. Consumers have started looking for faster and more efficient phones.
    Various iPhone models now exist, with different features and storage capabilities
    to serve consumer requirements.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone是市场上最受欢迎的智能手机之一。苹果于2007年6月发布了第一代iPhone。自首次发布以来，iPhone因其许多开创性的功能和可用性而变得非常受欢迎。iPhone的推出自那时起重新定义了移动计算的整个世界。消费者开始寻找更快速和更高效的手机。现在存在各种不同的iPhone型号，具有不同的功能和存储能力，以满足消费者的需求。
- en: The iPhones released since the third edition of *Practical Mobile Forensics—*the
    iPhone XR, XS, XS Max, 11, and 11 Pro—can be challenging when it comes to dealing
    with filesystem forensic acquisition methods. Just like the devices released since
    the iPhone 5, there is no method or tool available to physically recover data
    from these devices, unless they are jailbroken. However, logical acquisition can
    be obtained if the iPhone is unlocked. Acquisition methods for data extraction
    are available and will be discussed in [Chapter 3](6bdeccbc-e651-43f3-b5ed-4e6d071adec6.xhtml),
    *Data Acquisition from iOS Devi**ces*, and [Chapter 4](f082adcc-6892-4e66-80cc-49b9752cb56a.xhtml),
    *Data Acquisition from iOS Backups*. Now, let's learn how to identify the correct
    hardware model.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 自*实用移动取证*第三版以来发布的iPhone XR、XS、XS Max、11和11 Pro在处理文件系统取证方法时可能会具有挑战性。与自iPhone
    5以来发布的设备一样，除非它们被越狱，否则没有可用的方法或工具来从这些设备中物理恢复数据。但是，如果iPhone已解锁，则可以进行逻辑获取。数据提取的获取方法可用，并将在[第3章](6bdeccbc-e651-43f3-b5ed-4e6d071adec6.xhtml)和[第4章](f082adcc-6892-4e66-80cc-49b9752cb56a.xhtml)中进行讨论。现在，让我们学习如何确定正确的硬件型号。
- en: Identifying the correct hardware model
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定正确的硬件型号
- en: Before examining an iPhone, it is necessary to identify the correct hardware
    model and the firmware version installed on the device. Knowing the iPhone's details
    helps you to understand the criticalities and possibilities of obtaining evidence
    from an iPhone. For example, in many cases, the device passcode is required in
    order to obtain a logical image. Depending on the iOS version, device model, and
    passcode complexity, it may be possible to obtain the device passcode using a
    brute-force attack.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查iPhone之前，有必要确定设备上安装的正确硬件型号和固件版本。了解iPhone的详细信息有助于您了解从iPhone获取证据的关键性和可能性。例如，在许多情况下，需要设备密码才能获取逻辑图像。根据iOS版本、设备型号和密码复杂性，可能可以使用暴力攻击获取设备密码。
- en: There are various ways to identify the hardware of a device. The easiest way
    to identify the hardware of some devices is to observe the model number displayed
    on the back of the device. To make this task even simpler, you can use Apple's
    Knowledge Base articles. More information on iPhone models can be found at [https://support.apple.com/en-in/HT201296](https://support.apple.com/en-in/HT201296).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种方法可以识别设备的硬件。识别某些设备的硬件的最简单方法是观察设备背面显示的型号号码。为了使这项任务更加简单，您可以使用苹果的知识库文章。有关iPhone型号的更多信息，请访问[https://support.apple.com/en-in/HT201296](https://support.apple.com/en-in/HT201296)。
- en: 'The firmware version of an iPhone can be found by accessing the Settings option
    and then navigating to General | About | Software Version, as shown in the following
    screenshot. The purpose of the firmware is to enable certain features and assist
    with the general functioning of the device:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过访问设置选项，然后导航到常规|关于|软件版本来找到iPhone的固件版本，如下面的屏幕截图所示。固件的目的是启用某些功能，并协助设备的一般运行：
- en: '![](img/bc3b21fd-b272-4a8a-8982-08baade4747f.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc3b21fd-b272-4a8a-8982-08baade4747f.png)'
- en: The iPhone About screen, displaying the software version 13.2
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone关于屏幕，显示软件版本13.2
- en: Alternatively, the `ideviceinfo` command-line tool that is available in the
    `libimobiledevice` software library ([http://www.libimobiledevice.org/](http://www.libimobiledevice.org/))
    can be used to identify the iPhone model and its iOS version.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，可以使用`libimobiledevice`软件库（[http://www.libimobiledevice.org/](http://www.libimobiledevice.org/)）中提供的`ideviceinfo`命令行工具来识别iPhone的型号和其iOS版本。
- en: 'To obtain the iPhone model and its iOS version information on a Windows 10
    workstation, follow these steps:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Windows 10工作站上获取iPhone型号和其iOS版本信息，请按照以下步骤操作：
- en: 'Download the latest binaries from the following link: [https://dev.azure.com/libimobiledevice-win32/imobiledevice-net/_build/results?buildId=419 ](https://dev.azure.com/libimobiledevice-win32/imobiledevice-net/_build/results?buildId=419)(click
    on Artifacts | Binaries to start downloading).'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下链接下载最新的二进制文件：[https://dev.azure.com/libimobiledevice-win32/imobiledevice-net/_build/results?buildId=419 ](https://dev.azure.com/libimobiledevice-win32/imobiledevice-net/_build/results?buildId=419)(点击Artifacts
    | Binaries开始下载)。
- en: Unzip the archive with x86 or x64 binaries, depending on your workstation's
    version.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压包含x86或x64二进制文件的存档，具体取决于您工作站的版本。
- en: Open Command Prompt and change the directory to the one with binaries (use the
    `cd` command for this).
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符，并将目录更改为包含二进制文件的目录（使用`cd`命令进行此操作）。
- en: 'Connect the iPhone to your workstation using a **Universal Serial Bus** (**USB**)
    cable (for the latest iOS versions, the passcode is also required), and run the
    `ideviceinfo` command with the `-s` option, as shown in the following code:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**通用串行总线**（**USB**）电缆将iPhone连接到您的工作站（对于最新的iOS版本，还需要输入密码），并使用`ideviceinfo`命令和`-s`选项运行，如下面的代码所示：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output of the `ideviceinfo` command displays the iPhone identifier, its
    internal name, and the iOS version, as shown in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`ideviceinfo`命令的输出显示了iPhone的标识符、内部名称和iOS版本，如下面的屏幕截图所示：'
- en: '![](img/8642f4eb-7700-451f-ace7-986d9a784c55.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8642f4eb-7700-451f-ace7-986d9a784c55.png)'
- en: The output from ideviceinfo displaying firmware version 13.2
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: ideviceinfo显示固件版本13.2的输出
- en: 'Some other tools, such as iExplorer, will provide access to similar iOS device
    information, as shown in the following screenshot. The methods for recovering
    iPhone device information will work on iPad devices as well. Here, iExplorer is
    being used to obtain device information from an iPhone:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 其他工具，如iExplorer，也将提供访问类似的iOS设备信息，如下面的屏幕截图所示。恢复iPhone设备信息的方法也适用于iPad设备。在这里，iExplorer被用来从iPhone获取设备信息：
- en: '![](img/cf7c4110-5f8a-40c6-b0ad-efe2a81a3b9d.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf7c4110-5f8a-40c6-b0ad-efe2a81a3b9d.png)'
- en: iExplorer displaying device info
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: iExplorer显示设备信息
- en: Every release of the iPhone comes with improved or newly added features. As
    previously stated in this chapter, knowing the iPhone's details helps you to understand
    the criticalities and possibilities of obtaining evidence from it. You must know
    the model of the device to ensure that the tools and methodologies being deployed
    support that particular iPhone. Additionally, the internal storage size of the
    iPhone must be determined to ensure that the evidence container is large enough
    for the entire forensic image. Most tools will not alert you if there is not enough
    disk space on the evidence drive until space has run out. This will waste time
    and force you to acquire the device a second time. Finally, the network capabilities
    of the device must also be noted so that you can properly isolate the device to
    prevent remote accessing or wiping during the examination. This will be discussed
    further in [Chapter 3](6bdeccbc-e651-43f3-b5ed-4e6d071adec6.xhtml), *Data Acquisition
    from iOS Devices*.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 每一款iPhone的发布都带来了改进或新增的功能。正如本章前面所述，了解iPhone的细节有助于您理解从中获取证据的重要性和可能性。您必须知道设备的型号，以确保正在使用的工具和方法支持特定的iPhone。此外，必须确定iPhone的内部存储大小，以确保证据容器足够大，可以容纳整个取证镜像。大多数工具在证据驱动器上的磁盘空间不足时不会提醒您，直到空间用完。这将浪费时间，并迫使您再次获取设备。最后，还必须注意设备的网络功能，以便您可以正确地隔离设备，防止在检查过程中进行远程访问或擦除。这将在[第3章](6bdeccbc-e651-43f3-b5ed-4e6d071adec6.xhtml)中进一步讨论，*从iOS设备获取数据*。
- en: Again, some familiarity with iPhone device hardware will aid you in determining
    how to handle the device during a forensic investigation. Certain models enforce
    full-disk encryption, while older models do not. Encrypted devices require additional
    steps during an acquisition—if access is even possible. You must be prepared for
    all hurdles you may be required to clear during the acquisition and analytical
    stages of the investigation. In addition to this, knowing the capabilities that
    the iPhone has—and the initial and current iOS version—makes a difference in the
    data you will be able to recover from the device. Apple is not consistent with
    data storage locations across iOS versions. Therefore, you must know the original
    version installed when the phone was first in use to ensure that the forensic
    tools do not overlook data that could aid in the investigation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，对iPhone设备硬件的了解将有助于您确定在取证调查期间如何处理设备。某些型号强制执行全盘加密，而旧型号则没有。加密设备在获取期间需要额外的步骤——如果访问甚至可能。您必须为在取证和分析阶段可能需要克服的所有障碍做好准备。除此之外，了解iPhone的功能和初始和当前的iOS版本对您能够从设备中恢复的数据有影响。苹果在不同的iOS版本中并不一致的数据存储位置。因此，您必须知道手机首次使用时安装的原始版本，以确保取证工具不会忽略可能有助于调查的数据。
- en: More information about identifying iPhone models can be found at [https://support.apple.com/en-us/HT201296](https://support.apple.com/en-us/HT201296).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有关识别iPhone型号的更多信息可以在[https://support.apple.com/en-us/HT201296](https://support.apple.com/en-us/HT201296)找到。
- en: Understanding the iPhone hardware
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解iPhone硬件
- en: The iPhone is a collection of modules, chips, and electronic components from
    different manufacturers. Due to the complexities of the iPhone, the list of hardware
    components is extensive, and each device should be researched for internal components.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone是来自不同制造商的模块、芯片和电子元件的集合。由于iPhone的复杂性，硬件组件的列表很长，每个设备的内部组件都应该进行研究。
- en: For example, the iPhone 11 has an A13 Bionic processor; 64 GB, 128 GB, or 256
    GB storage; 4 GB of RAM; a 6.1-inch Liquid Retina **liquid-crystal display** (**LCD**);
    and a dual-lens 12 MP rear camera array.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，iPhone 11配备了A13仿生处理器；64GB、128GB或256GB存储；4GB的RAM；6.1英寸的Liquid Retina液晶显示屏；以及双镜头1200万像素后置摄像头阵列。
- en: Internal images for all iPhones can be found in the teardown section of [https://www.ifixit.com/Device/iPhone](https://www.ifixit.com/Device/iPhone).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 所有iPhone的内部图像都可以在[https://www.ifixit.com/Device/iPhone](https://www.ifixit.com/Device/iPhone)的拆解部分找到。
- en: iPad models and hardware
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iPad型号和硬件
- en: The Apple iPhone changed the way cell phones are produced and used. Similarly,
    the iPad, a version of the tablet computer introduced in January 2010, quashed
    the sales of notebooks. With the iPad, individuals can shoot videos, take photos,
    play music, read books, browse the internet, and do much more. Various iPad models
    now exist—for example, iPad Air 3 and iPad Pro—with different features and storage
    capabilities. More information on identifying iPad models can be found at [https://support.apple.com/en-in/HT201471](https://support.apple.com/en-in/HT201471).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果iPhone改变了手机的生产和使用方式。同样，iPad是2010年1月推出的平板电脑版本，打击了笔记本电脑的销售。通过iPad，个人可以拍摄视频、拍照、播放音乐、阅读书籍、浏览互联网等等。现在有各种不同的iPad型号，例如iPad
    Air 3和iPad Pro，具有不同的功能和存储能力。有关识别iPad型号的更多信息可以在[https://support.apple.com/en-in/HT201471](https://support.apple.com/en-in/HT201471)找到。
- en: As with the iPhone, not all versions of the iPad are supported for filesystem
    acquisition. Additionally, Apple changes data storage locations in iOS versions,
    which affects iPad devices as well. You must be aware of the different models,
    the released and currently installed iOS version, the storage capability, the
    network access vectors, and more.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 与iPhone一样，并非所有版本的iPad都支持文件系统获取。此外，苹果在iOS版本中更改了数据存储位置，这也影响了iPad设备。您必须了解不同的型号、发布和当前安装的iOS版本、存储能力、网络访问向量等。
- en: Understanding the iPad hardware
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解iPad硬件
- en: One of the key factors of the success of Apple iOS devices is the proper selection
    of their hardware components. Just like the iPhone, the iPad is also a collection
    of modules, chips, and electronic components from different manufacturers. Internal
    images for all iPads can be found in the teardown section of [https://www.ifixit.com/Device/iPad](https://www.ifixit.com/Device/iPad).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果iOS设备成功的关键因素之一是它们硬件组件的正确选择。就像iPhone一样，iPad也是来自不同制造商的模块、芯片和电子元件的集合。所有iPad的内部图像都可以在[https://www.ifixit.com/Device/iPad](https://www.ifixit.com/Device/iPad)的拆解部分找到。
- en: The HFS Plus and APFS filesystems
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HFS Plus和APFS文件系统
- en: To better understand the forensic process of an iOS device, it is useful to
    know about the filesystem that is used. Originally, the filesystem used in the
    iPhone and other Apple iOS devices was HFSX. This is a variation of HFS Plus,
    with one major difference. HFSX is case-sensitive, whereas HFS Plus is case-insensitive.
    Other differences will be discussed later in this chapter. APFS was introduced
    in June 2016 as a replacement for HFS Plus and became the default filesystem for
    iOS devices with the release of iOS 10.3, and for macOS devices with the release
    of macOS 10.13.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解iOS设备的取证过程，了解所使用的文件系统是很有用的。最初，iPhone和其他苹果iOS设备使用的文件系统是HFSX。这是HFS Plus的一个变体，有一个主要的区别。HFSX是区分大小写的，而HFS
    Plus是不区分大小写的。其他区别将在本章后面讨论。APFS于2016年6月推出，作为HFS Plus的替代品，并成为iOS 10.3发布时iOS设备的默认文件系统，以及macOS
    10.13发布时macOS设备的默认文件系统。
- en: The HFS Plus filesystem
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HFS Plus文件系统
- en: In 1996, Apple developed a new filesystem, HFS, to accommodate the storage of
    large datasets. In an HFS filesystem, the storage medium is represented as volumes.
    HFS volumes are divided into logical blocks of 512 bytes. The logical blocks are
    numbered from first to last on a given volume and will remain static with the
    same size as physical blocks—that is, 512 bytes. These logical blocks are grouped
    together into allocation blocks, which are used by the HFS filesystem to track
    data in a more efficient way. HFS uses a 16-bit value to address allocation blocks,
    which limits the number of allocation blocks to 65,535\. To overcome the inefficient
    allocation of disk space and some of the limitations of HFS, Apple introduced
    the HFS Plus filesystem ([http://dubeiko.com/development/FileSystems/HFSPLUS/tn1150.html](http://dubeiko.com/development/FileSystems/HFSPLUS/tn1150.html)).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 1996年，苹果开发了一个新的文件系统HFS，以适应大型数据集的存储。在HFS文件系统中，存储介质被表示为卷。HFS卷被划分为逻辑块，每个块大小为512字节。逻辑块在给定卷上从第一个到最后一个编号，并且将保持与物理块相同大小的静态大小，即512字节。这些逻辑块被组合成分配块，HFS文件系统使用这些分配块以更有效的方式跟踪数据。HFS使用16位值来寻址分配块，这限制了分配块的数量为65535。为了克服磁盘空间的低效分配和HFS的一些限制，苹果推出了HFS
    Plus文件系统([http://dubeiko.com/development/FileSystems/HFSPLUS/tn1150.html](http://dubeiko.com/development/FileSystems/HFSPLUS/tn1150.html))。
- en: 'The HFS Plus filesystem was designed to support larger file sizes. Sectors
    on HFS volumes are usually 512 bytes in size. These sectors form allocation blocks.
    The number of such blocks depends on the size of the volume. HFS Plus uses block
    addresses of 32 bits to address allocation blocks. HFS Plus uses *journaling*
    by default. Journaling is the process of logging every transaction to the disk,
    which helps prevent filesystem corruption. The key characteristics of the HFS
    Plus filesystem include the following: efficient use of disk space, Unicode support
    for filenames, support for name forks, file compression, journaling, dynamic resizing,
    dynamic defragmentation, and an ability to boot on OSes other than macOS.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: HFS Plus文件系统设计用于支持更大的文件大小。 HFS卷上的扇区通常为512字节。这些扇区形成分配块。此类块的数量取决于卷的大小。 HFS Plus使用32位块地址来寻址分配块。
    HFS Plus默认使用*日志记录*。日志记录是将每个事务记录到磁盘的过程，有助于防止文件系统损坏。 HFS Plus文件系统的关键特征包括以下内容：高效使用磁盘空间，文件名的Unicode支持，对名称分支的支持，文件压缩，日志记录，动态调整大小，动态碎片整理以及在macOS之外的操作系统上引导的能力。
- en: The HFS Plus volume
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HFS Plus卷
- en: 'The HFS Plus volume contains a number of internal structures to manage the
    organization of data. These structures include a header, an alternate header,
    and five special files: an allocation file, an extents overflow file, a catalog
    file, an attributes file, and a startup file. Among the five files, three files
    (the extents overflow file, the catalog file, and the attributes file) use a B-Tree
    structure. This is a data structure that allows data to be efficiently searched,
    viewed, modified, or removed. The HFS Plus volume structure is shown in the following
    diagram:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: HFS Plus卷包含许多内部结构来管理数据的组织。这些结构包括一个头部，一个备用头部和五个特殊文件：分配文件，范围溢出文件，目录文件，属性文件和启动文件。在这五个文件中，三个文件（范围溢出文件，目录文件和属性文件）使用B-Tree结构。这是一种允许数据被高效搜索，查看，修改或删除的数据结构。
    HFS Plus卷结构如下图所示：
- en: '![](img/e433c31a-7e4d-40b6-a58a-756e53a09081.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e433c31a-7e4d-40b6-a58a-756e53a09081.png)'
- en: The HFS Plus volume structure
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: HFS Plus卷结构
- en: 'The volume structure is described as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 卷结构描述如下：
- en: 'Reserved (1024 bytes): This is reserved for bootloader information.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保留（1024字节）：这是用于引导加载程序信息的保留空间。
- en: '**Volume Header**: This stores volume information, such as the size of allocation
    blocks, a timestamp of when the volume was created, and metadata about each of
    the five special files.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卷头**：这存储卷信息，例如分配块的大小，卷创建时间戳以及有关五个特殊文件的元数据。'
- en: '**Allocation File**: This file is used to track which allocation blocks are
    in use by the system. The file format consists of 1 bit for every allocation block.
    If the bit is set, the block is in use. If it is not set, the block is free.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分配文件**：此文件用于跟踪系统正在使用的分配块。文件格式由每个分配块的1位组成。如果设置了该位，则该块正在使用中。如果未设置，则该块为空闲。'
- en: '**Extents Overflow File**: This file records the allocation blocks that are
    allocated when the file size exceeds eight blocks, which helps in locating the
    actual data when referred. Bad blocks are also recorded in the file.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**范围溢出文件**：此文件记录分配块，当文件大小超过八个块时分配，这有助于在引用时定位实际数据。坏块也记录在文件中。'
- en: '**Catalog File**: This file contains information about the hierarchy of files
    and folders, which is used to locate any file and folder within the volume.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录文件**：此文件包含有关文件和文件夹层次结构的信息，用于在卷内定位任何文件和文件夹。'
- en: '**Attributes File**: This file contains inline data attribute records, fork
    data attribute records, and extension attribute records.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**属性文件**：此文件包含内联数据属性记录，分叉数据属性记录和扩展属性记录。'
- en: '**Startup File**: This file contains the information needed to assist in booting
    a system that does not have HFS Plus support.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动文件**：此文件包含启动没有HFS Plus支持的系统所需的信息。'
- en: 'Alternate Volume Header: This is a backup of the volume header, and it''s mainly
    used for disk repairing.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备用卷头：这是卷头的备份，主要用于磁盘修复。
- en: 'Reserved (512 bytes): This is reserved for use by Apple, and it is used during
    the manufacturing process.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保留（512字节）：这是由苹果公司保留使用的，用于制造过程中。
- en: Next, let's look at the APFS filesystem.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看APFS文件系统。
- en: The APFS filesystem
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: APFS文件系统
- en: 'APFS is a new filesystem for iOS, macOS, tvOS, and watchOS. It is a 64-bit
    filesystem and supports over 9 quintillion files on a single volume. The following
    is a list of its main features:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: APFS是iOS，macOS，tvOS和watchOS的新文件系统。这是一个64位文件系统，支持单个卷上的超过9万亿文件。以下是其主要特点列表：
- en: '**Clones**: These are instantaneous copies of files or directories. Modifications
    are written elsewhere and continue to share the unmodified blocks; the changes
    are saved as deltas of the cloned file.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**克隆**：这些是文件或目录的瞬时副本。修改被写入其他位置，并继续共享未修改的块；更改保存为克隆文件的增量。'
- en: '**Snapshots**: **Point-in-Time** (**PIT**) read-only instances of the filesystem.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快照**：文件系统的**时间点**（**PIT**）只读实例。'
- en: '**Space sharing**: This allows multiple filesystems to share the same underlying
    free space on a physical volume.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间共享**：这允许多个文件系统共享物理卷上相同的底层空闲空间。'
- en: '**Encryption**: There are three modes, as follows:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密**：有三种模式，如下：'
- en: No encryption
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无加密
- en: Single-key encryption
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单密钥加密
- en: Multi-key encryption with per-file keys for file data and a separate key for
    sensitive metadata
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用每个文件数据的文件密钥和敏感元数据的单独密钥进行多密钥加密
- en: Depending on the hardware, the **Advanced Encryption Standard-XEX-based tweaked
    codebook mode with ciphertext stealing** (**AES-XTS**) or the **Advanced Encryption
    Standard****-Cipher Blocker Chaining** (**AES-CBC**) encryption mode is used.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 根据硬件，使用**基于高级加密标准-XEX的调整码本模式与密文窃取**（**AES-XTS**）或**高级加密标准-密码块链接**（**AES-CBC**）加密模式。
- en: '**Crash protection**: This is a novel copy-on-write metadata scheme; it''s
    used to ensure that filesystem updates are crash-protected.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**崩溃保护**：这是一种新颖的写时复制元数据方案；用于确保文件系统更新受到崩溃保护。'
- en: '**Sparse files**: These allow the logical size of files to be greater than
    the physical space they occupy on the disk.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稀疏文件**：这允许文件的逻辑大小大于它们在磁盘上占用的物理空间。'
- en: '**Fast directory sizing**: This quickly computes the total space used by a
    directory hierarchy, allowing it to be updated as the hierarchy evolves.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速目录大小计算**：这可以快速计算目录层次结构使用的总空间，允许在层次结构发展时进行更新。'
- en: The APFS structure
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: APFS结构
- en: 'So, APFS is structured in a single container that may contain one or more volumes.
    The APFS structure is presented in the following diagram:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，APFS结构是以单个容器结构的形式呈现的，该容器可能包含一个或多个卷。APFS结构如下图所示：
- en: '![](img/99f50f83-528f-4476-b8d0-6a5291f5f114.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/99f50f83-528f-4476-b8d0-6a5291f5f114.png)'
- en: Overview of the APFS structure
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: APFS结构概述
- en: Each filesystem structure in APFS starts with a block header. The block header
    starts with a checksum (Fletcher's checksum algorithm is used) for the whole block
    and also contains the copy-on-write version of the block, the block ID, and the
    block type.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: APFS中的每个文件系统结构都以块头开头。块头以整个块的校验和（使用Fletcher的校验和算法）开头，并包含块的写入版本、块ID和块类型。
- en: 'The APFS structure can be explained as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: APFS结构可以解释如下：
- en: The Container Superblock contains information on the block size, the number
    of blocks and pointers to the space manager for this task, the block IDs of all
    volumes, and a pointer to a block map B-Tree (which contains entries for each
    volume, along with its ID and offset).
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器超级块包含有关块大小、块数和指向此任务的空间管理器的指针、所有卷的块ID以及指向块映射B-Tree的指针（其中包含每个卷的条目，以及其ID和偏移量）。
- en: '**Nodes** are used for storing different kinds of entries. They can be part
    of a B-Tree or exist on their own and can contain either flexible or fixed-sized
    entries.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点**用于存储不同类型的条目。它们可以是B-Tree的一部分，也可以独立存在，并且可以包含灵活大小或固定大小的条目。'
- en: The Space Man(ager) manages the allocated blocks in the APFS container, and
    stores the number of free blocks and a pointer to the Allocation Info File.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空间管理器管理APFS容器中分配的块，并存储空闲块数和指向分配信息文件的指针。
- en: The **A****llocation Info File** stores the allocation file's length, version,
    and the offset.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分配信息文件**存储分配文件的长度、版本和偏移量。'
- en: The **B-Trees** manage multiple nodes and contain the offset of the root node.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**B-Tree**管理多个节点，并包含根节点的偏移量。'
- en: A **Volume Superblock** contains the name of the volume, its ID, and a timestamp.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卷超级块**包含卷的名称、ID和时间戳。'
- en: As for allocation files, they are simple bitmaps and do not have a block header
    and type ID.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 至于分配文件，它们是简单的位图，没有块头和类型ID。
- en: Disk layout
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 磁盘布局
- en: 'By default, the filesystem is configured as two logical disk partitions: the
    system (root or firmware) partition and the user data partition.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，文件系统配置为两个逻辑磁盘分区：系统（根或固件）分区和用户数据分区。
- en: The system partition contains the OS and all of the preloaded applications used
    with the iPhone. The system partition is mounted as read-only unless an OS upgrade
    is in progress or the device is jailbroken. The partition is updated only when
    a firmware upgrade is performed on the device. During this process, the entire
    partition is formatted by iTunes without affecting any of the user data. The system
    partition takes only a small portion of storage space, normally between 0.8 GB
    and 4 GB, depending on the size of the NAND drive. As the system partition was
    designed to remain in a factory state for the entire lifetime of the iPhone, there
    is typically little useful evidentiary information that can be obtained from it.
    If the iOS device is jailbroken, the files containing information regarding the
    jailbreak and user data may be resident on the system partition. Jailbreaking
    an iOS device allows the user root access to the device, but voids the manufacturer
    warranty. Jailbreaking will be discussed later in this chapter.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 系统分区包含iPhone使用的操作系统和所有预装的应用程序。系统分区被挂载为只读，除非正在进行操作系统升级或设备已越狱。只有在设备上进行固件升级时，分区才会更新。在此过程中，iTunes会对整个分区进行格式化，而不会影响任何用户数据。系统分区只占用很小的存储空间，通常在0.8GB到4GB之间，取决于NAND驱动器的大小。由于系统分区设计为在iPhone的整个生命周期内保持工厂状态，因此通常很少有有用的证据信息可以从中获取。如果iOS设备已越狱，则包含有关越狱和用户数据的文件可能驻留在系统分区上。越狱iOS设备允许用户对设备进行根访问，但会使制造商保修失效。越狱将在本章后面讨论。
- en: The user data partition contains all the user-created data, ranging from music
    and contacts to third-party application data. The user data partition occupies
    most of the NAND memory and is mounted to the `/private/var` directory on the
    device. Most of the evidentiary information can be found in this partition. During
    a filesystem acquisition, the user data partition contents should be captured
    and saved as a `.tar` file. Acquired data can be easily extracted and parsed by
    most commercial mobile forensic tools.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 用户数据分区包含所有用户创建的数据，从音乐和联系人到第三方应用程序数据。用户数据分区占用大部分NAND存储器，并挂载到设备上的`/private/var`目录。大部分证据信息可以在此分区中找到。在文件系统获取期间，应捕获并保存用户数据分区内容为`.tar`文件。获取的数据可以轻松地通过大多数商用移动取证工具进行提取和解析。
- en: The iPhone OS
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iPhone OS
- en: iOS is Apple's most advanced and feature-rich proprietary mobile OS. It was
    released with the first generation of the iPhone. When introduced, it was named
    iPhone OS, and it was later renamed iOS to reflect the unified nature of the OS
    that powers all Apple iOS devices, such as the iPhone, iPod touch, iPad, and Apple
    TV. iOS is derived from core OS X technologies and is streamlined to be compact
    and efficient for mobile devices.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: iOS是苹果最先进和功能丰富的专有移动操作系统。它是随第一代iPhone一起发布的。刚开始时，它被称为iPhone OS，后来改名为iOS，以反映驱动所有苹果iOS设备（如iPhone、iPod
    touch、iPad和Apple TV）的操作系统的统一性质。iOS源自核心OS X技术，经过精简，使其紧凑高效，适用于移动设备。
- en: It utilizes a multi-touch interface, where simple gestures are used to operate
    and control the device, such as swiping your finger across the screen to move
    to the successive page or pinching your fingers to zoom. In simple terms, iOS
    assists with the general functioning of the device.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 它利用多点触摸界面，使用简单的手势来操作和控制设备，比如在屏幕上滑动手指以移动到下一页，或者捏合手指来缩放。简而言之，iOS协助设备的一般功能。
- en: The iOS architecture
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS架构
- en: iOS is an intermediary between the device hardware components and the applications
    on the screen. The applications don't interact with the underlying hardware directly.
    Instead, they do it through a well-defined system interface that protects them
    from hardware changes. This abstraction makes it easy to build applications that
    work on devices with different hardware capabilities.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: iOS是设备硬件组件和屏幕上的应用程序之间的中介。应用程序不直接与底层硬件交互。相反，它们通过一个明确定义的系统接口进行交互，以保护它们免受硬件更改的影响。这种抽象使得可以轻松构建适用于具有不同硬件功能的设备的应用程序。
- en: 'The iOS architecture consists of four layers: the Cocoa Touch layer, the Media
    layer, the Core Services layer, and the Core OS layer. Each layer consists of
    several frameworks that help to build an application, as illustrated in the following
    diagram:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: iOS架构由四个层次组成：Cocoa Touch层、媒体层、核心服务层和核心OS层。每个层都包含几个框架，帮助构建应用程序，如下图所示：
- en: '![](img/ea1ddfbe-6b37-485c-ac05-f340e04262a9.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea1ddfbe-6b37-485c-ac05-f340e04262a9.png)'
- en: The iOS layers
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: iOS层
- en: 'These layers can be described as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这些层可以描述如下：
- en: '**Cocoa Touch**: This layer contains the key frameworks required to develop
    the visual interface for iOS applications. Frameworks in this layer provide the
    basic application infrastructure and support key technologies, such as touch-based
    input, multitasking, and many high-level system services.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cocoa Touch**：该层包含开发iOS应用程序所需的关键框架。该层中的框架提供基本的应用程序基础设施，并支持关键技术，如基于触摸的输入、多任务处理和许多高级系统服务。'
- en: '**Media**: This layer provides the graphics, audio, and video frameworks to
    create the best multimedia experience available on a mobile device. The technologies
    in this layer help developers to build applications that look and sound great.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**媒体**：该层提供图形、音频和视频框架，以在移动设备上创建最佳的多媒体体验。该层中的技术帮助开发人员构建外观和声音出色的应用程序。'
- en: '**Core Services**: This layer provides the fundamental system services that
    are required for the applications. Not all of these services are used by developers,
    though many parts of the system are built on top of them. This layer contains
    technologies that enable support for location services, iCloud, and social media.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心服务**：该层提供应用程序所需的基本系统服务。虽然开发人员并非都使用这些服务，但系统的许多部分都是基于它们构建的。该层包含使位置服务、iCloud和社交媒体得到支持的技术。'
- en: '**Core OS**: This layer is the base layer and sits directly on top of the device
    hardware. This layer deals with low-level functionalities and provides services
    such as networking (**Berkeley Software Distribution** (**BSD**) sockets), memory
    management, threading (**Portable Operating System Interface** (**POSIX**) threads),
    filesystem handling, external accessories access, and **Inter Process Communication**
    (**IPC**).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心OS**：该层是基础层，直接位于设备硬件之上。该层处理低级功能，并提供诸如网络（**伯克利软件发行**（**BSD**）套接字）、内存管理、线程（**可移植操作系统接口**（**POSIX**）线程）、文件系统处理、外部配件访问和**进程间通信**（**IPC**）等服务。'
- en: Now that we have learned about the iOS architecture, let's have a look at iOS
    security.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了iOS架构，让我们来看看iOS安全。
- en: iOS security
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS安全
- en: 'Newer versions of iOS have been designed with security at their core. At the
    highest level, the iOS security architecture is as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 较新版本的iOS设计时将安全性作为核心。在最高层次上，iOS安全架构如下：
- en: '![](img/c38cd4a8-438d-4f8d-9ebb-602e4b1483c9.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c38cd4a8-438d-4f8d-9ebb-602e4b1483c9.png)'
- en: The iOS security architecture
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: iOS安全架构
- en: Apple iOS devices such as iPhone, iPad, and iPod Touch are designed with layers
    of security. Low-level hardware features safeguard from malware attacks, and the
    high-level OS features prevent unauthorized use. A brief overview of the iOS security
    features is provided in the following sections.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果iOS设备，如iPhone、iPad和iPod Touch，设计有多层安全保障。低级硬件功能可防止恶意软件攻击，高级操作系统功能可防止未经授权的使用。iOS安全功能的简要概述如下所示。
- en: Passcodes, Touch ID, and Face ID
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码、Touch ID和Face ID
- en: Passcodes restrict unauthorized access to the device. Once a passcode is set,
    each time you turn on or wake up the device, it will ask for the passcode to access
    the device. iOS devices support simple as well as complex passcodes. iOS 9 released
    the option to use a six-digit simple passcode instead of the legacy four-digit
    option. The iPhone 5S and later also supports Touch ID fingerprints as a passcode,
    which are backed up with a simple or complex passcode. The iPhone X and later
    support a new biometric way of locking the device—Face ID—so that users can use
    their faces as the passcodes. And it's even more secure, as the chance that a
    stranger will unlock your iPhone with Touch ID is 1 in 50,000, but with Face ID
    it is 1 in 1,000,000.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Passcodes限制未经授权的设备访问。一旦设置了密码，每次打开或唤醒设备时，都会要求输入密码才能访问设备。iOS设备支持简单和复杂的密码。iOS 9发布了使用六位简单密码的选项，而不是传统的四位选项。iPhone
    5S及更高版本还支持Touch ID指纹作为密码，这些指纹可以与简单或复杂的密码一起使用。iPhone X及更高版本支持一种新的生物识别方式来锁定设备——Face
    ID——用户可以使用他们的脸作为密码。而且它更安全，因为使用Touch ID解锁您的iPhone的陌生人的几率是50,000分之1，但使用Face ID是1,000,000分之1。
- en: Code signing
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码签名
- en: 'Code signing prevents users from downloading and installing unauthorized applications
    on the device. Apple says the following about it:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 代码签名防止用户在设备上下载和安装未经授权的应用程序。苹果对此的说法如下：
- en: '*"Code Signing is the process by which your compiled iOS application is sealed
    and identified as yours. Also, iOS devices won''t run an application or load a
    library unless it is signed by a trusted party. To ensure that all apps come from
    a known and approved source and have not been tampered with, iOS requires that
    all executable code be signed using an Apple-issued certificate."*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: “代码签名是将您编译的iOS应用封存并标识为您自己的过程。此外，iOS设备不会运行未经可信方签名的应用程序或加载库。为了确保所有应用程序来自已知和批准的来源，并且没有被篡改，iOS要求所有可执行代码都使用由苹果签发的证书进行签名。”
- en: Sandboxing
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 沙箱
- en: Sandboxing mitigates post-code-execution exploitation by placing the application
    into a tightly restricted area. Applications installed on the iOS device are sandboxed,
    and one application cannot access the data stored by another. Essentially, a sandbox
    is a mechanism that enforces fine-grained controls that limit an application's
    access to files, network resources, hardware, and more.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 沙箱通过将应用程序置于严格受限的区域中来减轻代码执行后的利用。安装在iOS设备上的应用程序都被置于沙箱中，一个应用程序无法访问另一个应用程序存储的数据。基本上，沙箱是一种强制执行细粒度控制的机制，限制应用程序对文件、网络资源、硬件等的访问。
- en: Encryption
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密
- en: On iOS devices (starting with the iPhone 4), the entire filesystem is encrypted
    with a filesystem key, which is computed from the device's unique hardware key.
    This key is stored in effaceable storage, which exists between the OS and hardware
    levels of the device. This is the reason that **Joint Test Action Group** (**JTAG**)
    and chip-off methods are not useful acquisition methods, as the entire data dump
    will be encrypted.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在iOS设备上（从iPhone 4开始），整个文件系统都使用文件系统密钥进行加密，该密钥是从设备的唯一硬件密钥计算出来的。这个密钥存储在可消除存储器中，位于设备的操作系统和硬件级别之间。这就是为什么联合测试动作组（JTAG）和芯片取下方法不是有用的获取方法，因为整个数据转储将被加密。
- en: Data protection
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据保护
- en: Data protection is designed to protect data at rest and to make offline attacks
    difficult. It allows applications to leverage the user's device passcode, in concert
    with the device hardware encryption, to generate a strong encryption key. Later,
    the strong encryption key is used to encrypt the data stored on the disk. This
    key protects data from unauthorized access when the device is locked, so critical
    information is secured even if the device is compromised.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 数据保护旨在保护静止数据并使离线攻击变得困难。它允许应用程序利用用户设备的密码，与设备硬件加密一起生成强加密密钥。稍后，强加密密钥用于加密存储在磁盘上的数据。这个密钥在设备锁定时保护数据免受未经授权的访问，因此即使设备被入侵，关键信息也是安全的。
- en: Address Space Layout Randomization (ASLR)
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地址空间布局随机化（ASLR）
- en: ASLR is an exploit mitigation technique introduced with iOS 4.3\. ASLR randomizes
    the application object's location in the memory, making it difficult to exploit
    the memory corruption vulnerabilities.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: ASLR是iOS 4.3引入的一种漏洞缓解技术。ASLR随机化应用程序对象在内存中的位置，使内存损坏漏洞难以利用。
- en: Privilege separation
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特权分离
- en: 'iOS runs with the **principle of least privilege** (**PoLP**). It contains
    two user roles: *root* and *mobile*. The most important processes in the system
    run with root user privileges. All other applications to which the user has direct
    access, such as the browser and third-party applications, run with mobile user
    privileges.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: iOS以最小权限原则（PoLP）运行。它包含两个用户角色：root和mobile。系统中最重要的进程以root用户权限运行。用户可以直接访问的所有其他应用程序（例如浏览器和第三方应用程序）都以mobile用户权限运行。
- en: Stack-smashing protection
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 堆栈破坏保护
- en: Stack-smashing protection is an exploit mitigation mechanism. It protects the
    device against buffer overflow attacks by placing a random and known value (called
    a stack canary) between a buffer and the control data on the stack.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 堆栈破坏保护是一种漏洞缓解机制。它通过在缓冲区和堆栈上的控制数据之间放置一个随机和已知值（称为堆栈哨兵）来保护设备免受缓冲区溢出攻击。
- en: Data Execution Prevention (DEP)
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据执行防护（DEP）
- en: DEP is an exploit mitigation technique mechanism through which a processor can
    distinguish the portions of memory that are executable code from data. For example,
    in a code injection attack, an attacker tries to inject a vector and execute it.
    But DEP prevents this because it recognizes the injected part as data and not
    code.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: DEP是一种通过处理器区分可执行代码和数据内存部分的漏洞缓解技术机制。例如，在代码注入攻击中，攻击者试图注入一个向量并执行它。但是DEP会阻止这种情况，因为它将注入部分识别为数据而不是代码。
- en: Data wiping
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据擦除
- en: iOS provides the Erase All Content and Settings option to wipe the data on an
    iPhone. This type of data wipe erases user settings and information by removing
    the encryption keys that protect the data. As the encryption keys are erased from
    the device, it is not possible to recover the deleted data, not even during forensic
    investigations. Other wiping methods are available that overwrite the data in
    the device memory. More information on wiping can be found at [https://support.apple.com/en-in/HT201274](https://support.apple.com/en-in/HT201274).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: iOS提供“擦除所有内容和设置”选项来擦除iPhone上的数据。这种类型的数据擦除通过删除保护数据的加密密钥来擦除用户设置和信息。由于加密密钥从设备中擦除，因此无法恢复已删除的数据，即使在取证调查期间也是如此。还有其他覆盖设备内存中数据的擦除方法。有关擦除的更多信息，请访问[https://support.apple.com/en-in/HT201274](https://support.apple.com/en-in/HT201274)。
- en: Activation Lock
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 激活锁
- en: Activation Lock, introduced with iOS 7, is a theft deterrent that works by leveraging
    Find My iPhone. When Find My iPhone is enabled, it enables Activation Lock, and
    a user's Apple ID and password will be required to turn off Find My iPhone, to
    erase the device, and to reactivate it.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 激活锁是iOS 7推出的一种防盗功能，通过利用“查找我的iPhone”来起作用。当“查找我的iPhone”启用时，它会启用激活锁，并且需要用户的Apple
    ID和密码才能关闭“查找我的iPhone”，擦除设备并重新激活它。
- en: The App Store
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: App Store
- en: The App Store is an application distribution platform for iOS, developed and
    maintained by Apple. It is a centralized online store where users can browse and
    download both free and paid apps. These apps expand the functionality of a mobile
    device. As of the first quarter of 2019, there were 2.2 million applications in
    the App Store.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: App Store是由苹果开发和维护的iOS应用分发平台。这是一个集中的在线商店，用户可以浏览和下载免费和付费应用。这些应用扩展了移动设备的功能。截至2019年第一季度，App
    Store中有220万款应用。
- en: Apps available in the App Store are generally written by third-party developers.
    Developers use Xcode and the iOS **software development kit** (**SDK**) to develop
    applications. Later, they submit the app to Apple for approval. Apple follows
    an extensive review process to check the app against the company's guidelines.
    If Apple approves the app, it is published to the App Store, where users can download
    or buy it. The strict review process makes the App Store less prone to malware,
    but not 100% secure.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: App Store中的应用通常由第三方开发人员编写。开发人员使用Xcode和iOS **软件开发工具包**（**SDK**）来开发应用程序。之后，他们将应用提交给苹果进行批准。苹果会对应用进行广泛的审查，以确保符合公司的指南。如果苹果批准了该应用，它将被发布到App
    Store，用户可以下载或购买。严格的审查流程使App Store不太容易受到恶意软件的侵害，但并非100%安全。
- en: XcodeGhost, the Apple malware that infected 50 applications within the Apple
    App Store, was detected in September 2015\. This malware was built into Xcode,
    which made it harder to detect, and was reported to affect more than 500 million
    users worldwide. Once detected, Apple immediately removed the infected applications.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: XcodeGhost是苹果App Store中感染了50个应用程序的苹果恶意软件，于2015年9月被发现。这种恶意软件内置在Xcode中，使其更难以检测，并据报道影响了全球5亿多用户。一旦被发现，苹果立即删除了受感染的应用程序。
- en: Jailbreaking
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 越狱
- en: Jailbreaking is the process of removing limitations imposed by Apple's mobile OS
    through the use of software and hardware exploits. Jailbreaking permits unsigned
    code to run and gain root access on the OS. The most common reason for jailbreaking
    is to expand the limited feature set imposed by Apple's App Store and to install
    unapproved apps. Jailbreaking can aid in forensic acquisition but will void the
    user's warranty, potentially *brick* the device, and may not support being restored
    to the factory settings.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 越狱是通过软件和硬件漏洞来消除苹果移动操作系统所施加的限制的过程。越狱允许未经签名的代码在操作系统上运行并获得根访问权限。越狱最常见的原因是扩展苹果App
    Store所施加的有限功能集，并安装未经批准的应用。越狱可以帮助进行取证获取，但会使用户的保修失效，可能会*砖化*设备，并且可能不支持恢复到出厂设置。
- en: If you jailbreak a device, it's best to assume that it will forever be jailbroken
    and the warranty is no longer valid.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您越狱设备，最好假设它将永远被越狱，保修将不再有效。
- en: 'Many publicly available jailbreaking tools add an unofficial application installer
    to the device, such as Cydia, which allows users to install many third-party applications,
    tools, tweaks, and apps from an online file repository. The software downloaded
    from Cydia opens up endless possibilities on a device that a non-jailbroken device
    would never be able to do. The most popular jailbreaking tools are Pangu, TaiG,
    Electra, and Unc0ver. Not all iOS versions are jailbreakable. The following table
    will help you to choose the appropriate jailbreak tool according to the device
    you have and its iOS version:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 许多公开可用的越狱工具会向设备添加一个非官方的应用安装程序，如Cydia，允许用户从在线文件存储库安装许多第三方应用程序、工具、调整和应用。从Cydia下载的软件为非越狱设备打开了无限的可能性。最流行的越狱工具包括Pangu、TaiG、Electra和Unc0ver。并非所有iOS版本都可以越狱。以下表格将帮助您根据您拥有的设备及其iOS版本选择适当的越狱工具：
- en: '| **Version** | **Release date** | **Tool** |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| **版本** | **发布日期** | **工具** |'
- en: '| iPhone OS 1.0 | June 29, 2007 | (no name) |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| iPhone OS 1.0 | 2007年6月29日 | (无名称) |'
- en: '| iPhone OS 2.0 | July 11, 2008 | PwnageTool |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| iPhone OS 2.0 | 2008年7月11日 | PwnageTool |'
- en: '| iPhone OS 3.0 | June 17, 2009 | PwnageTool |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| iPhone OS 3.0 | 2009年6月17日 | PwnageTool |'
- en: '| iOS 4.0 | June 21, 2010 | PwnageTool |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| iOS 4.0 | 2010年6月21日 | PwnageTool |'
- en: '| iOS 5.0 | October 12, 2011 | redsn0w |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| iOS 5.0 | 2011年10月12日 | redsn0w |'
- en: '| iOS 6.0 | September 19, 2012 | redsn0w |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| iOS 6.0 | 2012年9月19日 | redsn0w |'
- en: '| iOS 7.0 - 7.0.6 | September 18, 2013 | evasi0n7 |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| iOS 7.0 - 7.0.6 | 2013年9月18日 | evasi0n7 |'
- en: '| iOS 7.1 - 7.1.2 | May 29, 2014 | Pangu |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| iOS 7.1 - 7.1.2 | 2014年5月29日 | Pangu |'
- en: '| iOS 8.0 - 8.1 | September 17, 2014 | Pangu8 |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| iOS 8.0 - 8.1 | 2014年9月17日 | Pangu8 |'
- en: '| iOS 8.1.1 - 8.4 | November 17, 2014 | TaiG, PP Jailbreak |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| iOS 8.1.1 - 8.4 | 2014年11月17日 | TaiG, PP Jailbreak |'
- en: '| iOS 8.4.1 | August 13, 2015 |  EtasonJB |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| iOS 8.4.1 | 2015年8月13日 | EtasonJB |'
- en: '| iOS 9.0  | September 16, 2015 | Pangu9 |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| iOS 9.0  | 2015年9月16日 | Pangu9 |'
- en: '| iOS 9.1 | October 21, 2015 | Pangu9 |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| iOS 9.1 | 2015年10月21日 | Pangu9 |'
- en: '| iOS 9.3.5 | August 25, 2016 | Phoenix |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| iOS 9.3.5 | 2016年8月25日 | Phoenix |'
- en: '| iOS 10.0 - 10.1.1 | September 13, 2016 | Yalu |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| iOS 10.0 - 10.1.1 | 2016年9月13日 | Yalu |'
- en: '| iOS 11.0 - 11.1.2 | September 19, 2017 | LiberiOS |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| iOS 11.0 - 11.1.2 | 2017年9月19日 | LiberiOS |'
- en: '| iOS 11.0 - 11.1.2 | September 19, 2017 | Electra1112 |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| iOS 11.0 - 11.1.2 | 2017年9月19日 | Electra1112 |'
- en: '| iOS 11.0 - 11.4.1 | July 7, 2018 | Electra1131 |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| iOS 11.0 - 11.4.1 | 2018年7月7日 | Electra1131 |'
- en: '| iOS 11.0 - 11.4.1 | October 14, 2018 | Unc0ver |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| iOS 11.0 - 11.4.1 | 2018年10月14日 | Unc0ver |'
- en: '| iOS 12.0 - 12.2, 12.4 - 12.4.2 | September 17, 2019 | Chimera, Unc0ver |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| iOS 12.0 - 12.2, 12.4 - 12.4.2 | 2019年9月17日 | Chimera, Unc0ver |'
- en: '| iOS 12.3 - 13.2.3 | November 10, 2019 | checkra1n |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| iOS 12.3 - 13.2.3 | 2019年11月10日 | checkra1n |'
- en: We have now learned about the jailbreaking process and have had a look at the
    different jailbreaking tools currently available.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '我们现在已经了解了越狱过程，并查看了当前可用的不同越狱工具。 '
- en: Summary
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The first step in the forensic examination of an iOS device should be identifying
    the device model. The model of an iOS device can be used to help you as the examiner
    develop an understanding of the underlying components and capabilities of the
    device, which can be used to drive the methods for acquisition and examination.
    Legacy iOS devices should not be disregarded, because they may surface as part
    of an investigation. You must be aware of all iOS devices, as old devices are
    sometimes still in use and may be tied to a criminal investigation.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对iOS设备进行取证检查的第一步应该是识别设备型号。iOS设备的型号可以帮助您作为检查员了解设备的基本组件和功能，从而驱动获取和检查的方法。不应忽视旧版iOS设备，因为它们可能会在调查中出现。您必须了解所有iOS设备，因为旧设备有时仍在使用，并可能与刑事调查有关。
- en: The next chapter will provide tools that will aid in obtaining data from iOS
    devices to later forensically examine. Not all tools are created equal, so it's
    important to know the best tools to get the job done properly.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将提供工具，这些工具将有助于从iOS设备中获取数据，以便进行法庭取证检查。并非所有工具都是平等的，因此了解最佳工具以正确完成工作非常重要。
