["```js\n<div class=\"weather-container\">\n  <div class=\"temperature-area\">\n  ....\n  </div>\n  <div>...</div>\n  <div>...</div>\n  <!-- 10 more divs -->\n</div>\n```", "```js\n<x-weather></x-weather>\n```", "```js\n<template id=\"image-template\">\n  <div>\n    <h2>Javascript</h2>\n    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/4621/javascript.png\" alt=\"js-logo\" style=\"height: 50px; width: 50px;\">\n  </div>\n</template>\n```", "```js\nconst $template = document.querySelector('#image-template');\n```", "```js\nconst $javascript = document.importNode($template.content, true);\n$body.appendChild($javascript);\n```", "```js\n<link rel=\"import\" href=\"file.html\">\n```", "```js\nDARK_SKY_KEY=DarkSkySecretKey\nGMAP_KEY=GoogleMapAPIKey\n```", "```js\nNODE_ENV=dev\nSERVER_URL=http://localhost:3000\n```", "```js\n<input type=\"text\" name=\"username\">\n```", "```js\n<input type=\"password\" name=\"password\">\n```", "```js\n<x-weather latitude=\"40.7128\" longitude=\"74.0059\" />\n```", "```js\nwindow.addEventListener('load', () => {\n  getLocation();\n});\n\nfunction getLocation() {\n}\n```", "```js\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition, errorPosition);\n  } else {\n    console.error(\"Geolocation is not supported by this browser.\");\n  }\n}\n\nfunction showPosition(position) {\n  const latitude = position.coords.latitude;\n  const longitude = position.coords.longitude;\n\n  console.log(latitude);\n  console.log(longitude);\n}\n\nfunction errorPosition(error) {\n  console.error(error);\n}\n```", "```js\n.\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u2502   \u2514\u2500\u2500 styles.css\n\u2502   \u2514\u2500\u2500 js\n\u2502       \u2514\u2500\u2500 home.js\n\u2514\u2500\u2500 webpack.config.js\n```", "```js\n.\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u2502   \u2514\u2500\u2500 styles.css\n\u2502   \u2514\u2500\u2500 js\n\u2502       \u251c\u2500\u2500 CustomElements\n\u2502       \u2502   \u2514\u2500\u2500 Weather\n\u2502       \u2502       \u2514\u2500\u2500 Weather.js\n\u2502       \u2514\u2500\u2500 home.js\n\u2514\u2500\u2500 webpack.config.js\n```", "```js\nclass Weather extends HTMLElement {\n\n}\n```", "```js\nClass Weather extends HTMLElement {\n\n  constructor() {\n    super();\n\n    this.latitude = this.getAttribute('latitude');\n    this.longitude = this.getAttribute('longitude');\n  }\n\n}\n```", "```js\nthis.innerHTML = ` `;\n```", "```js\nexport default Weather;\n```", "```js\nimport Weather from './CustomElements/Weather/Weather';\n```", "```js\nwindow.addEventListener('load', () => {\n  customElements.define('x-weather', Weather);\n  getLocation();\n});\n```", "```js\n<x-weather />\n```", "```js\nconst $shadowDom = $element.attachShadow({mode: 'open'});\n$shadowDom.innerHTML = `<h2>A shadow Element</h2>`;\n```", "```js\nthis.$shadowRoot = this.attachShadow({mode: 'open'});\n```", "```js\nthis.$shadowRoot.innerHTML = ` <!--Weather template> `;\n```", "```js\nconst $weather = document.querySelector('x-weather');\nconsole.log($weather.shadowRoot);\n```", "```js\nfunction showPosition() {\n  ...\n  function createWeatherElement(className) {\n    const $weather = document.createElement('x-weather');\n    $weather.setAttribute('latitude', latitude);\n    $weather.setAttribute('longitude', longitude);\n    $weather.setAttribute('class', className);\n    return $weather;\n  };\n}\n```", "```js\n<x-weather latitude=\"13.0827\" longitude=\"80.2707\" class=\"small-widget\"></x-weather>\n```", "```js\nconst $largeContainer = document.querySelector('.large-container');\nconst $mediumContainer = document.querySelector('.medium-container');\nconst $smallContainer = document.querySelector('.small-container');\n\n$largeContainer.appendChild(createWeatherElement('large'));\n$mediumContainer.appendChild(createWeatherElement('medium'));\n$smallContainer.appendChild(createWeatherElement('small'));\n```", "```js\n.\n\u251c\u2500\u2500 CustomElements\n\u2502   \u2514\u2500\u2500 Weather\n\u2502       \u2514\u2500\u2500 Weather.js\n\u2514\u2500\u2500 home.js\n```", "```js\n.\n\u251c\u2500\u2500 CustomElements\n\u2502   \u2514\u2500\u2500 Weather\n\u2502       \u251c\u2500\u2500 lib\n\u2502       \u2502   \u2514\u2500\u2500 skycons.js\n\u2502       \u251c\u2500\u2500 services\n\u2502       \u2502   \u2514\u2500\u2500 api\n\u2502       \u2502       \u2514\u2500\u2500 apiCall.js\n\u2502       \u2514\u2500\u2500 Weather.js\n\u2514\u2500\u2500 home.js\n```", "```js\nimport apiCall from './services/api/apiCall';\nimport './lib/skycons';\n```", "```js\nclass Weather extends HTMLElement {\n  constructor() {\n    this.$shadowRoot = this.attachShadow({mode: 'open'});\n    this.$shadowRoot.innerHTML = ` <!-- Weather widget HTML --> `;\n  }\n\n  connectedCallback() {\n    this.latitude = this.getAttribute('latitude');\n    this.longitude = this.getAttribute('longitude');\n  }\n}\n```", "```js\nthis.$icon = this.$shadowRoot.querySelector('#dayIcon');\nthis.$city = this.$shadowRoot.querySelector('#city');\nthis.$temperature = this.$shadowRoot.querySelector('#temperature');\nthis.$summary = this.$shadowRoot.querySelector('#summary');\n```", "```js\nhttp://localhost:3000/getWeather/:lat,long\n```", "```js\nhttp://localhost:3000/getWeather/13.1358854,80.286841\n```", "```js\n{\n  \"latitude\": 13.1358854,\n  \"longitude\": 80.286841,\n  \"timezone\": \"Asia/Kolkata\",\n  \"offset\": 5.5,\n  \"currently\": {\n    \"summary\": \"Overcast\",\n    \"icon\": \"cloudy\",\n    \"temperature\": 88.97,\n    // More information about current weather\n    ...\n  },\n  \"city\": \"Chennai\"\n}\n```", "```js\nsetWeather() {\n  if(this.latitude && this.longitude) {\n    apiCall(`getWeather/${this.latitude},${this.longitude}`, {}, 'GET')\n      .then(response => {\n        this.$city.textContent = response.city;\n        this.$temperature.textContent = `${response.currently.temperature}\u00b0 F`;\n        this.$summary.textContent = response.currently.summary;\n\n        const skycons = new Skycons({\"color\": \"black\"});\n        skycons.add(this.$icon, Skycons[response.currently.icon.toUpperCase().replace(/-/g,\"_\")]);\n        skycons.play();\n      })\n      .catch(console.error);\n    }\n  }\n```", "```js\ndisplayTime() {\n  const date = new Date();\n  const displayTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n  const $time = this.$shadowRoot.querySelector('#time');\n  $time.textContent = displayTime;\n}\n```", "```js\nconnectedCallback() {\n  ...\n  this.ticker = setInterval(this.displayTime.bind(this), 1000);\n}\n\ndisconnectedCallback() {\n  clearInterval(this.ticker);\n}\n```", "```js\nstatic get observedAttributes() { return ['latitude', 'longitude']; }\n```", "```js\nattributeChangedCallback(attr, oldValue, newValue) {\n  if (attr === 'latitude' && oldValue !== newValue) {\n    this.latitude = newValue;\n    this.setWeather();\n  }\n  if(attr === 'longitude' && oldValue !== newValue) {\n    this.longitude = newValue;\n    this.setWeather();\n  }\n}\n```", "```js\ncurrentLatitude = $weather.lat;\n$weather.lat = newLatitude;\n```", "```js\nget long() {\n  return this.longitude;\n}\n\nset long(long) {\n  this.longitude = long;\n  this.setWeather();\n}\n\nget lat() {\n  return this.latitude;\n}\n\nset lat(lat) {\n  this.latitude = lat;\n  this.setWeather();\n}\n```", "```js\nconst  $small  =  createWeatherElement('small'); $smallContainer.appendChild($small); setTimeout(() => { console.log($small.lat, $small.long);\n $small.lat  =  51.5074;\n $small.long  =  0.1278;\n console.log($small.lat, $small.long); }, 10000);\n```", "```js\nnpm install -S webcomponents.js\n```", "```js\nimport  'webcomponents.js';\n```", "```js\nwindow.addEventListener('WebComponentsReady', () => {\n  customElements.define('x-weather', Weather);\n  getLocation();\n});\n```", "```js\nclass PlasticButton extends HTMLButtonElement {\n  constructor() {\n    super();\n\n    this.addEventListener(\"click\", () => {\n      // Draw some fancy animation effects!\n    });\n  }\n}\n```"]