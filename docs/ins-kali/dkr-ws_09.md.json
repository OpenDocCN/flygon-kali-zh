["```\ndocker swarm init\n```", "```\ndocker swarm join --token <swarm_token> <ip_address>:<port>\n```", "```\ndocker swarm join-token --rotate\n```", "```\ndocker node ls\n```", "```\ndocker service create --name <service> <image> <command>\n```", "```\ndocker service update <service> <changes>\n```", "```\ndocker service remove <service>\n```", "```\n    docker swarm init\n    ```", "```\n    Swarm initialized: current node (j2qxrpf0a1yhvcax6n2ajux69) is \n    now a manager.\n    To add a worker to this swarm, run the following command:\n    \u00a0\u00a0\u00a0\u00a0docker swarm join --token SWMTKN-1-2w0fk5g2e18118zygvmvdxartd43n0ky6cmywy0ucxj8j7net1-5v1xvrt7\n    1ag6ss7trl480e1k7 192.168.65.3:2377\n    To add a manager to this swarm, run 'docker swarm join-token \n    manager' and follow the instructions.\n    ```", "```\n    docker node ls\n    ```", "```\n    ID         HOSTNAME          STATUS    AVAILABILITY\n    \u00a0\u00a0MANAGER STATUS\n    j2qx.. *   docker-desktop    Ready     Active\n    \u00a0\u00a0Leader \n    ```", "```\n    docker info\n    ```", "```\n    \u2026\n    Swarm: active\n    \u00a0\u00a0NodeID: j2qxrpf0a1yhvcax6n2ajux69\n    \u00a0\u00a0Is Manager: true\n    \u00a0\u00a0ClusterID: pyejfsj9avjn595voauu9pqjv\n    \u00a0\u00a0Managers: 1\n    \u00a0\u00a0Nodes: 1\n    \u00a0\u00a0Default Address Pool: 10.0.0.0/8  \n    \u00a0\u00a0SubnetSize: 24\n    \u00a0\u00a0Data Path Port: 4789\n    \u00a0\u00a0Orchestration:\n    \u00a0\u00a0\u00a0Task History Retention Limit: 5\n    \u00a0\u00a0Raft:\n    \u00a0\u00a0\u00a0Snapshot Interval: 10000\n    \u00a0\u00a0\u00a0Number of Old Snapshots to Retain: 0\n    \u00a0\u00a0\u00a0Heartbeat Tick: 1\n    \u00a0\u00a0\u00a0Election Tick: 10\n    \u00a0\u00a0Dispatcher:\n    \u00a0\u00a0\u00a0Heartbeat Period: 5 seconds\n    \u00a0\u00a0CA Configuration:\n    \u00a0\u00a0\u00a0Expiry Duration: 3 months\n    \u00a0\u00a0\u00a0Force Rotate: 0\n    ```", "```\n    docker service create --replicas 2 -p 80:80 --name web nginx\n    ```", "```\n    uws28u6yny7ltvutq38166alf\n    overall progress: 2 out of 2 tasks \n    1/2: running   [==========================================>] \n    2/2: running   [==========================================>] \n    verify: Service converged\n    ```", "```\n    docker service ls\n    ```", "```\n    ID              NAME  MODE          REPLICAS   IMAGE\n    \u00a0\u00a0PORTS\n    uws28u6yny7l    web   replicated    2/2        nginx:latest\n    \u00a0\u00a0*:80->80/tcp\n    ```", "```\n    docker service ps web\n    ```", "```\n    ID     NAME    IMAGE    NODE               DESIRED\n    \u00a0\u00a0CURRENT STATE\n    viyz   web.1   nginx    docker-desktop     Running\n    \u00a0\u00a0Running about a minute ago\n    mr4u   web.2   nginx    docker-desktop     Running\n    \u00a0\u00a0Running about a minute ago\n    ```", "```\n    docker service scale web=3\n    ```", "```\n    web scaled to 3\n    overall progress: 3 out of 3 tasks \n    1/3: running   [==========================================>]\n    2/3: running   [==========================================>]\n    3/3: running   [==========================================>]\n    verify: Service converged\n    ```", "```\n    docker service ls\n    ```", "```\n    ID              NAME    MODE          REPLICAS   IMAGE\n    \u00a0\u00a0\u00a0\u00a0PORTS\n    uws28u6yny7l    web     replicated    3/3        nginx:latest\n    \u00a0\u00a0\u00a0\u00a0*:80->80/tcp\n    ```", "```\n    docker node update --availability drain j2qxrpf0a1yhvcax6n2ajux69\n    ```", "```\n    docker service ps web\n    ```", "```\n    NAME         IMAGE            CURRENT STATE\n    \u00a0\u00a0ERROR\n    web.1        nginx:latest     Pending 2 minutes ago\n    \u00a0\u00a0\"no suitable node (1 node\u2026\"\n    \\_ web.1     nginx:latest     Shutdown 2 minutes ago\n    web.2        nginx:latest     Pending 2 minutes ago\n    \u00a0\u00a0\"no suitable node (1 node\u2026\"\n    \\_ web.2     nginx:latest     Shutdown 2 minutes ago\n    web.3        nginx:latest     Pending 2 minutes ago\n    \u00a0\u00a0\"no suitable node (1 node\u2026\"\n    \\_ web.3     nginx:latest     Shutdown 2 minutes ago\n    ```", "```\n    docker node ls\n    ```", "```\n    ID         HOSTNAME          STATUS    AVAILABILITY\n    \u00a0\u00a0MANAGER STATUS\n    j2qx.. *   docker-desktop    Ready     Drain\n    \u00a0\u00a0Leader \n    ```", "```\n    docker service rm web\n    ```", "```\n    web\n    ```", "```\n    docker node update --availability active j2qxrpf0a1yhvcax6n2ajux69\n    ```", "```\n    docker node ls\n    ```", "```\n    ID         HOSTNAME          STATUS    AVAILABILITY\n    \u00a0\u00a0MANAGER STATUS\n    j2qx.. *   docker-desktop    Ready     Active\n    \u00a0\u00a0Leader \n    ```", "```\n    docker node inspect j2qxrpf0a1yhvcax6n2ajux69 --format \"{{ .ManagerStatus.Reachability }}\"\n    ```", "```\n    reachable\n    ```", "```\n    docker node inspect j2qxrpf0a1yhvcax6n2ajux69 --format \"{{ .Status.State }}\"\n    ```", "```\n    ready\n    ```", "```\n    docker node demote <node_id>\n    ```", "```\n    docker node rm <node_id>\n    ```", "```\n    docker node rm --force <node_id>\n    ```", "```\n    docker node swarm join --token <token> <swarm_ip>:<port>\n    ```", "```\ndocker node inspect <node_id>\n```", "```\ndocker stack deploy --compose-file <compose_file> <swarm_name>\n```", "```\ndocker stack ps <swarm_name>\n```", "```\ndocker stack rm <swarm_name>\n```", "```\ndocker service update --image <image_name:tag> <service_name>\n```", "```\n    mkdir swarm; cd swarm\n    ```", "```\n    FROM python:3\n    ENV PYTHONUNBUFFERED 1\n    RUN mkdir /application\n    WORKDIR /application\n    COPY requirements.txt /application/\n    RUN pip install -r requirements.txt\n    COPY . /application/\n    ```", "```\n    1 Django>=2.0,<3.0\n    2 psycopg2>=2.7,<3.0\n    ```", "```\n    1\u00a0version: '3.3'\n    2\n    3\u00a0services:\n    4\u00a0\u00a0\u00a0db:\n    5\u00a0\u00a0\u00a0\u00a0\u00a0image: postgres\n    6\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 5432:5432\n    8\u00a0\u00a0\u00a0\u00a0\u00a0environment:\n    9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- POSTGRES_PASSWORD=docker\n    ```", "```\n    10\u00a0\u00a0\u00a0web:\n    11\u00a0\u00a0\u00a0\u00a0\u00a0build: .\n    12\u00a0\u00a0\u00a0\u00a0\u00a0image: swarm_web:latest\n    13\u00a0\u00a0\u00a0\u00a0\u00a0command: python manage.py runserver 0.0.0.0:8000\n    14\u00a0\u00a0\u00a0\u00a0\u00a0volumes:\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- .:/application\n    16\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 8000:8000\n    18\u00a0\u00a0\u00a0\u00a0\u00a0environment:\n    19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- PGPASSWORD=docker\n    20\u00a0\u00a0\u00a0\u00a0\u00a0depends_on:\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- db\n    ```", "```\n    docker-compose run web django-admin startproject chapter_nine .\n    ```", "```\n    \u2026\n    Status: Downloaded newer image for postgres:latest\n    Creating swarm_db_1 ... done\n    Building web\n    \u2026\n    Successfully built 41ff06e17fe2\n    Successfully tagged swarm_web:latest\n    ```", "```\n    ls -l\n    ```", "```\n    -rw-r--r--  1 user  staff  175  3 Mar 13:45 Dockerfile\n    drwxr-xr-x  6 user  staff  192  3 Mar 13:48 chapter_nine\n    -rw-r--r--  1 user  staff  304  3 Mar 13:46 docker-compose.yml\n    -rwxr-xr-x  1 user  staff  634  3 Mar 13:48 manage.py\n    -rw-r--r--  1 user  staff   36  3 Mar 13:46 requirements.txt\n    ```", "```\n    76\u00a0DATABASES = {\n    77\u00a0\u00a0\u00a0\u00a0\u00a0'default': {\n    78\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'ENGINE': 'django.db.backends.sqlite3',\n    79\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    80\u00a0\u00a0\u00a0\u00a0\u00a0}\n    81\u00a0}\n    ```", "```\n    76\u00a0DATABASES = {\n    77\u00a0\u00a0\u00a0\u00a0\u00a0'default': {\n    78\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'ENGINE': 'django.db.backends.postgresql',\n    79\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'NAME': 'postgres',\n    80\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'USER': 'postgres',\n    81\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'PASSWORD': 'docker',\n    82\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'HOST': 'db',\n    83\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'PORT': 5432,\n    84\u00a0\u00a0\u00a0\u00a0\u00a0}\n    85\u00a0}\n    ```", "```\n     27 \n     28 ALLOWED_HOSTS = [\"0.0.0.0\"]\n    ```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    Creating network test_swarm_default\n    Creating service test_swarm_db\n    Creating service test_swarm_web\n    ```", "```\n    docker service ls\n    ```", "```\n    ID     NAME            MODE        REPLICAS  IMAGE\n    \u00a0\u00a0PORTS\n    dsr.   test_swarm_db   replicated  1/1       postgres\n    kq3\\.   test_swarm_web  replicated  1/1       swarm_web:latest\n    \u00a0\u00a0*:8000.\n    ```", "```\n    docker stack ls\n    ```", "```\n    NAME                SERVICES            ORCHESTRATOR\n    test_swarm          2                   Swarm\n    ```", "```\n    docker stack ps test_swarm\n    ```", "```\n    NAME                IMAGE               NODE\n    \u00a0\u00a0CURRENT STATE\n    test_swarm_web.1    swarm_web:latest    docker-desktop\n    \u00a0\u00a0Running\n    test_swarm_db.1     postgres:latest     docker-desktop\n    \u00a0\u00a0Running\n    ```", "```\n    docker stack rm test_swarm\n    ```", "```\n    Removing service test_swarm_db\n    Removing service test_swarm_web\n    Removing network test_swarm_default\n    ```", "```\n    22\u00a0\u00a0\u00a0\u00a0\u00a0deploy:\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0replicas: 2\n    ```", "```\n    version: '3.3'\n    services:\n    \u00a0\u00a0db:\n    \u00a0\u00a0\u00a0\u00a0image: postgres\n    \u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 5432:5432\n    \u00a0\u00a0\u00a0\u00a0environment:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- POSTGRES_PASSWORD=docker\n    \u00a0\u00a0web:\n    \u00a0\u00a0\u00a0\u00a0build: .\n    \u00a0\u00a0\u00a0\u00a0image: swarm_web:latest\n    \u00a0\u00a0\u00a0\u00a0command: python manage.py runserver 0.0.0.0:8000\n    \u00a0\u00a0\u00a0\u00a0volumes:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- .:/application\n    \u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 8000:8000\n    \u00a0\u00a0\u00a0\u00a0environment:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- PGPASSWORD=docker\n    \u00a0\u00a0\u00a0\u00a0deploy:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0replicas: 2\n    \u00a0\u00a0\u00a0\u00a0depends_on:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- db\n    ```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    docker ps | awk '{print $1 \"\\t\" $2 }'\n    ```", "```\n    CONTAINER         ID\n    2f6eb92414e6      swarm_web:latest\n    e9241c352e12      swarm_web:latest\n    d5e6ece8a9bf      postgres:latest\n    ```", "```\n    docker build . -t swarm_web:patch1\n    ```", "```\n    docker service update --image swarm_web:patch1 test_swarm_web\n    ```", "```\n    image swarm_web:patch1 could not be accessed on a registry \n    to record its digest. Each node will access \n    swarm_web:patch1 independently, possibly leading to different \n    nodes running different versions of the image.\n    test_swarm_web\n    overall progress: 2 out of 2 tasks \n    1/2: running   [=========================================>]\n    2/2: running   [=========================================>]\n    verify: Service converged\n    ```", "```\n    docker ps | awk '{print $1 \"\\t\" $2 }'\n    ```", "```\n    CONTAINER         ID\n    ef4107b35e09      swarm_web:patch1\n    d3b03d8219dd      swarm_web:patch1\n    d5e6ece8a9bf      postgres:latest\n    ```", "```\n    docker service update --update-delay 30s --image swarm_web:latest test_swarm_web\n    ```", "```\n    docker ps | awk '{print $1 \"\\t\" $2 }'\n    ```", "```\n    CONTAINER         ID\n    414e62f6eb92      swarm_web:latest\n    352e12e9241c      swarm_web:latest\n    d5e6ece8a9bf      postgres:latest\n    ```", "```\ndocker config create <config_name> <configuration_file> \n```", "```\ndocker config ls\n```", "```\ndocker config inspect --pretty <config_name>\n```", "```\necho \"<secret_password>\" | docker secret create <secret_name> \u2013\n```", "```\ndocker secret create <secret_name> <secret_file> \n```", "```\ndocker secret ls\n```", "```\n    Django>=2.0,<3.0\n    psycopg2>=2.7,<3.0\n    gunicorn==19.9.0\n    ```", "```\n    12\u00a0\u00a0\u00a0\u00a0\u00a0image: swarm_web:latest\n    13\u00a0\u00a0\u00a0\u00a0\u00a0command: gunicorn chapter_nine.wsgi:application          --bind 0.0.0.0:8000\n    14\u00a0\u00a0\u00a0\u00a0\u00a0volumes:\n    ```", "```\n    docker-compose build\n    ```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    Ignoring unsupported options: build\n    Creating network test_swarm_default\n    Creating service test_swarm_web\n    Creating service test_swarm_db\n    ```", "```\n    10\u00a0\u00a0\u00a0web:\n    11\u00a0\u00a0\u00a0\u00a0\u00a0build: .\n    12\u00a0\u00a0\u00a0\u00a0\u00a0image: swarm_web:latest\n    13\u00a0\u00a0\u00a0\u00a0\u00a0command: gunicorn chapter_nine.wsgi:application          --bind 0.0.0.0:8000\n    14\u00a0\u00a0\u00a0\u00a0\u00a0volumes:\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- .:/application\n    16\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 8000:8000\n    18\u00a0\u00a0\u00a0\u00a0\u00a0environment:\n    19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- PGPASSWORD=docker\n    20\u00a0\u00a0\u00a0\u00a0\u00a0deploy:\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0replicas: 2\n    22\u00a0\u00a0\u00a0\u00a0\u00a0depends_on:\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- db\n    ```", "```\n    24\u00a0\u00a0\u00a0nginx:\n    25\u00a0\u00a0\u00a0\u00a0\u00a0build: ./nginx\n    26\u00a0\u00a0\u00a0\u00a0\u00a0image: swarm_nginx:latest\n    27\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 1337:80\n    29\u00a0\u00a0\u00a0\u00a0\u00a0depends_on:\n    30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- web\n    ```", "```\n    mkdir nginx\n    ```", "```\n    FROM nginx\n    RUN rm /etc/nginx/conf.d/default.conf\n    COPY nginx.conf /etc/nginx/conf.d\n    ```", "```\n    upstream chapter_nine {\n    \u00a0\u00a0\u00a0\u00a0server web:8000;\n    }\n    server {\n    \u00a0\u00a0\u00a0\u00a0listen 80;\n    \u00a0\u00a0\u00a0\u00a0location / {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_pass http://chapter_nine;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_set_header X-Forwarded-For             $proxy_add_x_forwarded_for;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_set_header Host $host;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_redirect off;\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```\n    docker-compose build\n    ```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    Creating network test_swarm_default\n    Creating service test_swarm_db\n    Creating service test_swarm_web\n    Creating service test_swarm_nginx\n    ```", "```\n    docker stack ps test_swarm\n    ```", "```\n    NAME                  IMAGE                 NODE\n    \u00a0\u00a0DESIRED STATE\n    test_swarm_nginx.1    swarm_nginx:latest    docker-desktop\n    \u00a0\u00a0Running\n    test_swarm_web.1      swarm_web:latest      docker-desktop\n    \u00a0\u00a0Running\n    test_swarm_db.1       postgres:latest       docker-desktop\n    \u00a0\u00a0Running\n    test_swarm_web.2      swarm_web:latest      docker-desktop\n    \u00a0\u00a0Running\n    ```", "```\n    docker config create nginx_config nginx/nginx.conf \n    ```", "```\n    u125x6f6lhv1x6u0aemlt5w2i\n    ```", "```\n    docker config ls\n    ```", "```\n    ID           NAME           CREATED           UPDATED\n    u125x6f6\u2026    nginx_config   19 seconds ago    19 seconds ago\n    ```", "```\n    docker config inspect --pretty nginx_config\n    ```", "```\n    ID:             u125x6f6lhv1x6u0aemlt5w2i\n    Name:           nginx_config\n    Created at:          2020-03-04 19:55:52.168746807 +0000 utc\n    Updated at:          2020-03-04 19:55:52.168746807 +0000 utc\n    Data:\n    upstream chapter_nine {\n    \u00a0\u00a0\u00a0\u00a0server web:8000;\n    }\n    server {\n    \u00a0\u00a0\u00a0\u00a0listen 80;\n    \u00a0\u00a0\u00a0\u00a0location / {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_pass http://chapter_nine;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_set_header X-Forwarded-For             $proxy_add_x_forwarded_for;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_set_header Host $host;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_redirect off;\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```\n    FROM nginx:1.17.4-alpine\n    RUN rm /etc/nginx/conf.d/default.conf\n    ```", "```\n    docker-compose build\n    ```", "```\n    25\u00a0\u00a0\u00a0nginx:\n    26\u00a0\u00a0\u00a0\u00a0\u00a0build: ./nginx\n    27\u00a0\u00a0\u00a0\u00a0\u00a0image: swarm_nginx:latest\n    28\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 1337:80\n    30\u00a0\u00a0\u00a0\u00a0\u00a0depends_on:\n    31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- web\n    32\u00a0\u00a0\u00a0\u00a0\u00a0configs:\n    33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- source: nginx_conf\n    34\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target: /etc/nginx/conf.d/nginx.conf\n    35\u00a0\n    36\u00a0configs:\n    37\u00a0\u00a0\u00a0nginx_conf:\n    38\u00a0\u00a0\u00a0\u00a0\u00a0file: nginx/nginx.conf\n    ```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    Creating network test_swarm_default\n    Creating config test_swarm_nginx_conf\n    Creating service test_swarm_db\n    Creating service test_swarm_web\n    Creating service test_swarm_nginx\n    ```", "```\n    echo \"docker\" | docker secret create pg_password \u2013\n    ```", "```\n    4i1cwxst1j9qoh2e6uq5fjb8c\n    ```", "```\n    docker secret ls\n    ```", "```\n    ID                          NAME           CREATED\n    \u00a0\u00a0UPDATED\n    4i1cwxst1j9qoh2e6uq5fjb8c   pg_password    51 seconds ago\n    \u00a0\u00a051 seconds ago\n    ```", "```\n    4\u00a0\u00a0\u00a0db:\n    5\u00a0\u00a0\u00a0\u00a0\u00a0image: postgres\n    6\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 5432:5432\n    8\u00a0\u00a0\u00a0\u00a0\u00a0environment:\n    9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- POSTGRES_PASSWORD=/run/secrets/pg_password\n    10\u00a0\u00a0\u00a0\u00a0secrets:\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- pg_password\n    ```", "```\n    20\u00a0\u00a0\u00a0\u00a0environment:\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- PGPASSWORD=/run/secrets/pg_password\n    22\u00a0\u00a0\u00a0\u00a0deploy:\n    ```", "```\n    41\u00a0secrets:\n    42\u00a0\u00a0pg_password:\n    43\u00a0\u00a0\u00a0\u00a0external: true\n    ```", "```\n    version: '3.3'\n    services:\n    \u00a0\u00a0db:\n    \u00a0\u00a0\u00a0\u00a0image: postgres\n    \u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 5432:5432\n    \u00a0\u00a0\u00a0\u00a0environment:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- POSTGRES_PASSWORD=/run/secrets/pg_password\n    \u00a0\u00a0\u00a0\u00a0secrets:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- pg_password\n    \u00a0\u00a0web:\n    \u00a0\u00a0\u00a0\u00a0build: .\n    \u00a0\u00a0\u00a0\u00a0image: swarm_web:latest\n    ```", "```\n    \u00a0\u00a0\u00a0\u00a0volumes:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- .:/application\n    \u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 8000:8000\n    ```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    Creating network test_swarm_default\n    Creating config test_swarm_nginx_conf\n    Creating service test_swarm_db\n    Creating service test_swarm_web\n    Creating service test_swarm_nginx\n    ```", "```\ndocker run -it --rm   --name swarmpit-installer   --volume /var/run/docker.sock:/var/run/docker.sock   swarmpit/install:1.8\n```", "```\n    docker stack deploy --compose-file docker-compose.yml test_swarm\n    ```", "```\n    docker run -it --rm   --name swarmpit-installer   --volume /var/run/docker.sock:/var/run/docker.sock   swarmpit/install:1.8\n    ```", "```\n    _____      ____ _ _ __ _ __ ___  _ __ (_) |_ \n    / __\\ \\ /\\ / / _` | '__| '_ ` _ \\| '_ \\| | __|\n    \\__ \\\\ V  V / (_| | |  | | | | | | |_) | | |_ \n    |___/ \\_/\\_/ \\__,_|_|  |_| |_| |_| .__/|_|\\__|\n                                     |_|          \n    Welcome to Swarmpit\n    Version: 1.8\n    Branch: 1.8\n    \u2026\n    Application setup\n    Enter stack name [swarmpit]: \n    Enter application port [888]: \n    Enter database volume driver [local]: \n    Enter admin username [admin]: \n    Enter admin password (min 8 characters long): ******\n    DONE.\n    Application deployment\n    Creating network swarmpit_net\n    Creating service swarmpit_influxdb\n    Creating service swarmpit_agent\n    Creating service swarmpit_app\n    Creating service swarmpit_db\n    DONE.\n    ```", "```\n    docker stack ls\n    ```", "```\n    NAME               SERVICES         ORCHESTRATOR\n    swarmpit           4                Swarm\n    test_swarm         3                Swarm\n    ```", "```\n    docker service ls | grep swarmpit\n    ```", "```\n    ID              NAME                 MODE          REPLICAS\n    vi2qbwq5y9c6    swarmpit_agent       global        1/1\n    4tpomyfw93wy    swarmpit_app         replicated    1/1\n    nuxi5egfa3my    swarmpit_db          replicated    1/1\n    do77ey8wz49a    swarmpit_influxdb    replicated    1/1\n    ```", "```\nID       NAME                MODE         REPLICAS\n\u00a0\u00a0IMAGE\nk6kh\u2026    activity_swarm_db   replicated   1/1\n\u00a0\u00a0postgres:latest\ncopa\u2026    activity_swarm_web  replicated   1/1\n\u00a0\u00a0activity_web:latest  \n```"]