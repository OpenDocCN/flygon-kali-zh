["```kt\n<application\n . . . \n     android:roundIcon=\"@mipmap/ic_launcher_round\"\n . . . >\n</application>\n```", "```kt\n<adaptive-icon>\n     <background android:drawable=\"@color/ic_some_background\"/>\n     <foreground android:drawable=\"@mipmap/ic_some_foreground\"/>\n</adaptive-icon>\n```", "```kt\n<vector  \n    android:width=\"24dp\" \n    android:height=\"24dp\" \n    android:viewportHeight=\"24.0\" \n    android:viewportWidth=\"24.0\"> \n\n    <path \n        android:fillColor=\"#FF000000\" \n        android:pathData=\"M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" /> \n\n</vector> \n```", "```kt\n<svg \n    height=\"210\" \n    width=\"210\">\n\n<polygon \n    points=\"100,10 40,198 190,78 10,78 160,198\" \n    style=\"fill:black;fill-rule:nonzero;\"/> \n\n</svg> \n```", "```kt\n<vector  \n    android:width=\"24dp\" \n    android:height=\"24dp\" \n    android:viewportHeight=\"210\" \n    android:viewportWidth=\"210\"> \n\n    <path \n        android:fillColor=\"#000000\" \n        android:pathData=\"M100,10l-60,188l150, \n                -120l-180,0l150,120z\" /> \n\n</vector> \n```", "```kt\nM100,10l-60,188l150,-120l-180,0l150,120z \n```", "```kt\nM100,10 l-60,188 150,-120 -180,0z \n```", "```kt\n<!-- Spaces added for clarity only --> \n<string name=\"arrow_right\"> \n    M50,10 l40,40 l-40,40 l0,-80z \n</string> \n<string name=\"arrow_left\"> \n    M50,10 l-40,40 l40,40 l0,-80z \n</string> \n```", "```kt\n<vector  \n    android:width=\"24dp\" \n    android:height=\"24dp\" \n    android:viewportHeight=\"100.0\" \n    android:viewportWidth=\"100.0\"> \n\n    <path \n        android:name=\"path_left\" \n        android:fillColor=\"#000000\" \n        android:pathData=\"@string/arrow_left\" /> \n\n</vector> \n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<set > \n\n    <objectAnimator \n        android:duration=\"5000\" \n        android:propertyName=\"pathData\" \n        android:repeatCount=\"-1\" \n        android:repeatMode=\"reverse\" \n        android:valueFrom=\"@string/arrow_left\" \n        android:valueTo=\"@string/arrow_right\" \n        android:valueType=\"pathType\" /> \n\n</set> \n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<animated-vector  \n\n    android:drawable=\"@drawable/ic_arrow_left\"> \n\n    <target \n        android:name=\"path_left\" \n        android:animation=\"@animator/arrow_animation\" /> \n\n</animated-vector> \n```", "```kt\nImageView imageView = (ImageView) findViewById(R.id.image_arrow); \nDrawable drawable = imageView.getDrawable(); \n\nif (drawable instanceof Animatable) { \n    ((Animatable) drawable).start(); \n}\n```", "```kt\n<string name=\"first_page\"> \n    M18.41,16.59 L13.82,12 l4.59,-4.59 L17,6 l-6,6 6,6 z \n            M6,6 h2 v12 H6 z \n</string> \n```", "```kt\n<vector  \n    android:height=\"24dp\" \n    android:width=\"24dp\" \n    android:viewportHeight=\"24\" \n    android:viewportWidth=\"24\" > \n\n    <group \n        android:name=\"rotation_group\" \n        android:pivotX=\"12.0\" \n        android:pivotY=\"12.0\" > \n\n        <path \n            android:name=\"page\" \n            android:fillColor=\"#000000\" \n            android:pathData=\"@string/first_page\" /> \n\n    </group> \n\n</vector> \n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<set > \n\n    <objectAnimator \n        android:duration=\"5000\" \n        android:propertyName=\"rotation\" \n        android:repeatCount=\"-1\" \n        android:valueFrom=\"0\" \n        android:valueTo=\"180\" /> \n\n</set> \n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<animated-vector \n\n    android:drawable=\"@drawable/ic_first_page\"> \n\n    <target \n        android:name=\"rotation_group\" \n        android:animation=\"@animator/rotation\" /> \n\n</animated-vector> \n```", "```kt\nImageView imagePage = (ImageView) findViewById(R.id.image_page); \nDrawable page_drawable = imagePage.getDrawable(); \n\nif (page_drawable instanceof Animatable) { \n    ((Animatable) page_drawable).start(); \n} \n```", "```kt\ncompile 'com.android.support:palette-v7:25.2.0' \n```", "```kt\nprivate Palette palette; \nprivate Bitmap bmp; \nprivate TextView textViewVibrant; \nprivate TextView textViewMuted; \n```", "```kt\ntextViewVibrant = (TextView) \n        findViewById(R.id.text_view_vibrant); \n\ntextViewMuted = (TextView) \n        findViewById(R.id.text_view_muted); \n```", "```kt\n bmp = BitmapFactory.decodeResource(getResources(), \n        R.drawable.color_photo); \n```", "```kt\n// Make sure object exists. \nif (bmp != null && !bmp.isRecycled()) { \n    palette = Palette.from(bmp).generate(); \n\n    // Select default color (black) for failed scans. \n    int default_color=000000; \n\n    // Assign colors if found. \n    int vibrant = palette.getVibrantColor(default_color); \n    int muted = palette.getMutedColor(default_color); \n\n    // Apply colors. \n    textViewVibrant.setBackgroundColor(vibrant); \n    textViewMuted.setBackgroundColor(muted); \n} \n```", "```kt\nPalette palette = Palette.from(bmp).generate(); \n```", "```kt\nPalette.from(bmp).generate(new PaletteAsyncListener() { \n\n    public void onGenerated(Palette p) { \n        // Retrieve palette here. \n\n    } \n\n}); \n```"]