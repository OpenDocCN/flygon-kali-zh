- en: '20'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '20'
- en: Understanding DevOps Principles
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解DevOps原则
- en: DevOps is a process that everybody is learning and putting into practice these
    days. But as a software architect, you need to understand and propagate DevOps
    not only as a process, but as a philosophy. This chapter will cover the main concepts,
    principles, and tools you need to develop and deliver your software with DevOps.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps是一个每个人都在学习和实践的过程。但作为软件架构师，您需要理解并传播DevOps，不仅作为一个过程，而且作为一种理念。本章将涵盖您开发和交付软件所需的主要概念、原则和工具。
- en: In considering the DevOps philosophy, this chapter will focus on so-called **service
    design thinking**, that is, keeping in mind the software you are designing as
    a service offered to an organization/part of an organization. The main takeaway
    of this approach is that the highest priority is the value your software gives
    to the target organization. Moreover, you are not offering just working code and
    an agreement to fix bugs, but a solution for all the needs that your software
    was conceived for. In other words, your job includes everything it needs to satisfy
    those needs, such as monitoring users' satisfaction and adapting the software
    when the user needs change. Finally, it is easier to monitor the software to reveal
    issues and new requirements, and to modify it to adapt it quickly to ever-changing
    needs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑DevOps理念时，本章将专注于所谓的**服务设计思维**，即将您设计的软件视为向组织/部分组织提供的服务。这种方法的主要收获是您的软件为目标组织提供的价值最为重要。此外，您不仅提供可工作的代码和修复错误的协议，还提供了您的软件构思的所有需求的解决方案。换句话说，您的工作包括满足这些需求所需的一切，例如监控用户满意度并在用户需求变化时调整软件。最后，更容易监控软件以发现问题和新需求，并迅速修改以适应不断变化的需求。
- en: Service design thinking is strictly tied to the **Software as a Service** (**SaaS**)
    model, which we discussed in *Chapter 4*, *Deciding the Best Cloud-Based Solution*.
    In fact, the simplest way to offer solutions based on web services is to offer
    the usage of web services as a service instead of selling the software that implements
    them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 服务设计思维与我们在*第4章* *决定最佳基于云的解决方案*中讨论的**软件即服务**（**SaaS**）模型紧密相关。事实上，基于Web服务提供解决方案的最简单方式是提供Web服务的使用作为服务，而不是销售实现它们的软件。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Describing what DevOps is and looking at a sample of how to apply it in the
    WWTravelClub project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述DevOps是什么，并查看如何在WWTravelClub项目中应用它的示例
- en: Understanding DevOps principles and deployment stages to leverage the deployment
    process
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解DevOps原则和部署阶段以利用部署过程
- en: Understanding continuous delivery with Azure DevOps
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解使用Azure DevOps进行持续交付
- en: Defining continuous feedback, and discussing the related tools in Azure DevOps
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义持续反馈，并讨论Azure DevOps中相关工具
- en: Understanding SaaS and preparing a solution for a service scenario
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解SaaS并为服务场景准备解决方案
- en: Use case – deploying our package-management application with Azure Pipelines
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用例 - 使用Azure Pipelines部署我们的软件包管理应用程序
- en: In contrast with other chapters, the WWTravelClub project will be presented
    during the topics, and we will offer an additional conclusion at the end of the
    chapter, giving you the opportunity to understand how the DevOps philosophy can
    be implemented. All the screenshots exemplifying the DevOps principles come from
    the main use case of the book, so you will be able to understand the DevOps principles
    easily. By the end of this chapter, you will be able to design software according
    to service design thinking principles and use Azure Pipelines to deploy your application.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他章节不同，WWTravelClub项目将在主题中呈现，并且我们将在章节结束时提供额外的结论，让您有机会了解如何实施DevOps理念。所有展示DevOps原则的截图都来自本书的主要用例，因此您将能够轻松理解DevOps原则。在本章结束时，您将能够根据服务设计思维原则设计软件，并使用Azure
    Pipelines部署应用程序。
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires Visual Studio 2019 Community Edition or better with all
    Azure Tools installed. You may also need an Azure DevOps account, as described
    in *Chapter 3*, *Documenting Requirements with Azure DevOps*. It requires a free
    Azure account too. If you have not already created one, the *Creating an Azure
    account* subsection of *Chapter 1*, *Understanding the Importance of Software
    Architecture*, explains how to do so. This chapter uses the same code as *Chapter
    18*, *Testing Your Code with Unit Test Cases and TDD*, which is available here:
    [https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5](https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要安装Visual Studio 2019社区版或更高版本，并安装所有Azure工具。您可能还需要一个Azure DevOps帐户，如*第3章*
    *使用Azure DevOps记录需求*中所述。还需要一个免费的Azure帐户。如果您尚未创建，*第1章* *了解软件架构的重要性*中的*创建Azure帐户*子章节解释了如何创建。本章使用与*第18章*
    *使用单元测试案例和TDD测试代码*相同的代码，可在此处找到：[https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5](https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5)。
- en: Describing DevOps
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 描述DevOps
- en: DevOps comes from a union of the words *Development and Operations*, so this
    process simply unifies actions in these areas. However, when you start to study
    a little bit more about it, you will realize that connecting these two areas is
    not enough to achieve the true goals of this philosophy.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps源自*开发和运维*这两个词的结合，因此这个过程简单地统一了这两个领域的行动。然而，当您开始更深入地研究它时，您会意识到仅仅连接这两个领域是不足以实现这一理念的真正目标的。
- en: We can also say that DevOps is the process that answers the current needs of
    humanity regarding software delivery.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以说，DevOps是回答当前人类关于软件交付的需求的过程。
- en: 'Donovan Brown, Principal DevOps Manager of Microsoft, has a spectacular definition
    of what DevOps is: *DevOps is the union of people, process, and products to enable
    continuous delivery of value to our end users*. [http://donovanbrown.com/post/what-is-devops](http://donovanbrown.com/post/what-is-devops).'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 微软的首席DevOps经理Donovan Brown对DevOps有一个精彩的定义：*DevOps是人员、流程和产品的结合，以实现向最终用户持续交付价值*。[http://donovanbrown.com/post/what-is-devops](http://donovanbrown.com/post/what-is-devops)。
- en: 'A way to deliver value continuously to our end users, using process, people,
    and products: this is the best description of the DevOps philosophy. We need to
    develop and deliver customer-oriented software. As soon as all areas of the company
    understand that the key point is the end user, your task as a software architect
    is to present the technology that will facilitate the process of delivering.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 持续向我们的最终用户交付价值的方法，使用流程、人员和产品：这是对DevOps哲学的最佳描述。我们需要开发和交付以客户为导向的软件。一旦公司的所有部门都明白关键点是最终用户，作为软件架构师，您的任务就是提供能够促进交付过程的技术。
- en: It is worth mentioning that all the content of this book is connected to this
    approach. It is never a matter of knowing a bunch of tools and technologies. As
    a software architect, you must understand that it is always a way to bring faster
    solutions easily to your end user, linked to their real needs. For this reason,
    you need to learn the DevOps principles, which will be discussed during the chapter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，本书的所有内容都与这种方法相关。这绝不是了解一堆工具和技术的问题。作为软件架构师，您必须明白，这总是一种更快地为最终用户带来解决方案的方式，与他们的真实需求联系在一起。因此，您需要学习DevOps原则，这将在本章讨论。
- en: Understanding DevOps principles
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解DevOps原则
- en: Considering DevOps as a philosophy, it is worth mentioning that there are some
    principles that enable the process to work well in your team. These principles
    are continuous integration, continuous delivery, and continuous feedback.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将DevOps视为一种哲学，值得一提的是，有一些原则可以使这个过程在您的团队中运行良好。这些原则是持续集成、持续交付和持续反馈。
- en: Microsoft has a specific web page for defining the DevOps overview, culture,
    practices, tools, and its relation to the cloud. Please check this out at [https://azure.microsoft.com/en-us/overview/what-is-devops/](https://azure.microsoft.com/en-us/overview/what-is-devops/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 微软有一个专门的网页来定义DevOps概述、文化、实践、工具及其与云的关系。请查看[https://azure.microsoft.com/en-us/overview/what-is-devops/](https://azure.microsoft.com/en-us/overview/what-is-devops)。
- en: DevOps is represented by the symbol of infinity in many books and technical
    articles. This symbol represents the necessity for a continuous approach in the
    software development life cycle. During the cycle, you will need to plan, build,
    continuously integrate, deploy, operate, get feedback, and start all over again.
    The process must be a collaborative one, since everybody has the same focus—to
    deliver value to the end user. Together with these principles, you as a software
    architect will need to decide the best software development process that fits
    this approach. We discussed these processes in *Chapter 1*, *Understanding the
    Importance of Software Architecture*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多书籍和技术文章中，DevOps以无限符号表示。这个符号代表软件开发生命周期中持续方法的必要性。在整个周期中，您需要计划、构建、持续集成、部署、运营、获得反馈，然后重新开始。这个过程必须是协作的，因为每个人都有同样的关注点——为最终用户提供价值。除了这些原则，作为软件架构师，您还需要决定最适合这种方法的最佳软件开发流程。我们在*第1章*
    *理解软件架构的重要性*中讨论了这些流程。
- en: Defining continuous integration
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义持续集成
- en: When you start building enterprise solutions, collaboration is the key to getting
    things done faster and to meeting the user needs. Version control systems, as
    we discussed in *Chapter 17*, *Best Practices in Coding C# 9*, are essential for
    this process, but the tool by itself does not do the job, especially if the tool
    is not well configured.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开始构建企业解决方案时，协作是更快地完成任务和满足用户需求的关键。版本控制系统，正如我们在*第17章* *C# 9编码最佳实践*中讨论的那样，对于这个过程至关重要，但工具本身并不能完成工作，特别是如果工具没有很好地配置。
- en: As a software architect, **continuous integration** (**CI**) will help you to
    have a concrete approach for software development collaboration. When you implement
    it, as soon as a developer commits their code, the main code is automatically
    built and tested.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件架构师，**持续集成**（**CI**）将帮助您对软件开发协作有一个具体的方法。当您实施它时，一旦开发人员提交他们的代码，主要代码就会自动构建和测试。
- en: The good thing when you apply CI is that you can motivate developers to merge
    their changes as fast as they can to minimize merge conflicts. Besides, they can
    share unit tests, which will improve the quality of software.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 应用CI的好处在于可以激励开发人员尽快合并他们的更改，以最小化合并冲突。此外，他们可以共享单元测试，这将提高软件的质量。
- en: 'It is very simple to set up CI in Azure DevOps. In the build pipeline, you
    will find the option by editing the configuration, as you can see in the following
    screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure DevOps中设置CI非常简单。在构建管道中，您可以通过编辑配置找到该选项，如下面的屏幕截图所示：
- en: '![](img/B16756_20_01.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_01.png)'
- en: 'Figure 20.1: The Enable continuous integration checkbox'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.1：启用持续集成复选框
- en: It is worth mentioning that if you have a solution set with unit and functional
    tests, as soon as you commit the code, it will automatically be compiled and tested.
    This will make your master branch stable and safe after every commit from your
    team.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，如果您的解决方案设置了单元测试和功能测试，一旦提交代码，它将自动编译和测试。这将使您的主分支在团队的每次提交后都保持稳定和安全。
- en: The key point of CI is the ability to identify problems more quickly. You will
    have this opportunity when you allow the code to be tested and analyzed by others.
    The only thing the DevOps approach helps with is making sure this happens as quickly
    as possible.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: CI的关键点是能够更快地识别问题。当您允许他人测试和分析代码时，您将有这个机会。DevOps方法的唯一帮助是确保这一切尽快发生。
- en: Understanding continuous delivery with Azure DevOps
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解使用Azure DevOps进行持续交付
- en: Once every single commit of your application is built, and this code is tested
    with both unit and functional tests, you may also want to deploy it continuously.
    Doing this is not just a matter of configuring the tool. As a software architect,
    you need to be sure that the team and the process are ready to go to this step.
    But let's check how to enable this first scenario of deployment using the book
    use case.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的应用程序的每次提交都构建完成，并且这段代码经过了单元测试和功能测试，你可能也想要持续部署它。这不仅仅是配置工具的问题。作为软件架构师，你需要确保团队和流程准备好进行这一步。但让我们首先检查如何启用使用案例的第一个部署场景。
- en: Deploying our package-management application with Azure Pipelines
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Azure管道部署我们的包管理应用程序
- en: In this section, we will configure an automatic deployment to the Azure App
    Service platform for the DevOps project that we defined in the use case at the
    end of *Chapter 18*, *Testing Your Code with Unit Test Cases and TDD*. Azure DevOps
    can also automatically create a new web app, but to prevent configuration errors
    (which might consume all your free credit), we will create it manually and let
    Azure DevOps just deploy the application. All the required steps are organized
    into various subsections as follows.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为在*第18章*末尾定义的DevOps项目配置自动部署到Azure App Service平台。Azure DevOps也可以自动创建新的Web应用程序，但为了防止配置错误（可能会消耗所有免费信用），我们将手动创建它，并让Azure
    DevOps只是部署应用程序。所有必需的步骤都被组织成各种小节，如下所示。
- en: Creating the Azure Web App and the Azure database
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建Azure Web应用程序和Azure数据库
- en: 'An Azure Web App can be defined by following the simple steps that follow:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下简单的步骤定义Azure Web应用程序：
- en: Go to the Azure Portal and select **App Services**, and then click the **Add**
    button to create a new Web App. Fill in all data as follows:![](img/B16756_20_02.png)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到Azure门户，并选择**应用服务**，然后点击**添加**按钮创建一个新的Web应用程序。填写所有数据如下：![](img/B16756_20_02.png)
- en: 'Figure 20.2: Creating an Azure Web App'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.2：创建Azure Web应用程序
- en: Clearly, you may use a **Resource Group** you already have, and the most convenient
    region for you. For **Runtime stack**, please select the same .NET Core version
    you used in the Visual Studio solution.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，你可以使用你已经拥有的**资源组**和对你来说最方便的区域。对于**运行时堆栈**，请选择与你在Visual Studio解决方案中使用的相同的.NET
    Core版本。
- en: Now, if you have enough credit, let's create a SQL Server database for the application,
    and let's call it `PackagesManagementDatabase`. If you do not have enough credit,
    do not worry—you can still test application deployment, but the application will
    return an error when it tries to access the database. Please refer to the *Relational
    databases* subsection of *Chapter 9*, *How to Choose Your Data Storage in the
    Cloud*, to see how to create a SQL Server database.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你有足够的信用，让我们为应用程序创建一个SQL Server数据库，并将其命名为`PackagesManagementDatabase`。如果你没有足够的信用，不要担心——你仍然可以测试应用程序部署，但当它尝试访问数据库时，应用程序将返回错误。请参考*第9章*的*关系数据库*小节，了解如何创建SQL
    Server数据库。
- en: Configuring your Visual Studio solution
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置你的Visual Studio解决方案
- en: 'Once you have defined the Azure Web App, you need to configure the application
    for running in Azure by following these simple steps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你定义了Azure Web应用程序，你需要按照以下简单的步骤配置应用程序在Azure中运行：
- en: If you defined an Azure database, you need two different connection strings
    in your Visual Studio solution, one for the local databases for development and
    another one for your Azure Web App.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你定义了Azure数据库，你需要在你的Visual Studio解决方案中有两个不同的连接字符串，一个用于开发的本地数据库，另一个用于你的Azure
    Web应用程序。
- en: Now, open both `appsettings.Development.json` and `appsettings.json` in your
    Visual Studio solution, as follows:![](img/B16756_20_03.png)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在你的Visual Studio解决方案中打开`appsettings.Development.json`和`appsettings.json`，如下所示：![](img/B16756_20_03.png)
- en: 'Figure 20.3: Opening settings in Visual Studio'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.3：在Visual Studio中打开设置
- en: 'Then, copy the whole `ConnectionStrings` node of `appsettings.json` into `appsettings.Development.json`,
    as follows:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将`appsettings.json`的整个`ConnectionStrings`节点复制到`appsettings.Development.json`中，如下所示：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now you have the local connection string in the development settings, so you
    can change `DefaultConnection` in `appsettings.json` to one of the Azure databases.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你在开发设置中有本地连接字符串，所以你可以将`appsettings.json`中的`DefaultConnection`更改为Azure数据库之一。
- en: Go to the database in the Azure Portal, copy the connection string, and fill
    it with the username and password you got when you defined the database server.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到Azure门户中的数据库，复制连接字符串，并用你在定义数据库服务器时获得的用户名和密码填写它。
- en: Finally, commit your changes locally and then synchronize with the remote repository.
    Now, your changes are on DevOps Pipelines, which is already processing them to
    get a new build.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，本地提交你的更改，然后与远程存储库同步。现在，你的更改已经在DevOps管道上处理，以获得一个新的构建。
- en: Configuring Azure Pipelines
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置Azure管道
- en: 'Finally, you can configure an Azure pipeline for the automatic delivery of
    your application on Azure by following these steps:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过以下步骤配置Azure管道，自动在Azure上交付你的应用程序：
- en: Connect Visual Studio with your DevOps project by clicking the **Manage Connections**
    link in the **Connections** tab of the Visual Studio **Team Explorer** window.
    Then, click the DevOps link to go to your online project.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击Visual Studio **Team Explorer**窗口的**连接**选项卡中的**管理连接**链接，将Visual Studio与你的DevOps项目连接起来。然后，点击DevOps链接进入你的在线项目。
- en: Modify the `PackagesManagementWithTest` build pipeline by adding a further step
    after the unit test step. In fact, we need a step that prepares all files to be
    deployed in a ZIP file.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`PackagesManagementWithTest`构建管道，添加一个单元测试步骤之后的进一步步骤。实际上，我们需要一个准备所有文件以在ZIP文件中部署的步骤。
- en: 'Click the **Edit** button of the `PackagesManagementWithTest` pipeline, and
    then go to the end of the file and write the following:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`PackagesManagementWithTest`管道的**编辑**按钮，然后转到文件末尾并写入以下内容：
- en: '[PRE1]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When the **Settings** link appears above the new task, click it to configure
    the new task:![](img/B16756_20_04.png)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当新任务上方出现**设置**链接时，点击它来配置新任务：![](img/B16756_20_04.png)
- en: 'Figure 20.4: Configuring the Publish build artifacts pane'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.4：配置发布构建构件窗格
- en: Accept the default **Path to publish** since it is already synchronized with
    the path of the task that will deploy the application, insert the artifact name,
    and then select **Azure Pipelines** as the location. As soon as you save, the
    pipeline will start, and the newly added task should succeed.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受默认的**发布路径**，因为它已与将部署应用程序的任务的路径同步，插入构件名称，然后选择**Azure管道**作为位置。保存后，管道将启动，并且新添加的任务应该成功。
- en: Deployments and other release artifacts are added to different pipelines called
    **Release Pipelines**, to decouple them from build-related artifacts. With **Release
    Pipelines**, you cannot edit a `.yaml` file, but you will work with a graphic
    interface.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署和其他发布构件被添加到称为**发布管道**的不同管道中，以将它们与构建相关的构件解耦。使用**发布管道**，您无法编辑`.yaml`文件，但您将使用图形界面进行操作。
- en: Click the **Releases** left menu tab to create a new **Release Pipeline**. As
    soon as you click **Add a new pipeline**, you will be prompted to add the first
    task of the first pipeline stage. In fact, the whole release pipeline is composed
    of different stages, each grouping sequences of tasks. While each stage is just
    a sequence of tasks, the stages diagram can branch, and we can add several branches
    after each stage. This way, we can deploy to different platforms that each require
    different tasks. In our simple example, we will use a single stage.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**发布**左侧菜单选项卡以创建新的**发布管道**。一旦单击**添加新管道**，您将被提示添加第一个阶段的第一个任务。事实上，整个发布管道由不同的阶段组成，每个阶段都包含一系列任务。虽然每个阶段只是一系列任务，但阶段图可以分支，我们可以在每个阶段后添加几个分支。这样，我们可以部署到每个需要不同任务的不同平台。在我们的简单示例中，我们将使用单个阶段。
- en: Select the **Deploy Azure App Service** task. As soon as you add this task,
    you will be prompted to fill in missing information.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**部署Azure应用服务**任务。一旦添加此任务，您将被提示填写缺少的信息。
- en: Click the **error link** and fill in the missing parameters:![](img/B16756_20_05.png)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**错误链接**并填写缺少的参数：![](img/B16756_20_05.png)
- en: 'Figure 20.5: Configuring the publish stage'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5：配置发布阶段
- en: Select your subscription, and then, if an authorization button appears, please
    click it to **Authorize** Azure Pipelines to access your subscription. Then, select
    Windows as the deployment platform, and finally, select the app service you created
    from the **App service name** drop-down list. Task settings are automatically
    saved while you write them, so you need just to click the **Save** button for
    the whole pipeline.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的订阅，然后，如果出现授权按钮，请单击它以**授权**Azure管道访问您的订阅。然后，选择Windows作为部署平台，最后，从**应用服务名称**下拉列表中选择您创建的应用服务。任务设置在编写时会自动保存，因此您只需为整个管道单击**保存**按钮。
- en: Now, we need to connect this pipeline to a source artifact. Click the **Add
    Artifact** button and then select **Build** as the source type, because we need
    to connect the new release pipeline with the ZIP file created by our build pipeline.
    A settings window appears:![](img/B16756_20_06.png)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要将此管道连接到源构件。单击**添加构件**按钮，然后选择**构建**作为源类型，因为我们需要将新的发布管道与我们的构建管道创建的ZIP文件连接起来。将出现设置窗口：![](img/B16756_20_06.png)
- en: 'Figure 20.6: Defining the artifact to publish'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.6：定义要发布的构件
- en: Select our previous build pipeline from the drop-down list and keep **Latest**
    as the version. Accept the suggested name in **Source alias**.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉列表中选择我们之前的构建管道，并将**最新**保留为版本。接受**源别名**中的建议名称。
- en: Our release pipeline is ready and can be used as it is. The image of the source
    artifact you just added contains a trigger icon in its top-right corner, as follows:![](img/B16756_20_07.png)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的发布管道已经准备就绪，可以直接使用。您刚刚添加的源构件的图像在其右上角包含一个触发图标，如下所示：![](img/B16756_20_07.png)
- en: 'Figure 20.7: Artifact ready to publish'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.7：准备发布的构件
- en: If you click on the trigger icon, you are given the option to automatically
    trigger the release pipeline as soon as a new build is available:![](img/B16756_20_08.png)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果单击触发图标，您将有选项在新构建可用时自动触发发布管道：![](img/B16756_20_08.png)
- en: 'Figure 20.8: Enabling the continuous deployment trigger'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.8：启用持续部署触发器
- en: Keep it disabled; we can enable it after we have completed and manually tested
    the release pipeline.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持其禁用；我们可以在完成并手动测试发布管道后启用它。
- en: As we mentioned earlier, in preparation for an automatic trigger, we need to
    add a human approval task before the application is deployed.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，为了准备自动触发，我们需要在应用程序部署之前添加一个人工批准任务。
- en: Adding a manual approval for the release
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为发布添加手动批准
- en: 'Since tasks are usually executed by software agents, we need to embed human
    approval in a manual job. Let''s add it with the following steps:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 由于任务通常由软件代理执行，我们需要在手动作业中嵌入人工批准。让我们按照以下步骤添加它：
- en: Click the three dots on the right of the **Stage 1** header:![](img/B16756_20_09.png)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**阶段1**标题右侧的三个点：![](img/B16756_20_09.png)
- en: 'Figure 20.9: Adding human approval to a stage'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.9：向阶段添加人工批准
- en: Then, select **Add an agentless job**. Once the agentless job has been added,
    click the **add** button and add a **Manual intervention** task. The following
    screenshot shows the **Manual intervention** settings:![](img/B16756_20_10.png)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择**添加无代理作业**。添加无代理作业后，单击**添加**按钮并添加**手动干预**任务。以下屏幕截图显示了**手动干预**设置：![](img/B16756_20_10.png)
- en: 'Figure 20.10: Configuring human approval for a stage'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.10：配置阶段的人工批准
- en: Add instructions for the operator and select your account in the **Notify users**
    field.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为操作员添加说明，并在**通知用户**字段中选择您的帐户。
- en: Now, drag the whole **Agentless job** with the mouse and place it before the
    application deployment task. It should look like this:![](img/B16756_20_11.png)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用鼠标拖动整个**无代理作业**并将其放置在应用程序部署任务之前。它应该看起来像这样：![](img/B16756_20_11.png)
- en: 'Figure 20.11: Setting the human approval deployment tasks list'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.11：设置人工批准部署任务列表
- en: Finished! Click the **Save** button in the top-left to save the pipeline.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成！点击左上角的**保存**按钮保存管道。
- en: Now, everything is ready to create our first automatic release.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一切都准备好了，可以创建我们的第一个自动发布。
- en: Creating a release
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建发布
- en: 'Once you have everything in place, a new release can be prepared and deployed
    as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你准备好了一切，新的发布可以按照以下步骤准备和部署：
- en: Let's click the **Create release** button to start the creation of a new release,
    as shown in the following screenshot:![](img/B16756_20_12.png)
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建发布**按钮开始创建新的发布，如下截图所示：![](img/B16756_20_12.png)
- en: 'Figure 20.12: Creating a new release'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.12：创建新发布
- en: Verify that the **Source alias** is the last available one, add a **Release
    description**, and then click **Create**. In a short time, you should receive
    an email for release approval. Click the link it contains and go to the approval
    page:![](img/B16756_20_13.png)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证**源别名**是否是最后一个可用的，添加**发布描述**，然后点击**创建**。不久后，你应该会收到一封发布批准的电子邮件。点击其中包含的链接，进入批准页面：![](img/B16756_20_13.png)
- en: 'Figure 20.13: Approving a release'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.13：批准发布
- en: Click the **Approve** button to approve the release. Wait for the **deployment**
    to complete. You should have all the tasks successfully completed, as shown in
    the following screenshot:![](img/B16756_20_14.png)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**批准**按钮批准发布。等待**部署**完成。你应该看到所有任务都成功完成，如下截图所示：![](img/B16756_20_14.png)
- en: 'Figure 20.14: Release deployed'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.14：发布部署
- en: You have run your first successful release pipeline!
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你已经运行了你的第一个成功的发布管道！
- en: In a real-life project, the release pipeline would contain some more tasks.
    In fact, applications (before being deployed in the actual production environment)
    are deployed in a staging environment where they are beta-tested. Hence, probably,
    after this first deployment, there would be some manual tests, manual authorization
    for the deployment in production, and the final deployment in production.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实项目中，发布管道将包含一些额外的任务。事实上，应用程序（在实际生产环境中部署之前）会在一个分级环境中进行部署，在那里进行测试。因此，可能在这次首次部署之后，会有一些手动测试，手动授权进行生产部署，以及最终的生产部署。
- en: The multistage environment
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多阶段环境
- en: 'The approach associated with **continuous delivery** (**CD**) needs to guarantee
    that the production environment will be kept safe in each new deployment. To do
    so, a multistage pipeline needs to be adopted. The following screenshot shows
    an approach with common stages, using the book use case as a demonstration:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 与**持续交付**（**CD**）相关的方法需要保证每次新部署都能保持生产环境的安全。为此，需要采用多阶段管道。下面的截图显示了一种常见阶段的方法，使用书籍用例作为演示：
- en: '![](img/B16756_20_15.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_15.png)'
- en: 'Figure 20.15: Release stages using Azure DevOps'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.15：使用Azure DevOps发布阶段
- en: 'As you can see, these stages were configured using the Azure DevOps release
    pipeline. Each stage has its own purpose, which will leverage the quality of the
    product delivered in the end. Let''s look at the stages:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，这些阶段是使用Azure DevOps发布管道进行配置的。每个阶段都有其自己的目的，这将提高最终交付产品的质量。让我们来看看这些阶段：
- en: '**Development/tests**: This stage is used by developers and testers to build
    new functionality. This environment will certainly be the one that is most exposed
    to bugs and incomplete functions.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发/测试：**这个阶段是开发人员和测试人员用来构建新功能的。这个环境肯定是最容易暴露出错误和不完整功能的环境。'
- en: '**Quality assurance**: This environment gives a brief version of new functionalities
    to areas of the team not related to development and tests. Program managers, marketing,
    vendors, and others can use it as an area of study, validation, and even preproduction.
    Besides, the development and quality teams can guarantee that the new releases
    are correctly deployed, considering both functionality and infrastructure.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量保证：**这个环境为团队中与开发和测试无关的领域提供了新功能的简要版本。项目经理、市场营销、供应商等可以将其用作研究、验证甚至预生产的区域。此外，开发和质量团队可以保证新版本的正确部署，考虑到功能和基础设施。'
- en: '**Production:** This is the stage where customers have their solution running.
    The goal for a good production environment, according to CD, is to have it updated
    as quickly as possible. The frequency will vary according to team size, but there
    are some approaches where this process happens more than once a day.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生产：**这是客户运行其解决方案的阶段。根据CD的要求，一个良好的生产环境的目标是尽快更新。更新的频率会根据团队规模而有所不同，但有一些方法是这个过程每天发生多次。'
- en: The adoption of these three stages of deploying your application will impact
    the quality of the solution. It will also enable the team to have a safer deployment
    process, with fewer risks and better stability of the product. This approach may
    look a bit expensive at first sight, but without it, the results of bad deployment
    will generally be more expensive than this investment.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这三个部署应用程序的阶段将影响解决方案的质量。它还将使团队能够拥有更安全的部署过程，减少风险，提高产品的稳定性。这种方法乍看起来可能有点昂贵，但如果没有它，糟糕的部署结果通常会比这个投资更昂贵。
- en: 'Besides all the safety, you will have to consider the multistage scenario.
    You can set up the pipeline in a way where only with defined authorizations will
    you be able to move from one stage to another:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 除了所有的安全性，你还必须考虑多阶段的情况。你可以设置管道，只有在定义的授权下，你才能从一个阶段移动到另一个阶段：
- en: '![](img/B16756_20_16.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_16.png)'
- en: 'Figure 20.16: Defining pre-deployment conditions'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.16：定义预部署条件
- en: As you can see in the preceding screenshot, it is quite simple to set up pre-deployment
    conditions, and you can see in the following screenshot that there is more than
    a single option to customize the authorization method. This gives you the possibility
    to refine the CD approach, exactly meeting the needs of the project you are dealing
    with.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在前面的截图中所看到的，设置预部署条件非常简单，而且你可以在下面的截图中看到，有多个选项来自定义授权方法。这使你有可能完善CD方法，确切地满足你所处理的项目的需求。
- en: 'The following screenshot shows the options provided by Azure DevOps for pre-deployment
    approval. You can define the people who can approve the stage and set policies
    for them, that is, revalidate the approver identity before completing the process.
    You, as a software architect, will need to identify the configuration that fits
    the project you are creating with this approach:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了Azure DevOps提供的预部署批准选项。您可以定义可以批准阶段并为其设置策略的人员，即在完成流程之前重新验证批准者身份。作为软件架构师，您需要确定适合使用此方法创建的项目的配置：
- en: '![](img/B16756_20_17.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_17.png)'
- en: 'Figure 20.17: Pre-deployment approval options'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.17：预部署批准选项
- en: It is worth mentioning that although this approach is far better than a single-stage
    deployment, a DevOps pipeline will direct you, as a software architect, to another
    stage of monitoring. Continuous feedback will be an incredible tool for this,
    and we will discuss this approach in the next section.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，尽管这种方法远比单阶段部署好得多，但DevOps管道将引导您作为软件架构师进入另一个监控阶段。持续反馈将是一个令人难以置信的工具，我们将在下一节讨论这种方法。
- en: Defining continuous feedback and the related DevOps tools
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义持续反馈和相关的DevOps工具
- en: Once you have a solution that is running perfectly in the deployment scenario
    described in the last section, feedback will be essential for your team to understand
    the results of the release and how the version is working for the customers. To
    get this feedback, some tools can help both the developers and the customers,
    bringing these people together to fast-track the process of feedback. Let's have
    a look at these tools.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在上一节描述的部署方案中完美运行的解决方案，反馈将对您的团队至关重要，以了解发布的结果以及版本对客户的运行情况。为了获得这种反馈，一些工具可以帮助开发人员和客户，将这些人聚集在一起，加快反馈过程。让我们来看看这些工具。
- en: Monitoring software with Azure Monitor Application Insights
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Azure Monitor Application Insights监控软件
- en: '**Azure Monitor Application Insights** is the tool a software architect needs
    to have for continuous feedback on their solution. It is worth mentioning that
    Application Insights is part of Azure Monitor, a wider suite of monitoring features
    that also includes alerting, dashboards, and workbooks. As soon as you connect
    your app to it, you start receiving feedback on each request made to the software.
    This enables you to monitor not only the requests made but your database performance,
    the errors that the application may be suffering from, and the calls that take
    the most time to process.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**Azure Monitor Application Insights**是软件架构师需要持续反馈的工具。值得一提的是，应用程序洞察是Azure Monitor的一部分，它还包括警报、仪表板和工作簿等更广泛的监控功能。一旦您将应用程序连接到它，您就会开始收到有关对软件的每个请求的反馈。这使您不仅能够监视所做的请求，还能够监视数据库性能、应用程序可能遭受的错误以及处理时间最长的调用。'
- en: Obviously, you will have costs relating to having this tool plugged into your
    environment, but the facilities that the tool provides will be worth it. It might
    be worth noting that for simple applications it could even be free, because you
    pay for data ingested, for which there is a free quota. Besides, you need to understand
    that there is a very small performance cost since all the requests to store data
    in **Application Insights** run in a separate thread.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，将此工具插入到您的环境中将会产生成本，但工具提供的便利将是值得的。值得注意的是，对于简单的应用程序，甚至可能是免费的，因为您支付的是数据摄入费用，而有免费配额。此外，您需要了解，由于存储数据在**应用程序洞察**中的所有请求都在单独的线程中运行，因此性能成本非常小。
- en: 'It may be worth noting that a number of services, such as App Services, Functions,
    and so on, will have an option to add Application Insights as part of the initial
    creation process, so you may have already created it while following through this
    book. Even so, the following screenshot shows how easily you can create a tool
    in your environment:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，一些服务，如应用服务、函数等，在初始创建过程中将有添加应用程序洞察的选项，因此您可能已经在阅读本书时创建了它。即便如此，下面的屏幕截图显示了您如何在您的环境中轻松创建一个工具。
- en: '![](img/B16756_20_18.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_18.png)'
- en: 'Figure 20.18: Creating Application Insights resources in Azure'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.18：在Azure中创建应用程序洞察资源
- en: 'If you want to set up Application Insights in your app using Visual Studio,
    you may find this Microsoft tutorial useful: [https://docs.microsoft.com/en-us/azure/azure-monitor/learn/dotnetcore-quick-start#configure-app-insights-sdk](https://docs.microsoft.com/en-us/azure/azure-monitor/learn/dotnetcore-quick-start#configure-app-insi).'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用Visual Studio在应用程序中设置应用程序洞察，您可能会发现这篇微软教程有用：[https://docs.microsoft.com/en-us/azure/azure-monitor/learn/dotnetcore-quick-start#configure-app-insights-sdk](https://docs.microsoft.com/en-us/azure/azure-monitor/learn/dotnetcore-quick-start#configure-app-insi)。
- en: 'For instance, let''s suppose you need to analyze the requests that take more
    time in your application. The process of attaching Application Insights to your
    web app is quite simple: it can be done as soon as you set up your web app. If
    you are not sure whether Application Insights is configured for your web app,
    you can find out using the Azure portal. Navigate to **App Services** and look
    at the **Application Insights** settings, as shown in the following screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设您需要分析应用程序中花费更多时间的请求。将应用程序洞察附加到您的Web应用程序的过程非常简单：只需在设置Web应用程序时立即完成。如果您不确定应用程序洞察是否已为您的Web应用程序配置，可以使用Azure门户进行查找。导航到**应用服务**并查看**应用程序洞察**设置，如下面的屏幕截图所示：
- en: '![](img/B16756_20_19.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_19.png)'
- en: 'Figure 20.19: Enabling Application Insights in App Services'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.19：在应用服务中启用应用程序洞察
- en: 'The interface will give you the opportunity to create or attach an already-created
    monitor service to your web app. It is worth mentioning that you can connect more
    than one web app to the same Application Insights component. The following screenshot
    shows how to add a web app to an already-created Application Insights resource:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 界面将让您有机会为您的Web应用程序创建或附加一个已创建的监视服务。值得一提的是，您可以将多个Web应用程序连接到同一个Application Insights组件。以下截图显示了如何将Web应用程序添加到已创建的Application
    Insights资源中：
- en: '![](img/B16756_20_20.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_20.png)'
- en: 'Figure 20.20: Enabling App Insights in App Services'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.20：在应用服务中启用应用洞察
- en: 'Once you have Application Insights configured for your web app, you will find
    the following screen in App Services:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您为您的Web应用程序配置了Application Insights，您将在应用服务中找到以下屏幕：
- en: '![](img/B16756_20_21.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_21.png)'
- en: 'Figure 20.21: App Insights in App Services'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.21：应用服务中的应用洞察
- en: 'Once it is connected to your solution, the data collection will happen continuously,
    and you will see the results in the dashboard provided by the component. You can
    find this screen in two places:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦它连接到您的解决方案，数据收集将持续进行，您将在组件提供的仪表板中看到结果。您可以在两个地方找到这个屏幕：
- en: At the same place as you configured Application Insights, inside the Web App
    portal
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与您配置Application Insights的地方相同，在Web应用程序门户内
- en: 'In the Azure Portal, after navigating through the Application Insights resource:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Azure门户中，浏览Application Insights资源后：
- en: '![](img/B16756_20_22.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_22.png)'
- en: 'Figure 20.22: Application Insights in action'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.22：应用洞察的实际应用
- en: This dashboard gives you an idea of failed requests, server response time, and
    server requests. You may also turn on the availability check, which will make
    requests to your selected URL from any of the Azure data centers.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个仪表板让您了解失败的请求、服务器响应时间和服务器请求。您还可以打开可用性检查，它将从Azure数据中心中的任何一个向您选择的URL发出请求。
- en: 'But the beauty of Application Insights is related to how deeply it analyzes
    your system. In the following screenshot, for instance, it is giving you feedback
    on the number of requests made on the website. You can analyze it by ranking the
    ones that took more time to process or the ones that were called more often:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 但Application Insights的美妙之处在于它对系统进行了深入的分析。例如，在下面的截图中，它正在向您反馈网站上的请求次数。您可以通过排名来分析哪些请求处理时间更长，或者哪些请求更频繁：
- en: '![](img/B16756_20_23.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_23.png)'
- en: 'Figure 20.23: Analyzing app performance using Application Insights'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.23：使用Application Insights分析应用程序性能
- en: Considering this view can be filtered in different ways and you receive the
    info just after it happens in your web app, this is certainly a tool that defines
    continuous feedback. This is one of the best ways you can use DevOps principles
    to achieve exactly what your customer needs.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这个视图可以以不同的方式进行过滤，并且您在Web应用程序中发生事件后立即收到信息，这无疑是一个定义持续反馈的工具。这是您可以使用DevOps原则实现客户需求的最佳方式之一。
- en: Application Insights is a technical tool that does exactly what you as a software
    architect need to monitor modern applications in a real analytic model. It is
    a continuous feedback approach based on the behavior of users on the system you
    are developing.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Application Insights是一个技术工具，正是您作为软件架构师需要的，用于监视现代应用程序的真实分析模型。它是基于用户在您正在开发的系统上的行为的持续反馈方法。
- en: Using the Test and Feedback tool to enable feedback
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用测试和反馈工具启用反馈
- en: Another useful tool in the process of continuous feedback is the Test and Feedback
    tool, designed by Microsoft to help product owners and quality assurance users
    in the process of analyzing new features.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在持续反馈过程中另一个有用的工具是由微软设计的测试和反馈工具，旨在帮助产品所有者和质量保证用户分析新功能。
- en: 'Using Azure DevOps, you may ask for feedback for your team by selecting an
    option inside each working item, as you can see in the following screenshot:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Azure DevOps，您可以通过在每个工作项内选择一个选项来为您的团队请求反馈，如下截图所示：
- en: '![](img/B16756_20_24.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_24.png)'
- en: 'Figure 20.24: Requesting feedback using Azure DevOps'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.24：使用Azure DevOps请求反馈
- en: 'Once you receive a feedback request, you may use the Test and Feedback tool
    to analyze and give the correct feedback to the team. You will be able to connect
    the tool to your Azure DevOps project, giving you more features while analyzing
    the feedback request. It is worth mentioning that this tool is a web browser extension
    that you will need to install before use. The following screenshot shows how to
    set up an Azure DevOps project URL for the Test and Feedback tool:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您收到反馈请求，您可以使用测试和反馈工具来分析并向团队提供正确的反馈。您将能够将该工具连接到您的Azure DevOps项目，从而在分析反馈请求时获得更多功能。值得一提的是，这个工具是一个需要安装的网页浏览器扩展。以下截图显示了如何为测试和反馈工具设置Azure
    DevOps项目URL：
- en: You can download this tool from [https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web](https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web](https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web)下载此工具。
- en: '![](img/B16756_20_25.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_25.png)'
- en: 'Figure 20.25: Connecting Test and Feedback to an Azure DevOps organization'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.25：将测试和反馈连接到Azure DevOps组织
- en: 'The tool is quite simple. You can take screenshots, record a process, or even
    make a note. The following screenshot shows how easily you can write a message
    inside a screenshot:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具非常简单。您可以截图、记录一个过程，甚至做一个笔记。以下截图显示了您如何在截图中轻松写下一条消息：
- en: '![](img/B16756_20_26.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_26.png)'
- en: 'Figure 20.26: Giving feedback with the Test and Feedback tool'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.26：使用测试和反馈工具提供反馈
- en: 'The good thing is that you record all this analysis in a session timeline.
    As you can see in the next screenshot, you can have more feedback in the same
    session, which is good for the analysis process:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 好处是您可以在会话时间轴中记录所有这些分析。正如您在下一个截图中所看到的，您可以在同一个会话中获得更多反馈，这对分析过程很有帮助：
- en: '![](img/B16756_20_27.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_27.png)'
- en: 'Figure 20.27: Giving feedback with the Test and Feedback tool'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.27：使用测试和反馈工具提供反馈
- en: 'Once you have done the analysis and you are connected to Azure DevOps, you
    will be able to report a bug, create a task, or even start a new test case:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了分析并连接到Azure DevOps，您将能够报告错误，创建任务，甚至开始一个新的测试用例：
- en: '![](img/B16756_20_28.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_28.png)'
- en: 'Figure 20.28: Opening a bug in Azure DevOps'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.28：在Azure DevOps中打开错误
- en: 'The result of the bug created can be checked on the **Work items** board in
    Azure DevOps. It is worth mentioning that you do not need an Azure DevOps developer
    license to have access to this area of the environment. This enables you, as a
    software architect, to spread this basic and useful tool to as many key users
    of the solution as you have. The following screenshot shows the bug created by
    the tool once you have connected it to your Azure DevOps project:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的错误结果可以在Azure DevOps的**工作项**面板上进行检查。值得一提的是，您不需要Azure DevOps开发人员许可证即可访问环境中的这一区域。这使您作为软件架构师能够将这个基本而有用的工具传播给您所拥有的解决方案的许多关键用户。以下截图显示了一旦您将其连接到Azure
    DevOps项目后工具创建的错误：
- en: '![](img/B16756_20_29.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_20_29.png)'
- en: 'Figure 20.29: New reported bug in Azure DevOps'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.29：Azure DevOps中新报告的错误
- en: It is important to have a tool like this to have good feedback on your project.
    But, as a software architect, you may have to find the best solutions to accelerate
    this process. The tools explored in the book are good ways to do so. You may consider
    this approach every time you need to implement one more step in the development
    process. Continuous feedback is an important step in the process of developing
    software that will obtain new features continuously. Another very important approach
    that can take advantage of DevOps is SaaS. Let's learn about it in the next section.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这样的工具对于获得项目的良好反馈是很重要的。但是，作为软件架构师，您可能需要找到加速这个过程的最佳解决方案。本书中探讨的工具是加速这一过程的好方法。每当您需要在开发过程中实施一个新步骤时，您都可以考虑这种方法。持续反馈是开发软件过程中的一个重要步骤，它将不断获得新功能。另一个可以利用DevOps的非常重要的方法是SaaS。让我们在下一节中了解更多。
- en: Understanding SaaS
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解SaaS
- en: Selling/using Software as a Service relates to a wider set of solution design
    principles called **service design thinking**. Service design thinking is not
    just a software development technique and/or a software deployment approach, but
    it impacts several business areas, namely, organization and human resources, software
    development processes, and finally, hardware infrastructures and software architecture.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 作为服务销售/使用软件涉及到一组更广泛的解决方案设计原则，称为**服务设计思维**。服务设计思维不仅仅是一种软件开发技术和/或软件部署方法，而且它影响到几个业务领域，即组织和人力资源、软件开发流程，最后是硬件基础设施和软件架构。
- en: In the subsections that follow, we will briefly discuss the implications for
    each of the business areas we listed, and in the last subsection, we will focus
    specifically on the SaaS deployment model.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的小节中，我们将简要讨论我们列出的每个业务领域的影响，而在最后一个小节中，我们将专门关注SaaS部署模型。
- en: Adapting your organization to a service scenario
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使您的组织适应服务场景
- en: The first organizational implication comes from the need to optimize the value
    of the software for the target organization. This requires a human resource or
    a team to be in charge of planning and monitoring the impact of the software in
    the target organization in order to maximize the value added by the software.
    This strategic role is not needed just during the initial design stage, but during
    the whole lifetime of the application. In fact, this role oversees keeping the
    software fine-tuned with the ever-changing needs of the target organization.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个组织影响来自于需要优化软件对目标组织的价值。这需要一个人力资源或团队负责规划和监控软件对目标组织的影响，以最大化软件增加的价值。这种战略角色不仅在初始设计阶段需要，而且在应用的整个生命周期中都需要。事实上，这个角色负责保持软件与目标组织不断变化的需求保持一致。
- en: Another important area of impact is human resource management. In fact, since
    the main priority is the value added by the software (and not exploiting existing
    resources and competencies), human resources must be adapted to the project needs.
    This means acquiring new people as soon as they are needed and developing the
    required competencies through adequate training.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的影响领域是人力资源管理。事实上，由于主要优先考虑的是软件增加的价值（而不是利用现有资源和能力），人力资源必须根据项目需求进行调整。这意味着在需要时立即获取新人员，并通过适当的培训开发所需的能力。
- en: The next subsection deals with the implications of all the processes involved
    in software development.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 下一小节涉及软件开发中涉及的所有流程的影响。
- en: Developing software in a service scenario
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在服务场景中开发软件
- en: The main constraint that impacts software development processes is the need
    to keep the software fine-tuned to the organization's needs. This need can be
    satisfied by any agile methodology based on a CI/CD approach. For a short review
    of CI/CD, please refer to the *Organizing your work using Azure DevOps* section
    of *Chapter 3*, *Documenting Requirements with Azure DevOps*. It is worth pointing
    out that any well-designed CI/CD cycle should include the processing of user feedback
    and user satisfaction reports.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 影响软件开发流程的主要约束是需要将软件调整到组织的需求。这种需求可以通过基于CI/CD方法的任何敏捷方法来满足。有关CI/CD的简要介绍，请参阅《第3章》《使用Azure
    DevOps组织您的工作》部分，《使用Azure DevOps记录需求》。值得指出的是，任何设计良好的CI/CD周期都应包括处理用户反馈和用户满意度报告。
- en: Moreover, to optimize the value added by the software, it is good practice to
    organize stages where the development team (or part of it) is placed in close
    contact with the system users so that developers can better understand the impact
    of the software on the target organization.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了优化软件增加的价值，最佳实践是组织阶段，其中开发团队（或其中的一部分）与系统用户密切联系，以便开发人员更好地理解软件对目标组织的影响。
- en: Finally, the value added by the software must always be kept in mind when writing
    both functional and non-functional requirements. For this reason, it is useful
    to annotate *user stories* with a consideration of *why* and *how* they contribute
    to value. The process of collecting requirements is discussed in *Chapter 2*,
    *Non-Functional Requirements*.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写功能和非功能需求时，始终要记住软件的附加值。因此，有必要使用“用户故事”注释“为什么”和“如何”它们对价值的贡献。需求收集过程在“第2章”，“非功能需求”中讨论。
- en: More technical implications are discussed in the next subsection.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 更多技术含义将在下一小节中讨论。
- en: Technical implications of a service scenario
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务场景的技术含义
- en: 'In a service scenario, both the hardware infrastructure and software architecture
    are constrained by three main principles, which are an immediate consequence of
    the requirement to keep the software fine-tuned to the organization''s needs,
    namely, the following:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务场景中，硬件基础设施和软件架构都受到三个主要原则的约束，这是将软件调整到组织需求的要求的直接结果，即以下内容：
- en: The software needs to be monitored to discover any kind of issue that might
    have been caused by system malfunctions or changes in software usage and/or user
    needs. This implies extracting health checks and load statistics from all hardware/software
    components. Good hints for discovering changes in the organization's needs are
    also given by statistics on the operations performed by the users—more specifically,
    the average time spent by both the user and the application on each operation
    instance, and the number of instances of each operation performed per unit of
    time (day, week, or month).
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要监视软件以发现可能由系统故障或软件使用/用户需求变化引起的任何问题。这意味着从所有硬件/软件组件中提取健康检查和负载统计。用户执行的操作统计数据也可以提供有关组织需求变化的良好线索，具体来说，是用户和应用程序在每个操作实例上花费的平均时间，以及每个操作实例在单位时间（天、周或月）内执行的次数。
- en: It is also necessary to monitor user satisfaction. Feedback on user satisfaction
    can be obtained by adding to each application screen a link to an easy-to-fill
    user-satisfaction report page.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还需要监控用户满意度。可以通过在每个应用程序屏幕上添加链接到易于填写的用户满意度报告页面来获得有关用户满意度的反馈。
- en: 'Finally, there is the need to adapt both hardware and software quickly, both
    to the traffic received by each application module and to the changes in the organization''s
    needs. This means the following:'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，有必要快速调整硬件和软件，以适应每个应用模块接收的流量以及组织需求的变化。这意味着以下内容：
- en: Paying extreme attention to software modularity
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极度关注软件的模块化
- en: Keeping the door open for changes in the database engine and preferring **Service
    Oriented Architecture** (**SOA**) or microservices-based solutions to monolithic
    software
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持数据库引擎变更的可能性，并更喜欢面向服务的架构（SOA）或基于微服务的解决方案，而不是单片软件
- en: Keeping the door open to new technologies
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为新技术敞开大门
- en: Making the hardware easy to adapt means allowing hardware scaling, which in
    turn implies either the adoption of cloud infrastructures or hardware clusters,
    or both. It is also important to keep the door open to changes in cloud service
    suppliers, which in turn means encapsulating the dependence on the cloud platform
    in a small number of software modules.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使硬件易于调整意味着允许硬件扩展，这又意味着要么采用云基础设施，要么采用硬件集群，或者两者兼而有之。同样重要的是要保持对云服务供应商变化的可能性，这意味着将对云平台的依赖封装在少量软件模块中。
- en: 'The maximization of the value added by the software can be achieved by choosing
    the best technology available for the implementation of each module, which in
    turn means being able to mix different technologies. This is where container-based
    technologies, such as Docker, come into play. Docker and related technologies
    were described in:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择最佳技术来实现每个模块，可以实现软件附加值的最大化，这意味着能够混合不同的技术。这就是容器化技术（如Docker）发挥作用的地方。 Docker和相关技术在以下进行了描述：
- en: '*Chapter 5*, *Applying a Microservice Architecture to Your Enterprise Application*'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第5章，将微服务架构应用于企业应用程序
- en: '*Chapter 6*, *Azure Service Fabric*'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第6章，Azure服务布局
- en: '*Chapter 7*, *Azure Kubernetes Service*'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7章，Azure Kubernetes服务
- en: Summing up, all of the requirements we have listed converge toward most of the
    advanced technologies we have described in this book, such as cloud services,
    scalable web applications, distributed/scalable databases, Docker, Kubernetes,
    SOA, and microservices architectures.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我们列出的所有要求都趋向于本书中描述的大多数先进技术，如云服务、可扩展的Web应用程序、分布式/可扩展数据库、Docker、Kubernetes、SOA和微服务架构。
- en: More details on how to prepare your software for a service environment are given
    in the next section, while the next subsection focuses specifically on the advantages
    and disadvantages of SaaS applications.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如何为服务环境准备软件的更多细节将在下一节中给出，而下一小节专门关注SaaS应用程序的优缺点。
- en: Deciding when to adopt a SaaS solution
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 决定何时采用SaaS解决方案
- en: 'The main attraction of SaaS solutions is their flexible payment model, which
    offers the following advantages:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: SaaS解决方案的主要吸引力在于其灵活的付款模式，它提供以下优势：
- en: You can avoid abandoning big investments in favor of more affordable monthly
    payments
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以避免放弃大笔投资，转而选择更实惠的月度付款
- en: You can start with a cheap system and then move toward more expensive solutions
    only when the business grows
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以从一个便宜的系统开始，然后只有在业务增长时才转向更昂贵的解决方案
- en: 'However, SaaS solutions also offer other advantages, namely, the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，SaaS解决方案还提供其他优势，即以下内容：
- en: In all cloud solutions, you can easily scale up your solution
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在所有云解决方案中，您可以轻松扩展您的解决方案
- en: The application is automatically updated
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序会自动更新
- en: Since SaaS solutions are delivered over the public internet, they are accessible
    from any location
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于SaaS解决方案是通过公共互联网提供的，因此可以从任何位置访问它们
- en: 'Unfortunately, SaaS advantages come at a cost, since SaaS also has some not
    negligible disadvantages, namely, the following:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，SaaS的优势是有代价的，因为SaaS也有一些不可忽视的缺点，即以下内容：
- en: Your business is strictly tied to the SaaS provider, which might discontinue
    the service and/or modify it in a way that is not acceptable to you anymore.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的业务严重依赖于SaaS提供商，他们可能会停止提供服务和/或以您不接受的方式进行修改。
- en: Usually, you cannot implement any kind of customization, being limited to the
    few standard options offered by the SaaS supplier. However, sometimes SaaS suppliers
    also offer the possibility of adding custom modules written either by them or
    by you.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，您无法实现任何定制，只能使用SaaS供应商提供的少数标准选项。然而，有时SaaS供应商也提供添加自定义模块的可能性，这些模块可以由他们或您编写。
- en: Summing up, SaaS solutions offer interesting advantages but also some disadvantages,
    so you, as a software architect, must perform a detailed analysis to decide how
    to adopt them.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，SaaS解决方案提供了有趣的优势，但也存在一些缺点，因此作为软件架构师，您必须进行详细分析以决定如何采用它们。
- en: The next section explains how to adapt software to be used in a service scenario.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将解释如何调整软件以在服务场景中使用。
- en: Preparing a solution for a service scenario
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为服务场景准备解决方案
- en: First, *preparing a solution for a service scenario* means designing it specifically
    for the cloud and/or for a distributed environment. In turn, this means designing
    it with scalability, fault tolerance, and automatic fault recovery in mind.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，*为服务场景准备解决方案*意味着专门为云和/或分布式环境设计。这意味着要考虑可伸缩性、容错性和自动故障恢复。
- en: The main implications of the preceding three points are concerned with the way
    the *state* is handled. Stateless module instances are easy to scale and to replace,
    so you should carefully plan which modules are stateless and which ones have states.
    Moreover, as explained in *Chapter 9*, *How to Choose Your Data Storage in the
    Cloud*, you have to keep in mind that write and read operations scale in a completely
    different way. Read operations are easier to scale with replication, while write
    operations do not scale well with relational databases and often require NoSQL
    solutions.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 前面三点的主要影响与*状态*的处理方式有关。无状态的模块实例易于扩展和替换，因此您应该仔细规划哪些模块是无状态的，哪些模块有状态。此外，正如*第9章*中所解释的，您必须记住写入和读取操作的扩展方式完全不同。读取操作更容易通过复制进行扩展，而写入操作在关系数据库中扩展不佳，通常需要NoSQL解决方案。
- en: 'High scalability in a distributed environment prevents the usage of distributed
    transactions and of synchronous operations in general. Therefore, data coherence
    and fault tolerance can be achieved only with more complex techniques based on
    asynchronous messages, such as the following:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在分布式环境中，高可伸缩性阻止了使用分布式事务和一般同步操作。因此，只能通过基于异步消息的更复杂技术来实现数据一致性和容错性，例如以下内容：
- en: One technique is storing all messages to send in a queue so that asynchronous
    transmissions can be retried in the event of errors or timeouts. Messages can
    be removed from the queue either when confirmation of reception is received or
    when the module decides to abort the operation that produced the message.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种技术是将要发送的所有消息存储在队列中，以便在出现错误或超时时可以重试异步传输。消息可以在收到接收确认时或模块决定中止产生消息的操作时从队列中移除。
- en: Another is handling the possibility that the same message is received several
    times because timeouts caused the same message to be sent several times.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个问题是处理同一消息由于超时导致多次接收的可能性。
- en: If needed, use techniques such as optimistic concurrency and event sourcing
    to minimize concurrency problems in databases. Optimistic concurrency is explained
    in *Defining the data layer* subsection of the use case at the end of *Chapter
    15*, *Presenting ASP.NET Core MVC*, while event sourcing is described together
    with other data layer stuff in the *Using SOLID principles to map your domains*
    section of *Chapter 12*, *Understanding the Different Domains in Software Solution*.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要，可以使用乐观并发和事件溯源等技术来最小化数据库中的并发问题。乐观并发在*第15章*的用例的*定义数据层*子部分中有解释，而事件溯源则与其他数据层内容一起在*第12章*的*使用SOLID原则来映射您的领域*部分中描述。
- en: The first two points in the preceding list are discussed in detail together
    with other distributed processing techniques in the *How does .NET Core deal with
    microservices?* section of *Chapter 5*, *Applying a Microservice Architecture
    to Your Enterprise Application*.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 前面列表中的前两点与其他分布式处理技术一起在*第5章*的*如何处理.NET Core微服务*部分中详细讨论。
- en: Fault tolerance and automatic fault recovery require that software modules implement
    health check interfaces that the cloud framework might call, to verify whether
    the module is working properly or whether it needs to be killed and replaced by
    another instance. ASP.NET Core and all Azure microservices solutions offer basic
    off-the-shelf health checks, so the developer does not need to take care of them.
    However, more detailed custom health checks can be added by implementing a simple
    interface.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 容错性和自动故障恢复要求软件模块实现健康检查接口，云框架可能会调用这些接口，以验证模块是否正常工作，或者是否需要被终止并由另一个实例替换。ASP.NET
    Core和所有Azure微服务解决方案都提供基本的即插即用健康检查，因此开发人员不需要关心它们。然而，可以通过实现一个简单的接口来添加更详细的自定义健康检查。
- en: The difficulty increases if you have the goal of possibly changing the cloud
    provider of some of the application modules. In this case, the dependency from
    the cloud platform must be encapsulated in just a few modules, and solutions that
    are too strictly tied to a specific cloud platform must be discarded.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的目标是可能更改某些应用程序模块的云提供商，则难度会增加。在这种情况下，对云平台的依赖必须封装在只有少数模块中，并且过于严格依赖特定云平台的解决方案必须被丢弃。
- en: 'If your application is conceived for a service scenario, everything must be
    automated: new versions testing and validation, the creation of the whole cloud
    infrastructure needed by the application, and the deployment of the application
    on that infrastructure.'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序是为服务场景设计的，则一切都必须自动化：新版本的测试和验证，应用程序所需的整个云基础设施的创建以及应用程序在该基础设施上的部署。
- en: All cloud platforms offer languages and facilities to automate the whole software
    CI/CD cycle, that is, building the code, testing it, triggering manual version
    approvals, hardware infrastructure creation, and application deployment.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 所有云平台都提供语言和设施来自动化整个软件CI/CD周期，即构建代码，测试代码，触发手动版本批准，硬件基础设施创建和应用程序部署。
- en: Azure Pipelines allows the complete automatization of all the steps listed.
    The use case in *Chapter 18*, *Testing Your Code with Unit Test Cases and TDD*,
    shows how to automate all steps up to and including software testing with Azure
    Pipelines. The use case in the next section will show how to automate the application
    deployment on the Azure Web Apps platform.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Pipelines 允许完全自动化列出的所有步骤。*第18章*中的用例*使用单元测试用例和TDD测试代码*展示了如何使用Azure Pipelines自动化所有步骤，包括软件测试。下一节中的用例将展示如何在Azure
    Web Apps平台上自动化应用程序部署。
- en: 'Automation has a more fundamental role in SaaS applications, since the whole
    creation of a new tenant for each new customer must be automatically triggered
    by the customer subscription. More specifically, multi-tenant SaaS applications
    can be implemented with three fundamental techniques:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在SaaS应用程序中，自动化扮演着更为基础的角色，因为必须通过客户订阅自动触发为每个新客户创建新租户的整个过程。更具体地说，多租户SaaS应用程序可以通过三种基本技术实现：
- en: All customers share the same hardware infrastructure and data storage. This
    solution is the easiest to implement since it requires the implementation of a
    standard web application. However, it is possible only for very simple SaaS services
    since, for more complex applications, it becomes increasingly difficult to ensure
    that storage space and computation time are split equally between users. Moreover,
    as the database becomes more and more complex, it is always more difficult to
    keep the data of different users safely isolated.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有客户共享相同的硬件基础设施和数据存储。这种解决方案最容易实现，因为它需要实现标准的Web应用程序。然而，这只适用于非常简单的SaaS服务，因为对于更复杂的应用程序来说，确保存储空间和计算时间在用户之间均匀分配变得越来越困难。此外，随着数据库变得越来越复杂，保持不同用户的数据安全隔离也变得越来越困难。
- en: All customers share the same infrastructure, but each customer has their own
    data storage. This option solves all the database problems of the previous solution,
    and it is quite easy to automate since the creation of a new tenant just requires
    the creation of a new database. This solution offers a simple way to define pricing
    strategies, by linking them to storage consumption.
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有客户共享相同的基础设施，但每个客户都有自己的数据存储。此选项解决了上一个解决方案的所有数据库问题，并且很容易自动化，因为创建新租户只需要创建新数据库。此解决方案提供了一种简单的方式来定义定价策略，将其与存储消耗联系起来。
- en: Each customer has their own private infrastructure and data storage. This is
    the most flexible strategy. From the user's point of view, its only disadvantage
    is the higher price. Therefore, it is convenient only above a minimum threshold
    of computational power required by each user. It is more difficult to automate,
    since a whole infrastructure must be created for each new customer and a new instance
    of the application must be deployed on it.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个客户都有自己的私人基础设施和数据存储。这是最灵活的策略。从用户的角度来看，它唯一的缺点是更高的价格。因此，只有在每个用户所需的计算能力达到最低阈值以上时才方便。它更难自动化，因为必须为每个新客户创建整个基础设施，并在其上部署应用程序的新实例。
- en: Whichever of the three strategies is chosen, you need to be able to scale out
    your cloud resources as your consumers increase.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 无论选择哪种策略，您都需要能够随着消费者增加而扩展您的云资源。
- en: If you also need the possibility to ensure your infrastructure creation scripts
    work across several cloud providers, then, on the one hand, you can't use features
    that are too specific to a single cloud platform, and on the other, you need a
    unique infrastructure creation language that can be translated into the native
    languages of the more common cloud platforms. Terraform and Ansible are two very
    common choices for describing hardware infrastructures.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还需要确保您的基础设施创建脚本可以跨多个云提供商使用，那么一方面，您不能使用太特定于单个云平台的功能，另一方面，您需要一种独特的基础设施创建语言，可以转换为更常见的云平台的本地语言。
    Terraform 和 Ansible 是描述硬件基础设施的两种非常常见的选择。
- en: The WWTravelClub project approach
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WWTravelClub项目方法
- en: During this chapter, screenshots from the WWTravelClub project have shown the
    steps needed to implement a good DevOps cycle. The WWTravelClub team has decided
    to use Azure DevOps because they understand that the tool is essential for getting
    the best DevOps experience for the whole cycle.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，WWTravelClub项目的屏幕截图显示了实施良好的DevOps周期所需的步骤。WWTravelClub团队决定使用Azure DevOps，因为他们了解到该工具对于获得整个周期的最佳DevOps体验至关重要。
- en: The requirements were written using user stories, which can be found in the
    **Work items** section of Azure DevOps. The code is placed in the repository of
    the Azure DevOps project. Both concepts were explained in *Chapter 3*, *Documenting
    Requirements with Azure DevOps*.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 需求是使用用户故事编写的，可以在Azure DevOps的**工作项**部分找到。代码放在Azure DevOps项目的存储库中。这两个概念在*第3章*中*使用Azure
    DevOps记录需求*中有解释。
- en: The management life cycle used for getting things done is Scrum, presented in
    *Chapter 1*, *Understanding the Importance of Software Architecture*. This approach
    divides the implementation into Sprints, which forces the need to deliver value
    by the end of each cycle. Using the continuous integration facilities we learned
    in this chapter, code will be compiled each time the team concludes a development
    to the master branch of the repository.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 用于完成任务的管理生命周期是Scrum，在*第1章*《理解软件架构的重要性》中介绍。这种方法将实施分为Sprints，这迫使需要在每个周期结束时交付价值。使用本章学到的持续集成设施，每当团队完成对存储库主分支的开发时，代码都将被编译。
- en: Once the code is compiled and tested, the first stage of the deployment is done.
    The first stage is normally named Development/Test because you enable it for internal
    tests. Both Application Insights and Test and Feedback can be used to get the
    first feedback on the new release.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦代码被编译和测试，部署的第一阶段就完成了。第一阶段通常被称为开发/测试，因为您可以为内部测试启用它。Application Insights和测试与反馈可以用于获取新版本的第一反馈。
- en: If the tests and the feedback of the new release pass, it is time to go to the
    second stage, Quality Assurance. Application Insights and Test and Feedback can
    be used again, but now in a more stable environment.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 如果新版本的测试和反馈通过，那么就是时候进入第二阶段，质量保证。Application Insights和测试与反馈现在可以再次使用，但现在是在一个更稳定的环境中。
- en: The cycle ends with the authorization to deploy in the production stage. This
    certainly is a tough decision, but DevOps indicates that you must do it continuously
    so you can get better feedback from customers. Application Insights keeps being
    a useful tool, since you can monitor the evolution of the new release in production,
    even comparing it to the past releases.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 循环以在生产阶段部署的授权结束。这无疑是一个艰难的决定，但DevOps表明您必须持续这样做，以便从客户那里获得更好的反馈。Application Insights仍然是一个有用的工具，因为您可以监视新版本在生产中的演变，甚至将其与过去的版本进行比较。
- en: The WWTravelClub project approach described here can be used in many other modern
    application development life cycles. As a software architect, you must oversee
    the process. The tools are ready to go, and it depends on you to make things right!
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这里描述的WWTravelClub项目方法可以用于许多其他现代应用程序开发生命周期。作为软件架构师，您必须监督这个过程。工具已经准备就绪，取决于您是否做对了！
- en: Summary
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned that DevOps is not only a bunch of techniques
    and tools used together to deliver software continuously, but a philosophy to
    enable continuous delivery of value to the end user of the project you are developing.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解到DevOps不仅是一堆技术和工具，用于连续交付软件，而且是一种哲学，可以实现对您正在开发的项目的最终用户持续交付价值。
- en: Considering this approach, we saw how continuous integration, continuous delivery,
    and continuous feedback are essential to the purpose of DevOps. We also saw how
    Azure, Azure DevOps, and Microsoft tools help you to achieve your goals.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这种方法，我们看到持续集成、持续交付和持续反馈对DevOps的目的至关重要。我们还看到Azure、Azure DevOps和Microsoft工具如何帮助您实现目标。
- en: We described *service design thinking* principles and the SaaS software deployment
    model. Now, you should be able to analyze all of the implications of these approaches
    for an organization, and you should be able to adapt pre-existing software development
    processes and hardware/software architectures to take advantage of the opportunities
    they offer.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们描述了*服务设计思维*原则和SaaS软件部署模型。现在，您应该能够分析这些方法对组织的所有影响，并且您应该能够调整现有的软件开发流程和硬件/软件架构，以利用它们提供的机会。
- en: We also explained the need for, and the techniques involved in, the automation
    of the software cycle, cloud hardware infrastructure configuration, and application
    deployment.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还解释了软件周期、云硬件基础架构配置和应用程序部署的自动化的需求和涉及的技术。
- en: Once you have implemented the examples shown, you should be able to use Azure
    Pipelines to automate infrastructure configuration and application deployment.
    This chapter elucidated this approach using WWTravelClub as an example, enabling
    CI/CD inside Azure DevOps, and using Application Insights and the Test and Feedback
    tool for both technical and functional feedback. In real life, these tools will
    enable you to understand the current behavior of the system you are developing
    more quickly, as you will have continuous feedback on it.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您实施了所示的示例，您应该能够使用Azure Pipelines自动化基础架构配置和应用程序部署。本章以WWTravelClub为例阐明了这种方法，实现了Azure
    DevOps内的CI/CD，并使用Application Insights和测试与反馈工具进行技术和功能反馈。在现实生活中，这些工具将使您能够更快地了解您正在开发的系统的当前行为，因为您将对其进行持续反馈。
- en: In the next chapter, we will learn about continuous integration in detail, which
    plays a fundamental role in service scenarios and the maintenance of SaaS applications.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将详细了解持续集成，这在服务场景和SaaS应用程序的维护中起着基础性的作用。
- en: Questions
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is DevOps?
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是DevOps？
- en: What is continuous integration?
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是持续集成？
- en: What is continuous delivery?
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是持续交付？
- en: What is continuous feedback?
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是持续反馈？
- en: What is the difference between the build and release pipelines?
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建和发布管道之间有什么区别？
- en: What is the main purpose of Application Insights in the DevOps approach?
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在DevOps方法中，Application Insights的主要目的是什么？
- en: How can the Test and Feedback tool help in the process of DevOps?
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试与反馈工具如何帮助DevOps的过程？
- en: What is the main goal of service design thinking?
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务设计思维的主要目标是什么？
- en: Is it true that service design thinking requires the optimal usage of all competencies
    already available in the company?
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务设计思维是否要求充分利用公司已有的所有能力？
- en: Why is complete automation fundamental in the life cycle of SaaS applications?
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么完全自动化对SaaS应用程序的生命周期至关重要？
- en: Is it possible to define hardware cloud infrastructures with a platform-independent
    language?
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是否可以使用平台无关的语言定义硬件云基础架构？
- en: What is the preferred Azure tool for the automation of the whole application
    life cycle?
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是首选的Azure工具，用于整个应用程序生命周期的自动化？
- en: If two SaaS suppliers offer the same software product, should you use the most
    reliable or the cheapest one?
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果两个SaaS供应商提供相同的软件产品，您应该使用最可靠的还是最便宜的？
- en: Is scalability the only important requirement in a service scenario?
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务场景中，可伸缩性是唯一重要的要求吗？
- en: Further reading
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'These are some websites where you will find more information on the topics
    covered in this chapter:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是一些网站，您可以在本章涵盖的主题中找到更多信息：
- en: '[http://donovanbrown.com/](http://donovanbrown.com/)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://donovanbrown.com/](http://donovanbrown.com/)'
- en: '[https://azure.microsoft.com/en-us/overview/what-is-devops/](https://azure.microsoft.com/en-us/overview/what-is-devops/)'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://azure.microsoft.com/en-us/overview/what-is-devops/](https://azure.microsoft.com/en-us/overview/what-is-devops/)'
- en: '[https://www.packtpub.com/networking-and-servers/devops-fundamentals-video](https://www.packtpub.com/networking-and-servers/devops-fundamentals-video)'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/networking-and-servers/devops-fundamentals-video](https://www.packtpub.com/networking-and-servers/devops-fundamentals-video)'
- en: '[https://docs.microsoft.com/en-us/azure/devops/learn/what-is-devops](https://docs.microsoft.com/en-us/azure/devops/learn/what-is-devops)'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/devops/learn/what-is-devops](https://docs.microsoft.com/en-us/azure/devops/learn/what-is-devops)'
- en: '[https://azuredevopslabs.com/labs/devopsserver/exploratorytesting/](https://azuredevopslabs.com/labs/devopsserver/exploratorytesting/)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://azuredevopslabs.com/labs/devopsserver/exploratorytesting/](https://azuredevopslabs.com/labs/devopsserver/exploratorytesting/)'
- en: '[https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview)'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview)'
- en: '[https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web](https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web)'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web](https://marketplace.visualstudio.com/items?itemName=ms.vss-exploratorytesting-web)'
- en: '[https://docs.microsoft.com/en-us/azure/devops/test/request-stakeholder-feedback](https://docs.microsoft.com/en-us/azure/devops/test/request-stakeholder-feedback)'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/devops/test/request-stakeholder-feedback](https://docs.microsoft.com/en-us/azure/devops/test/request-stakeholder-feedback)'
- en: '[https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops)'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops)'
- en: '[https://www.terraform.io/](https://www.terraform.io/)'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.terraform.io/](https://www.terraform.io/)'
- en: '[https://www.ansible.com/](https://www.ansible.com/)'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.ansible.com/](https://www.ansible.com/)'
