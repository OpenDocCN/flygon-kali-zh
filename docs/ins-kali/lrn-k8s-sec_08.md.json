["```\n$ps aux | grep kube-api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a04016\u00a0\u00a06.1 17.2 495148 342896 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a001:03\u00a0\u00a0\u00a00:16 kube-apiserver --advertise-address=192.168.99.100 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota --enable-bootstrap-token-auth=true --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key --etcd-servers=https://127.0.0.1:2379 --insecure-port=0 --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key --requestheader-allowed-names=front-proxy-client --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=8443 --service-account-key-file=/var/lib/minikube/certs/sa.pub --service-cluster-ip-range=10.96.0.0/12 --tls-cert-file=/var/lib/minikube/certs/apiserver.crt --tls-private-key-file=/var/lib/minikube/certs/apiserver.key\n```", "```\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a04286\u00a0\u00a02.6\u00a0\u00a04.6 1345544 92420 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a001:03\u00a0\u00a0\u00a00:18 /var/lib/minikube/binaries/v1.17.3/kubelet --authorization-mode=Webhook --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --cgroup-driver=cgroupfs --client-ca-file=/var/lib/minikube/certs/ca.crt --cluster-domain=cluster.local --config=/var/lib/kubelet/config.yaml --container-runtime=docker --fail-swap-on=false --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.99.100 --pod-manifest-path=/etc/kubernetes/manifests\n```", "```\n$ ps aux | grep etcd\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03992\u00a0\u00a01.9\u00a0\u00a02.4 10612080 48680 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a001:03\u00a0\u00a0\u00a00:18 etcd --advertise-client-urls=https://192.168.99.100:2379 --cert-file=/var/lib/minikube/certs/etcd/server.crt --client-cert-auth=true --data-dir=/var/lib/minikube/etcd --initial-advertise-peer-urls=https://192.168.99.100:2380 --initial-cluster=minikube=https://192.168.99.100:2380 --key-file=/var/lib/minikube/certs/etcd/server.key --listen-client-urls=https://127.0.0.1:2379,https://192.168.99.100:2379 --listen-metrics-urls=http://127.0.0.1:2381 --listen-peer-urls=https://192.168.99.100:2380 --name=minikube --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt --peer-client-cert-auth=true --peer-key-file=/var/lib/minikube/certs/etcd/peer.key --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt --snapshot-count=10000 --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt\n```", "```\n$ps aux | grep kube-scheduler\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03939\u00a0\u00a00.5\u00a0\u00a02.0 144308 41640 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a001:03\u00a0\u00a0\u00a00:02 kube-scheduler --authentication-kubeconfig=/etc/kubernetes/scheduler.conf --authorization-kubeconfig=/etc/kubernetes/scheduler.conf --bind-address=0.0.0.0 --kubeconfig=/etc/kubernetes/scheduler.conf --leader-elect=true\n```", "```\n$ps aux | grep kube-controller-manager\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03927\u00a0\u00a01.8\u00a0\u00a04.5 209520 90072 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a001:03\u00a0\u00a0\u00a00:11 kube-controller-manager --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf --bind-address=0.0.0.0 --client-ca-file=/var/lib/minikube/certs/ca.crt --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt --cluster-signing-key-file=/var/lib/minikube/certs/ca.key --controllers=*,bootstrapsigner,tokencleaner --kubeconfig=/etc/kubernetes/controller-manager.conf --leader-elect=true --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt --root-ca-file=/var/lib/minikube/certs/ca.crt --service-account-private-key-file=/var/lib/minikube/certs/sa.key --use-service-account-credentials=true\n```", "```\n$ kubectl -n kube-system edit configmap coredns\n```", "```\n# Please edit the object below. Lines beginning with a '#' \n# will be ignored, and an empty file will abort the edit. \n# If an error occurs while saving this file will be\n# reopened with the relevant failures.\napiVersion: v1\ndata:\n\u00a0\u00a0Corefile: |\n\u00a0\u00a0\u00a0\u00a0.:53 {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errors\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0health {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0lameduck 5s\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ready\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0kubernetes cluster.local in-addr.arpa ip6.arpa {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pods insecure\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fallthrough in-addr.arpa ip6.arpa\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ttl 30\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prometheus :9153\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0forward . /etc/resolv.conf\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cache 30\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0loop\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reload\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0loadbalance\n\u00a0\u00a0\u00a0\u00a0}\n```", "```\n    global:53 {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errors\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy . {cluster IP of this istio-core-dns service}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```\n$kube-bench node --benchmark cis-1.4\n```", "```\n$ kubectl apply -f job-gke.yaml\n$ kubectl get pods\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0READY\u00a0\u00a0\u00a0STATUS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RESTARTS\u00a0\u00a0\u00a0AGE\nkube-bench-2plpm\u00a0\u00a0\u00a00/1\u00a0\u00a0\u00a0\u00a0\u00a0Completed\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05m20s\n$ kubectl logs kube-bench-2plpm\n[INFO] 4 Worker Node Security Configuration\n[INFO] 4.1 Worker Node Configuration Files\n[WARN] 4.1.1 Ensure that the kubelet service file permissions are set to 644 or more restrictive (Not Scored)\n[WARN] 4.1.2 Ensure that the kubelet service file ownership is set to root:root (Not Scored)\n[PASS] 4.1.3 Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive (Scored)\n[PASS] 4.1.4 Ensure that the proxy kubeconfig file ownership is set to root:root (Scored)\n[WARN] 4.1.5 Ensure that the kubelet.conf file permissions are set to 644 or more restrictive (Not Scored)\n[WARN] 4.1.6 Ensure that the kubelet.conf file ownership is set to root:root (Not Scored)\n[WARN] 4.1.7 Ensure that the certificate authorities file permissions are set to 644 or more restrictive (Not Scored)\n......\n== Summary ==\n0 checks PASS\n0 checks FAIL\n37 checks WARN\n0 checks INFO\n```"]