["```java\npublic class ApplicationDriver {\npublic static void main(String[] args) {\nSwingUtilities.invokeLater(new Runnable() {\n@Override\npublic void run() {\nApplicationWindow window = new ApplicationWindow();\nwindow.setVisible(true);\n}\n});\n}\n}\n\n```", "```java\npublic class ApplicationWindow extends JFrame {\npublic ApplicationWindow() {\nthis.setTitle(\"Example\");\nthis.setSize(200, 100);\nthis.setLocationRelativeTo(null);\nthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\nJButton exitButton = new JButton(\"Exit\");\nexitButton.addActionListener(new ActionListener() {\npublic void actionPerformed(ActionEvent event) {\nSystem.exit(0);\n}\n});\nthis.add(exitButton);\n}\n}\n\n```", "```java\n<script src=\"img/javascript source file\"></script>\n<script>\nvar attributes = { code:'AppletName', width:100, height:100 };\nvar parameters = {jnlp_href: 'appletname.jnlp',\njava_decorated_frame: 'true',\njava_applet_title: 'A Custom Title'\n};\ndeployJava.runApplet(attributes, parameters, '7'7);\n</script>\n\n```", "```java\n    JMenuBar menuBar = new JMenuBar();\n    JMenu menu = new JMenu(\"Overlapping Menu\");\n    JMenuItem menuItem = new JMenuItem(\"Overlapping Item\");\n    menu.add(menuItem);\n    menuBar.add(menu);\n    this.setJMenuBar(menuBar);\n    this.validate();\n\n    ```", "```java\n    Button exitButton = new Button(\"Exit\");\n\n    ```", "```java\n    this.setType(Type.POPUP);\n\n    ```", "```java\n    JFrame.setDefaultLookAndFeelDecorated(true);\n    SwingUtilities.invokeLater(new Runnable() {\n    @Override\n    public void run() {\n    ApplicationWindow window = new ApplicationWindow();\n    window.setOpacity(0.75f);\n    window.setVisible(true);\n    }\n    });\n\n    ```", "```java\nGraphicsEnvironment graphicsEnvironment =\nGraphicsEnvironment.getLocalGraphicsEnvironment();\nGraphicsDevice graphicsDevice = graphicsEnvironment.getDefaultScreenDevice();\nif (!graphicsDevice.isWindowTranslucencySupported(\nGraphicsDevice.WindowTranslucency.TRANSLUCENT)) {\nSystem.err.println(\n\"Translucency is not supported on this platform\");\nSystem.exit(0);\n}\n\n```", "```java\n    GraphicsEnvironment envmt =\n    GraphicsEnvironment.getLocalGraphicsEnvironment();\n    GraphicsDevice device = envmt.getDefaultScreenDevice();\n    if (!device.isWindowTranslucencySupported (WindowTranslucency.PERPIXEL_TRANSLUCENT)) {\n    System.out.println(\"Translucent windows are not supported on your system.\");\n    System.exit(0);\n    }\n    JFrame.setDefaultLookAndFeelDecorated(true);\n\n    ```", "```java\n    this.setTitle(\"Gradient Translucent Window\");\n    setBackground(new Color(0, 0, 0, 0));\n    this.setSize(500, 700);\n    this.setLocationRelativeTo(null);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    JPanel panel = new JPanel() {\n    @Override\n    protected void paintComponent(Graphics gradient) {\n    if (gradient instanceof Graphics2D) {\n    final int Red = 120;\n    final int Green = 50;\n    final int Blue = 150;\n    Paint paint = new GradientPaint(0.0f, 0.0f,\n    new Color(Red, Green, Blue, 0),\n    getWidth(), getHeight(),\n    new Color(Red, Green, Blue, 255));\n    Graphics2D gradient2d = (Graphics2D) gradient;\n    gradient2d.setPaint(paint);\n    gradient2d.fillRect(0, 0, getWidth(), getHeight());\n    }\n    }\n    };\n    this.setContentPane(panel);\n    this.setLayout(new FlowLayout());\n    JButton exitButton = new JButton(\"Exit\");\n    this.add(exitButton);\n    exitButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n\n    ```", "```java\n    GraphicsEnvironment envmt =\n    GraphicsEnvironment.getLocalGraphicsEnvironment();\n    GraphicsDevice device = envmt.getDefaultScreenDevice();\n    if (!device.isWindowTranslucencySupported(\n    WindowTranslucency.PERPIXEL_TRANSLUCENT)) {\n    System.out.println(\"Shaped windows not supported\");\n    System.exit(0);\n    }\n\n    ```", "```java\n    public StopPanel() {\n    this.setBackground(Color.red);\n    this.setForeground(Color.red);\n    this.setLayout(null);\n    JButton okButton = new JButton(\"YES\");\n    JButton cancelButton = new JButton(\"NO\");\n    okButton.setBounds(90, 225, 65, 50);\n    cancelButton.setBounds(150, 225, 65, 50);\n    okButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n    cancelButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n    this.add(okButton);\n    this.add(cancelButton);\n    }\n\n    ```", "```java\n    @Override\n    public void paintComponent(Graphics g) {\n    super.paintComponent(g);\n    Graphics2D g2d = (Graphics2D) g;\n    int pageHeight = this.getHeight();\n    int pageWidth = this.getWidth();\n    int bigHeight = (pageHeight+80)/2;\n    int bigWidth = (pageWidth-305)/2;\n    int smallHeight = (pageHeight+125)/2;\n    int smallWidth = (pageWidth-225)/2;\n    Font bigFont = new Font(\"Castellar\", Font.BOLD, 112);\n    Font smallFont = new Font(\"Castellar\", Font.PLAIN, 14);\n    g2d.setFont(bigFont);\n    g2d.setColor(Color.white);\n    g2d.drawString(\"STOP\", bigWidth, bigHeight);\n    g2d.setFont(smallFont);\n    g2d.drawString(\"Are you sure you want to continue?\", smallWidth, smallHeight);\n    }\n\n    ```", "```java\n    this.add(new StopPanel());\n    final Polygon myShape = getPolygon();\n\n    ```", "```java\n    this.addComponentListener(new ComponentAdapter() {\n    @Override\n    public void componentResized(ComponentEvent e) {\n    setShape(myShape);\n    ((JFrame) e.getSource()).setForeground(Color.red);\n    ((JFrame) e.getSource()).setBackground(Color.red);\n    }\n    });\n\n    ```", "```java\n    setUndecorated(true);\n\n    ```", "```java\n    private Polygon getPolygon() {\n    int x1Points[] = {0, 0, 100, 200, 300, 300, 200, 100};\n    int y1Points[] = {100, 200, 300, 300, 200, 100, 0, 0};\n    Polygon polygon = new Polygon();\n    for (int i = 0; i < y1Points.length; i++) {\n    polygon.addPoint(x1Points[i], y1Points[i]);\n    }\n    return polygon;\n    }\n\n    ```", "```java\n    JButton exitButton = new JButton(\"Exit\");\n    this.add(exitButton);\n\n    ```", "```java\n    JPanel panel = new JPanel();\n    panel.setBorder(BorderFactory.createRaisedSoftBevelBorder());\n    this.setLayout(new FlowLayout());\n    JButton exitButton = new JButton(\"Exit\");\n    panel.add(exitButton);\n    this.add(panel);\n\n    ```", "```java\n    public ApplicationWindow() {\n    this.setTitle(\"Example\");\n    this.setSize(200, 100);\n    this.setLocationRelativeTo(null);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setLayout(new FlowLayout());\n    final FileDialog fileDialog = new FileDialog(this, \"FileDialog\");\n    fileDialog.setMultipleMode(true);\n    JButton fileDialogButton = new JButton(\"File Dialog\");\n    fileDialogButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    fileDialog.setVisible(true);\n    }\n    });\n    this.add(fileDialogButton);\n    JButton exitButton = new JButton(\"Exit\");\n    exitButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n    this.add(exitButton);\n    }\n\n    ```", "```java\nFile files[] = fileDialog.getFiles();\nfor (File file : files) {\nSystem.out.println(\"File: \" + file.getName());\n}\n\n```", "```java\n    public ApplicationWindow() {\n    this.setTitle(\"Example\");\n    this.setSize(200, 100);\n    this.setLocationRelativeTo(null);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setLayout(new FlowLayout());\n    JButton printDialogButton = new JButton(\"Print Dialog\");\n    printDialogButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    final PrintRequestAttributeSet attributes = new HashPrintRequestAttributeSet();\n    attributes.add(DialogTypeSelection.COMMON);\n    PrinterJob printJob = PrinterJob.getPrinterJob();\n    printJob.printDialog(attributes);\n    }\n    });\n    this.add(printDialogButton);\n    JButton exitButton = new JButton(\"Exit\");\n    exitButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n    this.add(exitButton);\n    }\n\n    ```", "```java\nattributes.add(DialogTypeSelection.NATIVE);\n\n```", "```java\n    public ApplicationWindow() {\n    this.setTitle(\"Example\");\n    this.setSize(300, 100);\n    this.setLocationRelativeTo(null);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    LayerUI<JPanel> layerUI = new PasswordLayerUI();\n    JLayer<JPanel> jlayer = new JLayer<JPanel>(getPanel(), layerUI);\n    this.add(jlayer);\n    }\n    private JPanel getPanel() {\n    JPanel panel = new JPanel(new BorderLayout());\n    JPanel gridPanel = new JPanel(new GridLayout(1, 2));\n    JLabel quantityLabel = new JLabel(\"Password\");\n    gridPanel.add(quantityLabel);\n    JPasswordField passwordField = new JPasswordField();\n    gridPanel.add(passwordField);\n    panel.add(gridPanel, BorderLayout.CENTER);\n    JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));\n    JButton okButton = new JButton(\"OK\");\n    buttonPanel.add(okButton);\n    JButton cancelButton = new JButton(\"Cancel\");\n    buttonPanel.add(cancelButton);\n    panel.add(buttonPanel, BorderLayout.SOUTH);\n    return panel;\n    }\n\n    ```", "```java\n    class PasswordLayerUI extends LayerUI<JPanel> {\n    private String errorMessage = \"Password too short\";\n    @Override\n    public void paint(Graphics g, JComponent c) {\n    FontMetrics fontMetrics;\n    Font font;\n    int height;\n    int width;\n    super.paint(g, c);\n    Graphics2D g2d = (Graphics2D) g.create();\n    int componentWidth = c.getWidth();\n    int componentHeight = c.getHeight();\n    // Display error message\n    g2d.setFont(c.getFont());\n    fontMetrics = g2d.getFontMetrics(c.getFont());\n    height = fontMetrics.getHeight();\n    g2d.drawString(errorMessage,\n    componentWidth / 2 + 10, componentHeight / 2 + height);\n    g2d.dispose();\n    }\n    @Override\n    public void installUI(JComponent component) {\n    super.installUI(component);\n    ((JLayer) component).setLayerEventMask(AWTEvent.KEY_EVENT_MASK);\n    }\n    @Override\n    public void uninstallUI(JComponent component) {\n    new JLayer decoratorusingsuper.uninstallUI(component);\n    ((JLayer) component).setLayerEventMask(0);\n    }\n    protected void processKeyEvent(KeyEvent event, JLayer layer) {\n    JTextField f = (JTextField) event.getSource();\n    if (f.getText().length() < 6) {\n    errorMessage = \"Password too short\";\n    }\n    else {\n    errorMessage = \"\";\n    }\n    layer.repaint();\n    }\n    }\n\n    ```", "```java\n// Display watermark\nString displayText = \"Beta Version\";\nfont = new Font(\"Castellar\",Font.PLAIN, 16);\nfontMetrics = g2d.getFontMetrics(font);\ng2d.setFont(font);\nwidth = fontMetrics.stringWidth(displayText);\nheight = fontMetrics.getHeight();\nComposite com = g2d.getComposite();\nAlphaComposite ac = AlphaComposite.getInstance(\n((AlphaComposite)com).getRule(),0.25f);\ng2d.setComposite(ac);\ng2d.drawString(displayText,\n(componentWidth - width) / 2,\n(componentHeight - height) / 2);\n\n```"]