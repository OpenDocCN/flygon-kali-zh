["```kt\n<RelativeLayout xmlns:android=\n   \"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\" >\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/pager\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n\n</RelativeLayout>\n```", "```kt\n<RelativeLayout xmlns:android=\n   \"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\" >\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/pager\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n\n</RelativeLayout>\n```", "```kt\nclass ImagePagerAdapter: PagerAdapter() {\n}\n```", "```kt\nimport android.content.Context\nimport android.view.LayoutInflater\nimport android.view.Vie\nimport android.view.ViewGroup\nimport android.widget.ImageView\nimport android.widget.RelativeLayout\n\nimport androidx.viewpager.widget.PagerAdapter\nimport androidx.viewpager.widget.ViewPager\n```", "```kt\nclass ImagePagerAdapter(\n        var context: Context,\n private var images: IntArray)\n        : PagerAdapter() {\n\n}\n```", "```kt\noverride fun getCount(): Int {\n   return images.size\n}\n```", "```kt\noverride fun isViewFromObject(\n         view: View, `object`: Any)\n       : Boolean {\n   return view === `object`\n}\n```", "```kt\noverride fun instantiateItem(\n         container: ViewGroup,\n         position: Int)\n         : View {\n\n  val image: ImageView\n  val inflater: LayoutInflater =\n        context.getSystemService(\n        Context.LAYOUT_INFLATER_SERVICE)\n        as LayoutInflater\n\n  val itemView =\n        inflater.inflate(\n              R.layout.pager_item, container,\n              false)\n\n     // get reference to imageView in pager_item layout\n     image = itemView.findViewById<View>(\n           R.id.imageView) as ImageView\n\n  // Set an image to the ImageView\n  image.setImageResource(images[position])\n\n  // Add pager_item layout as \n  // the current page to the ViewPager\n  (container as ViewPager).addView(itemView)\n\n  return itemView\n}\n```", "```kt\noverride fun destroyItem(\n  container: ViewGroup, \n  position: Int, \n  `object`: Any) {\n\n  // Remove pager_item layout from ViewPager\n  (container as ViewPager).\n        removeView(`object` as RelativeLayout)\n}\n```", "```kt\nimport android.view.View\nimport androidx.viewpager.widget.ViewPager\nimport androidx.viewpager.widget.PagerAdapter\n```", "```kt\noverride fun onCreate(savedInstanceState: Bundle?) {\n   super.onCreate(savedInstanceState)\n\n   setContentView(R.layout.activity_main)\n\n   // Grab all the images and stuff them in our array\n   val images: IntArray = intArrayOf(\n         R.drawable.image1,\n         R.drawable.image2,\n         R.drawable.image3,\n         R.drawable.image4,\n         R.drawable.image5,\n         R.drawable.image6)\n\n  // get a reference to the ViewPager in the layout\n  val viewPager: ViewPager =\n        findViewById<View>(R.id.pager) as ViewPager\n\n  // Initialize our adapter\n  val adapter: PagerAdapter =\n        ImagePagerAdapter(this, images)\n\n  // Binds the Adapter to the ViewPager\n  viewPager.adapter = adapter\n\n}\n```", "```kt\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.TextView\n\nimport androidx.fragment.app.Fragment\n\nclass SimpleFragment: Fragment() {\n}\n```", "```kt\nclass SimpleFragment: Fragment() {\n// Our companion object which\n// we call to make a new Fragment\n\ncompanion object {\n   // Holds the fragment id passed in when created\n   val messageID = \"messageID\"\n\n   fun newInstance(message: String)\n               : SimpleFragment {\n        // Create the fragment\n        val fragment = SimpleFragment()\n\n        // Create a bundle for our message/id\n        val bundle = Bundle(1)\n        // Load up the Bundle\n        bundle.putString(messageID, message)\n        fragment.arguments = bundle\n        return fragment\n   }\n}\n```", "```kt\noverride fun onCreateView(\n         inflater: LayoutInflater,\n         container: ViewGroup?,\n         savedInstanceState: Bundle?)\n         : View? {\n\n  // Get the id from the Bundle\n  val message = arguments!!.getString(messageID)\n\n  // Inflate the view as normal\n  val view = inflater.inflate(\n              R.layout.fragment_layout,\n              container,\n              false)\n\n  // Get a reference to textView\n  val messageTextView = view\n        .findViewById<View>(R.id.textView) \n              as TextView\n\n  // Display the id in the TextView\n  messageTextView.text = message\n\n  // We could also handle any UI\n  // of any complexity in the usual way\n  // And we will over the next two chapters\n  // ..\n  // ..\n\n  return view\n}\n```", "```kt\nimport java.util.ArrayList\n\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentManager\nimport androidx.fragment.app.FragmentPagerAdapter\nimport androidx.viewpager.widget.ViewPager\n```", "```kt\npublic override fun onCreate(savedInstanceState: Bundle?) {\n  super.onCreate(savedInstanceState)\n  setContentView(R.layout.activity_main)\n\n  // Initialize a list of three fragments\n  val fragmentList = ArrayList<Fragment>()\n\n  // Add three new Fragments to the list\n  fragmentList.add(SimpleFragment.newInstance(\"1\"))\n  fragmentList.add(SimpleFragment.newInstance(\"2\"))\n  fragmentList.add(SimpleFragment.newInstance(\"3\"))\n\n  val pageAdapter = SimpleFragmentPagerAdapter(\n              supportFragmentManager, fragmentList)\n\n  val pager = findViewById<View>(R.id.pager) as ViewPager\n  pager.adapter = pageAdapter\n\n}\n```", "```kt\nprivate inner class SimpleFragmentPagerAdapter\n   // A constructor to receive a fragment manager\n   (fm: FragmentManager,\n   // An ArrayList to hold our fragments\n   private val fragments: ArrayList<Fragment>)\n   : FragmentPagerAdapter(fm) {\n\n   // Just two methods to override to get the current\n   // position of the adapter and the size of the List\n   override fun getItem(position: Int): Fragment {\n          return this.fragments[position]\n   }\n\n  override fun getCount(): Int {\n          return this.fragments.size\n  }\n}\n```", "```kt\n<RelativeLayout xmlns:android=\n      \"http://schemas.android.com/apk/res/android\"\n\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"  \n      tools:context=\".MainActivity\">\n\n      <androidx.viewpager.widget.ViewPager\n      android:id=\"@+id/pager\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\" />\n\n</RelativeLayout>\n```"]