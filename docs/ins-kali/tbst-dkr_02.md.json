["```\n**$ uname -r**\n\n```", "```\n**3.13.0-74-generic**\n\n```", "```\n     **$ sudo apt-get update** \n\n    ```", "```\n     **$ sudo apt-get install apt-transport-https ca-certificates** \n\n    ```", "```\n**$ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D** \n\n```", "```\n**Executing: gpg --ignore-time-conflict --no-options --no-default-keyring --homedir /tmp/tmp.SaGDv5OvNN --no-auto-check-trustdb --trust-model always --keyring /etc/apt/trusted.gpg --primary-keyring /etc/apt/trusted.gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \ngpg: requesting key 2C52609D from hkp server p80.pool.sks-keyservers.net \ngpg: key 2C52609D: public key \"Docker Release Tool (releasedocker) <docker@docker.com>\" imported \ngpg: Total number processed: 1 \ngpg:               imported: 1  (RSA: 1)**\n\n```", "```\n**$ sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D** \n\n```", "```\n     **deb https://apt.dockerproject.org/repo ubuntu-trusty main**\n\n    ```", "```\n**$ sudo apt-get update**\n\n```", "```\n**$ sudo apt-get install linux-image-extra-$(uname -r)** \n\n```", "```\n**Reading package lists... Done \nBuilding dependency tree        \nReading state information... Done \nThe following extra packages will be installed: \n  crda iw libnl-3-200 libnl-genl-3-200 wireless-regdb \nThe following NEW packages will be installed: \n  crda iw libnl-3-200 libnl-genl-3-200 linux-image-extra-3.13.0-74-generic \n  wireless-regdb \n0 upgraded, 6 newly installed, 0 to remove and 70 not upgraded. \nNeed to get 36.9 MB of archives. \nAfter this operation, 152 MB of additional disk space will be used. \nDo you want to continue? [Y/n] Y \nGet:1 http://ap-northeast-1.ec2.archive.ubuntu.com/ubuntu/ trusty/main libnl-3-200 amd64 3.2.21-1 [44 ..\nUpdating /boot/grub/menu.lst ... done \nrun-parts: executing /etc/kernel/postinst.d/zz-update-grub 3.13.0-74-generic /boot/vmlinuz-3.13.0-74-generic \nGenerating grub configuration file ... \nFound linux image: /boot/vmlinuz-3.13.0-74-generic \nFound initrd image: /boot/initrd.img-3.13.0-74-generic \ndone \nProcessing triggers for libc-bin (2.19-0ubuntu6.6) ...**\n\n```", "```\n**$ apt-get install apparmor**\n\n```", "```\n**sudo: unable to resolve host ip-172-30-0-227 \nReading package lists... Done \nBuilding dependency tree        \nReading state information... Done \napparmor is already the newest version. \n0 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.**\n\n```", "```\n     **$ sudo apt-get update**\n\n    ```", "```\n     **$ sudo apt-get install docker-engine** \n\n    ```", "```\n     **$ sudo service docker start** \n\n    ```", "```\n     **$ sudo docker run hello-world** \n\n    ```", "```\n     **Latest: Pulling from library/hello-world \n            03f4658f8b78: Pull complete  \n            a3ed95caeb02: Pull complete  \n            Digest: sha256:8be990ef2aeb16dbcb9271ddfe2610fa6658d13f6dfb8b\n            c72074cc1ca36966a7 \n            Status: Downloaded newer image for hello-world:latest \n            Hello from Docker. \n            This message shows that your installation appears to be working \n            correctly.**\n\n    ```", "```\n**$ uname -r**\n\n```", "```\n**3.10.0-327.el7.x86 _64**\n\n```", "```\n**$ sudo yum update**\n\n```", "```\n**Loaded plugins: amazon-id, rhui-lb, search-disabled-repos \nrhui-REGION-client-config-server-7       | 2.9 kB   \n.... \nRunning transaction check \nRunning transaction test \nTransaction test succeeded \nRunning transaction \n  Installing : linux-firmware-20150904-43.git6ebf5d5.el7.noarch      1/138  \n  Updating   : tzdata-2016c-1.el7.noarch                             2/138  \n  ....                              \nComplete!** \n\n```", "```\n**$ sudo tee /etc/yum.repos.d/docker.repo <<-EOF \n[dockerrepo] \nname=Docker Repository \nbaseurl=https://yum.dockerproject.org/repo/main/centos/7 \nenabled=1 \ngpgcheck=1 \ngpgkey=https://yum.dockerproject.org/gpg \nEOF**\n\n```", "```\n**$ sudo yum install docker-engine**\n\n```", "```\n**$ sudo service docker start**\n**Redirecting to /bin/systemctl start docker.service**\n\n```", "```\n**$ sudo docker ps -a**\n\n```", "```\n**CONTAINER   ID   IMAGE   COMMAND   CREATED   STATUS   PORTS   NAMES**\n\n```", "```\n**$ docker --version\nDocker version 1.11.0, build 4dc5990**\n\n```", "```\n**$ sudo docker info**\n\n```", "```\n**Containers: 0 \n Running: 0 \n Paused: 0 \n Stopped: 0 \nImages: 0 \nServer Version: 1.11.0 \nStorage Driver: devicemapper \n Pool Name: docker-202:2-33659684-pool \n Pool Blocksize: 65.54 kB \n Base Device Size: 10.74 GB \n Backing Filesystem: xfs \n Data file: /dev/loop0 \n Metadata file: /dev/loop1 \n... \nCgroup Driver: cgroupfs \nPlugins:  \n Volume: local \n Network: null host bridge \nKernel Version: 3.10.0-327.el7.x86_64 \nOperating System: Red Hat Enterprise Linux Server 7.2 (Maipo) \nOSType: linux \nArchitecture: x86_64 \nCPUs: 1 \nTotal Memory: 991.7 MiB \nName: ip-172-30-0-16.ap-northeast-1.compute.internal \nID: VW2U:FFSB:A2VP:DL5I:QEUF:JY6D:4SSC:LG75:IPKU:HTOK:63HD:7X5H \nDocker Root Dir: /var/lib/docker \nDebug mode (client): false \nDebug mode (server): false \nRegistry: https://index.docker.io/v1/**\n\n```", "```\n**$ ssh -i \"ubuntu-1404-1.pem\" centos@54.238.154.134**\n\n```", "```\n**$ uname -r**\n\n```", "```\n**3.10.0-327.10.1.el7.x86_64**\n\n```", "```\n**$ sudo yum update \nOutput listing is given, make sure it shows complete at the end \n\nLoaded plugins: fastestmirror \nbase                                                     | 3.6 kB     00:00      \nextras                                                   | 3.4 kB     00:00      \nupdates                                                  | 3.4 kB     00:00      \n(1/4): base/7/x86_64/group_gz                            | 155 kB   00:00      \n(2/4): extras/7/x86_64/primary_db                        | 117 kB   00:00      \n(3/4): updates/7/x86_64/primary_db                       | 4.1 MB   00:00      \n(4/4): base/7/x86_64/primary_db                          | 5.3 MB   00:00      \nDetermining fastest mirrors \n * base: ftp.riken.jp \n * extras: ftp.riken.jp \n * updates: ftp.riken.jp \nResolving Dependencies \n--> Running transaction check \n---> Package bind-libs-lite.x86_64 32:9.9.4-29.el7_2.2 will be updated \n---> Package bind-libs-lite.x86_64 32:9.9.4-29.el7_2.3 will be an update \n---> Package bind-license.noarch 32:9.9.4-29.el7_2.2 will be updated \n---> Package bind-license.noarch 32:9.9.4-29.el7_2.3 will be an update \n.... \n  teamd.x86_64 0:1.17-6.el7_2                                                    \n  tuned.noarch 0:2.5.1-4.el7_2.3                                                 \n  tzdata.noarch 0:2016c-1.el7                                                    \n  util-linux.x86_64 0:2.23.2-26.el7_2.2                                          \nComplete!**\n\n```", "```\n**$ sudo tee /etc/yum.repos.d/docker.repo <<-EOF \n[dockerrepo] \nname=Docker Repository \nbaseurl=https://yum.dockerproject.org/repo/main/centos/7 \nenabled=1 \ngpgcheck=1 \ngpgkey=https://yum.dockerproject.org/gpg \nEOF**\n\n```", "```\n**$ sudo yum install docker-engine**\n\n```", "```\n**$ sudo service docker start** \n**Redirecting to /bin/systemctl start docker.service**\n\n```", "```\n**$ sudo docker ps -a**\n\n```", "```\n**CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES** \n\n```", "```\n**$ docker --version**\n**Docker version 1.11.0, build 4dc5990**\n\n```", "```\n**$ sudo docker info**\n\n```", "```\n**Server Version: 1.11.0 \nStorage Driver: devicemapper \n ... \nKernel Version: 3.10.0-327.10.1.el7.x86_64 \nOperating System: CentOS Linux 7 (Core) \nOSType: linux \nArchitecture: x86_64 \nCPUs: 1 \nTotal Memory: 991.7 MiB \nName: ip-172-30-0-236 \nID: EG2K:G4ZR:YHJ4:APYL:WV3S:EODM:MHKT:UVPE:A2BE:NONM:A7E2:LNED \nDocker Root Dir: /var/lib/docker \nRegistry: https://index.docker.io/v1/**\n\n```", "```\n{ \n  \"Parameters\": { \n    \"InstanceType\": { \n      \"Description\": \"EC2 PV instance type (m3.medium, etc).\", \n      \"Type\": \"String\", \n      \"Default\": \"m3.medium\", \n      \"ConstraintDescription\": \"Must be a valid EC2 PV instance type.\" \n    }, \n    \"ClusterSize\": { \n      \"Default\": \"3\", \n      \"MinValue\": \"3\", \n      \"MaxValue\": \"12\", \n      \"Description\": \"Number of nodes in cluster (3-12).\", \n      \"Type\": \"Number\" \n    }, \n    \"DiscoveryURL\": { \n      \"Description\": \"An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new?size=<your cluster size>\", \n      \"Type\": \"String\" \n    }, \n    \"AdvertisedIPAddress\": { \n      \"Description\": \"Use 'private' if your etcd cluster is within one region or 'public' if it spans regions or cloud providers.\", \n      \"Default\": \"private\", \n      \"AllowedValues\": [ \n        \"private\", \n        \"public\" \n      ], \n      \"Type\": \"String\" \n    }, \n    \"AllowSSHFrom\": { \n      \"Description\": \"The net block (CIDR) that SSH is available to.\", \n      \"Default\": \"0.0.0.0/0\", \n      \"Type\": \"String\" \n    }, \n    \"KeyPair\": { \n      \"Description\": \"The name of an EC2 Key Pair to allow SSH access to the instance.\", \n      \"Type\": \"String\" \n    } \n  } \n} \n\n```", "```\n**core@ip-10-184-155-153 ~ $ docker --version** \n**Docker version 1.9.1, build 9894698**\n\n```", "```\n**$ uname -r**\n**4.4.7-300.fc23.x86_64**\n**Switch to root user**\n**[os@osboxes ~]# su -**\n**Password:**\n**[root@vkohli ~]#**\n\n```", "```\n**$ sudo dnf update** \n\n```", "```\n**$ sudo tee /etc/yum.repos.d/docker.repo <<-'EOF' \n> [dockerrepo] \n> name=Docker Repository \n> baseurl=https://yum.dockerproject.org/repo/main/fedora/$releasever/ \n> enabled=1 \n> gpgcheck=1 \n> gpgkey=https://yum.dockerproject.org/gpg \n> EOF \n[dockerrepo] \nname=Docker Repository \nbaseurl=https://yum.dockerproject.org/repo/main/fedora/$releasever/ \nenabled=1 \ngpgcheck=1 \ngpgkey=https://yum.dockerproject.org/gpg**\n\n```", "```\n**$ sudo dnf install docker-engine**\n\n```", "```\n**Docker Repository                                32 kB/s | 7.8 kB     00:00 \nLast metadata expiration check: 0:00:01 ago on Thu Apr 21 15:45:25 2016\\. \nDependencies resolved. \nInstall  7 Packages \n... \nRunning transaction test \nTransaction test succeeded. \nRunning transaction \n  Installing: python-IPy-0.81-13.fc23.noarch                                                                     .... \nInstalled: \n... \nComplete!**\n\n```", "```\n**$ sudo systemctl start docker** \n\n```", "```\n**[root@osboxes ~]# docker run hello-world** \n\n```", "```\n**Unable to find image 'hello-world:last' locally \nlatest: Pulling from library/hello-world \n03f4658f8b78: Pull complete \na3ed95caeb02: Pull complete \nDigest: sha256:8be990ef2aeb16dbcb9271ddfe2610fa6658d13f6dfb8bc72074cc1ca36966a7 \nStatus: Downloaded newer image for hello-world:latest \n\nHello from Docker. \nThis message shows that your installation appears to be working correctly.**\n\n```", "```\n**$ docker run -it ubuntu bash**\n\n```", "```\n**$ sudo dnf update**\n\n```", "```\n**$ curl -fsSL https://get.docker.com/ | sh**\n**+ sh -c 'sleep 3; dnf -y -q install docker-engine'**\n\n```", "```\n**$ sudo systemctl start docker**\n\n```", "```\n**$ sudo docker run hello-world**\n\n```", "```\n**$ sudo groupadd docker** \n**$ sudo usermod -aG docker your_username**\n\n```", "```\n**$ docker run hello-world**\n\n```", "```\n**# sudo dnf -y remove docker-engine.x86_64**\n\n```", "```\n**Dependencies resolved. \nTransaction Summary \n================================================================ \nRemove  7 Packages \nInstalled size: 57 M \nRunning transaction check \nTransaction check succeeded. \nRunning transaction test \nTransaction test succeeded. \nRunning transaction \n... \nComplete! \n[root@osboxes ~]# rm -rf /var/lib/docker**\n\n```", "```\n**$ ssh -i \"ubuntu-1404-1.pem\" ec2-user@54.199.222.91**\n\n```", "```\n**The authenticity of host '54.199.222.91 (54.199.222.91)' can't be established. \n... \nManagement and Config: https://www.suse.com/suse-in-the-cloud-basics \nDocumentation: http://www.suse.com/documentation/sles12/ \nForum: https://forums.suse.com/forumdisplay.php?93-SUSE-Public-Cloud \nHave a lot of fun...  \nec2-user@ip-172-30-0-104:~>**\n\n```", "```\n**$ uname -r** \n\n```", "```\n**ec2-user@ip-172-30-0-104:~> sudo SUSEConnect -p sle-module-containers/12/x86_64 -r ''**\n\n```", "```\n**Registered sle-module-containers 12 x86_64** \n**To server: https://smt-ec2.susecloud.net** \n**ec2-user@ip-172-30-0-104:~>**\n\n```", "```\n**ec2-user@ip-172-30-0-104:~> sudo zypper in Docker**\n\n```", "```\n**... \n (2/2) Installing: docker-1.10.3-66.1 ...........................................................[done] \nAdditional rpm output: \ncreating group docker... \nUpdating /etc/sysconfig/docker...**\n\n```", "```\n**ec2-user@ip-172-30-0-104:~> sudo systemctl start docker**\n\n```", "```\n**ec2-user@ip-172-30-0-104:~> sudo docker run hello-world**\n\n```", "```\n**Unable to find image 'hello-world:latest' locally \nlatest: Pulling from library/hello-world \n4276590986f6: Pull complete  \na3ed95caeb02: Pull complete  \nDigest: sha256:4f32210e234b4ad5cac92efacc0a3d602b02476c754f13d517e1ada048e5a8ba \nStatus: Downloaded newer image for hello-world:latest \nHello from Docker. \nThis message shows that your installation appears to be working correctly. \n.... \nFor more examples and ideas, visit: \n https://docs.docker.com/engine/userguide/ \nec2-user@ip-172-30-0-104:~>** \n\n```"]