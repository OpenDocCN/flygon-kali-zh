- en: Chapter 2. Server Management with Pi
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。使用Pi进行服务器管理
- en: 'In the first half of this project, we will move from a desktop-based console
    to a text-based one that gives more power to the user and lets you perform more
    advanced tasks compared to the desktop. We will access the Pi''s Linux console
    from an Android device and control it remotely. In the second half, we will send
    and receive files between the Pi and Android through FTP. We will even combine
    the two parts by managing our newly installed FTP server remotely using the text-based
    console. In this chapter, we will even install database and web servers on to
    the Pi to show how to manage them later on. To make it even more fun, we will
    implement a simple but useful mini project that makes use of both web and database
    servers. The following topics will be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目的前半部分，我们将从基于桌面的控制台转移到一个基于文本的控制台，这样用户就可以获得更多的权力，并且可以执行比桌面更高级的任务。我们将从Android设备访问Pi的Linux控制台并远程控制它。在后半部分，我们将通过FTP在Pi和Android之间发送和接收文件。我们甚至将通过使用基于文本的控制台远程管理我们新安装的FTP服务器来结合这两部分。在本章中，我们甚至将在Pi上安装数据库和Web服务器，以展示如何以后管理它们。为了使它更有趣，我们将实现一个简单但有用的迷你项目，利用Web和数据库服务器。以下主题将被涵盖：
- en: Remote console to the Pi from Android
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Android远程控制台到Pi
- en: Exchanging files between the Pi and Android
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Pi和Android之间交换文件
- en: A simple database and web server implementation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的数据库和Web服务器实现
- en: Simple management of servers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器的简单管理
- en: Remote console to the Pi from Android
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Android远程控制台到Pi
- en: The administrators of Linux and Unix computers have been using text-based command-line
    interfaces called **shell** for many years to manage and administer their servers.
    As the Pi's OS, Raspbian, is a Linux variant, the most natural way to access and
    issue commands or check the status of running programs, services, and different
    servers on the Pi is again by issuing commands on this text-based shell. There
    are different shell implementations but the one that is used on Raspbian by default
    is **bash**. The most well-known way of accessing shell remotely on a Linux server
    is through the **Secure Shell** protocol known, in general, as **SSH**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Linux和Unix计算机的管理员多年来一直在使用称为**shell**的基于文本的命令行界面来管理和管理他们的服务器。由于Pi的操作系统Raspbian是Linux变种，因此访问并发出命令或检查Pi上运行的程序、服务和不同服务器的状态的最自然方式是再次通过在基于文本的shell上发出命令。有不同的shell实现，但在Raspbian上默认使用的是**bash**。在Linux服务器上远程访问shell的最著名方式是通过一般称为**SSH**的**安全外壳**协议。
- en: Note
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Secure Shell** (**SSH**) is an encrypted network protocol used to send shell
    commands to a remote machine in a secure way. SSH does two things for you. It
    enables, through different tools, such as the ones we will present to you in a
    moment, you to send commands to the remote machine and it does this using a secure
    channel established over an insecure network.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全外壳**（**SSH**）是一种加密的网络协议，用于以安全的方式向远程计算机发送外壳命令。SSH为您做了两件事。它通过不同的工具，比如我们马上会向您介绍的工具，使您能够通过安全通道在不安全的网络上向远程计算机发送命令。'
- en: 'For SSH to work, there should be an SSH server already running that can accept
    and respond to SSH client requests. On Raspberry Pi, this feature is enabled by
    default. If by any means, it is disabled, you can enable it using the Pi configuration
    program by issuing the following command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使SSH工作，应该已经有一个可以接受并响应SSH客户端请求的SSH服务器正在运行。在树莓派上，默认情况下启用了此功能。如果以任何方式禁用了它，您可以使用Pi配置程序通过发出以下命令来启用它：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then, navigate to **ssh** and hit *Enter*, and then select **Enable or disable
    ssh server**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，导航到**ssh**并按*Enter*，然后选择**启用或禁用ssh服务器**。
- en: On the client side, and as we are using Android as our client throughout this
    book, we will download an app called ConnectBot. It is one of the most popular
    SSH clients on Android and the latest version as of today is 1.8.4\. Download
    it to your device and open it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端，由于我们在本书中一直在使用Android作为我们的客户端，我们将下载一个名为ConnectBot的应用程序。这是Android上最受欢迎的SSH客户端之一，截至今天的最新版本是1.8.4。将其下载到您的设备并打开它。
- en: You will need to provide the username and IP address that we found out in the
    previous chapter. We do not need to provide the port as ConnectBot will use the
    default port for SSH in this case. Click on **Yes** if you are asked to continue
    with the connection because of problems with the authenticity of the host. You
    are asked this question because you are connecting to the Pi for the first time
    through a remote SSH.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要提供我们在上一章中找到的用户名和IP地址。在这种情况下，我们不需要提供端口，因为ConnectBot将使用SSH的默认端口。如果由于主机的真实性问题而要求继续连接，请单击**是**。您会被问到这个问题，因为您是通过远程SSH首次连接到Pi。
- en: Note that in the following screenshot, I have provided the internal IP address
    of my home network. You might want to use an external IP address and connect to
    the Pi from outside your home network. For this purpose, you'll need to add the
    standard FTP ports `21` and `20` to your port forwarding settings as well. The
    same applies to the SSH protocol, which has a default port number of `22`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在以下屏幕截图中，我提供了我家庭网络的内部IP地址。您可能希望使用外部IP地址并从家庭网络外部连接到Pi。为此，您还需要将标准FTP端口`21`和`20`添加到端口转发设置中。SSH协议也适用，其默认端口号为`22`。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As we have discussed earlier, there is a security risk in opening ports this
    way and also keeping the default password for the user `pi` on the Pi.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论过的，以这种方式打开端口存在安全风险，同时保留Pi用户`pi`的默认密码也存在安全风险。
- en: 'The following screenshot illustrates connection details on ConnectBot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了ConnectBot上的连接详细信息：
- en: '![Remote console to the Pi from Android](img/image00109.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![从Android远程控制台到Pi](img/image00109.jpeg)'
- en: Connection details on ConnectBot
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ConnectBot上的连接详细信息
- en: 'Now, provide the default password for the `pi` account, which is `raspberry`,
    or the one you have changed it to. After this step, you will be connected to the
    Pi remotely using SSH, as seen in the following screenshot:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，提供`pi`账户的默认密码，即`raspberry`，或者您已经更改的密码。完成此步骤后，您将可以使用SSH远程连接到Pi，如下截图所示：
- en: '![Remote console to the Pi from Android](img/image00110.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![从Android到Pi的远程控制台](img/image00110.jpeg)'
- en: The prompt provided by ConnectBot
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ConnectBot提供的提示
- en: You are now ready to issue commands on your Pi and check the status of different
    services. This connection will be saved with all its properties. Next time you
    want to log in, you will not need to provide an address, username, and password
    information.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以准备在Pi上发出命令并检查不同服务的状态。此连接将保存其所有属性。下次您想要登录时，将无需提供地址、用户名和密码信息。
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: On a Mac or Linux, you can use the `ssh` command installed on your system by
    default. On Windows, you can download PuTTY to issue the same commands as the
    ones in ConnectBot.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac或Linux上，您可以使用系统默认安装的`ssh`命令。在Windows上，您可以下载PuTTY来发出与ConnectBot中相同的命令。
- en: Exchanging files between the Pi and Android
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Pi和Android之间交换文件
- en: 'In the second part of this chapter, we will use the Pi as an FTP server to
    share files between our Android devices or send files to the Pi to view them on
    a larger screen that you connect to the Pi HDMI port. The FTP server we will use
    is `vsftpd`. It is a lightweight FTP server used in many small projects. To install
    it on our Pi, we use the following command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第二部分中，我们将使用Pi作为FTP服务器，在我们的Android设备之间共享文件，或者将文件发送到Pi上，以便在连接到Pi HDMI端口的大屏幕上查看。我们将使用的FTP服务器是`vsftpd`。它是许多小型项目中使用的轻量级FTP服务器。要在我们的Pi上安装它，我们使用以下命令：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding command will even start the FTP service.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令甚至会启动FTP服务。
- en: 'However, we should make some changes in the configuration of the FTP server
    to use it effectively. For this purpose, we need to edit the FTP server configuration
    file using this command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们应该在FTP服务器的配置中进行一些更改，以有效地使用它。为此，我们需要使用以下命令编辑FTP服务器配置文件：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Find the two lines containing #`local_enable=YES` and `#write_enable=YES` and
    remove the `#` comment sign at the beginning of these lines before you save and
    exit. These changes will enable the user `pi` to login and be able to send files
    to the Pi. To restart the FTP server, issue this command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 找到包含`#local_enable=YES`和`#write_enable=YES`的两行，并在保存并退出之前删除这些行开头的`#`注释符号。这些更改将使用户`pi`能够登录并能够将文件发送到Pi。要重新启动FTP服务器，请发出此命令：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, we need to install an FTP client on Android. For this purpose, we will
    use **AndFTP**. It is enough to use the free version for our project. We see the
    following initial view on the Android device after opening it:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要在Android上安装一个FTP客户端。为此，我们将使用**AndFTP**。对于我们的项目来说，使用免费版本就足够了。在打开后，我们在Android设备上看到以下初始视图：
- en: '![Exchanging files between the Pi and Android](img/image00111.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![在Pi和Android之间交换文件](img/image00111.jpeg)'
- en: An initial view of the AndFTP client
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: AndFTP客户端的初始视图
- en: 'Pressing the plus button will take you to the following view, where you will
    be asked for connection properties:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 按下加号按钮将带您到以下视图，您将被要求提供连接属性：
- en: '![Exchanging files between the Pi and Android](img/image00112.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![在Pi和Android之间交换文件](img/image00112.jpeg)'
- en: Connection properties on AndFTP
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: AndFTP上的连接属性
- en: 'Provide the IP address of the Pi you found out in the first chapter, `pi` as
    username, and `raspberry` as the password or the one you have changed to. Then,
    scroll down to the end of the view and press the **Save** button. This will save
    the connection properties and send you back to the main view:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 提供您在第一章中找到的Pi的IP地址，用户名为`pi`，密码为`raspberry`或您已更改的密码。然后，向下滚动到视图的末尾，然后按下**保存**按钮。这将保存连接属性并将您带回到主视图：
- en: '![Exchanging files between the Pi and Android](img/image00113.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![在Pi和Android之间交换文件](img/image00113.jpeg)'
- en: The list of connections in AndFTP
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: AndFTP中的连接列表
- en: 'Clicking on the newly created connection, shown as a blue folder, will initiate
    the FTP connection to the Pi and log the user `pi` in. This will get you into
    the `home` directory for the `pi` user, as shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 单击新创建的连接，显示为蓝色文件夹，将启动到Pi的FTP连接并登录用户`pi`。这将使您进入`pi`用户的`home`目录，如下截图所示：
- en: '![Exchanging files between the Pi and Android](img/image00114.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![在Pi和Android之间交换文件](img/image00114.jpeg)'
- en: The home directory of user pi
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 用户pi的主目录
- en: Now you will be able to upload files from your Android device to the Pi by pressing
    the mobile phone-like icon in AndFTP and choosing a file to upload afterwards.
    You can set up AndFTP from another Android device on the same network or even
    another computer using a built-in FTP client, and download the newly uploaded
    file to view it; this way, you have shared your first file between different Android
    clients using Raspberry Pi as an FTP server.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将能够通过在AndFTP中按下类似手机的图标并选择要上传的文件来从您的Android设备上传文件到Pi。您可以使用同一网络上的另一台Android设备或甚至使用内置的FTP客户端在另一台计算机上设置AndFTP，并下载新上传的文件以查看它；这样，您已经使用树莓派作为FTP服务器在不同的Android客户端之间共享了第一个文件。
- en: A simple database and web server implementation
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个简单的数据库和Web服务器实现
- en: Next, we'll take our project one step further and install both a database and
    web server, which we can administer later on using ConnectBot. We will even make
    it more fun by implementing a real project that makes use of these servers. The
    best candidate for this purpose is a sensor measurement scenario. We will connect
    a temperature/humidity sensor to our Pi and save the measurements into a database
    that we will install on the Pi, which a web server will make available to clients.
    We can later on manage these servers remotely, which is the main objective in
    this chapter.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将进一步进行我们的项目，并安装数据库和Web服务器，稍后我们可以使用ConnectBot进行管理。我们甚至会更有趣，通过实施一个真实的项目来使用这些服务器。这个目的的最佳候选者是传感器测量场景。我们将把一个温度/湿度传感器连接到我们的树莓派，并将测量值保存到我们将在树莓派上安装的数据库中，一个Web服务器将使客户端可以访问。我们以后可以远程管理这些服务器，这是本章的主要目标。
- en: Connecting the sensor
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接传感器
- en: For the purpose of this project, we will use a sensor, **DHT11**, which measures
    both temperature and humidity, but for the sake of easier connections, we will
    use an off-the-shelf module called **Keyes DHT11** or DHT11 for short, which contains
    these sensors.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个项目的目的，我们将使用一个传感器**DHT11**，它可以测量温度和湿度，但为了更容易连接，我们将使用一个现成的模块称为**Keyes DHT11**或简称DHT11，其中包含了这些传感器。
- en: Tip
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There is even an improved version of DHT11, which is DHT22\. It costs a little
    bit more but has more accurate sensors on it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至还有一个改进版的DHT11，叫做DHT22。它的成本略高，但传感器更精确。
- en: 'Using this sensor module instead of the sensors itself will enable us to connect
    the sensors to the Pi using only three jumper wires and without a breadboard or
    resistor. There is another advantage of using this module instead of the sensors:
    the sensors provide analog data that the Pi cannot handle. Pi is capable of handling
    digital information on its GPIO ports. The DHT11 module does the conversion for
    us. The following image illustrates the DHT11 sensor module along with a description
    of the pins associated with it:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个传感器模块而不是传感器本身将使我们能够只使用三根跳线将传感器连接到树莓派，而无需面包板或电阻。使用这个模块而不是传感器的另一个优点是：传感器提供的是树莓派无法处理的模拟数据。树莓派能够处理其GPIO端口上的数字信息。DHT11模块为我们进行了转换。以下图片说明了DHT11传感器模块以及与之相关的引脚的描述：
- en: '![Connecting the sensor](img/image00115.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![连接传感器](img/image00115.jpeg)'
- en: The DHT11 sensor module
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: DHT11传感器模块
- en: 'The following image illustrates the Keyes DHT11 sensor module:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片说明了Keyes DHT11传感器模块：
- en: '![Connecting the sensor](img/image00116.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![连接传感器](img/image00116.jpeg)'
- en: The Keyes DHT11 sensor module
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Keyes DHT11传感器模块
- en: 'Now, connect the **GND** output from the sensor module to Pi''s GPIO Ground,
    **5V** output to Pi''s 5V pin, and **DATA** to Pi''s **GPIO-4** pin. The following
    diagram shows the layout of Pi''s GPIO pins and their names:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将传感器模块的**GND**输出连接到树莓派的GPIO接地，**5V**输出连接到树莓派的5V引脚，**DATA**连接到树莓派的**GPIO-4**引脚。以下图示了树莓派GPIO引脚的布局及其名称：
- en: '![Connecting the sensor](img/image00117.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![连接传感器](img/image00117.jpeg)'
- en: Raspberry Pi GPIO pin layout
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派GPIO引脚布局
- en: The next step is to read the values these sensors provide. For this purpose,
    we will use a widely used library from **Adafruit**, which is specially designed
    for these kinds of sensors developed in the Python programming language. Before
    we can use it, we need to install some software components to our Raspberry Pi.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是读取这些传感器提供的值。为此，我们将使用**Adafruit**的一个广泛使用的库，这个库是专门为Python编程语言开发的这类传感器而设计的。在我们使用它之前，我们需要将一些软件组件安装到我们的树莓派上。
- en: 'Firstly, we need to update our Pi and install some dependencies using these
    commands:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要使用以下命令更新我们的树莓派并安装一些依赖项：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The sensor library itself is on GitHub and we will download it from there onto
    our Pi using the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器库本身在GitHub上，我们将使用以下命令从GitHub上下载到我们的树莓派上：
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This command downloads the library and saves it in a subdirectory. Now, go
    into this subdirectory using the following command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令会下载库并将其保存在一个子目录中。现在，使用以下命令进入这个子目录：
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Next, you need to actually install the sensor library using the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要使用以下命令实际安装传感器库：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, we use the standard Python third-party module install functionality, which
    installs the Adafruit library globally onto your system at the standard Python
    library install location, `/usr/local/lib/python2.7/dist-packages/`. This is why
    we need superuser privileges, which we can get using `sudo` command.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用了标准的Python第三方模块安装功能，它会将Adafruit库全局安装到您的系统的标准Python库安装位置`/usr/local/lib/python2.7/dist-packages/`。这就是为什么我们需要超级用户权限，我们可以使用`sudo`命令来获得。
- en: 'Now we are ready to begin reading measurements from the sensor using the example
    code that we downloaded together with the library. Assuming that you are still
    in the `Adafruit_Python_DHT` directory, the following command does the job:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备开始使用我们下载的示例代码从传感器中读取测量值。假设您仍然在`Adafruit_Python_DHT`目录中，以下命令可以完成任务：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In this command, `11` is the descriptor used to identify DHT11 sensor and `4`
    denotes the GPIO pin 4\. You should now get an output that looks like this:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个命令中，`11`是用来识别DHT11传感器的描述符，`4`表示GPIO引脚4。您现在应该得到一个看起来像这样的输出：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Installing the database
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装数据库
- en: 'After verifying that the sensor and connections to the Pi work, we will save
    the measurements in a database. The database we will use is MySQL. Use the following
    command to install MySQL to the Pi:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在验证传感器和连接到树莓派的连接工作正常后，我们将把测量值保存到数据库中。我们将使用的数据库是MySQL。使用以下命令将MySQL安装到树莓派上：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'During the installation, you will be asked to set a password for the administrator
    account root. I will set admin as the password and refer to it in the upcoming
    code. The following command takes you into the MySQL shell where you can issue
    SQL commands, such as inserting data into a database or querying data already
    in the database. You should provide the password you have set when you''re asked
    for it:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装过程中，您将被要求为管理员帐户root设置密码。我将admin设置为密码，并在即将到来的代码中引用它。以下命令将带您进入MySQL shell，在那里您可以发出SQL命令，例如将数据插入数据库或查询已在数据库中的数据。当要求时，您应提供您设置的密码：
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can exit from the MySQL shell anytime using the `exit` command.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时使用“exit”命令退出MySQL shell。
- en: 'The next step in the MySQL shell is to create a database and use it for any
    further SQL statement that follow:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL shell中的下一步是创建一个数据库，并将其用于随后的任何SQL语句：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following SQL statement will create a table in this newly created database
    that we will use to save sensor measurements:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下SQL语句将在这个新创建的数据库中创建一个表，我们将用它来保存传感器测量值：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The next step is to implement a Python script that reads from our sensor and
    saves it to the database. Put the following code in a file with the name `sense.py`
    under the `home` directory using the previously discussed `nano` command. You
    can use the `cd` command without parameters to go back to the `home` directory
    from any place in the `pi` directory structure. Note an important fact that the
    file should not contain any empty preceding lines, which means that the line referring
    to the Python command should be the first line in the file. The following code
    forms the content of our `sense.py` file:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是实现一个Python脚本，该脚本从我们的传感器中读取并将其保存到数据库中。使用先前讨论的“nano”命令将以下代码放入名为“sense.py”的文件中，该文件位于“home”目录下。您可以使用没有参数的“cd”命令从“pi”目录结构中的任何位置返回到“home”目录。请注意一个重要的事实，即文件不应包含任何空的前导行，这意味着引用Python命令的行应该是文件中的第一行。以下代码构成了我们的“sense.py”文件的内容：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You should change the password parameter in the `MySQLdb.connect` method call
    to the one you have assigned to the root user on the MySQL server. You should
    even consider creating a new user with access to just the `measurements` table
    for security reasons, as the root user has full access to the database. Refer
    to the MySQL documentation for this purpose.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该将“MySQLdb.connect”方法调用中的密码参数更改为您在MySQL服务器上为root用户分配的密码。出于安全原因，您甚至应考虑创建一个仅访问“measurements”表的新用户，因为root用户对数据库具有完全访问权限。有关此目的，请参阅MySQL文档。
- en: 'The next step is to change the file properties and make it an executable file
    with the following command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是更改文件属性，并使用以下命令将其设置为可执行文件：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Note that this script saves only a single measurement. We need to schedule
    the running of this script. For this purpose, we will use a built-in Linux utility
    called **cron**, which allows tasks to be automatically run in the background
    at regular intervals by the cron daemon. **crontab,** also known as CRON TABle,
    is a file that contains the schedule of cron entries to be run at specified times.
    By running the following command, we can edit this table:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此脚本仅保存单个测量值。我们需要安排运行此脚本。为此，我们将使用一个名为**cron**的内置Linux实用程序，它允许cron守护程序在后台定期运行任务。**crontab**，也称为CRON
    TABle，是一个包含要在指定时间运行的cron条目的时间表文件。通过运行以下命令，我们可以编辑此表：
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the following line to this file and save it. This will make the cron deamon
    run our script once every five minutes:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下行添加到此文件中并保存。这将使cron守护程序每五分钟运行一次我们的脚本：
- en: '[PRE17]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Installing the web server
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Web服务器
- en: 'Now, we will save our measurements into the database. The next step is to view
    them in a web browser using a web server. For this purpose, we will use **Apache**
    as the web server and **PHP** as the programming language. To install Apache and
    the packages required for our purpose, run the following commands:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将测量结果保存到数据库中。下一步是使用Web服务器在Web浏览器中查看它们。为此，我们将使用**Apache**作为Web服务器，**PHP**作为编程语言。要安装Apache和我们的目的所需的软件包，请运行以下命令：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, change your directory to the web server''s default directory:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将目录更改为Web服务器的默认目录：
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here, we will create a file that will be accessed by users through the web
    server we have installed. The file is executed by the web server and the result
    of this execution is sent to the clients connected. We will name it `index.php`:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将创建一个文件，用户可以通过我们安装的Web服务器访问该文件。该文件由Web服务器执行，并将执行结果发送给连接的客户端。我们将其命名为“index.php”：
- en: '[PRE20]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The contents should look like the following code. Here, you should again change
    the password for the MySQL user root to the one you have chosen in the call to
    the `new mysqli` constructor method:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 内容应如下所示。在这里，您应该再次更改MySQL用户root的密码，以与对“new mysqli”构造方法的调用中选择的密码相匹配：
- en: '[PRE21]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We want this page to be the default start page that web browsers get whenever
    they access the server directly with only an IP address. You can back up the old
    default start page for Apache as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望此页面成为Web浏览器直接访问服务器时的默认起始页面。您可以按以下方式备份Apache的旧默认起始页面：
- en: '[PRE22]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Navigating to the IP address of the Pi from a browser will result in a view
    similar to the following screenshot after a few hours of sensor measurements.
    Here, I can access the Pi using the external IP address outside my home network
    as I have added the HTTP port of `80` to the port forwarding settings of my home
    router.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中导航到Pi的IP地址将在几个小时的传感器测量后产生类似以下截图的视图。在这里，我可以使用家庭网络外部的外部IP地址访问Pi，因为我已将家庭路由器的端口转发设置添加到了“80”的HTTP端口。
- en: '![Installing the web server](img/image00118.jpeg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![安装Web服务器](img/image00118.jpeg)'
- en: Now, we have a running FTP, database, and web servers. Let's administer these
    using ConnectBot.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个正在运行的FTP、数据库和Web服务器。让我们使用ConnectBot进行管理。
- en: Simple management of servers
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器的简单管理
- en: 'The following command simply checks the status of the FTP server:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令仅检查FTP服务器的状态：
- en: '[PRE23]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This command restarts the FTP server if there''s any problem with it:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果FTP服务器出现问题，可以使用此命令重新启动：
- en: '[PRE24]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The `service` utility that we have used lets you restart the database and web
    server using these two commands:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的`service`实用程序允许您使用以下两个命令重新启动数据库和Web服务器：
- en: '[PRE25]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Use the following command to check the status of the MySQL server:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令检查MySQL服务器的状态：
- en: '[PRE26]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If you believe that the database has grown too much in size, you can start
    the MySQL console and run a SQL query to see the database size:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为数据库的大小已经增长太大，可以启动MySQL控制台并运行SQL查询以查看数据库大小：
- en: '[PRE27]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You can even delete records that are older than three days using the following
    query:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至可以使用以下查询删除三天前的记录：
- en: '[PRE28]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Or, as an alternative, you can check the size of the filesystem using the shell
    command:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，作为替代方案，您可以使用shell命令检查文件系统的大小：
- en: '[PRE29]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Summary
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter introduced you to the management of Raspberry Pi as a server and
    how to issue commands to it from Android. We installed an FTP server on the Pi
    and shared files between Android clients. To show an example of database and web
    servers, we implemented a useful project and learned to manage these servers remotely
    as well.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 本章向您介绍了将树莓派作为服务器的管理以及如何从Android向其发出命令。我们在树莓派上安装了FTP服务器，并在Android客户端之间共享文件。为了展示数据库和Web服务器的示例，我们实施了一个有用的项目，并学会了远程管理这些服务器。
- en: The next chapter will introduce you to the Pi camera and help you implement
    a surveillance solution.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将向您介绍树莓派摄像头，并帮助您实现监控解决方案。
