["```kt\nfun addStudent(name: String, age:Int, classRoomNo: Int = 1, studentId: Int) : Student = Student(name, classRoomNo, studentId, age)\n```", "```kt\nfun addStudent(name: String, age:Int, classRoomNo: Int = 1, studentId: Int) = Student(name, classRoomNo, studentId, age)\n```", "```kt\ndata class Student(var name: String, var classRoomNo: Int, var studentId: Int, var age: Int)\n\nfun addStudent(name: String, age:Int, classRoomNo: Int = 1, studentId: Int) : Student {\n\n return Student(name, classRoomNo, studentId, age)\n}\n\nvar anna = addStudent(\"Anna\", 18, 2, 1)\nvar joseph = addStudent(name = \"Joseph\", age = 19, studentId = 2)\n```", "```kt\n// 1\nfun logStudent(name: String, age:Int, createStudent:(String, Int) -> Student) {\n    Log.d(\"student creation\", \"About to create student with name $name\")\n    val student = createStudent(name, age)\n    Log.d(\"student creation\", \"Student created with name ${student.name} and age ${student.age}\")\n}\n\n// 2\nlogStudent(name = \"Anna\", age = 20, createStudent = { name: String, age: Int -> Student(name, 1, 3, age)})\n```", "```kt\ncell.setOnClickListener(object : View.OnClickListener {\n    override fun onClick(v: View?) {\n        cellClickListener(i, j)\n    }\n})\n```", "```kt\ncell.setOnClickListener { cellClickListener(i, j) } \n```", "```kt\nprivate fun isBoardFull(gameBoard:Array<CharArray>): Boolean {\n    for (i in 0 until gameBoard.size) { \n        for (j in 0 until gameBoard[i].size) { \n            if(gameBoard[i][j] == ' ') {\n                return false\n            }\n        }\n    }\n    return true\n}\n```", "```kt\nprivate fun isWinner(gameBoard:Array<CharArray>, w: Char): Boolean {\n    for (i in 0 until gameBoard.size) {\n        if (gameBoard[i][0] == w && gameBoard[i][1] == w && \n        gameBoard[i][2] == w) {\n            return true\n        }\n\n        if (gameBoard[0][i] == w && gameBoard[1][i] == w && \n        gameBoard[2][i] == w) {\n            return true\n        }\n    }\n    if ((gameBoard[0][0] == w && gameBoard[1][1] == w && gameBoard[2]\n    [2] == w) ||\n            (gameBoard[0][2] == w && gameBoard[1][1] == w && \n        gameBoard[2][0] == w)) {\n        return true\n    }\n    return false\n}\n```", "```kt\nprivate fun checkGameStatus() {\n    var state: String? = null\n    if(isWinner(gameBoard, 'X')) {\n        state = String.format(resources.getString(R.string.winner), 'X')\n    } else if (isWinner(gameBoard, 'O')) {\n        state = String.format(resources.getString(R.string.winner), 'O')\n    } else {\n        if (isBoardFull(gameBoard)) {\n            state = resources.getString(R.string.draw)\n        }\n    }\n\n    if (state != null) {\n        turnTextView?.text = state\n        val builder = AlertDialog.Builder(this)\n        builder.setMessage(state)\n        builder.setPositiveButton(android.R.string.ok, { dialog, id ->\n            startNewGame(false)\n\n        })\n        val dialog = builder.create()\n        dialog.show()\n\n    }\n}\n```", "```kt\nfab.setOnClickListener { view -> HelloKotlin(\"Get ready for a fun game of Tic Tac Toe\").displayKotlinMessage(view) }\n```", "```kt\nfab.setOnClickListener {startNewGame(false)}\n```"]