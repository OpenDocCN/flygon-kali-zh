["```kt\nfun isOnline(): Boolean {\n    val connMgr = getSystemService(Context.CONNECTIVITY_SERVICE) as  \n    ConnectivityManager\n    val networkInfo = connMgr.activeNetworkInfo\n    return networkInfo != null && networkInfo.isConnected\n}\n```", "```kt\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n```", "```kt\n  <intent-filter>\n   <action android:name=\"android.intent.action.MANAGE_NETWORK_USAGE\" />\n   <category android:name=\"android.intent.category.DEFAULT\" />\n  </intent-filter>\n```", "```kt\n*<?*xml version=\"1.0\" encoding=\"utf-8\"*?>\n* <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     tools:context=\"com.natarajan.imageloader.MainActivity\">\n\n     <TextView\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:text=\"Hello World!\"\n         app:layout_constraintBottom_toBottomOf=\"parent\"\n app:layout_constraintLeft_toLeftOf=\"parent\"\n         app:layout_constraintRight_toRightOf=\"parent\"\n         app:layout_constraintTop_toTopOf=\"parent\" />\n\n </android.support.constraint.ConstraintLayout>\n```", "```kt\n*<?*xml version=\"1.0\" encoding=\"utf-8\"*?>\n* <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     tools:context=\"com.natarajan.imageloader.MainActivity\">\n\n     <ImageView\n         android:id=\"@+id/imageView\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         app:srcCompat=\"@mipmap/ic_launcher\"\n         app:layout_constraintBottom_toBottomOf=\"parent\"\n         app:layout_constraintLeft_toLeftOf=\"parent\"\n         app:layout_constraintRight_toRightOf=\"parent\"\n         app:layout_constraintTop_toTopOf=\"parent\"\n         tools:layout_editor_absoluteX=\"139dp\"\n         tools:layout_editor_absoluteY=\"219dp\" /> \n </android.support.constraint.ConstraintLayout>\n```", "```kt\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    implementation\"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version\"\n    implementation 'com.android.support:appcompat-v7:26.1.0'\n    implementation 'com.android.support.constraint:constraint-layout:1.1.0'\n    implementation 'com.squareup.picasso:picasso:2.71828'\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'com.android.support.test:runner:1.0.1'\n    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1' }\n```", "```kt\npackage com.natarajan.imageloader\n\n import android.support.v7.app.AppCompatActivity\n import android.os.Bundle\n import kotlinx.android.synthetic.main.activity_main.*\n\n class MainActivity : AppCompatActivity() {\n\n     override fun onCreate(savedInstanceState: Bundle?) {\n         super.onCreate(savedInstanceState)\n         setContentView(R.layout.activity_main)\n     }\n }\n```", "```kt\nimport android.widget.ImageView\nimport com.squareup.picasso.Picasso\n```", "```kt\nPicasso.get().load(\"http://i.imgur.com/DvpvklR.png\").into(imageView);\n```", "```kt\npackage com.natarajan.imageloader \nimport android.support.v7.app.AppCompatActivity\nimport android.os.Bundle\nimport android.widget.ImageView\nimport com.squareup.picasso.Picasso\nimport kotlinx.android.synthetic.main.activity_main.*\n\n class MainActivity : AppCompatActivity() {\n\n override fun onCreate(savedInstanceState: Bundle?) {\n         super.onCreate(savedInstanceState)\n         setContentView(R.layout.*activity_main*)\n        Picasso.get().load(\"http://i.imgur.com/DvpvklR.png\").into(imageView);\n    }\n }\n```", "```kt\n    <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\n```", "```kt\n*<?*xml version=\"1.0\" encoding=\"utf-8\"*?>\n* <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"com.natarajan.imageloader\">\n\n     <uses-permission android:name=\"android.permission.INTERNET\">\n    </uses-permission>\n\n     <application\n         android:allowBackup=\"true\"\n         android:icon=\"@mipmap/ic_launcher\"\n         android:label=\"@string/app_name\" android:roundIcon=\"@mipmap/ic_launcher_round\"\n         android:supportsRtl=\"true\"\n         android:theme=\"@style/AppTheme\">\n         <activity android:name=\".MainActivity\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n                  <category  \n android:name=\"android.intent.category.LAUNCHER\" />\n             </intent-filter>\n         </activity>\n     </application>\n  </manifest>\n```", "```kt\napply plugin: 'kotlin-kapt' implementation 'com.github.bumptech.glide:glide:4.7.1' kapt \"com.github.bumptech.glide:compiler:4.7.1\" \n```", "```kt\ndependencies {\n     implementation fileTree(dir: 'libs', include: ['*.jar'])\n     implementation\"org.jetbrains.kotlin:kotlin-stdlib-\n     jre7:$kotlin_version\"\n     implementation 'com.android.support:appcompat-v7:27.1.1'\n     implementation 'com.android.support.constraint:constraint-\n     layout:1.1.0'\n     implementation 'com.squareup.picasso:picasso:2.71828'\n     implementation 'com.github.bumptech.glide:glide:4.7.1'\n     kapt \"com.github.bumptech.glide:compiler:4.7.1\" \n testImplementation 'junit:junit:4.12'\n     androidTestImplementation 'com.android.support.test:runner:1.0.1'\n     androidTestImplementation \n 'com.android.support.test.espresso:espresso-core:3.0.1' }\n```", "```kt\nallprojects {\n     repositories {\n         google()\n         mavenCentral()\n         jcenter()\n     }\n```", "```kt\n-keep public class * implements com.bumptech.glide.module.GlideModule\n -keep public class * extends com.bumptech.glide.module.AppGlideModule\n -keep public enum com.bumptech.glide.load.ImageHeaderParser$** {\n   **[] $VALUES;\n   public *;\n }\n# for DexGuard only -keepresourcexmlelements manifest/application/meta-data@value=GlideModule\n```", "```kt\npackage com.natarajan.imageloader\n*/**\n  ** Created by admin on 4/14/2018. **/* import com.bumptech.glide.annotation.GlideModule\n import com.bumptech.glide.module.AppGlideModule\n\n@GlideModule\n class ImageLoaderGlideModule : AppGlideModule()\n```", "```kt\nGlideApp.with(this).load(\"URL\").into(imageView);\n```", "```kt\npackage com.natarajan.imageloader\n\n import android.support.v7.app.AppCompatActivity\n import android.os.Bundle\n import kotlinx.android.synthetic.main.activity_main.*\n\n class MainActivity : AppCompatActivity() {\n\n override fun onCreate(savedInstanceState: Bundle?) {\n         super.onCreate(savedInstanceState)\n         setContentView(R.layout.activity_main)\n\n     if(imageView != null){\n\n   GlideApp.with(this).load(\"http://goo.gl/gEgYUd\").into(imageView);\n       }\n    }\n }\n\n```"]