["```js\nvar x = 1 + 2 * 3;\n```", "```js\nvar x = 1 + 6;\n```", "```js\nvar x = 7;\n```", "```js\nlet limitYear = 1999;\n\nconst isOldEnough = birthYear => birthYear <= limitYear;\n\nconsole.log(isOldEnough(1960)); // true\nconsole.log(isOldEnough(2001)); // false\n```", "```js\nconst PI = 3.14159265358979;\nconst circleArea = r => PI * Math.pow(r, 2); // or PI * r ** 2\n```", "```js\nconst roundFix = (function() {\n let accum = 0;\n return n => {\n // *reals get rounded up or down*\n // *depending on the sign of accum*\n let nRounded = accum > 0 ? Math.ceil(n) : Math.floor(n);\n console.log(\"accum\", accum.toFixed(5), \" result\", nRounded);\n accum += n - nRounded;\n return nRounded;\n };\n})();\n```", "```js\nroundFix(3.14159); // *accum  0.00000    result 3*\nroundFix(2.71828); // *accum  0.14159    result 3*\nroundFix(2.71828); // *accum -0.14013    result 2*\nroundFix(3.14159); // *accum  0.57815    result 4*\nroundFix(2.71828); // *accum -0.28026    result 2*\nroundFix(2.71828); // *accum  0.43802    result 3*\nroundFix(2.71828); // *accum  0.15630    result 3*\n```", "```js\nconst maxStrings = a => a.sort().pop();\n\nlet countries = [\"Argentina\", \"Uruguay\", \"Brasil\", \"Paraguay\"];\nconsole.log(maxStrings(countries)); // ***\"Uruguay\"***\n```", "```js\nconsole.log(countries);  // ***[\"Argentina\", \"Brasil\", \"Paraguay\"]***\n```", "```js\nconst maxStrings2 = a => [...a].sort().pop();\n\nlet countries = [\"Argentina\", \"Uruguay\", \"Brasil\", \"Paraguay\"];\nconsole.log(maxStrings2(countries)); *// \"Uruguay\"*\nconsole.log(countries); // *[\"Argentina\", \"Uruguay\", \"Brasil\", \"Paraguay\"]*\n```", "```js\nconst getRandomLetter = () => {\n const min = \"A\".charCodeAt();\n const max = \"Z\".charCodeAt();\n return String.fromCharCode(\n Math.floor(Math.random() * (1 + max - min)) + min\n );\n};\n```", "```js\nconst getRandomFileName = (fileExtension = \"\") => {\n const NAME_LENGTH = 12;\n let namePart = new Array(NAME_LENGTH);\n for (let i = 0; i < NAME_LENGTH; i++) {\n namePart[i] = getRandomLetter();\n }\n return namePart.join(\"\") + fileExtension;\n};\n```", "```js\nconsole.log(getRandomFileName(\".pdf\"));  // *\"SVHSSKHXPQKG.pdf\"*\nconsole.log(getRandomFileName(\".pdf\"));  // *\"DCHKTMNWFHYZ.pdf\"*\nconsole.log(getRandomFileName(\".pdf\"));  // *\"GBTEFTVVHADO.pdf\"*\nconsole.log(getRandomFileName(\".pdf\"));  // *\"ATCBVUOSXLXW.pdf\"*\nconsole.log(getRandomFileName(\".pdf\"));  // *\"OIFADZKKNVAH.pdf\"*\n```", "```js\nconst isOldEnough2 = birthYear =>\n birthYear <= new Date().getFullYear() - 18;\n\nconsole.log(isOldEnough2(1960)); // true\nconsole.log(isOldEnough2(2001)); // false\n```", "```js\nvar mult = 1;\nconst f = x => {\n mult = -mult;\n return x * mult;\n};\n\nconsole.log(f(2) + f(5)); //  3\nconsole.log(f(5) + f(2)); // -3\n```", "```js\nconst fib = (n) => {\n if (n == 0) {\n return 0;\n } else if (n == 1) {\n return 1;\n } else {\n return fib(n - 2) + fib(n - 1);\n }\n}\n//\nconsole.log(fib(10)); // *55, a bit slowly*\n```", "```js\nlet cache = [];\nconst fib2 = (n) => {\n if (cache[n] == undefined) {\n if (n == 0) {\n cache[0] = 0;\n } else if (n == 1) {\n cache[1] = 1;\n } else {\n cache[n] = fib2(n - 2) + fib2(n - 1);\n }\n }\n    return cache[n];\n}\n\nconsole.log(fib2(10)); // *55, as before, but more quickly!*\n```", "```js\nconst isOldEnough3 = (currentYear, birthYear) => birthYear <= currentYear-18;\n```", "```js\nconst roundFix1 = (function() {\n let accum = 0;\n return n => {\n let nRounded = accum > 0 ? Math.ceil(n) : Math.floor(n);\n accum += n - nRounded;\n return nRounded;\n };\n})();\n```", "```js\nconst roundFix2 = (a, n) => {\n let r = a > 0 ? Math.ceil(n) : Math.floor(n);\n a += n - r;\n return {a, r};\n};\n```", "```js\nlet accum = 0;\n\n// *...some other code...*\n\nlet {a, r} = roundFix2(accum, 3.1415);\naccum = a;\nconsole.log(accum, r); // 0.1415 3\n```", "```js\nconst getRandomFileName = (fileExtension = \"\") => {\n ...\n for (let i = 0; i < NAME_LENGTH; i++) {\n namePart[i] = getRandomLetter();\n }\n ...\n};\n```", "```js\nconst getRandomFileName2 = (fileExtension = \"\", randomLetterFunc) => {\n const NAME_LENGTH = 12;\n let namePart = new Array(NAME_LENGTH);\n for (let i = 0; i < NAME_LENGTH; i++) {\n namePart[i] = randomLetterFunc();\n }\n return namePart.join(\"\") + fileExtension;\n};\n```", "```js\nlet fn = getRandomFileName2(\".pdf\", getRandomLetter);\n```", "```js\nconst getRandomFileName2 = (\n fileExtension = \"\",\n randomLetterFunc = getRandomLetter\n) => {\n ...\n};\n```", "```js\nconst getRandomLetter = (getRandomInt = Math.random) => {\n const min = \"A\".charCodeAt();\n const max = \"Z\".charCodeAt();\n return String.fromCharCode(\n Math.floor(getRandomInt() * (1 + max - min)) + min\n );\n};\n```", "```js\nconst sum3 = (x, y, z) => x + y + z;\n```", "```js\nlet x = {};\nx.valueOf = Math.random;\n\nlet y = 1;\nlet z = 2;\n\nconsole.log(sum3(x, y, z)); // 3.2034400919849431\nconsole.log(sum3(x, y, z)); // 3.8537045249277906\nconsole.log(sum3(x, y, z)); // 3.0833258308458734\n```", "```js\ndescribe(\"isOldEnough\", function() {\n it(\"is false for people younger than 18\", () => {\n expect(isOldEnough3(1978, 1963)).toBe(false);\n });\n\n it(\"is true for people older than 18\", () => {\n expect(isOldEnough3(1988, 1965)).toBe(true);\n });\n\n it(\"is true for people exactly 18\", () => {\n expect(isOldEnough3(1998, 1980)).toBe(true);\n });\n});\n```", "```js\ndescribe(\"circle area\", function() {\n it(\"is zero for radius 0\", () => {\n let area = circleArea(0);\n expect(area).toBe(0);\n });\n\n it(\"is PI for radius 1\", () => {\n let area = circleArea(1);\n expect(area).toBeCloseTo(Math.PI);\n });\n\n it(\"is approximately 12.5664 for radius 2\", () => {\n let area = circleArea(2);\n expect(area).toBeCloseTo(12.5664);\n });\n});\n```", "```js\nconst roundFix2 = (a, n) => {\n let r = a > 0 ? Math.ceil(n) : Math.floor(n);\n a += n - r;\n return {a, r};\n};\n```", "```js\ndescribe(\"roundFix2\", function() {\n it(\"should round 3.14159 to 3 if differences are 0\", () => {\n let {a, r} = roundFix2(0.0, 3.14159);\n expect(a).toBeCloseTo(0.14159);\n expect(r).toBe(3);\n });\n\n it(\"should round 2.71828 to 3 if differences are 0.14159\", () => {\n let {a, r} = roundFix2(0.14159, 2.71828);\n expect(a).toBeCloseTo(-0.14013);\n expect(r).toBe(3);\n });\n\n it(\"should round 2.71828 to 2 if differences are -0.14013\", () => {\n let {a, r} = roundFix2(-0.14013, 2.71828);\n expect(a).toBeCloseTo(0.57815);\n expect(r).toBe(2);\n });\n\n it(\"should round 3.14159 to 4 if differences are 0.57815\", () => {\n let {a, r} = roundFix2(0.57815, 3.14159);\n expect(a).toBeCloseTo(-0.28026);\n expect(r).toBe(4);\n });\n});\n```", "```js\ndescribe(\"getRandomLetter2\", function() {\n it(\"returns A for values close to 0\", () => {\n let letterSmall = getRandomLetter2(() => 0.0001);\n expect(letterSmall).toBe(\"A\");\n });\n\n it(\"returns Z for values close to 1\", () => {\n let letterBig = getRandomLetter2(() => 0.99999);\n expect(letterBig).toBe(\"Z\");\n });\n\n it(\"returns a middle letter for values around 0.5\", () => {\n let letterMiddle = getRandomLetter2(() => 0.49384712);\n expect(letterMiddle).toBeGreaterThan(\"G\");\n expect(letterMiddle).toBeLessThan(\"S\");\n });\n\n it(\"returns an ascending sequence of letters for ascending values\", () => {\n let a = [0.09, 0.22, 0.6];\n const f = () => a.shift(); // impure!!\n\n let letter1 = getRandomLetter2(f);\n let letter2 = getRandomLetter2(f);\n let letter3 = getRandomLetter2(f);\n expect(letter1).toBeLessThan(letter2);\n expect(letter2).toBeLessThan(letter3);\n });\n});\n```", "```js\ndescribe(\"getRandomFileName\", function() {\n let a = [];\n let f = () => a.shift();\n\n beforeEach(() => {\n a = \"SORTOFRANDOM\".split(\"\");\n });\n\n it(\"uses the given letters for the file name\", () => {\n let fileName = getRandomFileName(\"\", f);\n expect(fileName.startsWith(\"SORTOFRANDOM\")).toBe(true);\n });\n\n it(\"includes the right extension, and has the right length\", () => {\n let fileName = getRandomFileName(\".pdf\", f);\n expect(fileName.endsWith(\".pdf\")).toBe(true);\n expect(fileName.length).toBe(16);\n });\n});\n```", "```js\ndescribe(\"getRandomLetter\", function() {\n it(\"returns A for values close to 0\", () => {\n spyOn(Math, \"random\").and.returnValue(0.0001);\n let letterSmall = getRandomLetter();\n expect(Math.random).toHaveBeenCalled();\n expect(letterSmall).toBe(\"A\");\n });\n\n it(\"returns Z for values close to 1\", () => {\n spyOn(Math, \"random\").and.returnValues(0.98, 0.999);\n let letterBig1 = getRandomLetter();\n let letterBig2 = getRandomLetter();\n expect(Math.random).toHaveBeenCalledTimes(2);\n expect(letterBig1).toBe(\"Z\");\n expect(letterBig2).toBe(\"Z\");\n });\n\n it(\"returns a middle letter for values around 0.5\", () => {\n spyOn(Math, \"random\").and.returnValue(0.49384712);\n let letterMiddle = getRandomLetter();\n expect(Math.random.calls.count()).toEqual(1);\n expect(letterMiddle).toBeGreaterThan(\"G\");\n expect(letterMiddle).toBeLessThan(\"S\");\n });\n});\n```", "```js\ndescribe(\"getRandomFileName, with an impure getRandomLetter function\", function() {\n it(\"generates 12 letter long names\", () => {\n for (let i = 0; i < 100; i++) {\n expect(getRandomFileName().length).toBe(12);\n }\n });\n\n it(\"generates names with letters A to Z, only\", () => {\n for (let i = 0; i < 100; i++) {\n let n = getRandomFileName();\n for (j = 0; j < n.length; n++) {\n expect(n[j] >= \"A\" && n[j] <= \"Z\").toBe(true);\n }\n }\n });\n\n it(\"includes the right extension if provided\", () => {\n let fileName1 = getRandomFileName(\".pdf\");\n expect(fileName1.length).toBe(16);\n expect(fileName1.endsWith(\".pdf\")).toBe(true);\n });\n\n it(\"doesn't include any extension if not provided\", () => {\n let fileName2 = getRandomFileName();\n expect(fileName2.length).toBe(12);\n expect(fileName2.includes(\".\")).toBe(false);\n });\n});\n```", "```js\nconst shuffle = arr => {\n const len = arr.length;\n for (let i = 0; i < len - 1; i++) {\n let r = Math.floor(Math.random() * (len - i));\n [arr[i], arr[i + r]] = [arr[i + r], arr[i]];\n }\n return arr;\n};\n\nvar xxx = [11, 22, 33, 44, 55, 66, 77, 88];\nconsole.log(shuffle(xxx));\n// ***[55, 77, 88, 44, 33, 11, 66, 22]***\n```", "```js\ndescribe(\"shuffleTest\", function() {\n it(\"shouldn't change the array length\", () => {\n let a = [22, 9, 60, 12, 4, 56];\n shuffle(a);\n expect(a.length).toBe(6);\n });\n\n it(\"shouldn't change the values\", () => {\n let a = [22, 9, 60, 12, 4, 56];\n shuffle(a);\n expect(a.includes(22)).toBe(true);\n expect(a.includes(9)).toBe(true);\n expect(a.includes(60)).toBe(true);\n expect(a.includes(12)).toBe(true);\n expect(a.includes(4)).toBe(true);\n expect(a.includes(56)).toBe(true);\n });\n});\n```", "```js\n const fib2 = n => (n < 2 ? n : fib2(n - 2) + fib2(n - 1));\n```", "```js\n const fib4 = (n, a = 0, b = 1) => (n === 0 ? a : fib4(n - 1, b, a \n + b));\n```"]