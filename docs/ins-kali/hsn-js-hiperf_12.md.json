["```js\nmodule.exports = {\n    input: \"./main.js\",\n    output: {\n        file: \"./dist/build.js\",\n        format: \"esm\"\n    }\n}\n```", "```js\nexport default class LRUCache {\n    constructor(num=10) {\n        this.numEntries = num;\n        this.cache = new Map();\n    }\n}\n```", "```js\n> npm install -D rollup-plugin-terser\n```", "```js\nimport { terser } from 'rollup-plugin-terser';\nmodule.exports = {\n    input: \"./main.js\",\n    output: {\n        file: \"./dist/build.js\",\n        format: \"esm\",\n        plugins: [terser()]\n    }\n}\n```", "```js\n$main-color: \"#003A21\";\n$text-color: \"#efefef\";\n/* header styles */\nheader {\n    // removed for brevity\n    background : $main-color;\n    color      : $text-color;\n    h1 {\n        float : left;\n    }\n    nav {\n        float : right;\n    }\n}\n/* Footer styles */\nfooter {\n    // removed for brevity\n    h2 {\n        float : left;\n    }\n    a {\n        float : right;\n    }\n}\n```", "```js\nimport sass from 'rollup-plugin-sass';\nmodule.exports = {\n    input: \"./main-sass.js\",\n    output: {\n        file: \"./template/css/main.css\",\n        format: \"cjs\"\n    },\n    plugins: [\n        sass()\n    ]\n}\n```", "```js\nimport main_sass from './template/stylesheets/main.scss'\nexport default main_sass;\n```", "```js\n> rollup --config rollup.sass.config.js \n```", "```js\n\"scripts\": {\n        \"start\": \"node --experimental-modules main.js\",\n        \"build\": \"rollup --config ./build/rollup.config.js && rollup --config ./build/rollup.sass.config.js\",\n}\n```", "```js\n\"watch\": \"rollup --config ./build/rollup.config.js --watch\"\n```", "```js\n\"start\": \"node --experimental-modules dist/build.js\"\n```", "```js\n\"config\": {\n    \"port\": 50000,\n    \"key\": \"../selfsignedkey.pem\",\n    \"certificate\": \"../selfsignedcertificate.pem\",\n    \"template\": \"../template\",\n    \"bodyfiles\": \"../publish\",\n    \"development\": true\n}\n```", "```js\n> rf -rf .git\n```", "```js\n> git init\n> git add .\n> git commit -m \"first commit\"\n> git remote add origin \n  https://github.com/<your_username>/<the_repository>.git\n> git push -u origin master\n```", "```js\nversion: 2\njobs:\n  build:\n    docker:\n      - image: circleci/node:12.13\n    working_directory: ~/repo\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-{{ checksum \"package.json\" }}\n            - v1-dependencies-\n      - run: npm install\n      - save_cache:\n          paths:\n            - node_modules\n          key: v1-dependencies-{{ checksum \"package.json\" }}\n```", "```js\n- run: npm install\n- run: npm run build\n```", "```js\n> git add .circleci/config.yml\n```", "```js\n> git commit -m \"changed configuration\"\n```", "```js\n> git push\n```", "```js\n\"devDependencies\": {\n    \"rollup-plugin-sass\": \"^1.2.2\",\n    \"rollup-plugin-terser\": \"^5.1.2\",\n    \"rollup-plugin-uglify\": \"^6.0.3\",\n    \"rollup\": \"^1.27.5\"\n}\n```", "```js\nversion: 2.1\norbs:\n  snyk: snyk/snyk@0.0.8\njobs:  build:\n    docker:\n      - image: circleci/node:12.13\n    working_directory: ~/repo\n    steps:\n      - checkout\n      - run: npm install   \n      - snyk/scan     \n      - run: npm run build\n```", "```js\nSNYK_TOKEN : <Your_API_Key>\n```", "```js\nversion : 2.1\norbs:\n    snyk: snyk/snyk@0.0.8\njobs:\n  build:\n    docker:\n      - image: circleci/node:12.13\n    working_directory: ~/repo\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-{{ checksum \"package.json\" }}\n            - v1-dependencies-\n      - run: npm install\n      - snyk/scan     \n      - run: npm run build\n      - save_cache:\n          paths:\n            - node_modules\n          key: v1-dependencies-{{ checksum \"package.json\" }}\nworkflows:\n  version: 2\n  build_and_deploy:\n    jobs:\n      - build:\n          context: build\n```", "```js\nversion : 2.1\norbs:\n  heroku: circleci/heroku@0.0.10\njobs:\n  deploy:\n    executor: heroku/default\n    steps:\n      - checkout\n      - heroku/install\n      - heroku/deploy-via-git:\n          only-branch: master\nworkflows:\n version: 2\n build_and_deploy:\n jobs:\n   - build:\n       context: build\n   - deploy\n       context: deploy\n       requires:\n         - build\n\n```", "```js\nsteps:\n  - add_ssh_keys:\n  fingerprints:\n - \"<fingerprint in SSH settings>\"\n```", "```js\n- run: git push\n```"]