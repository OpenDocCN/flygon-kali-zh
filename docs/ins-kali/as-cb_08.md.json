["```kt\n    keytool -exportcert -alias androiddebugkey -keystore ~/.android/debug.keystore  -list \u2013v\n\n    ```", "```kt\n    compile 'com.google.android.gms:play-services:7.5.0'\n    ```", "```kt\n    <meta-data \n     android:name=\"com.google.android.gms.games.APP_ID\"android:value=\"@string/app_id\" />\n    ```", "```kt\n    <resources><string name=\"app_name\">GetItRight</string><string name=\"app_id\">your app id</string>\n    ```", "```kt\n    <string name=\"incorrect_answer\">That is incorrect</string><string name=\"correct_answer\">That is the correct \n     answer!</string><string name=\"leader_board\">LEADER BOARD</string>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout xmlns:android=\n       \"http://schemas.android.com/apk/res/android\"android:orientation=\"vertical\"  \n        android:layout_width=\"match_parent\"android:padding=\"16dp\"\n        android:background=\"@android:color/holo_blue_dark\"\n        android:layout_height=\"match_parent\">\n        <ScrollView\n          android:layout_width=\"match_parent\"\n          android:layout_height=\"wrap_content\"><LinearLayout\n             android:orientation=\"vertical\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\">\n              <ImageView\n                android:id=\"@+id/image\"android:src= \n                 \"@android:drawable/ic_popup_sync\"android:layout_width=\"match_parent\"android:layout_height=\"300px\" />\n              <TextView\n                android:id=\"@+id/text\"android:textColor=\"@android:color/white\"android:text=\"Question\"android:textSize=\"24sp\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" />\n              <LinearLayout\n                android:orientation=\"vertical\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\">\n              <Button\n                android:id=\"@+id/button_1\"            \n                android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\"android:gravity=\"center_vertical|left\" />\n              <Button\n                android:id=\"@+id/button_2\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\"                     \n                android:gravity=\"center_vertical|left\" />\n              <Button\n               android:id=\"@+id/button_3\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\"android:gravity=\"center_vertical|left\" />\n              <Button\n               android:id=\"@+id/button_4\"           \n               android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\"android:gravity=\"center_vertical|left\" />\n              <Button\n               android:id=\"@+id/button_test\"android:text=\"@string/leader_board\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\"android:gravity=\"center_vertical|left\" />\n              </LinearLayout>\n            </LinearLayout>\n        </ScrollView>\n    </LinearLayout>\n    ```", "```kt\n    setContentView(R.layout.activity_google_play_services); \n    findViewById(R.id.button_1).setOnClickListener(this);\n    findViewById(R.id.button_2).setOnClickListener(this);\n    findViewById(R.id.button_3).setOnClickListener(this);\n    findViewById(R.id.button_4).setOnClickListener(this); \n    findViewById(R.id.button_test).setOnClickListener(this);\n    ```", "```kt\n    public class GooglePlayServicesActivity extends Activity implements GoogleApiClient.ConnectionCallbacks,GoogleApiClient.OnConnectionFailedListener, \n       View.OnClickListener { \n    @Override\n    public void onClick(View v) {\n    }\n    ```", "```kt\n    private int REQUEST_LEADERBOARD = 1;\n    private String LEADERBOARD_ID = \"<your leaderboard id>\";\n    ```", "```kt\n    @Override\n    public void onClick(View v) {\n        switch (v.getId()){\n            case R.id.button_1:\n            case R.id.button_2:\n            case R.id.button_3:\n            case R.id.button_4: \n                break;\n            case R.id.button_test:\n             startActivityForResult( \n              Games.Leaderboards.getLeaderboardIntent(  \n               mGoogleApiClient, LEADERBOARD_ID),  \n                REQUEST_LEADERBOARD);\n             break;\n        }\n    }\n    ```", "```kt\n    public class Answer {\n        private String mId;\n        private String mText;\n        public String getId() {\n            return mId;\n        }\n        public String getText() {\n           return mText;\n        }\n        public Answer (String id, String text) {\n            mId = id;\n            mText = text;\n        }\n    }\n    ```", "```kt\n    public class Question {\n        private String mText;\n        private String mUri;\n        private String mCorrectAnswer;\n        private String mAnswer;\n        private ArrayList<Answer> mPossibleAnswers;\n        public String getText(){\n            return mText;\n        }\n        public String getUri(){\n            return mUri;}\n        public String getCorrectAnswer(){\n            return mCorrectAnswer;\n        }\n        public String getAnswer(){\n            return mAnswer;\n        }\n        public Question (String text, String uri, String \n         correctAnswer){\n            mText = text;\n            mUri = uri;\n            mCorrectAnswer = correctAnswer;\n        }\n        public Answer addAnswer(String id, String text){\n            if (mPossibleAnswers==null){\n                mPossibleAnswers = new ArrayList<Answer>();\n            }\n            Answer answer = new Answer(id,text);\n            mPossibleAnswers.add(answer);\n            return answer;\n        }\n        public ArrayList<Answer> getPossibleAnswers(){\n            return mPossibleAnswers;\n        }\n    }\n    ```", "```kt\n    public class Quiz {\n        private ArrayList<Question> mQuestions;\n        public ArrayList<Question> getQuestions(){\n            return mQuestions;\n        }\n        public Question addQuestion(String text, String uri, String \n         correctAnswer){\n            if (mQuestions==null){\n                mQuestions = new ArrayList<Question>();\n            }\n            Question question = new Question( \n             text,uri,correctAnswer);\n            mQuestions.add(question);\n            return question;\n        }\n    }\n    ```", "```kt\n    public class QuizRepository {\n        public Quiz getQuiz(){\n          Quiz quiz = new Quiz();\n          Question q1 = quiz.addQuestion(\n          \"1\\. What is the largest city in the world?\",  \n           \"http://cdn.acidcow.com/pics/20100923/\n            skylines_of_large_cities_05.jpg\" , \"tokyo\");\n            q1.addAnswer(\"delhi\" , \"Delhi, India\");\n            q1.addAnswer(\"tokyo\" , \"Tokyo, Japan\");\n            q1.addAnswer(\"saopaulo\" , \"Sao Paulo, Brazil\");\n            q1.addAnswer(\"nyc\" , \"New York, USA\");\n            Question q2 = quiz.addQuestion(\"2\\. What is the largest animal in the world?\",\"http://www.onekind.org/uploads/a-z/az_aardvark.jpg\" , \"blue_whale\");\n            q2.addAnswer(\"african_elephant\" , \"African Elephant\");\n           q2.addAnswer(\"brown_bear\" , \"Brown Bear\");\n            q2.addAnswer(\"giraffe\" , \"Giraffe\");\n            q2.addAnswer(\"blue_whale\" , \"Blue whale\");\n            Question q3 = quiz.addQuestion(\"3\\. What is the highest mountain in the world?\",\"http://images.summitpost.org/medium/ 815426.jpg\", \"mount_everest\");\n            q3.addAnswer(\"mont_blanc\" , \"Mont Blanc\");\n            q3.addAnswer(\"pico_bolivar\" , \"Pico Bol\u00edvar\");\n            q3.addAnswer(\"mount_everest\" , \"Mount Everest\");\n            q3.addAnswer(\"kilimanjaro\" , \"Mount Kilimanjaro\");\n            return quiz;\n        }\n    }\n    ```", "```kt\n    private Quiz mQuiz;\n    private int mScore;\n    private int mQuestionIndex=0;\n    ```", "```kt\n    private void newGame(){\n        mQuiz = new QuizRepository().getQuiz();\n        mScore = 0;\n        mQuestionIndex = 0;\n        displayQuestion(mQuiz.getQuestions().get(mQuestionIndex));\n    private void displayQuestion(Question question){ \n        TextView questionText = (TextView)findViewById(R.id.text); \n        displayImage(question); \n        questionText.setText(question.getText());\n        ArrayList<Answer> answers = question.getPossibleAnswers();\n        setPossibleAnswer(findViewById(R.id.button_1), \n         answers.get(0));\n        setPossibleAnswer(findViewById(R.id.button_2), \n         answers.get(1));\n        setPossibleAnswer(findViewById(R.id.button_3), answers.get(2));\n        setPossibleAnswer(findViewById(R.id.button_4), answers.get(3));\n    }\n    private void setPossibleAnswer(View v, Answer answer){\n        if (v instanceof Button) {\n            ((Button) v).setText(answer.getText());\n            v.setTag(answer);\n        }\n    }\n    private void displayImage(final Question question){ \n        new Thread(new Runnable() {\n            public void run(){\n                try {\n                  URL url = new URL(question.getUri());\n                  final Bitmap image = BitmapFactory.decodeStream(url.openConnection().getInputStream());\n                   runOnUiThread(new Runnable() {\n                        @Override\n                        public void run() {\n                            ImageView imageView = (ImageView) \n                              findViewById(R.id.image);\n                            imageView.setImageBitmap(image);\n                        }\n                    });\n                }\n                catch (Exception ex){\n                    Log.d(getClass().toString(), ex.getMessage());\n                }\n            }\n        }).start();\n    }\n    ```", "```kt\n    newGame();\n    ```", "```kt\n    @Override\n    public void onClick(View v) {\n        switch (v.getId()){\n            case R.id.button_1:\n            case R.id.button_2:\n            case R.id.button_3:\n            case R.id.button_4:\n                checkAnswer(v);\n                break;\n            case R.id.button_test: startActivityForResult( \n             Games.Leaderboards.getLeaderboardIntent(\n              mGoogleApiClient, LEADERBOARD_ID), REQUEST_LEADERBOARD);\n             break;\n    }\n\n       }\n    ```", "```kt\n    private void checkAnswer(View v){ \n        if (v instanceof Button){\n            Answer answer = (Answer)((Button)v).getTag();\n            if (mQuiz.getQuestions().get(mQuestionIndex).  \n             getCorrectAnswer().equalsIgnoreCase( \n              answer.getId())){\n                onGoodAnswer();\n            }\n            else{\n                onWrongAnswer();\n            }\n        }\n    }\n    private void onWrongAnswer(){\n        Toast.makeText(this, getString( \n         R.string.incorrect_answer), Toast.LENGTH_SHORT).show();\n        startActivityForResult(\n         Games.Leaderboards.getLeaderboardIntent( \n         mGoogleApiClient, LEADERBOARD_ID), \n          REQUEST_LEADERBOARD);\n    }\n    private void onGoodAnswer(){\n        mScore+= 1000;\n        Games.Leaderboards.submitScore(mGoogleApiClient, \n         LEADERBOARD_ID, mScore);\n        Toast.makeText(this, getString(R.string.correct_answer), \n         Toast.LENGTH_SHORT).show();\n        mQuestionIndex++;\n        if (mQuestionIndex < mQuiz.getQuestions().size()){\n            displayQuestion(mQuiz.getQuestions().get( \n             mQuestionIndex));\n        }\n        else{\n            startActivityForResult( \n             Games.Leaderboards.getLeaderboardIntent( \n              mGoogleApiClient, LEADERBOARD_ID), \n               REQUEST_LEADERBOARD);\n    \t}\n    }\n    ```", "```kt\n    compile 'com.android.support:support-annotations:22.2.0'\n    ```", "```kt\n    private void checkAnswer(@NonNull View v){\n    ```", "```kt\n    @Nullable\n    public ArrayList<Answer> getPossibleAnswers(){\n        return mPossibleAnswers;\n    }\n    ```", "```kt\n    Method invocation 'answers.get(0)' may produce  'java.lang.NullPointerException' \n    ```", "```kt\n    testCompile 'org.robolectric:robolectric:3.0'\n    ```", "```kt\n    @Config(constants = BuildConfig.class, sdk = 21)\n    @RunWith(RobolectricGradleTestRunner.class)\n    public class QuizRepositoryTest {\n        private QuizRepository mRepository; \n        @Beforepublic void setup() throws Exception {\n           mRepository = new QuizRepository();\n            assertNotNull(\"QuizRepository is not \n            instantiated\", mRepository);\n        }\n        @Test\n        public void quizHasQuestions() throws Exception {\n            Quiz quiz = mRepository.getQuiz();\n            ArrayList<Question> questions = quiz.getQuestions();\n            assertNotNull(\"quiz could not be created\", quiz);\n\n            assertNotNull(\"quiz contains no questions\",       \n             questions);\n            assertTrue(\"quiz contains no questions\", \n             questions.size()>0);\n        }\n        @Test\n        public void quizHasSufficientQuestions() throws \n         Exception {\n            Quiz quiz = mRepository.getQuiz();\n            ArrayList<Question> questions = quiz.getQuestions();\n            assertNotNull(\"quiz could not be created\", quiz);\n            assertNotNull(\"quiz contains no questions\", \n             questions);\n            assertTrue(\"quiz contains insufficient questions\", questions.size()>=10);\n        }\n    }\n    ```", "```kt\n    @Config(constants = BuildConfig.class, sdk = 21)\n    @RunWith(RobolectricGradleTestRunner.class)\n    public class GooglePlayServicesActivityTest {\n        private GooglePlayServicesActivity activity;\n        @Before\n        public void setup() throws Exception {\n           activity = Robolectric.setupActivity( \n            GooglePlayServicesActivity.class);\n            assertNotNull(\"GooglePlayServicesActivity is not instantiated\", activity);\n        }\n        @Test\n        public void testButtonExistsAndHasCorrectText() throwsException {\n            Button testButton = (Button) activity.findViewById( \n             R.id.button_test); \n            assertNotNull(\"testButton could not be found\",testButton); \n    }\n    ```", "```kt\n@Test\npublic void testLogin() {\n   onView(withId(R.id.login)).perform(\n    typeText(\"mike@test.com\"));\n   onView(withId(R.id.greet_button)).perform(click());\n}\n```", "```kt\nScenario: Login\n  Given I am on the Login Screen\n  Then I touch the \"Email\" input field\n  Then I use the keyboard and type \"test@packt.com\"\n  Then I touch the \"Password\" input field\n  Then I use the keyboard and type \"verysecretpassword\"\n  Then I touch \"LOG IN\"\n  Then I should see \"Hello world\"\n```", "```kt\n    <TextView\n        android:id=\"@+id/text\"android:textColor=\"@android:color/white\"android:textSize=\"24sp\"android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" />\n    ```", "```kt\n    Method invocation 'answers.get(0)' may produce 'java.lang.NullPointerException'\n    ```", "```kt\n    setPossibleAnswer(findViewById(R.id.button_1), answers.get(0));\n    ```", "```kt\n    @Nullable\n    public ArrayList<Answer> getPossibleAnswers(){return mPossibleAnswers;}\n    ```", "```kt\n    ArrayList<Answer> answers = question.getPossibleAnswers();\n    if (answers == null){\n        return;\n    }\n    ```", "```kt\n    Return value of the method is never used \n\n    ```", "```kt\n    @SuppressWarnings(\"UnusedReturnValue\")public Answer addAnswer(String id, String text){\n    ```", "```kt\n    Typo: In word 'getitright' \n\n    ```"]