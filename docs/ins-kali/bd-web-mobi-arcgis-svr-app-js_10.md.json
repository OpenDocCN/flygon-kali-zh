["```js\nvar params = {\n    Input_Observation_Point: featureSetPoints,\n    Viewshed_Distance: 250\n};\n```", "```js\nvar params = {\n    Viewshed_Distance: 250,\n    Input_Observation_Point: featureSetPoints\n};\n```", "```js\ngp = new Geoprocessor(url);\n```", "```js\n    <script>\n    **dojo.require(\"esri.map\");**\n\n    **function init(){**\n    **var map = new esri.Map(\"mapDiv\", {**\n    **center: [-56.049, 38.485],**\n    **zoom: 3,**\n    **basemap: \"streets\"**\n     **});**\n     **}**\n    **dojo.ready(init);**\n    </script>\n    ```", "```js\n    <script>\n    **require([**\n     **\"esri/map\",**\n     **\"esri/graphic\",**\n     **\"esri/graphicsUtils\",**\n     **\"esri/tasks/Geoprocessor\",**\n     **\"esri/tasks/FeatureSet\",**\n     **\"esri/symbols/SimpleMarkerSymbol\",**\n     **\"esri/symbols/SimpleLineSymbol\",**\n     **\"esri/symbols/SimpleFillSymbol\",**\n    **\"dojo/_base/Color\"],**\n    **function(Map, Graphic, graphicsUtils, Geoprocessor, FeatureSet, SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, Color){**\n\n     **});**\n    </script>\n    ```", "```js\n    <script>\n    require([\n          \"esri/map\",\n          \"esri/graphic\",\n          \"esri/graphicsUtils\",\n          \"esri/tasks/Geoprocessor\",\n          \"esri/tasks/FeatureSet\",\n          \"esri/symbols/SimpleMarkerSymbol\",\n          \"esri/symbols/SimpleLineSymbol\",\n          \"esri/symbols/SimpleFillSymbol\",\n    \"dojo/_base/Color\"],\n    function(Map, Graphic, graphicsUtils, Geoprocessor, FeatureSet, SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, Color){\n    **var map, gp;**\n    **var driveTimes = \"1 2 3\";**\n\n    **// Initialize map, GP and image params**\n    **map = new Map(\"mapDiv\", {** \n     **basemap: \"streets\",**\n     **center:[-117.148, 32.706], //long, lat**\n     **zoom: 12**\n    **});**    });\n    </script>\n    ```", "```js\n    // Initialize map, GP and image params\n    map = new Map(\"mapDiv\", { \n      basemap: \"streets\",\n      center:[-117.148, 32.706], //long, lat\n      zoom: 12\n    });\n\n    **gp = newGeoprocessor(\"http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Network/ESRI_DriveTime_US/GPServer/CreateDriveTimePolygons\");**\n    **gp.setOutputSpatialReference({wkid:102100});**\n\n    ```", "```js\n    gp = new Geoprocessor(\"http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Network/ESRI_DriveTime_US/GPServer/CreateDriveTimePolygons\");\n    gp.setOutputSpatialReference({wkid:102100});\n    **map.on(\"click\", computeServiceArea);**\n\n    ```", "```js\n    gp = new Geoprocessor(\"http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Network/ESRI_DriveTime_US/GPServer/CreateDriveTimePolygons\");\n    gp.setOutputSpatialReference({wkid:102100});\n    map.on(\"click\", computeServiceArea);\n\n    **function computeServiceArea(evt) {**\n\n    **}**\n\n    ```", "```js\n    function computeServiceArea(evt) {\n     **map.graphics.clear();**\n     **var pointSymbol = new SimpleMarkerSymbol();**\n     **pointSymbol.setOutline = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255, 0, 0]), 1);**\n     **pointSymbol.setSize(14);**\n     **pointSymbol.setColor(new Color([0, 255, 0, 0.25]));**\n    }\n    ```", "```js\n    function computeServiceArea(evt) {\n      map.graphics.clear();\n      varpointSymbol = new SimpleMarkerSymbol();\n      pointSymbol.setOutline = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255, 0, 0]), 1);\n      pointSymbol.setSize(14);\n      pointSymbol.setColor(new Color([0, 255, 0, 0.25]));\n\n     **var graphic = new Graphic(evt.mapPoint,pointSymbol);**\n     **map.graphics.add(graphic);**\n    }\n    ```", "```js\n    functioncomputeServiceArea(evt) {\n      map.graphics.clear();\n      var pointSymbol = new SimpleMarkerSymbol();\n      pointSymbol.setOutline = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255, 0, 0]), 1);\n      pointSymbol.setSize(14);\n      pointSymbol.setColor(new Color([0, 255, 0, 0.25]));\n\n      var graphic = new Graphic(evt.mapPoint,pointSymbol);\n      map.graphics.add(graphic);\n\n     **var features= [];**\n     **features.push(graphic);**\n    }\n    ```", "```js\n    function computeServiceArea(evt) {\n      map.graphics.clear();\n      var pointSymbol = new SimpleMarkerSymbol();\n      pointSymbol.setOutline = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255, 0, 0]), 1);\n      pointSymbol.setSize(14);\n      pointSymbol.setColor(new Color([0, 255, 0, 0.25]));\n\n      var graphic = new Graphic(evt.mapPoint,pointSymbol);\n      map.graphics.add(graphic);\n\n      var features= [];\n      features.push(graphic);\n     **var featureSet = new FeatureSet();**\n     **featureSet.features = features;**\n    }\n    ```", "```js\n    function computeServiceArea(evt) {\n    map.graphics.clear();\n    varpointSymbol = new SimpleMarkerSymbol();\n    pointSymbol.setOutline = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255, 0, 0]), 1);\n    pointSymbol.setSize(14);\n    pointSymbol.setColor(new Color([0, 255, 0, 0.25]));\n\n    var graphic = new Graphic(evt.mapPoint,pointSymbol);\n    map.graphics.add(graphic);\n\n    var features= [];\n    features.push(graphic);\n    varfeatureSet = new FeatureSet();\n    featureSet.features = features;\n    **var params = { \"Input_Location\":featureSet, \"Drive_Times\":driveTimes };**\n    **gp.execute(params, getDriveTimePolys);**\n    }\n    ```", "```js\n    **function getDriveTimePolys(results, messages) {**\n\n    **}**\n\n    ```", "```js\n    function getDriveTimePolys(results, messages) {\n     **var features = results[0].value.features;**\n    }\n    ```", "```js\n    function getDriveTimePolys(results, messages) {\n      var features = results[0].value.features;\n\n     **for (var f=0, fl=features.length; f<fl; f++) {**\n\n     **}**\n    }\n    ```", "```js\n    function getDriveTimePolys(results, messages) {\n    var features = results[0].value.features;\n\n    for (var f=0, fl=features.length; f<fl; f++) {\n     **var feature = features[f];**\n     **if(f == 0) {**\n     **var polySymbolRed = new SimpleFillSymbol();**\n     **polySymbolRed.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0,0.5]), 1));**\n     **polySymbolRed.setColor(new Color([255,0,0,0.7]));**\n     **feature.setSymbol(polySymbolRed);**\n     **}**\n     **else if(f == 1) {**\n     **var polySymbolGreen = new SimpleFillSymbol();**\n     **polySymbolGreen.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0,0.5]), 1));**\n     **polySymbolGreen.setColor(new Color([0,255,0,0.7]));**\n     **feature.setSymbol(polySymbolGreen);**\n     **}**\n     **else if(f == 2) {**\n     **var polySymbolBlue = new SimpleFillSymbol();**\n     **polySymbolBlue.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0,0.5]), 1));**\n     **polySymbolBlue.setColor(new Color([0,0,255,0.7]));**\n     **feature.setSymbol(polySymbolBlue);**\n     **}**\n     **map.graphics.add(feature);** \n    }\n    ```", "```js\n    function getDriveTimePolys(results, messages) {\n      var features = results[0].value.features;\n\n      for (var f=0, fl=features.length; f<fl; f++) {\n        var feature = features[f];\n        if(f === 0) {\n          var polySymbolRed = new SimpleFillSymbol();\n          polySymbolRed.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0,0.5]), 1));\n          polySymbolRed.setColor(new Color([255,0,0,0.7]));\n          feature.setSymbol(polySymbolRed);\n        }\n        else if(f == 1) {\n          var polySymbolGreen = new SimpleFillSymbol();\n          polySymbolGreen.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0,0.5]), 1));\n          polySymbolGreen.setColor(new Color([0,255,0,0.7]));\n          feature.setSymbol(polySymbolGreen);\n        }\n        else if(f == 2) {\n          var polySymbolBlue = new SimpleFillSymbol();\n          polySymbolBlue.setOutline(new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0,0.5]), 1));\n          polySymbolBlue.setColor(new Color([0,0,255,0.7]));\n          feature.setSymbol(polySymbolBlue);\n        }\n        map.graphics.add(feature);\n      }\n     **map.setExtent(graphicsUtils.graphicsExtent(map.graphics.graphics), true);**\n    }\n    ```", "```js\n    <body>\n    <div id=\"mapDiv\"></div>\n    **<div id=\"info\" class=\"esriSimpleSlider\">**\n     **Click on the map to use a Geoprocessing(GP) task to generate and zoom to drive time polygons. The drive time polygons are 1, 2, and 3 minutes.**\n    **</div>**\n    </body>\n    ```", "```js\n    <style>\n    **html, body, #mapDiv {**\n    **height: 100%;**\n    **margin: 0;**\n    **padding: 0;**\n    **width: 100%;**\n     **}**\n     **#info {**\n    **bottom: 20px;**\n    **color: #444;**\n    **height: auto;**\n    **font-family: arial;**\n    **left: 20px;**\n    **margin: 5px;**\n    **padding: 10px;**\n    **position: absolute;**\n    **text-align: left;**\n    **width: 200px;**\n    **z-index: 40;**\n     **}**\n    </style>\n    ```"]