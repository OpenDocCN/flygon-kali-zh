["```\n    **Docker build**\n\n    ```", "```\n    **Docker build -t username/my-imagename .**\n\n    ```", "```\n    **Docker build -t username/my-imagename -f /path/Dockerfile**\n\n    ```", "```\n**$ Docker build**\n**Sending build context to Docker daemon 6.51 MB**\n**...**\n\n```", "```\n    FROM debian:wheezy \n    RUN apt-get update \n    RUN apt-get -y install ruby ruby-dev build-essential git \n    # For debugging \n    RUN apt-get install -y gdb strace \n    # Set up my user \n    RUN useradd -u 1000 -ms /bin/bash vkohli \n       RUN gem install -n /usr/bin bundler \n    RUN gem install -n /usr/bin rake \n    WORKDIR /home/vkohli/ \n    ENV HOME /home/vkohli \n    VOLUME [\"/home\"] \n    USER vkohli \n    EXPOSE 8080 \n\n```", "```\n  FROM vkohli/devbase \n          WORKDIR /home/vkohli/src/repos/homepage \n          ENTRYPOINT bin/homepage web \n\n```", "```\nFROM vkohli/devbase \nWORKDIR / \nUSER root \n# For Graphivz integration \nRUN apt-get update \nRUN apt-get -y install graphviz xsltproc imagemagick \n       USER vkohli \n         WORKDIR /home/vkohli/src/repos/blog \n         ENTRYPOINT bundle exec rackup -p 8080 \n\n```", "```\nFROM vkohli/devbase \nRUN apt-get update \nRUN apt-get -y install openssh-server emacs23-nox htop screen \n\n# For debugging \nRUN apt-get -y install sudo wget curl telnet tcpdump \n# For 32-bit experiments \nRUN apt-get -y install gcc-multilib  \n# Man pages and \"most\" viewer: \nRUN apt-get install -y man most \nRUN mkdir /var/run/sshd \nENTRYPOINT /usr/sbin/sshd -D \nVOLUME [\"/home\"] \nEXPOSE 22 \nEXPOSE 8080 \n\n```", "```\nFROM vkohli/devbase \nRUN apt-get update \nRUN apt-get -y install ruby1.8 git ruby1.8-dev \n\n```", "```\nFROM sampleapp \nRUN apt-get update \nRUN apt-get install -y build-essential [assorted dev packages for libraries] \nVOLUME [\"/build\"] \nWORKDIR /build \nCMD [\"bundler\", \"install\",\"--path\",\"vendor\",\"--standalone\"] \n\n```", "```\nADD installer /installer \nCMD /installer.sh \n\n```", "```\nservices: \n  web: \n    git_url: git@github.com:vkohli/sampleapp.git \n    git_branch: test \n    command: rackup -p 3000 \n    build_command: rake db:migrate \n    deploy_command: rake db:migrate \n    log_folder: /usr/src/app/log \n    ports: [\"3000:80:443\", \"4000\"] \n    volumes: [\"/tmp:/tmp/mnt_folder\"] \n    health: default \n  api: \n    image: quay.io/john/node \n    command: node test.js \n    ports: [\"1337:8080\"] \n    requires: [\"web\"] \ndatabases: \n  - \"mysql\" \n  - \"redis\" \n\n```", "```\nFROM debian:wheezy \nADD wheezy-backports.list /etc/apt/sources.list.d/ \nRUN apt-get update \nRUN apt-get -y install haproxy \nADD haproxy.cfg /etc/haproxy/haproxy.cfg \nCMD [\"haproxy\", \"-db\", \"-f\", \"/etc/haproxy/haproxy.cfg\"] \nEXPOSE 80 \nEXPOSE 443 \n\n```", "```\nbackend test \n    acl authok http_auth(adminusers) \n    http-request auth realm vkohli if !authok \n    server s1 192.168.0.44:8084 \n\n```"]