["```\n**$ curl -X <REQUEST> -H <HEADER> <OPTION> <ENDPOINT>**\n\n```", "```\n    **OPTIONS=--selinux-enabled -H tcp://0.0.0.0:2375** \n\n    ```", "```\n    **$ sudo systemctl restart docker** \n\n    ```", "```\n    **$ docker -H <Docker Host>:2375 info**\n\n    ```", "```\n    **$ export DOCKER_HOST=tcp://dockerhost.example.com:2375**\n\n    ```", "```\n    **$ docker info**\n\n    ```", "```\n    **GET /images/json**\n\n    ```", "```\n    **$ curl http://dockerhost.example.com:2375/images/json**\n\n    ```", "```\n    **POST /images/create**\n\n    ```", "```\n         **$ curl -X POST \n        http://dockerhost.example.com:2375/images/create?fromImage=fedora**\n\n        ```", "```\n         **$  curl -X POST \n        http://dockerhost.example.com:2375/images/create?fromImage=wordpress&tag=latest**\n\n        ```", "```\n         **$ curl -X POST \n        http://dockerhost.example.com:2375/images/create?fromSrc=http://localhost/image.tar**\n\n        ```", "```\n    **POST  /commit**\n\n    ```", "```\n         **$ curl -X POST \n        http://dockerhost.example.com:2375/commit?container=704a7c71f77d**\n\n        ```", "```\n         **$  curl -X POST  -H \"Content-type:application/tar\" --data-binary '@/tmp/Dockerfile.tar.gz'  \n        http://dockerhost.example.com:2375/build?t=apache**\n\n        ```", "```\n    **DELETE  /images/<name>**\n\n    ```", "```\n    **$ curl -X DELETE\n    http://dockerhost.example.com:2375/images/wordpress:3.9.1**\n\n    ```", "```\n    **GET  /containers/json**\n\n    ```", "```\n         **$ curl -X GET http://shadowfax.example.com:2375/containers/json**\n\n        ```", "```\n         **$ curl -X GET http://shadowfax.example.com:2375/containers/json?all=True**\n\n        ```", "```\n    **POST  /containers/create**\n\n    ```", "```\n         **$ curl -X POST  -H \"Content-type:application/json\" -d '{\"Image\": \"fedora\", \"Cmd\": [\"ls\"] }' http://dockerhost.example.com:2375/containers/create**\n\n        ```", "```\n         **$ curl -X POST  -H \"Content-type:application/json\" -d '{\"Image\": \"fedora\", \"Cmd\": [\"ls\"] }' http://dockerhost.example.com:2375/containers/create?name=f21**\n\n        ```", "```\n    **POST /containers/<id>/start**\n\n    ```", "```\n    **$ curl -X POST  -H \"Content-type:application/json\" -d '{\"Dns\":  [\"4.2.2.1\"] }' http://dockerhost.example.com:2375/containers/591ab8ac2650/start**\n\n    ```", "```\n    **GET  /containers/<id>/json**\n\n    ```", "```\n    **$ curl -X GET http://dockerhost.example.com:2375/containers/591ab8ac2650/json**\n\n    ```", "```\n    **GET /containers/<id>/top**\n\n    ```", "```\n    **$ curl -X GET http://dockerhost.example.com:2375/containers/591ab8ac2650/top**\n\n    ```", "```\n    **POST /containers/<id>/stop**\n\n    ```", "```\n    **$ curl -X POST http://dockerhost.example.com:2375/containers/591ab8ac2650/stop**\n\n    ```", "```\n    **$ sudo yum install python-docker-py**\n\n    ```", "```\n    **$ sudo pip install docker-py**\n\n    ```", "```\n    **$ python**\n    **>>> import docker**\n\n    ```", "```\n         **>>> client = docker.Client(base_url='unix://var/run/docker.sock', version='1.18',  timeout=10)** \n\n        ```", "```\n         **>>> client = docker.Client(base_url='http://dockerhost.example.com:2375', version='1.18',  timeout=10)**\n\n        ```", "```\n    **>>> client.search (\"fedora\")**\n\n    ```", "```\n    **>>> client.pull(\"fedora\", tag=\"latest\")**\n\n    ```", "```\n    **>>> client.create_container(\"fedora\", command=\"ls\", hostname=None, user=None, detach=False, stdin_open=False, tty=False, mem_limit=0, ports=None, environment=None, dns=None, volumes=None, volumes_from=None,network_disabled=False, name=None, entrypoint=None, cpu_shares=None, working_dir=None,memswap_limit=0)**\n\n    ```", "```\n    **$ mkdirc-p /etc/docker**\n    **$ cd  /etc/docker**\n\n    ```", "```\n    **$ openssl genrsa -aes256 -out ca-key.pem 2048** \n    **$ openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem** \n\n    ```", "```\n    **$ openssl genrsa -out server-key.pem 2048** \n    **$ openssl req -subj \"/CN=dockerhost.example.com\" -new -key server-key.pem -out server.csr** \n\n    ```", "```\n    **$ echo subjectAltName = IP:10.70.1.67,IP:127.0.0.1 > extfile.cnf** \n    **$ openssl x509 -req -days 365 -in server.csr -CA ca.pem -CAkey ca-key.pem    -CAcreateserial -out server-cert.pem -extfile extfile.cnf** \n\n    ```", "```\n    **$ openssl genrsa -out key.pem 2048** \n    **$ openssl req -subj '/CN=client' -new -key key.pem -out client.csr** \n\n    ```", "```\n    **$ echo extendedKeyUsage = clientAuth > extfile_client.cnf** \n    **$ openssl x509 -req -days 365 -in client.csr -CA ca.pem -CAkey ca-key.pem  -CAcreateserial -out cert.pem -extfile_client.cnf** \n\n    ```", "```\n    **$ rm -rf client.csr server.csr** \n\n    ```", "```\n    **$ chmod -v 0600 ca-key.pem key.pem server-key.pem ca.pem server-cert.pem cert.pem**\n\n    ```", "```\n     **$ pwd**\n     **/etc/docker**\n     **$ docker -d --tlsverify --tlscacert=ca.pem --tlscert=server-cert.pem    --tlskey=server-key.pem   -H=0.0.0.0:2376** \n\n    ```", "```\n    **$ cd /etc/docker**\n    **$ docker --tlsverify --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem -H=127.0.0.1:2376 version** \n\n    ```", "```\n    **OPTIONS='--selinux-enabled -H tcp://0.0.0.0:2376 --tlsverify     --tlscacert=/etc/docker/ca.pem --tlscert=/etc/docker/server-cert.pem --tlskey=/etc/docker/server-key.pem'** \n\n    ```"]