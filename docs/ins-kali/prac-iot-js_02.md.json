["```js\nnode -v\n# v6.10.1\n```", "```js\nnpm -v\n# 3.10.10  \n```", "```js\nnpm install -g nodemon\n```", "```js\nmongod  \n```", "```js\nmongo  \n```", "```js\nmongo ds241055.mlab.com:41055/iotfwjs -u admin -p admin123  \n```", "```js\nnpm install mosca pino -g  \n```", "```js\nopenssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem  \n```", "```js\nlet SSL_KEY = __dirname + '/certs/key.pem';\nlet SSL_CERT = __dirname + '/certs/certificate.pem';\nlet MONGOURL = 'mongodb://admin:admin123@ds241055.mlab.com:41055/iotfwjs';\n\nmodule.exports = {\n    id: 'broker',\n    stats: false,\n    port: 8443,\n    logger: {\n        name: 'iotfwjs',\n        level: 'debug'\n    },\n    secure: {\n        keyPath: SSL_KEY,\n        certPath: SSL_CERT,\n    },\n    backend: {\n        type: 'mongodb',\n        url: MONGOURL\n    },\n    persistence: {\n        factory: 'mongo',\n        url: MONGOURL\n    }\n};\n```", "```js\nmosca -c index.js -v | pino  \n```", "```js\ngit clone https://github.com/PacktPublishing/Practical-Internet-of-Things-with-JavaScript.git\n```", "```js\nnpm install  \n```", "```js\n.\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 server\n    \u251c\u2500\u2500 api\n    \u2502 \u2514\u2500\u2500 user\n    \u2502 \u251c\u2500\u2500 index.js\n    \u2502 \u251c\u2500\u2500 user.controller.js\n    \u2502 \u251c\u2500\u2500 user.model.js\n    \u251c\u2500\u2500 app.js\n    \u251c\u2500\u2500 auth\n    \u2502 \u251c\u2500\u2500 auth.service.js\n    \u2502 \u251c\u2500\u2500 index.js\n    \u2502 \u2514\u2500\u2500 local\n    \u2502 \u251c\u2500\u2500 index.js\n    \u2502 \u2514\u2500\u2500 passport.js\n    \u251c\u2500\u2500 config\n    \u2502 \u251c\u2500\u2500 environment\n    \u2502 \u2502 \u251c\u2500\u2500 development.js\n    \u2502 \u2502 \u251c\u2500\u2500 index.js\n    \u2502 \u2502 \u251c\u2500\u2500 production.js\n    \u2502 \u2502 \u2514\u2500\u2500 test.js\n    \u2502 \u251c\u2500\u2500 express.js\n    \u2502 \u2514\u2500\u2500 socketio.js\n    \u251c\u2500\u2500 mqtt\n    \u2502 \u2514\u2500\u2500 index.js\n    \u2514\u2500\u2500 routes.js\n```", "```js\n// MongoDB connection options\n    mongo: {\n        uri: 'mongodb://admin:admin123@ds241055.mlab.com:41055/iotfwjs'\n    },\n\n    mqtt: {\n        host: process.env.EMQTT_HOST || '127.0.0.1',\n        clientId: 'API_Server_Dev',\n        port: 8883\n    }\n};\n```", "```js\nvar client = mqtt.connect({\n    port: config.mqtt.port,\n    protocol: 'mqtts',\n    host: config.mqtt.host,\n    clientId: config.mqtt.clientId,\n    reconnectPeriod: 1000,\n    username: config.mqtt.clientId,\n    password: config.mqtt.clientId,\n    keepalive: 300,\n    rejectUnauthorized: false\n});\n```", "```js\nnpm start  \n```", "```js\n{ \n   \"email\" : \"arvind@myapp.com\", \n   \"password\" : \"123456\", \n   \"name\" : \"Arvind\" \n} \n```", "```js\nmosca -c index.js -v | pino  \n```", "```js\nnpm start \n```", "```js\n$ sudo apt update\n$ sudo apt full-upgrade \n```", "```js\n$ curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n$ sudo apt install nodejs  \n```", "```js\nnode -v\nnpm -v  \n```", "```js\n$ npm init\n```", "```js\n$ npm install mqtt -save  \n```", "```js\n{\n    \"name\": \"pi-client\",\n    \"version\": \"0.1.0\",\n    \"description\": \"\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n        \"start\": \"node index.js\"\n    },\n    \"keywords\": [\"pi\", \"mqtts\"],\n    \"author\": \"Arvind Ravulavaru\",\n    \"private\": true,\n    \"license\": \"ISC\",\n    \"dependencies\": {\n        \"mqtt\": \"^2.7.1\"\n    }\n}\n```", "```js\nmodule.exports = { \n    mqtt: { \n        host: '10.2.192.141', \n        clientId: 'rPI_3', \n        port: 8883 \n    } \n}; \n```", "```js\nvar config = require('./config.js'); \nvar mqtt = require('mqtt') \nvar client = mqtt.connect({ \n    port: config.mqtt.port, \n    protocol: 'mqtts', \n    host: config.mqtt.host, \n    clientId: config.mqtt.clientId, \n    reconnectPeriod: 1000, \n    username: config.mqtt.clientId, \n    password: config.mqtt.clientId, \n    keepalive: 300, \n    rejectUnauthorized: false \n}); \n\nclient.on('connect', function() { \n    client.subscribe('greet') \n    client.publish('greet', 'Hello, IoTjs!') \n}); \n\nclient.on('message', function(topic, message) { \n    // message is Buffer \n    console.log('Topic >> ', topic); \n    console.log('Message >> ', message.toString()) \n}); \n```", "```js\nmosca -c index.js -v | pino  \n```", "```js\n$ npm start  \n```", "```js\nvar mqtt = require('mqtt'); \nvar config = require('../config/environment'); \n\nvar client = mqtt.connect({ \n    port: config.mqtt.port, \n    protocol: 'mqtts', \n    host: config.mqtt.host, \n    clientId: config.mqtt.clientId, \n    reconnectPeriod: 1000, \n    username: config.mqtt.clientId, \n    password: config.mqtt.clientId, \n    keepalive: 300, \n    rejectUnauthorized: false \n}); \n\nclient.on('connect', function() { \n    client.subscribe('api-engine'); \n}); \n\nclient.on('message', function(topic, message) { \n    // message is Buffer \n    // console.log('Topic >> ', topic); \n    // console.log('Message >> ', message.toString()); \n    if (topic === 'api-engine') { \n        var macAddress = message.toString(); \n        console.log('Mac Address >> ', macAddress); \n        client.publish('rpi', 'Got Mac Address: ' + macAddress); \n    } else { \n        console.log('Unknown topic', topic); \n    } \n}); \n```", "```js\nmosca -c index.js -v | pino  \n```", "```js\nnpm start  \n```", "```js\n$ npm install getmac --save  \n```", "```js\nvar config = require('./config.js'); \nvar mqtt = require('mqtt'); \nvar GetMac = require('getmac'); \n\nvar client = mqtt.connect({ \n    port: config.mqtt.port, \n    protocol: 'mqtts', \n    host: config.mqtt.host, \n    clientId: config.mqtt.clientId, \n    reconnectPeriod: 1000, \n    username: config.mqtt.clientId, \n    password: config.mqtt.clientId, \n    keepalive: 300, \n    rejectUnauthorized: false \n}); \n\nclient.on('connect', function() { \n    client.subscribe('rpi'); \n    GetMac.getMac(function(err, macAddress) { \n        if (err) throw err; \n        client.publish('api-engine', macAddress); \n    }); \n}); \n\nclient.on('message', function(topic, message) { \n    // message is Buffer \n    // console.log('Topic >> ', topic); \n    // console.log('Message >> ', message.toString()); \n    if (topic === 'rpi') { \n        console.log('API Engine Response >> ', message.toString()); \n    } else { \n        console.log('Unknown topic', topic); \n    } \n}); \n```", "```js\n$ npm start  \n```", "```js\nnpm install -g @angular/cli  \n```", "```js\ngit clone git@github.com:PacktPublishing/Practical-Internet-of-Things-with-JavaScript.git\n```", "```js\nnpm install  \n```", "```js\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 e2e\n\u2502 \u251c\u2500\u2500 app.e2e-spec.ts\n\u2502 \u251c\u2500\u2500 app.po.ts\n\u2502 \u2514\u2500\u2500 tsconfig.e2e.json\n\u251c\u2500\u2500 karma.conf.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 protractor.conf.js\n\u251c\u2500\u2500 src\n\u2502 \u251c\u2500\u2500 app\n\u2502 \u2502 \u251c\u2500\u2500 add-device\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 add-device.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 add-device.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 add-device.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 add-device.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 app.component.css\n\u2502 \u2502 \u251c\u2500\u2500 app.component.html\n\u2502 \u2502 \u251c\u2500\u2500 app.component.spec.ts\n\u2502 \u2502 \u251c\u2500\u2500 app.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 app.global.ts\n\u2502 \u2502 \u251c\u2500\u2500 app.module.ts\n\u2502 \u2502 \u251c\u2500\u2500 device\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 device.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 device.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 device.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 device.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 device-template\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 device-template.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 device-template.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 device-template.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 device-template.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 guard\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 auth.guard.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 auth.guard.ts\n\u2502 \u2502 \u251c\u2500\u2500 home\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 home.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 home.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 home.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 home.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 login\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 login.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 login.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 login.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 login.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 nav-bar\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 nav-bar.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 nav-bar.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 nav-bar.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 nav-bar.component.ts\n\u2502 \u2502 \u251c\u2500\u2500 register\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 register.component.css\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 register.component.html\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 register.component.spec.ts\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 register.component.ts\n\u2502 \u2502 \u2514\u2500\u2500 services\n\u2502 \u2502 \u251c\u2500\u2500 auth.service.spec.ts\n\u2502 \u2502 \u251c\u2500\u2500 auth.service.ts\n\u2502 \u2502 \u251c\u2500\u2500 data.service.spec.ts\n\u2502 \u2502 \u251c\u2500\u2500 data.service.ts\n\u2502 \u2502 \u251c\u2500\u2500 devices.service.spec.ts\n\u2502 \u2502 \u251c\u2500\u2500 devices.service.ts\n\u2502 \u2502 \u251c\u2500\u2500 http-interceptor.service.spec.ts\n\u2502 \u2502 \u251c\u2500\u2500 http-interceptor.service.ts\n\u2502 \u2502 \u251c\u2500\u2500 loader.service.spec.ts\n\u2502 \u2502 \u251c\u2500\u2500 loader.service.ts\n\u2502 \u2502 \u251c\u2500\u2500 socket.service.spec.ts\n\u2502 \u2502 \u2514\u2500\u2500 socket.service.ts\n\u2502 \u251c\u2500\u2500 assets\n\u2502 \u251c\u2500\u2500 environments\n\u2502 \u2502 \u251c\u2500\u2500 environment.prod.ts\n\u2502 \u2502 \u2514\u2500\u2500 environment.ts\n\u2502 \u251c\u2500\u2500 favicon.ico\n\u2502 \u251c\u2500\u2500 index.html\n\u2502 \u251c\u2500\u2500 main.ts\n\u2502 \u251c\u2500\u2500 polyfills.ts\n\u2502 \u251c\u2500\u2500 styles.css\n\u2502 \u251c\u2500\u2500 test.ts\n\u2502 \u251c\u2500\u2500 tsconfig.app.json\n\u2502 \u251c\u2500\u2500 tsconfig.spec.json\n\u2502 \u2514\u2500\u2500 typings.d.ts\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 tslint.json\n```", "```js\nng serve\n```"]