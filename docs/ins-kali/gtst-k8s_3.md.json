["```\n**$ kubectl describe service/node-js-labels**\n\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: node-js-internal\n  labels:\n    name: node-js-internal\nspec:\n  ports:\n  - port: 80\n  selector:\n    name: node-js\n```", "```\n**$ kubectl create -f nodejs-service-internal.yaml**\n**$ kubectl get services -l name=node-js-internal**\n\n```", "```\n**$ kubectl exec node-js-pod -- curl <node-js-internal IP>**\n\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: node-js-nodeport\n  labels:\n    name: node-js-nodeport\nspec:\n  ports:\n  - port: 80\n    nodeport: 30001\n  selector:\n    name: node-js\n  type: NodePort\n```", "```\n**$ kubectl create -f nodejs-service-nodeport.yaml**\n\n```", "```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: node-js-90\n  labels:\n    name: node-js-90\nspec:\n  replicas: 3\n  selector:\n    name: node-js-90\n  template:\n    metadata:\n      labels:\n        name: node-js-90\n    spec:\n      containers:\n      - name: node-js-90\n        image: jonbaier/node-express-info:latest\n        ports:\n        - containerPort: 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: node-js-90\n  labels:\n    name: node-js-90\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 90\n    targetPort: 80\n  selector:\n    name: node-js-90\n```", "```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: node-js-multi\n  labels:\n    name: node-js-multi\nspec:\n  replicas: 3\n  selector:\n    name: node-js-multi\n  template:\n    metadata:\n      labels:\n        name: node-js-multi\n    spec:\n      containers:\n      - name: node-js-multi\n        image: jonbaier/node-express-multi:latest\n        ports:\n        - containerPort: 80\n        - containerPort: 8888\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: node-js-multi\n  labels:\n    name: node-js-multi\nspec:\n  type: LoadBalancer\n  ports:\n  - name: http\n    protocol: TCP\n    port: 80\n  - name: fake-admin-http\n    protocol: TCP\n    port: 8888\n  selector:\n    name: node-js-multi\n```", "```\n**$ kubectl get endpoints**\n\n```", "```\n**NAME               ENDPOINTS**\n**http-pd            10.244.2.29:80,10.244.2.30:80,10.244.3.16:80**\n**kubernetes         10.240.0.2:443**\n**node-js            10.244.0.12:80,10.244.2.24:80,10.244.3.13:80**\n\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: custom-service\nspec:\n  type: LoadBalancer\n  ports:\n  - name: http\n    protocol: TCP\n    port: 80\n```", "```\napiVersion: v1\nkind: Endpoints\nmetadata:\n  name: custom-service\nsubsets:\n- addresses:\n  - IP: **<X.X.X.X>**\n  ports:\n    - name: http\n      port: 80\n      protocol: TCP\n```", "```\n**$ kubectl describe service/custom-service**\n\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: node-js-none\n  labels:\n    name: node-js-none\nspec:\n  clusterip: None\n  ports:\n  - port: 80\n  selector:\n    name: node-js\n```", "```\n**$ kubectl exec node-js-pod -- curl node-js-none**\n\n```", "```\n**NODE_JS_PORT_80_TCP=tcp://10.0.103.215:80**\n**NODE_JS_PORT=tcp://10.0.103.215:80**\n**NODE_JS_PORT_80_TCP_PROTO=tcp**\n**NODE_JS_PORT_80_TCP_PORT=80**\n**NODE_JS_SERVICE_HOST=10.0.103.215**\n**NODE_JS_PORT_80_TCP_ADDR=10.0.103.215**\n**NODE_JS_SERVICE_PORT=80**\n\n```", "```\n**ENABLE_CLUSTER_DNS=\"${KUBE_ENABLE_CLUSTER_DNS:-true}\"**\n**DNS_SERVER_IP=\"10.0.0.10\"**\n**DNS_DOMAIN=\"cluster.local\"**\n**DNS_REPLICAS=1**\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: memory-pd\nspec:\n  containers:\n  - image: nginx:latest\n    ports:\n    - containerPort: 80\n    name: memory-pd\n    volumeMounts:\n    - mountPath: /memory-pd\n      name: memory-volume\n  volumes:\n  - name: memory-volume\n    emptydir:\n      medium: Memory\n```", "```\n**$ kubectl create -f storage-memory.yaml**\n**$ kubectl exec memory-pd -- ls -lh | grep memory-pd**\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: test-gce\nspec:\n  containers:\n  - image: nginx:latest\n    ports:\n    - containerPort: 80\n    name: test-gce\n    volumeMounts:\n    - mountPath: /usr/share/nginx/html\n      name: gce-pd\n  volumes:\n  - name: gce-pd\n    gcePersistentDisk:\n      pdName: mysite-volume-1\n      fsType: ext4\n```", "```\n**$ kubectl create -f storage-gce.yaml**\n**$ kubectl describe pod/test-gce**\n**$ gcloud compute --project \"<Your project ID>\" ssh --zone \"<your gce zone>\" \"<Node running test-gce pod>\"**\n\n```", "```\n**$ df -h | grep mysite-volume-1**\n\n```", "```\n**$ cd /var/lib/kubelet/plugins/kubernetes.io/gce-pd/mounts/mysite-volume-1**\n**$ vi index.html**\n\n```", "```\n**$ curl <Pod IP from Describe>**\n\n```", "```\n**$ kubectl delete pod/test-gce**\n\n```", "```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: http-pd\n  labels:\n    name: http-pd\nspec:\n  replicas: 3\n  selector:\n    name: http-pd\n  template:\n    metadata:\n      name: http-pd\n    spec:\n      containers:\n      - image: nginx:latest\n        ports:\n        - containerPort: 80\n        name: http-pd\n        volumeMounts:\n        - mountPath: /usr/share/nginx/html\n          name: gce-pd\n      volumes:\n      - name: gce-pd\n        gcePersistentDisk:\n          pdName: mysite-volume-1\n          fsType: ext4\n          readOnly: true\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: http-pd\n  labels:\n    name: http-pd\nspec:\n  type: LoadBalancer\n  ports:\n  - name: http\n    protocol: TCP\n    port: 80\n  selector:\n    name: http-pd\n```", "```\n**$ kubectl describe service/http-pd**\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: test-aws\nspec:\n  containers:\n  - image: nginx:latest\n    ports:\n    - containerPort: 80\n    name: test-aws\n    volumeMounts:\n    - mountPath: /usr/share/nginx/html\n      name: aws-pd\n  volumes:\n  - name: aws-pd\n    awsElasticBlockStore:\n      volumeID: aws://<availability-zone>/<volume-id>\n      fsType: ext4\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: test\n```", "```\n**$ kubectl create -f test-ns.yaml**\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: utility\n  namespace: test\nspec:\n  containers:\n  - image: debian:latest\n    command:\n      - sleep\n      - \"3600\"\n    name: utility\n```", "```\n**$ kubectl describe namespace/test**\n\n```", "```\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: test-quotas\n  namespace: test\nspec:\n  hard: \n    pods: 3\n    services: 1\n    replicationcontrollers: 1\n```", "```\n**$ kubectl create -f quota.yaml**\n\n```", "```\n**$ kubectl describe namespace/test**\n\n```", "```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: busybox-ns\n  namespace: test\n  labels:\n    name: busybox-ns\nspec:\n  replicas: 4\n  selector:\n    name: busybox-ns\n  template:\n    metadata:\n      labels:\n        name: busybox-ns\n    spec:\n      containers:\n      - name: busybox-ns\n        image: busybox\n        command:\n          - sleep\n          - \"3600\"\n```", "```\n**kubectl describe rc/busybox-ns**\n\n```", "```\n**$ kubectl config view | grep current-context**\n\n```", "```\n**$ kubectl config set-context <Current Context>  --namespace=test**\n\n```", "```\n**$ kubectl describe rc/busybox-ns --namespace=test**\n\n```"]