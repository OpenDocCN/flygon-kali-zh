["```\n$ps aux | grep api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03701\u00a0\u00a06.1\u00a0\u00a08.7 497408 346244 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a021:06\u00a0\u00a0 0:16 kube-apiserver --advertise-address=192.168.99.111 --allow-privileged=true --anonymous-auth=false\n```", "```\nkube-apiserver --advertise-address=192.168.99.104 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt\n```", "```\n    openssl genrsa -out priv.key 4096\n    ```", "```\n    [ req ]\n    default_bits = 2048\n    prompt = no\n    default_md = sha256\n    distinguished_name = dn\n    [ dn ]\n    CN = test\n    O = dev\n    [ v3_ext ]\n    authorityKeyIdentifier=keyid,issuer:always basicConstraints=CA:FALSE\n    keyUsage=keyEncipherment,dataEncipherment extendedKeyUsage=serverAuth,clientAuth\n    ```", "```\n    openssl req -config ./csr.cnf -new -key priv.key -nodes -out new.csr\n    ```", "```\n    apiVersion: certificates.k8s.io/v1beta1\n    kind: CertificateSigningRequest\n    metadata:\n     name: mycsr\n    spec:\n     groups:\n     - system:authenticated\n     request: ${BASE64_CSR}\n     usages:\n     - digital signature\n     - key encipherment\n     - server auth\n     - client auth\n    ```", "```\n    $ export BASE64_CSR=$(cat ./new.csr | base64 | tr -d '\\n')\n    $ cat csr.yaml | envsubst | kubectl apply -f -\n    ```", "```\n    kubectl certificate approve mycsr\n    ```", "```\n    kubectl get csr mycsr -o jsonpath='{.status.certificate}' \\\n     | base64 --decode > new.crt\n    ```", "```\nAuthorization: Bearer 66e6a781-09cb-4e7e-8e13-34d78cb0dab6\n```", "```\nAuthentication: Basic base64(user:password)\n```", "```\n    $ps aux | grep api\n    root\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03701\u00a0\u00a03.8\u00a0\u00a08.8 497920 347140 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a021:06\u00a0\u00a0\u00a04:58 kube-apiserver --advertise-address=192.168.99.111 --allow-privileged=true --anonymous-auth=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota --enable-bootstrap-token-auth=true\n    ```", "```\n    $ ps aux | grep controller\n    root\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03693\u00a0\u00a01.4\u00a0\u00a02.3 211196 94396 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a021:06\u00a0\u00a0\u00a01:55 kube-controller-manager --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf --bind-address=127.0.0.1 --client-ca-file=/var/lib/minikube/certs/ca.crt --cluster-name=mk --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt --cluster-signing-key-file=/var/lib/minikube/certs/ca.key --controllers=*,bootstrapsigner,tokencleaner\n    ```", "```\n    Authorization: Bearer 123456.aa1234fdeffeeedf\n    ```", "```\n$ps aux | grep api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03711 27.1 14.9 426728 296552 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a004:22\u00a0\u00a0 0:04 kube-apiserver --advertise-address=192.168.99.104 ... --secure-port=8443 --service-account-key-file=/var/lib/minikube/certs/sa.pub --service-cluster-ip-range=10.96.0.0/12 --tls-cert-file=/var/lib/minikube/certs/apiserver.crt --tls-private-key-file=/var/lib/minikube/certs/apiserver.key\ndocker\u00a0\u00a0\u00a0\u00a04496\u00a0\u00a00.0\u00a0\u00a00.0\u00a0\u00a011408\u00a0\u00a0 544 pts/0\u00a0\u00a0\u00a0\u00a0S+\u00a0\u00a0 04:22\u00a0\u00a0 0:00 grep api\n```", "```\nkubectl create serviceaccount test \n```", "```\n$ kubectl get serviceaccounts test -o yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n\u00a0\u00a0creationTimestamp: \"2020-03-29T04:35:58Z\"\n\u00a0\u00a0name: test\n\u00a0\u00a0namespace: default\n\u00a0\u00a0resourceVersion: \"954754\"\n\u00a0\u00a0selfLink: /api/v1/namespaces/default/serviceaccounts/test\n\u00a0\u00a0uid: 026466f3-e2e8-4b26-994d-ee473b2f36cd\nsecrets:\n- name: test-token-sdq2d\n```", "```\n$ kubectl get secret test-token-sdq2d -o yaml\napiVersion: v1\ndata:\n\u00a0\u00a0ca.crt: base64(crt)\n\u00a0\u00a0namespace: ZGVmYXVsdA==\n\u00a0\u00a0token: base64(token)\nkind: Secret\n```", "```\nclusters:\n\u00a0\u00a0- name: name-of-remote-authn-service\n\u00a0\u00a0\u00a0\u00a0cluster:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0certificate-authority: /path/to/ca.pem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0server: https://authn.example.com/authenticate\n```", "```\n--requestheader-username-headers=X-Remote-User\n--requestheader-group-headers=X-Remote-Group\n--requestheader-extra-headers-prefix=X-Remote-Extra-\n```", "```\nGET / HTTP/1.1\nX-Remote-User: foo\nX-Remote-Group: bar\nX-Remote-Extra-Scopes: profile\n```", "```\nkubectl apply -f pod.yaml --as=dev-user --as-group=system:dev\n```", "```\n$ps aux | grep api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03701\u00a0\u00a06.1\u00a0\u00a08.7 497408 346244 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a021:06\u00a0\u00a0 0:16 kube-apiserver --advertise-address=192.168.99.111 --allow-privileged=true --anonymous-auth=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\n```", "```\n{\"apiVersion\": \"abac.authorization.kubernetes.io/v1beta1\", \"kind\": \"Policy\", \"spec\": {\"user\": \"kubelet\", \"namespace\": \"*\", \"resource\": \"pods\", \"readonly\": true}} \n```", "```\n$ ps aux | grep api\nroot\u00a0\u00a0\u00a0\u00a0 14632\u00a0\u00a09.2 17.0 495148 338780 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a006:11\u00a0\u00a0 0:09 kube-apiserver --advertise-address=192.168.99.104 --allow-privileged=true --authorization-mode=Node,RBAC ...\n```", "```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n\u00a0\u00a0namespace: default\n\u00a0\u00a0name: deployment-manager\nrules:\n- apiGroups: [\"\"]\n\u00a0\u00a0resources: [\"pods\"]\n\u00a0\u00a0verbs: [\"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\"]\n```", "```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n\u00a0\u00a0name: binding\n\u00a0\u00a0namespace: default\nsubjects:\n- kind: User\n\u00a0\u00a0name: employee\n\u00a0\u00a0apiGroup: \"\"\nroleRef:\n\u00a0\u00a0kind: Role\n\u00a0\u00a0name: deployment-manager\n\u00a0\u00a0apiGroup: \"\"\n```", "```\n$ kubectl --context=employee-context get pods\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0READY\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0RESTARTS\u00a0\u00a0 AGE\nhello-node-677b9cfc6b-xks5f\u00a0\u00a0 1/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a012m\n```", "```\n$ kubectl --context=employee-context get deployments\nError from server (Forbidden): deployments.apps is forbidden: User \"employee\" cannot list resource \"deployments\" in API group \"apps\" in the namespace \"default\"\n```", "```\n$ kubectl --context=employee-context get pods -n test\nError from server (Forbidden): pods is forbidden: User \"test\" cannot list resource \"pods\" in API group \"\" in the namespace \"test\"\n$ kubectl --context=employee-context get pods -n kube-system\nError from server (Forbidden): pods is forbidden: User \"test\" cannot list resource \"pods\" in API group \"\" in the namespace \"kube-system\"\n```", "```\nclusters:\n\u00a0\u00a0- name: authz_service\n\u00a0\u00a0\u00a0\u00a0cluster:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0certificate-authority: ca.pem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0server: https://authz.remote/\n```", "```\n$ps aux | grep api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03460 17.0\u00a0\u00a08.6 496896 339432 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a006:53\u00a0\u00a0 0:09 kube-apiserver --advertise-address=192.168.99.106 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt --enable-admission-plugins=PodSecurityPolicy,NamespaceLifecycle,LimitRanger --enable-bootstrap-token-auth=true\n```", "```\nlimits:\n- type: Namespace\n\u00a0\u00a0qps: 50\n\u00a0\u00a0burst: 100\n\u00a0\u00a0cacheSize: 200\n- type: Server\n\u00a0\u00a0qps: 10\n\u00a0\u00a0burst: 50\n\u00a0\u00a0cacheSize: 200\n```", "```\napiVersion: \"v1\"\nkind: \"LimitRange\"\nmetadata:\n\u00a0\u00a0name: \"pod-example\" \nspec:\n\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0- type: \"Pod\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0max:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"128Mi\"\n```", "```\npods \"range-demo\" is forbidden maximum memory usage per Pod is 128Mi, but limit is 1073741824\n```", "```\n$ ps aux | grep api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03763\u00a0\u00a06.7\u00a0\u00a08.7 497344 345404 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a023:28\u00a0\u00a0 0:14 kube-apiserver --advertise-address=192.168.99.112 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt --enable-admission-plugins=SecurityContextDeny\n```", "```\n$ cat pod-blacklist.rego\npackage kubernetes.admission\nimport data.kubernetes.namespaces\noperations = {\"CREATE\", \"UPDATE\"}\ndeny[msg] {\n\tinput.request.kind.kind == \"Pod\"\n\toperations[input.request.operation]\n\timage := input.request.object.spec.containers[_].image\n\timage == \"busybox\"\n\tmsg := sprintf(\"image not allowed %q\", [image])\n}\n```", "```\nkubectl create configmap pod \u2014from-file=pod-blacklist.rego\n```", "```\n$ cat busybox.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: busybox\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: sec-ctx-demo\n\u00a0\u00a0\u00a0\u00a0image: busybox\n\u00a0\u00a0\u00a0\u00a0command: [ \"sh\", \"-c\", \"sleep 1h\" ]\n```", "```\nadmission webhook \"validating-webhook.openpolicyagent.org\" denied the request: image not allowed \"busybox\"\n```"]