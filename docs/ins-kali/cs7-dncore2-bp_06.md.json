["```cs\n    Install-Package Microsoft.EntityFrameworkCore.SqlServer  \n```", "```cs\n    Install-Package Microsoft.EntityFrameworkCore.Tools  \n```", "```cs\n    Install-Package Microsoft.VisualStudio.Web.CodeGeneration.Design\n```", "```cs\nusing Microsoft.EntityFrameworkCore; \nusing System; \n\nnamespace WebResearch.Models \n{ \n    public class Research \n    { \n        public int Id { get; set; } \n        public string Url { get; set; } \n        public DateTime DateSaved { get; set; } \n        public string Note { get; set; } \n    } \n\n    public class ResearchContext : DbContext \n    { \n        public ResearchContext(DbContextOptions<ResearchContext> \n        options) : base(options) \n        { \n        } \n\n        public DbSet<Research> ResearchLinks { get; set; } \n    } \n} \n```", "```cs\nstring connection = Configuration.GetConnectionString(\"LocalDBConnection\"); \nservices.AddDbContext<ResearchContext>(options => options.UseSqlServer(connection)); \n```", "```cs\n{ \n  \"Logging\": { \n    \"IncludeScopes\": false, \n    \"LogLevel\": { \n      \"Default\": \"Warning\" \n    } \n  }, \n\n  \"ConnectionStrings\": { \n    \"LocalDBConnection\": \"Server=(localdb)\\mssqllocaldb; \n     Database=WebResearch;  \n     Trusted_Connection=True\" \n  } \n} \n```", "```cs\npublic class Research \n{ \n    public int Id { get; set; } \n    public string Url { get; set; } \n    public DateTime DateSaved { get; set; } \n    public string Note { get; set; } \n    public bool Read { get; set; } \n} \n```", "```cs\n    Add-Migration AddReseachRead\n```", "```cs\nprotected override void Up(MigrationBuilder migrationBuilder) \n{ \n    migrationBuilder.AddColumn<bool>( \n        name: \"Read\", \n        table: \"ResearchLinks\", \n        nullable: true, \n        defaultValue: false); \n} \n```", "```cs\nmigrationBuilder.Sql( \n    @\" \n        UPDATE Research \n        SET Read = 'true'; \n    \"); \n```", "```cs\n    Update-Database\n```", "```cs\npublic static void Initialize(ResearchContext context) \n```", "```cs\ncontext.Database.EnsureCreated(); \n```", "```cs\nif (!context.ResearchLinks.Any()) \n```", "```cs\nvar researchLinks = new Research[] \n{ \n new Research{Url=\"www.google.com\", DateSaved=DateTime.Now, \n  Note=\"Generated Data\", Read=false}, \n       new Research{Url=\"www.twitter.com\", DateSaved=DateTime.Now,  \n  Note=\"Generated Data\", Read=false}, \n       new Research{Url=\"www.facebook.com\", DateSaved=DateTime.Now, \n  Note=\"Generated Data\", Read=false}, \n       new Research{Url=\"www.packtpub.com\", DateSaved=DateTime.Now, \n  Note=\"Generated Data\", Read=false}, \n       new Research{Url=\"www.linkedin.com\", DateSaved=DateTime.Now,  \n  Note=\"Generated Data\", Read=false}, \n}; \n```", "```cs\nforeach (Research research in researchLinks) \n{ \n context.ResearchLinks.Add(research); \n} \n context.SaveChanges();\n```", "```cs\nusing System; \nusing System.Linq; \nusing WebResearch.Models; \n\nnamespace WebResearch.Data \n{ \n    public static class DbInitializer \n    { \n        public static void Initialize(ResearchContext context) \n        { \n            context.Database.EnsureCreated(); \n\n            if (!context.ResearchLinks.Any()) \n            { \n                var researchLinks = new Research[] \n                { \n                    new Research{Url=\"www.google.com\", \n                     DateSaved=DateTime.Now, Note=\"Generated Data\", \n                      Read=false}, \n                    new Research{Url=\"www.twitter.com\", \n                      DateSaved=DateTime.Now, Note=\"Generated\n                      Data\", \n                       Read=false}, \n                    new Research{Url=\"www.facebook.com\", \n                     DateSaved=DateTime.Now, Note=\"Generated Data\", \n                      Read=false}, \n                    new Research{Url=\"www.packtpub.com\", \n                     DateSaved=DateTime.Now, Note=\"Generated Data\", \n                      Read=false}, \n                    new Research{Url=\"www.linkedin.com\", \n                     DateSaved=DateTime.Now, Note=\"Generated Data\", \n                      Read=false}, \n                }; \n                foreach (Research research in researchLinks) \n                { \n                    context.ResearchLinks.Add(research); \n                } \n                context.SaveChanges(); \n            } \n        } \n    } \n} \n```", "```cs\napp.UseMvc(routes => \n{ \n    routes.MapRoute( \n        name: \"default\", \n        template: \"{controller=Researches}/{action=Index}/{id?}\"); \n});\n```", "```cs\npublic static void Main(string[] args)\n{\n  var host = BuildWebHost(args);\n  using (var scope = host.Services.CreateScope())\n  {\n    var services = scope.ServiceProvider;\n    try\n    {\n      var context = services.GetRequiredService<ResearchContext>();\n      DbInitializer.Initialize(context);\n    }\n    catch (Exception ex)\n    {\n      var logger = services.GetRequiredService<ILogger<Program>>\n       ();logger.LogError(ex, \"An error occurred while seeding the \n        database.\");\n    }\n  }host.Run();\n}\n```", "```cs\n   Publish Succeeded.\n   Web App was published successfully \n   http://webresearch20180215095720.azurewebsites.net/\n   ========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped \n   ==========\n   ========== Publish: 1 succeeded, 0 failed, 0 skipped ==========\n\n```"]