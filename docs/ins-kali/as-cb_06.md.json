["```kt\n    static final int REQUEST_IMAGE_CAPTURE = 1;\n    private void takePicture() {\n      Intent captureIntent = new  \n        Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n      if (captureIntent.resolveActivity(  \n       getPackageManager()) != null) {\n        startActivityForResult(captureIntent,   \n           REQUEST_IMAGE_CAPTURE);\n       }\n    }\n    ```", "```kt\n    @Override \n      protected void onActivityResult(int requestCode, int resultCode, Intent data) { \n       if (requestCode == REQUEST_IMAGE_CAPTURE &&resultCode == RESULT_OK) {     \n            Bundle extras = data.getExtras();\n            Bitmap thumbBitmap = (Bitmap)  \n             extras.get(\"data\");\");\n             ((ImageView)findViewById(R.id.image) \n             ).setImageBitmap(thumbBitmap);\n        }\n    }\n    ```", "```kt\n    manager.openCamera(mCameraId, mStateCallback, mBackgroundHandler);\n    ```", "```kt\n    mCaptureSession.capture(mPreviewRequestBuilder.build(),  \n     mCaptureCallback, mBackgroundHandler);\n    ```", "```kt\n    CameraCaptureSession.CaptureCallback CaptureCallback= new CameraCaptureSession.CaptureCallback() {\n        @Override\n        public void onCaptureCompleted \n         (CameraCaptureSession session, \n             CaptureRequest request, TotalCaptureResult  \n              result) {\n               showToast(\"Saved: \" + mFile);\n              unlockFocus();\n           }\n    };\n    ```", "```kt\n    mPreviewRequestBuilder.set(\n     CaptureRequest.CONTROL_EFFECT_MODE,  \n      CaptureRequest.CONTROL_EFFECT_MODE_SEPIA);\n    ```", "```kt\n    captureBuilder.set(   \n     CaptureRequest.CONTROL_EFFECT_MODE,  \n      CaptureRequest.CONTROL_EFFECT_MODE_SEPIA);\n    ```", "```kt\n    compile 'com.facebook.android:facebook-android-sdk:4.1.0'\n\n    ```", "```kt\n    keytool -exportcert -alias androiddebugkey -keystore ~/.android/debug.keystore | openssl sha1 -binary | openssl base64\n    ```", "```kt\n    FacebookSdk.sdkInitialize(getApplicationContext());\n    ```", "```kt\n    <string name=\"facebook_app_id\">Your facebook app id</string>\n    ```", "```kt\n    <meta-data android:name=\"com.facebook.sdk.ApplicationId\" android:value=\"@string/facebook_app_id\"/>\n    ```", "```kt\n    <activity android:name=\"com.facebook.FacebookActivity\"android:configChanges=\"keyboard|keyboardHidden|screenLayout|   \n       screenSize|orientation\"\n      android:theme=\"@android:style/Theme.Translucent.\n       NoTitleBar\"\n      android:label=\"@string/app_name\" />\n    ```", "```kt\n    sharePictureOnFacebook();\n    ```", "```kt\n    <provider android:authorities=\"com.facebook.app. \n      FacebookContentProvider000000000000\"android:name=\"com.facebook.FacebookContentProvider\"android:exported=\"true\" />\n    ```", "```kt\n    private void sharePictureOnFacebook(){\n        final BitmapFactory.Options options = new  \n         BitmapFactory.Options();\n        options.inJustDecodeBounds = false;\n        options.inSampleSize = 4;\n        Bitmap bitmap =  \n         BitmapFactory.decodeFile(mFile.getPath(), options); \n        SharePhoto photo = new  \n        SharePhoto.Builder().setBitmap(bitmap).build();\n        SharePhotoContent content = new  \n        SharePhotoContent.Builder().addPhoto(photo).build();\n        ShareDialog.show(getActivity(), content);\n    }\n    ```", "```kt\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        mFile = new \n        File(getActivity().getExternalFilesDir(null),  \n          \"pic\"+ new Date().getTime()+\".jpg\");\n    }\n    ```", "```kt\n    private int getRotationFromMetaData(){\n       try {\n          ExifInterface exif = new \n          ExifInterface(mFile.getAbsolutePath());\n          int orientation = exif.getAttributeInt(\n           ExifInterface.TAG_ORIENTATION,\n            ExifInterface.ORIENTATION_NORMAL);\n          switch (orientation) {\n    \t\t  case ExifInterface.ORIENTATION_ROTATE_270:\n                    return 270;\n              case ExifInterface.ORIENTATION_ROTATE_180:\n                    return 180;case ExifInterface.ORIENTATION_ROTATE_90:\n                    return 90;\n              default:\n                    return 0;\n          }\n       }\n       catch (IOException ex){\n           return 0;\n       }\n    }\n    ```", "```kt\n    private Bitmap rotateCapturedImageIfNeeded(Bitmap bitmap){\n        int rotate = getRotationFromMetaData();\n        Matrix matrix = new Matrix();\n        matrix.postRotate(rotate);\n        bitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(),\n         bitmap.getHeight(), matrix, true);\n        Bitmap mutableBitmap = bitmap.copy(Bitmap.Config.ARGB_8888,  \n         true);\n       return mutableBitmap;\n    }\n    ```", "```kt\n    bitmap = rotateCapturedImageIfNeeded(bitmap);\n\n    ```"]