["```\n**$ sudo apt-get -y install build-essential python-dev \\**\n **libevent-dev python-pip liblzma-dev swig libssl-dev**\n\n```", "```\n**$ sudo pip install docker-registry**\n\n```", "```\n**$ cd /usr/local/lib/python2.7/dist-packages/config/**\n\n```", "```\n**$ sudo cp config_sample.yml config.yml**\n\n```", "```\n**$ sudo mkdir /var/docker-registry**\n\n```", "```\nsqlalchemy_index_database:\n    _env:SQLALCHEMY_INDEX_DATABASE:sqlite:////var/docker-registry/docker-registry.db\n```", "```\nlocal: &local\n    storage: local\n    storage_path: _env:STORAGE_PATH:/var/docker-registry/registry\n```", "```\n**$ sudo gunicorn --access-logfile - --debug -k gevent -b \\**\n **0.0.0.0:5000 -w 1 docker_registry.wsgi:application**\n**01/Dec/2014:04:59:23 +0000 WARNING: Cache storage disabled!**\n**01/Dec/2014:04:59:23 +0000 WARNING: LRU cache disabled!**\n**01/Dec/2014:04:59:23 +0000 DEBUG: Will return docker-registry.drivers.file.Storage**\n\n```", "```\n    **$ sudo mkdir -p /var/log/docker-registry**\n\n    ```", "```\n    **$ sudo vi /etc/init/docker-registry.conf**\n\n    ```", "```\n    description \"Docker Registry\"\n    start on runlevel [2345]\n    stop on runlevel [016]\n    respawn\n    respawn limit 10 5\n    script\n    exec gunicorn --access-logfile /var/log/docker-registry/access.log --error-logfile /var/log/docker-registry/server.log -k gevent --max-requests 100 --graceful-timeout 3600 -t 3600 -b localhost:5000 -w 8 docker_registry.wsgi:application\n    end script\n    ```", "```\n    **$ sudo service docker-registry start**\n    **docker-registry start/running, process 25760**\n\n    ```", "```\n    **$ sudo apt-get -y install nginx apache2-utils**\n\n    ```", "```\n    **$ sudo htpasswd -c /etc/nginx/docker-registry.htpasswd vinod1**\n\n    ```", "```\n    **$ sudo vi /etc/nginx/sites-available/docker-registry**\n\n    ```", "```\n    upstream docker-registry {\n     server localhost:5000;\n    }\n    server {\n     listen 8080;\n     server_name my.docker.registry.com;\n     # ssl on;\n     # ssl_certificate /etc/ssl/certs/docker-registry;\n     # ssl_certificate_key /etc/ssl/private/docker-registry;\n     proxy_set_header Host       $http_host;   # required for Docker client sake\n     proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP\n     client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads\n     # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)\n     chunked_transfer_encoding on;\n     location / {\n         # let Nginx know about our auth file\n         auth_basic              \"Restricted\";\n         auth_basic_user_file    docker-registry.htpasswd;\n         proxy_pass http://docker-registry;\n     } location /_ping {\n         auth_basic off;\n         proxy_pass http://docker-registry;\n     }   location /v1/_ping {\n         auth_basic off;\n         proxy_pass http://docker-registry;\n     }\n    }\n    ```", "```\n    **$ sudo ln -s /etc/nginx/sites-available/docker-registry  \\**\n     **/etc/nginx/sites-enabled/docker-registry**\n    **$ sudo service nginx restart**\n\n    ```", "```\n    **$ sudo curl localhost:5000**\n    **\"\\\"docker-registry server\\\"\"**\n\n    ```", "```\n**$ curl localhost:8080**\n\n```", "```\n<html>\n<head><title>401 Authorization Required</title></head>\n<body bgcolor=\"white\">\n<center><h1>401 Authorization Required</h1></center>\n<hr><center>nginx/1.4.6 (Ubuntu)</center>\n</body>\n</html>\n```", "```\n**$ curl vinod1:vinod1@localhost:8080**\n**\"\\\"docker-registry server\\\"\"ubuntu@ip-172-31-21-44:~$**\n\n```", "```\n**$sudo vi /etc/nginx/sites-available/docker-registry**\n\n```", "```\nserver {\n listen 8080;\n server_name mydomain.com;\n ssl on;\n ssl_certificate /etc/ssl/certs/docker-registry;\n ssl_certificate_key /etc/ssl/private/docker-registry;\n```", "```\n**$ sudo mkdir ~/certs**\n**$ sudo cd ~/certs**\n\n```", "```\n**$ sudo openssl genrsa -out devdockerCA.key 2048**\n**Generating RSA private key, 2048 bit long modulus**\n**..........+++**\n**....................+++**\n**e is 65537 (0x10001)**\n\n```", "```\n**$ sudo openssl req -x509 -new -nodes -key devdockerCA.key -days  \\**\n **10000 -out devdockerCA.crt**\n\n```", "```\n**$ sudo openssl genrsa -out dev-docker-registry.com.key 2048**\n\n```", "```\n**$ sudo openssl req -new -key dev-docker-registry.com.key -out \\**\n **dev-docker-registry.com.csr**\n\n```", "```\n**Country Name (2 letter code) [AU]:**\n**State or Province Name (full name) [Some-State]:**\n**Locality Name (eg, city) []:**\n**Organization Name (eg, company) [Internet Widgits Pty Ltd]:**\n**Organizational Unit Name (eg, section) []:**\n**Common Name (e.g. server FQDN or YOUR name) []:mydomain.com**\n**Email Address []:**\n**Please enter the following 'extra' attributes**\n**to be sent with your certificate request**\n**A challenge password []:**\n**An optional company name []:**\n\n```", "```\n**$ sudo openssl x509 -req -in dev-docker-registry.com.csr -CA  \\**\n **devdockerCA.crt -CAkey devdockerCA.key -CAcreateserial -out \\**\n **dev-docker-registry.com.crt -days 10000**\n\n```", "```\n**$ sudo cp dev-docker-registry.com.crt /etc/ssl/certs/docker-registry**\n**$ sudo chmod 777 /etc/ssl/certs/docker-registry**\n**$ sudo cp dev-docker-registry.com.key /etc/ssl/private/docker-registry**\n**$ sudo chmod 777 /etc/ssl/private/docker-registry**\n\n```", "```\n**$ sudo mkdir /usr/local/share/ca-certificates/docker-dev-cert**\n**$ sudo cp devdockerCA.crt /usr/local/share/ca-certificates/docker-dev-cert**\n**$ sudo update-ca-certificates**\n**Updating certificates in /etc/ssl/certs... 1 added, 0 removed; done.**\n**Running hooks in /etc/ca-certificates/updated....done.**\n**ubuntu@ip-172-31-21-44:~/certs$**\n\n```", "```\n**$ sudo service nginx restart**\n\n```", "```\n**172.31.24.44 mydomain.com**\n\n```", "```\n**$ sudo curl https://vinod1:vinod1@ mydomain.com:8080**\n**\"\\\"docker-registry server\\\"\"ubuntu@ip-172-31-21-44:~$**\n\n```", "```\n**\"docker-registry server\"**\n\n```", "```\n**$ sudo docker run -t -i ubuntu /bin/bash**\n**root@9593c56f9e70:/# echo \"TEST\" >/mydockerimage**\n**root@9593c56f9e70:/# exit**\n**$ sudo docker commit $(sudo docker ps -lq) vinod-image**\n**e17b685ee6987bb0cd01b89d9edf81a9fc0a7ad565a7e85650c41fc7e5c0cf9e**\n\n```", "```\n**$ sudo docker --insecure-registry=mydomain.com:8080 \\**\n **login https://mydomain.com:8080**\n**Username: vinod1**\n**Password:**\n**Email: vinod.puchi@gmail.com**\n**Login Succeeded**\n\n```", "```\n**$ sudo docker tag vinod-image mydomain.com:8080/vinod-image**\n\n```", "```\n**$ sudo docker push \\**\n**mydomain.com:8080/vinod-image**\n**The push refers to a repository [mydomain.com**\n**:8080/vinod-image] (len: 1)**\n**Sending image list**\n**Pushing repository mydomain.com:8080/vi**\n**nod-image (1 tags)**\n**511136ea3c5a: Image successfully pushed**\n**5bc37dc2dfba: Image successfully pushed**\n**----------------------------------------------------**\n**e17b685ee698: Image successfully pushed**\n**Pushing tag for rev [e17b685ee698] on {https://mydomain.com**\n**:8080/v1/repositories/vinod-image/tags/latest}**\n**$**\n\n```", "```\n**$ sudo docker pull mydomain.com:8080/vinod-image**\n**Pulling repository mydomain.com:8080/vi**\n**nod-image**\n**e17b685ee698: Pulling image (latest) from mydomain.com**\n**17b685ee698: Download complete**\n**dc07507cef42: Download complete**\n**86ce37374f40: Download complete**\n**Status: Downloaded newer image for mydomain.com:8080/vinod-image:latest**\n**$**\n\n```"]