- en: Chapter 12. Creating Mobile Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章。创建移动应用程序
- en: The ArcGIS Server API for JavaScript provides support for mobile platforms.
    Support is currently provided for iOS, Android, and BlackBerry operating systems.
    The API is integrated with `dojox/mobile`. In this chapter, you'll learn about
    the compact build of the API that makes web mapping applications possible through
    WebKit browsers as well as the built-in gesture support. Keep in mind that this
    is not the same as the ArcGIS API for iOS or Android, which is what you'd use
    to build native applications that can be made available through an app store.
    JavaScript API applications are rendered through the WebKit browser that is part
    of the mobile device.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript的ArcGIS Server API提供对移动平台的支持。目前支持iOS、Android和BlackBerry操作系统。API与`dojox/mobile`集成。在本章中，您将了解使Web映射应用程序通过WebKit浏览器以及内置手势支持成为可能的API的紧凑版。请记住，这与ArcGIS
    API for iOS或Android不同，后者用于构建可以通过应用商店提供的本机应用程序。JavaScript API应用程序通过移动设备的WebKit浏览器呈现。
- en: We'll also cover the Geolocation API and how it can be integrated into your
    ArcGIS Server applications. The Geolocation API is a part of HTML5 and is used
    to get the location of a mobile device. Most mobile browsers support the Geolocation
    API specification that provides scripted access to geographical location information
    associated with a hosting device.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将介绍地理位置API以及如何将其集成到您的ArcGIS Server应用程序中。地理位置API是HTML5的一部分，用于获取移动设备的位置。大多数移动浏览器都支持地理位置API规范，该规范提供了与托管设备关联的地理位置信息的脚本访问。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: ArcGIS API for JavaScript – a compact build
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript的ArcGIS API – 紧凑版
- en: Setting the viewport scale
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置视口比例
- en: Time to practice with the compact build
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习紧凑版的时间
- en: Integrating the Geolocation API
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成地理位置API
- en: Time to practice with the Geolocation API
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习地理位置API的时间
- en: ArcGIS API for JavaScript – a compact build
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript的ArcGIS API – 紧凑版
- en: 'The ArcGIS API for JavaScript has a compact build that can be used to limit
    the footprint of the API, resulting in quicker downloads for mobile devices. This
    smaller footprint is a great choice for mobile applications, including the iPhone
    and iPad. There are two primary differences between the standard and compact builds
    of the API:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript的ArcGIS API有一个紧凑版，可用于限制API的占用空间，从而使移动设备的下载速度更快。这种较小的占用空间对于移动应用程序（包括iPhone和iPad）是一个很好的选择。API标准版和紧凑版之间有两个主要区别：
- en: The first difference is that the compact build only loads objects that are needed
    for your application. For example, if you don't need a `Calendar` widget, then
    it's not loaded.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个区别是紧凑版仅加载应用程序所需的对象。例如，如果您不需要`Calendar`小部件，则不会加载它。
- en: The second difference is that the compact build only loads 32 code modules instead
    of the 80 modules loaded with the standard build. If you need to use a code module
    that is not downloaded as part of the compact build, then you can use the `require()`
    function to load the specific module that you use.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个区别是紧凑版仅加载32个代码模块，而标准版加载80个模块。如果您需要使用紧凑版未下载的代码模块，则可以使用`require()`函数加载您使用的特定模块。
- en: Referencing the compact build is as simple as adding the word `compact` to the
    end of your reference to the API. You will see an example later. Using the API
    in a mobile application isn't any different from the techniques you've learned
    for creating web applications. However, you will need to learn some new techniques
    for creating the user interface for mobile applications. There are a number of
    good JavaScript mobile frameworks available for accomplishing this task, including
    Dojox Mobile and jQuery Mobile. The mobile frameworks style the web content to
    make it look like a mobile application. Safari browsers look like an iPhone application
    and Android browsers look like an Android application. Creating mobile user interfaces
    is beyond the scope of this text but there are many good resources available in
    print and online. In the following code example, you will see how to add a reference
    to the compact build of the ArcGIS API for JavaScript. Note the inclusion of the
    compact keyword at the end of the API.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 引用紧凑版就像在对API的引用末尾添加单词`compact`一样简单。稍后您将看到一个例子。在移动应用程序中使用API与您学习创建Web应用程序的技术没有任何不同。但是，您需要学习一些新的技术来创建移动应用程序的用户界面。有许多用于完成此任务的良好JavaScript移动框架，包括Dojox
    Mobile和jQuery Mobile。移动框架会对Web内容进行样式处理，使其看起来像移动应用程序。Safari浏览器看起来像iPhone应用程序，而Android浏览器看起来像Android应用程序。创建移动用户界面超出了本文的范围，但印刷和在线都有许多良好的资源可用。在以下代码示例中，您将看到如何添加对JavaScript的ArcGIS
    API紧凑版的引用。请注意在API末尾包含紧凑关键字。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Setting the viewport scale
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置视口比例
- en: 'You will want to use the `viewport <meta>` tag to set some initial display
    characteristics for your application. The `<meta>` tag should be included in the
    `<head>` section of your web page. A value of `1.0` for the initial scale is recommended
    and will fill the entire viewport of the screen. Values can be set between `0`
    and `1.0`. If you don''t set a width, your mobile browser will use `device-width`
    when in portrait mode. If you don''t set a height, the browser will use `device-height`
    when in landscape mode:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您将希望使用`viewport <meta>`标签为应用程序设置一些初始显示特性。`<meta>`标签应包含在网页的`<head>`部分中。建议初始比例为`1.0`，将填充整个屏幕的视口。值可以在`0`和`1.0`之间设置。如果不设置宽度，则在纵向模式下，移动浏览器将使用`device-width`。如果不设置高度，则在横向模式下，浏览器将使用`device-height`：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Time to practice with the compact build
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习紧凑版的时间
- en: In this exercise, you will build the most basic mobile mapping application possible.
    We're simply going to use the compact build of the ArcGIS Server API for JavaScript
    to create a mapping application centered on the town of Banff, Alberta, Canada.
    The application won't be able to do anything other than zoom and pan. There won't
    be any sort of user interface beyond just the map. The goal is just to illustrate
    the basic structure of a mobile application built with the API for JavaScript.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您将构建可能的最基本的移动地图应用程序。我们只是简单地使用ArcGIS Server API for JavaScript的紧凑版本来创建一个以加拿大艾伯塔省班夫镇为中心的地图应用程序。该应用程序除了缩放和平移之外将无法执行任何其他操作。除了地图之外，不会有任何用户界面。目标只是为了说明使用API
    for JavaScript构建的移动应用程序的基本结构。
- en: This exercise will be a little different from the exercises you've worked on
    in previous chapters. You won't use the ArcGIS API for JavaScript Sandbox. Instead,
    you'll write your code in a text editor (I recommend Notepad++) and test using
    a mobile emulator.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习将与您在之前章节中进行的练习有些不同。您将不会使用ArcGIS API for JavaScript沙盒。相反，您将在文本编辑器中编写代码（我推荐Notepad++），并使用移动模拟器进行测试。
- en: Before starting this exercise, you'll want to make sure you have access to a
    web server. If you don't have access to a web server or one that isn't already
    installed on your computer, you can download and install the open source web server,
    Apache ([http://httpd.apache.org/download.cgi](http://httpd.apache.org/download.cgi)).
    Microsoft IIS is another commonly used web server and there are many others that
    you can use as well. For the purposes of this exercise, I will assume that you
    are using the Apache web server.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开始这个练习之前，您需要确保您可以访问一个Web服务器。如果您没有访问Web服务器，或者您的计算机上尚未安装Web服务器，您可以下载并安装开源Web服务器Apache（[http://httpd.apache.org/download.cgi](http://httpd.apache.org/download.cgi)）。Microsoft
    IIS是另一个常用的Web服务器，还有许多其他可以使用的Web服务器。在本练习中，我将假设您正在使用Apache Web服务器。
- en: A web server installed on your local computer will be referred to through the
    URL `http://localhost`, which is used to access the web server. This points to
    the `htdocs` folder under `C:\Program Files\Apache Software Foundation\Apache2.2`
    if you've installed Apache on a Windows platform.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的本地计算机上安装的Web服务器将通过URL `http://localhost`进行引用，用于访问Web服务器。如果您在Windows平台上安装了Apache，则此URL指向`C:\Program
    Files\Apache Software Foundation\Apache2.2`下的`htdocs`文件夹。
- en: In your `ArcGISJavaScriptAPI` folder, you'll find a file called `mobile_map.html`.
    I have prewritten some of the code that you will use in this step, so that you
    can focus on adding referencing to the compact build as well as some other items
    related to mobile development. Use this file as your starting point and copy it
    to the root directory of your web server (`C:\Program Files\Apache Software Foundation\Apache2.2\htdocs`
    if you're using Apache on Windows).
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的`ArcGISJavaScriptAPI`文件夹中，您会找到一个名为`mobile_map.html`的文件。我已经预先编写了一些您将在此步骤中使用的代码，这样您就可以专注于添加对紧凑版本的引用以及与移动开发相关的其他项目。将此文件用作起点，并将其复制到您的Web服务器的根目录下（如果您在Windows上使用Apache，则为`C:\Program
    Files\Apache Software Foundation\Apache2.2\htdocs`）。
- en: Open `mobile_map.html` in your favorite text editor. I recommend Notepad++,
    but you can use any text editor.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您喜欢的文本编辑器中打开`mobile_map.html`。我推荐Notepad++，但您可以使用任何文本编辑器。
- en: 'Add a reference to the compact version of the API as well as the Esri stylesheet.
    Add the following highlighted lines of code to your application:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对API的紧凑版本以及Esri样式表的引用。将以下突出显示的代码行添加到您的应用程序中：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will want to use the `viewport <meta>` tag attribute to set some initial
    display characteristics for your application. A value of `1.0` for the initial
    scale is recommended and will fill the entire viewport of the screen. Values can
    be set between `0` and `1.0`. If you don''t set a width, mobile browsers will
    use `device-width` when in portrait mode, and if you don''t set a height, they
    will use `device-height` when in landscape mode. Add the following line of code
    under the `<head>` tag at the start of the code:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将需要使用`viewport <meta>`标签属性来为您的应用程序设置一些初始的显示特性。建议初始缩放值为`1.0`，将填充整个屏幕的视口。值可以在`0`和`1.0`之间设置。如果您不设置宽度，移动浏览器在纵向模式下将使用`device-width`，如果您不设置高度，它们在横向模式下将使用`device-height`。在代码开头的`<head>`标签下添加以下代码行：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the `<script>` tag, add the `require()` function seen highlighted in the
    following code snippet as well as the references that we''ll use in this exercise:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`<script>`标签中，添加在以下代码片段中突出显示的`require()`函数以及我们将在本练习中使用的引用：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As is the case with a traditional web mapping application built with the API
    for JavaScript, you will create a `<div>` tag to hold the map for your mobile
    application. With a mobile application, you will want to style the map so that
    it takes up the entire viewport of the mobile application. This is accomplished
    by setting the width and height to `100%`, respectively. Add the `<div>` map container
    to your application. Make sure that you set the style of the width and height
    to `100%`:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与使用API for JavaScript构建的传统Web地图应用程序一样，您将创建一个`<div>`标签来容纳移动应用程序的地图。对于移动应用程序，您将希望样式化地图，使其占据移动应用程序的整个视口。通过分别将宽度和高度设置为`100%`来实现这一点。将`<div>`地图容器添加到您的应用程序中。确保将宽度和高度的样式设置为`100%`：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Mobile devices can display their viewport in the standard or landscape mode
    simply by rotating the device. Your application will need to deal with these events
    as and when they occur. Add the `onorientationchange()` event to the `<body>`
    tag. The `onorientationchange()` event references a JavaScript function called
    `orientationChanged()`, which we have not yet defined. We''ll do that in the next
    step:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移动设备可以通过旋转设备简单地在标准模式或横向模式下显示其视口。您的应用程序将需要在发生这些事件时处理这些事件。在`<body>`标签中添加`onorientationchange()`事件。`onorientationchange()`事件引用了一个名为`orientationChanged()`的JavaScript函数，我们还没有定义。我们将在下一步中进行定义：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create a new `Map` object, set the basemap, and center the map as well as the
    zoom scale level:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`Map`对象，设置底图，并将地图居中以及缩放比例级别：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Create the `orientationChanged()` JavaScript function, as seen in the following
    code. This function can be added anywhere inside the `<script>` tag:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`orientationChanged()`JavaScript函数，如下面的代码所示。此函数可以添加到`<script>`标记的任何位置：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Save the file.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Open a web browser and load an emulator. I recommend [iphone4simulator.com](http://iphone4simulator.com)
    but there are many others that you can use. These sites emulate how a website
    or application will look and behave.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Web浏览器并加载模拟器。我推荐[iphone4simulator.com](http://iphone4simulator.com)，但还有许多其他可以使用的。这些网站模拟网站或应用程序的外观和行为。
- en: Note
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You are also welcome to upload these exercise files to a web server that is
    outside the firewall if you'd prefer to view them on an actual mobile device rather
    than an emulator.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，也可以将这些练习文件上传到防火墙外的Web服务器上，以便在实际移动设备而不是模拟器上查看它们。
- en: If you are using Apache, then you've most likely saved the file to the root
    location of the web server, which is `C:\Program Files\Apache Software Foundation\Apache2.2\htdocs`.
    The file can then be accessed through a web browser using the URL `http://localhost/mobile_map.html`.
    Type `http://localhost/mobile_map.html` in the emulator address bar, as seen in
    the following screenshot. You should see a map appear.![Time to practice with
    the compact build](graphics/7965_12_4.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您使用Apache，那么您很可能已将文件保存在Web服务器的根位置，即`C:\Program Files\Apache Software Foundation\Apache2.2\htdocs`。然后可以通过URL`http://localhost/mobile_map.html`在Web浏览器中访问该文件。在模拟器地址栏中输入`http://localhost/mobile_map.html`，如下面的屏幕截图所示。您应该会看到地图出现。![练习紧凑版本构建](graphics/7965_12_4.jpg)
- en: The compact version of the API for JavaScript creates a *minified* version of
    the zoom scale slider. This is about as simple as a mapping application can get
    but hopefully it illustrates the basic characteristics of building a mobile mapping
    application.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript API的紧凑版本创建了缩放比例滑块的*压缩*版本。这是一个简单的地图应用程序，但希望它能说明构建移动地图应用程序的基本特征。
- en: You can use the zoom slider to zoom in and out and keep in mind that the ArcGIS
    Server API for JavaScript also supports gestures, so you can use a pinch gesture
    to zoom in and out as well. However, keep in mind that this will not work in the
    emulator. Use the zoom in and zoom out buttons on the interface for the application
    to zoom in and out as seen in the following screenshot:![Time to practice with
    the compact build](graphics/7965_12_5.jpg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用缩放滑块放大和缩小，并记住ArcGIS Server JavaScript API还支持手势，因此您也可以使用捏合手势放大和缩小。但是，请记住这在模拟器中不起作用。使用应用程序界面上的放大和缩小按钮进行放大和缩小，如下面的屏幕截图所示：![练习紧凑版本构建](graphics/7965_12_5.jpg)
- en: You may want to review the solution file (`mobile_map_solution.html`) in your
    `ArcGISJavaScriptAPI` folder to verify that your code has been written correctly.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能需要查看解决方案文件（`mobile_map_solution.html`）在您的`ArcGISJavaScriptAPI`文件夹中，以验证您的代码是否已正确编写。
- en: Integrating the Geolocation API
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成地理位置API
- en: The Geolocation API can be integrated with your ArcGIS Server applications to
    get the location of a mobile device. It can also be used to get the location from
    a web-based application, but this isn't nearly as accurate as it uses the IP address
    rather than a GPS or cell tower triangulation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 地理位置API可以与您的ArcGIS Server应用程序集成，以获取移动设备的位置。它也可以用于从基于Web的应用程序获取位置，但这并不像使用IP地址而不是GPS或基站三角测量那样准确。
- en: 'This API has built-in security that requires explicit permission from the end
    user before this functionality can be used in an application. Mobile and web applications
    will both display a prompt that requests permission to obtain the current location
    of a device. This prompt will appear similar to what is shown in the following
    screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此API具有内置安全性，需要在应用程序中使用此功能之前从最终用户获得明确许可。移动和Web应用程序都将显示一个提示，请求权限获取设备的当前位置。此提示将类似于以下屏幕截图所示：
- en: '![Integrating the Geolocation API](graphics/7965_12_1.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![集成地理位置API](graphics/7965_12_1.jpg)'
- en: Most browsers support the Geolocation API specification, which provides scripted
    access to geographical location information associated with a hosting device.
    The primary purpose of the Geolocation API is to identify the location of a mobile
    device. There are various ways in which a mobile device can be located, including
    cell tower triangulation, IP address, and GPS location. The `Geolocation.getCurrentPosition()`
    method returns the current location of the mobile device. You could easily use
    this API to place a point on the mapping application that corresponds to the current
    user location. The `Geolocation.watchPosition()` method can be used to track a
    location as it changes with a callback method being fired each time the position
    changes. So, if your application needs to be able to track the location of a device
    over time, then you'll want to use `watchPosition()` instead of `getCurrentPosition()`,
    which simply gets the location at a single point in time.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数浏览器都支持地理位置API规范，该规范提供了与托管设备关联的地理位置信息的脚本访问。地理位置API的主要目的是识别移动设备的位置。移动设备可以通过多种方式定位，包括基站三角测量、IP地址和GPS位置。`Geolocation.getCurrentPosition()`方法返回移动设备的当前位置。您可以轻松使用此API在地图应用程序上放置与当前用户位置对应的点。`Geolocation.watchPosition()`方法可用于跟踪位置随着位置变化而变化，每次位置变化时都会触发回调方法。因此，如果您的应用程序需要能够随时间跟踪设备的位置，则应使用`watchPosition()`而不是`getCurrentPosition()`，后者仅在单个时间点获取位置。
- en: The following code snippet contains a simple example detailing the basic use
    of a Geolocation API. The first thing we do is check whether the browser supports
    the Geolocation API. This is done with the `navigator.geolocation` property, which
    returns a value of `true` or `false`. Generally, this will prompt the user to
    allow the application to collect the current location and also make sure that
    the browser supports Geolocation.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段包含了一个简单的示例，详细说明了 Geolocation API 的基本用法。我们首先要做的是检查浏览器是否支持 Geolocation API。这是通过
    `navigator.geolocation` 属性完成的，它返回一个值为 `true` 或 `false`。通常，这将提示用户允许应用程序收集当前位置，并确保浏览器支持
    Geolocation。
- en: Note
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To see if your browser supports Geolocation or any other HTML5 feature, go to
    [http://caniuse.com/](http://caniuse.com/).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看你的浏览器是否支持 Geolocation 或任何其他 HTML5 功能，请转到 [http://caniuse.com/](http://caniuse.com/)。
- en: 'If the browser supports the Geolocation API and the end user gives it permission
    to collect the location, then we call the `geolocation.getCurrentPosition()` method.
    The first parameter passed to this method indicates a success callback function,
    which will be executed if the device is located successfully. Similarly, an error
    callback function can also be provided (`locationError`). A `Position` object
    is passed to the success callback function. This `Position` object can then be
    examined to obtain the latitude/longitude coordinates of the location. That''s
    what we''ve done in the `zoomToLocation()` function which accepts a `Position`
    object as the only parameter. This function then obtains the latitude/longitude
    coordinates and plots the point on the map:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果浏览器支持 Geolocation API 并且最终用户允许其收集位置，那么我们就调用 `geolocation.getCurrentPosition()`
    方法。传递给该方法的第一个参数表示成功的回调函数，如果设备成功定位，则将执行该函数。类似地，也可以提供一个错误的回调函数（`locationError`）。`Position`
    对象将传递给成功的回调函数。然后可以检查这个 `Position` 对象以获取位置的纬度/经度坐标。这就是我们在 `zoomToLocation()` 函数中所做的，它接受
    `Position` 对象作为唯一参数。然后该函数获取纬度/经度坐标并在地图上绘制点：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Time to practice with the Geolocation API
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习使用 Geolocation API 的时间
- en: In this exercise, you will learn how to integrate the Geolocation API into an
    ArcGIS Server API for JavaScript application.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将学习如何将 Geolocation API 集成到 ArcGIS Server API for JavaScript 应用程序中。
- en: Open the JavaScript Sandbox at [http://developers.ArcGIS.com/en/javascript/sandbox/sandbox.html](http://developers.ArcGIS.com/en/javascript/sandbox/sandbox.html).
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 [http://developers.ArcGIS.com/en/javascript/sandbox/sandbox.html](http://developers.ArcGIS.com/en/javascript/sandbox/sandbox.html)
    打开 JavaScript 沙盒。
- en: 'Remove the JavaScript content from the `<script>` tag that I have highlighted
    in the following code snippet:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我在以下代码片段中突出显示的 `<script>` 标签中删除 JavaScript 内容：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the following references for the objects that we''ll use in this exercise:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加我们将在本练习中使用的对象的以下引用：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create a new `Map` object centered on San Diego, CA, with a basemap layer of
    the streets. This will serve as the default map and zoom extent if the browser
    you are using doesn''t support the Geolocation API or if permission to access
    the current device location is not provided:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个以加利福尼亚州圣迭戈为中心的新 `Map` 对象，带有街道作为底图图层。如果你正在使用的浏览器不支持 Geolocation API，或者没有提供访问当前设备位置的权限，这将作为默认地图和缩放范围。
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create an `if` statement that checks for browser support of the Geolocation
    API and gains permission to access the current device location. The `Navigator.geolocation`
    property will return a `true` or `false` value. If the browser supports the Geolocation
    API and permission is given by the end user, then this property will contain a
    `true` value:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `if` 语句，检查浏览器是否支持 Geolocation API 并获得访问当前设备位置的权限。`Navigator.geolocation`
    属性将返回一个 `true` 或 `false` 的值。如果浏览器支持 Geolocation API 并且最终用户给予了权限，那么这个属性将包含一个 `true`
    的值：
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'As you can see from the code you''ve added in the previous step, the `Geolocation.getCurrentPosition()`
    function defines two callback functions—one for success (`zoomToLocation`) and
    one for failure (`locationError`). In this step, you''ll create the success callback
    function by adding the following code block. The success callback function, called
    `zoomToLocation`, will zoom to the location of the mobile device:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你在上一步中添加的代码中可以看出，`Geolocation.getCurrentPosition()` 函数定义了两个回调函数——一个用于成功（`zoomToLocation`），一个用于失败（`locationError`）。在这一步中，你将通过添加以下代码块来创建成功的回调函数。成功的回调函数名为
    `zoomToLocation`，将会缩放到移动设备的位置：
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, let''s add the error callback function called `locationError()`. This
    function will test for various types of errors related to not being able to find
    the current location of the device. Add the following function just below the
    success callback function that you created in the previous step:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们添加名为 `locationError()` 的错误回调函数。这个函数将测试与无法找到设备当前位置相关的各种类型的错误。在你在上一步中创建的成功回调函数的下面添加以下函数：
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You may want to review the solution file (`geolocation.html`) in your `ArcGISJavaScriptAPI`
    folder to verify that your code has been written correctly.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能想要查看解决方案文件（`geolocation.html`）在你的 `ArcGISJavaScriptAPI` 文件夹中，以验证你的代码是否已经正确编写。
- en: Click on the **Run** button. Initially, you should see a message similar to
    that displayed in the following screenshot:![Time to practice with the Geolocation
    API](graphics/7965_12_2.jpg)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Run** 按钮。最初，你应该会看到类似于以下截图中显示的消息：
- en: Click on **Share Location** and if the browser you are using supports the Geolocation
    API, then a new map should be displayed with your current location, represented
    by a symbol. Your location will obviously differ from mine.![Time to practice
    with the Geolocation API](graphics/7965_12_3.jpg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Share Location**，如果你正在使用的浏览器支持 Geolocation API，那么一个新的地图应该会显示你当前的位置，用一个符号表示。你的位置显然会与我的不同。
- en: Summary
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Mobile GIS applications are becoming very popular and the ArcGIS Server API
    for JavaScript can be used to quickly develop applications that are supported
    in both web and mobile applications. The API comes with built-in gesture support
    and supports iOS, Android, and BlackBerry platforms. The compact version of the
    API provides a smaller footprint that downloads quickly on mobile platforms. In
    addition, you can combine the Geolocation API into your applications, in order
    to locate the device and update the map to show the current location. In the next
    chapter, you will learn basic techniques used for designing and creating the layout
    of your application.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 移动GIS应用程序变得非常流行，ArcGIS Server API for JavaScript可以用于快速开发在Web和移动应用程序中都受支持的应用程序。该API具有内置的手势支持，并支持iOS、Android和BlackBerry平台。API的紧凑版本提供了较小的占地面积，在移动平台上可以快速下载。此外，您可以将地理位置API结合到您的应用程序中，以便定位设备并更新地图以显示当前位置。在下一章中，您将学习用于设计和创建应用程序布局的基本技术。
