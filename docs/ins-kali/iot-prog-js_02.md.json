["```js\n**sudo nano /boot/config.txt**\n\n```", "```js\n**dtoverlay=w1-gpio**\n\n```", "```js\n**sudo modprobew1-gpio**\n**sudo modprobe w1-therm**\n\n```", "```js\n**cd /sys/bus/w1/devices**\n**ls**\n\n```", "```js\n**cd 28-xxxx**\n**cat w1_slave**\n\n```", "```js\nimport os1 \nimport glob1 \nimport time1 \n\n```", "```js\nos1.system('modprobew1-gpio') \nos1.system('modprobew1-therm1') \n\n```", "```js\ndirectory = '/sys/bus/w1/devices/' \ndevice_folder1 = glob1.glob(directory + '28*')[0] \ndevice_file1 = device_folder1 + '/w1_slave' \n\n```", "```js\ndefread_temp(): \nf = open(device_file1, 'r') \nreadings = f.readlines() \nf.close() \nreturn readings \n\n```", "```js\ndefread_temp(): \nreadings = read_temp() \n\n```", "```js\nwhile readings[0].strip()[-3:] != 'YES': \ntime1.sleep(0.2) \nreadings = read_temp() \nequals = lines[1].find('t=') \n\n```", "```js\nif equals != -1: \ntemp = readings[1][equals pos+2:] \ntempc = float(temp) / 1000.0 \ntempf = temp * 9.0 / 5.0 + 32.0 \nreturntempc, tempf \n\n```", "```js\nwhile True: \nprint(temp()) \ntime1.sleep(1) \n\n```", "```js\n**sudo python thermometer.py**\n\n```", "```js\n    **sudo raspi-config**\n\n    ```", "```js\n            import spidev1 \n            import os1 \n\n    ```", "```js\n            spi1 = spidev1.SpiDev1() \n            spi1.open(0,0) \n\n    ```", "```js\n            def ReadChannel1(channel1): \n              adc1 = spi1.xfer2([1,(8+channel1)<<4,0]) \n              data1 = ((adc1[1]&3) << 8) + adc1[2] \n              return data1 \n\n    ```", "```js\n            def volts(data1,places1): \n              volts1 = (data1 * 3.3) / float(1023) \n              volts1 = round(volts1,places1) \n              return volts1 \n\n    ```", "```js\n            def Temp(data1,places1): \n              temp1 = (data1 * 0.0032)*100 \n              temp1 = round(temp1,places1) \n              return temp1 \n\n    ```", "```js\n              channels = 0 \n\n    ```", "```js\n            delay = 10 \n\n    ```", "```js\n            while True: \n\n              temp  = Channels(temp) \n              volts = Volts(temp1,2) \n              temp  = Temp(temp1,2) \n\n    ```", "```js\n            print\"**********************************************\" \n            print(\"Temp : {} ({}V) {} degC\".format(temp1,volts,temp)) \n\n    ```", "```js\n            Time1.sleep(delay) \n\n    ```", "```js\n    **sudo python MCP3008.py**\n\n    ```", "```js\n**sudo apt-get update**\n**sudo apt-get -y upgrade**\n\n```", "```js\n**sudo nano /etc/modules**\n\n```", "```js\n**snd-bcm2835 \ni2c-bcm2835 \ni2c-dev \nrtc-ds1307**\n\n```", "```js\nDS3231   Pi GPIO \nGNDP     1-06 \nVCC      (3.3V) \nSDA      (I2CSDA) \nSCL      (I2CSCL)\n```", "```js\n**sudo i2cdetect -y 1**\n\n```", "```js\n**sudo nano /etc/rc.local**\n\n```", "```js\necho ds1307 0x68 > /sys/class/i2c-adapter/i2c-1/new_device \n\n```", "```js\n**hwclock -s**\n\n```", "```js\n**date**\n\n```", "```js\n**sudo hwclock -w**\n\n```", "```js\n**sudo hwclock -r**\n\n```"]