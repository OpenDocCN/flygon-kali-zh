- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Building Websites Using ASP.NET Core Razor Pages
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ASP.NET Core Razor Pages构建网站
- en: This chapter is about building websites with a modern HTTP architecture on the
    server side using Microsoft ASP.NET Core. You will learn about building simple
    websites using the ASP.NET Core Razor Pages feature introduced with ASP.NET Core
    2.0 and the Razor class library feature introduced with ASP.NET Core 2.1.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何使用Microsoft ASP.NET Core在服务器端构建具有现代HTTP架构的网站。您将了解如何使用ASP.NET Core 2.0引入的Razor
    Pages功能和ASP.NET Core 2.1引入的Razor类库功能构建简单的网站。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding web development
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Web开发
- en: Understanding ASP.NET Core
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解ASP.NET Core
- en: Exploring ASP.NET Core Razor Pages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索ASP.NET Core Razor Pages
- en: Using Entity Framework Core with ASP.NET Core
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Entity Framework Core与ASP.NET Core
- en: Using Razor class libraries
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Razor类库
- en: Configuring services and the HTTP request pipeline
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置服务和HTTP请求管道
- en: Understanding web development
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Web开发
- en: Developing for the web means developing with **Hypertext Transfer Protocol**
    (**HTTP** ), so we will start by reviewing this important foundational technology.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为Web开发意味着使用**超文本传输协议**（**HTTP**），因此我们将从回顾这一重要的基础技术开始。
- en: Understanding HTTP
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解HTTP
- en: To communicate with a web server, the client, also known as the **user agent**
    , makes calls over the network using HTTP. As such, HTTP is the technical underpinning
    of the web. So, when we talk about websites and web services, we mean that they
    use HTTP to communicate between a client (often a web browser) and a server.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与Web服务器通信，客户端，也称为**用户代理**，使用HTTP通过网络进行调用。因此，HTTP是Web的技术基础。因此，当我们谈论网站和Web服务时，我们指的是它们使用HTTP在客户端（通常是Web浏览器）和服务器之间进行通信。
- en: 'A client makes an HTTP request for a resource, such as a page, uniquely identified
    by a **Uniform Resource Locator** (**URL** ), and the server sends back an HTTP
    response, as shown in *Figure 14.1* :'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端发出HTTP请求以获取资源，例如页面，由**统一资源定位符**（**URL**）唯一标识，并且服务器发送HTTP响应，如*图14.1*所示：
- en: '![Graphical user interface, text Description automatically generated](img/Image00104.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本描述自动生成](img/Image00104.jpg)'
- en: 'Figure 14.1: An HTTP request and response'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1：HTTP请求和响应
- en: You can use Google Chrome and other browsers to record requests and responses.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Google Chrome和其他浏览器记录请求和响应。
- en: '**Good Practice** : Google Chrome is available on more operating systems than
    any other browser, and it has powerful, built-in developer tools, so it is a good
    first choice of browser for testing your websites. Always test your web application
    with Chrome and at least two other browsers, for example, Firefox and Safari for
    macOS and iPhone. Microsoft Edge switched from using Microsoft''s own rendering
    engine to using Chromium in 2019, so it is less important to test with it. If
    Microsoft''s Internet Explorer is used at all, it tends to mostly be inside organizations
    for intranets.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**良好实践**：Google Chrome可用于比其他任何浏览器更多的操作系统，并且具有强大的内置开发人员工具，因此它是测试网站的良好首选浏览器。始终使用Chrome和至少另外两个浏览器（例如，Firefox和macOS和iPhone的Safari）测试您的Web应用程序。微软Edge于2019年从使用微软自己的渲染引擎切换到使用Chromium，因此测试它的重要性较小。如果微软的Internet
    Explorer被使用，它往往主要用于组织内部的内联网。'
- en: Understanding the components of a URL
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解URL的组成部分
- en: 'A URL is made up of several components:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: URL由几个组件组成：
- en: '**Scheme** : `http` (clear text) or `https` (encrypted).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方案**：`http`（明文）或`https`（加密）。'
- en: '**Domain** : For a production website or service, the **top-level domain**
    (**TLD** ) might be `example.com` . You might have subdomains such as `www` ,
    `jobs` , or `extranet` . During development, you typically use `localhost` for
    all websites and services.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**域**：对于生产网站或服务，**顶级域**（**TLD**）可能是`example.com`。您可能有诸如`www`，`jobs`或`extranet`之类的子域。在开发过程中，您通常为所有网站和服务使用`localhost`。'
- en: '**Port number** : For a production website or service, `80` for `http` , `443`
    for `https` . These port numbers are usually inferred from the scheme. During
    development, other port numbers are commonly used, such as `5000` , `5001` , and
    so on, to differentiate between websites and services that all use the shared
    domain `localhost` .'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口号**：对于生产网站或服务，`http`为`80`，`https`为`443`。这些端口号通常从方案中推断出来。在开发过程中，通常使用其他端口号，例如`5000`，`5001`等，以区分使用共享域`localhost`的所有网站和服务。'
- en: '**Path** : A relative path to a resource, for example, `/customers/germany`
    .'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路径**：到资源的相对路径，例如`/customers/germany`。'
- en: '**Query string** : A way to pass parameter values, for example, `?country=Germany&searchtext=shoes`
    .'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查询字符串**：传递参数值的一种方法，例如`?country=Germany&searchtext=shoes`。'
- en: '**Fragment** : A reference to an element on a web page using its `id` , for
    example, `#toc` .'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**片段**：使用其`id`引用网页上的元素，例如`#toc`。'
- en: Assigning port numbers for projects in this book
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为本书中的项目分配端口号
- en: 'In this book, we will use the domain `localhost` for all websites and services,
    so we will use port numbers to differentiate projects when multiple need to execute
    at the same time, as shown in the following table:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将为所有网站和服务使用域`localhost`，因此我们将使用端口号来区分多个项目在同一时间需要执行的情况，如下表所示：
- en: '| Project | Description | Port numbers |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 项目 | 描述 | 端口号 |'
- en: '| `Northwind.Web` | ASP.NET Core Razor Pages website | `5000 HTTP` , `5001
    HTTPS` |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.Web` | ASP.NET Core Razor Pages网站 | `5000 HTTP`，`5001 HTTPS` |'
- en: '| `Northwind.Mvc` | ASP.NET Core MVC website | `5000 HTTP` , `5001 HTTPS` |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.Mvc` | ASP.NET Core MVC网站 | `5000 HTTP`，`5001 HTTPS` |'
- en: '| `Northwind.WebApi` | ASP.NET Core Web API service | `5002 HTTPS` , `5008
    HTTP` |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.WebApi` | ASP.NET Core Web API服务 | `5002 HTTPS`，`5008 HTTP` |'
- en: '| `Minimal.WebApi` | ASP.NET Core Web API (minimal) | `5003 HTTPS` |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `Minimal.WebApi` | ASP.NET Core Web API（最小）| `5003 HTTPS` |'
- en: '| `Northwind.OData` | ASP.NET Core OData service | `5004 HTTPS` |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.OData` | ASP.NET Core OData服务 | `5004 HTTPS` |'
- en: '| `Northwind.GraphQL` | ASP.NET Core GraphQL service | `5005 HTTPS` |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.GraphQL` | ASP.NET Core GraphQL服务 | `5005 HTTPS` |'
- en: '| `Northwind.gRPC` | ASP.NET Core gRPC service | `5006 HTTPS` |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.gRPC` | ASP.NET Core gRPC服务 | `5006 HTTPS` |'
- en: '| `Northwind.AzureFuncs` | Azure Functions nanoservice | `7071 HTTP` |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `Northwind.AzureFuncs` | Azure Functions nanoservice | `7071 HTTP` |'
- en: Using Google Chrome to make HTTP requests
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用谷歌浏览器进行HTTP请求
- en: 'Let''s explore how to use Google Chrome to make HTTP requests:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索如何使用谷歌浏览器进行HTTP请求：
- en: Start Google Chrome.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动谷歌浏览器。
- en: Navigate to **More tools** | **Developer tools** .
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**更多工具** | **开发者工具**。
- en: Click the **Network** tab, and Chrome should immediately start recording the
    network traffic between your browser and any web servers (note the red circle),
    as shown in *Figure 14.2* :![](img/Image00105.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**网络**选项卡，Chrome应立即开始记录浏览器和任何Web服务器之间的网络流量（请注意红色圆圈），如*图14.2*所示：![](img/Image00105.jpg)
- en: 'Figure 14.2: Chrome Developer Tools recording network traffic'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.2：Chrome开发者工具记录网络流量
- en: 'In Chrome''s address box, enter the address of Microsoft''s website for learning
    ASP.NET, as shown in the following URL:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome的地址栏中，输入微软学习ASP.NET的网站地址，如下URL所示：
- en: '[https://dotnet.microsoft.com/learn/aspnet](https://dotnet.microsoft.com/learn/aspnet)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dotnet.microsoft.com/learn/aspnet](https://dotnet.microsoft.com/learn/aspnet)'
- en: In Developer Tools, in the list of recorded requests, scroll to the top and
    click on the first entry, the row where the **Type** is **document** , as shown
    in *Figure 14.3* :![](img/Image00106.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开发者工具中，在记录的请求列表中，滚动到顶部，点击第一个条目，**类型**为**文档**的行，如*图14.3*所示：![](img/Image00106.jpg)
- en: 'Figure 14.3: Recorded requests in Developer Tools'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.3：开发者工具中记录的请求
- en: On the right-hand side, click on the **Headers** tab, and you will see details
    about **Request Headers** and **Response Headers** , as shown in *Figure 14.4*
    :![](img/Image00107.jpg)
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧，点击**头部**选项卡，您将看到有关**请求头**和**响应头**的详细信息，如*图14.4*所示：![](img/Image00107.jpg)
- en: 'Figure 14.4: Request and response headers'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.4：请求和响应头
- en: 'Note the following aspects:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 注意以下方面：
- en: '**Request Method** is `GET` . Other HTTP methods that you could see here include
    `POST` , `PUT` , `DELETE` , `HEAD` , and `PATCH` .'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求方法是`GET`。您在这里可能看到的其他HTTP方法包括`POST`，`PUT`，`DELETE`，`HEAD`和`PATCH`。
- en: '**Status Code** is `200 OK` . This means that the server found the resource
    that the browser requested and has returned it in the body of the response. Other
    status codes that you might see in response to a `GET` request include `301 Moved
    Permanently` , `400 Bad Request` , `401 Unauthorized` , and `404 Not Found` .'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**状态码**是`200 OK`。这意味着服务器找到了浏览器请求的资源，并将其在响应的正文中返回。对于`GET`请求的响应中可能看到的其他状态码包括`301
    Moved Permanently`，`400 Bad Request`，`401 Unauthorized`和`404 Not Found`。'
- en: '**Request Headers** sent by the browser to the web server include:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器发送到Web服务器的**请求头**包括：
- en: '**accept** , which lists what formats the browser accepts. In this case, the
    browser is saying it understands HTML, XHTML, XML, and some image formats, but
    it will accept all other files (`*/*` ). Default weightings, also known as quality
    values, are `1.0` . XML is specified with a quality value of `0.9` so it is preferred
    less than HTML or XHTML. All other file types are given a quality value of `0.8`
    so are least preferred.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**accept**，列出浏览器接受的格式。在这种情况下，浏览器表示它理解HTML、XHTML、XML和一些图像格式，但它将接受所有其他文件（`*/*`）。默认权重，也称为质量值，为`1.0`。XML指定了质量值为`0.9`，因此它比HTML或XHTML更不受欢迎。所有其他文件类型的质量值为`0.8`，因此最不受欢迎。'
- en: '**accept-encoding** , which lists what compression algorithms the browser understands,
    in this case, GZIP, DEFLATE, and Brotli.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**accept-encoding**，列出浏览器理解的压缩算法，例如GZIP、DEFLATE和Brotli。'
- en: '**accept-language** , which lists the human languages it would prefer the content
    to use. In this case, US English, which has a default quality value of `1.0` ,
    then any dialect of English that has an explicitly specified quality value of
    `0.9` , and then any dialect of Swedish that has an explicitly specified quality
    value of `0.8` .'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**accept-language**，列出它希望内容使用的人类语言。在这种情况下，美国英语具有默认质量值为`1.0`，然后是任何具有显式指定质量值为`0.9`的英语方言，然后是任何具有显式指定质量值为`0.8`的瑞典方言。'
- en: '**Response Headers** , `content-encoding` tells me the server has sent back
    the HTML web page response compressed using the GZIP algorithm because it knows
    that the client can decompress that format. (This is not visible in *Figure 14.4*
    because there is not enough space to expand the **Response Headers** section.)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应头**，`content-encoding`告诉我服务器已经使用GZIP算法压缩了HTML网页响应，因为它知道客户端可以解压缩该格式。（这在*图14.4*中不可见，因为没有足够的空间来展开**响应头**部分。）'
- en: Close Chrome.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome。
- en: Understanding client-side web development technologies
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解客户端Web开发技术
- en: 'When building websites, a developer needs to know more than just C# and .NET.
    On the client (that is, in the web browser), you will use a combination of the
    following technologies:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建网站时，开发人员需要了解的不仅仅是C#和.NET。在客户端（即在Web浏览器中），您将使用以下技术的组合：
- en: '**HTML5** : This is used for the content and structure of a web page.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTML5**：用于网页的内容和结构。'
- en: '**CSS3** : This is used for the styles applied to elements on the web page.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CSS3**：用于网页上元素的样式。'
- en: '**JavaScript** : This is used to code any business logic needed on the web
    page, for example, validating form input or making calls to a web service to fetch
    more data needed by the web page.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JavaScript**：用于在网页上编写所需的任何业务逻辑，例如验证表单输入或调用Web服务以获取网页所需的更多数据。'
- en: Although HTML5, CSS3, and JavaScript are the fundamental components of frontend
    web development, there are many additional technologies that can make frontend
    web development more productive, including Bootstrap, the world's most popular
    frontend open-source toolkit, and CSS preprocessors such as SASS and LESS for
    styling, Microsoft's TypeScript language for writing more robust code, and JavaScript
    libraries such as jQuery, Angular, React, and Vue. All these higher-level technologies
    ultimately translate or compile to the underlying three core technologies, so
    they work across all modern browsers.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管HTML5、CSS3和JavaScript是前端网页开发的基本组件，但还有许多其他技术可以使前端网页开发更加高效，包括Bootstrap、全球最流行的前端开源工具包，以及用于样式的CSS预处理器，如SASS和LESS，用于编写更健壮代码的Microsoft的TypeScript语言，以及诸如jQuery、Angular、React和Vue等JavaScript库。所有这些高级技术最终都会转换或编译成基础的三种核心技术，因此它们可以在所有现代浏览器上运行。
- en: As part of the build and deploy process, you will likely use technologies such
    as Node.js; Node Package Manager (npm) and Yarn, which are both client-side package
    managers; and webpack, which is a popular module bundler, a tool for compiling,
    transforming, and bundling website source files.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建和部署过程中，您可能会使用诸如Node.js、Node Package Manager（npm）和Yarn等技术，它们都是客户端包管理器；以及webpack，它是一个流行的模块打包工具，用于编译、转换和打包网站源文件。
- en: Understanding ASP.NET Core
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解ASP.NET Core
- en: 'Microsoft ASP.NET Core is part of a history of Microsoft technologies used
    to build websites and services that have evolved over the years:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft ASP.NET Core是Microsoft技术发展历史的一部分，用于构建多年来不断发展的网站和服务：
- en: '**Active Server Pages** (**ASP** ) was released in 1996 and was Microsoft''s
    first attempt at a platform for dynamic server-side execution of website code.
    ASP files contain a mix of HTML and code that executes on the server written in
    the VBScript language.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Active Server Pages**（**ASP**）于1996年发布，是微软首次尝试构建动态服务器端执行网站代码的平台。ASP文件包含了在服务器上用VBScript语言编写的HTML和代码的混合。'
- en: '**ASP.NET Web Forms** was released in 2002 with the .NET Framework and was
    designed to enable non-web developers, such as those familiar with Visual Basic,
    to quickly create websites by dragging and dropping visual components and writing
    event-driven code in Visual Basic or C#. Web Forms should be avoided for new .NET
    Framework web projects in favor of ASP.NET MVC.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET Web Forms**于2002年与.NET Framework一起发布，旨在使非Web开发人员（如熟悉Visual Basic的人）通过拖放可视化组件并在Visual
    Basic或C#中编写事件驱动代码来快速创建网站。对于新的.NET Framework Web项目，应避免使用Web Forms，而应使用ASP.NET MVC。'
- en: '**Windows Communication Foundation** (**WCF** ) was released in 2006 and enables
    developers to build SOAP and REST services. SOAP is powerful but complex, so it
    should be avoided unless you need advanced features, such as distributed transactions
    and complex messaging topologies.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows Communication Foundation**（**WCF**）于2006年发布，使开发人员能够构建SOAP和REST服务。SOAP功能强大但复杂，因此除非需要分布式事务和复杂的消息拓扑等高级功能，否则应避免使用。'
- en: '**ASP.NET MVC** was released in 2009 to cleanly separate the concerns of web
    developers between the **models** , which temporarily store the data; the **views**
    , which present the data using various formats in the UI; and the **controllers**
    , which fetch the model and pass it to a view. This separation enables improved
    reuse and unit testing.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET MVC**于2009年发布，以清晰地将Web开发人员的关注点分离开来，包括**模型**（临时存储数据）、**视图**（以各种格式在UI中呈现数据）和**控制器**（获取模型并将其传递给视图）。这种分离能够提高重用性和单元测试。'
- en: '**ASP.NET Web API** was released in 2012 and enables developers to create HTTP
    services (aka REST services) that are simpler and more scalable than SOAP services.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET Web API**于2012年发布，使开发人员能够创建比SOAP服务更简单和更可扩展的HTTP服务（也称为REST服务）。'
- en: '**ASP.NET SignalR** was released in 2013 and enables real-time communication
    in websites by abstracting underlying technologies and techniques, such as WebSockets
    and Long Polling. This enables website features such as live chat or updates to
    time-sensitive data such as stock prices across a wide variety of web browsers,
    even when they do not support an underlying technology such as WebSockets.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET SignalR**于2013年发布，通过抽象底层技术和技巧（如WebSockets和长轮询）实现网站的实时通信。这使得网站可以实现实时聊天或对时间敏感数据（如股票价格）的更新，即使它们不支持底层技术（如WebSockets）。'
- en: '**ASP.NET Core** was released in 2016 and combines modern implementations of
    .NET Framework technologies such as MVC, Web API, and SignalR, with newer technologies
    such as Razor Pages, gRPC, and Blazor, all running on modern .NET. Therefore,
    it can execute cross-platform. ASP.NET Core has many project templates to get
    you started with its supported technologies.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET Core**于2016年发布，结合了现代的.NET Framework技术实现，如MVC、Web API和SignalR，以及新技术，如Razor
    Pages、gRPC和Blazor，都在现代.NET上运行。因此，它可以跨平台执行。ASP.NET Core有许多项目模板，可帮助您开始使用其支持的技术。'
- en: '**Good Practice** : Choose ASP.NET Core to develop websites and services because
    it includes web-related technologies that are modern and cross-platform.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**良好实践**：选择ASP.NET Core来开发网站和服务，因为它包括现代且跨平台的Web相关技术。'
- en: ASP.NET Core 2.0 to 2.2 can run on .NET Framework 4.6.1 or later (Windows only)
    as well as .NET Core 2.0 or later (cross-platform). ASP.NET Core 3.0 only supports
    .NET Core 3.0\. ASP.NET Core 6.0 only supports .NET 6.0.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core 2.0到2.2可以在.NET Framework 4.6.1或更高版本（仅限Windows）以及.NET Core 2.0或更高版本（跨平台）上运行。ASP.NET
    Core 3.0仅支持.NET Core 3.0。ASP.NET Core 6.0仅支持.NET 6.0。
- en: Classic ASP.NET versus modern ASP.NET Core
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 经典ASP.NET与现代ASP.NET Core
- en: Until now, ASP.NET has been built on top of a large assembly in the .NET Framework
    named `System.Web.dll` and it is tightly coupled to Microsoft's Windows-only web
    server named **Internet Information Services** (**IIS** ). Over the years, this
    assembly has accumulated a lot of features, many of which are not suitable for
    modern cross-platform development.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，ASP.NET一直是建立在.NET Framework中一个名为`System.Web.dll`的大型程序集之上，并且与微软的仅限于Windows的Web服务器**Internet
    Information Services**（**IIS**）紧密耦合。多年来，这个程序集积累了许多功能，其中许多不适合现代跨平台开发。
- en: ASP.NET Core is a major redesign of ASP.NET. It removes the dependency on the
    `System.Web.dll` assembly and IIS and is composed of modular lightweight packages,
    just like the rest of modern .NET. Using IIS as the web server is still supported
    by ASP.NET Core but there is a better option.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core是ASP.NET的一次重大重新设计。它消除了对`System.Web.dll`程序集和IIS的依赖，并由模块化的轻量级包组成，就像现代.NET的其余部分一样。ASP.NET
    Core仍然支持将IIS作为Web服务器，但有一个更好的选择。
- en: You can develop and run ASP.NET Core applications cross-platform on Windows,
    macOS, and Linux. Microsoft has even created a cross-platform, super-performant
    web server named **Kestrel** , and the entire stack is open source.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Windows、macOS和Linux上跨平台开发和运行ASP.NET Core应用程序。微软甚至创建了一个跨平台、超高性能的Web服务器，名为**Kestrel**，整个堆栈都是开源的。
- en: ASP.NET Core 2.2 or later projects default to the new in-process hosting model.
    This gives a 400% performance improvement when hosting in Microsoft IIS, but Microsoft
    still recommends using Kestrel for even better performance.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core 2.2或更高版本项目默认使用新的进程内托管模型。这在使用Microsoft IIS进行托管时可以提供400%的性能提升，但微软仍建议使用Kestrel以获得更好的性能。
- en: Creating an empty ASP.NET Core project
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个空的ASP.NET Core项目
- en: We will create an ASP.NET Core project that will show a list of suppliers from
    the Northwind database.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个ASP.NET Core项目，该项目将显示来自Northwind数据库的供应商列表。
- en: 'The `dotnet` tool has many project templates that do a lot of work for you,
    but it can be difficult to know which works best for a given situation, so we
    will start with the empty website project template and then add features step
    by step so that you can understand all the pieces:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`dotnet`工具有许多项目模板可以为您做很多工作，但很难知道哪个最适合特定情况，因此我们将从空网站项目模板开始，然后逐步添加功能，以便您可以理解所有部分：'
- en: 'Use your preferred code editor to add a new project, as defined in the following
    list:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您喜欢的代码编辑器添加一个新项目，如下列表所定义：
- en: 'Project template: **ASP.NET Core Empty** / `web`'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目模板：**ASP.NET Core Empty** / `web`
- en: 'Language: C#'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 语言：C#
- en: 'Workspace/solution file and folder: `PracticalApps`'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工作区/解决方案文件和文件夹：`PracticalApps`
- en: 'Project file and folder: `Northwind.Web`'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目文件和文件夹：`Northwind.Web`
- en: For Visual Studio 2022, leave all other options as their defaults, for example,
    **Configure for HTTPS** selected, and **Enable Docker** cleared
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Visual Studio 2022，将所有其他选项保持为默认值，例如，选择**为HTTPS配置**，并清除**启用Docker**。
- en: In Visual Studio Code, select `Northwind.Web` as the active OmniSharp project.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio Code中，选择`Northwind.Web`作为活动的OmniSharp项目。
- en: Build the `Northwind.Web` project.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建`Northwind.Web`项目。
- en: 'Open the `Northwind.Web.csproj` file and note that the project is like a class
    library except that the SDK is `Microsoft.NET.Sdk.Web` , as shown highlighted
    in the following markup:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Northwind.Web.csproj`文件，并注意项目类似于类库，只是SDK是`Microsoft.NET.Sdk.Web`，如下标记所示：
- en: '```cs'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <Project Sdk="
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <Project Sdk="
- en: '**Microsoft.NET.Sdk.Web**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft.NET.Sdk.Web**'
- en: '"'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '"'
- en: '>'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <PropertyGroup>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <PropertyGroup>
- en: <TargetFramework>net6.0
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <TargetFramework>net6.0
- en: </TargetFramework>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: </TargetFramework>
- en: <Nullable>enable</Nullable>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <Nullable>enable</Nullable>
- en: <ImplicitUsings>enable</ImplicitUsings>
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: <ImplicitUsings>enable</ImplicitUsings>
- en: </PropertyGroup>
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: </PropertyGroup>
- en: </Project>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: </Project>
- en: '```'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: If you are using Visual Studio 2022, in **Solution Explorer** , toggle **Show
    All Files** .
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您正在使用Visual Studio 2022，在**Solution Explorer**中，切换**显示所有文件**。
- en: 'Expand the `obj` folder, expand the `Debug` folder, expand the `net6.0` folder,
    select the `Northwind.Web.GlobalUsings.g.cs` file, and note the implicitly imported
    namespaces include all the ones for a console app or class library, as well as
    some ASP.NET Core ones, such as `Microsoft.AspNetCore.Builder` , as shown in the
    following code:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开`obj`文件夹，展开`Debug`文件夹，展开`net6.0`文件夹，选择`Northwind.Web.GlobalUsings.g.cs`文件，并注意隐式导入的命名空间包括所有控制台应用程序或类库的命名空间，以及一些ASP.NET
    Core的命名空间，例如`Microsoft.AspNetCore.Builder`，如下面的代码所示：
- en: '```cs'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: // <autogenerated />
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: // <autogenerated />
- en: global
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.AspNetCore.Builder;
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.AspNetCore.Builder;
- en: global
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.AspNetCore.Hosting;
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.AspNetCore.Hosting;
- en: global
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.AspNetCore.Http;
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.AspNetCore.Http;
- en: global
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.AspNetCore.Routing;
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.AspNetCore.Routing;
- en: global
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.Extensions.Configuration;
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.Extensions.Configuration;
- en: global
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.Extensions.DependencyInjection;
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.Extensions.DependencyInjection;
- en: global
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.Extensions.Hosting;
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.Extensions.Hosting;
- en: global
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::Microsoft.Extensions.Logging;
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: ::Microsoft.Extensions.Logging;
- en: global
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System;
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: ::System;
- en: global
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.Collections.Generic;
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.Collections.Generic;
- en: global
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.IO;
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.IO;
- en: global
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.Linq;
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.Linq;
- en: global
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.Net.Http;
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.Net.Http;
- en: global
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.Net.Http.Json;
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.Net.Http.Json;
- en: global
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.Threading;
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.Threading;
- en: global
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: using
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: global
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 全局
- en: ::System.Threading.Tasks;
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: ::System.Threading.Tasks;
- en: '```'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Collapse the `obj` folder.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 折叠`obj`文件夹。
- en: 'Open `Program.cs` , and note the following:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Program.cs`，并注意以下内容：
- en: An ASP.NET Core project is like a top-level console application, with a hidden
    `Main` method as its entry point that has an argument passed using the name `args`
    .
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASP.NET Core项目类似于顶级控制台应用程序，其隐藏的`Main`方法作为其入口点，其参数使用名称`args`传递。
- en: It calls `WebApplication.CreateBuilder` , which creates a host for the website
    using defaults for a web host that is then built.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它调用`WebApplication.CreateBuilder`，该方法使用默认值创建一个用于构建网站的主机。
- en: 'The website will respond to all HTTP `GET` requests with plain text: `Hello
    World!` .'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站将对所有HTTP`GET`请求以纯文本`Hello World!`进行响应。
- en: 'The call to the `Run` method is a blocking call, so the hidden `Main` method
    does not return until the web server stops running, as shown in the following
    code:'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对`Run`方法的调用是一个阻塞调用，因此隐藏的`Main`方法直到Web服务器停止运行后才会返回，如下面的代码所示：
- en: '```cs'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: var
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: var
- en: builder = WebApplication.CreateBuilder(args);
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: builder = WebApplication.CreateBuilder(args);
- en: var
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: var
- en: app = builder.Build();
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: app = builder.Build();
- en: app.MapGet("/"
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: app.MapGet("/"
- en: ', () => "Hello World!"'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: ', () => "Hello World!"'
- en: );
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: app.Run();
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: app.Run();
- en: '```'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'At the bottom of the file, add a statement to write a message to the console
    after the call to the `Run` method and therefore after the web server has stopped,
    as shown highlighted in the following code:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件底部，添加一个语句，在调用`Run`方法之后以及Web服务器停止后向控制台写入消息，如下面代码中的突出显示部分所示：
- en: '```cs'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: app.Run();
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: app.Run();
- en: '**Console.WriteLine(**'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**Console.WriteLine(**'
- en: '**"This executes after the web server has stopped!"**'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**"这在Web服务器停止后执行！"**'
- en: '**);**'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**);**'
- en: '```'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Testing and securing the website
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试和保护网站
- en: We will now test the functionality of the ASP.NET Core Empty website project.
    We will also enable encryption of all traffic between the browser and web server
    for privacy by switching from HTTP to HTTPS. HTTPS is the secure encrypted version
    of HTTP.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将测试ASP.NET Core空网站项目的功能。我们还将通过从HTTP切换到HTTPS来启用浏览器和Web服务器之间所有流量的加密，以保护隐私。HTTPS是HTTP的安全加密版本。
- en: 'For Visual Studio:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Visual Studio：
- en: In the toolbar, make sure that **Northwind.Web** is selected rather than **IIS
    Express** or **WSL** , and switch the **Web Browser (Microsoft Edge)** to **Google
    Chrome** , as shown in *Figure 14.5* :![](img/Image00108.jpg)
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在工具栏中，确保选择**Northwind.Web**而不是**IIS Express**或**WSL**，并将**Web浏览器（Microsoft Edge）**切换到**Google
    Chrome**，如*图14.5*所示：![](img/Image00108.jpg)
- en: 'Figure 14.5: Selecting the Northwind.Web profile with its Kestrel web server
    in Visual Studio'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.5：在Visual Studio中选择带有Kestrel Web服务器的Northwind.Web配置文件
- en: Navigate to **Debug** | **Start Without Debugging…** .
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**调试**|**无调试启动…**。
- en: The first time you start a secure website, you will be prompted that your project
    is configured to use SSL, and to avoid warnings in the browser you can choose
    to trust the self-signed certificate that ASP.NET Core has generated. Click **Yes**
    .
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次启动安全网站时，您将收到提示，您的项目已配置为使用SSL，并且为了避免浏览器中的警告，您可以选择信任ASP.NET Core生成的自签名证书。单击**是**。
- en: When you see the **Security Warning** dialog box, click **Yes** again.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您看到**安全警告**对话框时，再次单击**是**。
- en: For Visual Studio Code, in **TERMINAL** , enter the `dotnet run` command.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Visual Studio Code，在**终端**中，输入`dotnet run`命令。
- en: 'In either Visual Studio''s command prompt window or Visual Studio Code''s terminal,
    note the Kestrel web server has started listening on random ports for HTTP and
    HTTPS, that you can press Ctrl + C to shut down the Kestrel web server, and the
    hosting environment is `Development` , as shown in the following output:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio的命令提示窗口或Visual Studio Code的终端中，注意Kestrel Web服务器已开始监听HTTP和HTTPS的随机端口，您可以按Ctrl+C关闭Kestrel
    Web服务器，并且托管环境是`开发`，如下面的输出所示：
- en: '```cs'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: 'info: Microsoft.Hosting.Lifetime[14]'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 信息：Microsoft.Hosting.Lifetime[14]
- en: 'Now listening on: https://localhost:5001'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 现在正在侦听：https://localhost:5001
- en: 'info: Microsoft.Hosting.Lifetime[14]'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 信息：Microsoft.Hosting.Lifetime[14]
- en: 'Now listening on: http://localhost:5000'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在正在侦听：http://localhost:5000
- en: 'info: Microsoft.Hosting.Lifetime[0]'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 信息：Microsoft.Hosting.Lifetime[0]
- en: Application started. Press Ctrl+C to shut down.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序已启动。按Ctrl+C关闭。
- en: 'info: Microsoft.Hosting.Lifetime[0]'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 信息：Microsoft.Hosting.Lifetime[0]
- en: 'Hosting environment: Development'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 托管环境：开发
- en: 'info: Microsoft.Hosting.Lifetime[0]'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 信息：Microsoft.Hosting.Lifetime[0]
- en: 'Content root path: C:\Code\PracticalApps\Northwind.Web'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 内容根路径：C:\Code\PracticalApps\Northwind.Web
- en: '```'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Visual Studio will also start your chosen browser automatically. If you are
    using Visual Studio Code, you will have to start Chrome manually.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio还将自动启动您选择的浏览器。如果您使用的是Visual Studio Code，则必须手动启动Chrome。
- en: Leave the web server running.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让Web服务器保持运行。
- en: In Chrome, show **Developer Tools** , and click the **Network** tab.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，显示**开发人员工具**，并单击**网络**选项卡。
- en: Enter the address `http://localhost:5000/` , or whatever port number was assigned
    to HTTP, and note the response is `Hello World!` in plain text, from the cross-platform
    Kestrel web server, as shown in *Figure 14.6* :![](img/Image00109.jpg)
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入地址`http://localhost:5000/`，或者分配给HTTP的任何端口号，并注意响应是纯文本`Hello World!`，来自跨平台Kestrel
    Web服务器，如*图14.6*所示：![](img/Image00109.jpg)
- en: 'Figure 14.6: Plain text response from http://localhost:5000/'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.6：从http://localhost:5000/得到的纯文本响应
- en: Chrome also requests a `favicon.ico` file automatically to show in the browser
    tab but this is missing so it shows as a `404 Not Found` error.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome还会自动请求`favicon.ico`文件以在浏览器标签中显示，但这个文件丢失了，所以会显示`404 Not Found`错误。
- en: Enter the address `https://localhost:5001/` , or whatever port number was assigned
    to HTTPS, and note if you are not using Visual Studio or if you clicked **No**
    when prompted to trust the SSL certificate, then the response is a privacy error,
    as shown in *Figure 14.7* :![Graphical user interface, application Description
    automatically generated](img/Image00110.jpg)
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入地址`https://localhost:5001/`，或者分配给HTTPS的任何端口号，并注意如果您没有使用Visual Studio，或者在提示是否信任SSL证书时点击了**否**，那么响应将是隐私错误，如*图14.7*所示：![图形用户界面，应用程序描述自动生成](img/Image00110.jpg)
- en: 'Figure 14.7: Privacy error showing SSL encryption has not been enabled with
    a certificate'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.7：显示SSL加密未启用证书的隐私错误
- en: You will see this error when you have not configured a certificate that the
    browser can trust to encrypt and decrypt HTTPS traffic (and so if you do not see
    this error, it is because you have already configured a certificate).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 当您尚未配置浏览器可以信任以加密和解密HTTPS流量的证书时，您将看到此错误（如果您没有看到此错误，那是因为您已经配置了证书）。
- en: In a production environment, you would want to pay a company such as Verisign
    for an SSL certificate because they provide liability protection and technical
    support.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，您可能希望向Verisign等公司支付SSL证书，因为它们提供责任保护和技术支持。
- en: '**For Linux Developers** : If you use a Linux variant that cannot create self-signed
    certificates or you do not mind reapplying for a new certificate every 90 days,
    then you can get a free certificate from the following link: [https://letsencrypt.org](https://letsencrypt.org)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于Linux开发人员**：如果您使用的Linux变体无法创建自签名证书，或者您不介意每90天重新申请新证书，那么您可以从以下链接获取免费证书：[https://letsencrypt.org](https://letsencrypt.org)'
- en: During development, you can tell your OS to trust a temporary development certificate
    provided by ASP.NET Core.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发过程中，您可以告诉操作系统信任由ASP.NET Core提供的临时开发证书。
- en: 'At the command line or in **TERMINAL** , press Ctrl + C to shut down the web
    server, and note the message that is written, as shown highlighted in the following
    output:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行或**TERMINAL**中，按Ctrl + C关闭Web服务器，并注意所写的消息，如下面的输出中所示：
- en: '```cs'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: 'info: Microsoft.Hosting.Lifetime[0]'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 'info: Microsoft.Hosting.Lifetime[0]'
- en: Application is shutting down...
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 应用正在关闭...
- en: '**This executes after the web server has stopped!**'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '**这在Web服务器停止后执行！**'
- en: C:\Code\PracticalApps\Northwind.Web\bin\Debug\net6.0\Northwind.Web.exe (process
    19888) exited with code 0.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: C:\Code\PracticalApps\Northwind.Web\bin\Debug\net6.0\Northwind.Web.exe（进程19888）退出，代码为0。
- en: '```'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: If you need to trust a local self-signed SSL certificate, then at the command
    line or in **TERMINAL** , enter the `dotnet dev-certs https --trust` command,
    and note the message, **Trusting the HTTPS development certificate was requested**
    . You might be prompted to enter your password and a valid HTTPS certificate may
    already be present.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您需要信任本地自签名SSL证书，那么在命令行或**TERMINAL**中，输入`dotnet dev-certs https --trust`命令，并注意消息，**请求信任HTTPS开发证书**。您可能需要输入密码，有效的HTTPS证书可能已经存在。
- en: Enabling stronger security and redirect to a secure connection
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用更强大的安全性并重定向到安全连接
- en: It is good practice to enable stricter security and automatically redirect requests
    for HTTP to HTTPS.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 启用更严格的安全性并自动将HTTP请求重定向到HTTPS是一个好习惯。
- en: '**Good Practice** : **HTTP Strict Transport Security** (**HSTS** ) is an opt-in
    security enhancement that you should always enable. If a website specifies it
    and a browser supports it, then it forces all communication over HTTPS and prevents
    the visitor from using untrusted or invalid certificates.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '**最佳实践**：**HTTP严格传输安全性**（**HSTS**）是一种选择性的安全增强功能，您应该始终启用。如果网站指定了它并且浏览器支持它，那么它将强制所有通信通过HTTPS，并防止访问者使用不受信任或无效的证书。'
- en: 'Let''s do that now:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们这样做：
- en: 'In `Program.cs` , add an `if` statement to enable HSTS when not in development,
    as shown in the following code:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，添加一个`if`语句以在非开发环境中启用HSTS，如下面的代码所示：
- en: '```cs'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: if
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 如果
- en: (!app.Environment.IsDevelopment())
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: （！app.Environment.IsDevelopment（））
- en: '{'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: app.UseHsts();
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHsts（）;
- en: '}'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add a statement before the call to `app.MapGet` to redirect HTTP requests to
    HTTPS, as shown in the following code:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在调用`app.MapGet`之前添加一个语句，将HTTP请求重定向到HTTPS，如下面的代码所示：
- en: '```cs'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: app.UseHttpsRedirection();
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHttpsRedirection();
- en: '```'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the **Northwind.Web** website project.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动**Northwind.Web**网站项目。
- en: If Chrome is still running, close and restart it.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Chrome仍在运行，请关闭并重新启动它。
- en: In Chrome, show **Developer Tools** , and click the **Network** tab.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，显示**开发者工具**，并单击**网络**选项卡。
- en: Enter the address `http://localhost:5000/` , or whatever port number was assigned
    to HTTP, and note how the server responds with a `307 Temporary Redirect` to port
    `5001` and that the certificate is now valid and trusted, as shown in *Figure
    14.8* :![](img/Image00111.jpg)
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入地址`http://localhost:5000/`，或者分配给HTTP的任何端口号，并注意服务器如何响应`307临时重定向`到端口`5001`，并且证书现在有效和受信任，如*图14.8*所示：！[](img/Image00111.jpg)
- en: 'Figure 14.8: The connection is now secured using a valid certificate and a
    307 redirect'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.8：现在使用有效证书和307重定向进行了安全连接
- en: Close Chrome.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome。
- en: Shut down the web server.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Web服务器。
- en: '**Good Practice** : Remember to shut down the Kestrel web server whenever you
    have finished testing a website.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '**最佳实践**：记得在测试网站完成后关闭Kestrel Web服务器。'
- en: Controlling the hosting environment
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制托管环境
- en: 'In earlier versions of ASP.NET Core, the project template set a rule to say
    that while in development mode, any unhandled exceptions will be shown in the
    browser window for the developer to see the details of the exception, as shown
    in the following code:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在较早版本的ASP.NET Core中，项目模板设置了一条规则，即在开发模式下，任何未处理的异常都将显示在浏览器窗口中，供开发人员查看异常的详细信息，如下面的代码所示：
- en: '```cs'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: if
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 如果
- en: (app.Environment.IsDevelopment())
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: （app.Environment.IsDevelopment（））
- en: '{'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: app.UseDeveloperExceptionPage();
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseDeveloperExceptionPage（）;
- en: '}'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: With ASP.NET Core 6 and later, this code is executed automatically by default
    so it is not included in the project template.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ASP.NET Core 6及更高版本，默认情况下会自动执行此代码，因此不包括在项目模板中。
- en: How does ASP.NET Core know when we are running in development mode so that the
    `IsDevelopment` method returns `true` ? Let's find out.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core如何知道我们何时处于开发模式，以便`IsDevelopment`方法返回`true`？让我们找出来。
- en: ASP.NET Core can read from environment variables to determine what hosting environment
    to use, for example, `DOTNET_ENVIRONMENT` or `ASPNETCORE_ENVIRONMENT` .
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core可以从环境变量中读取以确定要使用的托管环境，例如`DOTNET_ENVIRONMENT`或`ASPNETCORE_ENVIRONMENT`。
- en: 'You can override these settings during local development:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在本地开发期间覆盖这些设置：
- en: 'In the `Northwind.Web` folder, expand the folder named `Properties` , open
    the file named `launchSettings.json` , and note the profile named `Northwind.Web`
    that sets the hosting environment to `Development` , as shown highlighted in the
    following configuration:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`文件夹中，展开名为`Properties`的文件夹，打开名为`launchSettings.json`的文件，并注意将托管环境设置为`Development`的配置文件名为`Northwind.Web`，如下面的配置所示：
- en: '```cs'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '{'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"iisSettings"'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '"iisSettings"'
- en: ': {'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: ：{
- en: '"windowsAuthentication"'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '"windowsAuthentication"'
- en: ': false'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: ：假
- en: ','
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: ，
- en: '"anonymousAuthentication"'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '"anonymousAuthentication"'
- en: ': true'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: ': true'
- en: ','
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: ','
- en: '"iisExpress"'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '"iisExpress"'
- en: ': {'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: ': {'
- en: '"applicationUrl"'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '"applicationUrl"'
- en: ': "http://localhost:56111"'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: ': "http://localhost:56111"'
- en: ','
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: ','
- en: '"sslPort"'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '"sslPort"'
- en: ': 44329'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: ': 44329'
- en: '}'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '},'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"profiles"'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '"profiles"'
- en: ': {'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: ': {'
- en: '**"Northwind.Web"**'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**"Northwind.Web"**'
- en: '**: {**'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '**: {**'
- en: '**"commandName"**'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '**"commandName"**'
- en: '**:**'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '**:**'
- en: '**"Project"**'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '**"Project"**'
- en: '**,**'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '**,**'
- en: '**"dotnetRunMessages"**'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '**"dotnetRunMessages"**'
- en: '**:**'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '**:**'
- en: '**"true"**'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '**"true"**'
- en: '**,**'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '**,**'
- en: '**"launchBrowser"**'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '**"launchBrowser"**'
- en: '**:**'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '**:**'
- en: '**true**'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '**true**'
- en: '**,**'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '**,**'
- en: '**"applicationUrl"**'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '**"applicationUrl"**'
- en: '**:**'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '**:**'
- en: '**"https://localhost:5001;http://localhost:5000"**'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '**"https://localhost:5001;http://localhost:5000"**'
- en: '**,**'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '**,**'
- en: '**"environmentVariables"**'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '**"environmentVariables"**'
- en: '**: {**'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**: {**'
- en: '**"ASPNETCORE_ENVIRONMENT"**'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '**"ASPNETCORE_ENVIRONMENT"**'
- en: '**:**'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '**:**'
- en: '**"Development"**'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '**"Development"**'
- en: '**}**'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '**}**'
- en: '**},**'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**},**'
- en: '"IIS Express"'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '"IIS Express"'
- en: ': {'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: ': {'
- en: '"commandName"'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '"commandName"'
- en: ': "IISExpress"'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: ': "IISExpress"'
- en: ','
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: ','
- en: '"launchBrowser"'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '"launchBrowser"'
- en: ': true'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: ': true'
- en: ','
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: ','
- en: '"environmentVariables"'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '"environmentVariables"'
- en: ': {'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: ': {'
- en: '"ASPNETCORE_ENVIRONMENT"'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '"ASPNETCORE_ENVIRONMENT"'
- en: ': "Development"'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: ': "Development"'
- en: '}'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Change the randomly assigned port numbers for HTTP to `5000` and HTTPS to `5001`
    .
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将HTTP的随机分配的端口号更改为`5000`，HTTPS更改为`5001`。
- en: Change the environment to `Production` . Optionally, change `launchBrowser`
    to `false` to prevent Visual Studio from automatically launching a browser.
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将环境更改为`Production`。可选地，将`launchBrowser`更改为`false`，以防止Visual Studio自动启动浏览器。
- en: 'Start the website and note the hosting environment is `Production` , as shown
    in the following output:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站，并注意托管环境为`Production`，如下所示：
- en: '```cs'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: 'info: Microsoft.Hosting.Lifetime[0]'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 'info: Microsoft.Hosting.Lifetime[0]'
- en: 'Hosting environment: Production'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 托管环境：生产
- en: '```'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Shut down the web server.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Web服务器。
- en: In `launchSettings.json` , change the environment back to `Development` .
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`launchSettings.json`中，将环境更改回`Development`。
- en: The `launchSettings.json` file also has a configuration for using IIS as the
    web server using random port numbers. In this book, we will only be using Kestrel
    as the web server since it is cross-platform.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '`launchSettings.json` 文件还有一个配置，可以使用随机端口号将IIS作为Web服务器。在本书中，我们将只使用Kestrel作为Web服务器，因为它是跨平台的。'
- en: Separating configuration for services and pipeline
  id: totrans-352
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为服务和管道分离配置
- en: Putting all code to initialize a simple web project in `Program.cs` can be a
    good idea, especially for web services, so we will see this style again in *Chapter
    16* , *Building and Consuming Web Services* .
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有初始化简单Web项目的代码放在`Program.cs`中可能是一个好主意，特别是对于Web服务，所以我们将在*第16章*中再次看到这种风格，*构建和使用Web服务*。
- en: 'However, for anything more than the most basic web project, you might prefer
    to separate configuration into a separate `Startup` class with two methods:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于任何不止是最基本的Web项目，您可能更喜欢将配置分离到一个名为`Startup`的单独类中，其中包含两种方法：
- en: '`ConfigureServices(IServiceCollection services)` : to add dependency services
    to a dependency injection container, such as Razor Pages support, **Cross-Origin
    Resource Sharing** (**CORS** ) support, or a database context for working with
    the Northwind database.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConfigureServices(IServiceCollection services)`: 向依赖注入容器中添加依赖服务，例如Razor页面支持，**跨源资源共享**（**CORS**）支持，或用于与Northwind数据库一起工作的数据库上下文。'
- en: '`Configure(IApplicationBuilder app, IWebHostEnvironment env)` : to set up the
    HTTP pipeline through which requests and responses flow. Call various `Use` methods
    on the `app` parameter to construct the pipeline in the order the features should
    be processed.![](img/Image00112.jpg)'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Configure(IApplicationBuilder app, IWebHostEnvironment env)`：设置HTTP管道，通过该管道请求和响应流动。在`app`参数上调用各种`Use`方法，以按照应该处理特性的顺序构建管道。![](img/Image00112.jpg)'
- en: 'Figure 14.9: Startup class ConfigureServices and Configure methods diagram'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.9：Startup类ConfigureServices和Configure方法图示
- en: Both methods will get called automatically by the runtime.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 两种方法都将由运行时自动调用。
- en: 'Let''s create a `Startup` class now:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个`Startup`类：
- en: Add a new class file to the `Northwind.Web` project named `Startup.cs` .
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向`Northwind.Web`项目添加一个名为`Startup.cs`的新类文件。
- en: 'Modify `Startup.cs` , as shown in the following code:'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Startup.cs`，如下所示：
- en: '```cs'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: namespace
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: namespace
- en: Northwind.Web
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: Northwind.Web
- en: ;
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: public
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: class
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: Startup
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: Startup
- en: '{'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: public
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: ConfigureServices
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: ConfigureServices
- en: (
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: IServiceCollection services
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: IServiceCollection services
- en: )
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '}'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: public
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: Configure
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: Configure
- en: (
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: IApplicationBuilder app, IWebHostEnvironment env
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: IApplicationBuilder app, IWebHostEnvironment env
- en: )
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: if
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: if
- en: (!env.IsDevelopment())
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: (!env.IsDevelopment())
- en: '{'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: app.UseHsts();
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHsts();
- en: '}'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: app.UseRouting(); // start endpoint routing
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseRouting(); // 启动端点路由
- en: app.UseHttpsRedirection();
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHttpsRedirection();
- en: app.UseEndpoints(endpoints =>
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseEndpoints(endpoints =>
- en: '{'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: endpoints.MapGet("/"
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: endpoints.MapGet("/"
- en: ', () => "Hello World!"'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: ', () => "Hello World!"'
- en: );
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '});'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '}'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Note the following about the code:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 注意代码的以下内容：
- en: The `ConfigureServices` method is currently empty because we do not yet need
    any dependency services added.
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConfigureServices`方法目前为空，因为我们还没有需要添加的任何依赖服务。'
- en: The `Configure` method sets up the HTTP request pipeline and enables the use
    of endpoint routing. It configures a routed endpoint to wait for requests using
    the same map for each HTTP `GET` request for the root path `/` that responds to
    those requests by returning the plain text `"Hello World!"` . We will learn about
    routed endpoints and their benefits at the end of this chapter.
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Configure`方法设置了HTTP请求管道，并启用了端点路由的使用。它配置了一个路由端点，以等待使用相同的映射对每个HTTP `GET`请求的根路径`/`进行响应，通过返回纯文本`"Hello
    World!"`来响应这些请求。我们将在本章末学习有关路由端点及其好处的知识。'
- en: Now we must specify that we want to use the `Startup` class in the application
    entry point.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须指定我们要在应用程序入口点中使用`Startup`类。
- en: 'Modify `Program.cs` , as shown in the following code:'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Program.cs`，如下所示：
- en: '```cs'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Northwind.Web; // Startup
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: Northwind.Web; // Startup
- en: Host.CreateDefaultBuilder(args)
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: Host.CreateDefaultBuilder(args)
- en: .ConfigureWebHostDefaults(webBuilder =>
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: .ConfigureWebHostDefaults(webBuilder =>
- en: '{'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: webBuilder.UseStartup<Startup>();
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: webBuilder.UseStartup<Startup>();
- en: '}).Build().Run();'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '}).Build().Run();'
- en: Console.WriteLine("This executes after the web server has stopped!"
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: Console.WriteLine("This executes after the web server has stopped!"
- en: );
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '```'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website and note that it has the same behavior as before.
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站，并注意它具有与以前相同的行为。
- en: Shut down the web server.
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Web服务器。
- en: In all the other website and service projects that we create in this book, we
    will use the single `Program.cs` file created by .NET 6 project templates. If
    you like the `Startup.cs` way of doing things, then you will see in this chapter
    how to use it.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中创建的所有其他网站和服务项目中，我们将使用由.NET 6项目模板创建的单个`Program.cs`文件。如果您喜欢`Startup.cs`的做事方式，那么您将在本章中看到如何使用它。
- en: Enabling a website to serve static content
  id: totrans-420
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使网站能够提供静态内容
- en: A website that only ever returns a single plain text message isn't very useful!
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 一个只返回单个纯文本消息的网站并不是很有用！
- en: At a minimum, it ought to return static HTML pages, CSS that the web pages will
    use for styling, and any other static resources, such as images and videos.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 至少应该返回静态HTML页面、网页用于样式设计的CSS以及其他静态资源，如图像和视频。
- en: By convention, these files should be stored in a directory named `wwwroot` to
    keep them separate from the dynamically executing parts of your website project.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 按照惯例，这些文件应存储在名为`wwwroot`的目录中，以使它们与网站项目的动态执行部分分开。
- en: Creating a folder for static files and a web page
  id: totrans-424
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建静态文件和网页的文件夹
- en: 'You will now create a folder for your static website resources and a basic
    index page that uses Bootstrap for styling:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将为静态网站资源创建一个文件夹和一个使用Bootstrap进行样式设计的基本主页：
- en: In the `Northwind.Web` project/folder, create a folder named `wwwroot` .
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`项目/文件夹中，创建一个名为`wwwroot`的文件夹。
- en: Add a new HTML page file to the `wwwroot` folder named `index.html` .
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`wwwroot`文件夹中添加一个新的HTML页面文件，命名为`index.html`。
- en: 'Modify its content to link to CDN-hosted Bootstrap for styling, and use modern
    good practices such as setting the viewport, as shown in the following markup:'
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改其内容以链接到CDN托管的Bootstrap进行样式设计，并使用现代的良好实践，例如设置视口，如下面的标记所示：
- en: '```cs'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <!doctype
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: <!doctype
- en: html
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: html
- en: '>'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: html
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: html
- en: lang
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: lang
- en: '='
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"en"'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '"en"'
- en: '>'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: head
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 头
- en: '>'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <!-- Required meta tags -->
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 必需的元标记 -->
- en: <
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: meta
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: meta
- en: charset
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: charset
- en: '='
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"utf-8"'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '"utf-8"'
- en: />
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: meta
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: meta
- en: name
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 名称
- en: '='
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"viewport"'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '"视口"'
- en: content
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 内容
- en: '='
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"width=device-width, initial-scale=1 "'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '"width=device-width, initial-scale=1 "'
- en: />
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <!-- Bootstrap CSS -->
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Bootstrap CSS -->
- en: <
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: link
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 链接
- en: href
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: href
- en: '='
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"'
- en: rel
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: rel
- en: '='
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"stylesheet"'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '"stylesheet"'
- en: integrity
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 完整性
- en: '='
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '"sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"'
- en: crossorigin
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: crossorigin
- en: '='
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"anonymous"'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '"anonymous"'
- en: '>'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: title
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 标题
- en: '>'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Welcome ASP.NET Core!</
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎 ASP.NET Core！</
- en: title
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 标题
- en: '>'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: head
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 头
- en: '>'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: body
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 身体
- en: '>'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"container"'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '"container"'
- en: '>'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"jumbotron"'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '"jumbotron"'
- en: '>'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h1
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: class
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"display-3"'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: '"display-3"'
- en: '>'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Welcome to Northwind B2B</
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到Northwind B2B</
- en: h1
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: '>'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: class
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"lead"'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '"引导"'
- en: '>'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: We supply products to our customers.</
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 我们向客户提供产品。</
- en: p
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: hr
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: hr
- en: />
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h2
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: h2
- en: '>'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: This is a static HTML page.</
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个静态的HTML页面。</
- en: h2
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: h2
- en: '>'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Our customers include restaurants, hotels, and cruise lines.</
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的客户包括餐馆、酒店和游轮公司。</
- en: p
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: a
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: a
- en: class
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"btn btn-primary"'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '"btn btn-primary"'
- en: href
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: href
- en: '='
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"https://www.asp.net/"'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '"https://www.asp.net/"'
- en: '>'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Learn more</
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 了解更多</
- en: a
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: a
- en: '>'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: p
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: body
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 身体
- en: '>'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: html
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: html
- en: '>'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: '**Good Practice** : To get the latest `<link>` element for Bootstrap, copy
    and paste it from the documentation at the following link: [https://getbootstrap.com/docs/5.0/getting-started/introduction/#starter-template](https://getbootstrap.com/docs/5.0/getting-started/introduction/#starter-template)
    .'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '**最佳实践**：要获取最新的Bootstrap`<link>`元素，请从以下链接的文档中复制并粘贴：[https://getbootstrap.com/docs/5.0/getting-started/introduction/#starter-template](https://getbootstrap.com/docs/5.0/getting-started/introduction/#starter-template)。'
- en: Enabling static and default files
  id: totrans-563
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用静态和默认文件
- en: If you were to start the website now and enter `http://localhost:5000/index.html`
    in the address box, the website would return a `404 Not Found` error saying no
    web page was found. To enable the website to return static files such as `index.html`
    , we must explicitly configure that feature.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您现在启动网站并在地址栏中输入`http://localhost:5000/index.html`，网站将返回一个`404 Not Found`错误，表示找不到网页。要使网站能够返回静态文件，如`index.html`，我们必须显式配置该功能。
- en: Even if we enable static files, if you were to start the website and enter `http://localhost:5000/`
    in the address box, the website will return a `404 Not Found` error because the
    web server does not know what to return by default if no named file is requested.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们启用了静态文件，如果您启动网站并在地址栏中输入`http://localhost:5000/`，网站将返回一个`404 Not Found`错误，因为Web服务器不知道在没有请求命名文件时默认返回什么。
- en: 'You will now enable static files, explicitly configure default files, and change
    the URL path registered that returns the plain text `Hello World!` response:'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将启用静态文件，显式配置默认文件，并更改注册的URL路径，以返回纯文本`Hello World!`响应：
- en: 'In `Startup.cs` , in the `Configure` method, add statements after enabling
    HTTPS redirection to enable static files and default files, and modify the statement
    that maps a `GET` request to return the `Hello World!` plain text response to
    only respond to the URL path `/hello` , as shown highlighted in the following
    code:'
  id: totrans-567
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Startup.cs`中的`Configure`方法中，添加语句以启用HTTPS重定向后启用静态文件和默认文件，并修改将`GET`请求映射到返回`Hello
    World!`纯文本响应的语句，只响应URL路径`/hello`，如下面代码中突出显示的那样：
- en: '```cs'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: app.UseHttpsRedirection();
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHttpsRedirection();
- en: '**app.UseDefaultFiles();**'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '**app.UseDefaultFiles();**'
- en: '**// index.html, default.html, and so on**'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '**// index.html, default.html, and so on**'
- en: '**app.UseStaticFiles();**'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '**app.UseStaticFiles();**'
- en: app.UseEndpoints(endpoints =>
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseEndpoints(endpoints =>
- en: '{'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: endpoints.MapGet(
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: endpoints.MapGet(
- en: '**"/hello"**'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '**"/hello"**'
- en: ', () => "Hello World!"'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: ', () => "Hello World!"'
- en: );
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '});'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: The call to `UseDefaultFiles` must come before the call to `UseStaticFiles`
    , or it will not work! You will learn more about the ordering of middleware and
    endpoint routing at the end of this chapter.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 对`UseDefaultFiles`的调用必须在对`UseStaticFiles`的调用之前，否则它将无法工作！您将在本章末尾了解有关中间件和端点路由顺序的更多信息。
- en: Start the website.
  id: totrans-582
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站。
- en: Start **Chrome** and show **Developer Tools** .
  id: totrans-583
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动**Chrome**并显示**开发者工具**。
- en: In Chrome, enter `http://localhost:5000/` and note that you are redirected to
    the HTTPS address on port `5001` , and the `index.html` file is now returned over
    that secure connection because it is one of the possible default files for this
    website.
  id: totrans-584
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，输入`http://localhost:5000/`，注意到您被重定向到端口`5001`上的HTTPS地址，并且`index.html`文件现在通过安全连接返回，因为它是此网站的可能默认文件之一。
- en: In **Developer Tools** , note the request for the Bootstrap stylesheet.
  id: totrans-585
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**开发人员工具**中，注意到对Bootstrap样式表的请求。
- en: In Chrome, enter `http://localhost:5000/hello` and note that it returns the
    plain text `Hello World!` as before.
  id: totrans-586
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，输入`http://localhost:5000/hello`，注意到它返回与以前相同的纯文本`Hello World!`。
- en: Close Chrome and shut down the web server.
  id: totrans-587
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome并关闭Web服务器。
- en: If all web pages are static, that is, they only get changed manually by a web
    editor, then our website programming work is complete. But almost all websites
    need dynamic content, which means a web page that is generated at runtime by executing
    code.
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有网页都是静态的，也就是说，它们只能通过网页编辑器手动更改，那么我们的网站编程工作就完成了。但几乎所有的网站都需要动态内容，这意味着通过执行代码在运行时生成的网页。
- en: The easiest way to do that is to use a feature of ASP.NET Core named **Razor
    Pages** .
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是使用ASP.NET Core的一个特性，名为**Razor Pages**。
- en: Exploring ASP.NET Core Razor Pages
  id: totrans-590
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索ASP.NET Core Razor页面
- en: ASP.NET Core Razor Pages allow a developer to easily mix C# code statements
    with HTML markup to make the generated web page dynamic. That is why they use
    the `.cshtml` file extension.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core Razor页面允许开发人员轻松地将C#代码语句与HTML标记混合在一起，使生成的网页动态化。这就是为什么它们使用`.cshtml`文件扩展名。
- en: By convention, ASP.NET Core looks for Razor Pages in a folder named `Pages`
    .
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 按照惯例，ASP.NET Core在名为`Pages`的文件夹中查找Razor页面。
- en: Enabling Razor Pages
  id: totrans-593
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用Razor页面
- en: 'You will now copy and change the static HTML page into a dynamic Razor Page,
    and then add and enable the Razor Pages service:'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您将复制并将静态HTML页面更改为动态Razor页面，然后添加并启用Razor页面服务：
- en: In the `Northwind.Web` project folder, create a folder named `Pages` .
  id: totrans-595
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`项目文件夹中，创建一个名为`Pages`的文件夹。
- en: Copy the `index.html` file into the `Pages` folder.
  id: totrans-596
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`index.html`文件复制到`Pages`文件夹中。
- en: For the file in the `Pages` folder, rename the file extension from `.html` to
    `.cshtml` .
  id: totrans-597
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于`Pages`文件夹中的文件，将文件扩展名从`.html`更改为`.cshtml`。
- en: Remove the `<h2>` element that says that this is a static HTML page.
  id: totrans-598
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除说这是一个静态HTML页面的`<h2>`元素。
- en: 'In `Startup.cs` , in the `ConfigureServices` method, add a statement to add
    ASP.NET Core Razor Pages and its related services, such as model binding, authorization,
    anti-forgery, views, and tag helpers, to the builder, as shown in the following
    code:'
  id: totrans-599
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Startup.cs`中，在`ConfigureServices`方法中，添加一个语句来添加ASP.NET Core Razor页面及其相关服务，如模型绑定、授权、防伪造、视图和标签助手，到构建器中，如下面的代码所示：
- en: '```cs'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: services.AddRazorPages();
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: services.AddRazorPages();
- en: '```'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'In `Startup.cs` , in the `Configure` method, in the configuration to use endpoints,
    add a statement to call the `MapRazorPages` method, as shown highlighted in the
    following code:'
  id: totrans-603
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Startup.cs`中，在`Configure`方法中，在使用端点的配置中，添加一个语句来调用`MapRazorPages`方法，如下面的代码所示：
- en: '```cs'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: app.UseEndpoints(endpoints =>
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseEndpoints(endpoints =>
- en: '{'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '**endpoints.MapRazorPages();**'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: '**endpoints.MapRazorPages();**'
- en: endpoints.MapGet("/hello"
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: endpoints.MapGet("/hello"
- en: ',  () => "Hello World!"'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: ',  () => "Hello World!"'
- en: );
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '});'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Adding code to a Razor Page
  id: totrans-613
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向Razor页面添加代码
- en: 'In the HTML markup of a web page, Razor syntax is indicated by the `@` symbol.
    Razor Pages can be described as follows:'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 在网页的HTML标记中，Razor语法由`@`符号表示。Razor页面可以描述如下：
- en: They require the `@page` directive at the top of the file.
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们需要在文件顶部添加`@page`指令。
- en: 'They can optionally have an `@functions` section that defines any of the following:'
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们可以选择性地具有定义以下任何内容的`@functions`部分：
- en: Properties for storing data values, like in a class definition. An instance
    of that class is automatically instantiated named `Model` that can have its properties
    set in special methods and you can get the property values in the HTML.
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于存储数据值的属性，就像在类定义中一样。自动实例化该类的一个实例，命名为`Model`，可以在特殊方法中设置其属性，并且可以在HTML中获取属性值。
- en: Methods named `OnGet` , `OnPost` , `OnDelete` , and so on that execute when
    HTTP requests are made, such as `GET` , `POST` , and `DELETE` .
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名为`OnGet`、`OnPost`、`OnDelete`等的方法，当进行HTTP请求时执行，例如`GET`、`POST`和`DELETE`。
- en: 'Let''s now convert the static HTML page into a Razor Page:'
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将静态HTML页面转换为Razor页面：
- en: In the `Pages` folder, open `index.cshtml` .
  id: totrans-620
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Pages`文件夹中，打开`index.cshtml`。
- en: Add the `@page` statement to the top of the file.
  id: totrans-621
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件顶部添加`@page`语句。
- en: After the `@page` statement, add an `@functions` statement block.
  id: totrans-622
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`@page`语句之后，添加一个`@functions`语句块。
- en: Define a property to store the name of the current day as a `string` value.
  id: totrans-623
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个属性来存储当前日期的名称作为`string`值。
- en: 'Define a method to set `DayName` that executes when an HTTP `GET` request is
    made for the page, as shown in the following code:'
  id: totrans-624
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个方法来设置`DayName`，当页面发出HTTP `GET`请求时执行，如下面的代码所示：
- en: '```cs'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@page'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: '@page'
- en: '@functions'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: '@functions'
- en: '{'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: public
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: string
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: string
- en: '? DayName { get'
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: '? DayName { get'
- en: ; set
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: ; set
- en: ; }
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: ; }
- en: public
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: OnGet
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: OnGet
- en: ()
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: ()
- en: '{'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: Model.DayName = DateTime.Now.ToString("dddd"
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: Model.DayName = DateTime.Now.ToString("dddd"
- en: );
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Output the day name inside the second HTML paragraph, as shown highlighted
    in the following markup:'
  id: totrans-644
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二个HTML段落中输出日期名称，如下标记所示：
- en: '```cs'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '**It''s @Model.DayName!**'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 今天是@Model.DayName！
- en: Our customers include restaurants, hotels, and cruise lines.</
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的客户包括餐馆、酒店和游轮公司。</
- en: p
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website.
  id: totrans-654
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站。
- en: In Chrome, enter `https://localhost:5001/` and note the current day name is
    output on the page, as shown in *Figure 14.10* :![](img/Image00113.jpg)
  id: totrans-655
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，输入`https://localhost:5001/`，注意到当前日期名称输出在页面上，如*图14.10*所示：![](img/Image00113.jpg)
- en: 'Figure 14.10: Welcome to Northwind page showing the current day'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.10：欢迎来到Northwind页面，显示当前日期
- en: In Chrome, enter `https://localhost:5001/index.html` , which exactly matches
    the static filename, and note that it returns the static HTML page as before.
  id: totrans-657
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，输入`https://localhost:5001/index.html`，它与静态文件名完全匹配，并且注意到它返回与以前相同的静态HTML页面。
- en: In Chrome, enter `https://localhost:5001/hello` , which exactly matches the
    endpoint route that returns plain text, and note that it returns `Hello World!`
    as before.
  id: totrans-658
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，输入`https://localhost:5001/hello`，这与返回纯文本的端点路由完全匹配，并注意它像以前一样返回`Hello
    World!`。
- en: Close Chrome and shut down the web server.
  id: totrans-659
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome并关闭Web服务器。
- en: Using shared layouts with Razor Pages
  id: totrans-660
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Razor页面的共享布局
- en: Most websites have more than one page. If every page had to contain all of the
    boilerplate markup that is currently in `index.cshtml` , that would become a pain
    to manage. So, ASP.NET Core has a feature named **layouts** .
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数网站都有多个页面。如果每个页面都必须包含当前在`index.cshtml`中的所有样板标记，那将变得难以管理。因此，ASP.NET Core有一个名为**layouts**的功能。
- en: To use layouts, we must create a Razor file to define the default layout for
    all Razor Pages (and all MVC views) and store it in a `Shared` folder so that
    it can be easily found by convention. The name of this file can be anything, because
    we will specify it, but `_Layout.cshtml` is good practice.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用布局，我们必须创建一个Razor文件来定义所有Razor页面（和所有MVC视图）的默认布局，并将其存储在`Shared`文件夹中，以便可以轻松地按照约定找到它。此文件的名称可以是任何名称，因为我们将指定它，但`_Layout.cshtml`是一个很好的做法。
- en: We must also create a specially named file to set the default layout file for
    all Razor Pages (and all MVC views). This file must be named `_ViewStart.cshtml`
    .
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还必须创建一个特别命名的文件来设置所有Razor页面（和所有MVC视图）的默认布局文件。此文件必须命名为`_ViewStart.cshtml`。
- en: 'Let''s see layouts in action:'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看布局的实际效果：
- en: In the `Pages` folder, add a file named `_ViewStart.cshtml` . (The Visual Studio
    item template is named **Razor View Start** .)
  id: totrans-665
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Pages`文件夹中，添加一个名为`_ViewStart.cshtml`的文件。（Visual Studio项目模板名为**Razor View Start**。）
- en: 'Modify its content, as shown in the following markup:'
  id: totrans-666
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改其内容，如下面的标记所示：
- en: '```cs'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@{'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '@{'
- en: Layout = "_Layout"
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: Layout = "_Layout"
- en: ;
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: '}'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: In the `Pages` folder, create a folder named `Shared` .
  id: totrans-673
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Pages`文件夹中，创建一个名为`Shared`的文件夹。
- en: In the `Shared` folder, create a file named `_Layout.cshtml` . (The Visual Studio
    item template is named **Razor Layout** .)
  id: totrans-674
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Shared`文件夹中，创建一个名为`_Layout.cshtml`的文件。（Visual Studio项目模板名为**Razor Layout**。）
- en: 'Modify the content of `_Layout.cshtml` (it is similar to `index.cshtml` so
    you can copy and paste the HTML markup from there), as shown in the following
    markup:'
  id: totrans-675
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`_Layout.cshtml`的内容（它类似于`index.cshtml`，因此您可以从那里复制和粘贴HTML标记），如下面的标记所示：
- en: '```cs'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <!doctype
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: <!doctype
- en: html
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: html
- en: '>'
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: html
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: html
- en: lang
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: lang
- en: '='
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"en"'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: '"en"'
- en: '>'
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: head
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: head
- en: '>'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <!-- Required meta tags -->
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Required meta tags -->
- en: <
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: meta
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: meta
- en: charset
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: charset
- en: '='
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"utf-8"'
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: '"utf-8"'
- en: />
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: meta
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: meta
- en: name
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: name
- en: '='
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"viewport"'
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: '"viewport"'
- en: content
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: content
- en: '='
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"width=device-width, initial-scale=1, shrink-to-fit=no"'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: '"width=device-width, initial-scale=1, shrink-to-fit=no"'
- en: />
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <!-- Bootstrap CSS -->
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Bootstrap CSS -->
- en: <
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: link
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: link
- en: href
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: href
- en: '='
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"'
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: '"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"'
- en: rel
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: rel
- en: '='
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"stylesheet"'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: '"stylesheet"'
- en: integrity
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: integrity
- en: '='
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"'
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: '"sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"'
- en: crossorigin
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: crossorigin
- en: '='
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"anonymous"'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: '"anonymous"'
- en: '>'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: title
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: title
- en: '>'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@ViewData["Title"'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: '@ViewData["Title"'
- en: ']</'
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: ']</'
- en: title
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: title
- en: '>'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: head
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: head
- en: '>'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: body
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: body
- en: '>'
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: class
- en: '='
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"container"'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: '"container"'
- en: '>'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@RenderBody()'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '@RenderBody()'
- en: <
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: hr
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: hr
- en: />
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: footer
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: footer
- en: '>'
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Copyright &copy;
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: Copyright &copy;
- en: 2021 - @ViewData["Title"
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 2021 - @ViewData["Title"
- en: ']</'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: ']</'
- en: p
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: footer
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: footer
- en: '>'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <!-- JavaScript to enable features like carousel -->
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- JavaScript to enable features like carousel -->
- en: <
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: script
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: script
- en: src
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: src
- en: '='
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"'
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: '"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"'
- en: integrity
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: integrity
- en: '='
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj"'
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: '"sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj"'
- en: crossorigin
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: crossorigin
- en: '='
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"anonymous"'
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: '"anonymous"'
- en: '></'
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: '></'
- en: script
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: script
- en: '>'
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@RenderSection("Scripts"'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '@RenderSection("Scripts"'
- en: ', required: false'
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: ', required: false'
- en: )
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: </
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: body
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: body
- en: '>'
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: html
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: html
- en: '>'
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding markup, note the following:'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查上述标记时，请注意以下内容：
- en: '`<title>` is set dynamically using server-side code from a dictionary named
    `ViewData` . This is a simple way to pass data between different parts of an ASP.NET
    Core website. In this case, the data will be set in a Razor Page class file and
    then output in the shared layout.'
  id: totrans-787
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<title>`是使用来自名为`ViewData`的字典的服务器端代码动态设置的。这是在ASP.NET Core网站的不同部分之间传递数据的简单方法。在这种情况下，数据将在Razor页面类文件中设置，然后在共享布局中输出。'
- en: '`@RenderBody()` marks the insertion point for the view being requested.'
  id: totrans-788
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@RenderBody()`标记了视图请求的插入点。'
- en: A horizontal rule and footer will appear at the bottom of each page.
  id: totrans-789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个页面底部都会出现一个水平线和页脚。
- en: At the bottom of the layout is a script to implement some cool features of Bootstrap
    that we can use later, such as a carousel of images.
  id: totrans-790
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在布局底部有一个脚本，用于实现Bootstrap的一些很酷的功能，我们以后可以使用，比如图像的轮播。
- en: After the `<script>` elements for Bootstrap, we have defined a section named
    `Scripts` so that a Razor Page can optionally inject additional scripts that it
    needs.
  id: totrans-791
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Bootstrap的`<script>`元素之后，我们定义了一个名为`Scripts`的部分，以便Razor Page可以选择性地注入它需要的其他脚本。
- en: Modify `index.cshtml` to remove all HTML markup except `<div class="jumbotron">`
    and its contents, and leave the C# code in the `@functions` block that you added
    earlier.
  id: totrans-792
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`index.cshtml`，除了`<div class="jumbotron">`及其内容之外，删除所有HTML标记，并保留您之前添加的`@functions`块中的C#代码。
- en: 'Add a statement to the `OnGet` method to store a page title in the `ViewData`
    dictionary, and modify the button to navigate to a suppliers page (which we will
    create in the next section), as shown highlighted in the following markup:'
  id: totrans-793
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`OnGet`方法中添加一个语句，将页面标题存储在`ViewData`字典中，并修改按钮以导航到供应商页面（我们将在下一节中创建），如下面标记中所示：
- en: '```cs'
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@page'
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: '@page'
- en: '@functions'
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: '@functions'
- en: '{'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: public
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: string
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: string
- en: '? DayName { get'
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: '? DayName { get'
- en: ; set
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: ; set
- en: ; }
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: ; }
- en: public
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: OnGet()
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: OnGet()
- en: '{'
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '**ViewData[**'
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: '**ViewData[**'
- en: '**"Title"**'
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: '**"Title"**'
- en: '**] =**'
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: '**] =**'
- en: '**"Northwind B2B"**'
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: '**"Northwind B2B"**'
- en: '**;**'
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: '**;**'
- en: Model.DayName = DateTime.Now.ToString("dddd"
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: Model.DayName = DateTime.Now.ToString("dddd"
- en: );
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: <
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: class
- en: '='
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"jumbotron"'
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: '"jumbotron"'
- en: '>'
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h1
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: class
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: class
- en: '='
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"display-3"'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '"display-3"'
- en: '>'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Welcome to Northwind B2B</
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到Northwind B2B</
- en: h1
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: '>'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: class
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: class
- en: '='
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"lead"'
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: '"lead"'
- en: '>'
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: We supply products to our customers.</
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 我们向客户提供产品。</
- en: p
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-839
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: hr
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: hr
- en: />
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: <
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: It's @Model.DayName! Our customers include restaurants, hotels, and cruise lines.</
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: 它是@Model.DayName！我们的客户包括餐馆、酒店和游轮公司。</
- en: p
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '**<**'
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: '**<**'
- en: '**a**'
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**'
- en: '**class**'
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: '**类**'
- en: '**=**'
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: '**=**'
- en: '**"btn btn-primary"**'
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: '**“btn btn-primary”**'
- en: '**href**'
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: '**href**'
- en: '**=**'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: '**=**'
- en: '**"suppliers"**'
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: '**“供应商”**'
- en: '**>**'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**Learn more about our suppliers**'
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: '**了解更多关于我们的供应商**'
- en: '**</**'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: '**</**'
- en: '**a**'
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**'
- en: '**>**'
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: </
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: p
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website, visit it with Chrome, and note that it has similar behavior
    as before, although clicking the button for suppliers will give a `404 Not Found`
    error because we have not created that page yet.
  id: totrans-872
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站，使用Chrome访问，并注意它与以前的行为类似，尽管单击供应商按钮会给出`404 Not Found`错误，因为我们还没有创建该页面。
- en: Using code-behind files with Razor Pages
  id: totrans-873
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Razor Pages的code-behind文件
- en: Sometimes, it is better to separate the HTML markup from the data and executable
    code, so Razor Pages allows you to do this by putting the C# code in **code-behind**
    class files. They have the same name as the `.cshtml` file but end with `.cshtml.cs`
    .
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，将HTML标记与数据和可执行代码分开是更好的，因此Razor Pages允许您通过将C#代码放在**code-behind**类文件中来实现这一点。它们与`.cshtml`文件同名，但以`.cshtml.cs`结尾。
- en: 'You will now create a page that shows a list of suppliers. In this example,
    we are focusing on learning about code-behind files. In the next topic, we will
    load the list of suppliers from a database, but for now, we will simulate that
    with a hardcoded array of `string` values:'
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将创建一个显示供应商列表的页面。在这个例子中，我们专注于学习代码后台文件。在下一个主题中，我们将从数据库加载供应商列表，但现在，我们将用硬编码的`string`值数组来模拟：
- en: In the `Pages` folder, add two new files named `Suppliers.cshtml` and `Suppliers.cshtml.cs`
    . (The Visual Studio item template is named **Razor Page - Empty** and it creates
    both files.)
  id: totrans-876
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Pages`文件夹中，添加两个名为`Suppliers.cshtml`和`Suppliers.cshtml.cs`的新文件。（Visual Studio项目模板命名为**Razor
    Page - Empty**，它会创建这两个文件。）
- en: 'Add statements to the code-behind file named `Suppliers.cshtml.cs` , as shown
    in the following code:'
  id: totrans-877
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在名为`Suppliers.cshtml.cs`的code-behind文件中添加语句，如下所示：
- en: '```cs'
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Microsoft.AspNetCore.Mvc.RazorPages; // PageModel
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft.AspNetCore.Mvc.RazorPages; // PageModel
- en: namespace
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: namespace
- en: Northwind.Web.Pages
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: Northwind.Web.Pages
- en: ;
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: public
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: class
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: SuppliersModel
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: SuppliersModel
- en: ': PageModel'
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: ': PageModel'
- en: '{'
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: public
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: IEnumerable<string
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: IEnumerable<string
- en: '>? Suppliers { get'
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: '>? Suppliers { get'
- en: ; set
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: ; set
- en: ; }
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: ; }
- en: public
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: OnGet
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: OnGet
- en: ()
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: ()
- en: '{'
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: ViewData["Title"
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: ViewData["Title"
- en: '] = "Northwind B2B - Suppliers"'
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: '] = “Northwind B2B - 供应商”'
- en: ;
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: Suppliers = new
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: Suppliers = new
- en: '[]'
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: '[]```'
- en: '{'
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"Alpha Co"'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: “Alpha Co”
- en: ', "Beta Limited"'
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: ，“Beta有限公司”
- en: ', "Gamma Corp"'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: ，“Gamma Corp”
- en: '};'
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '}'
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding markup, note the following:'
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查前面的标记时，请注意以下内容：
- en: '`SuppliersModel` inherits from `PageModel` , so it has members such as the
    `ViewData` dictionary for sharing data. You can right-click on `PageModel` and
    select **Go To Definition** to see that it has lots more useful features, such
    as the entire `HttpContext` of the current request.'
  id: totrans-913
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SuppliersModel`继承自`PageModel`，因此它具有诸如用于共享数据的`ViewData`字典之类的成员。您可以右键单击`PageModel`，然后选择**转到定义**，以查看它还有更多有用的功能，比如当前请求的整个`HttpContext`。'
- en: '`SuppliersModel` defines a property for storing a collection of `string` values
    named `Suppliers` .'
  id: totrans-914
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SuppliersModel`定义了一个用于存储名为`Suppliers`的`string`值集合的属性。'
- en: When an HTTP `GET` request is made for this Razor Page, the `Suppliers` property
    is populated with some example supplier names from an array of `string` values.
    Later, we will populate this from the Northwind database.
  id: totrans-915
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当为此Razor页面发出HTTP`GET`请求时，`Suppliers`属性将从`string`值数组中的一些示例供应商名称中填充。稍后，我们将从Northwind数据库填充这个属性。
- en: 'Modify the contents of `Suppliers.cshtml` , as shown in the following markup:'
  id: totrans-916
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Suppliers.cshtml`的内容，如下标记所示：
- en: '```cs'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@page'
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: '@page'
- en: '@model Northwind.Web.Pages.SuppliersModel'
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: '@model Northwind.Web.Pages.SuppliersModel'
- en: <
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"row"'
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: “row”
- en: '>'
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h1
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: class
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"display-2"'
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: “display-2”
- en: '>'
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Suppliers</
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 供应商</
- en: h1
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: '>'
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: table
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: table
- en: class
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"table"'
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: “表”
- en: '>'
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: thead
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: thead
- en: class
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"thead-inverse"'
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: “thead-inverse”
- en: '>'
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: tr
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '><'
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: '><'
- en: th
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: th
- en: '>'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Company Name</
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: 公司名称</
- en: th
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: th
- en: '></'
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
  zh: '></'
- en: tr
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '>'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: thead
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: thead
- en: '>'
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: tbody
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: tbody
- en: '>'
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@if (Model.Suppliers is not null)'
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: '@if (Model.Suppliers is not null)'
- en: '{'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '@foreach(string name in Model.Suppliers)'
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: '@foreach(string name in Model.Suppliers)'
- en: '{'
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: <
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: tr
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '><'
  id: totrans-969
  prefs: []
  type: TYPE_NORMAL
  zh: '><'
- en: td
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: td
- en: '>'
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@name</'
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: '@name</'
- en: td
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
  zh: td
- en: '></'
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: '></'
- en: tr
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '>'
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '}'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: tbody
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: tbody
- en: '>'
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: table
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: table
- en: '>'
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding markup, note the following:'
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查前面的标记时，请注意以下内容：
- en: The model type for this Razor Page is set to `SuppliersModel` .
  id: totrans-990
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此Razor页面的模型类型设置为`SuppliersModel`。
- en: The page outputs an HTML table with Bootstrap styles.
  id: totrans-991
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该页面输出一个带有Bootstrap样式的HTML表格。
- en: The data rows in the table are generated by looping through the `Suppliers`
    property of `Model` if it is not `null` .
  id: totrans-992
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中的数据行是通过循环访问`Model`的`Suppliers`属性来生成的，如果它不是`null`。
- en: Start the website and visit it using Chrome.
  id: totrans-993
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站并使用Chrome访问。
- en: Click on the button to learn more about suppliers, and note the table of suppliers,
    as shown in *Figure 14.11* :![](img/Image00114.jpg)
  id: totrans-994
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击按钮了解更多有关供应商的信息，并注意供应商表，如*图14.11*所示：![](img/Image00114.jpg)
- en: 'Figure 14.11: The table of suppliers loaded from an array of strings'
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.11：从字符串数组加载的供应商表
- en: Using Entity Framework Core with ASP.NET Core
  id: totrans-996
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Entity Framework Core与ASP.NET Core
- en: 'Entity Framework Core is a natural way to get real data into a website. In
    *Chapter 13* , *Introducing Practical Applications of C# and .NET* , you created
    two pairs of class libraries: one for the entity models and one for the Northwind
    database context, for either SQL Server or SQLite or both. You will now use them
    in your website project.'
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: Entity Framework Core是将真实数据导入网站的一种自然方式。在*第13章*，*介绍C#和.NET的实际应用*中，您创建了两对类库：一个用于实体模型，一个用于Northwind数据库上下文，用于SQL
    Server或SQLite或两者。现在，您将在您的网站项目中使用它们。
- en: Configure Entity Framework Core as a service
  id: totrans-998
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Entity Framework Core作为服务
- en: Functionality such as Entity Framework Core database contexts that are needed
    by ASP.NET Core must be registered as a service during website startup. The code
    in the GitHub repository solution and below uses SQLite, but you can easily use
    SQL Server if you prefer.
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
  zh: 像ASP.NET Core所需的Entity Framework Core数据库上下文这样的功能必须在网站启动期间注册为服务。GitHub存储库解决方案中的代码以及下面的代码使用了SQLite，但如果您愿意，您也可以轻松地使用SQL
    Server。
- en: 'Let''s see how:'
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看：
- en: 'In the `Northwind.Web` project, add a project reference to the `Northwind.Common.DataContext`
    project for either SQLite or SQL Server, as shown in the following markup:'
  id: totrans-1001
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`项目中，为SQLite或SQL Server添加对`Northwind.Common.DataContext`项目的项目引用，如下面的标记所示：
- en: '```cs'
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <!-- change Sqlite to SqlServer if
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 如果要更改为SQL Server，请将Sqlite更改为SqlServer
- en: you prefer -->
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: 您更喜欢的话 -->
- en: <ItemGroup>
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: <ItemGroup>
- en: <ProjectReference Include="..\Northwind.Common.DataContext.Sqlite\
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: <ProjectReference Include="..\Northwind.Common.DataContext.Sqlite\
- en: Northwind.Common.DataContext.Sqlite.csproj"
  id: totrans-1007
  prefs: []
  type: TYPE_NORMAL
  zh: Northwind.Common.DataContext.Sqlite.csproj"
- en: />
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: </ItemGroup>
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: </ItemGroup>
- en: '```'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: The project reference must go all on one line with no line break.
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: 项目引用必须在一行上，不能换行。
- en: Build the `Northwind.Web` project.
  id: totrans-1012
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建`Northwind.Web`项目。
- en: 'In `Startup.cs` , import namespaces to work with your entity model types, as
    shown in the following code:'
  id: totrans-1013
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Startup.cs`中，导入命名空间以使用您的实体模型类型，如下面的代码所示：
- en: '```cs'
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Packt.Shared; // AddNorthwindContext extension method
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: Packt.Shared; // AddNorthwindContext扩展方法
- en: '```'
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add a statement to the `ConfigureServices` method to register the `Northwind`
    database context class, as shown in the following code:'
  id: totrans-1018
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ConfigureServices`方法中添加一个语句来注册`Northwind`数据库上下文类，如下面的代码所示：
- en: '```cs'
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: services.AddNorthwindContext();
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: services.AddNorthwindContext();
- en: '```'
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'In the `Northwind.Web` project, in the `Pages` folder, open `Suppliers.cshtml.cs`
    , and import the namespace for our database context, as shown in the following
    code:'
  id: totrans-1022
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`项目中，在`Pages`文件夹中，打开`Suppliers.cshtml.cs`，并导入我们数据库上下文的命名空间，如下面的代码所示：
- en: '```cs'
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Packt.Shared; // NorthwindContext
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: Packt.Shared; // NorthwindContext
- en: '```'
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'In the `SuppliersModel` class, add a private field to store the `Northwind`
    database context and a constructor to set it, as shown in the following code:'
  id: totrans-1027
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`SuppliersModel`类中，添加一个私有字段来存储`Northwind`数据库上下文，并添加一个构造函数来设置它，如下面的代码所示：
- en: '```cs'
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: private
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: 私人
- en: NorthwindContext db;
  id: totrans-1030
  prefs: []
  type: TYPE_NORMAL
  zh: NorthwindContext db;
- en: public
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: SuppliersModel
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: SuppliersModel
- en: (
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: NorthwindContext injectedContext
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: 注入的NorthwindContext
- en: )
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: db = injectedContext;
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: db = injectedContext;
- en: '}'
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1039
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Change the `Suppliers` property to contain `Supplier` objects instead of `string`
    values.
  id: totrans-1040
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Suppliers`属性更改为包含`Supplier`对象而不是`string`值。
- en: 'In the `OnGet` method, modify the statements to set the `Suppliers` property
    from the `Suppliers` property of the database context, sorted by country and then
    company name, as shown highlighted in the following code:'
  id: totrans-1041
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`OnGet`方法中，修改语句以从数据库上下文的`Suppliers`属性中设置`Suppliers`属性，按国家和公司名称排序，如下面代码中所示：
- en: '```cs'
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: public
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: void
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: OnGet
  id: totrans-1045
  prefs: []
  type: TYPE_NORMAL
  zh: OnGet
- en: ()
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: ()
- en: '{'
  id: totrans-1047
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: ViewData["Title"
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: ViewData["Title"
- en: '] = "Northwind B2B - Suppliers"'
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: '] = "Northwind B2B - 供应商"'
- en: ;
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: Suppliers =
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: Suppliers =
- en: '**db.Suppliers**'
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
  zh: '**db.Suppliers**'
- en: '**.OrderBy(c => c.Country).ThenBy(c => c.CompanyName)**'
  id: totrans-1053
  prefs: []
  type: TYPE_NORMAL
  zh: '**.OrderBy(c => c.Country).ThenBy(c => c.CompanyName)**'
- en: ;
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: '}'
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Modify the contents of `Suppliers.cshtml` to import the `Packt.Shared` namespace
    and render multiple columns for each supplier, as shown highlighted in the following
    markup:'
  id: totrans-1057
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Suppliers.cshtml`的内容，以导入`Packt.Shared`命名空间，并为每个供应商呈现多个列，如下面的标记所示：
- en: '```cs'
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@page'
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: '@page'
- en: '**@using Packt.Shared**'
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: '**@using Packt.Shared**'
- en: '@model Northwind.Web.Pages.SuppliersModel'
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: '@model Northwind.Web.Pages.SuppliersModel'
- en: <
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"row"'
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: '"row"'
- en: '>'
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h1
  id: totrans-1069
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: class
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"display-2"'
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: '"display-2"'
- en: '>'
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Suppliers</
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
  zh: 供应商</
- en: h1
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: '>'
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: table
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: 表
- en: class
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"table"'
  id: totrans-1081
  prefs: []
  type: TYPE_NORMAL
  zh: '"table"'
- en: '>'
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: thead
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: thead
- en: class
  id: totrans-1085
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"thead-inverse"'
  id: totrans-1087
  prefs: []
  type: TYPE_NORMAL
  zh: '"thead-inverse"'
- en: '>'
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: tr
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '>'
  id: totrans-1091
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: th
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
  zh: th
- en: '>'
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Company Name</
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: 公司名称</
- en: th
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: th
- en: '>'
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '**<**'
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: '**<**'
- en: '**th**'
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: '**th**'
- en: '**>**'
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**Country**'
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: '**国家**'
- en: '**</**'
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: '**</**'
- en: '**th**'
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
  zh: '**th**'
- en: '**>**'
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**<**'
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: '**<**'
- en: '**th**'
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: '**th**'
- en: '**>**'
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**Phone**'
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: '**Phone**'
- en: '**</**'
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: '**</**'
- en: '**th**'
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
  zh: '**th**'
- en: '**>**'
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: </
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: tr
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '>'
  id: totrans-1114
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: thead
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: thead
- en: '>'
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: tbody
  id: totrans-1119
  prefs: []
  type: TYPE_NORMAL
  zh: tbody
- en: '>'
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@if (Model.Suppliers is not null)'
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
  zh: '@if（Model.Suppliers不为空）'
- en: '{'
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '**@foreach(Supplier s in Model.Suppliers)**'
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: '**@foreach(Supplier s in Model.Suppliers)**'
- en: '{'
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: <
  id: totrans-1125
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: tr
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '>'
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '**<**'
  id: totrans-1128
  prefs: []
  type: TYPE_NORMAL
  zh: '**<**'
- en: '**td**'
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
  zh: '**td**'
- en: '**>**'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**@s.CompanyName**'
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
  zh: '**@s.CompanyName**'
- en: '**</**'
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
  zh: '**</**'
- en: '**td**'
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
  zh: '**td**'
- en: '**>**'
  id: totrans-1134
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**<**'
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: '**<**'
- en: '**td**'
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: '**td**'
- en: '**>**'
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**@s.Country**'
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
  zh: '**@s.Country**'
- en: '**</**'
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
  zh: '**</**'
- en: '**td**'
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: '**td**'
- en: '**>**'
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**<**'
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
  zh: '**<**'
- en: '**td**'
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
  zh: '**td**'
- en: '**>**'
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: '**@s.Phone**'
  id: totrans-1145
  prefs: []
  type: TYPE_NORMAL
  zh: '**@s.Phone**'
- en: '**</**'
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
  zh: '**</**'
- en: '**td**'
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: '**td**'
- en: '**>**'
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: '**>**'
- en: </
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: tr
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: tr
- en: '>'
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '}'
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: tbody
  id: totrans-1155
  prefs: []
  type: TYPE_NORMAL
  zh: tbody
- en: '>'
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1157
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: table
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
  zh: table
- en: '>'
  id: totrans-1159
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1160
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-1163
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website.
  id: totrans-1164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站。
- en: In Chrome, enter `https://localhost:5001/` .
  id: totrans-1165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，输入`https://localhost:5001/`。
- en: Click **Learn more about our suppliers** and note that the supplier table now
    loads from the database, as shown in *Figure 14.12* :![](img/Image00115.jpg)
  id: totrans-1166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**了解有关我们供应商的更多信息**，并注意供应商表现在从数据库加载，如*图14.12*所示：![](img/Image00115.jpg)
- en: 'Figure 14.12: The suppliers table loaded from the Northwind database'
  id: totrans-1167
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.12：从Northwind数据库加载的供应商表
- en: Manipulating data using Razor Pages
  id: totrans-1168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Razor Pages操纵数据
- en: You will now add functionality to insert a new supplier.
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将添加插入新供应商的功能。
- en: Enabling a model to insert entities
  id: totrans-1170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用模型以插入实体
- en: 'First, you will modify the supplier model so that it responds to HTTP `POST`
    requests when a visitor submits a form to insert a new supplier:'
  id: totrans-1171
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您将修改供应商模型，以便在访问者提交表单以插入新供应商时，它会响应HTTP `POST`请求：
- en: 'In the `Northwind.Web` project, in the `Pages` folder, open `Suppliers.cshtml.cs`
    and import the following namespace:'
  id: totrans-1172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`项目中，在`Pages`文件夹中，打开`Suppliers.cshtml.cs`，并导入以下命名空间：
- en: '```cs'
  id: totrans-1173
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-1174
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Microsoft.AspNetCore.Mvc; // [BindProperty], IActionResult
  id: totrans-1175
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft.AspNetCore.Mvc; // [BindProperty]，IActionResult
- en: '```'
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'In the `SuppliersModel` class, add a property to store a single supplier and
    a method named `OnPost` that adds the supplier to the `Suppliers` table in the
    Northwind database if its model is valid, as shown in the following code:'
  id: totrans-1177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`SuppliersModel`类中，添加一个属性来存储单个供应商，并添加一个名为`OnPost`的方法，如果其模型有效，则将供应商添加到Northwind数据库中的`Suppliers`表中，如下面的代码所示：
- en: '```cs'
  id: totrans-1178
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '[BindProperty'
  id: totrans-1179
  prefs: []
  type: TYPE_NORMAL
  zh: '[BindProperty'
- en: ']'
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: public
  id: totrans-1181
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: Supplier? Supplier { get
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: 供应商？ 供应商 { 获取
- en: ; set
  id: totrans-1183
  prefs: []
  type: TYPE_NORMAL
  zh: ; set
- en: ; }
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: ; }
- en: public
  id: totrans-1185
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: IActionResult
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
  zh: IActionResult
- en: OnPost
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
  zh: OnPost
- en: ()
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
  zh: ()
- en: '{'
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: if
  id: totrans-1190
  prefs: []
  type: TYPE_NORMAL
  zh: if
- en: ((Supplier is
  id: totrans-1191
  prefs: []
  type: TYPE_NORMAL
  zh: ((供应商是
- en: not
  id: totrans-1192
  prefs: []
  type: TYPE_NORMAL
  zh: 不
- en: 'null'
  id: totrans-1193
  prefs: []
  type: TYPE_NORMAL
  zh: 'null'
- en: ) && ModelState.IsValid)
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: ）&& ModelState.IsValid)
- en: '{'
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: db.Suppliers.Add(Supplier);
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
  zh: db.Suppliers.Add(Supplier);
- en: db.SaveChanges();
  id: totrans-1197
  prefs: []
  type: TYPE_NORMAL
  zh: db.SaveChanges();
- en: return
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: RedirectToPage("/suppliers"
  id: totrans-1199
  prefs: []
  type: TYPE_NORMAL
  zh: RedirectToPage("/suppliers"
- en: );
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: else
  id: totrans-1202
  prefs: []
  type: TYPE_NORMAL
  zh: 否则
- en: '{'
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: return
  id: totrans-1204
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: Page(); // return to original page
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
  zh: Page(); // 返回原始页面
- en: '}'
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-1207
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding code, note the following:'
  id: totrans-1209
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查上述代码时，请注意以下内容：
- en: We added a property named `Supplier` that is decorated with the `[BindProperty]`
    attribute so that we can easily connect HTML elements on the web page to properties
    in the `Supplier` class.
  id: totrans-1210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们添加了一个名为`Supplier`的属性，该属性带有`[BindProperty]`属性修饰，以便我们可以轻松地将Web页面上的HTML元素连接到`Supplier`类中的属性。
- en: We added a method that responds to HTTP `POST` requests. It checks that all
    property values conform to validation rules on the `Supplier` class entity model
    (such as `[Required]` and `[StringLength]` ) and then adds the supplier to the
    existing table and saves changes to the database context. This will generate a
    SQL statement to perform the insert into the database. Then it redirects to the
    `Suppliers` page so that the visitor sees the newly added supplier.
  id: totrans-1211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们添加了一个响应HTTP`POST`请求的方法。它检查所有属性值是否符合`Supplier`类实体模型上的验证规则（如`[Required]`和`[StringLength]`），然后将供应商添加到现有表中，并保存对数据库上下文的更改。这将生成一个SQL语句来执行插入到数据库中。然后它重定向到`Suppliers`页面，以便访问者看到新添加的供应商。
- en: Defining a form to insert a new supplier
  id: totrans-1212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义一个插入新供应商的表单
- en: 'Next, you will modify the Razor Page to define a form that a visitor can fill
    in and submit to insert a new supplier:'
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将修改Razor页面以定义一个访问者可以填写并提交以插入新供应商的表单：
- en: 'In `Suppliers.cshtml` , add tag helpers after the `@model` declaration so that
    we can use tag helpers such as `asp-for` on this Razor Page, as shown in the following
    markup:'
  id: totrans-1214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Suppliers.cshtml`中，在`@model`声明之后添加标签助手，以便我们可以在Razor页面上使用`asp-for`等标签助手，如下面的标记所示：
- en: '```cs'
  id: totrans-1215
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers'
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
  zh: '@addTagHelper *，Microsoft.AspNetCore.Mvc.TagHelpers'
- en: '```'
  id: totrans-1217
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'At the bottom of the file, add a form to insert a new supplier, and use the
    `asp-for` tag helper to bind the `CompanyName` , `Country` , and `Phone` properties
    of the `Supplier` class to the input box, as shown in the following markup:'
  id: totrans-1218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件底部，添加一个表单来插入一个新的供应商，并使用`asp-for`标签助手将`Supplier`类的`CompanyName`，`Country`和`Phone`属性绑定到输入框，如下面的标记所示：
- en: '```cs'
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <
  id: totrans-1220
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1221
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"row"'
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: '"行"'
- en: '>'
  id: totrans-1225
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1226
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-1227
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Enter details for a new supplier:</
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: 输入新供应商的详细信息：</
- en: p
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1231
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: form
  id: totrans-1233
  prefs: []
  type: TYPE_NORMAL
  zh: 表单
- en: method
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '='
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"POST"'
  id: totrans-1236
  prefs: []
  type: TYPE_NORMAL
  zh: '"POST"'
- en: '>'
  id: totrans-1237
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '><'
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: '><'
- en: input
  id: totrans-1241
  prefs: []
  type: TYPE_NORMAL
  zh: 输入
- en: asp-for
  id: totrans-1242
  prefs: []
  type: TYPE_NORMAL
  zh: asp-for
- en: '='
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"Supplier.CompanyName"'
  id: totrans-1244
  prefs: []
  type: TYPE_NORMAL
  zh: '"Supplier.CompanyName"'
- en: placeholder
  id: totrans-1245
  prefs: []
  type: TYPE_NORMAL
  zh: 占位符
- en: '='
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"Company Name"'
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: '"公司名称"'
- en: /></
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
  zh: /></
- en: div
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '><'
  id: totrans-1253
  prefs: []
  type: TYPE_NORMAL
  zh: '><'
- en: input
  id: totrans-1254
  prefs: []
  type: TYPE_NORMAL
  zh: 输入
- en: asp-for
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
  zh: asp-for
- en: '='
  id: totrans-1256
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"Supplier.Country"'
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
  zh: '"Supplier.Country"'
- en: placeholder
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: 占位符
- en: '='
  id: totrans-1259
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"Country"'
  id: totrans-1260
  prefs: []
  type: TYPE_NORMAL
  zh: '"国家"'
- en: /></
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
  zh: /></
- en: div
  id: totrans-1262
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '><'
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
  zh: '><'
- en: input
  id: totrans-1267
  prefs: []
  type: TYPE_NORMAL
  zh: 输入
- en: asp-for
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
  zh: asp-for
- en: '='
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"Supplier.Phone"'
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: '"Supplier.Phone"'
- en: placeholder
  id: totrans-1271
  prefs: []
  type: TYPE_NORMAL
  zh: 占位符
- en: '='
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"Phone"'
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
  zh: '"电话"'
- en: /></
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
  zh: /></
- en: div
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1276
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1277
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: input
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: 输入
- en: type
  id: totrans-1279
  prefs: []
  type: TYPE_NORMAL
  zh: 类型
- en: '='
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"submit"'
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: '"submit"'
- en: />
  id: totrans-1282
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: </
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: form
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: 形式
- en: '>'
  id: totrans-1285
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1286
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding markup, note the following:'
  id: totrans-1290
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查上述标记时，请注意以下内容：
- en: The `<form>` element with a `POST` method is normal HTML, so an `<input type="submit"
    />` element inside it will make an HTTP `POST` request back to the current page
    with values of any other elements inside that form.
  id: totrans-1291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<form>`元素使用`POST`方法是普通的HTML，因此在其中的`<input type="submit" />`元素将使HTTP`POST`请求返回到当前页面，并携带该表单中任何其他元素的值。'
- en: An `<input>` element with a tag helper named `asp-for` enables data binding
    to the model behind the Razor Page.
  id: totrans-1292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有名为`asp-for`的标签助手的`<input>`元素使数据绑定到Razor页面背后的模型。
- en: Start the website.
  id: totrans-1293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站。
- en: Click **Learn more about our suppliers** , scroll down to the bottom of the
    page, enter `Bob's Burgers` , `USA` , and `(603) 555-4567` , and click **Submit**
    .
  id: totrans-1294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**了解更多关于我们的供应商**，滚动到页面底部，输入`Bob's Burgers`，`USA`和`(603) 555-4567`，然后点击**提交**。
- en: Note that you see a refreshed suppliers table with the new supplier added.
  id: totrans-1295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，您会看到一个刷新后的供应商表，其中包含新添加的供应商。
- en: Close Chrome and shut down the web server.
  id: totrans-1296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome并关闭Web服务器。
- en: Injecting a dependency service into a Razor Page
  id: totrans-1297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将依赖服务注入到Razor页面中
- en: If you have a `.cshtml` Razor Page that does not have a code-behind file, then
    you can inject a dependency service using the `@inject` directive instead of constructor
    parameter injection, and then directly reference the injected database context
    using Razor syntax in the middle of the markup.
  id: totrans-1298
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个没有代码后台文件的`.cshtml` Razor页面，那么您可以使用`@inject`指令注入一个依赖服务，而不是构造函数参数注入，然后直接在标记的中间使用Razor语法引用注入的数据库上下文。
- en: 'Let''s create a simple example:'
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个简单的例子：
- en: In the `Pages` folder, add a new file named `Orders.cshtml` . (The Visual Studio
    item template is named **Razor Page - Empty** and it creates two files. Delete
    the `.cs` file.)
  id: totrans-1300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Pages`文件夹中，添加一个名为`Orders.cshtml`的新文件。（Visual Studio项目模板名为**Razor Page - Empty**，它会创建两个文件。删除`.cs`文件。）
- en: 'In `Orders.cshtml` , write code to output the number of orders in the Northwind
    database, as shown in the following markup:'
  id: totrans-1301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Orders.cshtml`中，编写代码以输出Northwind数据库中订单的数量，如下面的标记所示：
- en: '```cs'
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@page'
  id: totrans-1303
  prefs: []
  type: TYPE_NORMAL
  zh: '@page'
- en: '@using Packt.Shared'
  id: totrans-1304
  prefs: []
  type: TYPE_NORMAL
  zh: '@using Packt.Shared'
- en: '@inject NorthwindContext db'
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
  zh: '@inject NorthwindContext db'
- en: '@{'
  id: totrans-1306
  prefs: []
  type: TYPE_NORMAL
  zh: '@{'
- en: string title = "Orders"
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
  zh: string title = "Orders"
- en: ;
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: ViewData["Title"
  id: totrans-1309
  prefs: []
  type: TYPE_NORMAL
  zh: ViewData["Title"
- en: '] = $"Northwind B2B -'
  id: totrans-1310
  prefs: []
  type: TYPE_NORMAL
  zh: '] = $"Northwind B2B -'
- en: '{title}'
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
  zh: '{title}'
- en: '"'
  id: totrans-1312
  prefs: []
  type: TYPE_NORMAL
  zh: '"'
- en: ;
  id: totrans-1313
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: '}'
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: <
  id: totrans-1315
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1317
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"row"'
  id: totrans-1319
  prefs: []
  type: TYPE_NORMAL
  zh: '"行"'
- en: '>'
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1321
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h1
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: class
  id: totrans-1323
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1324
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"display-2"'
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: '"display-2"'
- en: '>'
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@title</'
  id: totrans-1327
  prefs: []
  type: TYPE_NORMAL
  zh: '@title</'
- en: h1
  id: totrans-1328
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: '>'
  id: totrans-1329
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: There are @db.Orders.Count() orders in the Northwind database.
  id: totrans-1333
  prefs: []
  type: TYPE_NORMAL
  zh: Northwind数据库中有@db.Orders.Count()个订单。
- en: </
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: p
  id: totrans-1335
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1336
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1337
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website.
  id: totrans-1341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站。
- en: Navigate to `/orders` and note that you see that there are 830 orders in the
    Northwind database.
  id: totrans-1342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`/orders`，注意您会看到Northwind数据库中有830个订单。
- en: Close Chrome and shut down the web server.
  id: totrans-1343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome并关闭Web服务器。
- en: Using Razor class libraries
  id: totrans-1344
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Razor类库
- en: Everything related to a Razor Page can be compiled into a class library for
    easier reuse in multiple projects. With ASP.NET Core 3.0 and later, this can include
    static files such as HTML, CSS, JavaScript libraries, and media assets such as
    image files. A website can either use the Razor Page's view as defined in the
    class library or override it.
  id: totrans-1345
  prefs: []
  type: TYPE_NORMAL
  zh: 与Razor页面相关的所有内容都可以编译到一个类库中，以便在多个项目中更轻松地重用。在ASP.NET Core 3.0及更高版本中，这可能包括静态文件，如HTML、CSS、JavaScript库和媒体资产，如图像文件。网站可以使用类库中定义的Razor页面视图，也可以覆盖它。
- en: Creating a Razor class library
  id: totrans-1346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Razor类库
- en: 'Let''s create a new Razor class library:'
  id: totrans-1347
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个新的Razor类库：
- en: 'Use your preferred code editor to add a new project, as defined in the following
    list:'
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您喜欢的代码编辑器添加一个新项目，如下面的列表所定义：
- en: 'Project template: **Razor Class Library** / `razorclasslib`'
  id: totrans-1349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目模板：**Razor类库** / `razorclasslib`
- en: 'Checkbox/switch: **Support pages and views** / `-s`'
  id: totrans-1350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复选框/开关：**支持页面和视图** / `-s`
- en: 'Workspace/solution file and folder: `PracticalApps`'
  id: totrans-1351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工作区/解决方案文件和文件夹：`PracticalApps`
- en: 'Project file and folder: `Northwind.Razor.Employees`'
  id: totrans-1352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目文件和文件夹：`Northwind.Razor.Employees`
- en: '`-s` is short for the `--support-pages-and-views` switch that enables the class
    library to use Razor Pages and `.cshtml` file views.'
  id: totrans-1353
  prefs: []
  type: TYPE_NORMAL
  zh: '`-s`是`--support-pages-and-views`开关的缩写，该开关使类库能够使用Razor页面和`.cshtml`文件视图。'
- en: Disabling compact folders for Visual Studio Code
  id: totrans-1354
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 禁用Visual Studio Code的紧凑文件夹
- en: Before we implement our Razor class library, I want to explain a Visual Studio
    Code feature that confused some readers of a previous edition because the feature
    was added after publishing.
  id: totrans-1355
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们实现Razor类库之前，我想解释一下Visual Studio Code的一个功能，这个功能让上一版的一些读者感到困惑，因为这个功能是在发布后添加的。
- en: 'The compact folders feature means that nested folders such as `/Areas/MyFeature/Pages/`
    are shown in a compact form if the intermediate folders in the hierarchy do not
    contain files, as shown in *Figure 14.13* :'
  id: totrans-1356
  prefs: []
  type: TYPE_NORMAL
  zh: 紧凑文件夹功能意味着如果层次结构中的中间文件夹不包含文件，则嵌套文件夹（例如`/Areas/MyFeature/Pages/`）以紧凑形式显示，如*图14.13*所示：
- en: '![](img/Image00116.jpg)'
  id: totrans-1357
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image00116.jpg)'
- en: 'Figure 14.13: Compact folders enabled or disabled'
  id: totrans-1358
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.13：启用或禁用紧凑文件夹
- en: 'If you would like to disable the Visual Studio Code compact folders feature,
    complete the following steps:'
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要禁用Visual Studio Code的紧凑文件夹功能，请完成以下步骤：
- en: On Windows, navigate to **File** | **Preferences** | **Settings** . On macOS,
    navigate to **Code** | **Preferences** | **Settings** .
  id: totrans-1360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上，转到**文件** | **首选项** | **设置**。在macOS上，转到**Code** | **首选项** | **设置**。
- en: In the **Search** settings box, enter `compact` .
  id: totrans-1361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**设置框中，输入`compact`。
- en: 'Clear the **Explorer: Compact Folders** checkbox, as shown in *Figure 14.14*
    :![Graphical user interface, text, application, email Description automatically
    generated](img/Image00117.jpg)'
  id: totrans-1362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除**资源管理器：紧凑文件夹**复选框，如*图14.14*所示：![图形用户界面，文本，应用程序，电子邮件描述自动生成](img/Image00117.jpg)
- en: 'Figure 14.14: Disabling compact folders for Visual Studio Code'
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.14：禁用Visual Studio Code的紧凑文件夹
- en: Close the **Settings** tab.
  id: totrans-1364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**设置**选项卡。
- en: Implementing the employees feature using EF Core
  id: totrans-1365
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现员工功能使用EF Core
- en: 'Now we can add a reference to our entity models to get the employees to show
    in the Razor class library:'
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以添加对实体模型的引用，以在Razor类库中显示员工：
- en: 'In the `Northwind.Razor.Employees` project, add a project reference to the
    `Northwind.Common.DataContext` project for either SQLite or SQL Server and note
    the SDK is `Microsoft.NET.Sdk.Razor` , as shown highlighted in the following markup:'
  id: totrans-1367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Razor.Employees`项目中，为SQLite或SQL Server添加对`Northwind.Common.DataContext`项目的项目引用，并注意SDK是`Microsoft.NET.Sdk.Razor`，如下面的标记所示：
- en: '```cs'
  id: totrans-1368
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <Project Sdk="
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: <Project Sdk="
- en: '**Microsoft.NET.Sdk.Razor**'
  id: totrans-1370
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft.NET.Sdk.Razor**'
- en: '"'
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: '"'
- en: '>'
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <PropertyGroup>
  id: totrans-1373
  prefs: []
  type: TYPE_NORMAL
  zh: <PropertyGroup>
- en: <TargetFramework>net6.0
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: <TargetFramework>net6.0
- en: </TargetFramework>
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: </TargetFramework>
- en: <Nullable>enable</Nullable>
  id: totrans-1376
  prefs: []
  type: TYPE_NORMAL
  zh: <Nullable>enable</Nullable>
- en: <ImplicitUsings>enable</ImplicitUsings>
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: 隐式使用>启用</ImplicitUsings>
- en: <AddRazorSupportForMvc>true
  id: totrans-1378
  prefs: []
  type: TYPE_NORMAL
  zh: <AddRazorSupportForMvc>true
- en: </AddRazorSupportForMvc>
  id: totrans-1379
  prefs: []
  type: TYPE_NORMAL
  zh: </AddRazorSupportForMvc>
- en: </PropertyGroup>
  id: totrans-1380
  prefs: []
  type: TYPE_NORMAL
  zh: </PropertyGroup>
- en: <ItemGroup>
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: <ItemGroup>
- en: <FrameworkReference Include="Microsoft.AspNetCore.App"
  id: totrans-1382
  prefs: []
  type: TYPE_NORMAL
  zh: <FrameworkReference Include="Microsoft.AspNetCore.App"
- en: />
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: </ItemGroup>
  id: totrans-1384
  prefs: []
  type: TYPE_NORMAL
  zh: </ItemGroup>
- en: '**<!-- change Sqlite to SqlServer**'
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: '**<!-- 将Sqlite更改为SqlServer**'
- en: '**if**'
  id: totrans-1386
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果**'
- en: '**you prefer -->**'
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: '**你喜欢-->**'
- en: '**<ItemGroup>**'
  id: totrans-1388
  prefs: []
  type: TYPE_NORMAL
  zh: '**<ItemGroup>**'
- en: '**<ProjectReference Include=**'
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
  zh: '**<ProjectReference Include=**'
- en: '**"..\Northwind.Common.DataContext.Sqlite**'
  id: totrans-1390
  prefs: []
  type: TYPE_NORMAL
  zh: '**"..\Northwind.Common.DataContext.Sqlite**'
- en: '**\Northwind.Common.DataContext.Sqlite.csproj"**'
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: '**\Northwind.Common.DataContext.Sqlite.csproj"**'
- en: '**/>**'
  id: totrans-1392
  prefs: []
  type: TYPE_NORMAL
  zh: '**/>**'
- en: '**</ItemGroup>**'
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
  zh: '**</ItemGroup>**'
- en: </Project>
  id: totrans-1394
  prefs: []
  type: TYPE_NORMAL
  zh: </Project>
- en: '```'
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: The project reference must go all on one line with no line break. Also, do not
    mix our SQLite and SQL Server projects or you will see compiler errors. If you
    used SQL Server in the `Northwind.Web` project, then you must use SQL Server in
    the `Northwind.Razor.Employees` project as well.
  id: totrans-1396
  prefs: []
  type: TYPE_NORMAL
  zh: 项目引用必须在一行上，不能换行。同时不要混合我们的SQLite和SQL Server项目，否则会看到编译器错误。如果在`Northwind.Web`项目中使用了SQL
    Server，则在`Northwind.Razor.Employees`项目中也必须使用SQL Server。
- en: Build the `Northwind.Razor.Employees` project.
  id: totrans-1397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建`Northwind.Razor.Employees`项目。
- en: In the `Areas` folder, right-click the `MyFeature` folder, select **Rename**
    , enter the new name `PacktFeatures` , and press Enter .
  id: totrans-1398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Areas`文件夹中，右键单击`MyFeature`文件夹，选择**重命名**，输入新名称`PacktFeatures`，然后按Enter。
- en: In the `PacktFeatures` folder, in the `Pages` subfolder, add a new file named
    `_ViewStart.cshtml` . (The Visual Studio item template is named **Razor View Start**
    . Or just copy it from the `Northwind.Web` project.)
  id: totrans-1399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`PacktFeatures`文件夹中，在`Pages`子文件夹中，添加一个名为`_ViewStart.cshtml`的新文件。（Visual Studio项目模板命名为**Razor
    View Start**。或者从`Northwind.Web`项目中复制。）
- en: 'Modify its content to inform this class library that any Razor Pages should
    look for a layout with the same name as used in the `Northwind.Web` project, as
    shown in the following markup:'
  id: totrans-1400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改其内容以通知该类库，任何Razor页面都应该寻找与`Northwind.Web`项目中使用的相同名称的布局，如下面的标记所示：
- en: '```cs'
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@{'
  id: totrans-1402
  prefs: []
  type: TYPE_NORMAL
  zh: '@{'
- en: Layout = "_Layout"
  id: totrans-1403
  prefs: []
  type: TYPE_NORMAL
  zh: Layout = "_Layout"
- en: ;
  id: totrans-1404
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: '}'
  id: totrans-1405
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1406
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: We do not need to create the `_Layout.cshtml` file in this project. It will
    use the one in its host project, for example, the one in the `Northwind.Web` project.
  id: totrans-1407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要在这个项目中创建`_Layout.cshtml`文件。它将使用其宿主项目中的文件，例如`Northwind.Web`项目中的文件。
- en: In the `Pages` subfolder, rename `Page1.cshtml` to `Employees.cshtml` , and
    rename `Page1.cshtml.cs` to `Employees.cshtml.cs` .
  id: totrans-1408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Pages`子文件夹中，将`Page1.cshtml`重命名为`Employees.cshtml`，并将`Page1.cshtml.cs`重命名为`Employees.cshtml.cs`。
- en: 'Modify `Employees.cshtml.cs` to define a page model with an array of `Employee`
    entity instances loaded from the Northwind database, as shown in the following
    code:'
  id: totrans-1409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Employees.cshtml.cs`以定义一个页面模型，其中包含从Northwind数据库加载的`Employee`实体实例数组，如下面的代码所示：
- en: '```cs'
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-1411
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Microsoft.AspNetCore.Mvc.RazorPages; // PageModel
  id: totrans-1412
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft.AspNetCore.Mvc.RazorPages; // PageModel
- en: using
  id: totrans-1413
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: Packt.Shared; // Employee, NorthwindContext
  id: totrans-1414
  prefs: []
  type: TYPE_NORMAL
  zh: Packt.Shared; // Employee, NorthwindContext
- en: namespace
  id: totrans-1415
  prefs: []
  type: TYPE_NORMAL
  zh: 命名空间
- en: PacktFeatures.Pages
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: PacktFeatures.Pages
- en: ;
  id: totrans-1417
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: public
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: class
  id: totrans-1419
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: EmployeesPageModel
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: EmployeesPageModel
- en: ': PageModel'
  id: totrans-1421
  prefs: []
  type: TYPE_NORMAL
  zh: ': PageModel'
- en: '{'
  id: totrans-1422
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: private
  id: totrans-1423
  prefs: []
  type: TYPE_NORMAL
  zh: 私人的
- en: NorthwindContext db;
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
  zh: NorthwindContext db;
- en: public
  id: totrans-1425
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: EmployeesPageModel
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
  zh: EmployeesPageModel
- en: (
  id: totrans-1427
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: NorthwindContext injectedContext
  id: totrans-1428
  prefs: []
  type: TYPE_NORMAL
  zh: NorthwindContext injectedContext
- en: )
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-1430
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: db = injectedContext;
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: db = injectedContext;
- en: '}'
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: public
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: Employee[] Employees { get
  id: totrans-1434
  prefs: []
  type: TYPE_NORMAL
  zh: Employee[] Employees { get
- en: ; set
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: ; set
- en: ; } = null
  id: totrans-1436
  prefs: []
  type: TYPE_NORMAL
  zh: ; } = null
- en: '!;'
  id: totrans-1437
  prefs: []
  type: TYPE_NORMAL
  zh: '!;'
- en: public
  id: totrans-1438
  prefs: []
  type: TYPE_NORMAL
  zh: 公共
- en: void
  id: totrans-1439
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: OnGet
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: OnGet
- en: ()
  id: totrans-1441
  prefs: []
  type: TYPE_NORMAL
  zh: ()
- en: '{'
  id: totrans-1442
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: ViewData["Title"
  id: totrans-1443
  prefs: []
  type: TYPE_NORMAL
  zh: ViewData["Title"
- en: '] = "Northwind B2B - Employees"'
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
  zh: '] = "Northwind B2B - Employees"'
- en: ;
  id: totrans-1445
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: Employees = db.Employees.OrderBy(e => e.LastName)
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: Employees = db.Employees.OrderBy(e => e.LastName)
- en: .ThenBy(e => e.FirstName).ToArray();
  id: totrans-1447
  prefs: []
  type: TYPE_NORMAL
  zh: .ThenBy(e => e.FirstName).ToArray();
- en: '}'
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-1449
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Modify `Employees.cshtml` , as shown in the following markup:'
  id: totrans-1451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Employees.cshtml`，如下面的标记所示：
- en: '```cs'
  id: totrans-1452
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@page'
  id: totrans-1453
  prefs: []
  type: TYPE_NORMAL
  zh: '@page'
- en: '@using Packt.Shared'
  id: totrans-1454
  prefs: []
  type: TYPE_NORMAL
  zh: '@using Packt.Shared'
- en: '@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers'
  id: totrans-1455
  prefs: []
  type: TYPE_NORMAL
  zh: '@addTagHelper *，Microsoft.AspNetCore.Mvc.TagHelpers'
- en: '@model PacktFeatures.Pages.EmployeesPageModel'
  id: totrans-1456
  prefs: []
  type: TYPE_NORMAL
  zh: '@model PacktFeatures.Pages.EmployeesPageModel'
- en: <
  id: totrans-1457
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1458
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1460
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"row"'
  id: totrans-1461
  prefs: []
  type: TYPE_NORMAL
  zh: '"row"'
- en: '>'
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h1
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: class
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"display-2"'
  id: totrans-1467
  prefs: []
  type: TYPE_NORMAL
  zh: '"display-2"'
- en: '>'
  id: totrans-1468
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Employees</
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: Employees</
- en: h1
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: h1
- en: '>'
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1473
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1474
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1475
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1477
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"row"'
  id: totrans-1479
  prefs: []
  type: TYPE_NORMAL
  zh: '"row"'
- en: '>'
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@foreach(Employee employee in Model.Employees)'
  id: totrans-1481
  prefs: []
  type: TYPE_NORMAL
  zh: '@foreach(Employee employee in Model.Employees)'
- en: '{'
  id: totrans-1482
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: <
  id: totrans-1483
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1484
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1486
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"col-sm-3"'
  id: totrans-1487
  prefs: []
  type: TYPE_NORMAL
  zh: '"col-sm-3"'
- en: '>'
  id: totrans-1488
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: partial
  id: totrans-1490
  prefs: []
  type: TYPE_NORMAL
  zh: partial
- en: name
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: 名称
- en: '='
  id: totrans-1492
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"_Employee"'
  id: totrans-1493
  prefs: []
  type: TYPE_NORMAL
  zh: '"_Employee"'
- en: model
  id: totrans-1494
  prefs: []
  type: TYPE_NORMAL
  zh: 模型
- en: '='
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"employee"'
  id: totrans-1496
  prefs: []
  type: TYPE_NORMAL
  zh: '"employee"'
- en: />
  id: totrans-1497
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: </
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1499
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1500
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '}'
  id: totrans-1501
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </
  id: totrans-1502
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1503
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1504
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-1505
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding markup, note the following:'
  id: totrans-1506
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查前面的标记时，请注意以下内容：
- en: We import the `Packt.Shared` namespace so that we can use classes in it such
    as `Employee` .
  id: totrans-1507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们导入`Packt.Shared`命名空间，以便我们可以使用其中的类，如`Employee`。
- en: We add support for tag helpers so that we can use the `<partial>` element.
  id: totrans-1508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们添加了对标签助手的支持，以便我们可以使用`<partial>`元素。
- en: We declare the `@model` type for this Razor Page to use the page model class
    that you just defined.
  id: totrans-1509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们声明了这个Razor Page的`@model`类型，以使用您刚刚定义的页面模型类。
- en: We enumerate through the `Employees` in the model, outputting each one using
    a partial view.
  id: totrans-1510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们枚举模型中的`Employees`，使用局部视图输出每个员工。
- en: Implementing a partial view to show a single employee
  id: totrans-1511
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现一个局部视图来显示单个员工
- en: 'The `<partial>` tag helper was introduced in ASP.NET Core 2.1\. A partial view
    is like a piece of a Razor Page. You will create one in the next few steps to
    render a single employee:'
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: '`<partial>`标签助手是在ASP.NET Core 2.1中引入的。局部视图就像Razor Page的一部分。您将在接下来的几个步骤中创建一个，以渲染一个单独的员工：'
- en: In the `Northwind.Razor.Employees` project, in the `Pages` folder, create a
    `Shared` folder.
  id: totrans-1513
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Razor.Employees`项目的`Pages`文件夹中，创建一个`Shared`文件夹。
- en: In the `Shared` folder, create a file named `_Employee.cshtml` . (The Visual
    Studio item template is named **Razor View - Empty** .)
  id: totrans-1514
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Shared`文件夹中，创建一个名为`_Employee.cshtml`的文件。（Visual Studio项目模板的名称为**Razor View
    - Empty**。）
- en: 'Modify `_Employee.cshtml` , as shown in the following markup:'
  id: totrans-1515
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`_Employee.cshtml`，如下面的标记所示：
- en: '```cs'
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: '@model Packt.Shared.Employee'
  id: totrans-1517
  prefs: []
  type: TYPE_NORMAL
  zh: '@model Packt.Shared.Employee'
- en: <
  id: totrans-1518
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1519
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1521
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"card border-dark mb-3"'
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: '"card border-dark mb-3"'
- en: style
  id: totrans-1523
  prefs: []
  type: TYPE_NORMAL
  zh: 样式
- en: '='
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"max-width: 18rem;"'
  id: totrans-1525
  prefs: []
  type: TYPE_NORMAL
  zh: '"max-width: 18rem;"'
- en: '>'
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1527
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1528
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1529
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"card-header"'
  id: totrans-1531
  prefs: []
  type: TYPE_NORMAL
  zh: '"card-header"'
- en: '>'
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@Model?.LastName, @Model?.FirstName</'
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
  zh: '@Model?.LastName, @Model?.FirstName</'
- en: div
  id: totrans-1534
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1535
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: div
  id: totrans-1537
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: class
  id: totrans-1538
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"card-body text-dark"'
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
  zh: '"card-body text-dark"'
- en: '>'
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1542
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: h5
  id: totrans-1543
  prefs: []
  type: TYPE_NORMAL
  zh: h5
- en: class
  id: totrans-1544
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1545
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"card-title"'
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
  zh: '"card-title"'
- en: '>'
  id: totrans-1547
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@Model?.Country</'
  id: totrans-1548
  prefs: []
  type: TYPE_NORMAL
  zh: '@Model?.Country</'
- en: h5
  id: totrans-1549
  prefs: []
  type: TYPE_NORMAL
  zh: h5
- en: '>'
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1551
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: class
  id: totrans-1553
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1554
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"card-text"'
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
  zh: '"card-text"'
- en: '>'
  id: totrans-1556
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '@Model?.Notes</'
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: '@Model?.Notes</'
- en: p
  id: totrans-1558
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1559
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1560
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1561
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1562
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1563
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: div
  id: totrans-1564
  prefs: []
  type: TYPE_NORMAL
  zh: div
- en: '>'
  id: totrans-1565
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-1566
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'While reviewing the preceding markup, note the following:'
  id: totrans-1567
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查前面的标记时，请注意以下内容：
- en: By convention, the names of partial views start with an underscore.
  id: totrans-1568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照惯例，局部视图的名称以下划线开头。
- en: If you put a partial view in the `Shared` folder, then it can be found automatically.
  id: totrans-1569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果将局部视图放在`Shared`文件夹中，它将自动找到。
- en: The model type for this partial view is a single `Employee` entity.
  id: totrans-1570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个局部视图的模型类型是单个`Employee`实体。
- en: We use Bootstrap card styles to output information about each employee.
  id: totrans-1571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用Bootstrap卡片样式来输出有关每个员工的信息。
- en: Using and testing a Razor class library
  id: totrans-1572
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用和测试Razor类库
- en: 'You will now reference and use the Razor class library in the website project:'
  id: totrans-1573
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您将在网站项目中引用并使用Razor类库：
- en: 'In the `Northwind.Web` project, add a project reference to the `Northwind.Razor.Employees`
    project, as shown in the following markup:'
  id: totrans-1574
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Web`项目中，添加对`Northwind.Razor.Employees`项目的项目引用，如下面的标记所示：
- en: '```cs'
  id: totrans-1575
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <ProjectReference Include=
  id: totrans-1576
  prefs: []
  type: TYPE_NORMAL
  zh: <ProjectReference Include=
- en: '"..\Northwind.Razor.Employees\Northwind.Razor.Employees.csproj"'
  id: totrans-1577
  prefs: []
  type: TYPE_NORMAL
  zh: '"..\Northwind.Razor.Employees\Northwind.Razor.Employees.csproj"'
- en: />
  id: totrans-1578
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: '```'
  id: totrans-1579
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Modify `Pages\index.cshtml` to add a paragraph with a link to the Packt feature
    employees page after the link to the suppliers page, as shown in the following
    markup:'
  id: totrans-1580
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`Pages\index.cshtml`，在供应商页面的链接之后添加一个链接到Packt功能员工页面的段落，如下面的标记所示：
- en: '```cs'
  id: totrans-1581
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: <
  id: totrans-1582
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: p
  id: totrans-1583
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1584
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <
  id: totrans-1585
  prefs: []
  type: TYPE_NORMAL
  zh: <
- en: a
  id: totrans-1586
  prefs: []
  type: TYPE_NORMAL
  zh: a
- en: class
  id: totrans-1587
  prefs: []
  type: TYPE_NORMAL
  zh: 类
- en: '='
  id: totrans-1588
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"btn btn-primary"'
  id: totrans-1589
  prefs: []
  type: TYPE_NORMAL
  zh: '"btn btn-primary"'
- en: href
  id: totrans-1590
  prefs: []
  type: TYPE_NORMAL
  zh: href
- en: '='
  id: totrans-1591
  prefs: []
  type: TYPE_NORMAL
  zh: '='
- en: '"packtfeatures/employees"'
  id: totrans-1592
  prefs: []
  type: TYPE_NORMAL
  zh: '"packtfeatures/employees"'
- en: '>'
  id: totrans-1593
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Contact our employees
  id: totrans-1594
  prefs: []
  type: TYPE_NORMAL
  zh: 联系我们的员工
- en: </
  id: totrans-1595
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: a
  id: totrans-1596
  prefs: []
  type: TYPE_NORMAL
  zh: a
- en: '>'
  id: totrans-1597
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: </
  id: totrans-1598
  prefs: []
  type: TYPE_NORMAL
  zh: </
- en: p
  id: totrans-1599
  prefs: []
  type: TYPE_NORMAL
  zh: p
- en: '>'
  id: totrans-1600
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '```'
  id: totrans-1601
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website, visit the website using Chrome, and click the **Contact our
    employees** button to see the cards of employees, as shown in *Figure 14.15* :![](img/Image00118.jpg)
  id: totrans-1602
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站，使用Chrome访问网站，并单击**联系我们的员工**按钮，以查看员工的卡片，如*图14.15*所示：![](img/Image00118.jpg)
- en: 'Figure 14.15: A list of employees from a Razor class library feature'
  id: totrans-1603
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.15：Razor类库功能的员工列表
- en: Configuring services and the HTTP request pipeline
  id: totrans-1604
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置服务和HTTP请求管道
- en: Now that we have built a website, we can return to the `Startup` configuration
    and review how services and the HTTP request pipeline work in more detail.
  id: totrans-1605
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经建立了一个网站，我们可以返回到“Startup”配置，并更详细地审查服务和HTTP请求管道的工作方式。
- en: Understanding endpoint routing
  id: totrans-1606
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解端点路由
- en: In earlier versions of ASP.NET Core, the routing system and the extendable middleware
    system did not always work easily together; for example, if you wanted to implement
    a policy such as CORS in both middleware and MVC. Microsoft has invested in improving
    routing with a system named **endpoint routing** introduced with ASP.NET Core
    2.2.
  id: totrans-1607
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期版本的ASP.NET Core中，路由系统和可扩展的中间件系统并不总是很容易地协同工作；例如，如果您想要在中间件和MVC中都实现CORS等策略。微软已经投资于通过ASP.NET
    Core 2.2引入的名为**端点路由**的系统来改进路由。
- en: '**Good Practice** : Endpoint routing replaces the `IRouter` -based routing
    used in ASP.NET Core 2.1 and earlier. Microsoft recommends every older ASP.NET
    Core project migrates to endpoint routing if possible.'
  id: totrans-1608
  prefs: []
  type: TYPE_NORMAL
  zh: '**良好实践**：如果可能的话，端点路由取代了在ASP.NET Core 2.1及更早版本中使用的基于`IRouter`的路由。微软建议每个较旧的ASP.NET
    Core项目尽可能迁移到端点路由。'
- en: Endpoint routing is designed to enable better interoperability between frameworks
    that need routing, such as Razor Pages, MVC, or Web APIs, and middleware that
    needs to understand how routing affects them, such as localization, authorization,
    CORS, and so on.
  id: totrans-1609
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由旨在实现需要路由的框架（如Razor Pages、MVC或Web API）和需要了解路由如何影响它们的中间件（如本地化、授权、CORS等）之间更好的互操作性。
- en: Endpoint routing gets its name because it represents the route table as a compiled
    tree of endpoints that can be walked efficiently by the routing system. One of
    the biggest improvements is the performance of routing and action method selection.
  id: totrans-1610
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由得名是因为它将路由表表示为端点的编译树，可以被路由系统高效地遍历。最大的改进之一是路由和动作方法选择的性能。
- en: It is on by default with ASP.NET Core 2.2 or later if compatibility is set to
    2.2 or later. Traditional routes registered using the `MapRoute` method or with
    attributes are mapped to the new system.
  id: totrans-1611
  prefs: []
  type: TYPE_NORMAL
  zh: 如果兼容性设置为2.2或更高版本，则默认情况下在ASP.NET Core 2.2或更高版本中启用。使用`MapRoute`方法或属性注册的传统路由将映射到新系统。
- en: The new routing system includes a link generation service registered as a dependency
    service that does not need an `HttpContext` .
  id: totrans-1612
  prefs: []
  type: TYPE_NORMAL
  zh: 新的路由系统包括一个链接生成服务，注册为不需要`HttpContext`的依赖服务。
- en: Configuring endpoint routing
  id: totrans-1613
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置端点路由
- en: 'Endpoint routing requires a pair of calls to the `UseRouting` and `UseEndpoints`
    methods:'
  id: totrans-1614
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由需要对`UseRouting`和`UseEndpoints`方法进行一对调用：
- en: '`UseRouting` marks the pipeline position where a routing decision is made.'
  id: totrans-1615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseRouting`标记了管道位置，其中进行路由决策。'
- en: '`UseEndpoints` marks the pipeline position where the selected endpoint is executed.'
  id: totrans-1616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseEndpoints`标记了管道位置，其中执行选定的端点。'
- en: Middleware such as localization that runs in between these methods can see the
    selected endpoint and can switch to a different endpoint if necessary.
  id: totrans-1617
  prefs: []
  type: TYPE_NORMAL
  zh: 中间件，如本地化，运行在这些方法之间，可以看到选定的端点，并在必要时切换到不同的端点。
- en: Endpoint routing uses the same route template syntax that has been used in ASP.NET
    MVC since 2010 and the `[Route]` attribute introduced with ASP.NET MVC 5 in 2013\.
    Migration often only requires changes to the `Startup` configuration.
  id: totrans-1618
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由使用自2010年以来在ASP.NET MVC中使用的相同路由模板语法，以及2013年引入的`[Route]`属性。迁移通常只需要对`Startup`配置进行更改。
- en: MVC controllers, Razor Pages, and frameworks such as SignalR used to be enabled
    by a call to `UseMvc` or similar methods, but they are now added inside the `UseEndpoints`
    method call because they are all integrated into the same routing system along
    with middleware.
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
  zh: MVC控制器、Razor Pages和诸如SignalR之类的框架以前是通过调用`UseMvc`或类似的方法启用的，但现在它们都被添加到`UseEndpoints`方法调用中，因为它们都集成到同一个路由系统中，以及中间件。
- en: Reviewing the endpoint routing configuration in our project
  id: totrans-1620
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查项目中的端点路由配置
- en: 'Review the `Startup.cs` class file, as shown in the following code:'
  id: totrans-1621
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看以下代码中显示的`Startup.cs`类文件：
- en: '```cs'
  id: totrans-1622
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-1623
  prefs: []
  type: TYPE_NORMAL
  zh: using
- en: Packt.Shared; // AddNorthwindContext extension method
  id: totrans-1624
  prefs: []
  type: TYPE_NORMAL
  zh: Packt.Shared; // AddNorthwindContext扩展方法
- en: namespace
  id: totrans-1625
  prefs: []
  type: TYPE_NORMAL
  zh: namespace
- en: Northwind.Web
  id: totrans-1626
  prefs: []
  type: TYPE_NORMAL
  zh: Northwind.Web
- en: ;
  id: totrans-1627
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: public
  id: totrans-1628
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: class
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
  zh: class
- en: Startup
  id: totrans-1630
  prefs: []
  type: TYPE_NORMAL
  zh: Startup
- en: '{'
  id: totrans-1631
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: public
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-1633
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: ConfigureServices
  id: totrans-1634
  prefs: []
  type: TYPE_NORMAL
  zh: ConfigureServices
- en: (
  id: totrans-1635
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: IServiceCollection services
  id: totrans-1636
  prefs: []
  type: TYPE_NORMAL
  zh: IServiceCollection services
- en: )
  id: totrans-1637
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-1638
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: services.AddRazorPages();
  id: totrans-1639
  prefs: []
  type: TYPE_NORMAL
  zh: services.AddRazorPages();
- en: services.AddNorthwindContext();
  id: totrans-1640
  prefs: []
  type: TYPE_NORMAL
  zh: services.AddNorthwindContext();
- en: '}'
  id: totrans-1641
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: public
  id: totrans-1642
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: void
  id: totrans-1643
  prefs: []
  type: TYPE_NORMAL
  zh: void
- en: Configure
  id: totrans-1644
  prefs: []
  type: TYPE_NORMAL
  zh: Configure
- en: (
  id: totrans-1645
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: IApplicationBuilder app, IWebHostEnvironment env
  id: totrans-1646
  prefs: []
  type: TYPE_NORMAL
  zh: IApplicationBuilder app, IWebHostEnvironment env
- en: )
  id: totrans-1647
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-1648
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: if
  id: totrans-1649
  prefs: []
  type: TYPE_NORMAL
  zh: if
- en: (!env.IsDevelopment())
  id: totrans-1650
  prefs: []
  type: TYPE_NORMAL
  zh: (!env.IsDevelopment())
- en: '{'
  id: totrans-1651
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: app.UseHsts();
  id: totrans-1652
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHsts();
- en: '}'
  id: totrans-1653
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: app.UseRouting();
  id: totrans-1654
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseRouting();
- en: app.UseHttpsRedirection();
  id: totrans-1655
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseHttpsRedirection();
- en: app.UseDefaultFiles(); // index.html, default.html, and so on
  id: totrans-1656
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseDefaultFiles(); // index.html, default.html等
- en: app.UseStaticFiles();
  id: totrans-1657
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseStaticFiles();
- en: app.UseEndpoints(endpoints =>
  id: totrans-1658
  prefs: []
  type: TYPE_NORMAL
  zh: app.UseEndpoints(endpoints =>
- en: '{'
  id: totrans-1659
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: endpoints.MapRazorPages();
  id: totrans-1660
  prefs: []
  type: TYPE_NORMAL
  zh: endpoints.MapRazorPages();
- en: endpoints.MapGet("/hello"
  id: totrans-1661
  prefs: []
  type: TYPE_NORMAL
  zh: endpoints.MapGet("/hello"
- en: ', () => "Hello World!"'
  id: totrans-1662
  prefs: []
  type: TYPE_NORMAL
  zh: ', () => "Hello World!"'
- en: );
  id: totrans-1663
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '});'
  id: totrans-1664
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '}'
  id: totrans-1665
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-1666
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1667
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: The `Startup` class has two methods that are called automatically by the host
    to configure the website.
  id: totrans-1668
  prefs: []
  type: TYPE_NORMAL
  zh: '`Startup`类有两个方法，由主机自动调用来配置网站。'
- en: 'The `ConfigureServices` method registers services that can then be retrieved
    when the functionality they provide is needed using dependency injection. Our
    code registers two services: Razor Pages and an EF Core database context.'
  id: totrans-1669
  prefs: []
  type: TYPE_NORMAL
  zh: '`ConfigureServices`方法注册服务，然后可以使用依赖注入在需要它们提供功能时检索它们。我们的代码注册了两个服务：Razor Pages和一个EF
    Core数据库上下文。'
- en: Registering services in the ConfigureServices method
  id: totrans-1670
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在ConfigureServices方法中注册服务
- en: 'Common methods that register dependency services, including services that combine
    other method calls that register services, are shown in the following table:'
  id: totrans-1671
  prefs: []
  type: TYPE_NORMAL
  zh: 在下表中显示了注册依赖服务的常见方法，包括结合其他注册服务的方法调用的服务。
- en: '| Method | Services that it registers |'
  id: totrans-1672
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 注册的服务 |'
- en: '| `AddMvcCore` | Minimum set of services necessary to route requests and invoke
    controllers. Most websites will need more configuration than this. |'
  id: totrans-1673
  prefs: []
  type: TYPE_TB
  zh: '| `AddMvcCore` | 路由请求和调用控制器所需的最小服务集。大多数网站将需要比这更多的配置。 |'
- en: '| `AddAuthorization` | Authentication and authorization services. |'
  id: totrans-1674
  prefs: []
  type: TYPE_TB
  zh: '| `AddAuthorization` | 身份验证和授权服务。 |'
- en: '| `AddDataAnnotations` | MVC data annotations service. |'
  id: totrans-1675
  prefs: []
  type: TYPE_TB
  zh: '| `AddDataAnnotations` | MVC数据注释服务。 |'
- en: '| `AddCacheTagHelper` | MVC cache tag helper service. |'
  id: totrans-1676
  prefs: []
  type: TYPE_TB
  zh: '| `AddCacheTagHelper` | MVC缓存标签助手服务。 |'
- en: '| `AddRazorPages` | Razor Pages service including the Razor view engine. Commonly
    used in simple website projects. It calls the following additional methods:`AddMvcCore``AddAuthorization``AddDataAnnotations``AddCacheTagHelper`
    |'
  id: totrans-1677
  prefs: []
  type: TYPE_TB
  zh: '| `AddRazorPages` | Razor Pages服务，包括Razor视图引擎。通常用于简单的网站项目。它调用以下附加方法：`AddMvcCore``AddAuthorization``AddDataAnnotations``AddCacheTagHelper`
    |'
- en: '| `AddApiExplorer` | Web API explorer service. |'
  id: totrans-1678
  prefs: []
  type: TYPE_TB
  zh: '| `AddApiExplorer` | Web API资源管理器服务。'
- en: '| `AddCors` | CORS support for enhanced security. |'
  id: totrans-1679
  prefs: []
  type: TYPE_TB
  zh: '| `AddCors` | 用于增强安全性的CORS支持。'
- en: '| `AddFormatterMappings` | Mappings between a URL format and its corresponding
    media type. |'
  id: totrans-1680
  prefs: []
  type: TYPE_TB
  zh: '| `AddFormatterMappings` | URL格式与其对应的媒体类型之间的映射。'
- en: '| `AddControllers` | Controller services but not services for views or pages.
    Commonly used in ASP.NET Core Web API projects. It calls the following additional
    methods:`AddMvcCore``AddAuthorization``AddDataAnnotations``AddCacheTagHelper``AddApiExplorer``AddCors``AddFormatterMappings`
    |'
  id: totrans-1681
  prefs: []
  type: TYPE_TB
  zh: '| `AddControllers` | 控制器服务，但不包括视图或页面服务。通常用于ASP.NET Core Web API项目。它调用以下附加方法：`AddMvcCore``AddAuthorization``AddDataAnnotations``AddCacheTagHelper``AddApiExplorer``AddCors``AddFormatterMappings`
    |'
- en: '| `AddViews` | Support for `.cshtml` views including default conventions. |'
  id: totrans-1682
  prefs: []
  type: TYPE_TB
  zh: '| `AddViews` | 支持`.cshtml`视图，包括默认约定。'
- en: '| `AddRazorViewEngine` | Support for Razor view engine including processing
    the `@` symbol. |'
  id: totrans-1683
  prefs: []
  type: TYPE_TB
  zh: '| `AddRazorViewEngine` | 支持Razor视图引擎，包括处理`@`符号。'
- en: '| `AddControllersWithViews` | Controller, views, and pages services. Commonly
    used in ASP.NET Core MVC website projects. It calls the following additional methods:`AddMvcCore``AddAuthorization``AddDataAnnotations``AddCacheTagHelper``AddApiExplorer``AddCors``AddFormatterMappings``AddViews``AddRazorViewEngine`
    |'
  id: totrans-1684
  prefs: []
  type: TYPE_TB
  zh: '| `AddControllersWithViews` | 控制器、视图和页面服务。通常用于ASP.NET Core MVC网站项目。它调用以下附加方法：`AddMvcCore``AddAuthorization``AddDataAnnotations``AddCacheTagHelper``AddApiExplorer``AddCors``AddFormatterMappings``AddViews``AddRazorViewEngine`
    |'
- en: '| `AddMvc` | Similar to `AddControllersWithViews` , but you should only use
    it for backward compatibility. |'
  id: totrans-1685
  prefs: []
  type: TYPE_TB
  zh: '| `AddMvc` | 类似于`AddControllersWithViews`，但您应该仅在向后兼容性时使用它。'
- en: '| `AddDbContext<T>` | Your `DbContext` type and its optional `DbContextOptions<TContext>`
    . |'
  id: totrans-1686
  prefs: []
  type: TYPE_TB
  zh: '| `AddDbContext<T>` | 您的`DbContext`类型及其可选的`DbContextOptions<TContext>`。'
- en: '| `AddNorthwindContext` | A custom extension method we created to make it easier
    to register the `NorthwindContext` class for either SQLite or SQL Server based
    on the project referenced. |'
  id: totrans-1687
  prefs: []
  type: TYPE_TB
  zh: '| `AddNorthwindContext` | 我们创建的一个自定义扩展方法，使得更容易为项目引用的SQLite或SQL Server注册`NorthwindContext`类。'
- en: You will see more examples of using these extension methods for registering
    services in the next few chapters when working with MVC and Web API services.
  id: totrans-1688
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几章中，您将看到更多使用这些扩展方法来注册服务的示例，这些服务是与MVC和Web API服务一起使用的。
- en: Setting up the HTTP request pipeline in the Configure method
  id: totrans-1689
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Configure方法中设置HTTP请求管道
- en: The `Configure` method configures the HTTP request pipeline, which is made up
    of a connected sequence of delegates that can perform processing and then decide
    to either return a response themselves or pass processing on to the next delegate
    in the pipeline. Responses that come back can also be manipulated.
  id: totrans-1690
  prefs: []
  type: TYPE_NORMAL
  zh: '`Configure`方法配置了HTTP请求管道，它由一系列连接的委托组成，可以执行处理，然后决定是自己返回响应还是将处理传递给管道中的下一个委托。返回的响应也可以被操纵。'
- en: 'Remember that delegates define a method signature that a delegate implementation
    can plug into. The delegate for the HTTP request pipeline is simple, as shown
    in the following code:'
  id: totrans-1691
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，委托定义了委托实现可以插入的方法签名。HTTP请求管道的委托很简单，如下面的代码所示：
- en: '```cs'
  id: totrans-1692
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: public
  id: totrans-1693
  prefs: []
  type: TYPE_NORMAL
  zh: public
- en: delegate
  id: totrans-1694
  prefs: []
  type: TYPE_NORMAL
  zh: 委托
- en: Task
  id: totrans-1695
  prefs: []
  type: TYPE_NORMAL
  zh: Task
- en: RequestDelegate
  id: totrans-1696
  prefs: []
  type: TYPE_NORMAL
  zh: RequestDelegate
- en: (
  id: totrans-1697
  prefs: []
  type: TYPE_NORMAL
  zh: (
- en: HttpContext context
  id: totrans-1698
  prefs: []
  type: TYPE_NORMAL
  zh: HttpContext上下文
- en: )
  id: totrans-1699
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: ;
  id: totrans-1700
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: '```'
  id: totrans-1701
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: You can see that the input parameter is an `HttpContext` . This provides access
    to everything you might need to process the incoming HTTP request, including the
    URL path, query string parameters, cookies, and user agent.
  id: totrans-1702
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到输入参数是`HttpContext`。这提供了访问处理传入的HTTP请求所需的一切，包括URL路径、查询字符串参数、cookie和用户代理。
- en: These delegates are often called middleware because they sit in between the
    browser client and the website or service.
  id: totrans-1703
  prefs: []
  type: TYPE_NORMAL
  zh: 这些委托通常被称为中间件，因为它们位于浏览器客户端和网站或服务之间。
- en: 'Middleware delegates are configured using one of the following methods or a
    custom method that calls them itself:'
  id: totrans-1704
  prefs: []
  type: TYPE_NORMAL
  zh: 中间件委托是使用以下方法之一或调用它们本身的自定义方法进行配置的：
- en: '`Run` : Adds a middleware delegate that terminates the pipeline by immediately
    returning a response instead of calling the next middleware delegate.'
  id: totrans-1705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Run`：添加一个中间件委托，立即返回响应而不调用下一个中间件委托，从而终止管道。'
- en: '`Map` : Adds a middleware delegate that creates a branch in the pipeline when
    there is a matching request usually based on a URL path like `/hello` .'
  id: totrans-1706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Map`：添加一个中间件委托，当有匹配的请求时（通常基于URL路径如`/hello`），它会在管道中创建一个分支。'
- en: '`Use` : Adds a middleware delegate that forms part of the pipeline so it can
    decide if it wants to pass the request to the next delegate in the pipeline and
    it can modify the request and response before and after the next delegate.'
  id: totrans-1707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Use`：添加一个中间件委托，作为管道的一部分，因此它可以决定是否将请求传递给管道中的下一个委托，并且可以在下一个委托之前和之后修改请求和响应。'
- en: 'For convenience, there are many extension methods that make it easier to build
    the pipeline, for example, `UseMiddleware<T>` , where `T` is a class that has:'
  id: totrans-1708
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，有许多扩展方法可以更轻松地构建管道，例如`UseMiddleware<T>`，其中`T`是一个具有以下内容的类：
- en: A constructor with a `RequestDelegate` parameter that will be passed the next
    pipeline component
  id: totrans-1709
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 带有`RequestDelegate`参数的构造函数，该参数将传递给下一个管道组件
- en: An `Invoke` method with a `HttpContext` parameter and returns a `Task`
  id: totrans-1710
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 带有`HttpContext`参数并返回`Task`的`Invoke`方法
- en: Summarizing key middleware extension methods
  id: totrans-1711
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结关键中间件扩展方法
- en: 'Key middleware extension methods used in our code include the following:'
  id: totrans-1712
  prefs: []
  type: TYPE_NORMAL
  zh: 我们代码中使用的关键中间件扩展方法包括以下内容：
- en: '`UseDeveloperExceptionPage` : Captures synchronous and asynchronous `System.Exception`
    instances from the pipeline and generates HTML error responses.'
  id: totrans-1713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseDeveloperExceptionPage`：从管道中捕获同步和异步的`System.Exception`实例，并生成HTML错误响应。'
- en: '`UseHsts` : Adds middleware for using HSTS, which adds the `Strict-Transport-Security`
    header.'
  id: totrans-1714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseHsts`：添加使用HSTS的中间件，添加`Strict-Transport-Security`头。'
- en: '`UseRouting` : Adds middleware that defines a point in the pipeline where routing
    decisions are made and must be combined with a call to `UseEndpoints` where the
    processing is then executed. This means that for our code, any URL paths that
    match `/` or `/index` or `/suppliers` will be mapped to Razor Pages and a match
    on `/hello` will be mapped to the anonymous delegate. Any other URL paths will
    be passed on to the next delegate for matching, for example, static files. This
    is why, although it looks like the mapping for Razor Pages and `/hello` happen
    after static files in the pipeline, they actually take priority because the call
    to `UseRouting` happens before `UseStaticFiles` .'
  id: totrans-1715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseRouting`：添加中间件，定义了管道中的一个点，路由决策在此处做出，并且必须与调用`UseEndpoints`结合使用，然后在此处执行处理。这意味着对于我们的代码，任何匹配`/`或`/index`或`/suppliers`的URL路径都将映射到Razor页面，而匹配`/hello`的URL路径将映射到匿名委托。任何其他URL路径将被传递给下一个委托进行匹配，例如静态文件。这就是为什么，尽管在管道中看起来Razor页面和`/hello`的映射发生在静态文件之后，但它们实际上具有优先级，因为在`UseStaticFiles`之前调用`UseRouting`。'
- en: '`UseHttpsRedirection` : Adds middleware for redirecting HTTP requests to HTTPS,
    so in our code a request for `http://localhost:5000` would be modified to `https://localhost:5001`
    .'
  id: totrans-1716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseHttpsRedirection`：添加中间件以将HTTP请求重定向到HTTPS，因此在我们的代码中，对`http://localhost:5000`的请求将被修改为`https://localhost:5001`。'
- en: '`UseDefaultFiles` : Adds middleware that enables default file mapping on the
    current path, so in our code it would identify files such as `index.html` .'
  id: totrans-1717
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseDefaultFiles`：添加中间件，启用当前路径上的默认文件映射，因此在我们的代码中，它将识别诸如`index.html`之类的文件。'
- en: '`UseStaticFiles` : Adds middleware that looks in `wwwroot` for static files
    to return in the HTTP response.'
  id: totrans-1718
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseStaticFiles`：添加中间件，查找`wwwroot`中的静态文件以在HTTP响应中返回。'
- en: '`UseEndpoints` : Adds middleware to execute to generate responses from decisions
    made earlier in the pipeline. Two endpoints are added, as shown in the following
    sub-list:'
  id: totrans-1719
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UseEndpoints`：添加中间件以执行从管道中较早做出的决策生成响应。如下所示，添加了两个端点，如下面的子列表所示：'
- en: '`MapRazorPages` : Adds middleware that will map URL paths such as `/suppliers`
    to a Razor Page file in the `/Pages` folder named `suppliers.cshtml` and return
    the results as the HTTP response.'
  id: totrans-1720
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MapRazorPages`：添加中间件，将诸如`/suppliers`之类的URL路径映射到`/Pages`文件夹中名为`suppliers.cshtml`的Razor页面文件，并将结果作为HTTP响应返回。'
- en: '`MapGet` : Adds middleware that will map URL paths such as `/hello` to an inline
    delegate that writes plain text directly to the HTTP response.'
  id: totrans-1721
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MapGet`：添加中间件，将诸如`/hello`之类的URL路径映射到直接向HTTP响应写入纯文本的内联委托。'
- en: Visualizing the HTTP pipeline
  id: totrans-1722
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化HTTP管道
- en: 'The HTTP request and response pipeline can be visualized as a sequence of request
    delegates, called one after the other, as shown in the following simplified diagram,
    which excludes some middleware delegates, such as `UseHsts` :'
  id: totrans-1723
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP请求和响应管道可以被可视化为一系列请求委托，依次调用，如下面的简化图表所示，其中排除了一些中间件委托，例如`UseHsts`：
- en: '![Diagram Description automatically generated](img/Image00119.jpg)'
  id: totrans-1724
  prefs: []
  type: TYPE_IMG
  zh: '![自动生成的图表描述](img/Image00119.jpg)'
- en: 'Figure 14.16: The HTTP request and response pipeline'
  id: totrans-1725
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.16：HTTP请求和响应管道
- en: As mentioned before, the `UseRouting` and `UseEndpoints` methods must be used
    together. Although the code to define the mapped routes such as `/hello` are written
    in `UseEndpoints` , the decision about whether an incoming HTTP request URL path
    matches and therefore which endpoint to execute is made at the `UseRouting` point
    in the pipeline.
  id: totrans-1726
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，必须一起使用`UseRouting`和`UseEndpoints`方法。虽然定义映射路由的代码（如`/hello`）写在`UseEndpoints`中，但关于传入的HTTP请求URL路径是否匹配以及因此要执行哪个端点的决定是在管道中的`UseRouting`点上做出的。
- en: Implementing an anonymous inline delegate as middleware
  id: totrans-1727
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现匿名内联委托作为中间件
- en: A delegate can be specified as an inline anonymous method. We will register
    one that plugs into the pipeline after routing decisions for endpoints have been
    made.
  id: totrans-1728
  prefs: []
  type: TYPE_NORMAL
  zh: 可以指定内联匿名方法作为委托。我们将注册一个插入到管道中的委托，用于在端点的路由决策之后。
- en: 'It will output which endpoint was chosen, as well as handling one specific
    route: `/bonjour` . If that route is matched, it will respond with plain text,
    without calling any further into the pipeline:'
  id: totrans-1729
  prefs: []
  type: TYPE_NORMAL
  zh: 它将输出选择的端点，以及处理一个特定路由：`/bonjour`。如果匹配该路由，它将以纯文本形式响应，而不会进一步调用管道：
- en: 'In `Startup.cs` , statically import `Console` , as shown in the following code:'
  id: totrans-1730
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Startup.cs`中，静态导入`Console`，如下面的代码所示：
- en: '```cs'
  id: totrans-1731
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: using
  id: totrans-1732
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: static
  id: totrans-1733
  prefs: []
  type: TYPE_NORMAL
  zh: 静态
- en: System.Console;
  id: totrans-1734
  prefs: []
  type: TYPE_NORMAL
  zh: System.Console;
- en: '```'
  id: totrans-1735
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add statements after the call to `UseRouting` and before the call to `UseHttpsRedirection`
    to use an anonymous method as a middleware delegate, as shown in the following
    code:'
  id: totrans-1736
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在调用`UseRouting`之后和调用`UseHttpsRedirection`之前添加语句以使用匿名方法作为中间件委托，如下面的代码所示：
- en: '```cs'
  id: totrans-1737
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: app.Use(async
  id: totrans-1738
  prefs: []
  type: TYPE_NORMAL
  zh: app.Use(async
- en: (HttpContext context, Func<Task> next) =>
  id: totrans-1739
  prefs: []
  type: TYPE_NORMAL
  zh: (HttpContext context, Func<Task> next) =>
- en: '{'
  id: totrans-1740
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: RouteEndpoint? rep = context.GetEndpoint() as
  id: totrans-1741
  prefs: []
  type: TYPE_NORMAL
  zh: RouteEndpoint? rep = context.GetEndpoint() as
- en: RouteEndpoint;
  id: totrans-1742
  prefs: []
  type: TYPE_NORMAL
  zh: RouteEndpoint;
- en: if
  id: totrans-1743
  prefs: []
  type: TYPE_NORMAL
  zh: 如果
- en: (rep is
  id: totrans-1744
  prefs: []
  type: TYPE_NORMAL
  zh: (rep is
- en: not
  id: totrans-1745
  prefs: []
  type: TYPE_NORMAL
  zh: 不是
- en: 'null'
  id: totrans-1746
  prefs: []
  type: TYPE_NORMAL
  zh: 'null'
- en: )
  id: totrans-1747
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-1748
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'WriteLine($"Endpoint name:'
  id: totrans-1749
  prefs: []
  type: TYPE_NORMAL
  zh: WriteLine($"端点名称：
- en: '{rep.DisplayName}'
  id: totrans-1750
  prefs: []
  type: TYPE_NORMAL
  zh: '{rep.DisplayName}'
- en: '"'
  id: totrans-1751
  prefs: []
  type: TYPE_NORMAL
  zh: '"'
- en: );
  id: totrans-1752
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'WriteLine($"Endpoint route pattern:'
  id: totrans-1753
  prefs: []
  type: TYPE_NORMAL
  zh: WriteLine($"端点路由模式：
- en: '{rep.RoutePattern.RawText}'
  id: totrans-1754
  prefs: []
  type: TYPE_NORMAL
  zh: '{rep.RoutePattern.RawText}'
- en: '"'
  id: totrans-1755
  prefs: []
  type: TYPE_NORMAL
  zh: '"'
- en: );
  id: totrans-1756
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-1757
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if
  id: totrans-1758
  prefs: []
  type: TYPE_NORMAL
  zh: 如果
- en: (context.Request.Path == "/bonjour"
  id: totrans-1759
  prefs: []
  type: TYPE_NORMAL
  zh: (context.Request.Path == "/bonjour"
- en: )
  id: totrans-1760
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '{'
  id: totrans-1761
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: // in the case of a match on URL path, this becomes a terminating
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
  zh: // 在URL路径匹配的情况下，这将成为终止`
- en: // delegate that returns so does not call the next delegate
  id: totrans-1763
  prefs: []
  type: TYPE_NORMAL
  zh: // 返回的委托，因此不调用下一个委托
- en: await
  id: totrans-1764
  prefs: []
  type: TYPE_NORMAL
  zh: 等待
- en: context.Response.WriteAsync("Bonjour Monde!"
  id: totrans-1765
  prefs: []
  type: TYPE_NORMAL
  zh: context.Response.WriteAsync("Bonjour Monde!"
- en: );
  id: totrans-1766
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: return
  id: totrans-1767
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: ;
  id: totrans-1768
  prefs: []
  type: TYPE_NORMAL
  zh: ;
- en: '}'
  id: totrans-1769
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // we could modify the request before calling the next delegate
  id: totrans-1770
  prefs: []
  type: TYPE_NORMAL
  zh: // 在调用下一个委托之前，我们可以修改请求
- en: await
  id: totrans-1771
  prefs: []
  type: TYPE_NORMAL
  zh: 等待
- en: next();
  id: totrans-1772
  prefs: []
  type: TYPE_NORMAL
  zh: next();
- en: // we could modify the response after calling the next delegate
  id: totrans-1773
  prefs: []
  type: TYPE_NORMAL
  zh: // 在调用下一个委托之后，我们可以修改响应
- en: '});'
  id: totrans-1774
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-1775
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Start the website.
  id: totrans-1776
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网站。
- en: 'In Chrome, navigate to `https://localhost:5001/` , look at the console output
    and note that there was a match on an endpoint route `/` , it was processed as
    `/index` , and the `Index.cshtml` Razor Page was executed to return the response,
    as shown in the following output:'
  id: totrans-1777
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，导航到`https://localhost:5001/`，查看控制台输出，并注意在端点路由`/`上有一个匹配，它被处理为`/index`，并且执行了`Index.cshtml`
    Razor Page以返回响应，如下面的输出所示：
- en: '```cs'
  id: totrans-1778
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: 'Endpoint name: /index'
  id: totrans-1779
  prefs: []
  type: TYPE_NORMAL
  zh: 端点名称：/index
- en: 'Endpoint route pattern:'
  id: totrans-1780
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由模式：
- en: '```'
  id: totrans-1781
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Navigate to `https://localhost:5001/suppliers` and note that you can see that
    there was a match on an endpoint route `/Suppliers` and the `Suppliers.cshtml`
    Razor Page was executed to return the response, as shown in the following output:'
  id: totrans-1782
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`https://localhost:5001/suppliers`，注意到在端点路由`/Suppliers`上有一个匹配，并且执行了`Suppliers.cshtml`
    Razor Page以返回响应，如下面的输出所示：
- en: '```cs'
  id: totrans-1783
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: 'Endpoint name: /Suppliers'
  id: totrans-1784
  prefs: []
  type: TYPE_NORMAL
  zh: 端点名称：/Suppliers
- en: 'Endpoint route pattern: Suppliers'
  id: totrans-1785
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由模式：供应商
- en: '```'
  id: totrans-1786
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Navigate to `https://localhost:5001/index` and note that there was a match
    on an endpoint route `/index` and the `Index.cshtml` Razor Page was executed to
    return the response, as shown in the following output:'
  id: totrans-1787
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`https://localhost:5001/index`，注意到在端点路由`/index`上有一个匹配，并且执行了`Index.cshtml`
    Razor Page以返回响应，如下面的输出所示：
- en: '```cs'
  id: totrans-1788
  prefs: []
  type: TYPE_NORMAL
  zh: '```cs'
- en: 'Endpoint name: /index'
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
  zh: 端点名称：/index
- en: 'Endpoint route pattern: index'
  id: totrans-1790
  prefs: []
  type: TYPE_NORMAL
  zh: 端点路由模式：索引
- en: '```'
  id: totrans-1791
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Navigate to `https://localhost:5001/index.html` and note that there is no output
    written to the console because there was no match on an endpoint route but there
    was a match for a static file, so it was returned as the response.
  id: totrans-1792
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`https://localhost:5001/index.html`，注意到控制台没有输出，因为在端点路由上没有匹配，但是有一个静态文件的匹配，因此它作为响应返回。
- en: Navigate to `https://localhost:5001/bonjour` and note that there is no output
    written to the console because there was no match on an endpoint route. Instead,
    our delegate matched on `/bonjour` , wrote directly to the response stream, and
    returned with no further processing.
  id: totrans-1793
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`https://localhost:5001/bonjour`，注意到控制台没有输出，因为在端点路由上没有匹配。相反，我们的委托匹配了`/bonjour`，直接写入响应流，并且没有进一步处理就返回了。
- en: Close Chrome and shut down the web server.
  id: totrans-1794
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome并关闭Web服务器。
- en: Practicing and exploring
  id: totrans-1795
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习和探索
- en: Test your knowledge and understanding by answering some questions, get some
    hands-on practice, and explore this chapter's topics with deeper research.
  id: totrans-1796
  prefs: []
  type: TYPE_NORMAL
  zh: 通过回答一些问题来测试您的知识和理解，进行一些实践，并深入研究本章的主题。
- en: Exercise 14.1 – Test your knowledge
  id: totrans-1797
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习14.1–测试您的知识
- en: 'Answer the following questions:'
  id: totrans-1798
  prefs: []
  type: TYPE_NORMAL
  zh: 回答以下问题：
- en: List six method names that can be specific in an HTTP request.
  id: totrans-1799
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出六个可以在HTTP请求中指定的方法名。
- en: List six status codes and their descriptions that can be returned in an HTTP
    response.
  id: totrans-1800
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出六个状态代码及其在HTTP响应中的描述。
- en: In ASP.NET Core, what is the `Startup` class used for?
  id: totrans-1801
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ASP.NET Core中，`Startup`类用于什么？
- en: What does the acronym HSTS stand for and what does it do?
  id: totrans-1802
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: HSTS是什么意思，它是做什么的？
- en: How do you enable static HTML pages for a website?
  id: totrans-1803
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何为网站启用静态HTML页面？
- en: How do you mix C# code into the middle of HTML to create a dynamic page?
  id: totrans-1804
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何将C#代码混合到HTML中间以创建动态页面？
- en: How can you define shared layouts for Razor Pages?
  id: totrans-1805
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何为Razor Pages定义共享布局？
- en: How can you separate the markup from the code-behind in a Razor Page?
  id: totrans-1806
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何在Razor Page中将标记与代码分离？
- en: How do you configure an Entity Framework Core data context for use with an ASP.NET
    Core website?
  id: totrans-1807
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何配置用于ASP.NET Core网站的Entity Framework Core数据上下文？
- en: How can you reuse Razor Pages with ASP.NET Core 2.2 or later?
  id: totrans-1808
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在ASP.NET Core 2.2或更高版本中重用Razor Pages？
- en: Exercise 14.2 – Practice building a data-driven web page
  id: totrans-1809
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习14.2–练习构建数据驱动的网页
- en: Add a Razor Page to the `Northwind.Web` website that enables the user to see
    a list of customers grouped by country. When the user clicks on a customer record,
    they then see a page showing the full contact details of that customer, and a
    list of their orders.
  id: totrans-1810
  prefs: []
  type: TYPE_NORMAL
  zh: 向`Northwind.Web`网站添加一个Razor Page，使用户可以查看按国家分组的客户列表。当用户点击客户记录时，他们将看到显示该客户的完整联系信息以及其订单列表的页面。
- en: Exercise 14.3 – Practice building web pages for console apps
  id: totrans-1811
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习14.3–练习为控制台应用程序构建网页
- en: Reimplement some of the console apps from earlier chapters as Razor Pages, for
    example, from *Chapter 4* , *Writing, Debugging, and Testing Functions* , provide
    a web user interface to output times tables, calculate tax, and generate factorials
    and the Fibonacci sequence.
  id: totrans-1812
  prefs: []
  type: TYPE_NORMAL
  zh: 重新实现一些早期章节的控制台应用程序，例如*第4章*，*编写、调试和测试函数*，为其提供一个Web用户界面来输出乘法表、计算税收，并生成阶乘和斐波那契数列。
- en: Exercise 14.4 – Explore topics
  id: totrans-1813
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习14.4–探索主题
- en: 'Use the links on the following page to learn more about the topics covered
    in this chapter:'
  id: totrans-1814
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下页面上的链接了解本章涵盖的主题：
- en: '[https://github.com/markjprice/cs10dotnet6/blob/main/book-links.md#chapter-14---building-websites-using-aspnet-core-razor-pages](https://github.com/markjprice/cs10dotnet6/blob/main/book-links.md#chapter-14---building-websites-using-aspnet-core-razor-pages)'
  id: totrans-1815
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/markjprice/cs10dotnet6/blob/main/book-links.md#chapter-14---building-websites-using-aspnet-core-razor-pages](https://github.com/markjprice/cs10dotnet6/blob/main/book-links.md#chapter-14---building-websites-using-aspnet-core-razor-pages)'
- en: Summary
  id: totrans-1816
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the foundations of web development using
    HTTP, how to build a simple website that returns static files, and you used ASP.NET
    Core Razor Pages with Entity Framework Core to create web pages that were dynamically
    generated from information in a database.
  id: totrans-1817
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了使用HTTP进行Web开发的基础知识，如何构建返回静态文件的简单网站，并且使用ASP.NET Core Razor Pages与Entity
    Framework Core创建了从数据库中动态生成的网页。
- en: We reviewed the HTTP request and response pipeline, what the helper extension
    methods do, and how you can add your own middleware that affects processing.
  id: totrans-1818
  prefs: []
  type: TYPE_NORMAL
  zh: 我们回顾了HTTP请求和响应管道，辅助扩展方法的作用，以及如何添加自己的中间件来影响处理过程。
- en: In the next chapter, you will learn how to build more complex websites using
    ASP.NET Core MVC, which separates the technical concerns of building a website
    into models, views, and controllers to make them easier to manage.
  id: totrans-1819
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何使用ASP.NET Core MVC构建更复杂的网站，该框架将构建网站的技术问题分离为模型、视图和控制器，使其更易于管理。
