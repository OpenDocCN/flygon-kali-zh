["```kt\n/* All SPI0 pins are PULL, MODE0 */\nbb_spi0_pins: pinmux_bb_spi0_pins {\n    pinctrl-single,pins = <\n        0x150 0x30  /* P9.22, spi0_sclk, INPUT */\n        0x154 0x30  /* P9.21, spi0_do, INPUT */\n        0x158 0x10  /* P9.18, spi0_d1, OUTPUT */\n        0x15c 0x10  /* P9.17, spi0_cs0, OUTPUT */\n    >;\n};\n```", "```kt\nfragment@2 {\n    target = <&spi0>;\n    __overlay__ {\n        #address-cells = <1>;\n        #size-cells = <0>;\n        status = \"okay\";\n        pinctrl-names = \"default\";\n        pinctrl-0 = <&bb_spi0_pins>;\n\n        channel@0 {\n            #address-cells = <1>;\n            #size-cells = <0>;\n            /* Kernel driver for this device */\n            compatible = \"spidev\";\n\n            reg = <0>;\n            /* Setting the max frequency to 16MHz */\n            spi-max-frequency = <16000000>;\n            spi-cpha;\n        };\n        \u2026\n    };\n};\n```", "```kt\nextern int openSensor(void);\nextern float getSensorTemperature(void);\nextern float getSensorPressure(void);\nextern int closeSensor(void);\n```", "```kt\npublic class HardwareTask extends AsyncTask<Void, Void, Boolean> {\n\n  private native boolean openSensor();\n  private native float getSensorTemperature();\n  private native float getSensorPressure();\n  private native boolean closeSensor();\n```", "```kt\n    public void onClickSampleButton(View view) {\n        hwTask = new HardwareTask();\n        hwTask.pollSensor(this);  \n    }\n```", "```kt\n    public void pollSensor(Activity act) {\n      mCallerActivity = act;\n      execute();\n    }\n```", "```kt\n   protected void onPreExecute() {  \n      Log.i(\"HardwareTask\", \"onPreExecute\");\n      ...    \n     if ( !openSensor() ) {\n         Log.e(\"HardwareTask\", \"Error opening hardware\");\n        isDone = true;\n      }\n      // Disable the Button while talking to the hardware\n      sampleButton.setEnabled(false);\n   }\n```", "```kt\n    protected Boolean doInBackground(Void... params) { ) { \n\n      if (isDone) { // Was the hardware never opened?\n        Log.e(\"HardwareTask\", \"doInBackground: Skipping hardware interfacing\");\n        return true;\n      }\n\n      Log.i(\"HardwareTask\", \"doInBackground: Interfacing with hardware\");\n      try {\n        temperature = getSensorTemperature();\n        pressure = getSensorPressure();\n      } catch (Exception e) {\n       ...\n```", "```kt\n   protected void onPostExecute(Boolean result) {\n      if (!closeSensor()) {\n        Log.e(\"HardwareTask\", \"Error closing hardware\");\n     }\n      ...\n         Toast toast =  \n            Toast.makeText(mCallerActivity.getApplicationContext(),\n            \"Sensor data received\", Toast.LENGTH_SHORT);\n         toast.show();\n         ((MainActivity)mCallerActivity).updateSensorData(temperature,\n            pressure);\n      ...\n      // Reenable the Button after talking to the hardware\n      sampleButton.setEnabled(true);\n```", "```kt\n    public void updateSensorData(float temperature, float pressure) {\n      Toast toast = Toast.makeText(getApplicationContext(), \n          \"Displaying new sensor data\", Toast.LENGTH_SHORT);\n      TextView tv = (TextView) findViewById(R.id.temperatureTextView);    \n       tv.setText(\"Temperature: \" + temperature);\n\n    tv = (TextView) findViewById(R.id.pressureTextView);\n       tv.setText(\"Pressure: \" + pressure);\n\n       toast.show();\n    }\n```"]