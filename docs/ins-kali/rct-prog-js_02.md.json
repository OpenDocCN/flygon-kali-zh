["```js\nvar x;\nvar y = 12 + 2;\n```", "```js\ny = y + 1;\ny += 1;\n++y;\n```", "```js\n/*\n * Multiline comments are legal.\n */\n\nif (x) // In this case, we ...\n```", "```js\nif (books_remaining) {\n  print_title();\n}\n\nvar c = 1;\nif (c) {\n  c += 2;\n} else {\n  c -= 1;\n}\n```", "```js\nvar add = function(first, second) {\n  return first + second;\n}\n\nconsole.log(add(1, 2));\n\n// 3\n```", "```js\nvar average_arbitrarily_many() {\n  if (!arguments.length) {\n    return 0;\n  }\n  var count = 0;\n  var total = 0;\n  for(var index = 0; index < arguments.length; index += 1) {\n    total += arguments[i];\n  }\n  return total / arguments.length;\n}\n```", "```js\nvar sort = function(array, comparator) {\n  if (typeof comparator === 'undefined') {\n    comparator = function(first, second) {\n      if (first < second) {\n        return -1;\n      } else if (second < first) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n  var before = [];\n  var same = [];\n  var after = [];\n  if (array.length) {\n    same.push(array[0]);\n  }\n  for(var i = 1; i < array.length; ++i) {\n    if (comparator(array[i], array[0]) < 0) {\n      before.push(array[i]);\n    } else if (comparator(array[i], array[0]) > 0) {\n      after.push(array[i]);\n    } else {\n      same.push(array[i]);\n    }\n  }\n  var result = [];\n  if (before.length) {\n    result = result.concat(sort(before, comparator));\n  }\n  result = result.concat(same);\n  if (after.length) {\n    result = result.concat(sort(after, comparator));\n  }\n  return result;\n}\n```", "```js\n    console.log(sort([1, 3, 2, 11, 9]));\n    console.log(sort(['a', 'c', 'b']));\n    console.log(sort(['a', 'c', 'b', 1, 3, 2, 11, 9]); \n    ```", "```js\n    [1, 2, 3, 9, 11]\n    [\"a\", \"b\", \"c\"]\n    [\"a\", 1, 3, 2, 11, 9, \"b\", \"c\"] \n    ```", "```js\n    console.log('Before: ' + before);\n    console.log('Same: ' + same);\n    console.log('After: ' + after);\n    ```", "```js\n    [1, 2, 3, 9, 11]\n    Before:\n    Same: a\n    After: c,b\n    Before: b\n    Same: c\n    After: \n    Before:\n    Same: b\n    After:\n    [\"a\", \"b\", \"c\"]\n    Before:\n    Same: a,1,3,2,11,9\n    After: c,b\n    Before: b\n    Same: c\n    After: \n    Before: \n    Same: b\n    After:  \n    [\"a\", 1, 3, 2, 11, 9, \"b\", \"c\"]\n    ```", "```js\n        var comparator = function(first, second) {\n          if (typeof first < typeof second) {\n            return -1;\n          } else if (typeof second < typeof first) {\n            return -1;\n          } else if (first < second) {\n            return -1;\n          } else if (second < first) {\n            return 1;\n          } else {\n            return 0;\n          }\n        }\n```", "```js\nvar sample = {\n  'a': 12,\n  'b': 2.5\n};\n```", "```js\nvar records = [{\n    first_name: 'Alice',\n    last_name: 'Spung',\n    email: 'a.spung@yahoo.com'\n  }, {\n    first_name: 'Robert',\n    last_name: 'Hendrickson',\n    email: 'Bob.Hendrickson@gmail.com'\n  }\n];\n```", "```js\nreturn\n  {\n  x: 12\n  };\n```", "```js\nreturn {\n  x: 12\n};\n```", "```js\nvar numbers = [1, 2, 3];\nvar total = 0;\nfor(var index = 0; index < numbers.length; ++index) {\n  total += numbers[index];\n}\n```", "```js\nvar counter = 0;\nfor(var field in obj) {\n  counter += 1;\n}\n```", "```js\nvar counter = 0;\nfor(var field in obj) {\n  if (obj.hasOwnProperty(field)) {\n    counter += 1;\n  }\n}\n```"]