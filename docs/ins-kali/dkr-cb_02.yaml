- en: Chapter 2. Working with Docker Containers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 章。使用 Docker 容器
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下配方：
- en: Listing/searching for an image
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出/搜索镜像
- en: Pulling an image
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拉取镜像
- en: Listing images
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出镜像
- en: Starting a container
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动容器
- en: Listing containers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出容器
- en: Stopping a container
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止容器
- en: Looking at the logs of containers
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看容器的日志
- en: Deleting a container
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除容器
- en: Setting the restart policy on a container
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置容器的重启策略
- en: Getting privileged access inside a container
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在容器内获取特权访问
- en: Exposing a port while starting a container
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在启动容器时暴露端口
- en: Accessing the host device inside the container
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在容器内访问主机设备
- en: Injecting a new process to a running container
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向正在运行的容器注入新进程
- en: Returning low-level information about a container
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回有关容器的低级信息
- en: Labeling and filtering containers
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对容器进行标记和过滤
- en: Introduction
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'In the previous chapter, after installing Docker, we pulled an image and created
    a container from it. Docker''s primary objective is running containers. In this
    chapter, we''ll see the different operations we can do with containers such as
    starting, stopping, listing, deleting, and so on. This will help us to use Docker
    for different use cases such as testing, CI/CD, setting up PaaS, and so on, which
    we''ll cover in later chapters. Before we start, let''s verify the Docker installation
    by running the following command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，安装 Docker 后，我们拉取了一个镜像，并从中创建了一个容器。Docker 的主要目标是运行容器。在本章中，我们将看到我们可以对容器进行不同的操作，如启动、停止、列出、删除等。这将帮助我们将
    Docker 用于不同的用例，如测试、CI/CD、设置 PaaS 等，我们将在后面的章节中进行介绍。在开始之前，让我们通过运行以下命令来验证 Docker
    安装：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Introduction](../Images/image00279.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![介绍](../Images/image00279.jpeg)'
- en: This will give the Docker client and server version, as well as other details.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提供 Docker 客户端和服务器版本，以及其他详细信息。
- en: I am using Fedora 20/21 as my primary environment to run the recipes. They should
    also work with the other environment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我正在使用 Fedora 20/21 作为运行配方的主要环境。它们也应该适用于其他环境。
- en: Listing/searching for an image
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出/搜索镜像
- en: We need an image to start the container. Let's see how we can search images
    on the Docker registry. As we have seen in [Chapter 1](part0015.xhtml#aid-E9OE2
    "Chapter 1. Introduction and Installation"), *Introduction and Installation*,
    a registry holds the Docker images and it can be both public and private. By default,
    the search will happen on the default public registry, which is called Docker
    Hub and is located at [https://hub.docker.com/](https://hub.docker.com/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个镜像来启动容器。让我们看看如何在 Docker 注册表上搜索镜像。正如我们在[第 1 章](part0015.xhtml#aid-E9OE2
    "第 1 章。介绍和安装")中所看到的，*介绍和安装*，注册表保存 Docker 镜像，它可以是公共的也可以是私有的。默认情况下，搜索将在默认的公共注册表
    Docker Hub 上进行，它位于 [https://hub.docker.com/](https://hub.docker.com/)。
- en: Getting ready
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 确保 Docker 守护程序在主机上运行，并且您可以通过 Docker 客户端进行连接。
- en: How to do it…
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To search an image on a Docker registry, run the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在 Docker 注册表上搜索镜像，请运行以下命令：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following is an example to search a Fedora image:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是搜索 Fedora 镜像的示例：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![How to do it…](../Images/image00280.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](../Images/image00280.jpeg)'
- en: The preceding screenshot lists the name, description, and number of stars awarded
    to the image. It also points out whether the image is official and automated or
    not. `STARS` signifies how many people liked the given image. The `OFFICIAL` column
    helps us identify whether the image is built from a trusted source or not. The
    `AUTOMATED` column is a way to tell whether an image is built automatically with
    push in GitHub or Bitbucket repositories. More details about `AUTOMATED` can be
    found in the next chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图列出了图像的名称，描述和获得的星星数量。它还指出图像是否是官方和自动化的。`STARS`表示有多少人喜欢给定的图像。`OFFICIAL`列帮助我们确定图像是否是从可信任的来源构建的。`AUTOMATED`列是一种告诉我们图像是否是在GitHub或Bitbucket存储库中自动构建的方法。有关`AUTOMATED`的更多详细信息可以在下一章中找到。
- en: Tip
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The convention for image name is `<user>/<name>`, but it can be anything.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图像名称的约定是`<user>/<name>`，但它可以是任何东西。
- en: How it works…
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Docker searches for images on the Docker public registry, which has a repository
    for images at [https://registry.hub.docker.com/](https://registry.hub.docker.com/).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Docker在Docker公共注册表上搜索镜像，该注册表在[https://registry.hub.docker.com/](https://registry.hub.docker.com/)上有一个镜像仓库。
- en: We can configure our private index as well, which it can search for.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以配置我们的私有索引，它可以进行搜索。
- en: There's more…
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'To list the images that got more than 20 stars and are automated, run the following
    command:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要列出获得超过20颗星并且是自动化的图像，请运行以下命令：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![There''s more…](../Images/image00281.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](../Images/image00281.jpeg)'
- en: In [Chapter 3](part0038.xhtml#aid-147LC1 "Chapter 3. Working with Docker Images"),
    *Working with Docker Images*, we will see how to set up automated builds.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](part0038.xhtml#aid-147LC1 "第3章。使用Docker镜像")中，*使用Docker镜像*，我们将看到如何设置自动构建。
- en: From Docker 1.3 onwards, the `--insecure-registry` option to Docker daemon is
    provided, which allows us to search/pull/commit images from an insecure registry.
    For more details, look at [https://docs.docker.com/reference/commandline/cli/#insecure-registries](https://docs.docker.com/reference/commandline/cli/#insecure-registries).
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Docker 1.3开始，提供了`--insecure-registry`选项给Docker守护程序，允许我们从不安全的注册表中搜索/拉取/提交图像。有关更多详细信息，请查看[https://docs.docker.com/reference/commandline/cli/#insecure-registries](https://docs.docker.com/reference/commandline/cli/#insecure-registries)。
- en: 'The Docker package on RHEL 7 and Fedora provides options to add and block the
    registry with the `--add-registry` and `--block-registry` options respectively,
    to have better control over the image search path. For more details, look at the
    following links:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL 7和Fedora上的Docker软件包提供了`--add-registry`和`--block-registry`选项，分别用于添加和阻止注册表，以更好地控制图像搜索路径。有关更多详细信息，请查看以下链接：
- en: '[http://rhelblog.redhat.com/2015/04/15/understanding-the-changes-to-docker-search-and-docker-pull-in-red-hat-enterprise-linux-7-1/](http://rhelblog.redhat.com/2015/04/15/understanding-the-changes-to-docker-search-and-docker-pull-in-red-hat-enterprise-linux-7-1/)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://rhelblog.redhat.com/2015/04/15/understanding-the-changes-to-docker-search-and-docker-pull-in-red-hat-enterprise-linux-7-1/](http://rhelblog.redhat.com/2015/04/15/understanding-the-changes-to-docker-search-and-docker-pull-in-red-hat-enterprise-linux-7-1/)'
- en: '[https://github.com/docker/docker/pull/10411](https://github.com/docker/docker/pull/10411)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/docker/docker/pull/10411](https://github.com/docker/docker/pull/10411)'
- en: See also
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'For help with the Docker search, run the following command:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取Docker搜索的帮助，请运行以下命令：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#search](https://docs.docker.com/reference/commandline/cli/#search)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#search](https://docs.docker.com/reference/commandline/cli/#search)
- en: Pulling an image
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拉取图像
- en: After searching the image, we can pull it to the system by running the Docker
    daemon. Let's see how we can do that.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索图像后，我们可以通过运行Docker守护程序将其拉取到系统中。让我们看看我们可以如何做到这一点。
- en: Getting ready
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To pull an image on the Docker registry, run the following command:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在Docker注册表上拉取图像，请运行以下命令：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following is an example to pull the Fedora image:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是拉取Fedora图像的示例：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![How to do it…](../Images/image00282.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](../Images/image00282.jpeg)'
- en: How it works…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `pull` command downloads all layers from the Docker registry, which are
    required to create that image locally. We will see details about layers in the
    next chapter.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`pull`命令从Docker注册表下载所有层，这些层是在本地创建该图像所需的。我们将在下一章中看到有关层的详细信息。'
- en: There's more…
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Image tags group images of the same type. For example, CentOS can have images
    with tags such as `centos5`, `centos6`, and so on. For example, to pull an image
    with the specific tag, run the following command:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像标签将相同类型的图像分组。例如，CentOS可以具有标签如`centos5`，`centos6`等的图像。例如，要拉取具有特定标签的图像，请运行以下命令：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'By default, the image with latest tag gets pulled. To pull all images corresponding
    to all tags, use the following command:'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，将拉取具有最新标签的图像。要拉取所有对应于所有标签的图像，请使用以下命令：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'With Docker 1.6 ([https://blog.docker.com/2015/04/docker-release-1-6/](https://blog.docker.com/2015/04/docker-release-1-6/)),
    we can build and refer to images by a new content-addressable identifier called
    a `digest`. It is a very useful feature when we want to work with a specific image,
    rather than tags. To pull an image with a specific digest, we can consider the
    following syntax:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Docker 1.6（[https://blog.docker.com/2015/04/docker-release-1-6/](https://blog.docker.com/2015/04/docker-release-1-6/)），我们可以通过称为“摘要”的新内容可寻址标识符构建和引用图像。当我们想要使用特定图像而不是标签时，这是一个非常有用的功能。要拉取具有特定摘要的图像，可以考虑以下语法：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here is an example of a command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个命令的示例：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Digest is supported only with the Docker registry v2.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 仅支持Docker注册表v2的摘要。
- en: Once an image gets pulled, it resides on local cache (storage), so subsequent
    pulls will be very fast. This feature plays a very important role in building
    Docker layered images.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦图像被拉取，它将驻留在本地缓存（存储）中，因此后续的拉取将非常快。这个功能在构建Docker分层图像中扮演着非常重要的角色。
- en: See also
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of Docker `pull`:'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看Docker `pull`的`help`选项：
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#pull](https://docs.docker.com/reference/commandline/cli/#pull)
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#pull](https://docs.docker.com/reference/commandline/cli/#pull)
- en: Listing images
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出图像
- en: We can list the images available on the system running the Docker daemon. These
    images might have been pulled from the registry, imported through the `docker`
    command, or created through Docker files.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以列出运行Docker守护程序的系统上可用的图像。这些图像可能已经从注册表中拉取，通过`docker`命令导入，或者通过Docker文件创建。
- en: Getting ready
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Run the following command to list the images:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令列出图像：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![How to do it…](../Images/image00283.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](../Images/image00283.jpeg)'
- en: How it works…
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Docker client talks to the Docker server and gets the list of images at
    the server end.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Docker客户端与Docker服务器通信，并获取服务器端的图像列表。
- en: There's more…
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: All the images with the same name but different tags get downloaded. The interesting
    thing to note here is that they have the same name but different tags. Also, there
    are two different tags for the same `IMAGE ID`, which is `2d24f826cb16`.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有具有相同名称但不同标签的图像都会被下载。这里值得注意的有趣之处是它们具有相同的名称但不同的标签。此外，对于相同的`IMAGE ID`，有两个不同的标签，即`2d24f826cb16`。
- en: You might see a different output for `REPOSITORY`, as shown in the following
    screenshot, with the latest Docker packages.![There's more…](../Images/image00284.jpeg)
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可能会看到与最新的Docker软件包不同的`REPOSITORY`输出，如下面的屏幕截图所示。![更多内容…](../Images/image00284.jpeg)
- en: This is because the image listing prints the Docker registry hostname as well.
    As shown in the preceding screenshot, `docker.io` is the registry hostname.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为镜像列表打印了Docker注册表主机名。如前面的屏幕截图所示，`docker.io`是注册表主机名。
- en: See also
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker images`:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker images`的`help`选项：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#images](https://docs.docker.com/reference/commandline/cli/#images)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#images](https://docs.docker.com/reference/commandline/cli/#images)
- en: Starting a container
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动容器
- en: Once we have images, we can use them to start the containers. In this recipe,
    we will start a container with the `fedora:latest` image and see what all things
    happen behind the scene.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了镜像，就可以使用它们来启动容器。在这个示例中，我们将使用`fedora:latest`镜像启动一个容器，并查看幕后发生的所有事情。
- en: Getting ready
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'The syntax used to start a container is as follows:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动容器的语法如下：
- en: '[PRE14]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here is an example of a command:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个命令的示例：
- en: '[PRE15]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'By default, Docker picks the image with the latest tag:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Docker会选择带有最新标签的镜像：
- en: The `-i` option starts the container in the interactive mode
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-i`选项以交互模式启动容器'
- en: The `-t` option allocates a `pseudo-tty` and attaches it to the standard input
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`-t`选项分配一个`伪终端`并将其附加到标准输入
- en: So, with the preceding command, we start a container from the `fedora:latest`
    image, attach `pseudo-tty`, name it `f21`, and run the `/bin/bash` command. If
    the name is not specified, then a random string will be assigned as the name.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通过上述命令，我们从`fedora:latest`镜像启动一个容器，附加`伪终端`，将其命名为`f21`，并运行`/bin/bash`命令。如果未指定名称，则将分配一个随机字符串作为名称。
- en: Also, if the image is not available locally, then it will get downloaded from
    the registry first and then run. Docker will run the `search` and `pull` commands
    before running the `run` command.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果镜像在本地不可用，则会首先从注册表中下载，然后运行。在运行`run`命令之前，Docker将运行`search`和`pull`命令。
- en: How it works…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'Under the hood, Docker:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，Docker：
- en: Will merge all the layers that make that image using UnionFS.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将使用UnionFS合并构成该镜像的所有层。
- en: Allocates a unique ID to a container, which is referred to as Container ID.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为容器分配一个唯一的ID，称为容器ID。
- en: Allocates a filesystem and mounts a read/write layer for the container. Any
    changes on this layer will be temporary and will be discarded if they are not
    committed.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为容器分配一个文件系统并挂载一个读/写层。对该层的任何更改都将是临时的，如果它们没有被提交，就会被丢弃。
- en: Allocates a network/bridge interface.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配一个网络/桥接口。
- en: Assigns an IP address to the container.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为容器分配一个IP地址。
- en: Executes the process specified by the user.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行用户指定的进程。
- en: Also, with the default Docker configuration, it creates a directory with the
    container's ID inside `/var/lib/docker/containers`, which has the container's
    specific information such as hostname, configuration details, logs, and `/etc/hosts`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，默认情况下，Docker会在`/var/lib/docker/containers`目录中创建一个包含容器ID的目录，其中包含容器的特定信息，如主机名、配置详细信息、日志和`/etc/hosts`。
- en: There's more…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: To exit from the container, press *Ctrl* + *D* or type `exit`. It is similar
    to exiting from a shell but this will stop the container.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要退出容器，请按*Ctrl* + *D*或输入`exit`。这类似于从shell中退出，但这将停止容器。
- en: 'The `run` command creates and starts the container. With Docker 1.3 or later,
    it is possible to just create the container using the `create` command and run
    it later using the `start` command, as shown in the following example:'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`run`命令创建并启动容器。使用Docker 1.3或更高版本，可以使用`create`命令只创建容器，然后使用`start`命令稍后运行它，如下例所示：'
- en: '[PRE16]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The container can be started in the background and then we can attach to it
    whenever needed. We need to use the `-d` option to start the container in the
    background:'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器可以在后台启动，然后我们可以在需要时附加到它。我们需要使用`-d`选项在后台启动容器：
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The preceding command returns the container ID of the container to which we
    can attach later, as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令返回容器的容器ID，稍后我们可以附加到该容器，如下所示：
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the preceding case, we chose `/bin/bash` to run inside the container. If
    we attach to the container, we will get an interactive shell. We can run a noninteractive
    process and run it in the background to make a daemonized container like this:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的情况下，我们选择了`/bin/bash`在容器内运行。如果我们附加到容器，我们将获得一个交互式shell。我们可以运行一个非交互式进程，并将其在后台运行，以创建一个守护进程容器，如下所示：
- en: '[PRE19]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To remove the container after it exits, start the container with the `--rm`
    option, as follows:'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在退出后删除容器，请使用`--rm`选项启动容器，如下所示：
- en: '[PRE20]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As soon as the `date` command exits, the container will be removed.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦`date`命令退出，容器将被删除。
- en: 'The `--read-only` option of the `run` command will mount the root filesystem
    in the `read-only` mode:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`run`命令的`--read-only`选项将以`只读`模式挂载根文件系统：'
- en: '[PRE21]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Remember that this option just makes sure that we cannot modify anything on
    the root filesystem, but we are writing on volumes, which we'll cover later in
    the book. This option is very useful when we don't want users to accidentally
    write content inside the container, which gets lost if the container is not committed
    or copied out on non-ephemeral storage such as volumes.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，此选项只是确保我们不能修改根文件系统上的任何内容，但我们正在写入卷，这将在本书的后面部分进行介绍。当我们不希望用户意外地在容器内写入内容时，此选项非常有用，如果容器没有提交或复制到非临时存储（如卷）上，这些内容将会丢失。
- en: You can also set custom labels to containers, which can be used to group the
    containers based on labels. Take a look at the *Labeling and filtering containers*
    recipe in this chapter for more details.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还可以为容器设置自定义标签，这些标签可以用于根据标签对容器进行分组。有关更多详细信息，请参阅本章中的*标记和过滤容器*配方。
- en: Tip
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'A container can be referred in three ways: by name, by container ID (0df95cc49e258b74be713c31d5a28b9d590906ed9d6e1a2dc75672
    aa48f28c4f), and by short container ID (0df95cc49e25)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 容器可以通过三种方式引用：按名称，按容器ID（0df95cc49e258b74be713c31d5a28b9d590906ed9d6e1a2dc75672
    aa48f28c4f）和按短容器ID（0df95cc49e25）
- en: See also
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker run`:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker run`的`help`选项：
- en: '[PRE22]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
- en: The Docker 1.3 release announcement [http://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/](http://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/)
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 1.3发布公告[http://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/](http://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/)
- en: Listing containers
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出容器
- en: We can list both running and stopped containers.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以列出正在运行和停止的容器。
- en: Getting ready
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client. You will also need a few running and/or stopped containers.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。您还需要一些正在运行和/或已停止的容器。
- en: How to do it…
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To list the containers, run the following command:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要列出容器，请运行以下命令：
- en: '[PRE23]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![How to do it…](../Images/image00285.jpeg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](../Images/image00285.jpeg)'
- en: How it works…
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The Docker daemon can look at the metadata associated with the containers and
    list them down. By default, the command returns:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Docker守护程序可以查看与容器关联的元数据并将其列出。默认情况下，该命令返回：
- en: The container ID
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器ID
- en: The image from which it got created
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建它的镜像
- en: The command that was run after starting the container
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在启动容器后运行的命令
- en: The details about when it got created
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关创建时间的详细信息
- en: The current status
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前状态
- en: The ports that are exposed from the container
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从容器中公开的端口
- en: The name of the container
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器的名称
- en: There's more…
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: To list both running and stopped containers, use the `-a` option as follows:![There's
    more…](../Images/image00286.jpeg)
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要列出运行和停止的容器，请使用`-a`选项，如下所示：![还有更多…](../Images/image00286.jpeg)
- en: To return just the container IDs of all the containers, use the `-aq` option
    as follows:![There's more…](../Images/image00287.jpeg)
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要仅返回所有容器的容器ID，请使用`-aq`选项，如下所示：![还有更多…](../Images/image00287.jpeg)
- en: 'To show the last created container, including the non-running container, run
    the following command:'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要显示最后创建的容器，包括非运行容器，请运行以下命令：
- en: '[PRE24]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Using the `--filter/-f` option to `ps` we can list containers with specific
    labels. Look at the *Labeling and filtering containers* recipe in this chapter
    for more details.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--filter/-f`选项对`ps`进行标记，我们可以列出具有特定标签的容器。有关更多详细信息，请参阅本章中的*标记和过滤容器*示例。
- en: See also
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `man` page of `docker ps` to see more options:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`docker ps`的`man`页面以查看更多选项：
- en: 'Look at the `help` option of `docker ps`:'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker ps`的`help`选项：
- en: '[PRE25]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#ps](https://docs.docker.com/reference/commandline/cli/#ps)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#ps](https://docs.docker.com/reference/commandline/cli/#ps)
- en: Looking at the logs of containers
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看容器的日志
- en: If the container emits logs or output on `STDOUT`/`STDERR`, then we can get
    them without logging into the container.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果容器在`STDOUT`/`STDERR`上发出日志或输出，则可以在不登录到容器的情况下获取它们。
- en: Getting ready
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client. You will also need a running container, which emits logs/output
    on `STDOUT`.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。您还需要一个正在运行的容器，该容器会在`STDOUT`上发出日志/输出。
- en: How to do it…
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To get logs from the container, run the following command:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从容器中获取日志，请运行以下命令：
- en: '[PRE26]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Let''s take the example from the earlier section of running a daemonized container
    and look at the logs:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们以前面部分的示例为例，运行一个守护式容器并查看日志：
- en: '[PRE27]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![How to do it…](../Images/image00288.jpeg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](../Images/image00288.jpeg)'
- en: How it works…
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Docker will look at the container's specific log file from `/var/lib/docker/containers/<Container
    ID>` and show the result.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Docker将查看来自`/var/lib/docker/containers/<Container ID>`的容器特定日志文件并显示结果。
- en: There's more…
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: With the `-t` option, we can get the timestamp with each log line and with `-f`
    we can get tailf like behavior.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-t`选项，我们可以在每个日志行中获取时间戳，并使用`-f`可以获得类似tailf的行为。
- en: See also
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at `help` option of `docker logs`:'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker logs`的`help`选项：
- en: '[PRE28]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#logs](https://docs.docker.com/reference/commandline/cli/#logs)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#logs](https://docs.docker.com/reference/commandline/cli/#logs)
- en: Stopping a container
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止一个容器
- en: We can stop one or more containers at once. In this recipe, we will first start
    a container and then stop it.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以一次停止一个或多个容器。在这个示例中，我们将首先启动一个容器，然后停止它。
- en: Getting ready
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client. You will also need one or more running containers.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。您还需要一个或多个正在运行的容器。
- en: How to do it…
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To stop the container, run the following command:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要停止容器，请运行以下命令：
- en: '[PRE29]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you already have a running container, then you can go ahead and stop it;
    if not, we can create one and then stop it as follows:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您已经有一个正在运行的容器，那么您可以继续停止它；如果没有，我们可以创建一个然后停止它，如下所示：
- en: '[PRE30]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: How it works…
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: This will save the state of the container and stop it. It can be started again,
    if needed.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这将保存容器的状态并停止它。如果需要，可以重新启动。
- en: There's more…
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: To stop a container after waiting for some time, use the `--time/-t` option.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在等待一段时间后停止容器，请使用`--time/-t`选项。
- en: 'To stop all the running containers run the following command:'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要停止所有正在运行的容器，请运行以下命令：
- en: '[PRE31]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: See also
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at `help` option of `docker stop`:'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker stop`的`help`选项：
- en: '[PRE32]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#stop](https://docs.docker.com/reference/commandline/cli/#stop)
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#stop](https://docs.docker.com/reference/commandline/cli/#stop)
- en: Deleting a container
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除容器
- en: We can delete a container permanently, but before that we have to stop the container
    or use the force option. In this recipe, we'll start, stop, and delete a container.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以永久删除一个容器，但在此之前我们必须停止容器或使用强制选项。在这个示例中，我们将启动、停止和删除一个容器。
- en: Getting ready
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client. You will also need some containers in a stopped or running
    state to delete them.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。您还需要一些处于停止或运行状态的容器来删除它们。
- en: How to do it…
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Use the following command:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令：
- en: '[PRE33]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Let''s first start a container, stop it, and then delete it using the following
    commands:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们首先启动一个容器，然后停止它，然后使用以下命令删除它：
- en: '[PRE34]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![How to do it…](../Images/image00289.jpeg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](../Images/image00289.jpeg)'
- en: As we can see from the preceding screenshot, the container did not show up,
    which just entered the `docker ps` command after stopping it. We had to provide
    the `-a` option to list it. After the container is stopped, we can delete it.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们从前面的屏幕截图中可以看到的，容器没有显示出来，这是在停止后输入`docker ps`命令后。我们必须提供`-a`选项来列出它。容器停止后，我们可以删除它。
- en: There's more…
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: To forcefully delete a container without an intermediate stop, use the `-f`
    option.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制删除容器而不进行中间停止，请使用`-f`选项。
- en: 'To delete all the containers, we first need to stop all the running containers
    and then remove them. Be careful before running the commands as these will delete
    both the running and the stopped containers:'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要删除所有容器，我们首先需要停止所有正在运行的容器，然后再删除它们。在运行命令之前要小心，因为这些命令将删除正在运行和停止的容器：
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: There are options to remove a specified link and volumes associated with the
    container, which we will explore later.
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有选项可以删除与容器相关的指定链接和卷，我们将在后面探讨。
- en: How it works…
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The Docker daemon will remove the read/write layer, which was created while
    starting the container.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Docker守护程序将删除在启动容器时创建的读/写层。
- en: See also
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Look at the `help` option of `docker rm`
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker rm`的`help`选项
- en: '[PRE36]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#rm](https://docs.docker.com/reference/commandline/cli/#rm)
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#rm](https://docs.docker.com/reference/commandline/cli/#rm)
- en: Setting the restart policy on a container
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在容器上设置重启策略
- en: Before Docker 1.2, there used to be an option to restart the container. With
    the release of Docker 1.2, it has been added with the `run` command with flags
    to specify the restart policy. With this policy, we can configure containers to
    start at boot time. This option is also very useful when a container dies accidentally.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在Docker 1.2之前，曾经有一个重新启动容器的选项。随着Docker 1.2的发布，它已经添加到了`run`命令中，并使用标志来指定重新启动策略。通过这个策略，我们可以配置容器在启动时启动。当容器意外死掉时，这个选项也非常有用。
- en: Getting ready
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'You can set the restart policy using the following syntax:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下语法设置重新启动策略：
- en: '[PRE37]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Here is an example of a command:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个命令的示例：
- en: '[PRE38]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'There are three restart policies to choose from:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种重新启动策略可供选择：
- en: '`no`: This does not start the container if it dies'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no`: 如果容器死掉，它不会重新启动'
- en: '`on-failure`: This restarts the container if it fails with nonzero exit code'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`on-failure`: 如果容器以非零退出代码失败，则重新启动容器'
- en: '`always`: This always restarts the container without worrying about the return
    code'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`always`: 这总是重新启动容器，不用担心返回代码'
- en: There's more…
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can also give an optional restart count with the `on-failure` policy as
    follows:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`on-failure`策略给出可选的重新启动计数，如下所示：
- en: '[PRE39]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The preceding command will only restart the container three times, if any failure
    occurs.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令只会在发生故障时重新启动容器三次。
- en: See also
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker run`:'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker run`的`help`选项：
- en: '[PRE40]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run).
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)。
- en: If a restart does not suit your requirements, then use `systemd` ([http://freedesktop.org/wiki/Software/systemd/](http://freedesktop.org/wiki/Software/systemd/))
    for solutions to automatically restart the container on failure. For more information,
    visit [https://docs.docker.com/articles/host_integration/](https://docs.docker.com/articles/host_integration/).
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果重新启动不符合您的要求，那么可以使用`systemd` ([http://freedesktop.org/wiki/Software/systemd/](http://freedesktop.org/wiki/Software/systemd/))
    来解决容器在失败时自动重新启动的问题。有关更多信息，请访问[https://docs.docker.com/articles/host_integration/](https://docs.docker.com/articles/host_integration/)。
- en: Getting privileged access inside a container
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在容器内获取特权访问
- en: Linux divides the privileges traditionally associated with superuser into distinct
    units, known as capabilities (run `man capabilities` on a Linux-based system),
    which can be independently enabled and disabled. For example, the `net_bind_service`
    capability allows nonuser processes to bind the port below 1,024\. By default,
    Docker starts containers with limited capabilities. With privileged access inside
    the container, we give more capabilities to perform operations normally done by
    root. For example, let's try to create a loopback device while mounting a disk
    image.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: Linux将传统上与超级用户关联的特权分为不同的单元，称为功能（在基于Linux的系统上运行`man capabilities`），可以独立启用和禁用。例如，`net_bind_service`功能允许非用户进程绑定到1,024以下的端口。默认情况下，Docker以有限的功能启动容器。通过在容器内获取特权访问，我们可以赋予更多的功能来执行通常由root完成的操作。例如，让我们尝试在挂载磁盘映像时创建一个回环设备。
- en: '![Getting privileged access inside a container](../Images/image00290.jpeg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![在容器内获取特权访问](../Images/image00290.jpeg)'
- en: Getting ready
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'To use the `privileged` mode, use the following command:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用`privileged`模式，请使用以下命令：
- en: '[PRE41]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now let''s try the preceding example with the privileged access:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们尝试使用特权访问的前面的示例：
- en: '[PRE42]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![How to do it…](../Images/image00291.jpeg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](../Images/image00291.jpeg)'
- en: How it works…
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: By providing almost all capabilities inside the container.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在容器内提供几乎所有功能。
- en: There's more…
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'This mode causes security risks as containers can get root-level access on
    the Docker host. With Docker 1.2 or new, two new flags `--cap-add` and `--cap-del`
    have been added to give fine-grained control inside a container. For example,
    to prevent any `chown` inside the container, use the following command:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式会带来安全风险，因为容器可以在Docker主机上获得根级访问权限。使用Docker 1.2或更高版本，添加了两个新标志`--cap-add`和`--cap-del`，以在容器内提供细粒度的控制。例如，要防止容器内的任何`chown`，请使用以下命令：
- en: '[PRE43]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Look at [Chapter 9](part0092.xhtml#aid-2NNJO2 "Chapter 9. Docker Security"),
    *Docker Security*, for more details.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[第9章](part0092.xhtml#aid-2NNJO2 "第9章。Docker安全性")，“Docker安全性”，了解更多详情。
- en: See also
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker run`:'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker run`的`help`选项：
- en: '[PRE44]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
- en: The Docker 1.2 release announcement [http://blog.docker.com/2014/08/announcing-docker-1-2-0/](http://blog.docker.com/2014/08/announcing-docker-1-2-0/)
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 1.2发布公告[http://blog.docker.com/2014/08/announcing-docker-1-2-0/](http://blog.docker.com/2014/08/announcing-docker-1-2-0/)
- en: Exposing a port while starting a container
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在启动容器时暴露端口
- en: There are a number of ways by which ports on the container can be exposed. One
    of them is through the `run` command, which we will cover in this chapter. The
    other ways are through the Docker file and the `--link` command. We will explore
    them in the other chapters.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以暴露容器上的端口。其中一种是通过`run`命令，我们将在本章中介绍。其他方法是通过Docker文件和`--link`命令。我们将在其他章节中探讨它们。
- en: Getting ready
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'The syntax to expose a port is as follows:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 暴露端口的语法如下：
- en: '[PRE45]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'For example, to expose port 22 while starting a container, run the following
    command:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要在启动容器时暴露端口22，请运行以下命令：
- en: '[PRE46]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: There's more…
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: There are multiple ways to expose the ports for a container. For now, we will
    see how we can expose the port while starting the container. We'll look other
    options to expose the ports in later chapters.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以为容器暴露端口。现在，我们将看到如何在启动容器时暴露端口。我们将在后续章节中探讨其他暴露端口的选项。
- en: See also
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker run`:'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker run`的`help`选项：
- en: '[PRE47]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
- en: Accessing the host device inside the container
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在容器内访问主机设备
- en: From Docker 1.2 onwards, we can give access of the host device to a container
    with the `--device` option to the `run` command. Earlier, one has bind mount it
    with the `-v` option and that had to be done with the `--privileged` option.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 从Docker 1.2开始，我们可以使用`--device`选项将主机设备的访问权限提供给容器的`run`命令。以前，必须使用`-v`选项进行绑定挂载，并且必须使用`--privileged`选项进行操作。
- en: Getting ready
  id: totrans-292
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client. You will also need a device to pass to the container.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。您还需要一个设备传递给容器。
- en: How to do it…
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'You can give access of a host device to the container using the following syntax:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下语法将主机设备的访问权限提供给容器：
- en: '[PRE48]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Here is an example of a command:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个命令的例子：
- en: '[PRE49]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: How it works…
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The preceding command will access `/dev/sdc` inside the container.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将访问容器内的`/dev/sdc`。
- en: See also
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker run`:'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker run`的`help`选项：
- en: '[PRE50]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#run](https://docs.docker.com/reference/commandline/cli/#run)
- en: Injecting a new process to a running container
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向正在运行的容器注入新进程
- en: While doing development and debugging, we might want to look inside the already
    running container. There are a few utilities, such as `nsenter` ([https://github.com/jpetazzo/nsenter](https://github.com/jpetazzo/nsenter)),
    that allow us to enter into the namespace of the container to inspect it. With
    the `exec` option, which was added in Docker 1.3, we can inject a new process
    inside a running container.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发和调试过程中，我们可能想要查看已经运行的容器内部。有一些实用程序，比如`nsenter`([https://github.com/jpetazzo/nsenter](https://github.com/jpetazzo/nsenter))，允许我们进入容器的命名空间进行检查。使用在Docker
    1.3中添加的`exec`选项，我们可以在运行的容器内注入新进程。
- en: Getting ready
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client. You might also need a running container to inject a process
    in.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。您可能还需要一个正在运行的容器来注入进程。
- en: How to do it…
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'You can inject a process inside a running container with the following command:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下命令在运行的容器中注入进程：
- en: '[PRE51]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Let''s start an `nginx` container and then inject `bash` into that:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们启动一个`nginx`容器，然后注入`bash`进去：
- en: '[PRE52]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '![How to do it…](../Images/image00292.jpeg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](../Images/image00292.jpeg)'
- en: How it works…
  id: totrans-315
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The `exec` command enters into the namespace of the container and starts the
    new process.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`exec`命令进入容器的命名空间并启动新进程。'
- en: See also
  id: totrans-317
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at `help` option of Docker inspect:'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看Docker inspect的`help`选项：
- en: '[PRE53]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#exec](https://docs.docker.com/reference/commandline/cli/#exec)
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#exec](https://docs.docker.com/reference/commandline/cli/#exec)
- en: Returning low-level information about a container
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 返回有关容器的低级信息
- en: While doing the debugging, automation, and so on, we will need the container
    configuration details. Docker provides the `inspect` command to get those easily.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行调试、自动化等操作时，我们将需要容器配置详细信息。Docker提供了`inspect`命令来轻松获取这些信息。
- en: Getting ready
  id: totrans-323
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure the Docker daemon is running on the host and you can connect through
    the Docker client.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker守护程序在主机上运行，并且您可以通过Docker客户端进行连接。
- en: How to do it…
  id: totrans-325
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To inspect a container/image, run the following command:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查容器/镜像，请运行以下命令：
- en: '[PRE54]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'We''ll start a container and then inspect it:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将启动一个容器，然后对其进行检查：
- en: '[PRE55]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: How it works…
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Docker will look into the metadata and configuration for the given image or
    container and present it.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: Docker将查看给定镜像或容器的元数据和配置，并呈现出来。
- en: There's more…
  id: totrans-332
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'With the `-f | --format` option we can use the Go (programming language) template
    to get the specific information. The following command will give us an IP address
    of the container:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-f | --format`选项，我们可以使用Go（编程语言）模板来获取特定信息。以下命令将给出容器的IP地址：
- en: '[PRE56]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: See also
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Look at the `help` option of `docker inspect`:'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`docker inspect`的`help`选项：
- en: '[PRE57]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: The documentation on the Docker website [https://docs.docker.com/reference/commandline/cli/#inspect](https://docs.docker.com/reference/commandline/cli/#inspect)
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker网站上的文档[https://docs.docker.com/reference/commandline/cli/#inspect](https://docs.docker.com/reference/commandline/cli/#inspect)
- en: Labeling and filtering containers
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标记和过滤容器
- en: With Docker 1.6, a feature has been added to label containers and images, through
    which we can attach arbitrary key-value metadata to them. You can think of them
    as environment variables, which are not available to running applications inside
    containers but they are available to programs (Docker CLI) that are managing images
    and containers. Labels attached to images also get applied to containers started
    via them. We can also attach labels to containers while starting them.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Docker 1.6，已添加了一个功能来标记容器和镜像，通过这个功能，我们可以向它们附加任意的键值元数据。您可以将它们视为环境变量，这些变量对于容器内运行的应用程序不可用，但对于管理镜像和容器的程序（Docker
    CLI）是可用的。附加到镜像的标签也会应用到通过它们启动的容器。我们还可以在启动容器时附加标签。
- en: Docker also provides filters to containers, images, and events ([https://docs.docker.com/reference/commandline/cli/#filtering](https://docs.docker.com/reference/commandline/cli/#filtering)),
    which we can use in conjunction with labels to narrow down our searches.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 还为容器、镜像和事件提供了过滤器（[https://docs.docker.com/reference/commandline/cli/#filtering](https://docs.docker.com/reference/commandline/cli/#filtering)），我们可以与标签一起使用，以缩小搜索范围。
- en: For this recipe, let's assume that we have an image with the label, `distro=fedora21`.
    In the next chapter, we will see how to assign a label to an image.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例，让我们假设我们有一个带有标签 `distro=fedora21` 的镜像。在下一章中，我们将看到如何为镜像分配标签。
- en: '![Labeling and filtering containers](../Images/image00293.jpeg)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![标记和过滤容器](../Images/image00293.jpeg)'
- en: As you can see from the preceding screenshot, if we use filters with the `docker
    images` command, we only get an image where the corresponding label is found in
    the image's metadata.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的截图中可以看到，如果我们在 `docker images` 命令中使用过滤器，我们只会得到一个在镜像元数据中找到相应标签的镜像。
- en: Getting ready
  id: totrans-345
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure that the Docker daemon 1.6 and above is running on the host and you
    can connect through the Docker client.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 确保主机上运行着 Docker 守护程序 1.6 及以上版本，并且您可以通过 Docker 客户端进行连接。
- en: How to do it…
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤如下…
- en: 'To start the container with the `--label/-l` option, run the following command:'
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用 `--label/-l` 选项启动容器，请运行以下命令：
- en: '[PRE58]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Let's start a container without a label and start two others with the same label:![How
    to do it…](../Images/image00294.jpeg)
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们启动一个没有标签的容器，并使用相同的标签启动另外两个：![操作步骤如下…](../Images/image00294.jpeg)
- en: If we list all the containers without a label, we will see all the containers,
    but if we use label, then we get only containers, which matches the label.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们列出所有没有标签的容器，我们将看到所有的容器，但如果我们使用标签，那么我们只会得到与标签匹配的容器。
- en: '![How to do it…](../Images/image00295.jpeg)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤如下…](../Images/image00295.jpeg)'
- en: How it works…
  id: totrans-353
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Docker attaches label metadata to containers while starting them and matches
    the label while listing them or other related operations.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 在启动容器时附加标签元数据，并在列出它们或其他相关操作时匹配标签。
- en: There's more…
  id: totrans-355
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多信息…
- en: We can list all the labels attached to a container through the `inspect` command,
    which we saw in an earlier recipe. As we can see, the `inspect` command returns
    both the image and the container labels.![There's more…](../Images/image00296.jpeg)
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过 `inspect` 命令列出附加到容器的所有标签，这是我们在之前的示例中看到的。正如我们所看到的，`inspect` 命令返回了镜像和容器的标签。![更多信息…](../Images/image00296.jpeg)
- en: You can apply labels from a file (with the `--from-file` option) that has a
    list of labels, separated by a new EOL.
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以从文件（使用 `--from-file` 选项）中应用标签，该文件包含以新的 EOL 分隔的标签列表。
- en: These labels are different from the Kubernetes label, which we will see in [Chapter
    8](part0081.xhtml#aid-2D7TI1 "Chapter 8. Docker Orchestration and Hosting Platforms"),
    *Docker Orchestration and Hosting Platforms*.
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些标签与 Kubernetes 标签不同，我们将在[第8章](part0081.xhtml#aid-2D7TI1 "Chapter 8. Docker
    Orchestration and Hosting Platforms")中看到，*Docker Orchestration and Hosting Platforms*。
- en: See also
  id: totrans-359
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The documentation on the Docker website [https://docs.docker.com/reference/builder/#label](https://docs.docker.com/reference/builder/#label)
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker官网上的文档[https://docs.docker.com/reference/builder/#label](https://docs.docker.com/reference/builder/#label)
- en: '[http://rancher.com/docker-labels/](http://rancher.com/docker-labels/)'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://rancher.com/docker-labels/](http://rancher.com/docker-labels/)'
