["```kt\n/* All I2C1 pins are SLEWCTRL_SLOW, INPUT_PULLUP, MODE3 */\nbb_i2c1a1_pins: pinmux_bb_i2c1a1_pins {\n    pinctrl-single,pins = <\n        0x180 0x73  /* P9.26, i2c1_sda */\n        0x184 0x73  /* P9.24, i2c1_scl */\n    >;\n};\n```", "```kt\nfragment@1 {\n    target = <&i2c1>;\n    __overlay__ {\n        status = \"okay\";\n        pinctrl-names = \"default\";\n        pinctrl-0 = <&bb_i2c1a1_pins>;\n        clock-frequency = <400000>;\n        #address-cells = <1>;\n        #size-cells = <0>;\n\n        /* This is where we specify each I2C device on this bus */\n        adafruit_fram: adafruit_fram0@50 {\n            /* Kernel driver for this device */\n            compatible = \"at,24c256\";\n            /* I2C bus address */\n            reg = <0x50>;\n        };\n    };\n};\n```", "```kt\nroot@beagleboneblack:/ # i2cdetect -y -r 1\n 0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:          -- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- UU UU UU UU -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n\n```", "```kt\nroot@beagleboneblack:/ # i2cdetect -y -r 2\n 0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:          -- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: 50 -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n\n```", "```kt\nextern int openFRAM(const unsigned int bus, const unsigned int address);\nextern int readFRAM(const unsigned int offset, const unsigned int \n    bufferSize, const char *buffer);\nextern int writeFRAM(const unsigned int offset, const unsigned int \n    const char *buffer);\nextern void closeFRAM(void);\n```", "```kt\nPublic class MainActivity extends Activity {\n\n    Public static HardwareTask hwTask;\n\n    Static {\n        System.loadLibrary(\"packtHAL\");\n    }\n```", "```kt\npublic class HardwareTask extends AsyncTask<Void, Void, Boolean> {\n\n  private native boolean openFRAM(int bus, int address);\n  private native String readFRAM(int offset, int bufferSize);\n  private native void writeFRAM(int offset, int bufferSize, \n      String buffer);\n  private native boolean closeFRAM();\n```", "```kt\npublic void onClickSaveButton(View view) {\n   hwTask = new HardwareTask();\n   hwTask.saveToFRAM(this);  \n}\n\npublic void onClickLoadButton(View view) {\n   hwTask = new HardwareTask();\n   hwTask.loadFromFRAM(this);\n}\n```", "```kt\npublic void saveToFRAM(Activity act) {\n   mCallerActivity = act;\n   isSave = true;\n   execute();\n}\n\npublic void loadFromFRAM(Activity act) {\n   mCallerActivity = act;\n   isSave = false;\n   execute();\n}\n```", "```kt\nprotected void onPreExecute() {  \n   // Some setup goes here\n   ...    \n  if ( !openFRAM(2, 0x50) ) {\n     Log.e(\"HardwareTask\", \"Error opening hardware\");\n     isDone = true;\n  }\n  // Disable the Buttons and TextFields while talking to the hardware\n  saveText.setEnabled(false);\n  saveButton.setEnabled(false);\n  loadButton.setEnabled(false); \n}\n```", "```kt\nprotected Boolean doInBackground(Void... params) {  \n   ...\n   Log.i(\"HardwareTask\", \"doInBackground: Interfacing with hardware\");\n   try {\n      if (isSave) {\n         writeFRAM(0, saveData.length(), saveData);\n      } else {\n        loadData = readFRAM(0, 61);\n      }\n   } catch (Exception e) {\n      ...\n```", "```kt\nprotected void onPostExecute(Boolean result) {\n   if (!closeFRAM()) {\n    Log.e(\"HardwareTask\", \"Error closing hardware\");\n  }\n   ...\n```", "```kt\nLog.i(\"HardwareTask\", \"onPostExecute: Completed.\");\nif (isSave) {\n   Toast toast = Toast.makeText(mCallerActivity.getApplicationContext(), \n      \"Data stored to FRAM\", Toast.LENGTH_SHORT);\n   toast.show();\n} else {\n   ((MainActivity)mCallerActivity).updateLoadedData(loadData);\n}\n```", "```kt\nsaveText.setEnabled(true);\nsaveButton.setEnabled(true);\nloadButton.setEnabled(true);\n```"]