["```js\nvar digits = [3, 1, 4, 1, 5, 9];\ndigits.sort();\nconsole.log(digits);\n```", "```js\nArray[6]\n   0: 1\n   1: 1\n   2: 3\n   3: 4\n   4: 5\n   5: 9\n   length: 6\n     __proto__: Array[0]\n```", "```js\nvar mixed_numbers = [3, Math.PI, 1, Math.E, 4, Math.sqrt(2), 1,\n  Math.sqrt(3), 5, Math.sqrt(5), 9];\n```", "```js\n[1, 1, 1.4142135623730951, 1.7320508075688772, 2.23606797749979, 2.718281828459045, 3, 3.141592653589793, 4, 5, 9]\n```", "```js\nvar fruits = ['apple', 'durian', 'banana', 'canteloupe'];\n```", "```js\n[\"apple\", \"banana\", \"canteloupe\", \"durian\"]\n```", "```js\nvar words = ['apple', 'durian', 'Alpha', 'Bravo', 'Charlie',\n  'Delta', 'banana', 'canteloupe'];\n```", "```js\n  [\"Alpha\", \"Bravo\", \"Charlie\", \"Delta\", \"apple\", \"banana\",\n    \"canteloupe\", \"durian\"]\n```", "```js\nvar case_insensitive_comparison = function(first, second) {\n  if (first.toLowerCase() < second.toLowerCase()) {\n    return -1;\n  } else if (first.toLowerCase() > second.toLowerCase()) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n```", "```js\nwords.sort(case_insensitive_comparison);\n```", "```js\n[\"Alpha\", \"apple\", \"banana\", \"Bravo\", \"canteloupe\", \"Charlie\",\n  \"Delta\", \"durian\"] \n```", "```js\nvar mostly_case_insensitive_comparison = function(first, second) {\n  if (first.toLowerCase() < second.toLowerCase()) {\n    return -1;\n  } else if (first.toLowerCase() > second.toLowerCase()) {\n    return 1;\n  } else {\n    if (first < second) {\n      return -1;\n    } else if (second < first) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n```", "```js\n[\"ALPHA\", \"Alpha\", \"alpha\", \"apple\", \"banana\", \"Bravo\",\n  \"canteloupe\", \"Charlie\", \"Delta\", \"durian\"]\n```", "```js\n{\n  \"email\": {\n    \"personal\": \"jsmith@gmail.com\",\n    \"work\": \"john.smith@company.com\"\n  },\n  \"name\": {\n    \"first\": \"John\",\n    \"last\": \"Smith\"\n  },\n  \"skype\": {\n    \"personal\": \"JohnASmith\",\n    \"work\": \"JASCompany\"\n  }\n}\n```", "```js\nfunction* powers_of_two_generator() {\n  var power = 1;\n  while (true) {\n    yield power;\n    power *= 2;\n  }\n}\n\nfunction* fibonacci_generator() {\n  var first = 0;\n  var second = 1;\n  var sum;\n  yield second;\n  while (true) {\n    sum = first + second;\n    yield sum;\n    first = second;\n    second = sum;\n  }\n}\n```", "```js\nfunction power_of_two_recursive(n) {\n  if (n === 0) {\n    return 1;\n  } else {\n    return 2 * power_of_two_recursive(n \u2013 1);\n  }\n}\n\nfunction fibonacci_recursive(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  } else {\n    return (fibonacci_recursive(n \u2013 2) +\n      fibonacci_recursive(n \u2013 1));\n  }\n}\n```", "```js\nvar calculated_fibonacci_numbers = [];\n\nfunction fibonacci_memoized(n) {\n  if (calculated_fibonacci_numbers.length > n) {\n    return calculated_fibonacci_numbers[n];\n  } else {\n    if (n === 0 || n === 1) {\n      result = 1;\n    } else {\n      result = (fibonacci_memoized(n \u2013 2) +\n      fibonacci_memoized(n \u2013 1));\n    }\n    calculated_fibonacci_numbers[n] = result;\n    return result;\n  }\n}\n```", "```js\nvar one_to_ten = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar squares = one_to_ten.map(function(x) {return x * x});\n```", "```js\nvar map = function(arr, func) {\n  var result = [];\n  for(var index = 0; index < arr.length; ++index) {\n    if (typeof arr[index] !== 'undefined') {\n      result[index] = func(arr[index]);\n    }\n  }\n  return result;\n};\n```", "```js\nvar sum = one_to_ten.reduce(function(x, y) {return x + y});\n// returns 55\n```", "```js\nvar factorial = one_to_ten.reduce(function(x, y) {return x * y});\n// returns 3628800\n```", "```js\nvar message1 = ['H', 'e', 'l', 'l', 'o', ',', ' ',\n  'w', 'o', 'r', 'l', 'd', '!'].reduce(function(x, y)\n  {return x + y});\nvar message2 = ['Hello', ', ', 'world', '!'].reduce(\n  function(x, y) {return x + y});\n// Both invocations return, 'Hello, world!'\n```", "```js\n1 + (2 + (3 + 4))\n((1 + 2) + 3) + 4\n```", "```js\nMath.pow(2, Math.pow(3, 4))\nMath.pow(Math.pow(2, 3), 4)\n```", "```js\n2 ^ (3 ^ 4)\n(2 ^ 3) ^ 4\n```", "```js\n2.4178516392292583e+24\n4096\n```", "```js\n((((((((1 + 2) + 3) + 4) + 5) + 6) + 7) + 8) + 9) + 10\n1 + (2 + (3 + (4 + (5 + (6 + (7 + (8 + (9 + 10))))))))\n```", "```js\nfunction fold_left(arr, fun) {\n  var accumulator;\n  for(var index = 0; index < arr.length; ++index) {\n    if (typeof arr[index] !== 'undefined') {\n      if (typeof accumulator === 'undefined') {\n        accumulator = arr[index];\n      } else {\n        accumulator = fun(accumulator, arr[index]);\n      }\n    }\n  }\n  return accumulator;\n}\n\nfunction fold_right(arr, fun) {\n  var accumulator;\n  for(var index = arr.length - 1; index >= 0; --index) {\n    if (typeof arr[index] !== 'undefined') {\n      if (typeof accumulator === 'undefined') {\n        accumulator = arr[index];\n      } else {\n        accumulator = fun(arr[index], accumulator);\n      }\n    }\n  }\n  return accumulator;\n}\n```", "```js\nvar positive_and_negative = [-4, -3, -2, -1, 0, 1, 2, 3, 4];\nvar positive_only = positive_and_negative.filter(\n  function(x) {return x > 0;});\n```", "```js\nclass ObjectWithPrivateMember {\n  private int counter;\n  public ObjectWithPrivateMember() {\n    counter = 0;\n  }\n  public void increment() {\n    counter += 1;\n  }\n  public void decrement() {\n    counter -= 1;\n  }\n  public void get_counter() {\n    return counter;\n  }\n}\n```", "```js\nvar factory_for_objects_with_private_member = function() {\n  var counter = 0;\n  return {\n    'increment': function() {\n      counter += 1;\n    },\n    'decrement': function() {\n      counter -= 1;\n    },\n    'get_count': function() {\n      return counter;\n    }\n  }\n};\n```", "```js\nvar a = 1;\nvar inner = function() {\n  var b = 2;\n  return a + b;\n}\n```", "```js\nvar outer = function() {\n  var a = 1;\n  var inner = function() {\n    var b = 2;\n    return a + b;\n  }\n}\n```", "```js\nvar outer = function() {\n  var a = 1;\n  var inner = function() {\n    var b = 2;\n    return a + b;\n  }\n  return inner;\n}\nvar result = outer();\n```"]