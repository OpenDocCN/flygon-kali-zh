["```kt\ntry\n{\n  // Handled code here\n} \ncatch (Exception e)\n{\n  // Put debug statement with exception reason\n}\nfinally\n{\n  // Default instruction if any\n}\n```", "```kt\ntry\n{\n  // Task 1 which might throw exception\n}\ncatch ( Exception e)\n{\n  // Handles exception\n}\nfinally\n{\n  // Task 2 which might throw exception\n}\n```", "```kt\nvoid func1()\n{\n  try\n  {\n    funcTask();\n  }\n  catch ( Exception e)\n  {\n    // Handles exception\n  }\n}\n\nvoid funcTask()\n{\n  try\n  {\n    // Task 1\n  }\n  finally\n  {\n    // Task 2\n  }\n}\n```", "```kt\nclass A\n{\n  public int num;\n  public A()\n  {\n    num = 10;\n  }\n}\n// some method in other class which is called during runtime.\nvoid testFunc()\n{\n  A objA = null;\n  Log.d(\"TAG\", \"num = \" + objA.num);\n}\n```", "```kt\nclass RootClass\n{\n  public A objA;\n  public RootClass()\n  {\n    objA = null;\n    testFunc();\n  }\n\n  void testFunc()\n  {\n    Log.d(\"TAG\", \"num = \" + objA.num);\n  }\n}\n```", "```kt\nvoid testFunc()\n{\n  try\n  {\n    Log.d(\"TAG\", \"num = \" + objA.num);\n  }\n  catch (NullPointerException e)\n  {\n    Log.d(\"TAG\", \"Exception:: \" + e);\n  }\n}\n```", "```kt\nint[] arrayNum = new int[5];\nfor ( int i = 0; i < 5; ++ i)\n  arrayNum[i] = i;\n\nLog.d(\"TAG\", \"arrayNum[5] is \" + arrayNum[5]);\n```", "```kt\nvoid divideFunct(int num, int deno)\n{\n  try\n  {\n    Log.d(\"TAG\", \"Division Result = \" + (num / deno));\n  }\n  catch (ArithmeticException ae)\n  {\n    Log.d(\"TAG\", \"number cannot divided by zero\");\n  }\n}\n```", "```kt\ntry \n{\n  File dir = Environment.getExternalStorageDirectory();\n  File objFile = new File(dir, \"tmpPath/myfile.txt\");\n}\ncatch (IOException e) \n{\n  Log.d(\"TAG\", \"Error reading file :: \" + e);\n}\n```", "```kt\nadb shell monkey \u2013p <Game Package Name> <Event Count>\n```", "```kt\nadb shell dumpsys <option>\n```"]