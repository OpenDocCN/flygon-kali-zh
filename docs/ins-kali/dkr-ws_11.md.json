["```\nRUN addgroup --gid <GID> <UID> && adduser <UID> -h <home_directory> --disabled-password --uid <UID> --ingroup <UID> <user_name>\n```", "```\nUSER <UID>\n```", "```\n    1\u00a0FROM alpine\n    2\n    3\u00a0RUN apk update\n    4\u00a0RUN apk add wget curl nmap libcap\n    5\n    6\u00a0RUN echo \"#!/sh\\n\" > test_memory.sh\n    7\u00a0RUN echo \"cat /proc/meminfo; mpstat; pmap -x 1\"     >> test_memory.sh\n    8\u00a0RUN chmod 755 test_memory.sh\n    9\n    10\u00a0CMD [\"sh\", \"test_memory.sh\"]\n    ```", "```\n    docker build -t security-app . ; docker run \u2013rm security-app\n    ```", "```\n    MemTotal:        2036900 kB\n    MemFree:         1243248 kB\n    MemAvailable:    1576432 kB\n    Buffers:          73240 kB\n    \u2026\n    ```", "```\n    docker run --rm security-app whoami\n    ```", "```\n    root\n    ```", "```\n    docker run --rm -it security-app capsh \u2013print\n    ```", "```\n    Current: = cap_chown,cap_dac_override,cap_fowner,cap_fsetid,\n    cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,\n    cap_net_raw,cap_sys_chroot,cap_mknod,cap_audit_write,\n    cap_setfcap+eip\n    groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),\n    11(floppy),20(dialout),26(tape),27(video)\n    ```", "```\n    docker run --rm -it security-app sh -c 'nmap -sS -p 443 localhost'\n    ```", "```\n    Starting Nmap 7.70 ( https://nmap.org ) at 2019-11-13 02:40 UTC\n    Nmap scan report for localhost (127.0.0.1)\n    Host is up (0.000062s latency).\n    Other addresses for localhost (not scanned): ::1\n    PORT    STATE  SERVICE\n    443/tcp closed https\n    Nmap done: 1 IP address (1 host up) scanned in 0.27 seconds\n    ```", "```\n    echo \"secret password\" > /tmp/secret.txt\n    ```", "```\n    sudo chown root /tmp/secret.txt\n    ```", "```\n    docker run -v /tmp/secret.txt:/tmp/secret.txt security-app sh -c 'cat /tmp/secret.txt'\n    ```", "```\n    secret password\n    ```", "```\n    1\u00a0FROM alpine\n    2\n    3\u00a0RUN apk update\n    4\u00a0RUN apk add wget curl nmap libcap\n    5\n    6\u00a0RUN addgroup --gid 10001 20002 && adduser 20002 -h     /home/security_apps --disabled-password --uid 20002     --ingroup 20002\n    7\u00a0WORKDIR /home/security_apps\n    8\n    9\u00a0USER 20002\n    ```", "```\n    11\u00a0RUN echo \"#!/sh\\n\" > test_memory.sh\n    12\u00a0RUN echo \"cat /proc/meminfo; mpstat; pmap -x 1\" >>     test_memory.sh\n    13\u00a0RUN chmod 755 test_memory.sh\n    14\n    15\u00a0CMD [\"sh\", \"/home/security_apps/test_memory.sh\"]\n    ```", "```\n    FROM alpine\n    RUN apk update\n    RUN apk add wget curl nmap libcap\n    RUN addgroup --gid 10001 20002 && adduser 20002 -h   /home/security_apps --disabled-password --uid 20002     --ingroup 20002\n    WORKDIR /home/security_apps\n    USER 20002\n    RUN echo \"#!/sh\\n\" > test_memory.sh\n    RUN echo \"cat /proc/meminfo; mpstat; pmap -x 1\" >>   test_memory.sh\n    RUN chmod 755 test_memory.sh\n    CMD [\"sh\", \"/home/security_apps/test_memory.sh\"]\n    ```", "```\n    docker build -t security-app . ; docker run --rm security-app whoami\n    ```", "```\n    20002\n    ```", "```\n    docker run --rm -it security-app sh -c 'nmap -sS -p 443 localhost'\n    ```", "```\n    You requested a scan type which requires root privileges.\n    QUITTING!\n    ```", "```\n    docker run -v /tmp/secret.txt:/tmp/secret.txt security-app sh -c 'cat /tmp/secret.txt'\n    ```", "```\n    cat: can't open '/tmp/secret.txt': Permission denied\n    ```", "```\ndocker run \u2013-cap-add|--cap-drop <capability_name> <image_name>\n```", "```\ndocker trust key generate <name>\n```", "```\ndocker trust key load <pem_key_file> \u2013name <name>\n```", "```\ndocker trust sign <registry>/<repo>:<tag>\n```", "```\ndocker trust inspect \u2013pretty <registry>/<repo>:<tag>\n```", "```\n    export DOCKER_CONTENT_TRUST=1\n    ```", "```\n    docker pull vincesestodocker/security-app\n    ```", "```\n    Using default tag: latest\n    Error: remote trust data does not exist for docker.io/vincesestodocker/security-app: notary.docker.io does \n    not have trust data for docker.io/vincesestodocker/security-app\n    ```", "```\n    docker push vincesestodocker/security-app\n    ```", "```\n    The push refers to repository \n    [docker.io/vincesestodocker/security-app]\n    No tag specified, skipping trust metadata push\n    ```", "```\n    docker tag security-app:latest vincesestodocker/security-app:trust1\n    ```", "```\n    docker push vincesestodocker/security-app:trust1\n    ```", "```\n    The push refers to repository \n    [docker.io/vincesestodocker/security-app]\n    eff6491f0d45: Layer already exists \n    307b7a157b2e: Layer already exists \n    03901b4a2ea8: Layer already exists \n    ver2: digest: sha256:7fab55c47c91d7e56f093314ff463b7f97968e\n    e0f80f5ee927430fc39f525f66 size: 949\n    Signing and pushing trust metadata\n    You are about to create a new root signing key passphrase. \n    This passphrase will be used to protect the most sensitive key \n    in your signing system. Please choose a long, complex passphrase \n    and be careful to keep the password and the key file itself \n    secure and backed up. It is highly recommended that you use a \n    password manager to generate the passphrase and keep it safe. \n    There will be no way to recover this key. You can find the key \n    in your config directory.\n    Enter passphrase for new root key with ID 66347fd: \n    Repeat passphrase for new root key with ID 66347fd: \n    Enter passphrase for new repository key with ID cf2042d: \n    Repeat passphrase for new repository key with ID cf2042d: \n    Finished initializing \"docker.io/vincesestodocker/security-app\"\n    Successfully signed docker.io/vincesestodocker/security-app:\n    trust1\n    ```", "```\n    docker run -it vincesestodocker/security-app sh\n    ```", "```\n    docker: No valid trust data for latest.\n    See 'docker run --help'.\n    ```", "```\n    docker tag vincesestodocker/security-app:trust1 vincesestodocker/security-app:trust2\n    ```", "```\n    docker trust sign vincesestodocker/security-app:trust2\n    ```", "```\n    Signing and pushing trust data for local image \n    vincesestodocker/security-app:trust2, may overwrite remote \n    trust data\n    The push refers to repository \n    [docker.io/vincesestodocker/security-app]\n    015825f3a965: Layer already exists \n    2c32d3f8446b: Layer already exists \n    1bbb374ec935: Layer already exists \n    bcc0069f86e9: Layer already exists \n    e239574b2855: Layer already exists \n    f5e66f43d583: Layer already exists \n    77cae8ab23bf: Layer already exists \n    trust2: digest: sha256:a61f528324d8b63643f94465511132a38ff945083c\n    3a2302fa5a9774ea366c49 size: 1779\n    Signing and pushing trust metadataEnter passphrase for \n    vincesestodocker key with ID f4b834e: \n    Successfully signed docker.io/vincesestodocker/security-app:\n    trust2\n    ```", "```\n    docker trust inspect --pretty vincesestodocker/security-app:trust2\n    ```", "```\n    Signatures for vincesestodocker/security-app:trust2\n    SIGNED TAG      DIGEST                     SIGNERS\n    trust2          d848a63170f405ad3\u2026         vincesestodocker\n    List of signers and their keys for vincesestodocker/security-app:\n    trust2\n    SIGNER              KEYS\n    vincesestodocker    f4b834e54c71\n    Administrative keys for vincesestodocker/security-app:trust2\n    \u00a0\u00a0Repository Key:\n    \u00a0\u00a0\u00a0\u00a026866c7eba348164f7c9c4f4e53f04d7072fefa9b52d254c573e8b082\n    \u00a0\u00a0\u00a0\u00a0f77c966\n    \u00a0\u00a0Root Key:\n    \u00a0\u00a0\u00a0\u00a069bef52a24226ad6f5505fd3159f778d6761ac9ad37483f6bc88b1cb4\n    \u00a0\u00a0\u00a0\u00a07dda334\n    ```", "```\n    docker trust revoke vincesestodocker/security-app:trust2\n    Enter passphrase for vincesestodocker key with ID f4b834e: \n    Successfully deleted signature for vincesestodocker/security-app:\n    trust2\n    ```", "```\nanchore-cli system status\n```", "```\nanchore-cli system feeds list\n```", "```\nanchore-cli registry add <registry> <user> <password>\n```", "```\nanchore-cli image add <repository_name>/<image_name>\n```", "```\nanchore-cli image vuln <repository_name>/<image_name> all\n```", "```\nanchore-cli evaluate check <repository_name>/<image_name>\n```", "```\n    docker tag security-app:latest vincesestodocker/security-app:scan1 ;\n    ```", "```\n    docker push vincesestodocker/security-app:scan1\n    ```", "```\n    mkdir aevolume; cd aevolume\n    ```", "```\n    curl -O https://docs.anchore.com/current/docs/engine/quickstart/docker-compose.yaml\n    ```", "```\n    docker-compose pull\n    ```", "```\n    Pulling anchore-db           ... done\n    Pulling engine-catalog       ... done\n    Pulling engine-analyzer      ... done\n    Pulling engine-policy-engine ... done\n    Pulling engine-simpleq       ... done\n    Pulling engine-api           ... done\n    ```", "```\n    docker-compose up -d\n    ```", "```\n    Creating network \"aevolume_default\" with the default driver\n    Creating volume \"aevolume_anchore-db-volume\" with default driver\n    Creating volume \"aevolume_anchore-scratch\" with default driver\n    Creating aevolume_anchore-db_1 ... done\n    Creating aevolume_engine-catalog_1 ... done\n    Creating aevolume_engine-analyzer_1      ... done\n    Creating aevolume_engine-simpleq_1       ... done\n    Creating aevolume_engine-api_1           ... done\n    Creating aevolume_engine-policy-engine_1 ... done\n    ```", "```\n    docker-compose ps\n    ```", "```\n    CONTAINER ID       STATUS         PORTS\n    \u00a0\u00a0\u00a0\u00a0NAMES\n    d48658f6aa77       (healthy)      8228/tcp\n    \u00a0\u00a0\u00a0\u00a0aevolume_engine-analyzer_1\n    e4aec4e0b463   (healthy)          8228/tcp\n    \u00a0\u00a0\u00a0\u00a0aevolume_engine-policy-engine_1\n    afb59721d890   (healthy)          8228->8228/tcp\n    \u00a0\u00a0\u00a0\u00a0aevolume_engine-api_1\n    d61ff12e2376   (healthy)          8228/tcp\n    \u00a0\u00a0\u00a0\u00a0aevolume_engine-simpleq_1\n    f5c29716aa40   (healthy)          8228/tcp\n    \u00a0\u00a0\u00a0\u00a0aevolume_engine-catalog_1\n    398fef820252   (healthy)          5432/tcp\n    \u00a0\u00a0\u00a0\u00a0aevolume_anchore-db_1\n    ```", "```\n    pip3 install anchorecli; anchore-cli --version\n    ```", "```\n    anchore-cli, version 0.5.0\n    ```", "```\n    export ANCHORE_CLI_URL=http://localhost:8228/v1\n    export ANCHORE_CLI_USER=admin\n    export ANCHORE_CLI_PASS=foobar\n    ```", "```\n    anchore-cli system status\n    ```", "```\n    Service analyzer (anchore-quickstart, http://engine-analyzer:\n    8228): up\n    Service simplequeue (anchore-quickstart, http://engine-simpleq:\n    8228): up\n    Service policy_engine (anchore-quickstart, http://engine-policy-engine:8228): up\n    Service catalog (anchore-quickstart, http://engine-catalog:\n    8228): up\n    Service apiext (anchore-quickstart, http://engine-api:8228): \n    up\n    Engine DB Version: 0.0.11\n    Engine Code Version: 0.5.1\n    ```", "```\n    anchore-cli system feeds list\n    ```", "```\n    Feed                Group          LastSync\n    \u00a0\u00a0\u00a0\u00a0RecordCount\n    nvdv2               nvdv2:cves     None\n    \u00a0\u00a0\u00a0\u00a00\n    vulnerabilities     alpine:3\\.      2019-10-24T03:47:28.504381\n    \u00a0\u00a0\u00a0\u00a01485\n    vulnerabilities     alpine:3.3     2019-10-24T03:47:36.658242\n    \u00a0\u00a0\u00a0\u00a0457\n    vulnerabilities     alpine:3.4     2019-10-24T03:47:51.594635\n    \u00a0\u00a0\u00a0\u00a0681\n    vulnerabilities     alpine:3.5     2019-10-24T03:48:03.442695\n    \u00a0\u00a0\u00a0\u00a0875\n    vulnerabilities     alpine:3.6     2019-10-24T03:48:19.384824\n    \u00a0\u00a0\u00a0\u00a01051\n    vulnerabilities     alpine:3.7     2019-10-24T03:48:36.626534\n    \u00a0\u00a0\u00a0\u00a01253\n    vulnerabilities     alpine:3.8     None\n    \u00a0\u00a0\u00a0\u00a00\n    vulnerabilities     alpine:3.9     None\n    \u00a0\u00a0\u00a0\u00a00\n    vulnerabilities     amzn:2         None\n    \u00a0\u00a0\u00a0\u00a00\n    ```", "```\n    anchore-cli image add vincesestodocker/security-app:scan1\n    ```", "```\n    Image Digest: sha256:7fab55c47c91d7e56f093314ff463b7f97968ee0\n    f80f5ee927430\n    fc39f525f66\n    Parent Digest: sha256:7fab55c47c91d7e56f093314ff463b7f97968ee\n    0f80f5ee927430fc39f525f66\n    Analysis Status: not_analyzed\n    Image Type: docker\n    Analyzed At: None\n    Image ID: 8718859775e5d5057dd7a15d8236a1e983a9748b16443c99f8a\n    40a39a1e7e7e5\n    Dockerfile Mode: None\n    Distro: None\n    Distro Version: None\n    Size: None\n    Architecture: None\n    Layer Count: None\n    Full Tag: docker.io/vincesestodocker/security-app:scan1\n    Tag Detected At: 2019-10-24T03:51:18Z \n    ```", "```\n    anchore-cli image list\n    ```", "```\n    Full Tag               Image Digest            Analysis Status\n    security-app:scan1     sha256:a1bd1f6fec31\u2026    analyzed\n    ```", "```\n    anchore-cli image content vincesestodocker/security-app:scan1 os\n    ```", "```\n    Package                   Version        License\n    alpine-baselayout         3.1.2          GPL-2.0-only\n    alpine-keys               2.1            MIT\n    apk-tools                 2.10.4         GPL2 \n    busybox                   1.30.1         GPL-2.0\n    ca-certificates           20190108       MPL-2.0 GPL-2.0-or-later\n    ca-certificates-cacert    20190108       MPL-2.0 GPL-2.0-or-later\n    curl                      7.66.0         MIT\n    libc-utils                0.7.1          BSD\n    libcrypto1.1              1.1.1c         OpenSSL\n    libcurl                   7.66.0         MIT\n    libssl1.1                 1.1.1c         OpenSSL\n    libtls-standalone         2.9.1          ISC\n    musl                      1.1.22         MIT\n    musl-utils                1.1.22         MIT BSD GPL2+\n    nghttp2-libs              1.39.2         MIT\n    scanelf                   1.2.3          GPL-2.0\n    ssl_client                1.30.1         GPL-2.0\n    wget                      1.20.3         GPL-3.0-or-later\n    zlib                      1.2.11         zlib\n    ```", "```\n    anchore-cli image vuln vincesestodocker/security-app:scan1 all\n    ```", "```\n    anchore-cli evaluate check vincesestodocker/security-app:scan1\n    From the output of the above command, it looks like our image \n    is safe with a pass result.Image Digest: sha256:7fab55c47c91d7e56f093314ff463b7f97968ee0f80f5ee927430fc\n    39f525f66\n    Full Tag: docker.io/vincesestodocker/security-app:scan1\n    Status: pass\n    Last Eval: 2019-10-24T03:54:40Z\n    Policy ID: 2c53a13c-1765-11e8-82ef-23527761d060\n    ```", "```\ndocker info\nSecurity Options:\n\u00a0\u00a0apparmor\n\u00a0\u00a0seccomp\n\u00a0\u00a0\u00a0Profile: default\n```", "```\naa-status\n```", "```\ndocker run --security-opt apparmor=<profile> <image_name>\n```", "```\naa-genprof <application>\n```", "```\napparmor_parser -r -W <path_to_profile>\n```", "```\napparmor_parser -R <path_to_profile>\n```", "```\n    docker info\n    \u2026\n    Security Options:\n    \u00a0\u00a0apparmor\n    \u2026\n    ```", "```\n      8 \n      9 #USER 20002\n    ```", "```\n    docker build -t security-app . ; docker run --rm security-app whoami\n    ```", "```\n    root\n    ```", "```\n    aa-status\n    ```", "```\n    apparmor module is loaded.\n    15 profiles are loaded.\n    15 profiles are in enforce mode.\n    \u00a0\u00a0\u00a0\u00a0/home/vinces/DockerWork/example.sh\n    \u00a0\u00a0\u00a0\u00a0/sbin/dhclient\n    \u00a0\u00a0\u00a0\u00a0/usr/bin/lxc-start\n    \u00a0\u00a0\u00a0\u00a0/usr/lib/NetworkManager/nm-dhcp-client.action\n    \u00a0\u00a0\u00a0\u00a0/usr/lib/NetworkManager/nm-dhcp-helper\n    \u00a0\u00a0\u00a0\u00a0/usr/lib/connman/scripts/dhclient-script\n    \u00a0\u00a0\u00a0\u00a0/usr/lib/lxd/lxd-bridge-proxy\n    \u00a0\u00a0\u00a0\u00a0/usr/lib/snapd/snap-confine\n    \u00a0\u00a0\u00a0\u00a0/usr/lib/snapd/snap-confine//mount-namespace-capture-helper\n    \u00a0\u00a0\u00a0\u00a0/usr/sbin/tcpdump\n    \u00a0\u00a0\u00a0\u00a0docker-default\n    \u00a0\u00a0\u00a0\u00a0lxc-container-default\n    \u00a0\u00a0\u00a0\u00a0lxc-container-default-cgns\n    \u00a0\u00a0\u00a0\u00a0lxc-container-default-with-mounting\n    \u00a0\u00a0\u00a0\u00a0lxc-container-default-with-nesting\n    0 profiles are in complain mode.\n    1 processes have profiles defined.\n    1 processes are in enforce mode.\n    \u00a0\u00a0\u00a0\u00a0/sbin/dhclient (920) \n    0 processes are in complain mode.\n    0 processes are unconfined but have a profile defined.\n    ```", "```\n    docker run -dit security-app sh\n    ```", "```\n    aa-status\n    ```", "```\n    apparmor module is loaded.\n    \u2026\n    2 processes are in enforce mode.\n    \u00a0\u00a0\u00a0\u00a0/sbin/dhclient (920) \n    \u00a0\u00a0\u00a0\u00a0docker-default (9768)\n    0 processes are in complain mode.\n    0 processes are unconfined but have a profile defined.\n    ```", "```\n    docker kill $(docker ps -a -q)\n    ```", "```\n    docker run -dit --security-opt apparmor=unconfined --cap-add SYS_ADMIN security-app sh\n    ```", "```\n    docker exec -it db04693ddf1f sh\n    ```", "```\n    mkdir 1; mkdir 2; mount --bind 1 2\n    ls -l\n    ```", "```\n    total 8\n    drwxr-xr-x    2 root     root          4096 Nov  4 04:08 1\n    drwxr-xr-x    2 root     root          4096 Nov  4 04:08 2\n    ```", "```\n    docker kill $(docker ps -a -q)\n    ```", "```\n    docker run -dit --cap-add SYS_ADMIN security-app sh\n    ```", "```\n    docker exec -it <new_container_ID> sh \n    mkdir 1; mkdir 2; mount --bind 1 2\n    ```", "```\n    mount: mounting 1 on 2 failed: Permission denied\n    ```", "```\n    docker kill $(docker ps -a -q)\n    ```", "```\n    aa-genprof nmap\n    ```", "```\n    \u2026\n    Profiling: /usr/bin/nmap\n    [(S)can system log for AppArmor events] / (F)inish\n    ```", "```\n    docker run -it -u root security-app sh -c 'nmap -sS -p 443 localhost'\n    ```", "```\n    Reading log entries from /var/log/syslog.\n    Updating AppArmor profiles in /etc/apparmor.d.\n    ```", "```\n    1\u00a0# Last Modified: Mon Nov 18 01:03:31 2019\n    2\u00a0#include <tunables/global>\n    3\u00a0\n    4\u00a0/usr/bin/nmap {\n    5\u00a0\u00a0\u00a0#include <abstractions/base>\n    6\u00a0\n    7\u00a0\u00a0\u00a0/usr/bin/nmap mr,\n    8\u00a0\n    9\u00a0}\n    ```", "```\n    apparmor_parser -r -W /etc/apparmor.d/usr.bin.nmap\n    ```", "```\n    aa-status | grep nmap\n    ```", "```\n    /usr/bin/nmap\n    ```", "```\n    docker run -it -u root --security-opt apparmor=/usr/bin/nmap security-app sh -c 'nmap -sS -p 443 localhost'\n    ```", "```\n    sh: nmap: Permission denied\n    ```", "```\ncat /boot/config-'uname -r' | grep CONFIG_SECCOMP=\n```", "```\ndocker run --security-opt seccomp=unconfined <image_name>\n```", "```\ndocker run --security-opt seccomp=new_default.json <image_name>\n```", "```\n    cat /boot/config-'uname -r' | grep CONFIG_SECCOMP=\n    ```", "```\n    CONFIG_SECCOMP=y\n    ```", "```\n    docker info\n    ```", "```\n    \u2026\n    Security Options:\n    \u00a0\u00a0seccomp\n    \u00a0\u00a0\u00a0Profile: default\n    \u2026\n    ```", "```\n    docker run -it security-app grep Seccomp /proc/1/status\n    ```", "```\n    Seccomp:    2\n    ```", "```\n    docker run -it --security-opt seccomp=unconfined security-app grep Seccomp /proc/1/status\n    ```", "```\n    Seccomp:    0\n    ```", "```\n    docker run -it security-app sh\n    ```", "```\n    /# touch test.txt\n    /# chown 1001 test.txt\n    /# ls -l test.txt\n    ```", "```\n    -rw-r--r--    1 1001      users        0 Oct 22 02:44 test.txt\n    ```", "```\n    wget https://raw.githubusercontent.com/docker/docker/v1.12.3/profiles/seccomp/default.json -O new_default.json\n    ```", "```\n    59\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{  \n    60\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": \"chown\",\n    61\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"action\": \"SCMP_ACT_ALLOW\",\n    62\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"args\": []\n    63\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n    ```", "```\n    docker run -it --security-opt seccomp=new_default.json security-app sh\n    ```", "```\n    /# touch test.txt\n    /# chown 1001 test.txt\n    chown: test.txt: Operation not permitted\n    ```", "```\n    $ mkdir test\n    mkdir: can't create directory 'test': Operation not permitted\n    ```", "```\n    Image Digest: sha256:57d8817bac132c2fded9127673dd5bc7c3a976546\n    36ce35d8f7a05cad37d37b7\n    Full Tag: docker.io/dockerrepo/postgres-app:sample_tag\n    Status: pass\n    Last Eval: 2019-11-23T06:15:32Z\n    Policy ID: 2c53a13c-1765-11e8-82ef-23527761d060\n    ```"]