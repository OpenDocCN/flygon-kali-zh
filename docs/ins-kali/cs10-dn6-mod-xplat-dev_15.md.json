["```cs\n    dotnet new mvc --help \n\n    ```", "```cs\n    ASP.NET Core Web App (Model-View-Controller) (C#)\n    Author: Microsoft\n    Description: A project template for creating an ASP.NET Core application with example ASP.NET Core MVC Views and Controllers. This template can also be used for RESTful HTTP services.\n    This template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore/6.0-third-party-notices for details. \n\n    ```", "```cs\ndotnet ef database update \n\n```", "```cs\n{\n  \"ConnectionStrings\"\n\n: {\n    \"DefaultConnection\"\n\n: \"Server=(localdb)\\\\mssqllocaldb;Database=aspnet-Northwind.Mvc-...;Trusted_Connection=True;MultipleActiveResultSets=true\"\n\n  }, \n\n```", "```cs\n{\n  \"ConnectionStrings\"\n\n: {\n    \"DefaultConnection\"\n\n: \"DataSource=app.db;Cache=Shared\"\n\n  }, \n\n```", "```cs\n     \"profiles\"\n\n    : {\n      \"Northwind.Mvc\"\n\n    : {\n        \"commandName\"\n\n    : \"Project\"\n\n    ,\n        \"dotnetRunMessages\"\n\n    : true\n\n    ,\n        \"launchBrowser\"\n\n    : true\n\n    ,\n        \"applicationUrl\"\n\n    : \"https://localhost:7274;http://localhost:5274\"\n\n    ,\n        \"environmentVariables\"\n\n    : {\n          \"ASPNETCORE_ENVIRONMENT\"\n\n    : \"Development\"\n\n        }\n      }, \n\n    ```", "```cs\n     \"applicationUrl\"\n\n    : \"https://localhost:5001;http://localhost:5000\"\n\n    , \n\n    ```", "```cs\n{\n  \"ConnectionStrings\"\n\n: {\n    \"DefaultConnection\"\n\n: \"\n\n**Server=(localdb)\\\\mssqllocaldb;Database=aspnet-Northwind.Mvc-2F6A1E12-F9CF-480C-987D-FEFB4827DE22;Trusted_Connection=True;MultipleActiveResultSets=true**\n\n\"\n\n  },\n  \"Logging\"\n\n: {\n    \"LogLevel\"\n\n: {\n      \"Default\"\n\n: \"Information\"\n\n,\n      \"Microsoft\"\n\n: \"Warning\"\n\n,\n      \"Microsoft.Hosting.Lifetime\"\n\n: \"Information\"\n\n    }\n  },\n  \"AllowedHosts\"\n\n: \"*\"\n\n} \n\n```", "```cs\n     using\n\n     Microsoft.AspNetCore.Identity; // IdentityUser\n\n    using\n\n     Microsoft.EntityFrameworkCore; // UseSqlServer, UseSqlite\n\n    using\n\n     Northwind.Mvc.Data; // ApplicationDbContext \n\n    ```", "```cs\n     var\n\n     builder = WebApplication.CreateBuilder(args);\n    // Add services to the container.\n\n    var\n\n     connectionString = builder.Configuration\n      .GetConnectionString(\"DefaultConnection\"\n\n    );\n    builder.Services.AddDbContext<ApplicationDbContext>(options =>\n      options.UseSqlServer(connectionString)); // or UseSqlite\n\n    builder.Services.AddDatabaseDeveloperPageExceptionFilter();\n    builder.Services.AddDefaultIdentity<IdentityUser>(options => \n      options.SignIn.RequireConfirmedAccount = true\n\n    )\n      .AddEntityFrameworkStores<ApplicationDbContext>();\n    builder.Services.AddControllersWithViews(); \n\n    ```", "```cs\n     // Configure the HTTP request pipeline.\n\n    if\n\n     (app.Environment.IsDevelopment())\n    {\n      app.UseMigrationsEndPoint();\n    }\n    else\n\n    {\n      app.UseExceptionHandler(\"/Home/Error\"\n\n    );\n      // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\n\n      app.UseHsts();\n    }\n    app.UseHttpsRedirection();\n    app.UseStaticFiles();\n    app.UseRouting();\n    app.UseAuthentication();\n    app.UseAuthorization();\n    app.MapControllerRoute(\n      name: \"default\"\n\n    ,\n      pattern: \"{controller=Home}/{action=Index}/{id?}\"\n\n    );\n    app.MapRazorPages(); \n\n    ```", "```cs\n    app.Run(); // blocking call \n\n    ```", "```cs\nendpoints.MapControllerRoute(\n  name: \"default\"\n\n,\n  pattern: \"{controller=Home}/{action=Index}/{id?}\"\n\n); \n\n```", "```cs\n namespace\n\n Microsoft.AspNetCore.Mvc\n\n{\n  //\n\n  // Summary:\n\n  // A base class for an MVC controller without view support.\n\n  [Controller\n\n]\n  public\n\n abstract\n\n class\n\n ControllerBase\n\n  {\n... \n\n```", "```cs\n namespace\n\n Microsoft.AspNetCore.Mvc\n\n{\n  //\n\n  // Summary:\n\n  // A base class for an MVC controller with view support.\n\n  public\n\n abstract\n\n class\n\n Controller\n\n : ControllerBase\n\n,\n    IActionFilter\n\n, IFilterMetadata\n\n, IAsyncActionFilter\n\n, IDisposable\n\n  {\n... \n\n```", "```cs\n     using\n\n     Microsoft.AspNetCore.Mvc; // Controller, IActionResult\n\n    using\n\n     Northwind.Mvc.Models; // ErrorViewModel\n\n    using\n\n     System.Diagnostics; // Activity\n\n    namespace\n\n     Northwind.Mvc.Controllers\n\n    ;\n    public\n\n     class\n\n     HomeController\n\n     : Controller\n\n    {\n      private\n\n     readonly\n\n     ILogger<HomeController> _logger;\n      public\n\n    HomeController\n\n    (\n\n    ILogger<HomeController> logger\n\n    )\n\n      {\n        _logger = logger;\n      }\n      public\n\n     IActionResult \n\n    Index\n\n    ()\n\n      {\n        return\n\n     View();\n      }\n      public\n\n     IActionResult \n\n    Privacy\n\n    ()\n\n      {\n        return\n\n     View();\n      }\n      [ResponseCache(Duration = 0,\n\n        Location = ResponseCacheLocation.None, NoStore = true)\n\n    ]\n      public\n\n     IActionResult \n\n    Error\n\n    ()\n\n      {\n        return\n\n     View(new\n\n     ErrorViewModel { RequestId = \n          Activity.Current?.Id ?? HttpContext.TraceIdentifier });\n      }\n    } \n\n    ```", "```cs\n    _logger.LogError(\"This is a serious error (not really!)\"\n\n    );\n    _logger.LogWarning(\"This is your first warning!\"\n\n    );\n    _logger.LogWarning(\"Second warning!\"\n\n    );\n    _logger.LogInformation(\"I am in the Index method of the HomeController.\"\n\n    ); \n\n    ```", "```cs\n    fail: Northwind.Mvc.Controllers.HomeController[0]\n          This is a serious error (not really!)\n    warn: Northwind.Mvc.Controllers.HomeController[0]\n          This is your first warning!\n    warn: Northwind.Mvc.Controllers.HomeController[0]\n          Second warning!\n    info: Northwind.Mvc.Controllers.HomeController[0]\n          I am in the Index method of the HomeController. \n\n    ```", "```cs\n    builder.Services.AddControllersWithViews(options =>\n      {\n        options.Filters.Add(typeof\n\n    (MyCustomFilter));\n      }); \n\n    ```", "```cs\n     **[**\n\n    **Authorize(Roles =** \n\n    **\"Administrators\"**\n\n    **)**\n\n    **]**\n\n    public\n\n     IActionResult \n\n    Privacy\n\n    () \n\n    ```", "```cs\n    services.AddDefaultIdentity<IdentityUser>(\n      options => options.SignIn.RequireConfirmedAccount = true\n\n    )\n\n     **.AddRoles<IdentityRole>()** \n\n    **// enable role management**\n\n      .AddEntityFrameworkStores<ApplicationDbContext>(); \n\n    ```", "```cs\n     using\n\n     Microsoft.AspNetCore.Identity; // RoleManager, UserManager\n\n    using\n\n     Microsoft.AspNetCore.Mvc; // Controller, IActionResult\n\n    using\n\n     static\n\n     System.Console;\n    namespace\n\n     Northwind.Mvc.Controllers\n\n    ;\n    public\n\n     class\n\n     RolesController\n\n     : Controller\n\n    {\n      private\n\n     string\n\n     AdminRole = \"Administrators\"\n\n    ;\n      private\n\n     string\n\n     UserEmail = \"test@example.com\"\n\n    ;\n      private\n\n     readonly\n\n     RoleManager<IdentityRole> roleManager;\n      private\n\n     readonly\n\n     UserManager<IdentityUser> userManager;\n      public\n\n    RolesController\n\n    (\n\n    RoleManager<IdentityRole> roleManager,\n\n        UserManager<IdentityUser> userManager\n\n    )\n\n      {\n        this\n\n    .roleManager = roleManager;\n        this\n\n    .userManager = userManager;\n      }\n      public\n\n    async\n\n     Task<IActionResult> \n\n    Index\n\n    ()\n\n      {\n        if\n\n     (!(await\n\n     roleManager.RoleExistsAsync(AdminRole)))\n        {\n          await\n\n     roleManager.CreateAsync(new\n\n     IdentityRole(AdminRole));\n        }\n        IdentityUser user = await\n\n     userManager.FindByEmailAsync(UserEmail);\n        if\n\n     (user == null\n\n    )\n        {\n          user = new\n\n    ();\n          user.UserName = UserEmail;\n          user.Email = UserEmail;\n          IdentityResult result = await\n\n     userManager.CreateAsync(\n            user, \"Pa$$w0rd\"\n\n    );\n          if\n\n     (result.Succeeded)\n          {\n            WriteLine($\"User \n\n    {user.UserName}\n\n     created successfully.\"\n\n    );\n          }\n          else\n\n          { \n            foreach\n\n     (IdentityError error in\n\n     result.Errors)\n            {\n              WriteLine(error.Description);\n            }\n          }\n        }\n        if\n\n     (!user.EmailConfirmed)\n        {\n          string\n\n     token = await\n\n     userManager\n            .GenerateEmailConfirmationTokenAsync(user);\n          IdentityResult result = await\n\n     userManager\n            .ConfirmEmailAsync(user, token);\n          if\n\n     (result.Succeeded)\n          {\n            WriteLine($\"User \n\n    {user.UserName}\n\n     email confirmed successfully.\"\n\n    );\n          }\n          else\n\n          {\n            foreach\n\n     (IdentityError error in\n\n     result.Errors)\n            {\n              WriteLine(error.Description);\n            }\n          }\n        }\n        if\n\n     (!(await\n\n     userManager.IsInRoleAsync(user, AdminRole)))\n        {\n          IdentityResult result = await\n\n     userManager\n            .AddToRoleAsync(user, AdminRole);\n          if\n\n     (result.Succeeded)\n          {\n            WriteLine($\"User \n\n    {user.UserName}\n\n     added to \n\n    {AdminRole}\n\n     successfully.\"\n\n    );\n          }\n          else\n\n          {\n            foreach\n\n     (IdentityError error in\n\n     result.Errors)\n            {\n              WriteLine(error.Description);\n            }\n          }\n        }\n        return\n\n     Redirect(\"/\"\n\n    );\n      }\n    } \n\n    ```", "```cs\n    User test@example.com created successfully.\n    User test@example.com email confirmed successfully.\n    User test@example.com added to Administrators successfully. \n\n    ```", "```cs\n     **[**\n\n    **ResponseCache(Duration = 10, Location = ResponseCacheLocation.Any)**\n\n    **]**\n\n    public\n\n     IActionResult \n\n    Index\n\n    () \n\n    ```", "```cs\n     <\n\n    p\n\n    class\n\n    =\n\n    \"alert alert-primary\"\n\n    >\n\n    @DateTime.Now.ToLongTimeString()</\n\n    p\n\n    > \n\n    ```", "```cs\n    warn: Microsoft.AspNetCore.Antiforgery.DefaultAntiforgery[8]\n          The 'Cache-Control' and 'Pragma' headers have been overridden and set to 'no-cache, no-store' and 'no-cache' respectively to prevent caching of this response. Any response that uses antiforgery should not be cached. \n\n    ```", "```cs\nhttps://localhost:5001/home/privacy \n\n```", "```cs\nhttps://localhost:5001/private \n\n```", "```cs\n     **[**\n\n    **Route(**\n\n    **\"private\"**\n\n    **)**\n\n    **]**\n\n    [Authorize(Roles = \n\n    \"Administrators\"\n\n    )\n\n    ]\n    public\n\n     IActionResult \n\n    Privacy\n\n    () \n\n    ```", "```cs\n    https://localhost:5001/private \n\n    ```", "```cs\n    <ItemGroup>\n      <!-- change Sqlite to SqlServer if\n\n     you prefer -->\n      <ProjectReference Include=\n    \"..\\Northwind.Common.DataContext.Sqlite\\Northwind.Common.DataContext.Sqlite.csproj\"\n\n     />\n    </ItemGroup> \n\n    ```", "```cs\n    {\n      \"ConnectionStrings\"\n\n    : {\n        \"DefaultConnection\"\n\n    : \"Server=(localdb)\\\\mssqllocaldb;Database=aspnet-Northwind.Mvc-DC9C4FAF-DD84-4FC9-B925-69A61240EDA7;Trusted_Connection=True;MultipleActiveResultSets=true\"\n\n    ,\n\n    **\"NorthwindConnection\"**\n\n    **:** \n\n    **\"Server=.;Database=Northwind;Trusted_Connection=True;MultipleActiveResultSets=true\"**\n\n      }, \n\n    ```", "```cs\n     using\n\n     Packt.Shared; // AddNorthwindContext extension method \n\n    ```", "```cs\n     // if you are using SQL Server\n\n    string\n\n     sqlServerConnection = builder.Configuration\n      .GetConnectionString(\"NorthwindConnection\"\n\n    );\n    builder.Services.AddNorthwindContext(sqlServerConnection);\n    // if you are using SQLite default is ..\\Northwind.db\n\n    builder.Services.AddNorthwindContext(); \n\n    ```", "```cs\n     using\n\n     Packt.Shared; // Category, Product\n\n    namespace\n\n     Northwind.Mvc.Models\n\n    ;\n    public\n\n    record\n\n    HomeIndexViewModel\n\n    (\n\n    int\n\n     VisitorCount,\n\n      IList<Category> Categories,\n\n      IList<Product> Products\n\n    )\n\n    ; \n\n    ```", "```cs\n     using\n\n     Packt.Shared; // NorthwindContext \n\n    ```", "```cs\n     public\n\n     class\n\n     HomeController\n\n     : Controller\n\n    {\n      private\n\n     readonly\n\n     ILogger<HomeController> _logger;\n\n    **private**\n\n    **readonly**\n\n     **NorthwindContext db;**\n\n      public\n\n    HomeController\n\n    (\n\n    ILogger<HomeController> logger,\n\n     **NorthwindContext injectedContext**\n\n    **)**\n\n      {\n        _logger = logger;\n\n     **db = injectedContext;**\n\n      }\n    ... \n\n    ```", "```cs\n    [ResponseCache(Duration = 10, Location = ResponseCacheLocation.Any)\n\n    ]\n    public\n\n     IActionResult \n\n    Index\n\n    ()\n\n    {\n      _logger.LogError(\"This is a serious error (not really!)\"\n\n    );\n      _logger.LogWarning(\"This is your first warning!\"\n\n    );\n      _logger.LogWarning(\"Second warning!\"\n\n    );\n      _logger.LogInformation(\"I am in the Index method of the HomeController.\"\n\n    );\n\n     **HomeIndexViewModel model =** \n\n    **new**\n\n     **(**\n\n     **VisitorCount: (**\n\n    **new**\n\n     **Random()).Next(**\n\n    **1**\n\n    **,** \n\n    **1001**\n\n    **),**\n\n     **Categories: db.Categories.ToList(),**\n\n     **Products: db.Products.ToList()**\n\n     **);**\n\n    **return**\n\n     **View(model);** \n\n    **// pass model to view**\n\n    } \n\n    ```", "```cs\n    @{\n      ViewData[\"Title\"\n\n    ] = \"Home Page\"\n\n    ;\n    } \n\n    ```", "```cs\n    @{\n      Layout = \"_Layout\"\n\n    ;\n    } \n\n    ```", "```cs\n    @using Northwind.Mvc \n    @using Northwind.Mvc.Models\n    @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers \n\n    ```", "```cs\n     <\n\n    title\n\n    >\n\n    @ViewData[\"Title\"] \u2013 Northwind.Mvc</\n\n    title\n\n    > \n\n    ```", "```cs\n     <\n\n    link\n\n    rel\n\n    =\n\n    \"stylesheet\"\n\n    href\n\n    =\n\n    \"~/lib/bootstrap/dist/css/bootstrap.css\"\n\n     />\n\n    <\n\n    link\n\n    rel\n\n    =\n\n    \"stylesheet\"\n\n    href\n\n    =\n\n    \"~/css/site.css\"\n\n     /> \n\n    ```", "```cs\n     <\n\n    body\n\n    >\n\n      <\n\n    header\n\n    >\n\n        <\n\n    nav\n\n    class\n\n    =\n\n    \"navbar ...\"\n\n    > \n\n    ```", "```cs\n     <\n\n    div\n\n    class\n\n    =\n\n    \"navbar-collapse collapse d-sm-inline-flex justify-content-between\"\n\n    >\n\n      <\n\n    ul\n\n    class\n\n    =\n\n    \"navbar-nav flex-grow-1\"\n\n    >\n\n        <\n\n    li\n\n    class\n\n    =\n\n    \"nav-item\"\n\n    >\n\n          <\n\n    a\n\n    class\n\n    =\n\n    \"nav-link text-dark\"\n\n    asp-area\n\n    =\n\n    \"\"\n\n    asp-controller\n\n    =\n\n    \"Home\"\n\n    asp-action\n\n    =\n\n    \"Index\"\n\n    >\n\n    Home</\n\n    a\n\n    >\n\n        </\n\n    li\n\n    >\n\n        <\n\n    li\n\n    class\n\n    =\n\n    \"nav-item\"\n\n    >\n\n          <\n\n    a\n\n    class\n\n    =\n\n    \"nav-link text-dark\"\n\n    asp-area\n\n    =\n\n    \"\"\n\n    asp-controller\n\n    =\n\n    \"Home\"\n\n    asp-action\n\n    =\n\n    \"Privacy\"\n\n    >\n\n    Privacy</\n\n    a\n\n    >\n\n        </\n\n    li\n\n    >\n\n      </\n\n    ul\n\n    >\n\n      <\n\n    partial\n\n    name\n\n    =\n\n    \"_LoginPartial\"\n\n     />\n\n    </\n\n    div\n\n    > \n\n    ```", "```cs\n     <\n\n    div\n\n    class\n\n    =\n\n    \"container\"\n\n    >\n\n      <\n\n    main\n\n    role\n\n    =\n\n    \"main\"\n\n    class\n\n    =\n\n    \"pb-3\"\n\n    >\n\n        @RenderBody()\n      </\n\n    main\n\n    >\n\n    </\n\n    div\n\n    > \n\n    ```", "```cs\n     <\n\n    script\n\n    src\n\n    =\n\n    \"~/lib/jquery/dist/jquery.min.js\"\n\n    ></\n\n    script\n\n    >\n\n    <\n\n    script\n\n    src\n\n    =\n\n    \"~/lib/bootstrap/dist/js/bootstrap.bundle.min.js\"\n\n    >\n\n    </\n\n    script\n\n    >\n\n    <\n\n    script\n\n    src\n\n    =\n\n    \"~/js/site.js\"\n\n    asp-append-version\n\n    =\n\n    \"true\"\n\n    ></\n\n    script\n\n    >\n\n    @await RenderSectionAsync(\"scripts\", required: false) \n\n    ```", "```cs\n<script src=\"img/site.js? v=Kl_dqr9NVtnMdsM2MUg4qthUnWZm5T1fCEimBPWDNgM\"></script> \n\n```", "```cs\n     #product-columns\n\n    {\n      column-count\n\n    : 3\n\n    ;\n    } \n\n    ```", "```cs\n@{\n  Order order = new\n\n()\n  {\n    OrderId = 123\n\n,\n    Product = \"Sushi\"\n\n,\n    Price = 8.49\n\nM,\n    Quantity = 3\n\n  };\n}\n<div\n\n>Your order for @order.Quantity of @order.Product has a total cost of $@ order.Price * @order.Quantity</div\n\n> \n\n```", "```cs\nYour order for 3 of Sushi has a total cost of $8.49 * 3 \n\n```", "```cs\n <\n\ndiv\n\n>\n\nYour order for @order.Quantity of @order.Product has a total cost of $@ (order.Price * order.Quantity)</\n\ndiv\n\n> \n\n```", "```cs\nYour order for 3 of Sushi has a total cost of $25.47 \n\n```", "```cs\n    @model HomeIndexViewModel \n\n    ```", "```cs\n    @using Packt.Shared\n    @model HomeIndexViewModel \n    @{\n      ViewData[\"Title\"\n\n    ] = \"Home Page\"\n\n    ;\n      string\n\n     currentItem = \"\"\n\n    ;\n    }\n    <\n\n    div\n\n    class\n\n    =\n\n    \"text-center\"\n\n    >\n\n      <\n\n    h1\n\n    class\n\n    =\n\n    \"display-4\"\n\n    >\n\n    Welcome</\n\n    h1\n\n    >\n\n      <\n\n    p\n\n    >\n\n    Learn about <\n\n    a\n\n    href\n\n    =\n\n    \"https://docs.microsoft.com/aspnet/core\"\n\n    >\n\n    building Web apps with ASP.NET Core</\n\n    a\n\n    >\n\n    .</\n\n    p\n\n    >\n\n      <\n\n    p\n\n    class\n\n    =\n\n    \"alert alert-primary\"\n\n    >\n\n    @DateTime.Now.ToLongTimeString()</\n\n    p\n\n    >\n\n    </\n\n    div\n\n    >\n\n    @if (Model is not null)\n    {\n    <\n\n    div\n\n    id\n\n    =\n\n    \"categories\"\n\n    class\n\n    =\n\n    \"carousel slide\"\n\n    data-ride\n\n    =\n\n    \"carousel\"\n\n    data-interval\n\n    =\n\n    \"3000\"\n\n    data-keyboard\n\n    =\n\n    \"true\"\n\n    >\n\n      <\n\n    ol\n\n    class\n\n    =\n\n    \"carousel-indicators\"\n\n    >\n\n      @for (int\n\n     c = 0\n\n    ; c < Model.Categories.Count; c++)\n      {\n        if\n\n     (c == 0\n\n    )\n        {\n          currentItem = \"active\";\n        }\n        else\n\n        {\n          currentItem = \"\";\n        }\n        <\n\n    li\n\n    data-target\n\n    =\n\n    \"#categories\"\n\n    data-slide-to\n\n    =\n\n    \"@c\"\n\n    class\n\n    =\n\n    \"@currentItem\"\n\n    ></\n\n    li\n\n    >\n\n      }\n      </\n\n    ol\n\n    >\n\n      <\n\n    div\n\n    class\n\n    =\n\n    \"carousel-inner\"\n\n    >\n\n      @for (int c = 0\n\n    ; c < Model.Categories.Count; c++)\n      {\n        if\n\n     (c == 0\n\n    )\n        {\n          currentItem = \"active\";\n        }\n        else\n\n        {\n          currentItem = \"\";\n        }\n        <\n\n    div\n\n    class\n\n    =\n\n    \"carousel-item @currentItem\"\n\n    >\n\n          <\n\n    img\n\n    class\n\n    =\n\n    \"d-block w-100\"\n\n    src\n\n    =   \n\n    \"~/images/category@(Model.Categories[c].CategoryId).jpeg\"\n\n    alt\n\n    =\n\n    \"@Model.Categories[c].CategoryName\"\n\n     />\n\n          <\n\n    div\n\n    class\n\n    =\n\n    \"carousel-caption d-none d-md-block\"\n\n    >\n\n            <\n\n    h2\n\n    >\n\n    @Model.Categories[c].CategoryName</\n\n    h2\n\n    >\n\n            <\n\n    h3\n\n    >\n\n    @Model.Categories[c].Description</\n\n    h3\n\n    >\n\n            <\n\n    p\n\n    >\n\n              <\n\n    a\n\n    class\n\n    =\n\n    \"btn btn-primary\"\n\n    href\n\n    =\n\n    \"/category/@Model.Categories[c].CategoryId\"\n\n    >\n\n    View</\n\n    a\n\n    >\n\n            </\n\n    p\n\n    >\n\n          </\n\n    div\n\n    >\n\n        </\n\n    div\n\n    >\n\n      }\n      </\n\n    div\n\n    >\n\n      <\n\n    a\n\n    class\n\n    =\n\n    \"carousel-control-prev\"\n\n    href\n\n    =\n\n    \"#categories\"\n\n    role\n\n    =\n\n    \"button\"\n\n    data-slide\n\n    =\n\n    \"prev\"\n\n    >\n\n        <\n\n    span\n\n    class\n\n    =\n\n    \"carousel-control-prev-icon\"\n\n    aria-hidden\n\n    =\n\n    \"true\"\n\n    ></\n\n    span\n\n    >\n\n        <\n\n    span\n\n    class\n\n    =\n\n    \"sr-only\"\n\n    >\n\n    Previous</\n\n    span\n\n    >\n\n      </\n\n    a\n\n    >\n\n      <\n\n    a\n\n    class\n\n    =\n\n    \"carousel-control-next\"\n\n    href\n\n    =\n\n    \"#categories\"\n\n    role\n\n    =\n\n    \"button\"\n\n    data-slide\n\n    =\n\n    \"next\"\n\n    >\n\n        <\n\n    span\n\n    class\n\n    =\n\n    \"carousel-control-next-icon\"\n\n    aria-hidden\n\n    =\n\n    \"true\"\n\n    ></\n\n    span\n\n    >\n\n        <\n\n    span\n\n    class\n\n    =\n\n    \"sr-only\"\n\n    >\n\n    Next</\n\n    span\n\n    >\n\n      </\n\n    a\n\n    >\n\n    </\n\n    div\n\n    >\n\n    }\n    <\n\n    div\n\n    class\n\n    =\n\n    \"row\"\n\n    >\n\n      <\n\n    div\n\n    class\n\n    =\n\n    \"col-md-12\"\n\n    >\n\n        <\n\n    h1\n\n    >\n\n    Northwind</\n\n    h1\n\n    >\n\n        <\n\n    p\n\n    class\n\n    =\n\n    \"lead\"\n\n    >\n\n          We have had @Model?.VisitorCount visitors this month.\n        </\n\n    p\n\n    >\n\n        @if (Model is not null)\n        {\n        <\n\n    h2\n\n    >\n\n    Products</\n\n    h2\n\n    >\n\n        <\n\n    div\n\n    id\n\n    =\n\n    \"product-columns\"\n\n    >\n\n          <\n\n    ul\n\n    >\n\n          @foreach (Product p in @Model.Products)\n          {\n            <\n\n    li\n\n    >\n\n              <\n\n    a\n\n    asp-controller\n\n    =\n\n    \"Home\"\n\n    asp-action\n\n    =\n\n    \"ProductDetail\"\n\n    asp-route-id\n\n    =\n\n    \"@p.ProductId\"\n\n    >\n\n                @p.ProductName costs \n    @(p.UnitPrice is null ? \"zero\" : p.UnitPrice.Value.ToString(\"C\"))\n              </\n\n    a\n\n    >\n\n            </\n\n    li\n\n    >\n\n          }\n          </\n\n    ul\n\n    >\n\n        </\n\n    div\n\n    >\n\n        }\n      </\n\n    div\n\n    >\n\n    </\n\n    div\n\n    > \n\n    ```", "```cs\n     public\n\n     IActionResult \n\n    ProductDetail\n\n    (\n\n    int\n\n    ? id\n\n    )\n\n    {\n      if\n\n     (!id.HasValue)\n      {\n        return\n\n     BadRequest(\"You must pass a product ID in the route, for example, /Home/ProductDetail/21\"\n\n    );\n      }\n      Product? model = db.Products\n        .SingleOrDefault(p => p.ProductId == id);\n      if\n\n     (model == null\n\n    )\n      {\n        return\n\n     NotFound($\"ProductId \n\n    {id}\n\n     not found.\"\n\n    );\n      }\n      return\n\n     View(model); // pass model to view and then return result\n\n    } \n\n    ```", "```cs\n    @model Packt.Shared.Product \n    @{\n      ViewData[\"Title\"\n\n    ] = \"Product Detail - \"\n\n     + Model.ProductName;\n    }\n    <\n\n    h2\n\n    >\n\n    Product Detail</\n\n    h2\n\n    >\n\n    <\n\n    hr\n\n     />\n\n    <\n\n    div\n\n    >\n\n      <\n\n    dl\n\n    class\n\n    =\n\n    \"dl-horizontal\"\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Product Id</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.ProductId</\n\n    dd\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Product Name</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.ProductName</\n\n    dd\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Category Id</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.CategoryId</\n\n    dd\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Unit Price</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.UnitPrice.Value.ToString(\"C\")</\n\n    dd\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Units In Stock</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.UnitsInStock</\n\n    dd\n\n    >\n\n      </\n\n    dl\n\n    >\n\n    </\n\n    div\n\n    > \n\n    ```", "```cs\n     <\n\n    form\n\n    action\n\n    =\n\n    \"post\"\n\n    action\n\n    =\n\n    \"/Home/ProductDetail\"\n\n    >\n\n      <\n\n    input\n\n    type\n\n    =\n\n    \"text\"\n\n    name\n\n    =\n\n    \"id\"\n\n    value\n\n    =\n\n    \"2\"\n\n     />\n\n      <\n\n    input\n\n    type\n\n    =\n\n    \"submit\"\n\n     />\n\n    </\n\n    form\n\n    > \n\n    ```", "```cs\n     namespace\n\n     Northwind.Mvc.Models\n\n    ;\n    public\n\n     class\n\n     Thing\n\n    {\n      public\n\n     int\n\n    ? Id { get\n\n    ; set\n\n    ; }\n      public\n\n     string\n\n    ? Color { get\n\n    ; set\n\n    ; }\n    } \n\n    ```", "```cs\n     public\n\n     IActionResult \n\n    ModelBinding\n\n    ()\n\n    {\n      return\n\n     View(); // the page with a form to submit\n\n    }\n    public\n\n     IActionResult \n\n    ModelBinding\n\n    (\n\n    Thing thing\n\n    )\n\n    {\n      return\n\n     View(thing); // show the model bound thing\n\n    } \n\n    ```", "```cs\n    @model Thing \n    @{\n      ViewData[\"Title\"\n\n    ] = \"Model Binding Demo\"\n\n    ;\n    }\n    <\n\n    h1\n\n    >\n\n    @ViewData[\"Title\"\n\n    ]</\n\n    h1\n\n    >\n\n    <\n\n    div\n\n    >\n\n      Enter values for your thing in the following form:\n    </\n\n    div\n\n    >\n\n    <\n\n    form\n\n    method\n\n    =\n\n    \"POST\"\n\n    action\n\n    =\n\n    \"/home/modelbinding?id=3\"\n\n    >\n\n      <\n\n    input\n\n    name\n\n    =\n\n    \"color\"\n\n    value\n\n    =\n\n    \"Red\"\n\n     />\n\n      <\n\n    input\n\n    type\n\n    =\n\n    \"submit\"\n\n     />\n\n    </\n\n    form\n\n    >\n\n    @if (Model != null)\n    {\n    <\n\n    h2\n\n    >\n\n    Submitted Thing</\n\n    h2\n\n    >\n\n    <\n\n    hr\n\n     />\n\n    <\n\n    div\n\n    >\n\n      <\n\n    dl\n\n    class\n\n    =\n\n    \"dl-horizontal\"\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Model.Id</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.Id</\n\n    dd\n\n    >\n\n        <\n\n    dt\n\n    >\n\n    Model.Color</\n\n    dt\n\n    >\n\n        <\n\n    dd\n\n    >\n\n    @Model.Color</\n\n    dd\n\n    >\n\n      </\n\n    dl\n\n    >\n\n    </\n\n    div\n\n    >\n\n    } \n\n    ```", "```cs\n     <\n\n    p\n\n    ><\n\n    a\n\n    asp-action\n\n    =\n\n    \"ModelBinding\"\n\n    asp-controller\n\n    =\n\n    \"Home\"\n\n    >\n\n    Binding</\n\n    a\n\n    ></\n\n    p\n\n    > \n\n    ```", "```cs\n     **[**\n\n    **HttpPost**\n\n    **]**\n\n    public\n\n     IActionResult \n\n    ModelBinding\n\n    (\n\n    Thing thing\n\n    ) \n\n    ```", "```cs\n     <\n\n    form\n\n    method\n\n    =\n\n    \"POST\"\n\n    action\n\n    =\n\n    \"/home/modelbinding\n\n    **/2**\n\n    ?id=3\"\n\n    > \n\n    ```", "```cs\n    <form method=\"POST\"\n\n     action=\"/home/modelbinding/2?id=3\"\n\n    >\n\n     **<input name=**\n\n    **\"id\"**\n\n    **value**\n\n    **=**\n\n    **\"1\"**\n\n     **/>**\n\n      <input name=\"color\"\n\n     value\n\n    =\"Red\"\n\n     />\n      <input type=\"submit\"\n\n     />\n    </form> \n\n    ```", "```cs\n     public\n\n     class\n\n     Thing\n\n    {\n\n     **[**\n\n    **Range(1, 10)**\n\n    **]**\n\n      public\n\n     int\n\n    ? Id { get\n\n    ; set\n\n    ; }\n\n     **[**\n\n    **Required**\n\n    **]**\n\n      public\n\n     string\n\n    ? Color { get\n\n    ; set\n\n    ; }\n\n     **[**\n\n    **EmailAddress**\n\n    **]**\n\n    **public**\n\n    **string**\n\n    **? Email {** \n\n    **get**\n\n    **;** \n\n    **set**\n\n    **; }**\n\n    } \n\n    ```", "```cs\n     namespace\n\n     Northwind.Mvc.Models\n\n    ;\n    public\n\n    record\n\n    HomeModelBindingViewModel\n\n    (\n\n      Thing Thing,\n\n    bool\n\n     HasErrors, \n\n      IEnumerable<\n\n    string\n\n    > ValidationErrors\n\n    )\n\n    ; \n\n    ```", "```cs\n    [HttpPost\n\n    ]\n    public\n\n     IActionResult \n\n    ModelBinding\n\n    (\n\n    Thing thing\n\n    )\n\n    {\n\n     **HomeModelBindingViewModel model =** \n\n    **new**\n\n    **(**\n\n     **thing,**\n\n     **!ModelState.IsValid,** \n\n     **ModelState.Values**\n\n     **.SelectMany(state => state.Errors)**\n\n     **.Select(error => error.ErrorMessage)**\n\n     **);**\n\n    **return**\n\n     **View(model);**\n\n    } \n\n    ```", "```cs\n    @model Northwind.Mvc.Models.HomeModelBindingViewModel \n\n    ```", "```cs\n     <\n\n    form\n\n    method\n\n    =\n\n    \"POST\"\n\n    action\n\n    =\n\n    \"/home/modelbinding/2?id=3\"\n\n    >\n\n      <\n\n    input\n\n    name\n\n    =\n\n    \"id\"\n\n    value\n\n    =\n\n    \"1\"\n\n     />\n\n      <\n\n    input\n\n    name\n\n    =\n\n    \"color\"\n\n    value\n\n    =\n\n    \"Red\"\n\n     />\n\n      <\n\n    input\n\n    name\n\n    =\n\n    \"email\"\n\n    value\n\n    =\n\n    \"test@example.com\"\n\n     />\n\n      <\n\n    input\n\n    type\n\n    =\n\n    \"submit\"\n\n     />\n\n    </\n\n    form\n\n    >\n\n    @if (Model != null)\n    {\n      <\n\n    h2\n\n    >\n\n    Submitted Thing</\n\n    h2\n\n    >\n\n      <\n\n    hr\n\n     />\n\n      <\n\n    div\n\n    >\n\n        <\n\n    dl\n\n    class\n\n    =\n\n    \"dl-horizontal\"\n\n    >\n\n          <\n\n    dt\n\n    >\n\n    Model\n    **.Thing**\n\n    .Id</\n\n    dt\n\n    >\n\n          <\n\n    dd\n\n    >\n\n    @Model\n    **.Thing**\n\n    .Id</\n\n    dd\n\n    >\n\n          <\n\n    dt\n\n    >\n\n    Model\n    **.Thing**\n\n    .Color</\n\n    dt\n\n    >\n\n          <\n\n    dd\n\n    >\n\n    @Model\n    **.Thing**\n\n    .Color</\n\n    dd\n\n    >\n\n    **<**\n\n    **dt**\n\n    **>**\n\n    **Model.Thing.Email**\n\n    **</**\n\n    **dt**\n\n    **>**\n\n    **<**\n\n    **dd**\n\n    **>**\n\n    **@Model.Thing.Email**\n\n    **</**\n\n    **dd**\n\n    **>**\n\n        </\n\n    dl\n\n    >\n\n      </\n\n    div\n\n    >\n\n      @if (Model.HasErrors)\n      {\n        <\n\n    div\n\n    >\n\n          @foreach(string errorMessage in Model.ValidationErrors)\n          {\n            <\n\n    div\n\n    class\n\n    =\n\n    \"alert alert-danger\"\n\n    role\n\n    =\n\n    \"alert\"\n\n    >\n\n    @errorMessage</\n\n    div\n\n    >\n\n          }\n        </\n\n    div\n\n    >\n\n      }\n    } \n\n    ```", "```cs\n     <\n\n    dd\n\n    >\n\n    @Html.DisplayFor(model => model.Thing.Email)</\n\n    dd\n\n    > \n\n    ```", "```cs\n     public\n\n     IActionResult \n\n    ProductsThatCostMoreThan\n\n    (\n\n    decimal\n\n    ? price\n\n    )\n\n    {\n      if\n\n     (!price.HasValue)\n      {\n        return\n\n     BadRequest(\"You must pass a product price in the query string, for example, /Home/ProductsThatCostMoreThan?price=50\"\n\n    );\n      }\n      IEnumerable<Product> model = db.Products\n        .Include(p => p.Category)\n        .Include(p => p.Supplier)\n        .Where(p => p.UnitPrice > price);\n      if\n\n     (!model.Any())\n      {\n        return\n\n     NotFound(\n          $\"No products cost more than \n\n    {price:C}\n\n    .\"\n\n    );\n      }\n      ViewData[\"MaxPrice\"\n\n    ] = price.Value.ToString(\"C\"\n\n    );\n      return\n\n     View(model); // pass model to view\n\n    } \n\n    ```", "```cs\n    @using Packt.Shared\n    @model IEnumerable<\n\n    Product\n\n    >\n\n    @{\n      string\n\n     title =\n        \"Products That Cost More Than \"\n\n     + ViewData[\"MaxPrice\"\n\n    ]; \n      ViewData[\"Title\"\n\n    ] = title;\n    }\n    <\n\n    h2\n\n    >\n\n    @title</\n\n    h2\n\n    >\n\n    @if (Model is null)\n    {\n      <\n\n    div\n\n    >\n\n    No products found.</\n\n    div\n\n    >\n\n    }\n    else\n\n    {\n      <\n\n    table\n\n    class\n\n    =\n\n    \"table\"\n\n    >\n\n        <\n\n    thead\n\n    >\n\n          <\n\n    tr\n\n    >\n\n            <\n\n    th\n\n    >\n\n    Category Name</\n\n    th\n\n    >\n\n            <\n\n    th\n\n    >\n\n    Supplier's Company Name</\n\n    th\n\n    >\n\n            <\n\n    th\n\n    >\n\n    Product Name</\n\n    th\n\n    >\n\n            <\n\n    th\n\n    >\n\n    Unit Price</\n\n    th\n\n    >\n\n            <\n\n    th\n\n    >\n\n    Units In Stock</\n\n    th\n\n    >\n\n          </\n\n    tr\n\n    >\n\n        </\n\n    thead\n\n    >\n\n        <\n\n    tbody\n\n    >\n\n        @foreach (Product p in Model)\n        {\n          <\n\n    tr\n\n    >\n\n            <\n\n    td\n\n    >\n\n              @Html.DisplayFor(modelItem => p.Category.CategoryName)\n            </\n\n    td\n\n    >\n\n            <\n\n    td\n\n    >\n\n              @Html.DisplayFor(modelItem => p.Supplier.CompanyName)\n            </\n\n    td\n\n    >\n\n            <\n\n    td\n\n    >\n\n              @Html.DisplayFor(modelItem => p.ProductName)\n            </\n\n    td\n\n    >\n\n            <\n\n    td\n\n    >\n\n              @Html.DisplayFor(modelItem => p.UnitPrice)\n            </\n\n    td\n\n    >\n\n            <\n\n    td\n\n    >\n\n              @Html.DisplayFor(modelItem => p.UnitsInStock)\n            </\n\n    td\n\n    >\n\n          </\n\n    tr\n\n    >\n\n        }\n        <\n\n    tbody\n\n    >\n\n      </\n\n    table\n\n    >\n\n    } \n\n    ```", "```cs\n     <\n\n    h3\n\n    >\n\n    Query products by price</\n\n    h3\n\n    >\n\n    <\n\n    form\n\n    asp-action\n\n    =\n\n    \"ProductsThatCostMoreThan\"\n\n    method\n\n    =\n\n    \"GET\"\n\n    >\n\n      <\n\n    input\n\n    name\n\n    =\n\n    \"price\"\n\n    placeholder\n\n    =\n\n    \"Enter a product price\"\n\n     />\n\n      <\n\n    input\n\n    type\n\n    =\n\n    \"submit\"\n\n     />\n\n    </\n\n    form\n\n    > \n\n    ```", "```cs\n     public\n\n    **async**\n\n     **Task<IActionResult>**\n\n    Index\n\n    ()\n\n    {\n      HomeIndexViewModel model = new\n\n      (\n        VisitorCount = (new\n\n     Random()).Next(1\n\n    , 1001\n\n    ),\n        Categories = \n    **await**\n\n     db.Categories.ToList\n    **Async**\n\n    (),\n        Products = \n    **await**\n\n     db.Products.ToList\n    **Async**\n\n    ()\n      );\n      return\n\n     View(model); // pass model to view\n\n    } \n\n    ```", "```cs\n     public\n\n    **async**\n\n     **Task<IActionResult>**\n\n    ProductDetail\n\n    (\n\n    int\n\n    ? id\n\n    )\n\n    {\n      if\n\n     (!id.HasValue)\n      {\n        return\n\n     BadRequest(\"You must pass a product ID in the route, for example,\n\n    /Home/ProductDetail/21\"\n\n    );\n      }\n      Product? model = \n    **await**\n\n     db.Products\n        .SingleOrDefault\n    **Async**\n\n    (p => p.ProductId == id);\n      if\n\n     (model == null\n\n    )\n      {\n        return\n\n     NotFound($\"ProductId \n\n    {id}\n\n     not found.\"\n\n    );\n      }\n      return\n\n     View(model); // pass model to view and then return result\n\n    } \n\n    ```"]