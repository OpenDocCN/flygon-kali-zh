["```cs\nint dec = 32;\nint hex = 0x2A;\nint bin = 0b_0010_1010;\n```", "```cs\nvar a = 42.99;\nfloat b = 19.50f;\nSystem.Double c = -1.23;\n```", "```cs\ndecimal a = 42.99m;\nvar b = 12.45m;\nSystem.Decimal c = 100.75M;\n```", "```cs\nchar a = 'A';\nchar b = '\\x0065';\nchar c = '\\u15FE';\n```", "```cs\nstring s1;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// unitialized\nstring s2 = null;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// initialized with null\nstring s3 = String.Empty;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// empty string\nstring s4 = \"hello world\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// initialized with text\nvar s5 = \"hello world\";\nSystem.String s6 = \"hello world\";\nchar[] letters = { 'h', 'e', 'l', 'l', 'o'};\nstring s7 = new string(letters); // from an array of chars\n```", "```cs\nchar c = s4[0];\u00a0\u00a0// OK\ns4[0] = 'H';\u00a0\u00a0\u00a0\u00a0\u00a0// error\n```", "```cs\nvar s8 = s6.Remove(5);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// hello\nvar s9 = s6.ToUpper();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// HELLO WORLD\n```", "```cs\nint i = 42;\ndouble d = 19.99;\nvar s1 = i.ToString();\nvar s2 = d.ToString();\n```", "```cs\nint i = 42;\nstring s1 = \"This is item \" + i.ToString();\nstring s2 = string.Format(\"This is item {0}\", i);\nstring s3 = $\"This is item {i}\";\n```", "```cs\nvar s1 = \"c:\\\\Program Files (x86)\\\\Windows Kits\\\\\";\nvar s2 = \"That was called a \\\"demo\\\"\";\nvar s3 = \"This text\\nspawns multiple lines.\";\n```", "```cs\nvar s1 = @\"c:\\Program Files (x86)\\Windows Kits\\\";\nvar s2 = @\"That was called a \"\"demo\"\"\";\nvar s3 = @\"This text\nspawns multiple lines.\";\n```", "```cs\ndatatype variable_name;\n```", "```cs\nbool f;\nchar ch = 'x';\nint a, b = 20, c = 42;\na = -1;\nf = true;\n```", "```cs\nvar a = 10;\n```", "```cs\nclass Program\n{\n\u00a0\u00a0\u00a0\u00a0static void Main(string[] args)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int i = 1; i < 10; i++)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(i);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i = 20; // i is out of scope\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nclass Program\n{\n\u00a0\u00a0\u00a0\u00a0static void Main(string[] args)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int a = 5;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int i = 1; i < 10; i++)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char a = 'w';\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// compiler error\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (i % 2 == 0)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(i + a); // a is within the \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// scope of Main\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i = 20;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// i is out of scope\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nconst int a = 42;\n```", "```cs\nint a = 20;\nDateTime dt = new DateTime(2019, 12, 25);\n```", "```cs\nint a = 20;\nint b = a;\u00a0\u00a0// b is 20\na = 42;\u00a0\u00a0\u00a0\u00a0\u00a0// a is 42, b is 20\n```", "```cs\nint[]\u00a0\u00a0a = new int[10];\nstring s = \"sample\";\nobject o = new List<int>();\n```", "```cs\nint[] a1 = new int[] { 42, 43 };\nint[] a2 = a1;\u00a0\u00a0\u00a0// a2 is { 42, 43 }\na1[0] = 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// a1 is { 0, 43 }, a2 is { 0, 43 }\n```", "```cs\nstring s1 = \"help\";\nstring s2 = s1;\u00a0\u00a0\u00a0\u00a0\u00a0// s2 is \"help\"\ns1 = \"demo\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// s1 is \"demo\", s2 is \"help\"\n```", "```cs\nint a = 42;\nobject o = a;\u00a0\u00a0\u00a0// boxing\no = 43;\nint b = (int)o; // unboxing\nConsole.WriteLine(x);\u00a0\u00a0// 42\nConsole.WriteLine(y);\u00a0\u00a0// 43\n```", "```cs\nNullable<int> a;\nNullable<int> b = null;\nNullable<int> c = 42;\n```", "```cs\nint? a;\nint? b = null;\nint? c = 42;\n```", "```cs\nif (c.HasValue)\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(c.Value);\n```", "```cs\nstring? s1 = null; // OK, nullable type\nstring s2 = null;\u00a0\u00a0// error, non-nullable type\n```", "```cs\nint[] arr1;\nint[] arr2 = null;\nint[] arr3 = new int[6];\nint[] arr4 = new int[] { 1, 1, 2, 3, 5, 8 };\nint[] arr5 = new int[6] { 1, 1, 2, 3, 5, 8 };\nint[] arr6 = { 1, 1, 2, 3, 5, 8 };\n```", "```cs\nfor(int i = 0; i < arr6.Length; ++i)\n Console.WriteLine(arr6[i]);\nforeach(int element in arr6)\n Console.WriteLine(element);\n```", "```cs\nfor (int i = 0; i < arr6.Length; ++i)\n\u00a0\u00a0\u00a0arr6[i] *= 2;\u00a0\u00a0// OK\nforeach (int element in arr6)\n\u00a0\u00a0\u00a0element *= 2;\u00a0\u00a0// error\n```", "```cs\nint[,] arr1;\narr1 = new int[2, 3] { { 1, 2, 3 }, { 4, 5, 6 } };\nint[,] arr2 = null;\nint[,] arr3 = new int[2,3];\nint[,] arr4 = new int[,] { { 1, 2, 3 }, { 4, 5, 6 } };\nint[,] arr5 = new int[2,3] { { 1, 2, 3 }, { 4, 5, 6 } };\nint[,] arr6 = { { 1, 2, 3 }, { 4, 5, 6 } };\n```", "```cs\n1 2 3\n4 5 6\n```", "```cs\nfor (int i = 0; i < arr6.GetLength(0); ++i)\n{\n\u00a0\u00a0\u00a0for (int j = 0; j < arr6.GetLength(1); ++j)\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write($\"{arr6[i, j]} \");\n\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0Console.WriteLine();\n}\n```", "```cs\nint[,,] arr7 = new int[4, 3, 2]\n{\n\u00a0\u00a0\u00a0\u00a0{ { 11, 12}, { 13, 14}, {15, 16 } },\n\u00a0\u00a0\u00a0\u00a0{ { 21, 22}, { 23, 24}, {25, 26 } },\n\u00a0\u00a0\u00a0\u00a0{ { 31, 32}, { 33, 34}, {35, 36 } },\n\u00a0\u00a0\u00a0\u00a0{ { 41, 42}, { 43, 44}, {45, 46 } }\n};\n```", "```cs\nint[][] arr1;\nint[][] arr2 = null;\nint[][] arr3 = new int[2][];\narr3[0] = new int[3];\narr3[1] = new int[] { 1, 1, 2, 3, 5, 8 };\nint[][] arr4 = new int[][]\n{\n\u00a0\u00a0\u00a0new int[] { 1, 2, 3 },\n\u00a0\u00a0\u00a0new int[] { 1, 1, 2, 3, 5, 8 }\n};\nint[][] arr5 =\n{\n\u00a0\u00a0\u00a0new int[] { 1, 2, 3 },\n\u00a0\u00a0\u00a0new int[] { 1, 1, 2, 3, 5, 8 }\n};\nint[][,] arr6 = new int[][,]\n{\n\u00a0\u00a0\u00a0\u00a0new int[,] { { 1, 2}, { 3, 4 } },\n\u00a0\u00a0\u00a0\u00a0new int[,] { {11, 12, 13}, { 14, 15, 16} }\n};\n```", "```cs\nfor(int i = 0; i < arr5.Length; ++i)\n{\n\u00a0\u00a0\u00a0for(int j = 0; j < arr5[i].Length; ++j)\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write($\"{arr5[i][j]} \");\n\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0Console.WriteLine();\n}\n```", "```cs\nint i = 10;\nfloat f = i;\nlong l = 7195467872;\ndouble d = l;\n```", "```cs\nstring s = \"example\";\nobject o = s;\n```", "```cs\ndouble d = 12.34;\nint i = (int)d;\n```", "```cs\nstring s = \"example\";\nobject o = s;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// implicit conversion\nstring r = (string)o;\u00a0\u00a0// explicit conversion\n```", "```cs\npublic readonly struct fancyint\n{\n\u00a0\u00a0\u00a0\u00a0private readonly int value;\n\u00a0\u00a0\u00a0\u00a0public fancyint(int value)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.value = value;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public static implicit operator int(fancyint v) => v.value;\n\u00a0\u00a0\u00a0\u00a0public static explicit operator fancyint(int v) => new fancyint(v);\n\u00a0\u00a0\u00a0\u00a0public override string ToString() => $\"{value}\";\n}\n```", "```cs\nfancyint a = new fancyint(42);\nint i = a;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// implicit conversion\nfancyint b = (fancyint)i;\u00a0\u00a0// explicit conversion\n```", "```cs\nDateTime dt1 = DateTime.Parse(\"2019.08.31\");\nDateTime.TryParse(\"2019.08.31\", out DateTime dt2);\nint i1 = int.Parse(\"42\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// successful, i1 = 42\nint i2 = int.Parse(\"42.15\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// error, throws exception\nint.TryParse(\"42.15\", out int i3); // error, returns false, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// i3 = 0\n```", "```cs\nint a = 10;\na++;\n```", "```cs\nint a = 10;\nint b = a++;\n```", "```cs\nint a = 10;\nint b = ++a;\n```", "```cs\nint a = 42;\nint b = 10;\nbool v1 = a != b;\nbool v2 = 0 <= a && a <= 100;\nif(a == 42) { /* ... */ }\n```", "```cs\nbool a = true, b = false;\nbool c = a && b;\nbool d = a || !b;\n```", "```cs\nint a = 10;\u00a0\u00a0\u00a0\u00a0// 1010\nint b = 5;\u00a0\u00a0\u00a0\u00a0\u00a0// 0101\nint c = a & b; // 0000\nint d = a | b; // 1111\n```", "```cs\n// left-shifting\nint x = 0b_0000_0110;\nx = x << 4;\u00a0\u00a0// 0b_0110_0000\nuint y = 0b_1111_0000_0000_0000_1111_1110_1100_1000;\ny = y << 2;\u00a0\u00a0// 0b_1100_0000_0000_0011_1111_1011_0010_0000;\n// right-shifting\nint x = 0b_0000_0000;\nx = x >> 4;\u00a0\u00a0// 0b_0110_0000\nuint y = 0b_1111_0000_0000_0000_1111_1110_1100_1000;\ny = y >> 2;\u00a0\u00a0// 0b_0011_1100_0000_0000_0011_1111_1011_0010;\n```", "```cs\ncondition ? consequent : alternative;\n```", "```cs\nstatic int max(int a, int b)\n{\n\u00a0\u00a0\u00a0return a >= b ? a : b;\n}\n```", "```cs\ncondition ? ref consequent : ref alternative;\n```", "```cs\nint a = 42;\nint b = 21;\nint.TryParse(Console.ReadLine(), out int alt);\nref int v = ref (alt % 2 == 0 ? ref a : ref b);\nv++;\nConsole.WriteLine($\"a={a}, b={b}\");\n```", "```cs\nclass foo\n{\n\u00a0\u00a0\u00a0\u00a0public int run() { return 42; }\n}\nfoo f = null;\nint? i = f?.run()\n```", "```cs\nclass bar\n{\n\u00a0\u00a0\u00a0\u00a0public foo f { get; set; }\n}\nbar[] bars = new bar[] { null };\nint? i = bars[0]?.f?.run();\n```", "```cs\nint i = bars[0]?.f?.run() ?? -1;\n```", "```cs\nint? n1 = null;\nint n2 = n1 ?? 2;\u00a0\u00a0// n2 is set to 2\nn1 = 5;\nint n3 = n1 ?? 2;\u00a0\u00a0// n3 is set to 5\n```", "```cs\nstring GetDisplayName(string name, string email)\n{\n\u00a0\u00a0\u00a0\u00a0return name ?? email ?? \"unknown\";\n}\n```", "```cs\nclass foo\n{\n\u00a0\u00a0\u00a0readonly string text;\n\u00a0\u00a0\u00a0public foo(string value)\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text = value ?? throw new\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ArgumentNullException(nameof(value));\n\u00a0\u00a0\u00a0}\n}\n```", "```cs\nif(a is null)\n\u00a0\u00a0\u00a0a = b;\n```"]