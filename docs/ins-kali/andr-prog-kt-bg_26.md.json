["```kt\n<group android:checkableBehavior=\"single\">\n   <item\n         android:id=\"@+id/nav_camera\"\n         android:icon=\"@drawable/ic_menu_camera\"\n         android:title=\"Import\" />\n   <item\n         android:id=\"@+id/nav_gallery\"\n         android:icon=\"@drawable/ic_menu_gallery\"\n         android:title=\"Gallery\" />\n   <item\n         android:id=\"@+id/nav_slideshow\"\n         android:icon=\"@drawable/ic_menu_slideshow\"\n         android:title=\"Slideshow\" />\n   <item\n         android:id=\"@+id/nav_manage\"\n         android:icon=\"@drawable/ic_menu_manage\"\n         android:title=\"Tools\" />\n</group>\n```", "```kt\nval toggle = ActionBarDrawerToggle(\n         this, drawer_layout, \n         toolbar, \n         R.string.navigation_drawer_open, \n         R.string.navigation_drawer_close)\n\ndrawer_layout.addDrawerListener(toggle)\n\ntoggle.syncState()\n\nnav_view.setNavigationItemSelectedListener(this)\n```", "```kt\noverride fun onBackPressed() {\n   if (drawer_layout.isDrawerOpen(GravityCompat.START)) {\n         drawer_layout.closeDrawer(GravityCompat.START)\n   } else {\n         super.onBackPressed()\n  }\n}\n```", "```kt\noverride fun onNavigationItemSelected(\n   item: MenuItem)\n   : Boolean {\n\n   // Handle navigation view item clicks here.\n   when (item.itemId) {\n         R.id.nav_camera -> {\n               // Handle the camera action\n         }\n         R.id.nav_gallery -> {\n\n         }\n         R.id.nav_slideshow -> {\n\n         }\n         R.id.nav_manage -> {\n\n         }\n         R.id.nav_share -> {\n\n         }\n         R.id.nav_send -> {\n\n         }\n   }\n\n   drawer_layout.closeDrawer(GravityCompat.START)\n   return true\n}\n```", "```kt\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\n\nimport androidx.fragment.app.Fragment\n\nclass InsertFragment : Fragment() {\n    override fun onCreateView(\n         inflater: LayoutInflater,\n         container: ViewGroup?,\n         savedInstanceState: Bundle?)\n         : View? {\n\n         val view = inflater.inflate(\n                R.layout.content_insert,\n                container,\n                false)\n\n        // Database and UI code goes here in next chapter\n\n        return view\n    }\n}\n```", "```kt\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\n\nimport androidx.fragment.app.Fragment\n\nclass DeleteFragment : Fragment() {\n    override fun onCreateView(\n         inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState:\n        Bundle?)\n        : View? {\n\n        val view = inflater.inflate(\n               R.layout.content_delete,\n               container,\n               false)\n\n        // Database and UI code goes here in next chapter\n\n        return view\n    }\n}\n```", "```kt\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\n\nimport androidx.fragment.app.Fragment\n\nclass SearchFragment : Fragment() {\n    override fun onCreateView(\n         inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?)\n        : View? {\n\n         val view = inflater.inflate(\n               R.layout.content_search,\n               container,\n               false)\n\n        // Database and UI code goes here in next chapter\n\n        return view\n    }\n}\n```", "```kt\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\n\nimport androidx.fragment.app.Fragment\n\nclass ResultsFragment : Fragment() {\n\n    override fun onCreateView(\n         inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?)\n         : View? {\n\n        val view = inflater.inflate(\n               R.layout.content_results,\n               container,\n               false)\n\n        // Database and UI code goes here in next chapter\n\n        return inflater.inflate(R.layout.content_results,\n                container,\n                false)\n    }\n}\n```", "```kt\n<group android:checkableBehavior=\"single\">\n   <item\n         android:id=\"@+id/nav_insert\"\n         android:icon=\"@drawable/ic_menu_camera\"\n         android:title=\"Insert\" />\n   <item\n         android:id=\"@+id/nav_delete\"\n         android:icon=\"@drawable/ic_menu_gallery\"\n         android:title=\"Delete\" />\n   <item\n         android:id=\"@+id/nav_search\"\n         android:icon=\"@drawable/ic_menu_slideshow\"\n         android:title=\"Search\" />\n   <item\n         android:id=\"@+id/nav_results\"\n         android:icon=\"@drawable/ic_menu_manage\"\n         android:title=\"Results\" />\n</group>\n```", "```kt\n<FrameLayout\n android:id=\"@+id/fragmentHolder\"\n android:layout_width=\"0dp\"\n android:layout_height=\"0dp\"\n app:layout_constraintBottom_toBottomOf=\"parent\"\n app:layout_constraintEnd_toEndOf=\"parent\"\n app:layout_constraintStart_toStartOf=\"parent\"\n app:layout_constraintTop_toTopOf=\"parent\"> \n</FrameLayout>\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n```", "```kt\noverride fun onNavigationItemSelected(\n  item: MenuItem): \n  Boolean {\n\n  // Create a transaction\n  val transaction = \n        supportFragmentManager.beginTransaction()\n\n  // Handle navigation view item clicks here.\n  when (item.itemId) {\n        R.id.nav_insert -> {\n              // Create a new fragment of the appropriate type\n              val fragment = InsertFragment()\n              // What to do and where to do it\n              transaction.replace(R.id.fragmentHolder, fragment)\n    }\n    R.id.nav_search -> {\n              val fragment = SearchFragment()\n              transaction.replace(R.id.fragmentHolder, fragment)\n    }\n    R.id.nav_delete -> {\n              val fragment = DeleteFragment()\n              transaction.replace(R.id.fragmentHolder, fragment)\n    }\n    R.id.nav_results -> {\n      val fragment = ResultsFragment()\n      transaction.replace(R.id.fragmentHolder, fragment)\n    }\n\n  }\n\n   // Ask Android to remember which\n   // menu options the user has chosen\n   transaction.addToBackStack(null);\n\n  // Implement the change\n  transaction.commit();\n\n   drawer_layout.closeDrawer(GravityCompat.START)\n   return true\n}\n```"]