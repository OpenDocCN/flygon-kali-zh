["```\nFROM microsoft/aspnet:4.7.2-windowsservercore-1803\nARG source\nWORKDIR /inetpub/wwwroot\nCOPY ${source:-obj/Docker/publish} .\n```", "```\nversion: '3.4'\n\nservices:\n  webapi.netfx:\n    image: ${DOCKER_REGISTRY-}webapinetfx\n    build:\n      context: .\\WebApi.NetFx\n      dockerfile: Dockerfile\n```", "```\nversion: '3.4'\n\nservices:\n  webapi.netfx:\n    ports:\n      - \"80\"\nnetworks:\n  default:\n    external:\n      name: nat\n```", "```\n1>------ Build started: Project: WebApi.NetFx, Configuration: Debug Any CPU ------\n1>  WebApi.NetFx -> C:\\Users\\Administrator\\source\\repos\\WebApi.NetFx\\WebApi.NetFx\\bin\\WebApi.NetFx.dll\n2>------ Build started: Project: docker-compose, Configuration: Debug Any CPU ------\n2>docker-compose  -f \"C:\\Users\\Administrator\\source\\repos\\WebApi.NetFx\\docker-compose.yml\" -f \"C:\\Users\\Administrator\\source\\repos\\WebApi.NetFx\\docker-compose.override.yml\" -f \"C:\\Users\\Administrator\\source\\repos\\WebApi.NetFx\\obj\\Docker\\docker-compose.vs.debug.g.yml\" -p dockercompose1902887664513455984 --no-ansi up -d\n2>dockercompose1902887664513455984_webapi.netfx_1 is up-to-date\n========== Build: 2 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\n```", "```\nservices:\n  webapi.netfx:\n    image: webapinetfx:dev\n    build:\n      args:\n        source: obj/Docker/empty/\n    volumes:\n      - C:\\Users\\Administrator\\source\\repos\\WebApi.NetFx\\WebApi.NetFx:C:\\inetpub\\wwwroot\n      - C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\Common7\\IDE\\Remote Debugger:C:\\remote_debugger:ro\n    entrypoint: cmd /c \"start /B C:\\\\ServiceMonitor.exe w3svc & C:\\\\remote_debugger\\\\x64\\\\msvsmon.exe /noauth /anyuser /silent /nostatus /noclrwarn /nosecuritywarn /nofirewallwarn /nowowwarn /timeout:2147483646\"\n```", "```\n========== Debugging ==========\ndocker ps --filter \"status=running\" --filter \"name=dockercompose1902887664513455984_webapi.netfx_\" --format {{.ID}} -n 1\n3e2b6a7cb890\ndocker inspect --format=\"{{range .NetworkSettings.Networks}}{{.IPAddress}} {{end}}\" 3e2b6a7cb890\n172.27.58.105 \ndocker exec 3e2b6a7cb890 cmd /c \"C:\\Windows\\System32\\inetsrv\\appcmd.exe set config -section:system.applicationHost/applicationPools /[name='DefaultAppPool'].processModel.identityType:LocalSystem /commit:apphost & C:\\Windows\\System32\\inetsrv\\appcmd.exe set config -section:system.webServer/security/authentication/anonymousAuthentication /userName: /commit:apphost\"\nApplied configuration changes to section \"system.applicationHost/applicationPools\" for \"MACHINE/WEBROOT/APPHOST\" at configuration commit path \"MACHINE/WEBROOT/APPHOST\"\nApplied configuration changes to section \"system.webServer/security/authentication/anonymousAuthentication\" for \"MACHINE/WEBROOT/APPHOST\" at configuration commit path \"MACHINE/WEBROOT/APPHOST\"\nLaunching http://172.27.58.105/ ...\n```", "```\nservices:\n  webapi.netfx:\n    build:\n      args:\n        source: obj/Docker/publish/\n    volumes:\n      - C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\Common7\\IDE\\Remote Debugger:C:\\remote_debugger:ro\n    entrypoint: cmd /c \"start /B C:\\\\ServiceMonitor.exe w3svc & C:\\\\remote_debugger\\\\x64\\\\msvsmon.exe /noauth /anyuser /silent /nostatus /noclrwarn /nosecuritywarn /nofirewallwarn /nowowwarn /timeout:2147483646\"\n    labels:\n      com.microsoft.visualstudio.debuggee.program: \"C:\\\\app\\\\WebApi.NetFx.dll\"\n      com.microsoft.visualstudio.debuggee.workingdirectory: \"C:\\\\app\"\n```", "```\nARG configuration\n\n RUN if ($env:configuration -eq 'debug') `\n { Invoke-WebRequest -OutFile c:\\rtools_setup_x64.exe -UseBasicParsing -Uri http://download.microsoft.com/download/1/2/2/1225c23d-3599-48c9-a314-f7d631f43241/rtools_setup_x64.exe; `\n Start-Process c:\\rtools_setup_x64.exe -ArgumentList '/install', '/quiet' -NoNewWindow -Wait }\n```", "```\nARG source\nWORKDIR C:\\web-app\nRUN Remove-Website -Name 'Default Web Site';`\nNew-Website -Name 'web-app' -Port 80 -PhysicalPath 'C:\\web-app'\nCOPY ${source:-.\\Docker\\publish} .\n```", "```\nservices:\n  ch11-webapi-vs2015:\n    build:\n      context: ..\\\n      dockerfile: .\\Docker\\Dockerfile\n    args:\n      - source=.\\Docker\\empty\n      - configuration=debug\n  ports:\n    - \"3702/udp\"\n    - \"4020\"\n    - \"4021\"\n  environment:\n    - configuration=debug\n  labels:\n    - \"com.microsoft.visualstudio.targetoperatingsystem=windows\"\n  volumes:\n    - ..\\WebApi.NetFx:C:\\web-app\n```", "```\ndocker-compose -f docker-compose.yml -f docker-compose.debug.yml up -d\n```", "```\nFROM microsoft/dotnet:2.2-aspnetcore-runtime-nanoserver-1803 AS base WORKDIR /app EXPOSE 80 FROM microsoft/dotnet:2.2-sdk-nanoserver-1803 AS build WORKDIR /src COPY [\"WebApi.NetCore.csproj\", \"./\"] RUN dotnet restore \"./WebApi.NetCore.csproj\" COPY . . WORKDIR  \"/src/.\" RUN dotnet build \"WebApi.NetCore.csproj\" -c Release -o /app FROM build AS publish RUN dotnet publish \"WebApi.NetCore.csproj\" -c Release -o /app  FROM base AS final WORKDIR /app COPY --from=publish /app .\nENTRYPOINT [\"dotnet\", \"WebApi.NetCore.dll\"]\n```", "```\nvolumes:\n - .\\bin\\Debug\\netcoreapp2.2:C:\\app\n - ~\\.vscode\\extensions\\ms-vscode.csharp-1.17.1\\.debugger:C:\\vsdbg:ro\n```", "```\n  \"name\": \"Debug Docker container\",\n  \"type\": \"coreclr\",\n  \"request\": \"attach\",\n  \"sourceFileMap\": {\n    \"C:\\\\app\": \"${workspaceRoot}\"\n }, \"processName\": \"dotnet\"\n```", "```\n\"pipeTransport\": {\n  \"pipeCwd\": \"${workspaceRoot}\",\n  \"pipeProgram\": \"docker\",\n  \"pipeArgs\": [\n   \"exec\", \"-i\", \"webapinetcore_webapi_1\"\n ],  \"debuggerPath\": \"C:\\\\vsdbg\\\\vsdbg.exe\",\n  \"quoteArgs\": false }\n```", "```\ndocker-compose -f .\\docker-compose.yml -f .\\docker-compose.debug.yml build docker-compose -f .\\docker-compose.yml -f .\\docker-compose.debug.yml up -d \n```", "```\npublic  static  void  Start() { _Server  =  new  MetricServer(50505);\n  _Server.Start(); }\n```", "```\nprivate  Counter  _requestCounter  =  Metrics.CreateCounter(\"ValuesController_Requests\", \"Request count\", \"method\", \"url\"); private  Counter  _responseCounter  =  Metrics.CreateCounter(\"ValuesController_Responses\", \"Response count\", \"code\", \"url\");\n```", "```\npublic IHttpActionResult Get()\n{\n  _requestCounter.Labels(\"GET\", \"/\").Inc();\n  _responseCounter.Labels(\"200\", \"/\").Inc();\n  return Ok(new string[] { \"value1\", \"value2\" });\n}\n```", "```\nEXPOSE 50505\nRUN netsh http add urlacl url=http://+:50505/metrics user=BUILTIN\\IIS_IUSRS; `\n    net localgroup 'Performance Monitor Users' 'IIS APPPOOL\\DefaultAppPool' /add\n```", "```\ndocker container run -d -P --name api dockeronwindows/ch11-api-with-metrics:2e\n```", "```\n$apiPort = $(docker container port api 80).Split(':')[1]\nfor ($i=0; $i -lt 10; $i++) {\n iwr -useb \"http://localhost:$apiPort/api/values\"\n}\n\n$metricsPort = $(docker container port api 50505).Split(':')[1]\n(iwr -useb \"http://localhost:$metricsPort/metrics\").Content\n```", "```\n# HELP process_num_threads Total number of threads\n# TYPE process_num_threads gauge\nprocess_num_threads 27\n# HELP dotnet_total_memory_bytes Total known allocated memory\n# TYPE dotnet_total_memory_bytes gauge\ndotnet_total_memory_bytes 8519592\n# HELP process_virtual_memory_bytes Virtual memory size in bytes.\n# TYPE process_virtual_memory_bytes gauge\nprocess_virtual_memory_bytes 2212962820096\n# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.\n# TYPE process_cpu_seconds_total counter\nprocess_cpu_seconds_total 1.734375\n...\n# HELP ValuesController_Requests Request count\n# TYPE ValuesController_Requests counter\nValuesController_Requests{method=\"GET\",url=\"/\"} 10\n# HELP ValuesController_Responses Response count\n# TYPE ValuesController_Responses counter\nValuesController_Responses{code=\"200\",url=\"/\"} 10\n```", "```\n#escape=` FROM dockeronwindows/ch10-nerd-dinner-web:2e EXPOSE 50505 ENV COLLECTOR_CONFIG_PATH=\"w3svc-collectors.json\"  WORKDIR C:\\aspnet-exporter COPY --from=dockersamples/aspnet-monitoring-exporter:4.7.2-windowsservercore-ltsc2019 C:\\aspnet-exporter . ENTRYPOINT [\"powershell\"] CMD Start-Service W3SVC; ` Invoke-WebRequest http://localhost -UseBasicParsing | Out-Null; `\n Start-Process -NoNewWindow C:\\aspnet-exporter\\aspnet-exporter.exe; ` netsh http flush logbuffer | Out-Null; `  Get-Content -path 'C:\\iislog\\W3SVC\\u_extend1.log' -Tail 1 -Wait \n```", "```\ndocker container run -d -P --name nerd-dinner dockeronwindows/ch11-nerd-dinner-web-with-metrics:2e\n```", "```\nFROM dockersamples/aspnet-monitoring-prometheus:2.3.1-windowsservercore-ltsc2019 COPY prometheus.yml /etc/prometheus/prometheus.yml\n```", "```\nglobal:\n  scrape_interval: 5s   scrape_configs:\n - job_name: 'Api'\n    static_configs:\n     - targets: ['api:50505']\n\n - job_name: 'NerdDinnerWeb'\n    static_configs:\n     - targets: ['nerd-dinner:50505']\n```", "```\ndocker container run -d -P --name prometheus dockeronwindows/ch11-prometheus:2e\n```", "```\n# escape=` FROM dockersamples/aspnet-monitoring-grafana:5.2.1-windowsservercore-ltsc2019 SHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop';\"] COPY datasource-prometheus.yaml \\grafana\\conf\\provisioning\\datasources\\ COPY dashboard-provider.yaml \\grafana\\conf\\provisioning\\dashboards\\ COPY dashboard.json \\var\\lib\\grafana\\dashboards\\\n\nCOPY init.ps1 . RUN .\\init.ps1 \n```"]