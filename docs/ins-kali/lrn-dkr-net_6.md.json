["```\ntype sandbox struct {\n  id            string\n  containerID   string\n  config        containerConfig\n  osSbox        osl.Sandbox\n  controller    *controller\n  refCnt        int\n  endpoints     epHeap\n  epPriority    map[string]int\n  joinLeaveDone chan struct{}\n  dbIndex       uint64\n  dbExists      bool\n  isStub        bool\n  inDelete      bool\n  sync.Mutex\n}\n```", "```\nfunc (c *controller) NewSandbox(containerID string, options ...SandboxOption) (Sandbox, error) {\n  \u2026..\n}\n```", "```\ntype endpoint struct {\n  name          string\n  id            string\n  network       *network\n  iface         *endpointInterface\n  joinInfo      *endpointJoinInfo\n  sandboxID     string\n  exposedPorts  []types.TransportPort\n  anonymous     bool\n  generic       map[string]interface{}\n  joinLeaveDone chan struct{}\n  prefAddress   net.IP\n  prefAddressV6 net.IP\n  ipamOptions   map[string]string\n  dbIndex       uint64\n  dbExists      bool\n  sync.Mutex\n}\n```", "```\ntype network struct {\n  ctrlr        *controller\n  name         string\n  networkType  string\n  id           string\n  ipamType     string\n  addrSpace    string\n  ipamV4Config []*IpamConf\n  ipamV6Config []*IpamConf\n  ipamV4Info   []*IpamInfo\n  ipamV6Info   []*IpamInfo\n  enableIPv6   bool\n  postIPv6     bool\n  epCnt        *endpointCnt\n  generic      options.Generic\n  dbIndex      uint64\n  svcRecords   svcMap\n  dbExists     bool\n  persist      bool\n  stopWatchCh  chan struct{}\n  drvOnce      *sync.Once\n  internal     bool\n  sync.Mutex\n}\n```", "```\ntype controller struct {\n  id             string\n  drivers        driverTable\n  ipamDrivers    ipamTable\n  sandboxes      sandboxTable\n  cfg            *config.Config\n  stores         []datastore.DataStore\n  discovery      hostdiscovery.HostDiscovery\n  extKeyListener net.Listener\n  watchCh        chan *endpoint\n  unWatchCh      chan *endpoint\n  svcDb          map[string]svcMap\n  nmap           map[string]*netWatch\n  defOsSbox      osl.Sandbox\n  sboxOnce       sync.Once\n  sync.Mutex\n}\n```", "```\ntype driver struct {\n  config      *configuration\n  etwork      *bridgeNetwork\n  natChain    *iptables.ChainInfo\n  filterChain *iptables.ChainInfo\n  networks    map[string]*bridgeNetwork\n  store       datastore.DataStore\n  sync.Mutex\n}\n```", "```\nconst (\n  networkType  = \"overlay\"\n  vethPrefix   = \"veth\"\n  vethLen      = 7\n  vxlanIDStart = 256\n  vxlanIDEnd   = 1000\n  vxlanPort    = 4789\n  vxlanVethMTU = 1450\n)\ntype driver struct {\n  eventCh      chan serf.Event\n  notifyCh     chan ovNotify\n  exitCh       chan chan struct{}\n  bindAddress  string\n  neighIP      string\n  config       map[string]interface{}\n  peerDb       peerNetworkMap\n  serfInstance *serf.Serf\n  networks     networkTable\n  store        datastore.DataStore\n  ipAllocator  *idm.Idm\n  vxlanIdm     *idm.Idm\n  once         sync.Once\n  joinOnce     sync.Once\n  sync.Mutex\n}\n```", "```\n    **$ git clone**\n    **$ cd**\n     **libnetwork/docs**\n\n    ```", "```\n    **$ vagrant up**\n    **Bringing machine 'consul-server' up with 'virtualbox' provider...**\n    **Bringing machine 'net-1' up with 'virtualbox' provider...**\n    **Bringing machine 'net-2' up with 'virtualbox' provider...**\n    **==> consul-server: Box 'ubuntu/trusty64' could not be found.**\n    **Attempting to find and install...**\n     **consul-server: Box Provider: virtualbox**\n     **consul-server: Box Version: >= 0**\n    **==> consul-server: Loading metadata for box 'ubuntu/trusty64'**\n     **consul-server: URL: https://atlas.hashicorp.com/ubuntu/trusty64**\n    **==> consul-server: Adding box 'ubuntu/trusty64' (v20151217.0.0) for**\n    **provider: virtualbox**\n     **consul-server: Downloading:**\n    **https://atlas.hashicorp.com/ubuntu/boxes/trusty64/versions/20151217.0.0/providers/virtualbox.box**\n    **==> consul-server: Successfully added box 'ubuntu/trusty64'**\n    **(v20151217.0.0) for 'virtualbox'!**\n    **==> consul-server: Importing base box 'ubuntu/trusty64'...**\n    **==> consul-server: Matching MAC address for NAT networking...**\n    **==> consul-server: Checking if box 'ubuntu/trusty64' is up to date...**\n    **==> consul-server: Setting the name of the VM:**\n    **libnetwork_consul-server_1451244524836_56275**\n    **==> consul-server: Clearing any previously set forwarded ports...**\n    **==> consul-server: Clearing any previously set network interfaces...**\n    **==> consul-server: Preparing network interfaces based on**\n    **configuration...**\n     **consul-server: Adapter 1: nat**\n     **consul-server: Adapter 2: hostonly**\n    **==> consul-server: Forwarding ports...**\n     **consul-server: 22 => 2222 (adapter 1)**\n    **==> consul-server: Running 'pre-boot' VM customizations...**\n    **==> consul-server: Booting VM...**\n    **==> consul-server: Waiting for machine to boot. This may take a few minutes...**\n    **consul-server:**\n    **101aac79c475b84f6aff48352ead467d6b2b63ba6b64cc1b93c630489f7e3f4c**\n    **==> net-1: Box 'ubuntu/vivid64' could not be found. Attempting to find and install...**\n     **net-1: Box Provider: virtualbox**\n     **net-1: Box Version: >= 0**\n    **==> net-1: Loading metadata for box 'ubuntu/vivid64'**\n     **net-1: URL: https://atlas.hashicorp.com/ubuntu/vivid64**\n    **\\==> net-1: Adding box 'ubuntu/vivid64' (v20151219.0.0) for provider: virtualbox**\n     **net-1: Downloading:**\n    **https://atlas.hashicorp.com/ubuntu/boxes/vivid64/versions/20151219.0.0/providers/virtualbox.box**\n    **contd...**\n\n    ```", "```\n    **$ vagrant status**\n    **Current machine states:**\n    **consul-server           running (virtualbox)**\n    **net-1                   running (virtualbox)**\n    **net-2                   running (virtualbox)**\n    **This environment represents multiple VMs. The VMs are all listed above with their current state. For more information about a specific VM, run `vagrant status NAME`.**\n\n    ```", "```\n    **$ vagrant ssh net-1**\n    **Welcome to Ubuntu 15.04 (GNU/Linux 3.19.0-42-generic x86_64)**\n    *** Documentation:https://help.ubuntu.com/**\n    **System information as of Sun Dec 27 20:04:06 UTC 2015**\n    **System load:  0.0               Users logged in:       0**\n    **Usage of /:   4.5% of 38.80GB   IP address for eth0:   10.0.2.15**\n    **Memory usage: 24%               IP address for eth1:    192.168.33.11**\n    **Swap usage:   0%                IP address for docker0: 172.17.0.1**\n    **Processes:    78**\n    **Graph this data and manage this system at:  https://landscape.canonical.com/**\n    **Get cloud support with Ubuntu Advantage Cloud Guest:  http://www.ubuntu.com/business/services/cloud**\n\n    ```", "```\n    **$ docker run -it --rm ubuntu:14.04 bash**\n    **Unable to find image 'ubuntu:14.04' locally**\n    **14.04: Pulling from library/ubuntu**\n    **6edcc89ed412: Pull complete**\n    **bdf37643ee24: Pull complete**\n    **ea0211d47051: Pull complete**\n    **a3ed95caeb02: Pull complete**\n    **Digest: sha256:d3b59c1d15c3cfb58d9f2eaab8a232f21fc670c67c11f582bc48fb32df17f3b3**\n    **Status: Downloaded newer image for ubuntu:14.04**\n\n    **root@65db9144c65b:/# cat /etc/hosts**\n    **172.21.0.4  2ac726b4ce60**\n    **127.0.0.1   localhost**\n    **::1 localhost ip6-localhost ip6-loopback**\n    **fe00::0 ip6-localnet**\n    **ff00::0 ip6-mcastprefix**\n    **ff02::1 ip6-allnodes**\n    **ff02::2 ip6-allrouters**\n    **172.21.0.3  distracted_bohr**\n    **172.21.0.3  distracted_bohr.multihost**\n    **172.21.0.4  modest_curie**\n    **172.21.0.4  modest_curie.multihost**\n\n    ```", "```\n**vagrant@net-1:~$ docker network create -d overlay tester**\n**447e75fd19b236e72361c270b0af4402c80e1f170938fb22183758c444966427**\n**vagrant@net-1:~$ docker network ls**\n**NETWORK ID           NAME               DRIVE**\n**447e75fd19b2         tester             overlay**\n**b77a7d741b45         bridge             bridge**\n**40fe7cfeee20         none               null**\n**62072090b6ac         host               host**\n\n```", "```\n**$ docker run -it --rm --publish-service=bar.tester.overlay ubuntu:14.04 bash**\n\n```", "```\n    **$ docker-machine create -d virtualbox mh-keystore**\n    **Running pre-create checks...**\n    **Creating machine...**\n    **(mh-keystore) Creating VirtualBox VM...**\n    **(mh-keystore) Creating SSH key...**\n    **(mh-keystore) Starting VM...**\n    **Waiting for machine to be running, this may take a few minutes...**\n    **Machine is running, waiting for SSH to be available...**\n    **Detecting operating system of created instance...**\n    **Detecting the provisioner...**\n    **Provisioning with boot2docker...**\n    **Copying certs to the local machine directory...**\n    **Copying certs to the remote machine...**\n    **Setting Docker configuration on the remote daemon...**\n    **Checking connection to Docker...**\n    **Docker is up and running!**\n    **To see how to connect Docker to this machine, run: docker-machine env mh-keystore**\n\n    ```", "```\n    **$ docker $(docker-machine config mh-keystore) run -d \\**\n    **>     -p \"8500:8500\" \\**\n    **>     -h \"consul\" \\**\n    **>     progrium/consul -server \u2013bootstrap**\n\n    **Unable to find image 'progrium/consul:latest' locally**\n    **latest: Pulling from progrium/consul**\n    **3b4d28ce80e4: Pull complete**\n    **\u2026**\n    **d9125e9e799b: Pull complete**\n    **Digest: sha256:8cc8023462905929df9a79ff67ee435a36848ce7a10f18d6d0faba9306b97274**\n    **Status: Downloaded newer image for progrium/consul:latest**\n    **032884c7834ce22707ed08068c24c503d599499f1a0a58098c31be9cc84d8e6c**\n\n    ```", "```\n    **$ eval \"$(docker-machine env mh-keystore)\"**\n\n    ```", "```\n    **$ docker ps**\n    **CONTAINER ID      IMAGE            COMMAND               CREATED**\n    **032884c7834c   progrium/consul   \"/bin/start -server -\"   47 seconds ago**\n     **STATUS          PORTS**\n    **Up 46 seconds  53/tcp, 53/udp, 8300-8302/tcp, 8301-8302/udp, 8400/tcp, 0.0.0.0:8500->8500/tcp**\n    **NAMES**\n    **sleepy_austin**\n\n    ```", "```\n    **$ docker-machine create \\**\n    **-d virtualbox \\**\n    **--swarm --swarm-master \\**\n    **--swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\**\n    **--engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\**\n    **--engine-opt=\"cluster-advertise=eth1:2376\" \\**\n    **mhs-demo0**\n\n    ```", "```\n    **$ docker-machine create -d virtualbox \\**\n     **--swarm \\**\n     **--swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\**\n     **--engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\**\n     **--engine-opt=\"cluster-advertise=eth1:2376\" \\**\n    **mhs-demo1**\n\n    **Running pre-create checks...**\n    **Creating machine...**\n    **(mhs-demo1) Creating VirtualBox VM...**\n    **(mhs-demo1) Creating SSH key...**\n    **(mhs-demo1) Starting VM...**\n    **Waiting for machine to be running, this may take a few minutes...**\n    **Machine is running, waiting for SSH to be available...**\n    **Detecting operating system of created instance...**\n    **Detecting the provisioner...**\n    **Provisioning with boot2docker...**\n    **Copying certs to the local machine directory...**\n    **Copying certs to the remote machine...**\n    **Setting Docker configuration on the remote daemon...**\n    **Configuring swarm...**\n    **Checking connection to Docker...**\n    **Docker is up and running!**\n    **To see how to connect Docker to this machine, run: docker-machine env mhs-demo1**\n\n    ```", "```\n    **$ docker-machine ls**\n\n    **NAME          ACTIVE   DRIVER       STATE     URL                         SWARM                DOCKER   ERRORS**\n    **mh-keystore   *        virtualbox   Running   tcp://192.168.99.100:2376                        v1.9.1**\n    **mhs-demo0     -        virtualbox   Running   tcp://192.168.99.101:2376   mhs-demo0 (master)   v1.9.1**\n    **mhs-demo1     -        virtualbox   Running   tcp://192.168.99.102:2376   mhs-demo0            v1.9.1**\n\n    ```", "```\n**$ docker network create --driver overlay my-net**\n\n```", "```\n    **$ docker network ls**\n\n    **bd85c87911491d7112739e6cf08d732eb2a2841c6ca1efcc04d0b20bbb832a33**\n    **rdua1-ltm:overlay-tutorial rdua$ docker network ls**\n    **NETWORK ID          NAME                DRIVER**\n    **bd85c8791149        my-net              overlay**\n    **fff23086faa8        mhs-demo0/bridge    bridge**\n    **03dd288a8adb        mhs-demo0/none      null**\n    **2a706780454f        mhs-demo0/host      host**\n    **f6152664c40a        mhs-demo1/bridge    bridge**\n    **ac546be9c37c        mhs-demo1/none      null**\n    **c6a2de6ba6c9       mhs-demo1/host     host**\n\n    ```", "```\n    **$ eval $(docker-machine env mhs-demo0)**\n\n    **$ docker network ls**\n    **NETWORK ID          NAME                DRIVER**\n    **bd85c8791149        my-net              overlay**\n    **03dd288a8adb        none                  null**\n    **2a706780454f        host                  host**\n    **fff23086faa8        bridge              bridge**\n\n    **$ eval $(docker-machine env mhs-demo1)**\n    **$ docker network ls**\n\n    **NETWORK ID          NAME                DRIVER**\n    **bd85c8791149        my-net              overlay**\n    **358c45b96beb        docker_gwbridge     bridge**\n    **f6152664c40a        bridge              bridge**\n    **ac546be9c37c        none                null**\n    **c6a2de6ba6c9        host                host**\n\n    ```", "```\n    **$ eval $(docker-machine env mhs-demo0)**\n    **root@843b16be1ae1:/#**\n\n    **$ sudo docker run -i -t --name=c0 --net=my-net  debian /bin/bash**\n\n    ```", "```\n    **root@843b16be1ae1:/# ifconfig**\n    **eth0      Link encap:Ethernet  HWaddr 02:42:0a:00:00:04**\n     **inet addr:10.0.0.4  Bcast:0.0.0.0  Mask:255.255.255.0**\n     **inet6 addr: fe80::42:aff:fe00:4/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1**\n     **RX packets:17 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:17 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:1474 (1.4 KB)  TX bytes:1474 (1.4 KB)**\n\n    **eth1      Link encap:Ethernet  HWaddr 02:42:ac:12:00:03**\n     **inet addr:172.18.0.3  Bcast:0.0.0.0  Mask:255.255.0.0**\n     **inet6 addr: fe80::42:acff:fe12:3/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n     **RX packets:8 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:8 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:648 (648.0 B)  TX bytes:648 (648.0 B)**\n\n    **lo        Link encap:Local Loopback**\n     **inet addr:127.0.0.1  Mask:255.0.0.0**\n     **inet6 addr: ::1/128 Scope:Host**\n     **UP LOOPBACK RUNNING  MTU:65536  Metric:1**\n     **RX packets:0 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:0 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)**\n\n    ```", "```\n    **$ eval $(docker-machine env mhs-demo1)**\n\n    **$ sudo docker run -i -t --name=c1 --net=my-net  debian /bin/bash**\n    **Unable to find image 'ubuntu:latest' locally**\n    **latest: Pulling from library/ubuntu**\n    **0bf056161913: Pull complete**\n    **1796d1c62d0c: Pull complete**\n    **e24428725dd6: Pull complete**\n    **89d5d8e8bafb: Pull complete**\n    **Digest: sha256:a2b67b6107aa640044c25a03b9e06e2a2d48c95be6ac17fb1a387e75eebafd7c**\n    **Status: Downloaded newer image for ubuntu:latest**\n     **root@2ce83e872408:/#**\n\n    ```", "```\n    **root@2ce83e872408:/# ifconfig**\n    **eth0      Link encap:Ethernet  HWaddr 02:42:0a:00:00:03**\n     **inet addr:10.0.0.3  Bcast:0.0.0.0  Mask:255.255.255.0**\n     **inet6 addr: fe80::42:aff:fe00:3/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1**\n     **RX packets:13 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:7 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:1066 (1.0 KB)  TX bytes:578 (578.0 B)**\n\n    **eth1      Link encap:Ethernet  HWaddr 02:42:ac:12:00:02**\n     **inet addr:172.18.0.2  Bcast:0.0.0.0  Mask:255.255.0.0**\n     **inet6 addr: fe80::42:acff:fe12:2/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n     **RX packets:7 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:7 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:578 (578.0 B)  TX bytes:578 (578.0 B)**\n\n    **lo        Link encap:Local Loopback**\n     **inet addr:127.0.0.1  Mask:255.0.0.0**\n     **inet6 addr: ::1/128 Scope:Host**\n     **UP LOOPBACK RUNNING  MTU:65536  Metric:1**\n     **RX packets:0 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:0 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)**\n\n    ```", "```\n    **root@2ce83e872408:/# ping 10.0.04**\n    **PING 10.0.04 (10.0.0.4) 56(84) bytes of data.**\n    **64 bytes from 10.0.0.4: icmp_seq=1 ttl=64 time=0.370 ms**\n    **64 bytes from 10.0.0.4: icmp_seq=2 ttl=64 time=0.443 ms**\n    **64 bytes from 10.0.0.4: icmp_seq=3 ttl=64 time=0.441 ms**\n\n    ```", "```\n**Constants**\n**const (**\n **CNIPluginName        = \"cni\"**\n **DefaultNetDir        = \"/etc/cni/net.d\"**\n **DefaultCNIDir        = \"/opt/cni/bin\"**\n **DefaultInterfaceName = \"eth0\"**\n **VendorCNIDirTemplate = \"%s/opt/%s/bin\"**\n**)**\n**func\u00a0ProbeNetworkPlugins**\n**func ProbeNetworkPlugins(pluginDir string) []network.NetworkPlugin**\n\n```", "```\n{\n  \"cniVersion\": \"0.1.0\",\n  \"name\": \"pci\",\n  \"type\": \"ovs\",\n  // type (plugin) specific\n  \"bridge\": \"ovs0\",\n  \"vxlanID\": 42,\n  \"ipam\": {\n    \"type\": \"dhcp\",\n    \"routes\": [ { \"dst\": \"10.3.0.0/16\" }, { \"dst\": \"10.4.0.0/16\" } ]\n  }\n}\n```", "```\n{\n  \"cniVersion\": \"0.1.0\",\n  \"ip4\": {\n    \"ip\": <ipv4-and-subnet-in-CIDR>,\n    \"gateway\": <ipv4-of-the-gateway>,  (optional)\n    \"routes\": <list-of-ipv4-routes>    (optional)\n  },\n  \"ip6\": {\n    \"ip\": <ipv6-and-subnet-in-CIDR>,\n    \"gateway\": <ipv6-of-the-gateway>,  (optional)\n    \"routes\": <list-of-ipv6-routes>    (optional)\n  },\n  \"dns\": <list-of-DNS-nameservers>     (optional)\n}\n```", "```\n    **$ wget https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz**\n    **$ tar -C /usr/local -xzf go1.5.2.linux-amd64.tar.gz**\n    **$ export PATH=$PATH:/usr/local/go/bin**\n    **$ go version**\n    **go version go1.5.2 linux/amd64**\n    **$ sudo apt-get install jq**\n\n    ```", "```\n    **$ git clone https://github.com/appc/cni.git**\n    **Cloning into 'cni'...**\n    **remote: Counting objects: 881, done.**\n    **remote: Total 881 (delta 0), reused 0 (delta 0), pack-reused 881**\n    **Receiving objects: 100% (881/881), 543.54 KiB | 313.00 KiB/s, done.**\n    **Resolving deltas: 100% (373/373), done.**\n    **Checking connectivity... done.**\n\n    ```", "```\n    **mkdir -p /etc/cni/net.d**\n    **root@rajdeepd-virtual-machine:~# cat >/etc/cni/net.d/10-mynet.conf <<EOF**\n    **>{**\n    **>  \"name\": \"mynet\",**\n    **>  \"type\": \"bridge\",**\n    **>  \"bridge\": \"cni0\",**\n    **>  \"isGateway\": true,**\n    **>  \"ipMasq\": true,**\n    **>  \"ipam\": {**\n    **>    \"type\": \"host-local\",**\n    **>    \"subnet\": \"10.22.0.0/16\",**\n    **>    \"routes\": [**\n    **>      { \"dst\": \"0.0.0.0/0\" }**\n    **>    ]**\n    **>  }**\n    **>}**\n    **> EOF**\n\n    ```", "```\n    **~/cni$ ./build**\n    **Building API**\n    **Building reference CLI**\n    **Building plugins**\n     **flannel**\n     **bridge**\n     **ipvlan**\n     **macvlan**\n     **ptp**\n     **dhcp**\n     **host-local**\n\n    ```", "```\n    **~/cni/scripts$ sudo CNI_PATH=$CNI_PATH ./priv-net-run.sh ifconfig**\n    **eth0      Link encap:Ethernet  HWaddr 8a:72:75:7d:6d:6c**\n     **inet addr:10.22.0.2  Bcast:0.0.0.0  Mask:255.255.0.0**\n     **inet6 addr: fe80::8872:75ff:fe7d:6d6c/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n     **RX packets:1 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:1 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:90 (90.0 B)  TX bytes:90 (90.0 B)**\n\n    **lo        Link encap:Local Loopback**\n     **inet addr:127.0.0.1  Mask:255.0.0.0**\n     **inet6 addr: ::1/128 Scope:Host**\n     **UP LOOPBACK RUNNING  MTU:65536  Metric:1**\n     **RX packets:0 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:0 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)**\n\n    ```", "```\n    **~/cni/scripts$ sudo CNI_PATH=$CNI_PATH ./docker-run.sh --rm busybox:latest /bin/ifconfig**\n    **eth0      Link encap:Ethernet  HWaddr 92:B2:D3:E5:BA:9B**\n     **inet addr:10.22.0.2  Bcast:0.0.0.0  Mask:255.255.0.0**\n     **inet6 addr: fe80::90b2:d3ff:fee5:ba9b/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n     **RX packets:2 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:2 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:180 (180.0 B)  TX bytes:168 (168.0 B)**\n\n    **lo        Link encap:Local Loopback**\n     **inet addr:127.0.0.1  Mask:255.0.0.0**\n     **inet6 addr: ::1/128 Scope:Host**\n     **UP LOOPBACK RUNNING  MTU:65536  Metric:1**\n     **RX packets:0 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:0 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)**\n\n    ```", "```\n    **$ calicoctlOverride the host:port of the ETCD server by setting the environment variable ETCD_AUTHORITY [default: 127.0.0.1:2379]Usage: calicoctl <command> [<args>...]**\n    **status            Print current status information**\n    **node              Configure the main calico/node container and establish Calico networking**\n    **container         Configure containers and their addresses**\n    **profile           Configure endpoint profiles**\n    **endpoint          Configure the endpoints assigned to existing containers**\n    **pool              Configure ip-pools**\n    **bgp               Configure global bgp**\n    **ipam              Configure IP address management**\n    **checksystem       Check for incompatibilities on the host system**\n    **diags             Save diagnostic information**\n    **version           Display the version of calicoctl**\n    **config            Configure low-level component configuration**\n    **See 'calicoctl <command> --help' to read about a specific subcommand.**\n\n    ```", "```\n    **$ curl -L https://github.com/coreos/etcd/releases/download/v2.2.1/etcd-v2.2.1-linux-amd64.tar.gz -o etcd-v2.2.1-linux-amd64.tar.gz**\n     **% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current**\n     **Dload  Upload   Total   Spent    Left  Speed**\n    **100   606    0   606    0     0    445      0 --:--:--  0:00:01 --:--:--   446**\n    **100 7181k  100 7181k    0     0   441k      0  0:00:16  0:00:16 --:--:-- 1387k**\n    **$ tar xzvf etcd-v2.2.1-linux-amd64.tar.gz**\n    **etcd-v2.2.1-linux-amd64/**\n    **etcd-v2.2.1-linux-amd64/Documentation/**\n    **etcd-v2.2.1-linux-amd64/Documentation/04_to_2_snapshot_migration.md**\n    **etcd-v2.2.1-linux-amd64/Documentation/admin_guide.md**\n    **etcd-v2.2.1-linux-amd64/Documentation/api.md**\n    **contd..**\n    **etcd-v2.2.1-linux-amd64/etcd**\n    **etcd-v2.2.1-linux-amd64/etcdctl**\n    **etcd-v2.2.1-linux-amd64/README-etcdctl.md**\n    **etcd-v2.2.1-linux-amd64/README.md**\n\n    **$ cd etcd-v2.2.1-linux-amd64**\n    **$ ./etcd**\n    **2016-01-06 15:50:00.065733 I | etcdmain: etcd Version: 2.2.1**\n    **2016-01-06 15:50:00.065914 I | etcdmain: Git SHA: 75f8282**\n    **2016-01-06 15:50:00.065961 I | etcdmain: Go Version: go1.5.1**\n    **2016-01-06 15:50:00.066001 I | etcdmain: Go OS/Arch: linux/amd64**\n    **Contd..**\n    **2016-01-06 15:50:00.107972 I | etcdserver: starting server... [version: 2.2.1, cluster version: 2.2]**\n    **2016-01-06 15:50:00.508131 I | raft: ce2a822cea30bfca is starting a new election at term 5**\n    **2016-01-06 15:50:00.508237 I | raft: ce2a822cea30bfca became candidate at term 6**\n    **2016-01-06 15:50:00.508253 I | raft: ce2a822cea30bfca received vote from ce2a822cea30bfca at term 6**\n    **2016-01-06 15:50:00.508278 I | raft: ce2a822cea30bfca became leader at term 6**\n    **2016-01-06 15:50:00.508313 I | raft: raft.node: ce2a822cea30bfca elected leader ce2a822cea30bfca at term 6**\n    **2016-01-06 15:50:00.509810 I | etcdserver: published {Name:default ClientURLs:[http://localhost:2379 http://localhost:4001]} to cluster 7e27652122e8b2ae**\n\n    ```", "```\n    **$ service docker stop**\n    **$ docker daemon --cluster-store=etcd://0.0.0.0:2379**\n    **INFO[0000] [graphdriver] using prior storage driver \"aufs\"**\n    **INFO[0000] API listen on /var/run/docker.sock**\n    **INFO[0000] Firewalld running: false**\n    **INFO[0015] Default bridge (docker0) is assigned with an IP address 172.16.59.1/24\\. Daemon option --bip can be used to set a preferred IP address**\n    **WARN[0015] Your kernel does not support swap memory limit.**\n    **INFO[0015] Loading containers: start.**\n    **.....INFO[0034] Skipping update of resolv.conf file with ipv6Enabled: false because file was touched by user**\n    **INFO[0043] Loading containers: done.**\n    **INFO[0043] Daemon has completed initialization**\n    **INFO[0043] Docker daemon       commit=a34a1d5 execdriver=native-0.2 graphdriver=aufs version=1.9.1**\n    **INFO[0043] GET /v1.21/version**\n    **INFO[0043] GET /v1.21/version**\n    **INFO[0043] GET /events**\n    **INFO[0043] GET /v1.21/version**\n\n    ```", "```\n    **$ ./calicoctl node --libnetwork**\n    **No IP provided. Using detected IP: 10.22.0.1**\n    **Pulling Docker image calico/node:v0.10.0**\n    **Calico node is running with id: 79e75fa6d875777d31b8aead10c2712f54485c031df50667edb4d7d7cb6bb26c**\n    **Pulling Docker image calico/node-libnetwork:v0.5.2**\n    **Calico libnetwork driver is running with id: bc7d65f6ab854b20b9b855abab4776056879f6edbcde9d744f218e556439997f**\n    **$ docker ps**\n    **CONTAINER ID        IMAGE                           COMMAND         CREATED             STATUS              PORTS               NAMES**\n    **7bb7a956af37        calico/node-libnetwork:v0.5.2   \"./start.sh\"           3 minutes ago       Up 3 minutes             calico-libnetwork**\n    **13a0314754d6        calico/node:v0.10.0             \"/sbin/start_runit\"    3 minutes ago       Up 3 minutes             calico-node**\n    **1f13020cc3a0        weaveworks/plugin:1.4.1         \"/home/weave/plugin\"   3 days ago          Up 3 minutes             weaveplugin**\n\n    ```", "```\n    **$docker network create \u2013d calico net1**\n    **$ docker network ls**\n    **NETWORK ID          NAME                DRIVER**\n    **9b5f06307cf2        docker_gwbridge     bridge**\n    **1638f754fbaf        host                host**\n    **02b10aaa25d7        weave               weavemesh**\n    **65dc3cbcd2c0        bridge              bridge**\n    **f034d78cc423        net1                calico**\n\n    ```", "```\n    **$docker run --net=net1 -itd --name=container1 busybox**\n    **1731629b6897145822f73726194b1f7441b6086ee568e973d8a88b554e838366**\n    **$ docker ps**\n    **CONTAINER ID        IMAGE                           COMMAND                CREATED             STATUS              PORTS               NAMES**\n    **1731629b6897        busybox                         \"sh\"                   6 seconds ago       Up 5 seconds                            container1**\n    **7bb7a956af37        calico/node-libnetwork:v0.5.2   \"./start.sh\"           6 minutes ago       Up 6 minutes                            calico-libnetwork**\n    **13a0314754d6        calico/node:v0.10.0             \"/sbin/start_runit\"    6 minutes ago       Up 6 minutes                            calico-node**\n    **1f13020cc3a0        weaveworks/plugin:1.4.1         \"/home/weave/plugin\"   3 days ago          Up 6 minutes                            weaveplugin**\n    **$ docker attach 1731**\n    **/ #**\n    **/ # ifconfig**\n    **cali0     Link encap:Ethernet  HWaddr EE:EE:EE:EE:EE:EE**\n     **inet addr:10.0.0.2  Bcast:0.0.0.0  Mask:255.255.255.0**\n     **inet6 addr: fe80::ecee:eeff:feee:eeee/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n     **RX packets:29 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:8 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:1000**\n     **RX bytes:5774 (5.6 KiB)  TX bytes:648 (648.0 B)**\n\n    **eth1      Link encap:Ethernet  HWaddr 02:42:AC:11:00:02**\n     **inet addr:172.17.0.2  Bcast:0.0.0.0  Mask:255.255.0.0**\n     **inet6 addr: fe80::42:acff:fe11:2/64 Scope:Link**\n     **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n     **RX packets:21 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:8 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:4086 (3.9 KiB)  TX bytes:648 (648.0 B)**\n\n    **lo        Link encap:Local Loopback**\n     **inet addr:127.0.0.1  Mask:255.0.0.0**\n     **inet6 addr: ::1/128 Scope:Host**\n     **UP LOOPBACK RUNNING  MTU:65536  Metric:1**\n     **RX packets:0 errors:0 dropped:0 overruns:0 frame:0**\n     **TX packets:0 errors:0 dropped:0 overruns:0 carrier:0**\n     **collisions:0 txqueuelen:0**\n     **RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)**\n\n    ```"]