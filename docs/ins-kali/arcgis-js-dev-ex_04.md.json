["```js\n<script>\n        var dojoConfig = {\n            has: {\n                \"dojo-debug-messages\": true\n            },\n            parseOnLoad: false,\n            locale: 'en-us',\n            async: true,  \n            cacheBust: true,\n            packages: [\n                {\n                    name: \"widgets\",\n                    location: \"/js/widgets\"\n            },\n                {\n                    name: \"utils\", \n                    location: \"/js/utils\"\n                }\n         ]\n        };\n    </script>\n    <script src=\"//js.arcgis.com/3.14/\"></script>\n    <script src=\"js/app.js\"></script>\n```", "```js\ndefine([\n    //class\n    \"dojo/_base/declare\",\n\n    //widgit class\n    \"dijit/_WidgetBase\",\n\n    \"dojo/domReady!\"\n], function (\n    declare,\n    _WidgetBase\n) {\n **return declare([_WidgetBase], {**\n/*Class declaration inherits \"dijit/_WidgetBase\" module*/\n\n        constructor: function () {}\n    });\n});\n```", "```js\n    constructor: function (options, srcRefNode) {\n                this.domNode = srcRefNode;\n            }\n    ```", "```js\n    postCreate: function(){\n                **this.inherited(arguments);**\n            }\n    ```", "```js\n    \"dojo/text!app_widgets/widgettemplate/template/_widget.html\"\n```", "```js\n<h1>This is Templated widget</h1>\n```", "```js\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <title></title>\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\n\n</head>\n\n<body>\n    <h1>Using Dojo Classes</h1>\n    <div id=\"templatedWidgetDiv\"/>\n    <script>\n        /* dojo config */\n        var dojoConfig = {\n            has: {\n                \"dojo-debug-messages\": true\n            },\n            parseOnLoad: false,\n            locale: 'en-us',\n            async: true,  \n            cacheBust: true,\n            packages: [\n                {\n                    name: \"app_widgets\",\n                    location: \"/js/widgets\"\n            },\n                {\n                    name: \"utils\", \n                    location: \"/js/utils\"\n                }\n         ]\n        };\n    </script>\n    <!--Call the esri JS API library-->\n    <script src=\"//js.arcgis.com/3.14/\"></script>\n    <!--Call the /js/utils/app.js file-->\n    <script src=\"js/app.js\"></script> \n</body>\n\n</html>\n```", "```js\n    <!--Call the esri JS API library-->\n    <script src=\"//js.arcgis.com/3.15/\"></script>\n    <!--Call the javaScript file which serves as the single point of entry-->\n **<script src=\"js/app.js\"></script>**\n\n```", "```js\ndefine(function () {\n    /* Private variables*/\n    var baseMapUrl = \"http://maps.ngdc.noaa.gov/arcgis/rest/services/web_mercator/etopo1_hillshade/MapServer\";\n    var NOAAMapService = \"http://maps.ngdc.noaa.gov/arcgis/rest/services/web_mercator/hazards/MapServer\";\n    var earthquakeLayerId = 5;\n    var volcanoLayerId = 6;\n    /*publicly accessible object returned by the COnfig module */\n    return {\n        app: {\n            currentVersion: \"1.0.0\"\n        },\n\n        // valid themes: \"claro\", \"nihilo\", \"soria\", \"tundra\", \"bootstrap\", \"metro\"\n        theme: \"bootstrap\",\n\n        // url to your proxy page, must be on same machine hosting you app. See proxy folder for readme.\n        proxy: {\n            url: \"proxy/proxy.ashx\",\n            alwaysUseProxy: false,\n            proxyRuleUrls: [NOAAMapService]\n        },\n\n        map: {\n\n            // basemap: valid options: \"streets\", \"satellite\", \"hybrid\", \"topo\", \"gray\", \"oceans\", \"national-geographic\", \"osm\"\n            defaultBasemap: \"streets\",\n            visibleLayerId: [this.earthquakeLayerId, this.volcanoLayerId];\n\n            earthQuakeLayerURL: this.NOAAMapService + \"/\" + this.earthquakeLayerId,\n            volcanoLayerURL: this.NOAAMapService + \"/\" + this.volcanoLayerId\n        }\n    }\n});\n```", "```js\n    \"zh-cn\" : true,\n    \"de-at\" : true\n    ```", "```js\n    define([\n        //class\n        \"dojo/_base/declare\",\n        \"dojo/_base/lang\",\n\n        //widgit class\n        \"dijit/_WidgetBase\",\n\n        //templated widgit\n        \"dijit/_TemplatedMixin\",\n\n        // localization\n     **\"dojo/i18n!app_widgets/widget_i18n/nls/strings\",**\n\n        //loading template file\n        \"dojo/text!app_widgets/widget_i18n/template/_widget.html\",\n\n        \"dojo/domReady!\"\n    ], function (\n        declare, lang,\n        _WidgetBase,\n        _TemplatedMixin,\n        nls,\n        dijitTemplate\n    ) {\n        return declare([_WidgetBase, _TemplatedMixin], {\n            //assigning html template to template string\n            templateString: dijitTemplate,\n            constructor: function (options, srcRefNode) {\n                console.log('constructor called');\n                // widget node\n                this.domNode = srcRefNode;\n     **this.nls = nls;**\n            },\n            // start widget. called by user\n            startup: function () {\n                console.log('startup called');\n            }\n        });\n    });\n    ```", "```js\nreturn declare([_WidgetBase, _TemplatedMixin], {\n    //assigning html template to template string\n    templateString: dijitTemplate,\n    isDrawActive: false,\n    map: null,\n **tbDraw: null,**\n    constructor: function (options, srcRefNode) {\n      this.map = options.map;\n    },\n    startup: function () {},\n    postCreate: function () {\n      this.inherited(arguments);\n **this.tbDraw = new Draw(this.map, {showTooltips : true});**\n    }\n...\n```", "```js\npostCreate: function () {\n...\n **this.tbDraw.on(\"draw-end\", lang.hitch(this, this.querybyGeometry));**\n    },\n...\nquerybyGeometry: function (evt) {\n      this.isBusy(true);\n      //Get the Drawn geometry\n      var geometryInput = evt.geometry;\n...\n}\n```", "```js\nvar queryTask = new QueryTask(this.wildFireActivityURL);\nvar query = new Query();\nquery.where = \"1=1\";\nquery.geometry = geometryInput;\nquery.returnGeometry = true;\nquery.outFields = [\"FIRE_NAME\", \"AREA_\", \"AREA_MEAS\"];\nvar queryDeferred = queryTask.execute(query);\n```", "```js\n  var symbolSelected = new PictureMarkerSymbol({\n  \"angle\": 0,\n  \"xoffset\": 0,\n  \"yoffset\": 0,\n  \"type\": \"esriPMS\",\n  \"url\": \"images/fire_sel.png\",\n  \"contentType\": \"image/png\",\n  \"width\": 24,\n  \"height\": 24\n});\n```"]