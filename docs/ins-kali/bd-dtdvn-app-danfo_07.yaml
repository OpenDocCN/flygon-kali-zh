- en: '*Chapter 5*: Data Visualization with Plotly.js'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第5章*：使用Plotly.js进行数据可视化'
- en: Plotting and visualization are very important tasks in data analysis, and as
    such, we are dedicating a full chapter to them. A data analyst will typically
    perform plotting and data visualization as part of the **exploratory data analysis**
    (**EDA**) phase. This can greatly help in identifying useful patterns hidden in
    data and in building intuition for data modeling.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图和可视化是数据分析中非常重要的任务，因此我们将一个完整的章节来专门讨论它们。数据分析师通常会在**探索性数据分析**（**EDA**）阶段执行绘图和数据可视化。这可以极大地帮助识别数据中隐藏的有用模式，并建立数据建模的直觉。
- en: In this chapter, you will learn how to use **Plotly.js** to create rich and
    interactive plots that can be embedded into any web application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用**Plotly.js**创建丰富和交互式的图表，这些图表可以嵌入到任何Web应用程序中。
- en: 'Specifically, we''ll cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们将涵盖以下主题：
- en: A brief primer on Plotly.js
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于Plotly.js的简要介绍
- en: Fundamentals of Plotly.js
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Plotly.js的基础知识
- en: Creating basic charts with Plotly.js
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建基本图表
- en: Creating statistical charts with Plotly.js
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建统计图表
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In order to follow along with this chapter, you should have the following:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟上本章的内容，您应该具备以下条件：
- en: A modern browser such as Chrome, Safari, Opera, or Firefox
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代浏览器，如Chrome、Safari、Opera或Firefox
- en: '**Node.js** and, optionally, **Danfo Notebook** (**Dnotebook**) installed on
    your system'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node.js**和可选地，安装在您系统上的**Danfo Notebook**（**Dnotebook**）'
- en: A stable internet connection for downloading datasets
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定的互联网连接以下载数据集
- en: Installation instructions for Dnotebook can be found in [*Chapter 2*](B17076_02_ePub_RK.xhtml#_idTextAnchor045),
    *Dnotebook - An Interactive Computing Environment for JavaScript*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Dnotebook的安装说明，请参见[*第2章*](B17076_02_ePub_RK.xhtml#_idTextAnchor045)，*Dnotebook
    - 用于JavaScript的交互式计算环境*。
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not want to install any software or libraries, you can use the online
    version of Dnotebook at [https://playnotebook.jsdata.org/](https://playnotebook.jsdata.org/).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想安装任何软件或库，可以在[https://playnotebook.jsdata.org/](https://playnotebook.jsdata.org/)上使用Dnotebook的在线版本。
- en: '**Danfo.js** comes with a plotting **application programming interface** (**API**)
    for easily making plots, and under the hood, it uses Plotly. This is the main
    reason why we introduce Plotly.js in this chapter, as knowledge gained here will
    help you easily customize plots created with Danfo.js in the next chapter.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**Danfo.js**带有一个用于轻松制作图表的绘图**应用程序编程接口**（**API**），在幕后，它使用Plotly。这是我们在本章介绍Plotly.js的主要原因，因为在这里获得的知识将帮助您轻松定制下一章中使用Danfo.js创建的图表。'
- en: A brief primer on Plotly.js
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于Plotly.js的简要介绍
- en: Plotly.js ([https://plotly.com/javascript/](https://plotly.com/javascript/)),
    according to the authors, is an open source, high-level, declarative charting
    library built on top of the popular D3.js ([https://d3js.org/](https://d3js.org/))
    and stack.gl ([https://github.com/stackgl](https://github.com/stackgl)) libraries.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly.js ([https://plotly.com/javascript/](https://plotly.com/javascript/))，根据作者的说法，是一个建立在流行的D3.js
    ([https://d3js.org/](https://d3js.org/))和stack.gl ([https://github.com/stackgl](https://github.com/stackgl))库之上的开源、高级、声明性图表库。
- en: 'It supports over 40 chart types, including these kinds:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持超过40种图表类型，包括以下类型：
- en: Basic charts such as scatter plots, line plots, and bar and pie charts
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本图表，如散点图、线图、条形图和饼图
- en: Statistical graphs such as box plots, histograms, and density plots
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统计图表，如箱线图、直方图和密度图
- en: Scientific charts such as heatmaps, log plots, and contour plots
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 科学图表，如热图、对数图和等高线图
- en: Financial charts such as waterfall, candlestick, and time-series charts
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 金融图表，如瀑布图、蜡烛图和时间序列图
- en: Maps such as bubble, choropleth, and Mapbox maps
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地图，如气泡图、区域图和Mapbox地图
- en: '**Three-dimensional** (**3D**) charts for scatter plots and surface plots,
    as well as 3D meshes'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**三维**（**3D**）散点图和曲面图，以及3D网格'
- en: To use Plotly.js, you need access to the browser's `React` and `Vue`. In the
    following section, we will see how to install Plotly.js.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Plotly.js，您需要访问浏览器的`React`和`Vue`。在下一节中，我们将看到如何安装Plotly.js。
- en: Using Plotly.js via a script tag
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过`script`标签使用Plotly.js
- en: 'In order to use Plotly.js in a `script` tag. In the following code snippet,
    we add the Plotly.js `script` tag to the header section of a simple HTML file:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在`script`标签中使用Plotly.js。在下面的代码片段中，我们将在简单的HTML文件的头部添加Plotly.js的`script`标签：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once you have added the Plotly.js `script` tag as shown in the preceding code
    snippet, save the HTML file and open it in a browser. The output is going to be
    an empty page, but under the hood, Plotly.js gets added and is made available
    in the page. We can test this by making a simple plot, following the steps here:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您按照上面的代码片段添加了Plotly.js的`script`标签，保存HTML文件并在浏览器中打开它。输出将是一个空白页面，但在幕后，Plotly.js被添加并在页面中可用。我们可以通过按照这里的步骤制作一个简单的图表来测试这一点：
- en: 'Create a `div` tag in the HTML body where the graph will be drawn. We''ll give
    this an `myPlot`, as shown here:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在HTML主体中创建一个`div`标签，图表将在其中绘制。我们将给这个一个`myPlot`，如下所示：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the body of your HTML page, create sample `x` and `y` data, and then plot
    a `scatter` plot, as shown in the following code snippet:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的HTML页面中，创建样本`x`和`y`数据，然后绘制`scatter`图，如下面的代码片段所示：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Opening the HTML file in your browser will give you the following output:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开HTML文件将给出以下输出：
- en: '![Figure 5.1 – A simple scatter plot made with Plotly'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.1 - 使用Plotly制作的简单散点图'
- en: '](img/B17076_5_01.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_01.jpg)'
- en: Figure 5.1 – A simple scatter plot made with Plotly
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 - 使用Plotly制作的简单散点图
- en: 'In Dnotebook, which we''ll be using a lot in this chapter, you can load and
    use Plotly by first loading the scripts in a top cell using the `load_package`
    function, as shown in the following snippet:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dnotebook中，我们将在本章中经常使用，您可以通过首先在顶部单元格中使用`load_package`函数加载并使用Plotly，如下面的代码片段所示：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, in a new cell, you can add the following code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在一个新的单元格中，您可以添加以下代码：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Running the preceding code cell will give the following output:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元将给出以下输出：
- en: '![Figure 5.2 – A simple scatter plot made with Plotly on Dnotebook'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.2 - 在Dnotebook上使用Plotly制作的简单散点图'
- en: '](img/B17076_5_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_02.jpg)'
- en: Figure 5.2 – A simple scatter plot made with Plotly on Dnotebook
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2 - 在Dnotebook上使用Plotly制作的简单散点图
- en: You can see that the code in the preceding section is the same as the HTML version,
    with just one slight difference—the `this_div` function passed to `Plotly.newPlot`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，前面部分的代码与HTML版本相同，只有一个细微的区别 - 将`this_div`函数传递给`Plotly.newPlot`。
- en: The `this_div` function is just a Dnotebook helper function that creates and
    returns the ID of the `div` tag just below the code cell block. This means that
    whenever you're working with plots in Dnotebook, you can get a `div` tag using
    the `this_div` function.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`this_div`函数只是一个Dnotebook的辅助函数，它创建并返回代码单元块下方的`div`标签的ID。这意味着每当您在Dnotebook中处理图表时，都可以使用`this_div`函数获取`div`标签。'
- en: Note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Going forward, we'll be using `this_div` instead of specifying a `div` tag ID.
    This is because we'll be working mostly in a Dnotebook environment. To use the
    code in an HTML or other `this_div` to the ID of the `div` tag you want to use.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用`this_div`而不是指定`div`标签ID。这是因为我们将主要在Dnotebook环境中工作。要在HTML或其他`this_div`中使用代码，将`this_div`指定为要使用的`div`标签的ID。
- en: Now you know how to install Plotly, we'll move on to the next section, which
    is about creating basic charts.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何安装Plotly，我们将继续下一节，关于创建基本图表。
- en: Fundamentals of Plotly.js
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Plotly.js的基础知识
- en: One of the major advantages of using Plotly.js is the fact that it is easy to
    get started, and there are lots of configurations you can specify to make your
    plot better. In the section, we are going to cover some of the important configuration
    options available, and we'll also show you how to specify these options.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Plotly.js的一个主要优势是它很容易上手，并且有很多配置可以指定，使您的图表更好。在本节中，我们将介绍一些重要的可用配置选项，并向您展示如何指定这些选项。
- en: Before we go further, let's understand how to get data into Plotly.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们了解如何将数据传递给Plotly。
- en: Data format
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据格式
- en: 'To make a `x` and `y` keys, as shown in the following code example:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建`x`和`y`键，如下面的代码示例所示：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'A data point is normally called a **trace** in Plotly. This is because you
    can plot more than one data point in a single graph. An example of this is provided
    here:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在Plotly中，数据点通常称为**trace**。这是因为您可以在单个图表中绘制多个数据点。这里提供了一个示例：
- en: '`var data = [trace1, trace2]`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`var data = [trace1, trace2]`'
- en: '`Plotly.newPlot("my_div", data);`'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`Plotly.newPlot("my_div", data);`'
- en: 'The `x` and `y` arrays can contain both string and numeric data. If they contain
    string data, the data points are plotted as they are, that is, point to point.
    Here''s an example of this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`x`和`y`数组可以包含字符串和数字数据。如果它们包含字符串数据，数据点将按原样绘制，即逐点。这是一个例子：'
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Running the preceding code cell will give the following output:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元将产生以下输出：
- en: '![Figure 5.3 – A plot of string values against date with Plotly'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.3 - 使用Plotly绘制日期与字符串值的图表'
- en: '](img/B17076_5_03.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_03.jpg)'
- en: Figure 5.3 – A plot of string values against date with Plotly
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.3 - 使用Plotly绘制日期与字符串值的图表
- en: 'If, on the other hand, your data is numeric, then Plotly will automatically
    sort and then choose a default scale. Look at the following example:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果您的数据是数字的，Plotly将自动排序，然后选择默认比例。看下面的例子：
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Running the preceding code cell will give the following output:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元将产生以下输出：
- en: '![Figure 5.4 – A plot of numerical values against date with Plotly'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.4 - 使用Plotly绘制日期与数值的图表'
- en: '](img/B17076_5_04.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_04.jpg)'
- en: Figure 5.4 – A plot of numerical values against date with Plotly
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.4 - 使用Plotly绘制日期与数值的图表
- en: 'Before we move to the configuration section, let''s see an example of plotting
    multiple traces in the same chart. First, we set up our data, as shown in the
    following code snippet:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入配置部分之前，让我们看一个在同一图表中绘制多个轨迹的示例。首先，我们设置我们的数据，如下面的代码片段所示：
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Running the preceding code cell will give the following output:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元将产生以下输出：
- en: '![Figure 5.5 – A plot of multiple traces sharing the same x axis'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.5 - 多个轨迹共享相同的x轴的图表'
- en: '](img/B17076_5_05.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_05.jpg)'
- en: Figure 5.5 – A plot of multiple traces sharing the same x axis
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5 - 多个轨迹共享相同的x轴的图表
- en: Note
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When plotting multiple traces in a single chart, it is recommended that the
    traces share a common axis. This makes your plot easier to read.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个图表中绘制多个轨迹时，建议轨迹共享一个公共轴。这样可以使您的图表更易于阅读。
- en: If you were wondering whether you can add more traces to a data array, then
    the answer is yes—you can add as many traces as you want, but you must consider
    interpretability, as adding more traces may not be easy to interpret.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想知道是否可以向数据数组添加更多轨迹，答案是肯定的 - 您可以添加任意数量的轨迹，但必须考虑可解释性，因为添加更多轨迹可能不容易解释。
- en: Now you know how to pass data into plots, let's understand some basic configuration
    options that you can pass to Plotly when making charts.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何将数据传递到图表中，让我们了解一些基本的配置选项，您可以在制作图表时传递给Plotly。
- en: Configuration options for plots
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图表的配置选项
- en: 'Configurations can be used to set properties such as interactivity and modebars
    of a graph. A configuration is an object and is normally passed as the last argument
    in the `Plotly.newPlot` call, as shown in the following code snippet:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 配置可以用于设置图表的交互性和模式栏等属性。配置是一个对象，通常作为`Plotly.newPlot`调用的最后一个参数传递，如下面的代码片段所示：
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the following sections, we''ll introduce some common configuration options
    that we will be using in [*Chapter 8*](B17076_08_ePub_RK.xhtml#_idTextAnchor149),
    *Creating a No-Code Data Analysis/Handling System*. If you want to know which
    configuration options are available to use, then you can read more about it here:
    [https://plotly.com/javascript/configuration-options/](https://plotly.com/javascript/configuration-options/).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将介绍一些常见的配置选项，这些选项将在[*第8章*](B17076_08_ePub_RK.xhtml#_idTextAnchor149)中使用，*创建一个无代码数据分析/处理系统*。如果您想知道有哪些可用的配置选项，可以在这里阅读更多信息：[https://plotly.com/javascript/configuration-options/](https://plotly.com/javascript/configuration-options/)。
- en: Configuring the modebar
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置模式栏
- en: The **modebar** is a horizontal toolbar that presents numerous options that
    can be used to interact with a chart. By default, the modebar only becomes visible
    when you hover over a chart, although this can be changed, as we will see in the
    following section.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**模式栏**是一个水平工具栏，提供了许多选项，可用于与图表进行交互。默认情况下，只有在悬停在图表上时，模式栏才会变为可见，尽管可以更改这一点，我们将在下一节中看到。'
- en: Making the modebar always visible
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使模式栏始终可见
- en: 'To make the modebar always visible, you can set the `displayModeBar` property
    to `true`, as shown in the following code snippet:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要使模式栏始终可见，可以将`displayModeBar`属性设置为`true`，如下面的代码片段所示：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Running the preceding code cell will give the following output:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元将产生以下输出：
- en: '![Figure 5.6 – Configuring modebar to always display'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.6 - 配置模式栏始终显示'
- en: '](img/B17076_5_06.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_06.jpg)'
- en: Figure 5.6 – Configuring modebar to always display
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.6 - 配置模式栏始终显示
- en: If you do not need the modebar, then setting the `displayModeBar` function to
    `false` will ensure that the modebar is hidden even when you hover over it.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不需要模式栏，则将`displayModeBar`函数设置为`false`将确保即使在悬停在其上时，模式栏也会被隐藏。
- en: Removing buttons from the modebar
  id: totrans-98
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 从模式栏中删除按钮
- en: You can remove buttons from the modebar by passing the names of the buttons
    you do not want to the `modeBarButtonsToRemove` `config` property, as we will
    demonstrate in this section.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将您不想要的按钮的名称传递给`modeBarButtonsToRemove` `config`属性来从模式栏中移除按钮，我们将在本节中进行演示。
- en: 'Using the same traces as from the *Making the modebar always visible* section,
    we will remove the zoom-in button from the modebar. You can see the zoomed-in
    button in the following screenshot before it was removed:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用与*使模式栏始终可见*部分相同的示踪，我们将从模式栏中移除缩放按钮。您可以在下面的截图中看到在移除之前的放大按钮：
- en: '![Figure 5.7 – Zoom-in button before removal'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.7 - 移除缩放按钮之前'
- en: '](img/B17076_5_07.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_07.jpg)'
- en: Figure 5.7 – Zoom-in button before removal
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.7 - 移除缩放按钮之前
- en: 'In the preceding screenshot, we show the chart before removing the zoom-in
    button. Next, we''ll set the `config` option to remove the button, as shown in
    the following code snippet:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的截图中，我们展示了移除缩放按钮之前的图表。接下来，我们将设置`config`选项以移除该按钮，如下面的代码片段所示：
- en: '[PRE11]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Running the preceding code cell will give the following output:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元将产生以下输出：
- en: '![Figure 5.8 – Chart after zoom-in button removal'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.8 - 移除缩放按钮后的图表'
- en: '](img/B17076_5_08.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_08.jpg)'
- en: Figure 5.8 – Chart after zoom-in button removal
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.8 - 移除缩放按钮后的图表
- en: 'Using the method demonstrated in the preceding example, you can remove any
    button from your charts. You can see the names of all modebar buttons that can
    be removed here: [https://plotly.com/javascript/configuration-options/#remove-modebar-buttons](https://plotly.com/javascript/configuration-options/#remove-modebar-buttons).'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面示例中演示的方法，您可以从您的图表中移除任何按钮。您可以在这里查看可以移除的所有模式栏按钮的名称：[https://plotly.com/javascript/configuration-options/#remove-modebar-buttons](https://plotly.com/javascript/configuration-options/#remove-modebar-buttons)。
- en: Adding custom buttons to the modebar
  id: totrans-111
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 向模式栏添加自定义按钮
- en: Plotly provides a way to add buttons with custom behavior to the modebar. This
    becomes useful when we want to extend our plots with custom behaviors— such as,
    for example, linking to your personal website.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly提供了一种方法，可以向模式栏添加具有自定义行为的按钮。当我们想要通过自定义行为扩展我们的图表时，这将非常有用，例如，链接到您的个人网站。
- en: In the following example, we'll add a custom button to display `This` `is` `an`
    `example` `of` `a` `plot` `that` `answers` `a` `question` `on` `click` to the
    user when it is clicked.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们将添加一个自定义按钮，当用户单击时显示`This` `is` `an` `example` `of` `a` `plot` `that`
    `answers` `a` `question` `on` `click`。
- en: Note
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Adding custom buttons will not work in Dnotebook, so we are going to do this
    in an HTML file. You can set up an HTML file with a Plotly script, as we demonstrated
    in the *Using Plotly.js via a script tag* section.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dnotebook中添加自定义按钮将不起作用，因此我们将在HTML文件中进行操作。您可以设置一个带有Plotly脚本的HTML文件，就像我们在*通过脚本标签使用Plotly.js*部分中演示的那样。
- en: 'In the body section of your HTML file, add the following code:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的HTML文件的body部分中，添加以下代码：
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Save and open the preceding HTML file in the browser and click on the button
    you just created. It should display an alert with the text you specified, similar
    to the one shown in the following screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并在浏览器中打开上述HTML文件，然后单击您刚刚创建的按钮。它应该显示一个带有您指定的文本的警报，类似于下面截图中显示的内容：
- en: '![Figure 5.9 – Chart with a custom button'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.9 - 带有自定义按钮的图表'
- en: '](img/B17076_5_09.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_09.jpg)'
- en: Figure 5.9 – Chart with a custom button
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.9 - 带有自定义按钮的图表
- en: 'In the code snippet we showed previously, notice the `modeBarButtonsToAdd`
    configuration option. This option is where we defined the button to add, as well
    as what happens when we click on it. The main properties you can specify when
    creating custom buttons are listed here:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前展示的代码片段中，注意`modeBarButtonsToAdd`配置选项。这个选项是我们定义要添加的按钮以及点击它时发生的事情的地方。创建自定义按钮时可以指定的主要属性列在这里：
- en: '`name`: The name of the button.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：按钮的名称。'
- en: '`icon`: The icon/image that is shown in the modebar. This can be a custom icon
    or any built-in Plotly icon ([https://github.com/plotly/plotly.js/blob/master/src/fonts/ploticon.js](https://github.com/plotly/plotly.js/blob/master/src/fonts/ploticon.js)).'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icon`：显示在模式栏中的图标/图片。这可以是自定义图标或任何内置的Plotly图标（[https://github.com/plotly/plotly.js/blob/master/src/fonts/ploticon.js](https://github.com/plotly/plotly.js/blob/master/src/fonts/ploticon.js)）。'
- en: '`click`: This defines what happens when you click the button. Here, you can
    specify any JavaScript function or even change the behavior of the chart.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`click`：定义单击按钮时发生的情况。在这里，您可以指定任何JavaScript函数，甚至更改图表的行为。'
- en: Next, let's see how to make a static chart.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何制作静态图表。
- en: Making a static chart
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 制作静态图表
- en: 'By default, Plotly charts are interactive. If you want to make them static,
    then you can specify the following option in the `config` object:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Plotly图表是交互式的。如果要使它们静态，可以在 `config` 对象中指定以下选项：
- en: '[PRE13]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Static charts can be useful when we only want to display a chart with a distracting
    interaction.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们只想显示一个没有干扰交互的图表时，静态图表是很有用的。
- en: Next, we'll show you how to create charts that are responsive.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将向您展示如何创建响应式图表。
- en: Making a responsive chart
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 制作响应式图表
- en: 'To make a chart responsive, such that it can automatically resize alongside
    the window where it is displayed, you can set the `responsive` property to `true`,
    as shown in the following code snippet:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要使图表响应式，使其能够自动调整大小以适应显示的窗口，可以将 `responsive` 属性设置为 `true`，就像下面的代码片段中所示：
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Responsive charts are useful when you're creating web pages that will be shown
    across different screen sizes.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式图表在创建将在不同屏幕尺寸上显示的网页时非常有用。
- en: In the next section, we'll show you how to download and set download options
    in your charts.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将向您展示如何下载并设置图表的下载选项。
- en: Customizing download plot options
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义下载图表选项
- en: By default, when the modebar is shown, you can save a Plotly chart as a **Portable
    Network Graphics** (**PNG**) file. This can be customized, and you can set the
    download image type, as well as other properties such as filename, height, width,
    and so on.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当显示模式栏时，可以将Plotly图表保存为**便携式网络图形**（**PNG**）文件。这可以进行自定义，您可以设置下载图像类型，以及其他属性，如文件名、高度、宽度等。
- en: 'To achieve this, you can set the `toImageButtonOptions` property in the `config`
    object, as we demonstrate in the following code snippet:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，您可以在 `config` 对象中设置 `toImageButtonOptions` 属性，就像我们在下面的代码片段中演示的那样：
- en: '[PRE15]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: And finally, in the next section, we'll demonstrate how to change the locale
    of your charts.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在下一节中，我们将演示如何将图表的区域设置更改为其他语言。
- en: Changing the default locale
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改默认区域设置
- en: A locale is important when making charts for people speaking other languages.
    This can greatly improve the interpretability of your charts.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在为讲其他语言的人制作图表时，区域设置是很重要的。这可以极大地提高图表的可解释性。
- en: 'Following these next steps, we''ll change the default locale from English to
    French:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 按照下面的步骤，我们将把默认区域设置从英语更改为法语：
- en: 'Get the specific locale and add it to your HTML file (or load it using `load_scripts`
    in Dnotebook), as shown in the following code snippet:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取特定的区域设置，并将其添加到您的HTML文件中（或者在Dnotebook中使用 `load_scripts` 加载它），就像下面的代码片段中所示的那样：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In Dnotebook, this can be done using `load_package`, as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dnotebook中，可以使用 `load_package` 来完成这个操作，如下所示：
- en: '[PRE17]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In your `config` object, specify the locale, as shown in the following code
    snippet:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的 `config` 对象中，指定区域设置，就像下面的代码片段中所示的那样：
- en: '[PRE18]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s see a complete example with the corresponding output. Add the following
    code to the body of your HTML file:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个完整的示例及相应的输出。将以下代码添加到HTML文件的主体中：
- en: '[PRE19]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Loading the HTML page in the browser displays the following chart, with `locale`
    set to French:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中加载HTML页面会显示以下图表，其中 `locale` 设置为法语：
- en: '![Figure 5.10 – Chart with locale set to French'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.10 - 区域设置为法语的图表'
- en: '](img/B17076_5_10.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_10.jpg)'
- en: Figure 5.10 – Chart with locale set to French
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.10 - 区域设置为法语的图表
- en: 'Now you know how to configure your plots, we''ll move on to another important
    aspect of chart configuration: **layout**.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何配置您的图表，我们将继续讨论图表配置的另一个重要方面：**布局**。
- en: Plotly layout
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Plotly布局
- en: '`layout` ([https://plotly.com/javascript/reference/layout/](https://plotly.com/javascript/reference/layout/))
    is the third argument passed to the `Plotly.newPlot` function. It is used to configure
    the area/layout where a chart is drawn, as well as properties such as the title,
    text, legend, and so on.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`layout` ([https://plotly.com/javascript/reference/layout/](https://plotly.com/javascript/reference/layout/))
    是传递给 `Plotly.newPlot` 函数的第三个参数。它用于配置绘制图表的区域/布局，以及标题、文本、图例等属性。'
- en: There are six layout properties that you can set—title, legend, margins, size,
    fonts, and colors. We'll demonstrate how to use them, with examples.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 有六个布局属性可以设置——标题、图例、边距、大小、字体和颜色。我们将演示如何使用它们，并附有示例。
- en: Configuring chart title
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置图表标题
- en: 'The `title` property configures the chart title, which is the text shown at
    the top of a chart. To add a title, simply pass the text to the `title` property
    in the `layout` object, as demonstrated in the following code snippet:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`title` 属性配置图表标题，即显示在图表顶部的文本。要添加标题，只需将文本传递给 `layout` 对象中的 `title` 属性，就像下面的代码片段中演示的那样：'
- en: '[PRE20]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To be more explicit, especially if you need to configure how the title text
    is positioned, then you can set the `text` property of `title`, as we show in
    the following code snippet:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要更加明确，特别是如果需要配置标题文本的位置，可以设置 `title` 的 `text` 属性，就像下面的代码片段中所示的那样：
- en: '[PRE21]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Using the preceding format, we can easily configure other properties such as
    title position using other properties, as outlined here:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述格式，我们可以轻松地配置其他属性，比如使用其他属性来设置标题位置，如下所述：
- en: '`x`: A number between 0 and 1 inclusive and used to set the `x` position of
    the title text with respect to the container where it''s displayed.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x`：一个介于0和1之间的数字，用于设置标题文本相对于显示它的容器的 `x` 位置。'
- en: '`y`: Also a number between 0 and 1 inclusive and used to set the `y` position
    of the title text with respect to the container where it''s displayed.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y`：也是一个介于0和1之间的数字，用于设置标题文本相对于显示它的容器的`y`位置。'
- en: '`xanchor`: This can be one of `auto`, `left`, `center`, or `right` alignment.
    It sets the title''s horizontal alignment with respect to its `x` position.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xanchor`：可以是`auto`，`left`，`center`或`right`对齐。它设置标题相对于其`x`位置的水平对齐。'
- en: '`yanchor`: This can be one of `auto`, `top`, `middle`, or `bottom` alignment.
    It sets the title''s vertical alignment with respect to its `y` position.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`yanchor`：可以是`auto`，`top`，`middle`或`bottom`对齐。它设置标题相对于其`y`位置的垂直对齐。'
- en: 'Let''s see an example of configuring `title` to show it in the top-right corner
    of a chart, as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个将`title`配置为显示在图表右上角的示例，如下所示：
- en: '[PRE22]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This gives the following output:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.11 – Chart with title configured to top right'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.11 - 标题配置为右上角的图表'
- en: '](img/B17076_5_11.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_11.jpg)'
- en: Figure 5.11 – Chart with title configured to top right
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.11 - 标题配置为右上角的图表
- en: 'You can also set the **padding** of the title. The padding can accept the following
    parameters:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以设置标题的**填充**。填充可以接受以下参数：
- en: '`t`: Sets the top padding of the title'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t`：设置标题的顶部填充'
- en: '`b`: Sets the bottom padding of the title'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`b`：设置标题的底部填充'
- en: '`r`: Sets the right padding and will only work when the `xanchor` property
    is set to `right`'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`r`：设置右填充，仅在`xanchor`属性设置为`right`时有效'
- en: '`l`: Sets the left padding and will only work when the `xanchor` property is
    set to `left`'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`l`：设置左填充，仅在`xanchor`属性设置为`left`时有效'
- en: 'For example, to set the `right` padding of the title, you can set the `xanchor`
    property to `right` and then configure the `r` property of `pad`, as shown in
    the following code snippet:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要设置标题的`right`填充，您可以将`xanchor`属性设置为`right`，然后配置`pad`的`r`属性，如下面的代码片段所示：
- en: '[PRE23]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Note that the padding parameters are in `100` in the preceding code snippet
    means 100px.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前面代码片段中填充参数为`100`表示100px。
- en: In the next section, we will take a look at configuring the legend of a chart.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看看如何配置图表的图例。
- en: Configuring Plotly legends
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置Plotly图例
- en: A legend describes the data displayed in a chart. Legends are very important
    when you're displaying more than one form of data in a single chart.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图例描述了图表中显示的数据。当您在单个图表中显示多种形式的数据时，图例非常重要。
- en: 'By default, Plotly shows a legend when you have more than one trace in a chart.
    You can also explicitly show a legend by setting the `showLegend` property of
    `layout` to `true`, as illustrated in the following code snippet:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当图表中有多个数据迹时，Plotly会显示一个图例。您也可以通过将`layout`的`showLegend`属性显式设置为`true`来显示图例，如下面的代码片段所示：
- en: '[PRE24]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Once the legend is activated, you can customize how it is displayed by setting
    the following properties:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦图例被激活，您可以通过设置以下属性来自定义它的显示方式：
- en: '`bgcolor`: Sets the background color of the legend. By default, it is set to
    `#fff` (white).'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bgcolor`：设置图例的背景颜色。默认情况下，它设置为`#fff`（白色）。'
- en: '`bordercolor`: Sets the color of the border enclosing the legend.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bordercolor`：设置图例边框的颜色。'
- en: '`borderwidth`: Sets the width (in px) of the border enclosing the legend.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`borderwidth`：设置图例边框的宽度（以px为单位）。'
- en: '`font`: An object with the following properties:'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font`：一个具有以下属性的对象：'
- en: 'a) `family`: Any supported HTML font family.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: a) `family`：任何支持的HTML字体系列。
- en: 'b) `size`: The size of the legend text.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: b) `size`：图例文本的大小。
- en: 'c) `color`: The color of the legend text.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: c) `color`：图例文本的颜色。
- en: 'In the following code snippet, we show an example of using these properties
    to configure your legend:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码片段中，我们展示了使用这些属性来配置图例的示例：
- en: '[PRE25]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The preceding code gives the following output:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码产生以下输出：
- en: '![Figure 5.12 – Chart showing legend with custom configuration'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.12 - 显示自定义配置的图例'
- en: '](img/B17076_5_12.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_12.jpg)'
- en: Figure 5.12 – Chart showing legend with custom configuration
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.12 - 显示自定义配置的图例
- en: Next, we show how to configure the margin of the overall layout.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将展示如何配置整体布局的边距。
- en: Configuring layout margins
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置布局边距
- en: 'The `margin` property configures the position of the chart on the screen. It
    supports all margin properties (`l`, `r`, `t`, and `b`). In the following code
    snippet, we use all four properties to demonstrate setting layout margins:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`margin`属性配置图表在屏幕上的位置。它支持所有的margin属性（`l`，`r`，`t`和`b`）。在下面的代码片段中，我们使用所有四个属性来演示设置布局边距：'
- en: '[PRE26]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This gives the following output:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.13 – Chart with margin configured'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.13 - 配置了边距的图表'
- en: '](img/B17076_5_13.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_13.jpg)'
- en: Figure 5.13 – Chart with margin configured
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.13 - 配置了边距的图表
- en: Notice the space around the chart in the preceding screenshot? That is the set
    margin. It is important to note that the margin is in px as well.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 注意前面截图中图表周围的空间？那就是设置的边距。重要的是要注意，边距也是以px为单位的。
- en: Next, we'll look at setting the layout size.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何设置布局大小。
- en: Configuring layout size
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置布局大小
- en: 'Sometimes, we may want a bigger or a smaller layout, and this can be configured
    using the `width`, `height`, or—conveniently— the `autosize` property, as we demonstrate
    in the following code snippet:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们可能希望有一个更大或更小的布局，可以使用`width`，`height`或者方便的`autosize`属性进行配置，如下面的代码片段所示：
- en: '[PRE27]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This gives the following output:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.14 – Chart with size configured'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.14 - 配置了大小的图表'
- en: '](img/B17076_5_14.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_14.jpg)'
- en: Figure 5.14 – Chart with size configured
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.14 - 配置了大小的图表
- en: The `autosize` property can be set to `true` when we want Plotly to automatically
    set the size of the layout.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望Plotly自动设置布局的大小时，`autosize`属性可以设置为`true`。
- en: Note
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To see other properties that can be configured in `layout`, you can visit Plotly''s
    official API reference here: [https://plotly.com/javascript/reference/layout](https://plotly.com/javascript/reference/layout).'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看可以在`layout`中配置的其他属性，您可以访问Plotly的官方API参考页面：[https://plotly.com/javascript/reference/layout](https://plotly.com/javascript/reference/layout)。
- en: In the next section, we'll show you how to make different types of charts based
    on the information you want to convey.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将向您展示如何根据您想要传达的信息制作不同类型的图表。
- en: Creating basic charts with Plotly.js
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建基本图表
- en: 'Plotly.js supports many basic charts that can be quickly used to convey information.
    Some examples of basic charts available in Plotly are scatter plots, line, bar,
    pie and bubble charts, dot plots, treemaps, tables, and so on. You can find a
    complete list of supported basic charts here: [https://plotly.com/javascript/basic-charts/](https://plotly.com/javascript/basic-charts/).'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly.js支持许多基本图表，可以快速用于传达信息。Plotly中可用的一些基本图表示例包括散点图、线图、条形图、饼图、气泡图、点图、树状图、表格等。您可以在这里找到支持的基本图表的完整列表：[https://plotly.com/javascript/basic-charts/](https://plotly.com/javascript/basic-charts/)。
- en: In this section, we will cover some basic charts such as scatter plots, bar
    charts, and bubble charts.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一些基本图表，如散点图、条形图和气泡图。
- en: First, we'll start with scatter plots.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从散点图开始。
- en: Creating a scatter plot with Plotly.js
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建散点图
- en: 'A **scatter plot** is typically used to plot two variables against each other.
    The plot is displayed as a collection of points, hence the name *scatter plot*.
    The following screenshot shows an example of a scatter plot:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**散点图**通常用于将两个变量相互绘制。该图显示为一组点，因此称为*散点图*。以下截图显示了散点图的示例：'
- en: '![Figure 5.15 – Example of a scatter plot showing Fare against Age margin'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.15 - 散点图示例，显示票价与年龄间的边距'
- en: '](img/B17076_5_15.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_15.jpg)'
- en: Figure 5.15 – Example of a scatter plot showing Fare against Age margin
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.15 - 散点图示例，显示票价与年龄间的边距
- en: 'To make a scatter plot using Plotly, you simply specify the plot type, as we
    show in the following example:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Plotly制作散点图，您只需指定图表类型，就像我们在下面的示例中所示的那样：
- en: '[PRE28]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This gives the following output:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出了以下输出：
- en: '![Figure 5.16 – Example scatter plot of sales versus margin'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.16 - 销售与边距的散点图示例'
- en: '](img/B17076_5_16.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_16.jpg)'
- en: Figure 5.16 – Example scatter plot of sales versus margin
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.16 - 销售与边距的散点图示例
- en: 'By default, the points are joined together using a line. You can change this
    behavior by setting a mode type. The mode type can be any of the following:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，点是使用线连接在一起的。您可以通过设置模式类型来更改此行为。模式类型可以是以下任何一种：
- en: '`markers`'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`标记`'
- en: '`lines`'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`线`'
- en: '`text`'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`文本`'
- en: '`none`'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`无`'
- en: You can also use more than one mode by joining them together with a plus sign—for
    example, `markers+text+lines` or `markers+lines`.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用多种模式，通过加号连接它们在一起，例如，`标记+文本+线`或`标记+线`。
- en: 'In the following example, we use both `markers` and `text` as our mode type:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们将`标记`和`文本`作为我们的模式类型：
- en: '[PRE29]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This gives the following output:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出了以下输出：
- en: '![Figure 5.17 – Scatter plot with mode type set to markers+text'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.17 - 散点图，模式类型设置为标记+文本'
- en: '](img/B17076_5_17.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_17.jpg)'
- en: Figure 5.17 – Scatter plot with mode type set to markers+text
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.17 - 散点图，模式类型设置为标记+文本
- en: 'As mentioned earlier, you can plot more than one scatter plot in a single chart,
    and each trace can be configured as required. In the following example, we plot
    three scatter plots with varying modes configured:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，您可以在单个图表中绘制多个散点图，并且可以根据需要配置每个轨迹。在下面的示例中，我们绘制了三个散点图，并配置了不同的模式：
- en: '[PRE30]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元会得到以下输出：
- en: '![Figure 5.18 – Scatter plot with three traces'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.18 - 散点图，带有三个轨迹'
- en: '](img/B17076_5_18.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_18.jpg)'
- en: Figure 5.18 – Scatter plot with three traces
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.18 - 散点图，带有三个轨迹
- en: Now you have learned the concept of basic charts in this section, you can easily
    create scatter plots from custom data points and customize the size using the
    required properties.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经在本节中学习了基本图表的概念，您可以轻松地根据自定义数据点创建散点图，并使用所需的属性自定义大小。
- en: Next, we'll briefly look at bar charts.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将简要介绍条形图。
- en: Creating bar charts
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建条形图
- en: A bar chart is another popular type of chart available in Plotly.js. It is used
    to show the relationship between data points using a rectangular bar, with heights
    or lengths proportional to the values they represent. Bar charts are mostly used
    for plotting **categorical data**.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图是Plotly.js中提供的另一种流行类型的图表。它用于显示使用矩形条之间的高度或长度与它们代表的值成比例的数据点之间的关系。条形图主要用于绘制**分类数据**。
- en: Note
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Categorical data or a categorical variable is a variable with a fixed or limited
    number of possible values. The letters of the English alphabet are an example
    of categorical data.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 分类数据或分类变量是具有固定或有限数量可能值的变量。英文字母就是分类数据的一个例子。
- en: 'In order to make a bar chart in Plotly.js, you pass a categorical data point
    with corresponding bar heights/length and then set the type to `bar`, as shown
    in the following example:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Plotly.js中制作条形图，您需要传递一个具有相应条高度/长度的分类数据点，然后将类型设置为`bar`，就像下面的示例中所示的那样：
- en: '[PRE31]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元会得到以下输出：
- en: '![Figure 5.19 – Simple bar chart with four variables'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.19 - 带有四个变量的简单条形图'
- en: '](img/B17076_5_19.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_19.jpg)'
- en: Figure 5.19 – Simple bar chart with four variables
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.19 - 带有四个变量的简单条形图
- en: 'You can plot more than one bar chart in a single layout by creating multiple
    traces and passing them as an array. For example, in the following code snippet,
    we create two traces and a plot:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在单个布局中绘制多个条形图，方法是创建多个轨迹并将它们作为数组传递。例如，在下面的代码片段中，我们创建了两个轨迹和一个图表：
- en: '[PRE32]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元会得到以下输出：
- en: '![Figure 5.20 – A bar chart with two traces'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.20 - 带有两个轨迹的条形图'
- en: '](img/B17076_5_20.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_20.jpg)'
- en: Figure 5.20 – A bar chart with two traces
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.20 - 带有两个轨迹的条形图
- en: 'When plotting multiple traces within the same category, you can specify a `barmode`
    property. The `barmode` property can be one of `stack` or `group` mode. For example,
    in the following code snippet, we make a bar chart of two traces with the same
    categories in `stack` mode:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一类别内绘制多个跟踪时，可以指定`barmode`属性。`barmode`属性可以是`stack`或`group`模式之一。例如，在下面的代码片段中，我们以`stack`模式制作了两个跟踪的条形图：
- en: '[PRE33]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.21 – A bar chart with two traces in stack mode'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.21 – 两个跟踪的堆叠模式条形图'
- en: '](img/B17076_5_21.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_21.jpg)'
- en: Figure 5.21 – A bar chart with two traces in stack mode
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.21 – 两个跟踪的堆叠模式条形图
- en: 'In the following code snippet, we change the `barmode` property to `group`
    (default mode):'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码片段中，我们将`barmode`属性更改为`group`（默认模式）：
- en: '[PRE34]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'This results in the following output:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.22 – A bar chart with two traces in group mode'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.22 – 两个跟踪的组模式条形图'
- en: '](img/B17076_5_22.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_22.jpg)'
- en: Figure 5.22 – A bar chart with two traces in group mode
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.22 – 两个跟踪的组模式条形图
- en: 'There are many other options you can specify when making bar charts, but we
    will not cover all of them in this section. You can see all configuration options,
    as well as clear examples of creating good bar charts, in the official documentation
    here: [https://plotly.com/javascript/bar-charts/](https://plotly.com/javascript/bar-charts/).'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在制作条形图时指定许多其他选项，但我们在本节中不会覆盖所有选项。您可以在官方文档中查看所有配置选项，以及创建良好条形图的清晰示例：[https://plotly.com/javascript/bar-charts/](https://plotly.com/javascript/bar-charts/)。
- en: In the following section, we'll briefly cover bubble charts.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将简要介绍气泡图。
- en: Creating bubble charts
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建气泡图
- en: 'A bubble chart is another very popular type of chart that can be used to cover
    information. It is basically an extension of a scatter plot, with point sizes
    specified. Let''s look at the following code example:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 气泡图是另一种非常受欢迎的图表类型，可用于覆盖信息。它基本上是散点图的扩展，指定了点的大小。让我们看下面的代码示例：
- en: '[PRE35]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.23 – A simple bubble chart'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.23 – 一个简单的气泡图'
- en: '](img/B17076_5_23.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_23.jpg)'
- en: Figure 5.23 – A simple bubble chart
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.23 – 一个简单的气泡图
- en: In the previous code snippet for a bubble chart, you can see that the main changes
    are the mode and the markers with sizes specified. The sizes are mapped one-to-one
    with the points, and if you want to apply sizes to each bubble, you must specify
    the size.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在气泡图的上一个代码片段中，您可以看到主要更改是模式和指定大小的标记。大小与点一一映射，如果要为每个气泡应用大小，必须指定大小。
- en: 'You can also change the colors of individual bubbles by passing an array of
    colors, as demonstrated in the following code snippet:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过传递颜色数组来更改单个气泡的颜色，如下面的代码片段所示：
- en: '[PRE36]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.24 – A simple bubble chart with different colors'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.24 – 一个简单的气泡图，带有不同的颜色'
- en: '](img/B17076_5_24.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_24.jpg)'
- en: Figure 5.24 – A simple bubble chart with different colors
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.24 – 一个简单的气泡图，带有不同的颜色
- en: 'Bubble charts are very useful, and if you need to know more or see some more
    advanced examples, you can check out the example page in Plotly''s documentation
    here: [https://plotly.com/javascript/bubble-charts/](https://plotly.com/javascript/bubble-charts/).'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 气泡图非常有用，如果您需要了解更多信息或查看一些更高级的示例，可以在Plotly的文档中查看示例页面：[https://plotly.com/javascript/bubble-charts/](https://plotly.com/javascript/bubble-charts/)。
- en: There are many other types of basic plots you can make, but sadly we can't cover
    all of them. The *Basic Charts* page ([https://plotly.com/javascript/basic-charts/](https://plotly.com/javascript/basic-charts/))
    in Plotly's documentation is a good place to learn how to make these awesome plots,
    and we encourage you to take a look.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在制作许多其他类型的基本图表，但遗憾的是我们无法覆盖所有。Plotly文档中的*基本图表*页面（[https://plotly.com/javascript/basic-charts/](https://plotly.com/javascript/basic-charts/)）是学习如何制作这些出色图表的好地方，我们鼓励您去看一看。
- en: In the next section, we'll introduce you to some statistical charts.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将向您介绍一些统计图表。
- en: Creating statistical charts with Plotly.js
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建统计图表
- en: Statistical charts are different types of charts used mostly by statisticians
    or data scientists to convey information. Some examples of statistical plots are
    histograms, box plots, violin plots, density plots, and so on. In the following
    sub-section, we'll briefly cover three types of statistical plots—histograms,
    box plots, and violin plots.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 统计图表是统计学家或数据科学家主要使用的不同类型的图表，用于传达信息。统计图的一些示例包括直方图、箱线图、小提琴图、密度图等。在下一小节中，我们将简要介绍三种类型的统计图表-直方图、箱线图和小提琴图。
- en: Creating histogram plots with Plotly.js
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建直方图图表
- en: A histogram is used to represent the distribution or spread of numerical/continuous
    data. A histogram is similar to a bar chart, and sometimes people may confuse
    the two. A simple way to differentiate between them is the type of data they can
    show. A histogram works with continuous variables instead of categorical variables,
    and only needs a single value as data.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图用于表示数值/连续数据的分布或传播。直方图类似于条形图，有时人们可能会混淆两者。区分它们的简单方法是它们可以显示的数据类型。直方图使用连续变量而不是分类变量，并且只需要一个值作为数据。
- en: 'In the following code snippet, we show an example of a histogram with generated
    random numbers:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码片段中，我们展示了一个使用生成的随机数的直方图示例：
- en: '[PRE37]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'In the preceding code snippet, you will observe that the `trace` property has
    only the `x` data specified. This is in line with what we mentioned earlier—histograms
    only need a single value. We also specify the plot type to be `histogram`, and
    running the code cell gives the following output:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码片段中，您将观察到`trace`属性仅指定了`x`数据。这符合我们之前提到的内容-直方图只需要一个值。我们还指定绘图类型为`histogram`，运行代码单元格会产生以下输出：
- en: '![Figure 5.25 – A histogram with random values of x'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.25 – 具有随机x值的直方图'
- en: '](img/B17076_5_25.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_25.jpg)'
- en: Figure 5.25 – A histogram with random values of x
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.25 – 具有随机x值的直方图
- en: 'Specifying a `y` value instead of `x` will result in a horizontal histogram,
    as shown in the following example:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 指定`y`值而不是`x`将导致水平直方图，如下例所示：
- en: '[PRE38]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.26 – A histogram with random values of y'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.26 – 具有随机y值的直方图'
- en: '](img/B17076_5_26.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_26.jpg)'
- en: Figure 5.26 – A histogram with random values of y
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.26 – 具有随机y值的直方图
- en: 'You can also create stacked, overlaid, or grouped histograms by creating multiple
    traces and setting the `barmode` property to `stack`, as demonstrated in the following
    example:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过创建多个踪迹并将`barmode`属性设置为`stack`来创建堆叠、叠加或分组的直方图，如下例所示：
- en: '[PRE39]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.27 – A histogram in stack mode'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.27 – 堆叠模式下的直方图'
- en: '](img/B17076_5_27.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_27.jpg)'
- en: Figure 5.27 – A histogram in stack mode
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.27 – 堆叠模式下的直方图
- en: 'By changing the `barmode` overlay, we get the following output:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 通过改变`barmode`叠加，我们得到以下输出：
- en: '[PRE40]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.28 – A histogram in overlay mode'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.28 – 叠加模式下的直方图'
- en: '](img/B17076_5_28.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_28.jpg)'
- en: Figure 5.28 – A histogram in overlay mode
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.28 – 叠加模式下的直方图
- en: 'To see more examples of plotting histograms as well as various configuration
    options, you can check out the histogram documentation page here: [https://plotly.com/javascript/histograms/](https://plotly.com/javascript/histograms/).'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看更多关于绘制直方图以及各种配置选项的示例，您可以在这里查看直方图文档页面：[https://plotly.com/javascript/histograms/](https://plotly.com/javascript/histograms/)。
- en: In the next section, we'll introduce box plots.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍箱线图。
- en: Creating box plots with Plotly.js
  id: totrans-337
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建箱线图
- en: A **box plot** is a very common type of plot in descriptive statistics. It graphically
    presents groups of numerical data using their quartiles. Box plots also have lines
    extending above or below them, called **whiskers**. The whiskers represent the
    variability outside the upper and lower **quartiles**.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '**箱线图**是描述性统计中非常常见的一种图表类型。它使用四分位数图形地呈现数值数据组。箱线图还有延伸在其上下的线，称为**须**。须代表上下**四分位数**之外的变异性。'
- en: Tip
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: A quartile divides a specified number of data points into four parts or quarters.
    The first quartile is the lowest 25% of data points, the second quartile is between
    25% and 50% (up to the median), the third quartile is 50% to 75% (above the median),
    and finally, the fourth quartile depicts the highest 25% of numbers.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 四分位数将指定数量的数据点分为四部分或四分之一。第一四分位数是最低的25%数据点，第二四分位数在25%和50%之间（达到中位数），第三四分位数在50%到75%之间（高于中位数），最后，第四四分位数表示最高的25%数字。
- en: 'The following diagram can help you better understand box plots:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的图表可以帮助你更好地理解箱线图：
- en: '![Figure 5.29 – Diagram depicting a box plot (source: Redrawn from https://aiaspirant.com/box-plot/)'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.29 – 描述箱线图的图表（来源：重新绘制自https://aiaspirant.com/box-plot/）'
- en: '](img/B17076_5_29.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_29.jpg)'
- en: 'Figure 5.29 – Diagram depicting a box plot (source: Redrawn from https://aiaspirant.com/box-plot/)'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.29 – 描述箱线图的图表（来源：重新绘制自https://aiaspirant.com/box-plot/）
- en: 'In Plotly.js, we make a box plot by passing our data and setting the `trace`
    type to `box`. We demonstrate this in the following example:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 在Plotly.js中，我们通过传递数据并将`trace`类型设置为`box`来制作箱线图。我们在下面的例子中演示了这一点：
- en: '[PRE41]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.30 – A simple box plot with two traces'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.30 – 一个简单的箱线图，有两个踪迹'
- en: '](img/B17076_5_30.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_30.jpg)'
- en: Figure 5.30 – A simple box plot with two traces
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.30 – 一个简单的箱线图，有两个踪迹
- en: We can configure the layout for box plots to be horizontal as opposed to the
    default vertical format. In the following section, we demonstrate how to do this.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将箱线图的布局配置为水平格式，而不是默认的垂直格式。在下一节中，我们将演示如何做到这一点。
- en: Making horizontal box plots
  id: totrans-352
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 制作水平箱线图
- en: 'You can make horizontal plots by specifying `x` values instead of `y` values
    in your traces. We demonstrate this in the following code snippet:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在踪迹中指定`x`值而不是`y`值，您可以制作水平图。我们在下面的代码片段中演示了这一点：
- en: '[PRE42]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.31 – A simple box plot with two traces'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.31 – 一个简单的箱线图，有两个踪迹'
- en: '](img/B17076_5_31.jpg)'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_31.jpg)'
- en: Figure 5.31 – A simple box plot with two traces
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.31 – 一个简单的箱线图，有两个踪迹
- en: You can also make grouped box plots, as we show in the following section.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以制作分组的箱线图，如下一节所示。
- en: Making grouped box plots
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 制作分组的箱线图
- en: 'Multiple traces sharing the same *x* axis can be grouped together into a single
    box plot, as shown in the following code snippet:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 多个共享相同*x*轴的踪迹可以被分组成一个单独的箱线图，如下面的代码片段所示：
- en: '[PRE43]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格会产生以下输出：
- en: '![Figure 5.32 – A box plot with three traces grouped together'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.32 – 三个踪迹分组在一起的箱线图'
- en: '](img/B17076_5_32.jpg)'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_32.jpg)'
- en: Figure 5.32 – A box plot with three traces grouped together
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.32 – 三个踪迹分组在一起的箱线图
- en: 'There are numerous other options you can set when making box plots, but we''ll
    leave you to read more about them in the box-plot documentation here: [https://plotly.com/javascript/box-plots/](https://plotly.com/javascript/box-plots/).'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在制作箱线图时设置许多其他选项，但我们将让您在此处阅读更多关于它们的箱线图文档：[https://plotly.com/javascript/box-plots/](https://plotly.com/javascript/box-plots/)。
- en: In the next section, we'll briefly introduce violin plots.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将简要介绍小提琴图。
- en: Creating violin plots with Plotly.js
  id: totrans-369
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Plotly.js创建小提琴图
- en: A **violin plot** is an extension of a box plot. It also describes data points
    using quartiles, just like a box plot, with just one major difference—the fact
    that it also shows the distribution of the data.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '**小提琴图**是箱线图的扩展。它也使用四分位数描述数据点，就像箱线图一样，只有一个主要区别——它还显示数据的分布。'
- en: 'The following diagram shows the common characteristics between a violin plot
    and a box plot:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了小提琴图和箱线图之间的共同特性：
- en: '![Figure 5.33 – Common properties between a violin plot and a box plot (Redrawn
    from https://towardsdatascience.com/violin-plots-explained-fb1d115e023d)'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.33 - 小提琴图和箱线图之间的共同特性（重新绘制自https://towardsdatascience.com/violin-plots-explained-fb1d115e023d)'
- en: '](img/B17076_5_33.jpg)'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_33.jpg)'
- en: Figure 5.33 – Common properties between a violin plot and a box plot (Redrawn
    from https://towardsdatascience.com/violin-plots-explained-fb1d115e023d)
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.33 - 小提琴图和箱线图之间的共同特性（重新绘制自https://towardsdatascience.com/violin-plots-explained-fb1d115e023d）
- en: The curved area of the violin plot shows the underlying distribution of the
    data and conveys more information than the box plot.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 小提琴图的曲线区域显示了数据的基础分布，并传达了比箱线图更多的信息。
- en: 'In Plotly, you can easily make a violin plot by just changing the type to `violin`.
    For example, in the following code snippet, we are reusing the code from the box-plot
    section, with just two main changes:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在Plotly中，您可以通过将类型更改为`violin`来轻松制作小提琴图。例如，在下面的代码片段中，我们正在重用箱线图部分的代码，只有两个主要更改：
- en: '[PRE44]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格将得到以下输出：
- en: '![Figure 5.34 – A violin plot with three traces grouped together'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.34 - 三个迹线组合在一起的小提琴图'
- en: '](img/B17076_5_34.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_34.jpg)'
- en: Figure 5.34 – A violin plot with three traces grouped together
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.34 - 三个迹线组合在一起的小提琴图
- en: 'Just as with other chart types, you can also configure how violin plots are
    displayed. For example, we can show the underlying box plot in a violin plot,
    as shown in the following code snippet:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他图表类型一样，您也可以配置小提琴图的显示方式。例如，我们可以在小提琴图中显示基础箱线图，如下面的代码片段所示：
- en: '[PRE45]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Running the preceding code cell gives the following output:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码单元格将得到以下输出：
- en: '![Figure 5.35 – A violin plot with underlying box plot shown'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.35 - 显示基础箱线图的小提琴图'
- en: '](img/B17076_5_35.jpg)'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17076_5_35.jpg)'
- en: Figure 5.35 – A violin plot with underlying box plot shown
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.35 - 显示基础箱线图的小提琴图
- en: 'To see other configuration options as well as some advanced settings, you can
    check out the documentation of a violin plot here: [https://plotly.com/javascript/violin/](https://plotly.com/javascript/violin/).'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看其他配置选项以及一些高级设置，您可以在这里查看小提琴图的文档：[https://plotly.com/javascript/violin/](https://plotly.com/javascript/violin/)。
- en: With that, we have to come to the end of this introductory section on Plotly.js.
    In the next chapter, we will show you how to use Danfo.js to quickly and easily
    make plots for any type of data supported by this particular library.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，我们已经结束了对Plotly.js的介绍部分。在下一章中，我们将向您展示如何使用Danfo.js快速轻松地为这个特定库支持的任何类型的数据制作图表。
- en: Summary
  id: totrans-390
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered plotting and visualization with Plotly.js. First,
    we gave a brief introduction to Plotly.js, including installation setup. Then,
    we moved on to chart configuration and layout customization. Finally, we showed
    you how to create some basic and statistical charts.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了使用Plotly.js进行绘图和可视化。首先，我们简要介绍了Plotly.js，包括安装设置。然后，我们转向图表配置和布局定制。最后，我们向您展示了如何创建一些基本和统计图表。
- en: The knowledge you have gained in this chapter will help you easily create interactive
    charts that you can embed in your websites or web applications.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 您在本章中所学到的知识将帮助您轻松创建交互式图表，您可以将其嵌入到您的网站或Web应用程序中。
- en: In the next chapter, we'll introduce data visualization with Danfo.js, and you'll
    see how, with knowledge of Plotly.js, you can easily create amazing charts directly
    from your DataFrame or Series.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍使用Danfo.js进行数据可视化，您将看到如何利用Plotly.js的知识，可以直接从您的DataFrame或Series轻松创建令人惊叹的图表。
