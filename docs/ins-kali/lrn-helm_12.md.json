["```\n$ git clone https://github.com/PacktPublishing/-Learn-Helm.git Learn-Helm\n```", "```\n    > choco install gnupg\n    ```", "```\n    $ brew install gpg\n    ```", "```\n    $ sudo apt install gnupg\n    ```", "```\n    $ sudo dnf install gnupg\n    ```", "```\n    $ gpg --generate-key\n    ```", "```\nhelm-v3.0.0-linux-amd64.tar.gz\nhelm-v3.0.0-linux-amd64.tar.gz.asc\n```", "```\n    $ curl -o **release_key.asc** https://keybase.io/bacongobbler/pgp_keys.asc\n    ```", "```\n    $ gpg --import release_key.asc\n    ```", "```\n    gpg: key 92AA783CBAAE8E3B: public key 'Matthew Fisher <matt.fisher@microsoft.com>' imported\n    gpg: Total number processed: 1\n    gpg:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 imported: 1\n    ```", "```\n    $ gpg --verify helm-v3.0.0-linux-amd64.tar.gz.asc\n    ```", "```\n    gpg: assuming signed data in 'helm-v3.0.0-linux-amd64.tar.gz'\n    gpg: Signature made Wed 13 Nov 2019 08:05:01 AM CST\n    gpg:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0using RSA key 967F8AC5E2216F9F4FD270AD92AA783CBAAE8E3B\n    gpg: Good signature from 'Matthew Fisher <matt.fisher@microsoft.com>' [unknown]\n    gpg: WARNING: This key is not certified with a trusted signature!\n    gpg:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0There is no indication that the signature belongs to the owner.\n    Primary key fingerprint: 967F 8AC5 E221 6F9F 4FD2\u00a0\u00a070AD 92AA 783C BAAE 8E3B\n    ```", "```\n    This release was signed with 92AA 783C BAAE 8E3B and **can be found** at @bacongobbler's keybase account.\n    ```", "```\n    $ gpg --sign-key 92AA783CBAAE8E3B # Last 64 bits of fingerprint\n    ```", "```\n    $ gpg --verify helm-v3.0.0-linux-amd64.tar.gz.asc\n    gpg: assuming signed data in 'helm-v3.0.0-linux-amd64.tar.gz'\n    gpg: Signature made Wed 13 Nov 2019 08:05:01 AM CST\n    gpg:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0using RSA key 967F8AC5E2216F9F4FD270AD92AA783CBAAE8E3B\n    gpg: checking the trustdb\n    gpg: marginals needed: 3\u00a0\u00a0completes needed: 1\u00a0\u00a0trust model: pgp\n    gpg: depth: 0\u00a0\u00a0valid:\u00a0\u00a0 2\u00a0\u00a0signed:\u00a0\u00a0 1\u00a0\u00a0trust: 0-, 0q, 0n, 0m, 0f, 2u\n    gpg: depth: 1\u00a0\u00a0valid:\u00a0\u00a0 1\u00a0\u00a0signed:\u00a0\u00a0 0\u00a0\u00a0trust: 1-, 0q, 0n, 0m, 0f, 0u\n    gpg: next trustdb check due at 2022-03-11\n    gpg: Good signature from 'Matthew Fisher <matt.fisher@microsoft.com>' [full]\n    ```", "```\n    $ gpg --version\n    gpg (GnuPG) 2.2.9\n    libgcrypt 1.8.3\n    Copyright (C) 2018 Free Software Foundation, Inc.\n    ```", "```\n    $ gpg --export > ~/.gnupg/pubring.gpg\n    $ gpg --export-secret-keys > ~/.gnupg/secring.gpg\n    ```", "```\n    $ helm package --sign --key '$KEY_NAME' --keyring ~/.gnupg/secring.gpg guestbook\n    ```", "```\n    guestbook-1.0.0.tgz\n    guestbook-1.0.0.tgz.prov\n    ```", "```\n    $ gpg --armor --export $KEY_NAME > pubkey.asc\n    ```", "```\n    $ helm verify --keyring ~/.gnupg/pubring.gpg guestbook-1.0.0.tgz\n    ```", "```\n$ helm install my-guestbook $CHART_REPO/guestbook --verify --keyring ~/.gnupg/pubring.gpg\n```", "```\nresources:\n\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0cpu: 500m\n\u00a0\u00a0\u00a0\u00a0memory: 2Gi\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n\u00a0\u00a0name: limits-per-container\nspec:\n\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0- max:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 4Gi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 500m\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 2Gi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: Container\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n\u00a0\u00a0name: limits-per-pvc\nspec:\n\u00a0\u00a0- max:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 4Gi\n\u00a0\u00a0\u00a0\u00a0type: PersistentVolumeClaim\n```", "```\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n\u00a0\u00a0name: pod-and-pvc-quota\nspec:\n\u00a0\u00a0hard:\n\u00a0\u00a0\u00a0\u00a0limits.cpu: '4'\n\u00a0\u00a0\u00a0\u00a0limits.memory: 8Gi\n\u00a0\u00a0\u00a0\u00a0requests.storage: 20Gi\n```", "```\npassword:ENC[AES256GCM,data:xhdUx7DVUG8bitGnqjGvPMygpw==,iv:3LR9KcttchCvZNpRKqE5LcXRyWD1I00v2kEAIl1ttco=,tag:9HEwxhT9s1pxo9lg19wyNg==,type:str]\n```", "```\n    $ kubectl create role guestbook-pod-viewer --resource=pods --verb=get,list -n chapter9\n    ```", "```\n    $ kubectl create sa guestbook -n chapter9\n    ```", "```\n    $ kubectl create rolebinding guestbook-pod-viewers --role=guestbook-pod-viewer --serviceaccount=chapter9:guestbook -n chapter9\n    ```", "```\n    serviceAccountName: guestbook\n    ```", "```\n    $ helm install my-guestbook Learn-Helm/helm-charts/charts/guestbook \\\n    --set serviceAccount.name=guestbook \\\n    --set serviceAccount.create=false \\\n    -n chapter9\n    ```", "```\n    $ kubectl auth can-i list pods --as=system:serviceaccount:chapter9:guestbook -n chapter9\n    ```", "```\n    $ kubectl can-i list deployments --as=system:serviceaccount:guestbook:guestbook -n chapter9\n    ```", "```\n    $ helm uninstall my-guestbook -n chapter9\n    ```", "```\n    $ minikube stop\n    ```", "```\n$ helm repo add $REPO_URL --username=<username> --password=<password>\n```", "```\nError: looks like '$REPO_URL' is not a valid chart repository or cannot be reached: Get $REPO_URL/index.yaml: x509: certificate signed by unknown authority\n```"]