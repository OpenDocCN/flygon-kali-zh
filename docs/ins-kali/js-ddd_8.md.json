["```js\n<form>\n  <label>\n    Check Me: <input type=\"checkbox\" id=\"check-me\"></input>\n  </label>\n  <button id=\"disable-me\">\n    I can be clicked if you checked the box\n  </button>\n</form>\n```", "```js\nwindow.onload = function () {\n  var checkMeBox = document.getElementById(\"check-me\")\n  var disableMeBtn = document.getElementById(\"disable-me\")\n\n  function checkBoxHandler() {\n    if(checkMeBox.checked) {\n        disableMeBtn.removeAttribute(\"disabled\")\n      } else {\n        disableMeBtn.setAttribute(\"disabled\", \"true\")\n      }\n    }\n\n  checkBoxHandler()\n  checkMeBox.onclick = checkBoxHandler\n}\n```", "```js\nwindow.App = Ember.Application.create()\n\nApp.Orc = Ember.Object.extend({\n  name: \"Garrazk\"\n})\n\nApp.Router.map(function () {\n  this.route(' index' , { path: ' /'  })\n})\n\nvar orc\n\nApp.IndexRoute = Ember.Route.extend({\n  templateName: ' orc' ,\n  controllerName: ' orc' ,\n  model: function() {\n    if(!orc) orc = App.Orc.create();\n    return orc\n  }\n});\n\nvar names = [ \"Yahg\", \"Hibub\", \"Crothu\", \"Rakgu\", \"Tarod\", \"Xoknath\", \"Gorgu\", \"Olmthu\", \"Olur\", \"Mug\" ]\n\nApp.OrcController = Ember.Controller.extend({\n  actions: {\n    rename: function () {\n      var newName = names[Math.floor(Math.random()*names.length)];\n      this.set(\"model.name\", newName)\n    }\n  }\n})\n```", "```js\n<html>\n  <head>\n    <script src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\n    <script src=\"http://builds.emberjs.com/release/ember-template-compiler.js\"></script>\n    <script src=\"http://builds.emberjs.com/release/ember.min.js\"></script>\n    <script src=\"/app.js\"></script>\n  </head>\n  <script type=\"text/x-handlebars\" data-template-name=\"orc\">\n    <p> ORC! {{ name }} </p>\n    <button {{action \"rename\"}}>Give me a Name!</button>\n  </script>\n</html>\n```", "```js\nvar express = require(\"express\")\nvar app = express()\n\napp.get(\"/rambo-5\", function (req, res) {\n  res.send(\"<p>Rambo 5 is the 5\\. best movie of the Rambo series</p>\")\n})\n\napp.use(express.static(' public' ));\n\nvar server = app.listen(3000, function () {\n  console.log(\"App started...\")\n})\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"/jquery.min.js\"></script>\n    <script src=\"/jquery.pjax.js\"></script>\n    <script>\n      $(document).ready(function () {\n        $(document).pjax(' a' , ' #container' )\n        var date = new Date()\n        $(\"#clock\").html(date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds())\n      })\n    </script>\n\n  </head>\n  <body>\n    <h1>About Rambo</h1>\n    <div id=\"container\">\n      Go to <a href=\"/rambo-5\">Rambo 5</a>.\n    </div>\n    <div>This page rendered at: <span id=\"clock\"></span></div>\n  </body>\n</html>\n```", "```js\nRhino 1.7 release 5 2015 01 29\njs> var file = new java.io.File(\"./test.txt\");\njs> importPackage(java.nio.file)\njs> Files.readAllLines(file.toPath())\n[this is a test text file]\n```", "```js\n> var fs = require(\"fs\")\n> fs.readFile(\"./test.txt\", \"utf8\", function (err, data) {\n... if(err) {\n..... return console.log(err)\n....}\n... console.log(data)\n..})\n> this is a test text file\n```", "```js\nvar car = new Car()\nvar configurator = new Configurator(car)\n\nconfigurator.bodyType(BodyTypes.CONVERTIBLE)\nconfigurator.engine(Engines.V6)\nconfigurator.addExtra(Extras.RADIO)\nconfigurator.addExtra(Extras.GPS)\n\nconfigurator.errors() // => {conflicts: [{ \"convertible\": \"v6\" }]}\n```", "```js\nconfigurator.engineConstraints = [\nnew Contstraint(BodyTypes.CONVERTIBLE, Engines.V8, Engines.V6_6L)\n]\n```"]