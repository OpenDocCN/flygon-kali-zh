- en: Chapter 8. What Are the Next Steps?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。下一步是什么？
- en: 'In this final chapter, we will look at the next steps you can take to monitor
    your containers, by talking about the benefits of adding alerts to your monitoring.
    Also, we will cover some different scenarios and also which type of monitoring
    is appropriate for each of them:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我们将探讨您可以采取的监视容器的下一步措施，讨论将警报添加到您的监视中的好处。此外，我们还将涵盖一些不同的场景，以及哪种类型的监视适用于其中的每种情况：
- en: Common problems (performance, availability, and so on) and which type of monitoring
    is best for your situation.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见问题（性能、可用性等）以及哪种类型的监视最适合您的情况。
- en: What are the benefits of alerting on the metrics you are collecting and what
    are the options?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您正在收集的指标上发出警报的好处是什么，有哪些选项？
- en: Some scenarios
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些场景
- en: To look at which type of monitoring you might want to implement for your container-based
    applications, we should work through a few different example configurations that
    your container-based applications could be deploying into. First, let's remind
    ourselves about Pets, Cattle, Chickens, and Snowflakes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 查看您可能想要为基于容器的应用程序实施哪种类型的监视，我们应该通过一些不同的示例配置来了解您的基于容器的应用程序可能部署的情况。首先，让我们提醒自己关于宠物、牛、鸡和雪花。
- en: Pets, Cattle, Chickens, and Snowflakes
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 宠物、牛、鸡和雪花
- en: Back in the [Chapter 1](part0014_split_000.html#DB7S1-fcf7b4d102f841bba77b823d677470e0
    "Chapter 1. Introduction to Docker Monitoring"), *Introduction to Docker Monitoring*,
    we spoke about Pets, Cattle, Chickens, and Snowflakes; in that chapter, we described
    what each term meant when it was applied to modern cloud deployments. Here, we
    will go into a little more detail about how the terms can be applied to your containers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 回到[第1章](part0014_split_000.html#DB7S1-fcf7b4d102f841bba77b823d677470e0 "第1章。Docker监视简介")*Docker监视简介*，在那一章中，我们谈到了宠物、牛、鸡和雪花；在那一章中，我们描述了这些术语在现代云部署中的含义。在这里，我们将更详细地讨论这些术语如何适用于您的容器。
- en: Pets
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 宠物
- en: For your containers to be considered a Pet, you will be more than likely to
    be running either a single or a small number of fixed containers on a designated
    host.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要将您的容器视为宠物，您很可能会在指定的主机上运行单个或少量固定容器。
- en: Each one of these containers could be considered a single point of failure;
    if any one of them goes down, it will more than likely result in errors for your
    application. Worst still, if the host machine goes down for any reason, your entire
    application will be offline.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些容器中的每一个都可以被视为单点故障；如果它们中的任何一个出现问题，很可能会导致应用程序出现错误。更糟糕的是，如果主机出现任何问题，您的整个应用程序将处于离线状态。
- en: This is a typical deployment method for most of our first steps with Docker,
    and in no way should it be considered bad, frowned upon, or not recommend; as
    long as you are aware of the limitations, you will be fine.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在Docker的最初步骤中的典型部署方法，绝不应该被视为不好、不受欢迎或不推荐；只要您意识到了限制，您就会没问题。
- en: This pattern can also be used to describe most development environments, as
    you are constantly reviewing its health and tuning as needed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式也可以用来描述大多数开发环境，因为您不断地审查其健康状况并根据需要进行调整。
- en: You will more than likely be hosting the machine on your local computer or on
    a hosting service such as DigitalOcean ([https://www.digitalocean.com/](https://www.digitalocean.com/)).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您很可能会在本地计算机上或在DigitalOcean（[https://www.digitalocean.com/](https://www.digitalocean.com/)）等托管服务上托管该机器。
- en: Cattle
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 牛
- en: For the bulk of production or business critical deployments, you should aim
    to launch your containers in a configuration that allows them to automatically
    recover themselves after a failure, or, when more capacity is needed, additional
    containers are launched and then terminated when the scaling event is over.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大部分生产或业务关键的部署，你应该在一个允许它们在故障后自动恢复，或者在需要更多容量时启动额外容器并在扩展事件结束时终止它们的配置中启动你的容器。
- en: 'You will more than likely be using a public cloud-based service as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你很可能会使用以下公共云服务：
- en: 'Amazon EC2 Container Service: [https://aws.amazon.com/ecs/](https://aws.amazon.com/ecs/)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '亚马逊EC2容器服务: [https://aws.amazon.com/ecs/](https://aws.amazon.com/ecs/)'
- en: 'Google Container Engine: [https://cloud.google.com/container-engine/](https://cloud.google.com/container-engine/)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google容器引擎: [https://cloud.google.com/container-engine/](https://cloud.google.com/container-engine/)'
- en: 'Joyent Triton: [https://www.joyent.com/blog/understanding-triton-containers/](https://www.joyent.com/blog/understanding-triton-containers/)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Joyent Triton: [https://www.joyent.com/blog/understanding-triton-containers/](https://www.joyent.com/blog/understanding-triton-containers/)'
- en: 'Alternatively, you will be hosting on your own servers using a Docker-friendly
    and cluster-aware operating system as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你将在自己的服务器上托管，使用一个友好于Docker并且具有集群意识的操作系统，如下：
- en: 'CoreOS: [https://coreos.com/](https://coreos.com/)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CoreOS: [https://coreos.com/](https://coreos.com/)'
- en: 'RancherOS: [http://rancher.com/rancher-os/](http://rancher.com/rancher-os/)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'RancherOS: [http://rancher.com/rancher-os/](http://rancher.com/rancher-os/)'
- en: You won't care so much as to where a container is launched within your cluster
    of hosts, as long as you can route traffic to it. To add more capacity to the
    cluster, you will be bringing up additional hosts when needed and removing them
    from the cluster when not needed in order to save on costs.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你不会太在乎容器在主机集群中的启动位置，只要你能将流量路由到它。为了增加集群的容量，当需要时你将启动额外的主机，并在不需要时将它们从集群中移除以节省成本。
- en: Chickens
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 鸡
- en: 'Its more than likely you will be using containers to launch, process data,
    and then terminate. This can happen anytime from once a day to several times a
    minute. You will be using a distributed scheduler as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能你会使用容器来启动、处理数据，然后终止。这可能随时发生，从每天一次到每分钟几次。你将使用分布式调度器如下：
- en: 'Kubernetes by Google: [http://kubernetes.io/](http://kubernetes.io/)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google的Kubernetes: [http://kubernetes.io/](http://kubernetes.io/)'
- en: 'Apache Mesos: [http://mesos.apache.org/](http://mesos.apache.org/)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Apache Mesos: [http://mesos.apache.org/](http://mesos.apache.org/)'
- en: Because of this, you will have a large number of containers launching and terminating
    within your cluster; you definitely won't care about where a container is launched
    or even how traffic is routed to it, as long as your data is processed correctly
    and passed back to your application.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你将在你的集群中启动和终止大量的容器；你绝对不会在乎容器在哪里启动，甚至不会在乎流量如何路由到它，只要你的数据被正确处理并传递回你的应用程序。
- en: Like the cluster described in the *Cattle* section's description, hosts will
    be added and removed automatically, probably in response to scheduled peaks such
    as end of month reporting or seasonal sales and so on.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 就像“牛”部分描述的集群一样，主机将会自动添加和删除，可能是为了响应计划内的高峰，比如月末报告或季节性销售等。
- en: Snowflakes
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 雪花
- en: I hope one of the things you took away from the first chapter is that if you
    have any servers or services that you consider being Snowflakes, then you should
    do something to retire them as soon as possible.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你从第一章中得到的一个观点是，如果你有任何你认为是雪花的服务器或服务，那么你应该尽快采取措施将它们退役。
- en: Luckily, due to the way the containerizing of your applications works, you should
    never be able to create a snowflake using Docker, as your containerized environment
    should always be reproducible, either because you have the Docker file (everyone
    makes backups right?) or you have a working copy of the container image because
    you have exported the container as a whole using the built-in tools.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，由于应用程序容器化的方式，您永远不应该能够使用Docker创建Snowflake，因为您的容器化环境应始终是可重现的，要么是因为您有Docker文件（每个人都会备份，对吧？），要么是因为您已经使用内置工具将容器作为整体导出为工作副本。
- en: Note
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Sometimes it may not be possible to create a container using a Docker file.
    Instead, you can backup or migrate your containers by using the export command.
    For more information on exporting your containers, see the following URL:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 有时可能无法使用Docker文件创建容器。相反，您可以使用导出命令备份或迁移容器。有关导出容器的更多信息，请参阅以下网址：
- en: '[https://docs.docker.com/reference/commandline/export/](https://docs.docker.com/reference/commandline/export/)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.docker.com/reference/commandline/export/](https://docs.docker.com/reference/commandline/export/)'
- en: If you find yourself in this position, let me be the first to congratulate you
    on mitigating a future disaster by promoting your Snowflake into a Pet or even
    Cattle ahead of any problems.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现自己处于这种位置，请让我第一个祝贺您通过将您的Snowflake提升为宠物甚至是牲畜，从而在任何问题出现之前减轻了未来的灾难。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Still running a Snowflake?**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**仍在运行Snowflake吗？**'
- en: If you find yourself still running a Snowflake server or service, I cannot stress
    enough that you look at documenting, migrating, or updating the Snowflake as soon
    as possible. There is no point in monitoring a service that may be impossible
    for you to recover. Remember that there are containers for old technologies, such
    as PHP4, if you really need to run them.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现自己仍在运行Snowflake服务器或服务，我再次强调，您应尽快查看文档、迁移或更新Snowflake。监视可能无法恢复的服务是没有意义的。请记住，如果您确实需要运行它们，旧技术（如PHP4）也有容器。
- en: Scenario one
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 情景一
- en: You are running a personal WordPress website using the official containers from
    the Docker Hub; the containers have been launched using a Docker Compose file
    like the one we have used several times throughout this book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您正在使用Docker Hub上的官方容器运行个人WordPress网站；容器是使用类似于我们在本书中多次使用的Docker Compose文件启动的。
- en: You have the Docker Compose file stored in a GitHub repository and you can take
    snapshots of the host machine as a backup. As it's your own blog, you are fine
    running it on a single cloud-based host.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您将Docker Compose文件存储在GitHub存储库中，并且可以对主机机器进行快照作为备份。由于这是您自己的博客，因此在单个基于云的主机上运行它是可以的。
- en: 'A suitable monitoring will be as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的监控将如下所示：
- en: Docker stats
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker stats
- en: Docker top
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker top
- en: Docker logs
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker日志
- en: cAdvisor
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cAdvisor
- en: Sysdig
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysdig
- en: As you are running a single host machine that you are treating as a backup,
    there is no real need for you to ship your log files to a central location as
    odds are your host machines; like the containers, its hosting will be online for
    months or possibly even years.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您正在运行一个将其视为备份的单个主机，因此您无需将日志文件发送到中央位置，因为您的主机机器的运行时间可能会达到数月甚至数年，就像容器一样。
- en: It is unlikely that you will need to dig too deeply into your containers' historical
    performance stats, as most of the tuning and troubleshooting will be done in real
    time as problems occur.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能您不需要深入了解容器的历史性能统计数据，因为大多数调整和故障排除将在实时发生问题时进行。
- en: With the monitoring tools suggested, you will be able to get a good insight
    into what is happening within your containers in real time, and to get more than
    enough information on processes that are consuming too much RAM and CPU, along
    with any error messages from within the containers.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用建议的监控工具，您将能够实时了解容器内发生的情况，并获得关于消耗过多RAM和CPU的进程以及容器内的任何错误消息的充分信息。
- en: You may want to enable a service such as Pingdom ([https://www.pingdom.com/](https://www.pingdom.com/))
    or Uptime Robot ([http://uptimerobot.com/](http://uptimerobot.com/)). These services
    poll your website every few minutes to ensure that the URL you configure them
    to, check whether its loading within a certain time or at all. If they detect
    any slowdown or failures with the page loading, they can be configured to send
    an initial alert to notify you that there is a potential issue, such as both the
    services mentioned have a free tier.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望启用像Pingdom（https://www.pingdom.com/）或Uptime Robot（http://uptimerobot.com/）这样的服务。这些服务每隔几分钟轮询您的网站，以确保您为其配置的URL在特定时间内或完全加载。如果它们检测到页面加载速度变慢或失败，它们可以配置为发送初始警报，以通知您存在潜在问题，例如上述两项服务都有免费套餐。
- en: Scenario two
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 情景二
- en: You are running a custom e-commerce application that needs to be highly available
    and also scale during your peak times. You are using a public cloud service and
    the toolset that comes with it to launch containers and route traffic to them.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您正在运行一个需要高可用性并且在高峰时期需要扩展的自定义电子商务应用程序。您正在使用公共云服务及其工具集来启动容器并将流量路由到它们。
- en: 'A suitable monitoring will be as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的监控将如下所示：
- en: cAdvisor + Prometheus
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cAdvisor + Prometheus
- en: Zabbix
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zabbix
- en: Sysdig Cloud
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysdig Cloud
- en: New Relic Server Monitoring
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的遗产服务器监控
- en: Datadog
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datadog
- en: ELK + Logspout
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ELK + Logspout
- en: Log Entries
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Log Entries
- en: Loggly
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Loggly
- en: With this scenario, there is a business need to not only be notified about container
    and host failures, but also to hold your monitoring data and logs away from your
    host servers so that you can properly review historical information. You may also
    need to keep logs for PCI compliance or internal auditing for a fixed period of
    time.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，不仅需要通知容器和主机故障，还需要将监控数据和日志保存在远离主机服务器的地方，以便您可以正确地查看历史信息。您可能还需要保留一段固定时间的日志以符合PCI合规性或内部审计要求。
- en: Depending on your budget, you can achieve this by hosting your own monitoring
    (Zabbix and Prometheus) and central logging (ELK) stacks somewhere within your
    infrastructure.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的预算，您可以在基础设施的某个地方托管自己的监控（Zabbix和Prometheus）和中央日志（ELK）堆栈。
- en: You can also choose to run a few different third-party tools such as combining
    tools that monitor performance, for example, Sysdig Cloud or Datadog, with a central
    logging service, such as Log Entries or Loggly.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择运行一些不同的第三方工具，例如结合监控性能的工具，例如Sysdig Cloud或Datadog，以及中央日志服务，例如Log Entries或Loggly。
- en: If appropriate, you can also run a combination of self-hosted and third-party
    tools.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果适用，您还可以运行自托管和第三方工具的组合。
- en: 'While the self-hosted option may appear to be the most budget-friendly option,
    there are some considerations to take into account, as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然自托管选项可能看起来是最符合预算的选择，但还有一些需要考虑的因素，如下所示：
- en: Your monitoring needs to be hosted away from your application. There is no point
    in having your monitoring installed on the same host as your application; what
    will alert you if the host fails?
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的监控需要远离您的应用程序。在与应用程序相同的主机上安装监控是没有意义的；如果主机失败，谁会通知您呢？
- en: Your monitoring needs to be highly available; do you have the infrastructure
    to do this? If your application needs to be highly available, then so does your
    monitoring.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的监控需要高可用性；你有这样的基础设施吗？如果你的应用程序需要高可用性，那么你的监控也需要。
- en: You need to have enough capacity. Do you have the capacity to be able to store
    log files and metrics going back a month, 6 months, or a year?
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要有足够的容量。你有足够的容量来存储一个月、六个月或一年的日志文件和指标吗？
- en: If you are going to have to invest in any of the preceding options, then it
    will be worth weighing up the costs of investing in both the infrastructure and
    the management of your own monitoring solution against using a third-party that
    will offer the preceding options as a service.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将不得不投资于前述任何选项，那么权衡投资于基础设施和自己的监控解决方案管理成本与使用第三方服务提供前述选项的成本将是值得的。
- en: If you are using a container-only operating system such as CoreOS or RancherOS,
    then you will need to choose a service whose agent or collector can be executed
    from within a container, as you will not be able to install the agent binaries
    directly on the OS.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用诸如CoreOS或RancherOS之类的仅容器操作系统，那么你将需要选择一个服务，其代理或收集器可以在容器内执行，因为你将无法直接在操作系统上安装代理二进制文件。
- en: You will also need to ensure that your host machine is configured to start the
    agents/collectors on boot. This will ensure that as soon as the host machine joins
    a cluster (which is typically when containers will start to popup on the host),
    it is already sending metrics to your chosen monitoring services.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要确保你的主机配置为在启动时启动代理/收集器。这将确保一旦主机加入集群（通常是容器开始在主机上弹出时），它已经向你选择的监控服务发送指标。
- en: Scenario three
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 情景三
- en: Your application launches a container each time your API is called from your
    frontend application; the container takes the user input from a database, processes
    it, and then passes the results back to your front end application. Once the data
    has been successfully processed, the container is terminated. You are using a
    distributed scheduling system to launch the containers.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 每次从前端应用程序调用API时，你的应用程序会启动一个容器；容器会从数据库中获取用户输入，处理它，然后将结果返回给前端应用程序。一旦数据被成功处理，容器就会被终止。你正在使用分布式调度系统来启动这些容器。
- en: 'A suitable monitoring will be as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的监控将如下所示：
- en: Zabbix
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zabbix
- en: Sysdig Cloud
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysdig Cloud
- en: Datadog
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datadog
- en: ELK + Logspout
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ELK + Logspout
- en: Log Entries
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Log Entries
- en: Loggly
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Loggly
- en: In this scenario, you more than likely do not want to monitor things such as
    CPU and RAM utilization. These containers after all should only be around for
    a few minutes, and also your scheduler will launch the container on the host machine
    where there is enough capacity for the task to execute.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你很可能不想监控诸如CPU和内存利用率之类的东西。毕竟，这些容器只会存在几分钟，而且你的调度器将在有足够容量执行任务的主机上启动容器。
- en: Instead, you will probably want to keep a record to verify that the container
    launched and terminated as expected. You will also want to make sure that you
    log the `STDOUT` and `STDERR` from the container while it is active, as once the
    container has been terminated, it will be impossible for you to get these messages
    back.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，你可能会想要保留一份记录，以验证容器是否按预期启动和终止。你还需要确保在容器处于活动状态时记录`STDOUT`和`STDERR`，因为一旦容器被终止，你将无法再获取这些消息。
- en: With the tools listed in the preceding points, you should be able to build some
    quite useful queries to get a detailed insight into how your short run processes
    are performing.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 通过前面列出的工具，你应该能够构建一些非常有用的查询，以深入了解你的短期进程的性能。
- en: For example, you will be able to get the average lifetime of a container, as
    you know the time the container was launched and when it was terminated; knowing
    this will then allow you to set a trigger to alert you if any containers are around
    for any longer than you would expect them to be.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你将能够获得容器的平均生命周期，因为你知道容器启动和终止的时间；知道这一点将允许你设置触发器，如果任何容器的存在时间超出你预期的时间，就会收到警报。
- en: A little more about alerting
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于警报的更多信息
- en: A lot of the tools we have looked at in this book offer at least some sort of
    basic alerting functionality; the million-dollar question is should you enable
    it?
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中我们看过的很多工具都提供了基本的警报功能；百万美元的问题是你应该启用它吗？
- en: A lot of this is dependent on the type of application you are running and how
    the containers have been deployed. As we have already mentioned a few times in
    this chapter, you should never really have a Snowflake container; this leaves
    us with Pets, Cattle, and Chickens.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 很大程度上取决于你运行的应用程序的类型以及容器的部署方式。正如我们在本章中已经多次提到的，你不应该真的有一个雪花容器；这让我们剩下了宠物、牛和鸡。
- en: Chickens
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 鸡
- en: As already discussed in the previous section, you probably don't need to worry
    about getting alerts for RAM, CPU, and hard drive performance on a cluster that
    is configured to run Chickens.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前一节已经讨论过的，你可能不需要担心在配置为运行鸡的集群上收到关于RAM、CPU和硬盘性能的警报。
- en: Your containers should not be up long enough to experience any real problems;
    however, should there be any unexpected spikes, your scheduler will probably have
    enough intelligence to distribute your containers to hosts that have the most
    available resources at that time.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你的容器不应该运行足够长的时间来遇到任何真正的问题；然而，如果出现任何意外的波动，你的调度器可能会有足够的智能来将你的容器分配到那些在那个时候有最多可用资源的主机上。
- en: You will need to know if any of your containers have been running longer than
    you expect them to be up; for example, a process in a container that normally
    takes no more than 60 seconds is still running after 5 minutes.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要知道你的任何容器是否运行时间超过你预期的时间；例如，一个容器中的进程通常不会超过60秒，但在5分钟后仍在运行。
- en: This not only means that there is a potential problem, it also means that you
    find yourself running hosts that only contain stale containers.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅意味着存在潜在问题，也意味着你发现自己在运行只包含过时容器的主机。
- en: Cattle and Pets
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 牛和宠物
- en: When it comes to setting up alerts on Cattle or Pets, you have a few options.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置牛或宠物的警报时，你有几个选项。
- en: You will more than likely want to receive alerts based on CPU and RAM utilization
    for both the host machine and the containers, as this could indicate a potential
    problem that could cause slow down within the application and also loss of business.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你很可能希望基于主机机器和容器的CPU和RAM利用率收到警报，因为这可能表明潜在问题，可能导致应用程序减速和业务损失。
- en: As mentioned previously, you will probably also want to be alerted if your application
    starts to serve the content that is unexpected. For example, a host and a container
    will quite happily sit there serving an application error.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，如果你的应用程序开始提供意外的内容，你可能也希望收到警报。例如，主机和容器可能会愉快地提供应用程序错误。
- en: You can use a service such as Pingdom, Zabbix, or New Relic to load a page and
    check for the content in the footer; if this content is missing, then an alert
    can be sent.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用Pingdom、Zabbix或New Relic等服务加载页面并检查页脚中的内容；如果缺少这些内容，就会发送警报。
- en: Depending on how fluid your infrastructure is, in a Cattle configuration, you
    will probably want to be alerted when containers spin up and down, as this will
    indicate periods of high traffic/transactions.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的基础架构的灵活性，在Cattle配置中，您可能希望在容器启动和关闭时收到警报，因为这将表明高流量/交易期间。
- en: Sending alerts
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发送警报
- en: Sending alerts differs for each tool, for example, an alert could be as simple
    as sending an email to inform you that there is an issue to the sounding of an
    audible alert in a **Network Operations Center** (**NOC**) when the CPU load of
    a container goes above five, or the load on the host goes above 10.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 发送警报对于每个工具都有所不同，例如，警报可以简单地发送电子邮件通知您存在问题，也可以在容器的CPU负载超过五或主机负载超过10时，在**网络运营中心**（**NOC**）发出听得见的警报。
- en: For those of you who require an on-call team to be alerted, most of the software
    we have covered has some level of integration alert aggregation services such
    as PagerDuty ([https://www.pagerduty.com](https://www.pagerduty.com)).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些需要警报的人，我们所涵盖的大多数软件都具有某种程度的集成警报聚合服务，例如PagerDuty（[https://www.pagerduty.com](https://www.pagerduty.com)）。
- en: These aggregation services either intercept your alert emails or allow services
    to make API calls to them. When triggered, they can be configured to place phone
    calls, send SMS messages, and even escalate to secondary on-call technician if
    an alert has not been flagged down within a definable time.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这些聚合服务要么拦截您的警报电子邮件，要么允许服务向它们发出API调用。当触发时，它们可以配置为打电话、发送短信，甚至在可定义的时间内未标记警报时升级到次要的值班技术员。
- en: I can't think of any cases where you shouldn't look at enabling alerting, after
    all, it's always best to know about anything that could effect your application
    before your end users do.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我想不出任何情况，您不应该考虑启用警报，毕竟最好在最终用户之前了解可能影响您的应用程序的任何事情。
- en: How much alerting you enable is really down to what you are using your containers
    for; however, I would recommend that you review all your alerts regularly and
    also actively tune your configuration.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您启用多少警报实际上取决于您使用容器的用途；然而，我建议您定期审查所有警报，并积极调整您的配置。
- en: The last thing you want is a configuration that produces too many false positives
    or one that is too twitchy, as you do not want the team who receives your alerts
    to become desensitized to the alerts that you are generating.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您不希望出现产生太多误报或太过敏感的配置，因为您不希望接收您的警报的团队对您生成的警报产生麻木不仁的感觉。
- en: For example, if a critical CPU alert is triggered every 30 minutes because of
    a scheduled job, then you will probably need to review the sensitivity of the
    alert, otherwise it is easy for the engineer to simply dismiss a critical alert
    without thinking about it, as "this alert comes every half an hour and will be
    ok in a few minutes", when your entire application could be unresponsive.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果由于定期作业而每30分钟触发一次关键CPU警报，那么您可能需要审查警报的敏感性，否则工程师很容易会简单地忽略关键警报而不加思考地认为“这个警报每半小时就会好，几分钟就没事了”，而您的整个应用程序可能会无响应。
- en: Keeping up
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟进
- en: While Docker has been built on top of well-established technologies such as
    **Linux Containers** (**LXC**), these have traditionally been difficult to configure
    and manage, especially for non-system administrators.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Docker是建立在诸如**Linux容器**（**LXC**）之类的成熟技术之上的，但这些技术传统上很难配置和管理，特别是对于非系统管理员来说。
- en: Docker removes almost all the barriers to entry, allowing everyone with a small
    amount of command-line experience to launch and manage their own container-based
    applications.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Docker几乎消除了所有的入门障碍，使得每个有一点命令行经验的人都能够启动和管理自己基于容器的应用程序。
- en: This has forced a lot of the supporting tools to also lower their barrier to
    entry. Software that once required careful planning to deploy, such as some of
    the monitoring tools we covered in this book, can now be deployed and configured
    in minutes rather than hours.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这迫使许多支持工具也降低了他们的准入门槛。一些以前需要仔细规划才能部署的软件，比如我们在本书中介绍的一些监控工具，现在可以在几分钟内部署和配置，而不是几个小时。
- en: Docker is also a very fast-moving technology; while it has been considered production-ready
    for a while, new features are being added and existing features are improved with
    regular updates.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Docker也是一种发展迅速的技术；虽然它已经被认为是生产就绪的一段时间了，但新功能正在不断增加，并且现有功能也在定期更新中得到改进。
- en: So far, in 2015, there have been 11 releases of Docker Engine; of these, only
    six have been minor updates that fix bugs, and the rest have all been major updates.
    Details of each release can be found in the project's Changelog, which can be
    found at [https://github.com/docker/docker/blob/master/CHANGELOG.md](https://github.com/docker/docker/blob/master/CHANGELOG.md).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在2015年，Docker Engine已经发布了11个版本；其中只有六个是修复错误的次要更新，其余的都是主要更新。每个版本的详细信息可以在项目的Changelog中找到，网址为[https://github.com/docker/docker/blob/master/CHANGELOG.md](https://github.com/docker/docker/blob/master/CHANGELOG.md)。
- en: Because of the pace of development of Docker, it is import that you also update
    any monitoring tools you deploy. This is not only to keep up with new features,
    but also to ensure that you don't loose any functionality due to changes in the
    way in which Docker works.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Docker的快速发展，重要的是您也要更新您部署的任何监控工具。这不仅是为了跟上新功能，还要确保您不会因Docker工作方式的变化而丢失任何功能。
- en: This attitude of updating monitoring clients/tools can be a bit of a change
    for some administrators who maybe in the past would have configured a monitoring
    agent on a server and then not thought about it again.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 更新监控客户端/工具的这种态度对于一些管理员来说可能有点变化，以前他们可能会在服务器上配置一个监控代理，然后就不再考虑它了。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: As discussed in this chapter, Docker is a fast moving technology. While this
    book has been in production, there have been three major versions released from
    1.7 to 1.9; with each release Docker has become more stable and more powerful.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章所讨论的，Docker是一种发展迅速的技术。在本书生产期间，从1.7到1.9已经发布了三个主要版本；随着每个版本的发布，Docker变得更加稳定和强大。
- en: In this chapter, we have looked at different ways to implement the technologies
    that have been discussed in the previous chapters of this book. By now, you should
    have an idea of which approach is appropriate to monitor your containers and host
    machines, for both your application and for the way the application has been deployed
    using Docker.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了实施前几章讨论过的技术的不同方法。到目前为止，您应该已经有了一个合适的方法来监控您的容器和主机，无论是针对您的应用程序还是使用Docker部署应用程序的方式。
- en: 'No matter which approach you chose to take, it is important that you stay up-to-date
    with Docker''s development and also the new monitoring technologies as they emerge,
    the following links are good starting points to keep yourself informed:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您选择采取哪种方法，重要的是您要及时了解Docker的发展以及新的监控技术，以下链接是保持自己信息化的好起点：
- en: 'Docker Engineering Blog: [http://blog.docker.com/category/engineering/](http://blog.docker.com/category/engineering/)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker工程博客：[http://blog.docker.com/category/engineering/](http://blog.docker.com/category/engineering/)
- en: 'Docker on Twitter: [https://twitter.com/docker](https://twitter.com/docker)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker的Twitter账号：[https://twitter.com/docker](https://twitter.com/docker)
- en: 'Docker on Reddit: [https://www.reddit.com/r/docker](https://www.reddit.com/r/docker)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker的Reddit页面：[https://www.reddit.com/r/docker](https://www.reddit.com/r/docker)
- en: 'Docker on Stack Overflow: [http://stackoverflow.com/questions/tagged/docker](http://stackoverflow.com/questions/tagged/docker)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker在Stack Overflow上：[http://stackoverflow.com/questions/tagged/docker](http://stackoverflow.com/questions/tagged/docker)
- en: One of the reasons why the Docker project has been embraced by developers, system
    administrators and even enterprise companies is because it is able to move at
    a quick pace, while adding more features and very impressively maintaining its
    ease of use and flexibility.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Docker项目受到开发人员、系统管理员甚至企业公司的欢迎的原因之一是，它能够以快速的速度前进，同时增加更多功能，并非常令人印象深刻地保持其易用性和灵活性。
- en: Over the next 12 months, the technology is set to be even more widespread; the
    importance of ensuring that you are capturing useful performance metrics and logs
    from your containers will become more critical and I hope that this book has helped
    you start your journey into monitoring Docker.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的12个月里，这项技术将变得更加普遍；确保您从容器中捕获有用的性能指标和日志的重要性将变得更加关键，我希望这本书能帮助您开始监控Docker的旅程。
