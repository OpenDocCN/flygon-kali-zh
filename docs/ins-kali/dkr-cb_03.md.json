["```\n    **$ docker login**\n\n    ```", "```\n    **docker commit -a|--author[=\"\"] -m|--message[=\"\"] CONTAINER [REPOSITORY[:TAG]]**\n\n    ```", "```\n    **$ docker commit -a \"Neependra Khare\" -m \"Fedora with HTTPD package\" 0a15686588ef nkhare/fedora:httpd**\n\n    ```", "```\n    **$ docker diff CONTAINER**\n\n    ```", "```\n    **$ docker diff 0a15686588ef**\n    **.....**\n    **C /var/log** \n    **A /var/log/httpd** \n    **C /var/log/lastlog** \n    **.....**\n\n    ```", "```\n    **$ docker commit --help**\n\n    ```", "```\n**$ docker push NAME[:TAG]**\n\n```", "```\n**$ docker push nkhare/fedora:httpd**\n\n```", "```\n**$ docker tag [-f|--force[=false] IMAGE [REGISTRYHOST/][USERNAME/]NAME[:TAG]**\n**$ docker push [REGISTRYHOST/][USERNAME/]NAME[:TAG]**\n\n```", "```\n**$ docker tag nkhare/fedora:httpd shadowfax.example.com:5000/nkhare/fedora:httpd**\n\n```", "```\n**$ docker push shadowfax.example.com:5000/nkhare/fedora:httpd**\n\n```", "```\n    **$ docker push --help**\n\n    ```", "```\n    **$ docker history [ OPTIONS ] IMAGE**\n\n    ```", "```\n    **$ docker history nkhare/fedora:httpd**\n\n    ```", "```\n**$ docker inspect --format='{{.Comment}}' nkhare/fedora:httpd**\n**Fedora with HTTPD package** \n\n```", "```\n    **$ docker history --help**\n\n    ```", "```\n    **$ docker rmi [ OPTIONS ] IMAGE [IMAGE...]**\n\n    ```", "```\n    **$ docker rmi nkhare/fedora:httpd**\n\n    ```", "```\n    **$ docker stop 'docker ps -q'** \n\n    ```", "```\n    **$ docker rm 'docker ps -a -q'** \n\n    ```", "```\n    **$ docker rmi 'docker images -q'**\n\n    ```", "```\n    **$ docker rmi --help**\n\n    ```", "```\n    **$ docker save [-o|--output=\"\"] IMAGE [:TAG]**\n\n    ```", "```\n    **$ docker save --output=fedora.tar fedora**\n\n    ```", "```\n**$ docker save fedora:latest > fedora-latest.tar**\n\n```", "```\n**$ docker export CONTAINER  > containerXYZ.tar**\n\n```", "```\n    **$ docker save -help**\n    **$ docker export --help**\n\n    ```", "```\n    **$ docker import URL|- [REPOSITORY[:TAG]]**\n\n    ```", "```\n    **$ cat fedora-latest.tar | docker import - fedora:latest**\n\n    ```", "```\n    **$ docker import http://example.com/example.tar example/image**\n\n    ```", "```\n    **$ docker import --help**\n\n    ```", "```\n    **$ mkdir sample_image**\n    **$ cd sample_image**\n\n    ```", "```\n    **$ cat Dockerfile**\n    **# Pick up the base image** \n    **FROM fedora** \n    **# Add author name** \n    **MAINTAINER Neependra Khare** \n    **# Add the command to run at the start of container** \n    **CMD date**\n\n    ```", "```\n    **$ docker build .** \n\n    ```", "```\n    **$ docker build -t fedora/test .** \n\n    ```", "```\n**$ docker images -a**\n\n```", "```\n**INSTRUCTION arguments**\n\n```", "```\n    **FROM  <image>**\n\n    ```", "```\n    **FROM  <images>:<tag>**\n\n    ```", "```\n     **[registry_hostname[:port]/][user_name/](repository_name:version_tag)**\n\n    ```", "```\n    **FROM registry-host:5000/nkhare/f20:httpd**\n\n    ```", "```\n    **RUN <command> <param1> ... <pamamN>**\n\n    ```", "```\n    **RUN [\"executable\", \"param1\",...,\"paramN\" ]**\n\n    ```", "```\n    **CMD  [\"executable\", \"param1\",...,\"paramN\" ]**\n    **CMD [\"param1\", ... , \"paramN\"]**\n    **CMD <command> <param1> ... <pamamN>**\n\n    ```", "```\n    **ENTRYPOINT  [\"executable\", \"param1\",...,\"paramN\" ]**\n    **ENTRYPOINT <command> <param1> ... <pamamN>**\n\n    ```", "```\n    **EXPOSE  <port> [<port> ... ]**\n\n    ```", "```\n    **ENV <key> <value>**\n\n    ```", "```\n    **ADD <src> <dest>** \n\n    ```", "```\n    **ADD [\"<src>\"... \"<dest>\"]**\n\n    ```", "```\n    **COPY  [\"<src>\"... \"<dest>\"]**\n\n    ```", "```\n    **VOLUME [\"/data\"]**\n\n    ```", "```\n    **VOLUME /data**\n\n    ```", "```\n    **USER  <username>/<UID>**\n\n    ```", "```\n    **WORKDIR <PATH>**\n\n    ```", "```\n    **ONBUILD [INSTRUCTION]**\n\n    ```", "```\n    **$ docker build -help**\n\n    ```", "```\n**$ git clone https://github.com/nkhare/Fedora-Dockerfiles.git**\n\n```", "```\n**$ cd Fedora-Dockerfiles/apache/**\n**$ cat Dockerfile**\n**FROM fedora:20** \n**MAINTAINER \"Scott Collier\" <scollier@redhat.com>** \n\n**RUN yum -y update && yum clean all** \n**RUN yum -y install httpd && yum clean all** \n**RUN echo \"Apache\" >> /var/www/html/index.html** \n\n**EXPOSE 80** \n\n**# Simple startup script to avoid some issues observed with container restart** \n**ADD run-apache.sh /run-apache.sh** \n**RUN chmod -v +x /run-apache.sh** \n\n**CMD [\"/run-apache.sh\"]**\n\n```", "```\n**$ docker build -t fedora/apache .** \n**Sending build context to Docker daemon 23.55 kB** \n**Sending build context to Docker daemon** \n**Step 0 : FROM fedora:20** \n **---> 6cece30db4f9** \n**Step 1 : MAINTAINER \"Scott Collier\" <scollier@redhat.com>** \n **---> Running in 2048200e6338** \n **---> ae8e3c258061** \n**Removing intermediate container 2048200e6338** \n**Step 2 : RUN yum -y update && yum clean all** \n **---> Running in df8bc8ee3117** \n**.... Installing/Update packages ...**\n**Cleaning up everything** \n **---> 5a6d449e59f6** \n**Removing intermediate container df8bc8ee3117** \n**Step 3 : RUN yum -y install httpd && yum clean all** \n **---> Running in 24449e520f18** \n**.... Installing HTTPD ...**\n**Cleaning up everything** \n **---> ae1625544ef6** \n**Removing intermediate container 24449e520f18** \n**Step 4 : RUN echo \"Apache\" >> /var/www/html/index.html** \n **---> Running in a35cbcd8d97a** \n **---> 251eea31b3ce** \n**Removing intermediate container a35cbcd8d97a** \n**Step 5 : EXPOSE 80** \n **---> Running in 734e54f4bf58** \n **---> 19503ae2a8cf** \n**Removing intermediate container 734e54f4bf58** \n**Step 6 : ADD run-apache.sh /run-apache.sh** \n **---> de35d746f43b** \n**Removing intermediate container 3eec9a46da64** \n**Step 7 : RUN chmod -v +x /run-apache.sh** \n **---> Running in 3664efba393f** \n**mode of '/run-apache.sh' changed from 0644 (rw-r--r--) to 0755 (rwxr-xr-x)** \n **---> 1cb729521c3f** \n**Removing intermediate container 3664efba393f** \n**Step 8 : CMD /run-apache.sh** \n **---> Running in cd5e7534e815** \n **---> 5f8041b6002c** \n**Removing intermediate container cd5e7534e815** \n**Successfully built 5f8041b6002c** \n\n```", "```\n    **$ docker build --help**\n\n    ```", "```\n**$ git clone  https://github.com/nkhare/Fedora-Dockerfiles.git**\n\n```", "```\n**$ cd Fedora-Dockerfiles/firefox**\n**$ cat Dockerfile** \n**FROM fedora** \n**MAINTAINER scollier <emailscottcollier@gmail.com>** \n\n**# Install the appropriate software** \n**RUN yum -y update && yum clean all** \n**RUN yum -y install x11vnc \\** \n**firefox xorg-x11-server-Xvfb \\** \n**xorg-x11-twm tigervnc-server \\** \n**xterm xorg-x11-font \\** \n**xulrunner-26.0-2.fc20.x86_64 \\** \n**dejavu-sans-fonts \\** \n**dejavu-serif-fonts \\** \n**xdotool && yum clean all** \n\n**# Add the xstartup file into the image** \n**ADD ./xstartup /** \n\n**RUN mkdir /.vnc** \n**RUN x11vnc -storepasswd 123456 /.vnc/passwd** \n**RUN  \\cp -f ./xstartup /.vnc/.** \n**RUN chmod -v +x /.vnc/xstartup** \n**RUN sed -i '/\\/etc\\/X11\\/xinit\\/xinitrc-common/a [ -x /usr/bin/firefox ] && /usr/bin/firefox &' /etc/X11/xinit/xinitrc** \n\n**EXPOSE 5901** \n\n**CMD    [\"vncserver\", \"-fg\" ]** \n**# ENTRYPOINT [\"vncserver\", \"-fg\" ]**\n\n```", "```\n**$ docker build  -t fedora/firefox .** \n**Sending build context to Docker daemon 24.58 kB** \n**Sending build context to Docker daemon** \n**Step 0 : FROM fedora** \n **---> 834629358fe2** \n**Step 1 : MAINTAINER scollier <emailscottcollier@gmail.com>** \n **---> Running in ae0fd3c2cb2e** \n **---> 7ffc6c9af827** \n**Removing intermediate container ae0fd3c2cb2e** \n**Step 2 : RUN yum -y update && yum clean all** \n **---> Running in 1c67b8772718** \n**..... Installing/Update packages ...**\n **---> 075d6ceef3d0** \n**Removing intermediate container 1c67b8772718** \n**Step 3 : RUN yum -y install x11vnc firefox xorg-x11-server-Xvfb xorg-x11-twm tigervnc-server xterm xorg-x11-font xulrunner-26.0-2.fc20.x86_64 dejavu-sans-fonts dejavu-serif-fonts xdotool && yum clean all** \n**..... Installing required packages packages ...**\n**Cleaning up everything** \n **---> 986be48760a6** \n**Removing intermediate container c338a1ad6caf** \n**Step 4 : ADD ./xstartup /** \n **---> 24fa081dcea5** \n**Removing intermediate container fe98d86ba67f** \n**Step 5 : RUN mkdir /.vnc** \n **---> Running in fdb8fe7e697a** \n **---> 18f266ace765** \n**Removing intermediate container fdb8fe7e697a** \n**Step 6 : RUN x11vnc -storepasswd 123456 /.vnc/passwd** \n **---> Running in c5b7cdba157f** \n**stored passwd in file: /.vnc/passwd** \n **---> e4fcf9b17aa9** \n**Removing intermediate container c5b7cdba157f** \n**Step 7 : RUN \\cp -f ./xstartup /.vnc/.** \n **---> Running in 21d0dc4edb4e** \n **---> 4c53914323cb** \n**Removing intermediate container 21d0dc4edb4e** \n**Step 8 : RUN chmod -v +x /.vnc/xstartup** \n **---> Running in 38f18f07c996** \n**mode of '/.vnc/xstartup' changed from 0644 (rw-r--r--) to 0755 (rwxr-xr-x)** \n **---> caa278024354** \n**Removing intermediate container 38f18f07c996** \n**Step 9 : RUN sed -i '/\\/etc\\/X11\\/xinit\\/xinitrc-common/a [ -x /usr/bin/firefox ] && /usr/bin/firefox &' /etc/X11/xinit/xinitrc** \n **---> Running in 233e99cab02c** \n **---> 421e944ac8b7** \n**Removing intermediate container 233e99cab02c** \n**Step 10 : EXPOSE 5901** \n **---> Running in 530cd361cb3c** \n **---> 5de01995c156** \n**Removing intermediate container 530cd361cb3c** \n**Step 11 : CMD vncserver -fg** \n **---> Running in db89498ae8ce** \n **---> 899be39b7feb** \n**Removing intermediate container db89498ae8ce** \n**Successfully built 899be39b7feb** \n\n```", "```\n    **$ docker run -it -p 5901:5901 fedora/firefox**\n\n    ```", "```\n    **$ vncviewer localhost:1**\n\n    ```", "```\n    **$ docker build --help**\n\n    ```", "```\n**$ git clone  https://github.com/nkhare/Fedora-Dockerfiles.git**\n\n```", "```\n**$ cd Fedora-Dockerfiles/systemd/wordpress_single_container**\n**$ cat Dockerfile**\n**FROM fedora** \n**MAINTAINER scollier <scollier@redhat.com>** \n**RUN yum -y update && yum clean all** \n**RUN yum -y install httpd php php-mysql php-gd pwgen supervisor bash-completion openssh-server psmisc tar && yum clean all** \n**ADD ./start.sh /start.sh** \n**ADD ./foreground.sh /etc/apache2/foreground.sh** \n**ADD ./supervisord.conf /etc/supervisord.conf** \n**RUN echo %sudo  ALL=NOPASSWD: ALL >> /etc/sudoers** \n**ADD http://wordpress.org/latest.tar.gz /wordpress.tar.gz** \n**RUN tar xvzf /wordpress.tar.gz** \n**RUN mv /wordpress/* /var/www/html/.** \n**RUN chown -R apache:apache /var/www/** \n**RUN chmod 755 /start.sh** \n**RUN chmod 755 /etc/apache2/foreground.sh** \n**RUN mkdir /var/run/sshd** \n**EXPOSE 80** \n**EXPOSE 22** \n**CMD [\"/bin/bash\", \"/start.sh\"]**\n\n```", "```\n**$ docker build -t fedora/wordpress  .** \n**Sending build context to Docker daemon 41.98 kB** \n**Sending build context to Docker daemon** \n**Step 0 : FROM fedora** \n **---> 834629358fe2** \n**Step 1 : MAINTAINER scollier <scollier@redhat.com>** \n **---> Using cache** \n **---> f21eaf47c9fc** \n**Step 2 : RUN yum -y update && yum clean all** \n **---> Using cache** \n **---> a8f497a6e57c** \n**Step 3 : RUN yum -y install httpd php php-mysql php-gd pwgen supervisor bash-completion openssh-server psmisc tar && yum clean all** \n **---> Running in 303234ebf1e1**\n**.... updating/installing packages ....**\n**Cleaning up everything** \n **---> cc19a5f5c4aa** \n**Removing intermediate container 303234ebf1e1** \n**Step 4 : ADD ./start.sh /start.sh** \n **---> 3f911077da44** \n**Removing intermediate container c2bd643236ef** \n**Step 5 : ADD ./foreground.sh /etc/apache2/foreground.sh** \n **---> 3799902a60c5** \n**Removing intermediate container c99b8e910009** \n**Step 6 : ADD ./supervisord.conf /etc/supervisord.conf** \n **---> f232433b8925** \n**Removing intermediate container 0584b945f6f7** \n**Step 7 : RUN echo %sudo  ALL=NOPASSWD: ALL >> /etc/sudoers** \n **---> Running in 581db01d7350** \n **---> ec686e945dfd** \n**Removing intermediate container 581db01d7350** \n**Step 8 : ADD http://wordpress.org/latest.tar.gz /wordpress.tar.gz** \n**Downloading [==================================================>] 6.186 MB/6.186 MB** \n **---> e4e902c389a4** \n**Removing intermediate container 6bfecfbe798d** \n**Step 9 : RUN tar xvzf /wordpress.tar.gz** \n **---> Running in cd772500a776** \n**.......... untarring wordpress .........**\n**---> d2c5176228e5** \n**Removing intermediate container cd772500a776** \n**Step 10 : RUN mv /wordpress/* /var/www/html/.** \n **---> Running in 7b19abeb509c** \n **---> 09400817c55f** \n**Removing intermediate container 7b19abeb509c** \n**Step 11 : RUN chown -R apache:apache /var/www/** \n **---> Running in f6b9b6d83b5c** \n **---> b35a901735d9** \n**Removing intermediate container f6b9b6d83b5c** \n**Step 12 : RUN chmod 755 /start.sh** \n **---> Running in 81718f8d52fa** \n **---> 87470a002e12** \n**Removing intermediate container 81718f8d52fa** \n**Step 13 : RUN chmod 755 /etc/apache2/foreground.sh** \n **---> Running in 040c09148e1c** \n **---> 1c76f1511685** \n**Removing intermediate container 040c09148e1c** \n**Step 14 : RUN mkdir /var/run/sshd** \n **---> Running in 77177a33aee0** \n **---> f339dd1f3e6b** \n**Removing intermediate container 77177a33aee0** \n**Step 15 : EXPOSE 80** \n **---> Running in f27c0b96d17f** \n **---> 6078f0d7b70b** \n**Removing intermediate container f27c0b96d17f** \n**Step 16 : EXPOSE 22** \n **---> Running in eb7c7d90b860** \n **---> 38f36e5c7cab** \n**Removing intermediate container eb7c7d90b860** \n**Step 17 : CMD /bin/bash /start.sh** \n **---> Running in 5635fe4783da** \n **---> c1a327532355** \n**Removing intermediate container 5635fe4783da** \n**Successfully built c1a327532355** \n\n```", "```\n**[program:mysqld]** \n**command=/usr/bin/mysqld_safe** \n**[program:httpd]** \n**command=/etc/apache2/foreground.sh** \n**stopsignal=6** \n**[program:sshd]** \n**command=/usr/sbin/sshd -D** \n**stdout_logfile=/var/log/supervisor/%(program_name)s.log** \n**stderr_logfile=/var/log/supervisor/%(program_name)s.log** \n**autorestart=true**\n\n```", "```\n    **$ docker build --help**\n\n    ```", "```\n    **$ docker run -p 5000:5000 registry**\n\n    ```", "```\n         **$ ID='docker run -d -i fedora /bin/bash'**\n\n        ```", "```\n         **$ docker commit $ID fedora-20**\n\n        ```", "```\n    **$ docker tag fedora-20 registry-host:5000/nkhare/f20**\n\n    ```", "```\n    **$ docker -d   --insecure-registry registry-host:5000**\n\n    ```", "```\n    **$ docker push registry-host:5000/nkhare/f20**\n\n    ```", "```\n    **$ docker pull registry-host:5000/nkhare/f20**\n\n    ```", "```\n**# VERSION 0.1**\n**# DOCKER-VERSION  0.7.3**\n**# AUTHOR:         Sam Alba <sam@docker.com>**\n**# DESCRIPTION:    Image with docker-registry project and dependencies**\n**# TO_BUILD:       docker build -rm -t registry .**\n**# TO_RUN:         docker run -p 5000:5000 registry**\n\n**# Latest Ubuntu LTS**\n**FROM ubuntu:14.04**\n\n**# Update**\n**RUN apt-get update \\**\n**# Install pip**\n **&& apt-get install -y \\**\n **swig \\**\n **python-pip \\**\n**# Install deps for backports.lzma (python2 requires it)**\n **python-dev \\**\n **python-mysqldb \\**\n **python-rsa \\**\n **libssl-dev \\**\n **liblzma-dev \\**\n **libevent1-dev \\**\n **&& rm -rf /var/lib/apt/lists/***\n\n**COPY . /docker-registry**\n**COPY ./config/boto.cfg /etc/boto.cfg**\n\n**# Install core**\n**RUN pip install /docker-registry/depends/docker-registry-core**\n\n**# Install registry**\n**RUN pip install file:///docker-registry#egg=docker-registry[bugsnag,newrelic,cors]**\n\n**RUN patch \\**\n **$(python -c 'import boto; import os; print os.path.dirname(boto.__file__)')/connection.py \\**\n **< /docker-registry/contrib/boto_header_patch.diff**\n\n**ENV DOCKER_REGISTRY_CONFIG /docker-registry/config/config_sample.yml**\n**ENV SETTINGS_FLAVOR dev**\n**EXPOSE 5000**\n**CMD [\"docker-registry\"]**\n\n```", "```\n**$ yum install supermin**\n\n```", "```\n    **$ supermin --prepare -o OUTPUTDIR PACKAGE [PACKAGE ...]**\n\n    ```", "```\n    **$ supermin --prepare bash coreutils -o f21_base**\n\n    ```", "```\n    **$ supermin --build -o OUTPUTDIR -f chroot|ext2 INPUT [INPUT ...]**\n\n    ```", "```\n    **$ supermin --build --format chroot f21_base -o f21_image** \n\n    ```", "```\n    **$ ls f21_image/** \n    **bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var** \n\n    ```", "```\n    **$ tar -C f21_image/ -c . | docker import - nkhare/f21_base** \n    **d6db8b798dee30ad9c84480ef7497222f063936a398ecf639e60599eed7f6560** \n\n    ```", "```\n    **$ man supermin**\n\n    ```", "```\n**$ apt-get install debootstrap**\n\n```", "```\n**$ debootstrap [OPTION...]  SUITE TARGET [MIRROR [SCRIPT]]**\n\n```", "```\n    **$ mkdir trusty_chroot**\n\n    ```", "```\n    **$ debootstrap trusty ./trusty_chroot http://in.archive.ubuntu.com/ubuntu/** \n\n    ```", "```\n    **$ ls ./trusty_chroot**\n    **bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var** \n\n    ```", "```\n    **$ tar -C trusty_chroot/ -c . |  docker import - nkhare/trusty_base**\n\n    ```", "```\n    **$ docker images -t** \n\n    ```", "```\n**$ docker images --viz | dot -Tpng -o /tmp/docker.png**\n**$ display /tmp/docker.png**\n\n```"]