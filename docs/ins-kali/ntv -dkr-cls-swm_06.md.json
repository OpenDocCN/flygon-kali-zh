["```\n     **for i in seq 3; do docker-machine create -d virtualbox \n          node- $i; done**\n\n    ```", "```\n    **eval $(docker-machine env node-1)**\n    **docker swarm init --advertise-addr 192.168.99.100**\n\n    ```", "```\n    **for i in 2 3 4; do**\n    **docker-machine ssh node-$i sudo docker swarm join \\**\n    **--token SWMTKN-1-\n          4d13l0cf5ipq7e4x5ax2akalds8j1zm6lye8knnb0ba9wftymn-\n          9odd9z4gfu4d09z2iu0r2361v \\**\n    **192.168.99.100:2377**\n\n    ```", "```\n**docker service create -p 80:80 --name swarm-nginx --replicas 3\n    fsoppelsa/swarm-nginx**\n\n```", "```\n**docker service ls**\n\n```", "```\n **docker service ps swarm-nginx** \n\n```", "```\n**<h2>Docker swarm host <?php echo $_SERVER['SERVER_ADDR']; ?></h2>**\n\n```", "```\n**docker network create --driver overlay wordpress**\n\n```", "```\n**docker service create \\**\n**--name mysql \\**\n**--replicas 1 \\**\n**-p 3306:3306 \\**\n**--network wordpress \\**\n**--env MYSQL_ROOT_PASSWORD=dockerswarm \\**\n**mysql:5.6**\n\n```", "```\n**docker service inspect mysql -f \"{{ .Endpoint.VirtualIPs }}\"**\n\n```", "```\n**docker service create \\**\n**--constraint 'node.role != manager' \\**\n**--name wordpress \\**\n**--replicas 3 \\**\n**-p 80:80 \\**\n**--network wordpress \\**\n**--env WORDPRESS_DB_HOST=mysql \\**\n**--env WORDPRESS_DB_USER=root \\**\n**--env WORDPRESS_DB_PASSWORD=dockerswarm \\**\n**wordpress**\n\n```", "```\n**version: '2'**\n**services:**\n**\u00a0 db:**\n**\u00a0\u00a0\u00a0 image: mysql:5.6**\n**\u00a0\u00a0\u00a0 volumes:**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 - \"./.data/db:/var/lib/mysql\"**\n**\u00a0\u00a0\u00a0 restart: always**\n**\u00a0\u00a0\u00a0 environment:**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 MYSQL_ROOT_PASSWORD: dockerswarm**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 MYSQL_DATABASE: wordpress**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 MYSQL_USER: wordpress**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 MYSQL_PASSWORD: wordpress**\n**\u00a0 wordpress:**\n**\u00a0\u00a0\u00a0 depends_on:**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 - db**\n**\u00a0\u00a0\u00a0 image: wordpress:latest**\n**\u00a0\u00a0\u00a0 links:**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 - db**\n**\u00a0\u00a0\u00a0 ports:**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 - \"8000:80\"**\n**\u00a0\u00a0\u00a0 restart: always**\n**\u00a0\u00a0\u00a0 environment:**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 WORDPRESS_DB_HOST: db:3306**\n**\u00a0\u00a0\u00a0\u00a0\u00a0 WORDPRESS_DB_PASSWORD: wordpress**\n\n```", "```\n**docker-compose --rm -d --file docker-compose.yml up.**\n\n```", "```\n**docker-compose --file docker-compose.yml bundle -o wordpress.dab**\n\n```", "```\n**{**\n **\"Services\": {**\n **\"db\": {**\n **\"Env\": [**\n **\"MYSQL_ROOT_PASSWORD=dockerswarm\",**\n **\"MYSQL_PASSWORD=wordpress\",**\n **\"MYSQL_USER=wordpress\",**\n **\"MYSQL_DATABASE=wordpress\"**\n **],**\n **\"Image\": \n          \"mysql@sha256:e9b0bc4b8f18429479b74b07f4\n          d515f2ac14da77c146201a885c5d7619028f4d\",**\n **\"Networks\": [**\n **\"default\"**\n **]**\n **},**\n **\"wordpress\": {**\n **\"Env\": [**\n **\"WORDPRESS_DB_HOST=db:3306\",**\n **\"WORDPRESS_DB_PASSWORD=wordpress\"**\n **],**\n **\"Image\": \n          \"wordpress@sha256:10f68e4f1f13655b15a5d0415\n          3fe0a454ea5e14bcb38b0695f0b9e3e920a1c97\",**\n **\"Networks\": [**\n **\"default\"**\n **],**\n **\"Ports\": [**\n **{**\n **\"Port\": 80,**\n **\"Protocol\": \"tcp\"**\n **}**\n **]**\n **}**\n **},**\n **\"Version\": \"0.1\"**\n\n```", "```\n**docker deploy --file wordpress.dab wordpress1**\n\n```", "```\n**docker pull gcr.io/google_containers/spark-master**\n**docker pull gcr.io/google_containers/spark-worker**\n\n```", "```\n**docker run -d \\**\n**-p 8080:8080 \\**\n**--name spark-master \\**\n**-h spark-master \\**\n**gcr.io/google_containers/spark-master**\n\n```", "```\n**docker run -d \\**\n**--link 7ff683727bbf \\**\n**-m 256 \\**\n**-p 8081:8081 \\**\n**--name worker-1 \\**\n**gcr.io/google_containers/spark-worker**\n\n```", "```\n**docker run -d --link d3409a18fdc0 -m 256 -p 8082:8082 -m 256m -- \n    name worker-2 gcr.io/google_containers/spark-worker**\n**docker run -d --link d3409a18fdc0 -m 256 -p 8083:8083 -m 256m --\n    name worker-3 gcr.io/google_containers/spark-worker**\n\n```", "```\n**docker network create --driver overlay spark**\n\n```", "```\n**docker node update --label-add type=sparkmaster node-1**\n**docker node update --label-add type=sparkworker node-2**\n**docker node update --label-add type=sparkworker node-3**\n**docker node update --label-add type=sparkworker node-4**\n\n```", "```\n**docker service create \\**\n**--container-label spark-master \\**\n**--network spark \\**\n**--constraint 'node.labels.type==sparkmaster' \\**\n**--publish 8080:8080 \\**\n**--publish 7077:7077 \\**\n**--publish 6066:6066 \\**\n**--name spark-master \\**\n**--replicas 1 \\**\n**--limit-memory 1024 \\**\n**gcr.io/google_containers/spark-master**\n\n```", "```\n**docker service create \\**\n**--constraint 'node.labels.type==sparkworker' \\**\n**--network spark \\**\n**--name spark-worker \\**\n**--publish 8081:8081 \\**\n**--replicas 3 \\**\n**--limit-memory 256 \\**\n**gcr.io/google_containers/spark-worker**\n\n```"]