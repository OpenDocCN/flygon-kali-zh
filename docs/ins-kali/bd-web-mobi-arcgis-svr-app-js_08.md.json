["```js\nvar address = {\n    street: \"380 New York\",\n    city: \"Redlands\",\n    state: \"CA\",\n    zip: \"92373\"\n}\n```", "```js\nvar locator = new Locator(\"http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Locators/ESRI_Geocode_USA/GeocodeServer\")\n```", "```js\n    var map, **locator**;\n    require([\n            \"esri/map\", **\"esri/tasks/locator\", \"esri/graphic\",**\n     **\"esri/InfoTemplate\", \"esri/symbols/SimpleMarkerSymbol\",**\n     **\"esri/symbols/Font\", \"esri/symbols/TextSymbol\",**\n     **\"dojo/_base/array\", \"dojo/_base/Color\",**\n     **\"dojo/number\", \"dojo/parser\", \"dojo/dom\"**, **\"dijit/registry\"**,\"dijit/form/Button\", \"dijit/form/Textarea\",\n            \"dijit/layout/BorderContainer\",\"dijit/layout/ContentPane\", \"dojo/domReady!\"\n          ], function(\n            Map, **Locator, Graphic,**\n     **InfoTemplate, SimpleMarkerSymbol,** \n     **Font, TextSymbol,**\n     **arrayUtils, Color,**\n     **number, parser, dom, registry**\n          ) {\n            parser.parse();\n    ```", "```js\n    locator = newLocator(\"http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer\");\n    locator.on(\"address-to-locations-complete\", showResults);\n    ```", "```js\n    registry.byId(\"locate\").on(\"click\", locate);\n    ```", "```js\n    function locate() {\n      map.graphics.clear();\n      var address = {\n        \"SingleLine\": dom.byId(\"address\").value\n      };\n    locator.outSpatialReference = map.spatialReference;\n    var options = {\n      address: address,\n      outFields: [\"Loc_name\"]\n    }\n    locator.addressToLocations(options);\n    }\n    ```", "```js\n    function showResults(evt) {\n     **var candidate;**\n      var symbol = new SimpleMarkerSymbol();\n      var infoTemplate = new InfoTemplate(\n        \"Location\", \n        \"Address: ${address}<br />Score: ${score}<br />Sourcelocator: ${locatorName}\"\n       );\n       symbol.setStyle(SimpleMarkerSymbol.STYLE_SQUARE);\n       symbol.setColor(new Color([153,0,51,0.75]));\n    ```", "```js\n    arrayUtils.every(evt.addresses, function(candidate) {\n\n     });\n    ```", "```js\n    arrayUtils.every(evt.addresses, function(candidate) {\n     **if (candidate.score > 80) {**\n\n     **}**\n    });\n    ```", "```js\n    arrayUtils.every(evt.addresses, function(candidate) {\n         if (candidate.score > 80) {\n           var attributes = { \n             address: candidate.address, \n             score: candidate.score, \n             locatorName: candidate.attributes.Loc_name \n           };   \n           geom = candidate.location;\n\n         }\n    });\n    ```", "```js\n    arrayUtils.every(evt.addresses, function(candidate) {\n         if (candidate.score > 80) {\n           var attributes = { \n             address: candidate.address, \n             score: candidate.score, \n             locatorName: candidate.attributes.Loc_name \n           };   \n           geom = candidate.location;\n     **var graphic = new Graphic(geom, symbol, attributes, infoTemplate);**\n     **//add a graphic to the map at the geocoded location**\n     **map.graphics.add(graphic);**\n\n         }\n        });\n    ```", "```js\n    arrayUtils.every(evt.addresses, function(candidate) {\n         if (candidate.score > 80) {\n           var attributes = { \n             address: candidate.address, \n             score: candidate.score, \n             locatorName: candidate.attributes.Loc_name \n           };   \n           geom = candidate.location;\n    var graphic = new Graphic(geom, symbol, attributes, infoTemplate);\n           //add a graphic to the map at the geocoded location\n           map.graphics.add(graphic);\n    **//add a text symbol to the map listing the location of the matchedaddress.**\n     **var displayText = candidate.address;**\n     **var font = new Font(**\n     **\"16pt\",**\n     **Font.STYLE_NORMAL,** \n     **Font.VARIANT_NORMAL,**\n     **Font.WEIGHT_BOLD,**\n     **\"Helvetica\"**\n     **);** \n\n     **var textSymbol = new TextSymbol(**\n     **displayText,**\n     **font,**\n     **new Color(\"#666633\")**\n     **);**\n     **textSymbol.setOffset(0,8);**\n     **map.graphics.add(new Graphic(geom, textSymbol));**\n\n         }\n        });\n    ```", "```js\n    arrayUtils.every(evt.addresses, function(candidate) {\n         if (candidate.score > 80) {\n           var attributes = { \n             address: candidate.address, \n             score: candidate.score, \n             locatorName: candidate.attributes.Loc_name \n           };   \n           geom = candidate.location;\n    var graphic = new Graphic(geom, symbol, attributes,infoTemplate);\n           //add a graphic to the map at the geocoded location\n           map.graphics.add(graphic);\n    //add a text symbol to the map listing the location of thematched address.\n           var displayText = candidate.address;\n           var font = new Font(\n             \"16pt\",\n             Font.STYLE_NORMAL, \n             Font.VARIANT_NORMAL,\n             Font.WEIGHT_BOLD,\n             \"Helvetica\"\n           );          \n\n            var textSymbol = new TextSymbol(\n              displayText,\n              font,\n              new Color(\"#666633\")\n             );\n             textSymbol.setOffset(0,8);\n             map.graphics.add(new Graphic(geom, textSymbol));\n             **return false; //break out of loop after one candidate with score greater  than 80 is found.**\n         }\n        });\n    ```"]