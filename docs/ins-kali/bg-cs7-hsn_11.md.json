["```cs\n<asp:Button ID=\"Button1\" runat=\"server\" Text=\"Show\" />\n```", "```cs\nusing System.Collections.Generic;\nusing System.Linq;\n```", "```cs\nsampLabel.Text = \"\";\n```", "```cs\ndecimal[] salaries = new decimal[] { 56789, 78888, 35555, 34533, 75000 };\n```", "```cs\nIEnumerable<string> salResults = from salary in salaries\n```", "```cs\nwhere 35000 <= salary && salary <= 75000\nselect $\"<br>{salary:C}\";\n```", "```cs\norderby salary descending\n```", "```cs\nselect $\"<br>{salary:C}\";\n```", "```cs\nforeach(string formattedSalary in salResults)\n```", "```cs\nsampLabel.Text += formattedSalary;\n```", "```cs\nIEnumerable<string> salResults = from salary in salaries\n                                 where 35000 <= salary && salary <= 75000\n                                 orderby salary descending\n                                 select $\"<br>{salary:C}\";\n        foreach(string formattedSalary in salResults)\n        {\n            //display formatted salaries one at a time\n            sampLabel.Text += formattedSalary;\n        }\n```", "```cs\nsampLabel.Text += \"<br><hr/>\";\n```", "```cs\nDictionary<string, decimal> nameSalaries = new Dictionary<string, decimal>();\n```", "```cs\nnameSalaries.Add(\"John Jones\", 45355);\n```", "```cs\nnameSalaries.Add(\"John Smith\", 76900);\nnameSalaries.Add(\"John Jenkins\", 89000);\nnameSalaries.Add(\"Steve Jobs\", 98000);\n```", "```cs\nvar dictResults = from nameSalary in nameSalaries\n```", "```cs\nwhere nameSalary.Key.Contains(\"John\") && nameSalary.Value >= 65000\n```", "```cs\nselect $\"<br>{nameSalary.Key} earns {nameSalary.Value:C} per year.\";\n```", "```cs\nIEnumerable<string> dictResults = from nameSalary in nameSalaries\n```", "```cs\nforeach(string nameSal in dictResults)\n```", "```cs\nsampLabel.Text += nameSal;\n```", "```cs\n//using is a directive\n//System is a name space\n//name space is a collection of features that our needs to run\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n//public means accessible anywhere\n//partial means this class is split over multiple files\n//class is a keyword and think of it as the outermost level of grouping\n//:System.Web.UI.Page means our page inherits the features of a Page\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        //clear label on button click\n        sampLabel.Text = \"\";\n        //make array of salaries\n        decimal[] salaries = \n        new decimal[] { 56789, 78888, 35555, 34533, 75000 };\n        //construct Linq query, which produces a collection of \n        //formatted strings\n        IEnumerable<string> salResults = from salary in salaries\n                              where 35000 <= salary && salary <= 75000\n                              orderby salary descending\n                              select $\"<br>{salary:C}\";\n        foreach(string formattedSalary in salResults)\n        {\n            //display formatted salaries one at a time\n            sampLabel.Text += formattedSalary;\n        }\n        //show horizontal rule on screen\n        sampLabel.Text += \"<br><hr/>\";\n        //make dictionary to hold names and salaries as key/value pairs\n        Dictionary<string, decimal> nameSalaries = \n        new Dictionary<string, decimal>();\n        nameSalaries.Add(\"John Jones\", 45355);\n        nameSalaries.Add(\"John Smith\", 76900);\n        nameSalaries.Add(\"John Jenkins\", 89000);\n        nameSalaries.Add(\"Steve Jobs\", 98000);\n        //query below represents all people named John who make 65000 \n        //and more\n        //this query gives back a formatted string for each key/value \n        //pair that \n        //satisfies the condition\n        IEnumerable<string> dictResults = from nameSalary in nameSalaries\n                            where nameSalary.Key.Contains(\"John\") && \n                            nameSalary.Value >= 65000\n                            select $\"<br>{nameSalary.Key} earns \n                            {nameSalary.Value:C} per year.\";\n        foreach(string nameSal in dictResults)\n        {\n            sampLabel.Text += nameSal;//display named and salaries\n        }\n    }\n}\n```"]