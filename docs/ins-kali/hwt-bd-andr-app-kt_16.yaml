- en: 16\. Launching Your App on Google Play
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 16. 在Google Play上发布您的应用程序
- en: Overview
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 概述
- en: This chapter will introduce you to the Google Play console, release channels,
    and the entire release process. It covers creating a Google Play Developer account,
    setting up the store entry for our developed app, and creating a key store (including
    coverage of the importance of passwords and where to store files). We'll also
    learn about app bundles and APK, looking at how to generate the app's APK or AAB
    file. Later in the chapter, we'll set up release paths, open beta, and closed
    alpha, and finally we'll upload our app to the store and download it on a device.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您介绍Google Play控制台、发布渠道和整个发布流程。它涵盖了创建Google Play开发者帐户、为我们开发的应用程序设置商店条目以及创建密钥库（包括密码的重要性和文件存储位置）。我们还将了解应用程序包和APK，以及如何生成应用程序的APK或AAB文件。在本章的后面部分，我们将设置发布路径、开放测试版和封闭测试版，最后我们将把我们的应用上传到商店并在设备上下载。
- en: By the end of this chapter, you will be able to create your own Google Play
    Developer account, prepare your signed APK or app bundle for publishing, and publish
    your first application on Google Play.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章结束时，您将能够创建自己的Google Play开发者帐户，为发布准备已签名的APK或应用程序包，并在Google Play上发布您的第一个应用程序。
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: You learned how to add animations and transitions with `CoordinatorLayout` and
    `MotionLayout` in the previous chapter. Now, you are ready to develop and launch
    Android applications.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您学会了如何使用`CoordinatorLayout`和`MotionLayout`添加动画和过渡。现在，您已经准备好开发和发布Android应用程序。
- en: After developing Android apps, they will only be available on your devices and
    emulators. You must make them available to everyone so they can download them.
    In turn, you will acquire users and you can earn from them. The official marketplace
    for Android apps is Google Play. With Google Play, the apps and games you release
    can be available to over 2 billion active Android devices globally.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 开发Android应用程序后，它们只能在您的设备和模拟器上使用。您必须使它们对所有人都可用，以便他们可以下载。反过来，您将获得用户，并且可以从他们那里赚钱。Android应用程序的官方市场是Google
    Play。通过Google Play，您发布的应用程序和游戏可以在全球超过20亿活跃的Android设备上使用。
- en: In this chapter, we're going to learn about launching your apps on Google Play.
    We'll start with preparing the apps for release and creating a Google Play Developer
    account. Then, we'll move on to uploading your app and managing app releases.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在Google Play上发布您的应用程序。我们将从为发布准备应用程序和创建Google Play开发者帐户开始。然后，我们将继续上传您的应用程序并管理应用程序发布。
- en: Let's get started with preparing your apps for release on Google Play.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始准备在Google Play上发布您的应用程序。
- en: Preparing Your Apps for Release
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为发布准备您的应用程序
- en: Before publishing an app on Google Play, you must make sure that it is signed
    with a release key and that it has the correct version information. Otherwise,
    you won't be able to publish a new app or an update to an already-published app.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Play上发布应用程序之前，您必须确保它使用了发布密钥进行签名，并且具有正确的版本信息。否则，您将无法发布新应用程序或更新已发布的应用程序。
- en: Let's start with adding versions to your app.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从为您的应用程序添加版本开始。
- en: Versioning Apps
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序版本
- en: 'The version of your app is important for the following reasons:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用程序版本之所以重要，有以下几个原因：
- en: Users can see the version they have downloaded. They can use this when checking
    whether there's an update or whether there are known issues when reporting bugs/problems
    with the app.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以看到他们已下载的版本。在检查是否有更新或报告应用程序的已知问题时，他们可以使用这个信息。
- en: The device and Google Play use the version value to determine whether an app
    can or should be updated.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备和Google Play使用版本值来确定应用程序是否可以或应该更新。
- en: Developers can also use this value to add feature support in specific versions.
    They can also warn or force users to upgrade to the latest version to get important
    fixes on bugs or security issues.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员还可以使用这个值在特定版本中添加功能支持。他们还可以警告或强制用户升级到最新版本，以获得有关错误或安全问题的重要修复。
- en: 'An Android app has two versions: `versionCode` and `versionName`. Now, `versionCode`
    is an integer that is used by developers, Google Play, and the Android system,
    while `versionName` is a string that the users see on the Google Play page for
    your app.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用程序有两个版本：`versionCode`和`versionName`。现在，`versionCode`是一个整数，由开发人员、Google
    Play和Android系统使用，而`versionName`是一个字符串，用户在Google Play页面上看到的。
- en: The initial release of an app can have a `versionCode` value of `1`, and you
    should increase it for each new release.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的初始发布可以将`versionCode`值设为`1`，每次新发布都应该增加这个值。
- en: '`versionName` can be in *x.y* format (where *x* is the major version and the
    *y* is the minor version). You can also use semantic versioning, as in *x.y.z*,
    by adding the patch version with *z*. To learn more about semantic versioning,
    refer to [https://semver.org](https://semver.org).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`versionName`可以采用*x.y*格式（其中*x*是主要版本，*y*是次要版本）。您还可以使用语义版本控制，如*x.y.z*，通过添加*z*来添加补丁版本。要了解更多关于语义版本控制的信息，请参阅[https://semver.org](https://semver.org)。'
- en: 'In the module''s `build.gradle` files, `versionCode` and `versionName` are
    automatically generated when you create a new project in Android Studio. They
    are in the `defaultConfig` block under the `android` block. An example `build.gradle`
    file shows these values:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在模块的`build.gradle`文件中，在Android Studio中创建新项目时，`versionCode`和`versionName`会自动生成。它们位于`android`块下的`defaultConfig`块中。一个示例`build.gradle`文件显示了这些值：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When publishing updates, the new package to be released must have a higher `versionCode`
    value because users cannot downgrade their apps and can only download new versions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布更新时，要发布的新包必须具有更高的`versionCode`值，因为用户无法降级其应用程序，只能下载新版本。
- en: After ensuring that the app version is correct, the next step in the release
    process is to get a keystore to sign the app. This will be discussed in the next
    section.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在确保应用程序版本正确之后，发布流程的下一步是获取一个密钥库来对应用程序进行签名。这将在下一节中讨论。
- en: Creating a Keystore
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建密钥库
- en: Android apps, when run, are automatically signed by a debug key. However, before
    it can be published on Google Play Store, an app must be signed with a release
    key. To do so, you must have a keystore. If you don't have one yet, you can create
    one in Android Studio.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用程序在运行时会自动使用调试密钥进行签名。但是，在将应用程序发布到Google Play商店之前，必须使用发布密钥对应用程序进行签名。为此，您必须拥有一个密钥库。如果您还没有，可以在Android
    Studio中创建一个。
- en: 'Exercise 16.01: Creating a Keystore in Android Studio'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习16.01：在Android Studio中创建密钥库
- en: 'In this exercise, we''ll use Android Studio to make a keystore that can be
    used to sign Android apps. Follow these steps to complete this exercise:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用Android Studio创建一个密钥库，用于签署Android应用程序。按照以下步骤完成这个练习：
- en: Open a project in Android Studio.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android Studio中打开一个项目。
- en: 'Go to the `Build` menu and then click on `Generate Signed Bundle or APK...`:![Figure
    16.1: The Generate Signed Bundle or APK dialog'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到“构建”菜单，然后单击“生成已签名的捆绑包或APK…”：![图16.1：生成已签名的捆绑包或APK对话框
- en: '](img/B15216_16_01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_01.jpg)'
- en: 'Figure 16.1: The Generate Signed Bundle or APK dialog'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.1：生成已签名的捆绑包或APK对话框
- en: 'Make sure either `APK` or `Android App Bundle` is selected, and then click
    the `Next` button. Here, you can choose an existing keystore or create a new one:![Figure
    16.2: The Generate Signed Bundle or APK dialog after selecting APK'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保选择了“APK”或“Android应用程序捆绑包”，然后点击“下一步”按钮。在这里，您可以选择现有的密钥库或创建一个新的：![图16.2：选择APK后点击“下一步”按钮后的生成已签名的捆绑包或APK对话框
- en: and pressing the Next button
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 并点击“下一步”按钮
- en: '](img/B15216_16_02.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_02.jpg)'
- en: 'Figure 16.2: The Generate Signed Bundle or APK dialog after selecting APK and
    pressing the Next button'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.2：选择APK并点击“下一步”按钮后的生成已签名的捆绑包或APK对话框
- en: 'Click the `Create new…` button. The `New Key Store` dialog will then appear:![Figure
    16.3: The New Key Store dialog'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建新…”按钮。然后将出现“新密钥库”对话框：![图16.3：新密钥库对话框
- en: '](img/B15216_16_03.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_03.jpg)'
- en: 'Figure 16.3: The New Key Store dialog'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.3：新密钥库对话框
- en: In the `Key store path` field, choose the location where the keystore file will
    be saved. You can click on the folder icon at the right to select your folder
    and type the filename. The value will be similar to `users/packt/downloads/keystore.keystore`
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“密钥库路径”字段中，选择要保存密钥库文件的位置。您可以点击右侧的文件夹图标选择文件夹并输入文件名。该值将类似于`users/packt/downloads/keystore.keystore`
- en: Provide the password in both the `Password` and `Confirm` fields.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“密码”和“确认”字段中提供密码。
- en: In the certificate section under `Key`, input the first and last name, organizational
    unit, organization, city/locality, state/province, and country code. Only one
    of these is required but it's good to provide all the information.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“密钥”下的证书部分，输入名字、组织单位、组织、城市/地点、州/省和国家代码。这些信息中只有一个是必需的，但最好提供所有信息。
- en: Click the `OK` button. If there is no error, the keystore will be created in
    the path you provided and you will be back in the `Generate Signed Bundle or APK`
    dialog with the keystore values so you continue generating the APK or app bundle.
    You can close the dialog if you only wanted to create a keystore.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”按钮。如果没有错误，密钥库将在您提供的路径中创建，并且您将回到“生成已签名的捆绑包或APK”对话框，以便继续生成APK或应用程序捆绑包。如果您只想创建一个密钥库，可以关闭对话框。
- en: In this exercise, you have created your own keystore that you can use to sign
    applications that can be published to Google Play.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您已经创建了自己的密钥库，可以用来签署可以发布到Google Play的应用程序。
- en: 'You can also use the command line to generate a keystore if you prefer to use
    that. The `keytool` command is available in the **Java Development Kit** (**JDK**).
    The command is as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢使用命令行生成密钥库，也可以这样做。`keytool`命令在**Java开发工具包**（**JDK**）中可用。命令如下：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command creates a 2,048-bit RSA keystore in the current working directory,
    with a filename of `my-key.jks` and an alias of `key-alias`; it is valid for 9,125
    days (25 years). The command line will prompt you to input the keystore password,
    then prompt you to enter it again to confirm. It will then ask you for the first
    and last name, organizational unit, organization name, city or locality, state
    or province, and country code, one at a time. Only one of these is required; you
    can press the *Enter* key if you want to leave something blank. It is good practice,
    though, to provide all the information.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令在当前工作目录中创建一个2,048位的RSA密钥库，文件名为“my-key.jks”，别名为“key-alias”；有效期为9,125天（25年）。命令行将提示您输入密钥库密码，然后提示您再次确认。然后，它将要求您依次输入名字、组织单位、组织名称、城市或地点、州或省和国家代码。这些信息中只有一个是必需的；如果要留空，可以按“Enter”键。不过，最好提供所有信息。
- en: After the country code prompt, you will be asked to verify the input provided.
    You can type yes to confirm. You will then be asked to provide the password for
    the key alias. If you want it to be the same as the keystore password, you can
    press *Enter*. The keystore will then be generated.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在国家代码提示之后，将要求您验证提供的输入。您可以输入yes进行确认。然后将要求您提供密钥别名的密码。如果要与密钥库密码相同，可以按“Enter”。然后将生成密钥库。
- en: Now that you have a keystore for signing your apps, you need to know how you
    can keep it safe. You'll learn about that in the next section.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经有了一个用于签署应用程序的密钥库，需要知道如何保护它。您将在下一节中了解到这一点。
- en: Storing the Keystore and Passwords
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储密钥库和密码
- en: You need to keep the keystore and passwords in a safe and secure place because
    if you lose the keystore and/or the credentials for it, you will no longer be
    able to release updates for your apps. If a hacker also gains access to these,
    they may be able to update your apps without your consent.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将密钥库和密码存放在安全的地方，因为如果您丢失了密钥库和/或其凭据，将无法再发布应用程序更新。如果黑客也能够访问这些内容，他们可能会未经您的同意更新您的应用程序。
- en: You can store the keystore in your CI/build server or in a secure server.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将密钥库存储在CI/构建服务器或安全服务器中。
- en: Keeping the credentials is a bit tricky, as you will need them later when signing
    releases for app updates. One way you can do this is by including this information
    in your project's `build.gradle` file.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 保留凭据有点棘手，因为在以后签署应用更新时，您将需要它们。您可以通过将此信息包含在项目的`build.gradle`文件中来实现这一点。
- en: 'In the `android` block, you can have `signingConfigs`, which references the
    keystore file, its password, and the key''s alias and password:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在`android`块中，您可以有`signingConfigs`，它引用密钥库文件、其密码以及密钥的别名和密码：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Under the release block of the `buildTypes` in the project''s `build.gradle`
    file, you can specify the release config in the `signingConfigs` block:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目的`build.gradle`文件中的`buildTypes`的发布块下，您可以在`signingConfigs`块中指定发布配置：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Storing the signing configs in the `build.gradle` file is not that secure, as
    someone who has access to the project or the repository can compromise the app.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 将签名配置存储在`build.gradle`文件中并不安全，因为可以访问项目或存储库的人可能会 compromise the app。
- en: You can store these credentials in environment variables to make it more secure.
    With this approach, even if malicious people get access to your code, the app
    updates will still be safe as the signing configurations are not stored in your
    code but on the system. An environment variable is a key-value pair that is set
    outside your IDE or project, for example, on your own computer or on a build server.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将这些凭据存储在环境变量中，以使其更安全。通过这种方法，即使恶意人士获得了对您代码的访问权限，应用更新仍将是安全的，因为签名配置并未存储在您的代码中，而是存储在系统中。环境变量是在IDE或项目之外设置的键值对，例如在您自己的计算机上或在构建服务器上。
- en: To use environment variables for keystore configurations in Gradle, you can
    create environment variables for the store file path, store password, key alias,
    and key password. For example, you can use the `KEYSTORE_FILE`, `KEYSTORE_PASSWORD`,
    `KEY_ALIAS`, and `KEY_PASSWORD` environment variables.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Gradle中使用环境变量进行密钥库配置，您可以为存储文件路径、存储密码、密钥别名和密钥密码创建环境变量。例如，您可以使用`KEYSTORE_FILE`、`KEYSTORE_PASSWORD`、`KEY_ALIAS`和`KEY_PASSWORD`环境变量。
- en: 'On Mac and Linux, you can set an environment variable by using the following command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac和Linux上，您可以使用以下命令设置环境变量：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you''re using Windows, it can be done with this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用Windows，可以这样做：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This command will create a `KEYSTORE_PASSWORD` environment variable with `securepassword`
    as the value. In the app `build.gradle` file, you can then use the values from
    the environment variables:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将创建一个名为`KEYSTORE_PASSWORD`的环境变量，其值为`securepassword`。在应用的`build.gradle`文件中，您可以使用环境变量中的值：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Your keystore will be used to sign your app for release so you can publish it
    on Google Play. We'll be discussing that in the next section.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您的密钥库将用于为发布签署您的应用，以便您可以在Google Play上发布它。我们将在下一节中讨论这个问题。
- en: Signing Your Apps for Release
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为发布签署您的应用
- en: When you run an application on an emulator or an actual device, Android Studio
    automatically signs it with the debug keystore. To publish it on Google Play,
    you must sign the APK or app bundle with your own key, using a keystore you made
    in Android Studio or from the command line.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在模拟器或实际设备上运行应用时，Android Studio会自动使用调试密钥库对其进行签名。要在Google Play上发布应用，您必须使用您自己的密钥对APK或应用捆绑包进行签名，使用您在Android
    Studio中或通过命令行创建的密钥库。
- en: If you have added the signing config for the release build in your `build.gradle`
    file, you can automatically build a signed APK or app bundle by selecting the
    release build in the `Build Variants` window. You then need to go to the `Build`
    menu, click on the `Build Bundle(s)` item and then select either `Build APK(s)`
    or `Build Bundle(s)`. The APK or app bundle will be generated in the `app/build/output`
    directory of your project.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经在`build.gradle`文件中为发布版本添加了签名配置，您可以通过在`Build Variants`窗口中选择发布版本构建自动构建已签名的APK或应用捆绑包。然后，您需要转到`Build`菜单，单击`Build
    Bundle(s)`项目，然后选择`Build APK(s)`或`Build Bundle(s)`。APK或应用捆绑包将生成在项目的`app/build/output`目录中。
- en: 'Exercise 16.02: Creating a Signed APK'
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习16.02：创建已签名的APK
- en: 'In this exercise, we will create a signed APK for an Android project using
    Android Studio:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用Android Studio为Android项目创建一个已签名的APK：
- en: Open a project in Android Studio.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android Studio中打开一个项目。
- en: 'Go to the `Build` menu and then click on the `Generate Signed Bundle or APK…`
    menu item:![Figure 16.4: The Generate Signed Bundle or APK Dialog'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`Build`菜单，然后单击`生成已签名的Bundle或APK…`菜单项：![图16.4：生成签名的Bundle或APK对话框
- en: '](img/B15216_16_04.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_04.jpg)'
- en: 'Figure 16.4: The Generate Signed Bundle or APK Dialog'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.4：生成签名的Bundle或APK对话框
- en: 'Select `APK` and then click the `Next` button:![Figure 16.5: The Generate Signed
    Bundle or APK dialog after clicking the Next button'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`APK`，然后单击`下一步`按钮：![图16.5：单击下一步按钮后的生成签名的Bundle或APK对话框
- en: '](img/B15216_16_05.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_05.jpg)'
- en: 'Figure 16.5: The Generate Signed Bundle or APK dialog after clicking the Next
    button'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.5：单击下一步按钮后的生成签名的Bundle或APK对话框。
- en: Choose the keystore you made in *Exercise 16.01*, *Creating a Keystore in Android Studio*.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您在*练习16.01*中创建的密钥库，*在Android Studio中创建密钥库*。
- en: Provide the password in the `Key store password` field.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Key store password`字段中提供密码。
- en: In the `Key alias` field, click the icon on the right side and select the key
    alias.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Key alias`字段中，单击右侧的图标并选择密钥别名。
- en: Provide the alias password in the `Key password` field.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Key password`字段中提供别名密码。
- en: Click the `Next` button.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`下一步`按钮。
- en: Choose the destination folder where the signed APK will be generated.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择生成已签名APK的目标文件夹。
- en: 'In the `Build Variants` field, make sure the `release` variant is selected:![Figure
    16.6: Choose the release build in the Generate Signed Bundle or APK dialog'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Build Variants`字段中，确保选择了`release`变体：![图16.6：在生成签名的Bundle或APK对话框中选择发布版本
- en: '](img/B15216_16_06.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_06.jpg)'
- en: 'Figure 16.6: Choose the release build in the Generate Signed Bundle or APK
    dialog'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.6：在生成签名的Bundle或APK对话框中选择发布版本
- en: For the signature version, select both V1 and V2\. `V2 (Full APK Signature)`
    is a whole-file scheme that increases your app security and makes it faster to
    install. This is only available for Android 7.0 Nougat and above. If you are targeting
    lower than that, you should also use `V1 (Jar Signature)`, which is the old way
    of signing APKs but is less secure than v2.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于签名版本，请选择V1和V2。 “V2（完整APK签名）”是一种整个文件方案，可以增加应用程序的安全性并使其安装速度更快。 这仅适用于Android
    7.0 Nougat及更高版本。 如果您的目标低于此版本，还应使用“V1（Jar签名）”，这是签署APK的旧方式，但安全性不及v2。
- en: 'Click the `Finish` button. Android Studio will build the signed APK. An IDE
    notification will pop up informing you that the signed APK was generated. You
    can click on `locate` to go to the directory where the signed APK file is:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“完成”按钮。 Android Studio将构建已签名的APK。 IDE通知将弹出，通知您已生成已签名的APK。 您可以单击“定位”以转到已签名APK文件所在的目录：
- en: '![Figure 16.7: Pop-up notification for successful signed APK generation'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.7：成功生成已签名APK的弹出通知'
- en: '](img/B15216_16_07.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_07.jpg)'
- en: 'Figure 16.7: Pop-up notification for successful signed APK generation'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.7：成功生成已签名APK的弹出通知
- en: In this exercise, you have made a signed APK that you can now publish on Google
    Play. In the next section, you will learn about Android App Bundle, which is a
    new way of packaging apps for release.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，您已经制作了一个已签名的APK，现在可以在Google Play上发布。 在下一节中，您将了解Android应用捆绑包，这是一种发布应用的新方式。
- en: Android App Bundle
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android应用捆绑包
- en: The traditional way of releasing Android apps is through an APK or an application
    package. This APK file is the one downloaded to users' devices when they install
    your app. This is one big file that will contain all the strings, images, and
    other resources for all device configurations.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 发布Android应用的传统方式是通过APK或应用程序包。 当用户安装您的应用时，将下载此APK文件到他们的设备上。 这是一个包含所有设备配置的字符串、图像和其他资源的大文件。
- en: As you support more device types and more countries, this APK file will grow
    in size. The APK that users download will contain things that would not really
    be needed for their device. This will be an issue for you as users with low storage
    might not have enough space to install your app. Users with expensive data plans
    or slow internet connections might also avoid downloading the app if it's too
    big. They might also uninstall your app to save storage space.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 随着您支持更多的设备类型和更多的国家/地区，此APK文件的大小将增长。 用户下载的APK将包含实际上对其设备不是必需的内容。 对于存储空间较小的用户，这将是一个问题，因为他们可能没有足够的空间来安装您的应用。
    有昂贵数据计划或较慢的互联网连接的用户可能会避免下载太大的应用。 他们可能还会卸载您的应用以节省存储空间。
- en: Some developers have been building and publishing multiple APKs to avoid these
    issues. However, it's a complicated and inefficient solution, especially when
    you target different screen densities, CPU architectures, and languages. That
    would be too many APK files to maintain per release.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一些开发人员一直在构建和发布多个APK以避免这些问题。 但是，这是一个复杂且低效的解决方案，特别是当您针对不同的屏幕密度、CPU架构和语言时。 这将是每个发布版本维护太多APK文件。
- en: Android App Bundle is a new way of packaging apps for publishing. You just generate
    a single app bundle file (using Android Studio 3.2 and up) and upload it on Google
    Play. Google Play will automatically generate the base APK file and the APK files
    for each device configuration, CPU architecture, and language. When users install
    your app, they will only download the necessary APKs for their device. This will
    be smaller in size compared to a universal APK.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用捆绑包是发布应用的新方式。 您只需生成一个单个的应用程序捆绑包文件（使用Android Studio 3.2及更高版本），然后将其上传到Google
    Play。 Google Play将自动生成基本APK文件以及每个设备配置、CPU架构和语言的APK文件。 当用户安装您的应用时，他们只会下载其设备所需的APK文件。
    与通用APK相比，这将更小。
- en: This will work for devices Android 5.0 Lollipop and up; for those below it,
    the APK files that will be generated are only for device configuration and CPU
    architecture. All the languages and other resources will be included on each APK
    file.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这将适用于Android 5.0棒棒糖及更高版本的设备； 对于低于此版本的设备，将仅生成设备配置和CPU架构的APK文件。 所有语言和其他资源将包含在每个APK文件中。
- en: 'Exercise 16.03: Creating a Signed App Bundle'
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习16.03：创建已签名的应用程序捆绑包
- en: 'In this exercise, we will create a signed app bundle for an Android project
    using Android Studio:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将使用Android Studio为Android项目创建一个已签名的应用程序捆绑包：
- en: Open a project in Android Studio.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android Studio中打开一个项目。
- en: 'Go to the `Build` menu, then click on the `Generate Signed Bundle or APK…`
    menu item:![Figure 16.8: The Generate Signed Bundle or APK dialog'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到“构建”菜单，然后单击“生成签名捆绑包或APK…”菜单项：![图16.8：生成签名捆绑包或APK对话框
- en: '](img/B15216_16_08.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_08.jpg)'
- en: 'Figure 16.8: The Generate Signed Bundle or APK dialog'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.8：生成签名捆绑包或APK对话框
- en: 'Select `Android App Bundle`, then click the `Next` button:![Figure 16.9: The
    Generate Signed Bundle or APK dialog after clicking the Next button'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“Android应用捆绑包”，然后单击“下一步”按钮：![图16.9：单击“下一步”按钮后生成签名捆绑包或APK对话框
- en: '](img/B15216_16_09.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_09.jpg)'
- en: 'Figure 16.9: The Generate Signed Bundle or APK dialog after clicking the Next
    button'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.9：单击“下一步”按钮后生成签名捆绑包或APK对话框
- en: Choose the keystore you made in *Exercise 16.01*, *Creating a Keystore in Android Studio*.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您在*练习16.01*中创建的密钥库，*在Android Studio中创建密钥库*。
- en: Provide the password in the `Key store password` field.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“密钥库密码”字段中提供密码。
- en: In the `Key alias` field, click the icon at the right side and select the key
    alias.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“密钥别名”字段中，单击右侧的图标并选择密钥别名。
- en: Provide the alias password in the `Key password` field.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“密钥密码”字段中提供别名密码。
- en: Click the `Next` button.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“下一步”按钮。
- en: Choose the destination folder where the signed app bundle will be generated.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择生成已签名应用程序捆绑包的目标文件夹。
- en: 'In the `Build Variants` field, make sure the `release` variant is selected:![Figure
    16.10: Choose the release build in the Generate Signed Bundle or APK dialog'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“构建变体”字段中，确保选择了“发布”变体：![图16.10：在生成签名捆绑包或APK对话框中选择发布版本
- en: '](img/B15216_16_10.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_10.jpg)'
- en: 'Figure 16.10: Choose the release build in the Generate Signed Bundle or APK
    dialog'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.10：在生成已签名的应用程序包或APK对话框中选择发布版本
- en: 'Click the `Finish` button. Android Studio will build the signed app bundle.
    An IDE notification will pop up informing you that the signed app bundle was generated.
    You can click on `locate` to go to the directory where the signed app bundle file
    is:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`完成`按钮。Android Studio将构建已签名的应用程序包。IDE通知将弹出，通知您已生成已签名的应用程序包。您可以单击`定位`以转到已签名的应用程序包文件所在的目录：
- en: '![Figure 16.11: Pop up notification that the signed app bundle was generated'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.11：弹出通知，已生成已签名的应用程序包'
- en: '](img/B15216_16_11.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_11.jpg)'
- en: 'Figure 16.11: Pop up notification that the signed app bundle was generated'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.11：弹出通知，已生成已签名的应用程序包
- en: In this exercise, you have made a signed app bundle that you can now publish
    on Google Play.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您已经制作了一个已签名的应用程序包，现在可以在Google Play上发布。
- en: To be able to publish your app with the Android app bundle format, you will
    need to opt in to app signing by Google Play. We will discuss Google Play app
    signing in the next section.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够以Android应用程序包格式发布您的应用程序，您需要选择通过Google Play进行应用签名。我们将在下一节讨论Google Play应用签名。
- en: App Signing by Google Play
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Play应用签名
- en: Google Play provides a service called app signing that allows Google to manage
    and protect your app signing keys and automatically re-sign your app for the users.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play提供了一项名为应用签名的服务，允许Google管理和保护您的应用签名密钥，并为用户自动重新签名您的应用。
- en: With Google Play app signing, you can either let Google generate the signing
    key or upload yours. You can also create a different upload key for additional
    security. You can sign the app with the upload key and publish the app on the
    Play Console. Google will check the upload key, remove it, and use the app signing
    key to re-sign the app for distribution to users. When app signing is enabled
    for the app, the upload key can be reset. If you lose the upload key or feel that
    it is already compromised, you can simply contact Google Play developer support,
    verify your identity, and get a new upload key.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Google Play应用签名，您可以让Google生成签名密钥，也可以上传您自己的签名密钥。您还可以为了额外的安全性创建不同的上传密钥。您可以使用上传密钥对应用程序进行签名，并在Play控制台上发布应用程序。Google将检查上传密钥，删除它，并使用应用签名密钥重新签名应用程序以分发给用户。当应用签名对应用程序启用时，可以重置上传密钥。如果您丢失了上传密钥或认为它已经被泄露，您可以简单地联系Google
    Play开发者支持，验证您的身份，并获得新的上传密钥。
- en: It is easy to opt in to app signing when publishing a new app. In the Google
    Play Console ([https://play.google.com/console](https://play.google.com/console)),
    you can go to the `Release Management` | `App Releases` section and select `Continue`
    in the `Let Google manage and protect your app signing key` section. The key you
    originally used to sign the app will become the upload key and Google Play will
    generate a new app signing key.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布新应用程序时，选择应用签名是很容易的。在Google Play控制台([https://play.google.com/console](https://play.google.com/console))中，您可以转到`发布管理`
    | `应用发布`部分，并在`让Google管理和保护您的应用签名密钥`部分选择`继续`。您最初用于签署应用的密钥将成为上传密钥，Google Play将生成新的应用签名密钥。
- en: You can also convert your existing apps to use app signing. This is available
    in the `Release` | `Setup` | `App Signing` section of the app in the Google Play
    Console. You would need to upload your existing app signing key and generate a
    new upload key.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将现有的应用程序转换为使用应用签名。这在Google Play控制台中应用程序的`发布` | `设置` | `应用签名`部分中可用。您需要上传现有的应用签名密钥并生成新的上传密钥。
- en: Once you enroll in Google Play app signing, you will no longer be able to opt
    out. Also, if you are using third-party services, you would need to use the app
    signing key's certificate. This is available in `Release Management` | `App Signing`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您加入Google Play应用签名，您将无法再退出。此外，如果您使用第三方服务，您需要使用应用签名密钥的证书。这在`发布管理` | `应用签名`中可用。
- en: App signing also enables you to upload an app bundle, and Google Play will automatically
    sign and generate APK files that users will download when they install your app.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 应用签名还使您能够上传应用程序包，Google Play将自动签名并生成用户在安装您的应用程序时将下载的APK文件。
- en: In the next section, you will be creating a Google Play developer account so
    you can publish an app's signed APK or app bundle to Google Play.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将创建一个Google Play开发者帐户，以便您可以将应用程序的已签名APK或应用程序包发布到Google Play。
- en: Creating a Developer Account
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建开发者帐户
- en: To publish applications on Google Play, the first step that you need to take
    is to create a Google Play developer account. Head over to [https://play.google.com/console/signup](https://play.google.com/console/signup)
    and log in with your Google account. If you don't have one, you should create
    one first.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Google Play上发布应用程序，您需要采取的第一步是创建一个Google Play开发者帐户。前往[https://play.google.com/console/signup](https://play.google.com/console/signup)并使用您的Google账户登录。如果您还没有Google账户，您应该首先创建一个。
- en: It is recommended to use a Google account that you plan to use in the long term
    instead of a throwaway one. Read the developer distribution agreement and agree
    to the terms of service.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用长期计划使用的Google账户，而不是一次性账户。阅读开发者分发协议并同意服务条款。
- en: Note
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If your goal is to sell paid apps or add in-app products to your apps/games,
    you must also create a merchant account. This is not available in all countries,
    unfortunately. We won't cover this here, but you can read more about it on the
    registration page or at [https://support.google.com/googleplay/android-developer/answer/150324](https://support.google.com/googleplay/android-developer/answer/150324).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的目标是销售付费应用程序或向您的应用程序/游戏添加应用内产品，您还必须创建一个商户账户。不幸的是，这并非所有国家都可以使用。我们在这里不会涉及这个问题，但您可以在注册页面或[https://support.google.com/googleplay/android-developer/answer/150324](https://support.google.com/googleplay/android-developer/answer/150324)上阅读更多信息。
- en: You will need to pay a $25 USD registration fee to create your Google Play Developer
    account. This is a one-time payment). The fee must be paid using a valid debit/credit
    card, but some prepaid/virtual credit cards work too. What you can use varies
    by location/country.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要支付25美元的注册费用来创建您的Google Play开发者帐户（这是一次性付款）。该费用必须使用有效的借记卡/信用卡支付，但某些预付/虚拟信用卡也可以使用。您可以根据位置/国家使用的方式有所不同。
- en: The final step is to complete the account details, such as the developer name,
    email address, website, and phone number. These, which can also be updated later,
    will form the developer information displayed on your app's store listing.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是完成帐户详细信息，如开发者名称、电子邮件地址、网站和电话号码。这些信息也可以稍后更新，将形成显示在您应用程序商店列表上的开发者信息。
- en: After completing the registration, you will receive a confirmation email. It
    may take a few hours (up to 48 hours) for your payment to be processed and your
    account registered, so be patient. Ideally, you should do this in advance even
    if your app is not yet ready, so that once it's ready for release, you can easily
    publish the app.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 完成注册后，您将收到一封确认电子邮件。您的付款可能需要几个小时（最多48小时）才能处理并注册您的帐户，所以请耐心等待。理想情况下，即使您的应用程序还没有准备好，也应提前进行此操作，以便一旦准备好发布，您就可以轻松地发布该应用程序。
- en: When you have received the confirmation email from Google, you can start publishing
    apps and games to Google Play.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 当您收到来自Google的确认电子邮件时，您可以开始将应用程序和游戏发布到Google Play。
- en: In the next section, we will be discussing uploading apps to Google Play.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将讨论将应用程序上传到Google Play。
- en: Uploading an App to Google Play
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传应用程序到Google Play
- en: Once you have an app ready for release and a Google Play Developer account,
    you can go to the Google Play Console ([https://play.google.com/console](https://play.google.com/console))
    to publish the app.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您准备好发布应用程序并拥有Google Play开发者帐户，您可以转到Google Play控制台（[https://play.google.com/console](https://play.google.com/console)）发布应用程序。
- en: To upload an app, go to the Play Console, click `All Apps`, and then click `Create
    app`. Provide the name of the application and the default language. In the App
    or game section, set if it's an app or game. Likewise, in the Free or paid section,
    set if it's free or paid. Create your store listing, prepare the app release,
    and roll out the release. We'll have a look at the detailed steps in this section.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传应用程序，请转到Play控制台，单击“所有应用程序”，然后单击“创建应用程序”。提供应用程序的名称和默认语言。在应用程序或游戏部分，设置它是应用程序还是游戏。同样，在免费或付费部分，设置它是免费还是付费。创建您的商店列表，准备应用程序发布，并推出发布。我们将在本节中详细介绍这些步骤。
- en: Creating a Store Listing
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建商店列表
- en: The store listing is what users first see when they open your app's page on
    Google Play. If the app is already published, you can go to `Grow` then `Store
    presence` and then select `Main store listing`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 商店列表是用户在打开您的应用程序在Google Play上的页面时首先看到的内容。如果应用程序已经发布，您可以转到“增长”，然后选择“商店出现”，然后选择“主商店列表”。
- en: App Details
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用详细信息
- en: 'You will be navigated to the `App details` page. On the `App details` page,
    you need to fill in the following fields:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被导航到“应用详细信息”页面。在“应用详细信息”页面上，您需要填写以下字段：
- en: '`App name`: Your app''s name (the maximum amount of characters is 50).'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`应用名称`：您的应用程序名称（最多50个字符）。'
- en: '`Short description`: Short text summarizing your app (the maximum amount of
    characters is 80).'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`简短描述`：总结您的应用程序的简短文本（最多80个字符）。'
- en: '`Full description`: Long description of your app. The limit is 4,000 characters,
    so you can add a lot of relevant information here, such as what its features are
    and things users would need to know.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`完整描述`：您应用程序的长描述。限制为4,000个字符，因此您可以在此处添加大量相关信息，例如其功能和用户需要了解的内容。'
- en: Note
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For the product details, you can add localized versions depending on the languages/countries
    where you will release your app.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 对于产品详细信息，您可以根据您将发布应用程序的语言/国家添加本地化版本。
- en: Your app title and description must not contain copyrighted materials and spam
    as it might get your app rejected.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用程序标题和描述不得包含受版权保护的材料和垃圾邮件，因为这可能会导致您的应用程序被拒绝。
- en: Graphic Assets
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图形资产
- en: 'In this section, provide the following details:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在此部分提供以下详细信息：
- en: An icon (a high-resolution icon that is 512 x 512).
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标（512 x 512的高分辨率图标）。
- en: 'Feature graphic (1,024 x 500):'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特色图形（1,024 x 500）：
- en: '2-8 screenshots of the app. If your app supports other form factors (tablet,
    TV, or Wear OS), you should also add screenshots for each form factor:'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的2-8张屏幕截图。如果您的应用程序支持其他形式因素（平板电脑、电视或Wear OS），您还应该为每种形式因素添加屏幕截图：
- en: You can also add promo graphics and promo videos, if you have any.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以添加促销图形和促销视频，如果有的话。
- en: Your app can be rejected if you use graphics that violate Google Play policy,
    so ensure that the images you use are your own and don't include copyrighted or
    inappropriate content.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用违反Google Play政策的图形，您的应用可能会被拒绝，因此请确保您使用的图像是您自己的，并且不包含受版权保护或不适当的内容。
- en: Preparing the Release
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备发布
- en: Before preparing your release, make sure that your build is signed with a signature
    key. If you're publishing an app update, make sure that it is of the same package
    name, signed with the same key, and with a version code higher than the current
    one on Play.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备发布之前，请确保您的构建已使用签名密钥签名。如果您要发布应用程序更新，请确保它与Play上当前版本代码更高的相同包名称、相同密钥签名。
- en: You must also make sure you follow the developer policy (so as to avoid any
    violations) and make sure that your app follows the app quality guidelines. More
    of these are listed on the launch checklist, which you can see at [https://support.google.com/googleplay/android-developer/](https://support.google.com/googleplay/android-developer/).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 您还必须确保遵循开发者政策（以避免任何违规行为），并确保您的应用程序符合应用程序质量指南。更多信息列在发布检查表上，您可以在[https://support.google.com/googleplay/android-developer/](https://support.google.com/googleplay/android-developer/)上查看。
- en: APK/App Bundle
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: APK/应用程序包
- en: 'You can upload an APK (an Android Package) or the newer format: Android App
    Bundle. Go to `Release` and then `App Releases`. This will display a summary of
    active and draft releases in each track.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以上传APK（Android包）或更新的格式：Android应用程序包。转到“发布”，然后转到“应用发布”。这将显示每个跟踪中活动和草稿发布的摘要。
- en: 'There are different tracks where you can release the app:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的跟踪可以发布应用程序：
- en: Production
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产
- en: Open testing
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开放测试
- en: Closed testing
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 封闭测试
- en: Internal testing
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部测试
- en: We'll discuss the release tracks in detail in the `Managing App Releases` section
    of this chapter.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章的“管理应用发布”部分详细讨论发布跟踪。
- en: Select the track where you will create the release. For the production track,
    you can select `Manage` on the left. For the other tracks, click `Testing` first
    then select the track. To release on a Closed testing track, you must also select
    `Manage track` and then create a new track by clicking on `Create track`.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要创建发布的跟踪。对于生产跟踪，您可以在左侧选择“管理”。对于其他跟踪，请先单击“测试”，然后选择跟踪。要在封闭测试跟踪上发布，您还必须选择“管理跟踪”，然后通过单击“创建跟踪”来创建新的跟踪。
- en: Once done, you can click `Create new release` at the top right of the page.
    In the `Android App Bundles and APKs to add` section, you can upload your APK
    or app bundle.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以在页面右上角单击“创建新发布”。在“要添加的Android应用程序包和APK”部分，您可以上传您的APK或应用程序包。
- en: Make sure that the app bundle or APK file is signed by your release signing
    key. The Google Play Console will not accept it if it's not properly signed. If
    you're publishing an update, the version code for the app bundle or APK must be
    higher than the existing version.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 确保应用程序包或APK文件由您的发布签名密钥签名。如果没有正确签名，Google Play控制台将不接受它。如果您要发布更新，则应用程序包或APK的版本代码必须高于现有版本。
- en: You can also add a release name and release notes. The release name is for the
    developer's use to track the release and won't be visible to users. By default,
    the version name of the APK or app bundle uploaded is set as the release name.
    The release notes form the text that will be shown on the Play page and will inform
    users of what the updates to the app are.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以添加发布名称和发布说明。发布名称是开发人员用来跟踪发布的，不会对用户可见。默认情况下，上传的APK或应用程序包的版本名称将设置为发布名称。发布说明形成了将显示在Play页面上的文本，并将通知用户应用程序的更新内容。
- en: The text for the release notes must be added inside the tags for the language.
    For example, the opening and closing tags for the default US English language
    are `<en-US>` and `</en-US>`. If your app supports multiple languages, each language
    tag will be displayed in the field for the release notes by default. You can then
    add the release notes for each language.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 发布说明的文本必须添加在语言标签内。例如，默认的美国英语语言的开放和闭合标签分别为<en-US>和</en-US>。如果您的应用支持多种语言，则默认情况下每种语言标签都将显示在发布说明字段中。然后，您可以为每种语言添加发布说明。
- en: If you have already released the app, you can copy the release notes from previous
    releases and reuse or modify them by clicking the `Copy from a previous release`
    button and selecting from the list.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经发布了应用程序，可以通过单击“从以前的发布复制”按钮并从列表中进行选择来复制以前发布的发布说明并重用或修改它们。
- en: When you click the `Save` button, the release will be saved and you can go back
    to it later. The `Review release` button will take you to the screen where you
    can review and roll out the release.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“保存”按钮后，发布将被保存，您可以随后返回。单击“审核发布”按钮将带您到屏幕，您可以在其中审核和发布发布。
- en: Rolling Out a Release
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布发布
- en: 'If you''re ready to roll out your release, go to the Play Console and select
    your app. Go to `Release` and select your release track. Click the releases tab
    and then click on the `Edit` button next to the release:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您准备发布您的发布，请转到Play控制台并选择您的应用。转到“发布”并选择您的发布跟踪。单击发布选项卡，然后单击发布旁边的“编辑”按钮：
- en: '![Figure 16.12: A draft release on the production track'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.12：生产跟踪上的草稿发布'
- en: '](img/B15216_16_12.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_12.jpg)'
- en: 'Figure 16.12: A draft release on the production track'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.12：生产跟踪上的草稿发布
- en: You can review the APK or app bundle, release names, and release notes. Click
    the `Review release` button to start the rollout for the release. The Play Console
    will open the `Review and release` screen. Here, you can review the release information
    and check whether there are warnings and errors.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以查看APK或应用程序包、发布名称和发布说明。单击“审核发布”按钮开始发布。Play控制台将打开“审核和发布”屏幕。在这里，您可以查看发布信息，并检查是否有警告和错误。
- en: If you are updating an app, you can also select the rollout percentage when
    creating another release. Setting it to 100% means it will be available for all
    your users to download. When you set it to a lower percentage, for example, 50%,
    the release will be available to half of your existing users.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在更新应用程序，还可以在创建另一个发布时选择发布百分比。将其设置为100%表示所有用户都可以下载。当您将其设置为较低的百分比，例如50%，则发布将对一半现有用户可用。
- en: 'If you''re confident with the release, you can select the `START ROLLOUT TO
    PRODUCTION` button at the bottom of the page. After publishing your app, it will
    take a while (7 days or longer for new apps) before it is reviewed. You can see
    the status in the top-right corner of the Google Play Console. These statuses
    include the following:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对发布有信心，可以在页面底部选择“开始发布到生产”按钮。发布应用后，需要一段时间（新应用可能需要7天或更长时间）进行审核。您可以在Google Play控制台的右上角看到状态。这些状态包括以下内容：
- en: Pending publication (your new app is being reviewed)
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 待发布（您的新应用正在审核中）
- en: Published (your app is now available on Google Play)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已发布（您的应用现在可以在Google Play上使用）
- en: Rejected (your app wasn't published because of a policy violation)
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝（您的应用因违反政策而未发布）
- en: Suspended (your app violated Google Play policy and was suspended)
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暂停（您的应用违反了Google Play政策并被暂停）
- en: If there are issues with your app, you can resolve them and resubmit the app.
    Your app can be rejected for reasons such as copyright infringement, impersonation,
    and spam.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序存在问题，您可以解决问题并重新提交应用程序。您的应用程序可能因侵犯版权、冒充和垃圾邮件等原因而被拒绝。
- en: Once the app has been published, users can now download it. It can take some
    time before the new app or the app update becomes live on Google Play. If you're
    trying to search for your app on Google Play, it might not be searchable. Make
    sure you publish it on the production or open track.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序发布后，用户现在可以下载它。新应用程序或应用程序更新在Google Play上变为可用之前可能需要一些时间。如果您试图在Google Play上搜索您的应用程序，可能无法搜索到。确保将其发布到生产或公开轨道上。
- en: Managing App Releases
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理应用发布
- en: You can slowly release your apps on different tracks so you can test it before
    rolling it out publicly to users. You can also do timed publishing to make the
    app available on a certain date, instead of automatically publishing it once approved
    by Google.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在不同轨道上逐步发布应用程序，以便在向公众推出之前对其进行测试。您还可以进行定时发布，使应用程序在特定日期可用，而不是在获得Google批准后自动发布。
- en: Release Tracks
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布轨道
- en: 'When creating a release for an app, you can choose between four different tracks:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在为应用程序创建发布时，您可以在四个不同的轨道之间进行选择：
- en: Production is where everyone can see the app.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产是每个人都可以看到应用程序的地方。
- en: Open testing is targeted at wider public testing. The release will be available
    on Google Play and anyone can join the beta program and test.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公开测试是针对更广泛的公开测试。发布将在Google Play上可用，任何人都可以加入测试计划并进行测试。
- en: Closed testing is intended for small groups of users testing pre-release versions.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 封闭测试是为测试预发布版本的小群用户而设计的。
- en: Internal testing is for developer/tester builds while developing/testing an
    app.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部测试是用于开发/测试应用程序时的开发者/测试人员构建。
- en: The internal, closed, and open tracks allow developers to create a special release
    and allow real users to download it while the rest of the users are on the production
    version. This will give you a way to quickly know whether the release has bugs
    and quickly fix them before rolling it out to everyone. User feedback on these
    tracks will also not affect the public reviews/ratings of your app.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 内部、封闭和公开轨道允许开发人员创建特殊发布，并允许真实用户下载，而其他用户则使用生产版本。这将使您能够快速了解发布是否存在错误，并在将其推出给所有人之前快速修复。这些轨道上的用户反馈也不会影响您应用程序的公共评论/评分。
- en: The ideal way is to release it first on internal tracks during development and
    internal testing. When a pre-release version is ready, you can create a closed
    test for a small group of trusted people/users/testers. Then, you can create an
    open test to allow other users to try your app before the full launch in production.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 理想的方式是在开发和内部测试期间首先在内部轨道上发布。当预发布版本准备就绪时，您可以为一小群受信任的人/用户/测试人员创建封闭测试。然后，您可以创建一个公开测试，让其他用户在完全发布之前尝试您的应用程序。
- en: To go to each track and manage releases, you can go to the `Release` section
    of the Google Play Console and select `Production` or `Testing` and then the Open,
    Closed, or Internal tracks.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入每个轨道并管理发布，您可以转到Google Play控制台的“发布”部分，然后选择“生产”或“测试”，然后选择公开、封闭或内部轨道。
- en: Feedback Channel and Opt-in Link
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 反馈渠道和选择加入链接
- en: In the internal, closed, and open tracks, there is a section for `Feedback URL
    or email address` and `How testers join your test`. You can provide an email address
    or a website in `Feedback URL or email address` where the testers can send their
    feedback. This is displayed when they opt in to your testing program.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部、封闭和公开轨道上，有一个“反馈URL或电子邮件地址”和“测试人员如何加入您的测试”的部分。您可以在“反馈URL或电子邮件地址”中提供一个电子邮件地址或网站，测试人员可以在加入测试计划时发送反馈。当他们选择加入您的测试计划时，这将显示出来。
- en: In the `How testers join your test` section, you can copy the link to share
    with your testers. They can then join the testing program using this link.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在“测试人员加入您的测试”部分，您可以复制链接与测试人员分享。然后他们可以使用此链接加入测试程序。
- en: Internal Testing
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内部测试
- en: This track is for builds while developing/testing the app. Releases here will
    be quickly available on Google Play for internal testers. In the `Testers` tab,
    there's a Testers section. You can choose an existing list or create a new one.
    There is a maximum of 100 testers for an internal test.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此轨道用于开发/测试应用程序时的构建。在此处发布的版本将很快在Google Play上供内部测试人员使用。在“测试人员”选项卡中，有一个测试人员部分。您可以选择现有列表或创建新列表。内部测试最多可有100名测试人员。
- en: Closed Testing
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 封闭测试
- en: 'In the `Testers` tab, you can choose an email list or Google Groups for the
    testers. If you choose email lists, choose a list of testers or create a new list.
    There is a maximum of 2,000 testers for a closed test:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在“测试人员”选项卡中，您可以为测试人员选择电子邮件列表或Google Groups。如果选择电子邮件列表，请选择测试人员列表或创建新列表。封闭测试最多可有2,000名测试人员：
- en: 'If you select Google Groups, you can provide the Google Group email address
    (for example, `the-alpha-group@googlegroups.com`) and all the members of that
    group will become testers:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择Google Groups，您可以提供Google Group的电子邮件地址（例如，`the-alpha-group@googlegroups.com`），该组的所有成员将成为测试人员：
- en: Open Testing
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公开测试
- en: 'In the Testers tab, you can set `Unlimited` or `Limited number` for the testers.
    The minimum testers for the limited testing that you can set is 1,000:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在“测试人员”选项卡中，您可以为测试人员设置“无限”或“有限数量”。有限测试的最小测试人员数量为1,000人：
- en: In the open, closed, and internal tracks, you can add users to be your testers
    for your applications. You will learn how to add testers in the next section.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在公开、封闭和内部轨道中，您可以添加用户作为您应用程序的测试人员。您将在下一节学习如何添加测试人员。
- en: Staged Rollouts
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分阶段发布
- en: When rolling out app updates, you can release them to a small group of users
    first. When the release has issues, you can stop the rollout or publish another
    update to fix the issues. If there are none, you can slowly increase the rollout
    percentage. This is called **staged rollout**.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在推出应用程序更新时，您可以首先将其发布给一小部分用户。如果发布存在问题，您可以停止发布或发布另一个更新来修复问题。如果没有问题，您可以逐渐增加发布百分比。这被称为**分阶段发布**。
- en: If you have published an update to less than 100% of your users, you can go
    to the Play Console, select `Release`, click the track, then select the `Releases`
    tab. Below the release you want to update, you can see the `Manage rollout` dropdown.
    It will have options to update or halt the rollout.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已向少于100%的用户发布了更新，您可以转到Play控制台，选择“发布”，单击轨道，然后选择“发布”选项卡。在您想要更新的发布下方，您可以看到“管理推出”下拉菜单。它将有更新或停止推出的选项。
- en: You can select the `Manage rollout` then `Update rollout` to increase the percentage
    of rollout of the release. A dialog will appear where you can input the rollout
    percentage. You can click the `Update` button to update the percentage.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择“管理推出”，然后选择“更新推出”以增加发布的推出百分比。将出现一个对话框，您可以在其中输入推出百分比。您可以单击“更新”按钮以更新百分比。
- en: A 100% rollout will make the release available to all of your users. A percentage
    below that means the release will only be available to that percentage of your
    users.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 100%的推出将使发布对所有用户可用。低于该百分比意味着发布只对该百分比的用户可用。
- en: 'If, during a staged rollout, a major bug or crash is found, you can go to the
    Play Console, select `Release`, click the track, then select the `Releases` tab.
    Under the release you want to update, select `Manage rollout` then `Halt rollout`.
    A dialog will appear with additional information. Add an optional note then click
    the `Halt` button to confirm:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在分阶段推出期间发现了重大错误或崩溃，您可以转到Play控制台，选择“发布”，单击轨道，然后选择“发布”选项卡。在您想要更新的发布下方，选择“管理推出”，然后选择“停止推出”。将出现一个带有附加信息的对话框。添加一个可选的注释，然后单击“停止”按钮进行确认：
- en: '![Figure 16.13: The dialog for halting a staged rollout'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.13：停止分阶段推出的对话框'
- en: '](img/B15216_16_13.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_13.jpg)'
- en: 'Figure 16.13: The dialog for halting a staged rollout'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.13：停止分阶段推出的对话框
- en: 'When a staged rollout is halted, the release page in your track page will be
    updated with `Rollout halted` text and a `Resume rollout` button:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 当分阶段推出被停止时，您的轨道页面中的发布页面将更新为“推出已停止”文本和“恢复推出”按钮：
- en: '![Figure 16.14: The release page for a halted staged rollout'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.14：停止分阶段推出的发布页面'
- en: '](img/B15216_16_14.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_14.jpg)'
- en: 'Figure 16.14: The release page for a halted staged rollout'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.14：停止分阶段推出的发布页面
- en: If you have fixed the issue, for example, in the backend, and there's no need
    to release a new update, you can resume your staged rollout. To do that, go to
    the Play Console and select `Release`, click the track, then select the `Releases`
    tab. Choose the release and click the `Resume rollout` button. In the `Resume
    staged rollout` dialog, you can update the percentage and click `Resume rollout`
    to continue the rollout.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已解决了问题，例如在后端，而且没有必要发布新的更新，您可以恢复分阶段推出。要做到这一点，转到Play控制台，选择“发布”，单击轨道，然后选择“发布”选项卡。选择发布并单击“恢复推出”按钮。在“恢复分阶段推出”对话框中，您可以更新百分比，然后单击“恢复推出”以继续推出。
- en: Managed Publishing
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 托管发布
- en: When you roll out a new release on Google Play, it will be published in a few
    minutes. You can change it to be published at a later time. This is useful when
    you are targeting a specific day, for example, the same day as an iOS/web release
    or after a launch date.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Play上推出新版本后，将在几分钟内发布。您可以将其更改为在以后的时间发布。当您针对特定日期时，例如与iOS/web发布的同一天或在发布日期之后，这将非常有用。
- en: 'Managed publishing must be set up before creating and releasing the update
    you want to control the publishing. When you select your app on the Google Play
    Console, you can select `Publishing Overview` on the left side. In the `Managed
    publishing status` section, click on the `Manage` button:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建和发布您想要控制发布的更新之前，必须设置托管发布。当您在Google Play控制台上选择您的应用时，您可以在左侧选择“发布概述”。在“托管发布状态”部分，单击“管理”按钮：
- en: '![Figure 16.15: Managed publishing on Publishing overview'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.15：发布概述上的托管发布'
- en: '](img/B15216_16_15.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_15.jpg)'
- en: 'Figure 16.15: Managed publishing on Publishing overview'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.15：发布概述上的托管发布
- en: The Managed publishing status will be displayed. Here, you can turn managed
    publishing on or off then click the `Save` button.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示托管发布状态。在这里，您可以打开或关闭托管发布，然后单击“保存”按钮。
- en: 'When you turn on `Managed publishing`, you can continue adding and submitting
    updates to the app. You can see these changes in the `Publishing overview` under
    the `Changes in review` section:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 当您打开“托管发布”时，您可以继续添加和提交应用的更新。您可以在“发布概述”中的“审查更改”部分看到这些更改：
- en: Once the changes have been approved, the `Changes in review` will be empty and
    will be moved to the `Changes ready to publish` section. There, you can click
    on the `Review and publish` button. In the dialog that appears, you can click
    on the `Publish` button to confirm. Your update will then be published instantly.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦更改得到批准，“审查更改”将为空，并将移至“准备发布的更改”部分。在那里，您可以单击“审查和发布”按钮。在出现的对话框中，您可以单击“发布”按钮进行确认。然后您的更新将立即发布。
- en: '![Figure 16.16: Managed publishing Changes ready to publish'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '![图16.16：托管发布准备发布的更改'
- en: '](img/B15216_16_16.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15216_16_16.jpg)'
- en: 'Figure 16.16: Managed publishing Changes ready to publish'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.16：托管发布准备发布的更改
- en: 'Activity 16.01: Publishing an App'
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动16.01：发布应用
- en: 'As the final activity of this book, you are tasked with creating a Google Play
    Developer account and publishing a newly developed Android app that you have built.
    You could publish one of the apps you''ve built as part of this book, or another
    project that you''ve been developing. You can use the following steps as guidelines:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本书的最后一个活动，您的任务是创建一个Google Play开发者帐户，并发布您构建的新开发的Android应用程序。您可以发布本书的其中一个应用，或者您一直在开发的其他项目。您可以使用以下步骤作为指南：
- en: Go to the Google Play Developer Console ([https://play.google.com/console](https://play.google.com/console))
    and create an account.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到Google Play开发者控制台（[https://play.google.com/console](https://play.google.com/console)）并创建一个帐户。
- en: Create a keystore that you can use for signing the release build.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个可用于签署发布版本的密钥库。
- en: Generate an Android app bundle for release.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为发布生成一个Android应用程序包。
- en: Publish the app on an open beta track, before releasing it to the production track.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将应用发布到生产轨道之前，可以将其发布到公开测试版轨道。
- en: Note
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The detailed steps for publishing an app have been explained throughout this
    chapter, so there is no separate solution available for this activity. You can
    follow the exercises of this chapter to successfully complete the preceding steps.
    The exact steps required will be unique to your app and will depend on the settings
    you want to use.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 本章已经详细解释了发布应用的步骤，因此针对这一活动没有单独的解决方案。您可以按照本章的练习成功完成前面的步骤。所需的确切步骤将是与您的应用独特相关的，并且将取决于您想要使用的设置。
- en: Summary
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'This chapter covered the Google Play Store: from preparing a release, to creating
    a Google Play Developer account, to finally publishing your app. We started with
    versioning your apps, generating a keystore, creating an APK file or Android app
    bundle and signing it with a release keystore, and storing the keystore and its
    credentials. We then moved on to registering an account on the Google Play Console,
    uploading your APK file or app bundle, and managing releases.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了Google Play商店：从准备发布、创建Google Play开发者帐户，到最终发布您的应用。我们从为您的应用版本化开始，生成密钥库，创建APK文件或Android应用捆绑包，并使用发布密钥库对其进行签名，以及存储密钥库及其凭据。然后我们转向在Google
    Play控制台上注册帐户，上传您的APK文件或应用捆绑包，并管理发布。
- en: This is the culmination of the work done throughout this book—publishing your
    app and opening it up to the world is a great achievement and demonstrates the
    progress you've made throughout this course.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书贯穿始终的工作的最终成果——发布您的应用并向世界开放，这是一个伟大的成就，也证明了您在本课程中取得的进步。
- en: Throughout this book, you have gained many skills, starting with the basics
    of Android app development and building up to implementing features such as `RecyclerViews`,
    fetching data from web services, notifications, and testing. You have seen how
    to improve your apps with best practices, architecture patterns, and animations,
    and finally, you have learned how to publish them on Google Play.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您已经掌握了许多技能，从Android应用程序开发的基础开始，逐步实现诸如`RecyclerViews`、从Web服务获取数据、通知和测试等功能。您已经了解了如何通过最佳实践、架构模式和动画来改进您的应用，最后，您已经学会了如何将其发布到Google
    Play。
- en: This is still just the start of your journey as an Android developer. There
    are many more advanced skills for you to develop as you continue to build more
    complex apps of your own and expand upon what you have learned here. Remember
    that Android is continuously evolving, and so it is good to keep yourself up to
    date with the latest Android releases. You can go to [https://developer.android.com/](https://developer.android.com/)
    to find the latest resources and further immerse yourself in the Android world.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是您作为Android开发人员旅程的开始。随着您继续构建更复杂的应用程序并扩展您在这里学到的知识，您还有许多更高级的技能需要发展。请记住，Android在不断发展，因此及时了解最新的Android发布情况是很重要的。您可以访问[https://developer.android.com/](https://developer.android.com/)查找最新资源，并进一步沉浸在Android世界中。
