["```py\nimport numpy as np\nimport Image #from PIL import Image (Python3)\nimport scipy.misc\n\nlena = scipy.misc.lena()\ndata = np.zeros((lena.shape[0], lena.shape[1], 4), dtype=np.int8)\ndata[:,:,3] = lena.copy()\nimg = Image.frombuffer(\"RGBA\", lena.shape, data, 'raw', \"RGBA\", 0, 1)\nimg.save('lena_frombuffer.png')\n\ndata[:,:,3] = 255 \ndata[:,:,0] = 222 \nimg.save('lena_modified.png')\n```", "```py\n    lena = scipy.misc.lena()\n    data = np.zeros((lena.shape[0], lena.shape[1], 4), dtype=numpy.int8)\n    data[:,:,3] = lena.copy()\n    ```", "```py\n    img = Image.frombuffer(\"RGBA\", lena.shape, data, 'raw', \"RGBA\", 0, 1)\n    img.save('lena_frombuffer.png')\n    ```", "```py\n    data[:,:,3] = 255 \n    data[:,:,0] = 222 \n    img.save('lena_modified.png')\n    ```", "```py\nfrom __future__ import print_function\nimport numpy as np\nimport Image\nimport scipy.misc\n\nlena = scipy.misc.lena()\ndata = np.zeros((lena.shape[0], lena.shape[1], 4), dtype=np.int8)\ndata[:,:,3] = lena.copy()\nimg = Image.frombuffer(\"RGBA\", lena.shape, data, 'raw', \"RGBA\", 0, 1)\narray_interface = img.__array_interface__\nprint(\"Keys\", array_interface.keys())\nprint(\"Shape\", array_interface['shape'])\nprint(\"Typestr\", array_interface['typestr'])\n\nnumpy_array = np.asarray(img)\nprint(\"Shape\", numpy_array.shape)\nprint(\"Data type\", numpy_array.dtype)\n```", "```py\n    array_interface = img.__array_interface__\n    print(\"Keys\", array_interface.keys()) \n    print(\"Shape\", array_interface['shape'])\n    print(\"Typestr\", array_interface['typestr'])\n    ```", "```py\n    Keys ['shape', 'data', 'typestr']\n    Shape (512, 512, 4)\n    Typestr |u1\n\n    ```", "```py\n    numpy_array = np.asarray(img)\n    print(\"Shape\", numpy_array.shape)\n    print(\"Data type\", numpy_array.dtype)\n    ```", "```py\n    Shape (512, 512, 4)\n    Data type uint8\n\n    ```", "```py\nimport numpy as np\nimport scipy.io\n\na = np.arange(7)\n\nscipy.io.savemat(\"a.mat\", {\"array\": a})\n```", "```py\n    a = np.arange(7)\n    scipy.io.savemat(\"a.mat\", {\"array\": a})\n\n    ```", "```py\n    octave-3.4.0:2> load a.mat\n    octave-3.4.0:3> array\n    array =\n\n     0\n     1\n     2\n     3\n     4\n     5\n     6\n\n    ```", "```py\n    $ easy_install rpy2\n\n    ```", "```py\n    $ sudo pip install rpy2\n    $ pip freeze|grep rpy2\n    rpy2==2.4.2\n\n    ```", "```py\n    $ tar -xzf <rpy2_package>.tar.gz\n    $ cd <rpy2_package>\n    $ python setup.py build install\n\n    ```", "```py\nfrom rpy2.robjects.packages import importr\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndatasets = importr('datasets')\nmtcars = datasets.__rdata__.fetch('mtcars')['mtcars']\n\nplt.title('R mtcars dataset')\nplt.xlabel('wt')\nplt.ylabel('mpg')\nplt.plot(mtcars)\nplt.grid(True)\nplt.show()\n```", "```py\n    datasets = importr('datasets')\n    mtcars = np.array(datasets.mtcars)\n    ```", "```py\n    plt.plot(mtcars)\n    plt.show()\n    ```", "```py\n    $ python setup.py install\n\n    ```", "```py\nimport jpype\nimport numpy as np\n\n#1\\. Start the JVM\njpype.startJVM(jpype.getDefaultJVMPath())\n\n#2\\. Print hello world\njpype.java.lang.System.out.println(\"hello world\")\n\n#3\\. Send a NumPy array\nvalues = np.arange(7)\njava_array = jpype.JArray(jpype.JDouble, 1)(values.tolist())\n\nfor item in java_array:\n   jpype.java.lang.System.out.println(item)\n\n#4\\. Shutdown the JVM\njpype.shutdownJVM()\n```", "```py\n    jpype.startJVM(jpype.getDefaultJVMPath())\n    ```", "```py\n    jpype.java.lang.System.out.println(\"hello world\")\n    ```", "```py\n    values = np.arange(7)\n    java_array = jpype.JArray(jpype.JDouble, 1)(values.tolist())\n\n    for item in java_array:\n        jpype.java.lang.System.out.println(item)\n    ```", "```py\n    jpype.shutdownJVM()\n    ```", "```py\n    hello world\n    0.0\n    1.0\n    2.0\n    3.0\n    4.0\n    5.0\n    6.0\n    JVM activity report     :\n     classes loaded       : 31\n    JVM has been shutdown\n\n    ```", "```py\n    - name: NumPy\n      version: \"1.6.1\"\n    ```", "```py\n    application: numpycloud\n    version: 1\n    runtime: python27\n    api_version: 1\n    threadsafe: yes\n\n    handlers:\n    - url: /favicon\\.ico\n      static_files: favicon.ico\n      upload: favicon\\.ico\n\n    - url: .*\n      script: main.app\n\n    libraries:\n    - name: webapp2\n      version: \"2.5.1\"\n    - name: numpy\n      version: \"1.6.1\"\n    ```", "```py\n    def get(self):\n        self.response.out.write('Hello world!<br/>')\n        self.response.out.write('NumPy sum = ' + str(numpy.arange(7).sum()))\n    ```", "```py\n    import webapp2\n    import numpy\n\n    class MainHandler(webapp2.RequestHandler):\n        def get(self):\n          self.response.out.write('Hello world!<br/>')\n          self.response.out.write('NumPy sum = ' + str(numpy.arange(7).sum()))\n\n    app = webapp2.WSGIApplication([('/', MainHandler)],\n                                  debug=True)\n    ```", "```py\nHello world!NumPy sum = 21\n```", "```py\n    from __future__ import print_function\n    import urllib2\n    import re\n    import time\n    import numpy as np\n\n    prices = np.array([])\n\n    for i in xrange(3):\n       req = urllib2.Request('http://finance.google.com/finance/info?client=ig&q=AAPL')\n       req.add_header('User-agent', 'Mozilla/5.0')\n       response = urllib2.urlopen(req)\n       page = response.read()\n       m = re.search('l_cur\" : \"(.*)\"', page)\n       prices = np.append(prices, float(m.group(1)))\n       avg = prices.mean()\n       stddev = prices.std()\n\n       devFactor = 1\n       bottom = avg - devFactor * stddev\n       top = avg + devFactor * stddev\n       timestr = time.strftime(\"%H:%M:%S\", time.gmtime())\n\n       print(timestr, \"Average\", avg, \"-Std\", bottom, \"+Std\", top)\n       time.sleep(60)\n    ```"]