["```js\n<script src=\"img/ckeditor.js\"></script>\n```", "```js\n  var Scratchpad = React.createClass({\n    render: function() {\n      return (\n        <div id=\"Scratchpad\">\n          <h1>Scratchpad</h1>\n          <textarea name=\"scratchpad\"\n            id=\"scratchpad\"></textarea>\n        </div>\n      );\n    },\n    shouldComponentUpdate: function() {\n      return false;\n    }\n  });\n```", "```js\n  React.render(<Pragmatometer />,\n    document.getElementById('main'));\n  CKEDITOR.replace('scratchpad');\nWe temporarily comment out the other subcomponents:\n  var Pragmatometer = React.createClass({\n    render: function() {\n      return (\n        <div className=\"Pragmatometer\">\n          {/* <Calendar /> */}\n          {/* <Todo /> */}\n          <Scratchpad />\n          {/* <YouPick /> */}\n        </div>\n      );\n    }\n  });\n```", "```js\n        <div className=\"Pragmatometer\">\n          <Calendar />\n          <Todo />\n          <Scratchpad />\n          <YouPick />\n        </div>\n```", "```js\n      @media only screen and (min-width: 513px) {\n        #Calendar {\n          height: 46%;\n          left: 2%;\n          overflow-y: auto;\n          position: absolute;\n          top: 2%;\n          width: 46%;\n        }\n        #Scratchpad {\n          height: 46%;\n          left: 2%;\n          overflow-y: auto;\n          position: absolute;\n          top: 52%;\n          width: 46%;\n        }\n        #Todo {\n          height: 46%;\n          left: 52%;\n          overflow-y: auto;\n          position: absolute;\n          top: 0;\n          width: 46%;\n        }\n        #YouPick {\n          height: 50%;\n          left: 52%;\n          overflow-y: auto;\n          position: absolute;\n          top: 52%;\n          width: 46%;\n        }\n      }\n```", "```js\n<script src=\"img/json2.js\"></script>\n<script src=\"img/modernizr.js\"></script>\n```", "```js\n  var save = function(key, data) {\n    if (Modernizr.localstorage) {\n      localStorage[key] = JSON.stringify(data);\n    }\n  }\n```", "```js\n  var restore = function(key, default_value) {\n    if (Modernizr.localstorage) {\n      if (localStorage[key] === null || localStorage[key]\n        === undefined) {\n        return default_value;\n      } else {\n        return JSON.parse(localStorage[key]);\n      }\n    } else {\n      return default_value;\n    }\n  }\n```", "```js\n      getInitialState: function() {\n        return {\n          'items': [],\n          'text': ''\n        };\n      },\n```", "```js\n      getInitialState: function() {\n        return restore('Todo', {\n          'items': [],\n          'text': ''\n        });\n      },\n```", "```js\n      this.state.entries.push(this.state.entry_being_added);\n      this.state.entry_being_added = this.new_entry();\n```", "```js\n      this.state.entries.push(this.state.entry_being_added);\n      this.state.entry_being_added = this.new_entry();\n      save('Calendar', this.state);\n```", "```js\n  var update = function() {\n    React.render(<Pragmatometer />,\n      document.getElementById('main'));\n  };\n  update();\n  var update_interval = setInterval(update,\n    100);\n```", "```js\n  React.render(<Pragmatometer />,\n    document.getElementById('main'));\n  CKEDITOR.replace('scratchpad');\n  var update = function() {\n    React.render(<Pragmatometer />,\n      document.getElementById('main'));\n    for(var instance in CKEDITOR.instances) {\n      CKEDITOR.instances[instance].updateElement();\n    }\n    save('Scratchpad', \n      document.getElementById('scratchpad').value);\n  };\n  var update_interval = setInterval(update,\n    100);\n```"]