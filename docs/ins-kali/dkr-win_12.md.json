["```\n> docker container run mcr.microsoft.com/windows/servercore:ltsc2019 whoami\nuser manager\\containeradministrator\n```", "```\n> docker container run -it --rm mcr.microsoft.com/windows/servercore:ltsc2019 powershell\n\n> $user = New-Object System.Security.Principal.NTAccount(\"containeradministrator\"); `\n $sid = $user.Translate([System.Security.Principal.SecurityIdentifier]); `\n $sid.Value\nS-1-5-93-2-1\n```", "```\n> docker container run -d --name pinger mcr.microsoft.com/windows/servercore:ltsc2019 ping -t localhost\nf8060e0f95ba0f56224f1777973e9a66fc2ccb1b1ba5073ba1918b854491ee5b\n\n> docker container exec pinger powershell Get-Process ping -IncludeUserName\nHandles      WS(K)   CPU(s)     Id UserName               ProcessName\n-------      -----   ------     -- --------               -----------\n     86       3632     0.02   7704 User Manager\\Contai... PING\n```", "```\n> Get-Process -Id 7704 -IncludeUserName\nHandles      WS(K)   CPU(s)     Id UserName               ProcessName\n-------      -----   ------     -- --------               -----------\n     86       3624     0.03   7704                        PING\n```", "```\n> docker container run mcr.microsoft.com/windows/nanoserver:1809 cmd /C echo %USERDOMAIN%\\%USERNAME%\nUser Manager\\ContainerUser\n```", "```\nRUN $acl = Get-Acl $env:UMBRACO_ROOT; `\n $newOwner = [System.Security.Principal.NTAccount]('BUILTIN\\IIS_IUSRS'); `\n $acl.SetOwner($newOwner); `\n Set-Acl -Path $env:UMBRACO_ROOT -AclObject $acl; `\n Get-ChildItem -Path $env:UMBRACO_ROOT -Recurse | Set-Acl -AclObject $acl\n```", "```\n> docker container run dockeronwindows/ch09-resource-check:2e /r Memory /p 600\nI allocated 600MB of memory, and now I'm done.\n```", "```\n> docker container run --memory 500M dockeronwindows/ch09-resource-check:2e /r Memory /p 600 \nUnhandled Exception: OutOfMemoryException.\n```", "```\n> docker container run dockeronwindows/ch09-resource-check:2e /r Cpu /p 20000\nI calculated Pi to 20000 decimal places in 924ms. The last digit is 8.\n```", "```\n> docker container run --cpus 1 dockeronwindows/ch09-resource-check:2e /r Cpu /p 20000\nI calculated Pi to 20000 decimal places in 2208ms. The last digit is 8.\n```", "```\nnerd-dinner-api:\n  image: dockeronwindows/ch07-nerd-dinner-api:2e\n  deploy: resources:\n      limits:\n        cpus: '0.25'\n        memory: 250M\n...\n```", "```\n> docker container run --cpus 1 --memory 1G mcr.microsoft.com/windows/servercore:ltsc2019 powershell `\n \"Get-WmiObject Win32_ComputerSystem | select NumberOfLogicalProcessors, TotalPhysicalMemory\"\n\nNumberOfLogicalProcessors TotalPhysicalMemory\n------------------------- -------------------\n                        4         17101447168\n```", "```\ndocker container run -d -p 80 --isolation=hyperv `\n  mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2019\n```", "```\nFROM mcr.microsoft.com/windows/servercore:1809_KB4471332\n```", "```\nFROM mcr.microsoft.com/windows/servercore:1809_KB4480116\n```", "```\ndocker image tag sixeyed/file-echo:nanoserver-1809 `\n dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app\n```", "```\n> docker login dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com\nUsername: elton\nPassword:\nLogin Succeeded\n\n> docker image push dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app\nThe push refers to repository [dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app]\n2f2b0ced10a1: Pushed\nd3b13b9870f8: Pushed\n81ab83c18cd9: Pushed\ncc38bf58dad3: Pushed\naf34821b76eb: Pushed\n16575d9447bd: Pushing [==================================================>]  52.74kB\n0e5e668fa837: Pushing [==================================================>]  52.74kB\n3ec5dbbe3201: Pushing [==================================================>]  1.191MB\n1e88b250839e: Pushing [==================================================>]  52.74kB\n64cb5a75a70c: Pushing [>                                                  ]  2.703MB/143MB\neec13ab694a4: Waiting\n37c182b75172: Waiting\n...\n...\n```", "```\n> docker image tag `\n    dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app `\n    dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app:v2\n\n> $env:DOCKER_CONTENT_TRUST=1\n\n> >docker image push dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app:v2The push refers to repository [dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app]\n2f2b0ced10a1: Layer already exists\n...\nv2: digest: sha256:4c830828723a89e7df25a1f6b66077c1ed09e5f99c992b5b5fbe5d3f1c6445f2 size: 3023\nSigning and pushing trust metadata\nEnter passphrase for root key with ID aa2544a:\nEnter passphrase for new repository key with ID 2ef6158:\nRepeat passphrase for new repository key with ID 2ef6158:\nFinished initializing \"dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app\"\nSuccessfully signed dtrapp-dow2e-hvfz.centralus.cloudapp.azure.com/elton/private-app:v2\n```", "```\n> docker swarm join-token --rotate worker\nSuccessfully rotated worker join token.\n\nTo add a worker to this swarm, run the following command:\n\n docker swarm join --token SWMTKN-1-0ngmvmnpz0twctlya5ifu3ajy3pv8420st...  10.211.55.7:2377\n```"]