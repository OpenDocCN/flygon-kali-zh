["```kt\n    abstract class BaseActivity : AppCompatActivity() {   \n    ... \n```", "```kt\n    ... \n    <application \n      android:name=\".Journaler\" \n      android:allowBackup=\"false\" \n      android:icon=\"@mipmap/ic_launcher\" \n      android:label=\"@string/app_name\" \n      android:roundIcon=\"@mipmap/ic_launcher_round\" \n      android:supportsRtl=\"true\" \n      android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"> \n    ... \n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?> \n    <LinearLayout xmlns:android=\n     \"http://schemas.android.com/apk/res/android\" \n    android:layout_width=\"match_parent\" \n    android:layout_height=\"match_parent\" \n    android:orientation=\"vertical\"> \n\n    <android.support.v7.widget.Toolbar \n      android:id=\"@+id/toolbar\" \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"50dp\" \n      android:background=\"@color/colorPrimary\" \n      android:elevation=\"4dp\" /> \n\n    <android.support.v4.view.ViewPager  \n      android:id=\"@+id/pager\" \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"match_parent\" /> \n\n    </LinearLayout> \n\n```", "```kt\n    override fun onCreate(savedInstanceState: Bundle?) { \n      super.onCreate(savedInstanceState) \n      setContentView(getLayout()) \n      setSupportActionBar(toolbar)        \n    Log.v(tag, \"[ ON CREATE ]\") \n    } \n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?> \n    <menu  \n    > \n\n    <item \n      app:showAsAction=\"ifRoom\" \n      android:orderInCategory=\"1\" \n      android:id=\"@+id/drawing_menu\" \n      android:icon=\"@android:drawable/ic_dialog_dialer\" \n      android:title=\"@string/mnu\" /> \n\n    <item \n      app:showAsAction=\"ifRoom\" \n      android:orderInCategory=\"2\" \n      android:id=\"@+id/options_menu\" \n      android:icon=\"@android:drawable/arrow_down_float\" \n      android:title=\"@string/mnu\" /> \n    </menu>\n```", "```kt\n    app:showAsAction=\"ifRoom\" \n```", "```kt\n    override fun onCreateOptionsMenu(menu: Menu): Boolean { \n      menuInflater.inflate(R.menu.main, menu) \n\n      return true \n    } \n```", "```kt\n    override fun onOptionsItemSelected(item: MenuItem): Boolean { \n      when (item.itemId) { \n        R.id.drawing_menu -> { \n          Log.v(tag, \"Main menu.\") \n          return true \n        } \n        R.id.options_menu -> { \n          Log.v(tag, \"Options menu.\") \n          return true \n        } \n        else -> return super.onOptionsItemSelected(item) \n\n     } \n\n    } \n```", "```kt\n    V/Main activity: Main menu. \n    V/Main activity: Options menu. \n    V/Main activity: Options menu. \n    V/Main activity: Options menu. \n\n    V/Main activity: Main menu. \n\n    V/Main activity: Main menu. \n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?> \n    <android.support.v4.widget.DrawerLayout    xmlns:android=\n    \"http://schemas.android.com/apk/res/android\" \n     android:id=\"@+id/drawer_layout\" \n     android:layout_width=\"match_parent\" \n     android:layout_height=\"match_parent\"> \n\n    <LinearLayout \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"match_parent\" \n      android:orientation=\"vertical\"> \n\n    <android.support.v7.widget.Toolbar \n      android:id=\"@+id/toolbar\" \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"50dp\" \n      android:background=\"@color/colorPrimary\" \n      android:elevation=\"4dp\" /> \n\n    <android.support.v4.view.ViewPager xmlns:android=\n    \"http://schemas.android.com/apk/res/android\" \n      android:id=\"@+id/pager\" \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"match_parent\" /> \n\n    </LinearLayout> \n\n    <ListView \n       android:id=\"@+id/left_drawer\" \n       android:layout_width=\"240dp\" \n       android:layout_height=\"match_parent\" \n       android:layout_gravity=\"start\" \n       android:background=\"@android:color/darker_gray\" \n       android:choiceMode=\"singleChoice\" \n       android:divider=\"@android:color/transparent\" \n       android:dividerHeight=\"1dp\" /> \n    </android.support.v4.widget.DrawerLayout>  \n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?> \n    <LinearLayout xmlns:android=\n    \"http://schemas.android.com/apk/res/android\" \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"match_parent\" \n      android:orientation=\"vertical\"> \n\n    <Button \n      android:id=\"@+id/drawer_item\" \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"wrap_content\" /> \n\n    </LinearLayout> \n```", "```kt\n    package com.journaler.navigation \n    data class NavigationDrawerItem( \n      val title: String,        \n      val onClick: Runnable \n    ) \n```", "```kt\n    class NavigationDrawerAdapter( \n        val ctx: Context, \n        val items: List<NavigationDrawerItem> \n    ) : BaseAdapter() { \n\n    override fun getView(position: Int, v: View?, group: ViewGroup?):   \n    View { \n      val inflater = LayoutInflater.from(ctx) \n      var view = v \n      if (view == null) { \n        view = inflater.inflate( \n          R.layout.adapter_navigation_drawer, null \n        ) as LinearLayout \n      } \n\n      val item = items[position] \n      val title = view.findViewById<Button>(R.id.drawer_item) \n      title.text = item.title \n      title.setOnClickListener { \n        item.onClick.run() \n      } \n\n      return view \n     } \n\n     override fun getItem(position: Int): Any { \n       return items[position] \n      } \n\n     override fun getItemId(position: Int): Long { \n       return 0L \n     } \n\n     override fun getCount(): Int {     \n     return items.size \n     } \n\n    } \n```", "```kt\n    class MainActivity : BaseActivity() { \n    ... \n    override fun onCreate(savedInstanceState: Bundle?) { \n      super.onCreate(savedInstanceState) \n      pager.adapter = ViewPagerAdapter(supportFragmentManager) \n\n      val menuItems = mutableListOf<NavigationDrawerItem>() \n      val today = NavigationDrawerItem( \n        getString(R.string.today), \n          Runnable { \n            pager.setCurrentItem(0, true) \n          } \n        ) \n\n        val next7Days = NavigationDrawerItem( \n           getString(R.string.next_seven_days), \n             Runnable { \n               pager.setCurrentItem(1, true) \n             } \n         ) \n\n         val todos = NavigationDrawerItem( \n           getString(R.string.todos), \n             Runnable { \n               pager.setCurrentItem(2, true) \n             } \n         ) \n\n         val notes = NavigationDrawerItem( \n           getString(R.string.notes), \n             Runnable { \n               pager.setCurrentItem(3, true) \n             } \n        ) \n\n        menuItems.add(today) \n        menuItems.add(next7Days) \n        menuItems.add(todos) \n        menuItems.add(notes) \n\n        val navgationDraweAdapter = \n          NavigationDrawerAdapter(this, menuItems) \n        left_drawer.adapter = navgationDraweAdapter \n      } \n      override fun onOptionsItemSelected(item: MenuItem): Boolean { \n        when (item.itemId) { \n          R.id.drawing_menu -> { \n            drawer_layout.openDrawer(GravityCompat.START) \n            return true \n          } \n          R.id.options_menu -> { \n             Log.v(tag, \"Options menu.\") \n             return true \n          } \n          else -> return super.onOptionsItemSelected(item) \n        }      \n      }  \n    }  \n```", "```kt\n    enum class MODE(val mode: Int) { \n      CREATE(0), \n      EDIT(1), \n      VIEW(2); \n\n      companion object { \n        val EXTRAS_KEY = \"MODE\" \n\n        fun getByValue(value: Int): MODE { \n          values().forEach { \n            item -> \n\n            if (item.mode == value) { \n              return item \n            } \n          } \n          return VIEW \n        } \n      }  \n    } \n```", "```kt\n     abstract class ItemActivity : BaseActivity() { \n       protected var mode = MODE.VIEW \n       override fun getActivityTitle() = R.string.app_name \n       override fun onCreate(savedInstanceState: Bundle?) { \n         super.onCreate(savedInstanceState) \n         val modeToSet = intent.getIntExtra(MODE.EXTRAS_KEY, \n         MODE.VIEW.mode) \n         mode = MODE.getByValue(modeToSet) \n         Log.v(tag, \"Mode [ $mode ]\") \n       } \n     }  \n```", "```kt\n    class ItemsFragment : BaseFragment() { \n      ... \n      override fun onCreateView( \n        inflater: LayoutInflater?, \n        container: ViewGroup?, \n        savedInstanceState: Bundle? \n      ): View? {         \n          val view = inflater?.inflate(getLayout(), container, false) \n          val btn = view?.findViewById<FloatingActionButton>\n          (R.id.new_item) \n          btn?.setOnClickListener { \n            val items = arrayOf( \n              getString(R.string.todos), \n              getString(R.string.notes) \n            ) \n            val builder = \n            AlertDialog.Builder(this@ItemsFragment.context) \n            .setTitle(R.string.choose_a_type) \n            .setItems( \n              items, \n              { _, which -> \n               when (which) { \n               0 -> { \n                 openCreateTodo() \n               } \n               1 -> { \n                 openCreateNote() \n               } \n               else -> Log.e(logTag, \"Unknown option selected \n               [ $which ]\") \n                } \n               } \n             ) \n\n            builder.show() \n          } \n\n          return view \n       } \n\n      private fun openCreateNote() { \n        val intent = Intent(context, NoteActivity::class.java) \n        intent.putExtra(MODE.EXTRAS_KEY, MODE.CREATE.mode) \n        startActivity(intent) \n      } \n\n      private fun openCreateTodo() { \n        val intent = Intent(context, TodoActivity::class.java) \n        intent.putExtra(MODE.EXTRAS_KEY, MODE.CREATE.mode) \n        startActivity(intent) \n\n      } \n\n     } \n```", "```kt\n         val intent = Intent(Intent.ACTION_VIEW,\n         Uri.parse(\"http://google.com\")) \n         startActivity(intent) \n         Sharing: \n         val intent = Intent(Intent.ACTION_SEND) \n         intent.type = \"text/plain\" \n         intent.putExtra(Intent.EXTRA_TEXT, \"Check out this cool app!\") \n         startActivity(intent)  \n```", "```kt\n        val takePicture = Intent(MediaStore.ACTION_IMAGE_CAPTURE) \n        if (takePicture.resolveActivity(packageManager) != null) { \n         startActivityForResult(takePicture, REQUEST_CAPTURE_PHOTO +\n         position) \n        } else { \n          logger.e(tag, \"Can't take picture.\") \n       }  \n```", "```kt\n        val pickPhoto = Intent( \n         Intent.ACTION_PICK, \n         MediaStore.Images.Media.EXTERNAL_CONTENT_URI \n        ) \n        startActivityForResult(pickPhoto, REQUEST_PICK_PHOTO + \n       position) \n```", "```kt\n    private fun openCreateNote() { \n      val intent = Intent(context, NoteActivity::class.java) \n      val data = Bundle() \n      data.putInt(MODE.EXTRAS_KEY, MODE.CREATE.mode) \n      intent.putExtras(data) \n      startActivityForResult(intent, NOTE_REQUEST) \n    } \n    private fun openCreateTodo() { \n       val date = Date(System.currentTimeMillis()) \n       val dateFormat = SimpleDateFormat(\"MMM dd YYYY\", Locale.ENGLISH) \n       val timeFormat = SimpleDateFormat(\"MM:HH\", Locale.ENGLISH) \n\n       val intent = Intent(context, TodoActivity::class.java) \n       val data = Bundle() \n       data.putInt(MODE.EXTRAS_KEY, MODE.CREATE.mode) \n       data.putString(TodoActivity.EXTRA_DATE, dateFormat.format(date)) \n       data.putString(TodoActivity.EXTRA_TIME, \n       timeFormat.format(date)) \n       intent.putExtras(data) \n       startActivityForResult(intent, TODO_REQUEST) \n    } \n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, \n    data: Intent?) { \n      super.onActivityResult(requestCode, resultCode, data) \n      when (requestCode) { \n         TODO_REQUEST -> { \n           if (resultCode == Activity.RESULT_OK) { \n             Log.i(logTag, \"We created new TODO.\") \n           } else { \n             Log.w(logTag, \"We didn't created new TODO.\") \n           } \n          } \n          NOTE_REQUEST -> { \n            if (resultCode == Activity.RESULT_OK) { \n              Log.i(logTag, \"We created new note.\") \n            } else { \n              Log.w(logTag, \"We didn't created new note.\") \n              } \n           } \n         } \n      } \n```", "```kt\n     abstract class ItemActivity : BaseActivity() { \n       protected var mode = MODE.VIEW \n       protected var success = Activity.RESULT_CANCELED \n       override fun getActivityTitle() = R.string.app_name \n\n       override fun onCreate(savedInstanceState: Bundle?) { \n         super.onCreate(savedInstanceState) \n         val data = intent.extras \n         data?.let{ \n           val modeToSet = data.getInt(MODE.EXTRAS_KEY, MODE.VIEW.mode) \n           mode = MODE.getByValue(modeToSet) \n         } \n         Log.v(tag, \"Mode [ $mode ]\") \n       } \n\n       override fun onDestroy() { \n         super.onDestroy() \n         setResult(success) \n      } \n\n    } \n```", "```kt\n     class TodoActivity : ItemActivity() { \n\n     companion object { \n       val EXTRA_DATE = \"EXTRA_DATE\" \n       val EXTRA_TIME = \"EXTRA_TIME\" \n     } \n\n     override val tag = \"Todo activity\" \n\n     override fun getLayout() = R.layout.activity_todo \n\n     override fun onCreate(savedInstanceState: Bundle?) { \n       super.onCreate(savedInstanceState) \n       val data = intent.extras \n       data?.let { \n         val date = data.getString(EXTRA_DATE, \"\") \n         val time = data.getString(EXTRA_TIME, \"\") \n         pick_date.text = date \n         pick_time.text = time \n       } \n     } \n\n    }  \n```"]