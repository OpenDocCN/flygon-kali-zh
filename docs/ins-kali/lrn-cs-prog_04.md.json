["```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int\u00a0\u00a0\u00a0\u00a0EmployeeId;\n\u00a0\u00a0\u00a0\u00a0public string FirstName;\n\u00a0\u00a0\u00a0\u00a0public string LastName;\n}\n```", "```cs\nEmployee obj = new Employee();\n```", "```cs\nobj.EmployeeId = 1;\nobj.FirstName = \"John\";\nobj.LastName = \"Doe\"\n```", "```cs\nEmployee obj1 = new Employee();\nobj1.EmployeeId = 1;\nEmployee obj2 = obj1; \nobj2.FirstName = \"John\";\u00a0\u00a0\u00a0\u00a0// obj1.FirstName == \"John\"\nobj2.LastName = \"Doe\";\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// obj1.LastName == \"Doe\"\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public const int StartId = 100;\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0public readonly int EmployeeId;\n\u00a0\u00a0\u00a0public string\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FirstName;\n\u00a0\u00a0\u00a0public string\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LastName;\n\u00a0\u00a0\u00a0public Employee(int id)\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EmployeeId = id;\n\u00a0\u00a0\u00a0}\n}\nEmployee obj = new Employee(1);\nobj.FirstName = \"John\";\nobj.LastName = \"Doe\";\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int\u00a0\u00a0\u00a0\u00a0EmployeeId;\n\u00a0\u00a0\u00a0\u00a0public string FirstName;\n\u00a0\u00a0\u00a0\u00a0public string LastName;\n\u00a0\u00a0\u00a0\u00a0public string GetEmployeeName()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $\"{FirstName} {LastName}\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\npublic string GetEmployeeName() => $\"{FirstName} {LastName}\";\n```", "```cs\npublic string GetEmployeeName(bool lastNameFirst) => lastNameFirst ? $\"{LastName} {FirstName}\" : \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$\"{FirstName} {LastName}\";\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId;\n\u00a0\u00a0\u00a0\u00a0public string FirstName;\n\u00a0\u00a0\u00a0\u00a0public string LastName;\n\u00a0\u00a0\u00a0\u00a0public Employee(int employeeId, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string firstName, string lastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EmployeeId = employeeId;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FirstName = firstName;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LastName = lastName;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public string GetEmployeeName() => \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$\"{FirstName} {LastName}\";\u00a0\u00a0\u00a0\n}\n```", "```cs\nEmployee obj = new Employee(1, \"John\", \"Doe\");\nConsole.WriteLine(\"Employee ID is: {0}\", obj.EmployeeID);\nConsole.WriteLine(\"The full name of employee is: {0}\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0obj.GetEmployeeName());\n```", "```cs\nEmployee obj = new Employee()\n{\n\u00a0\u00a0\u00a0\u00a0EmployeeId = 1,\n\u00a0\u00a0\u00a0\u00a0FirstName = \"John\",\n\u00a0\u00a0\u00a0\u00a0LastName = \"Doe\"\n};\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0private int employeeId;\n\u00a0\u00a0\u00a0private string firstName;\n\u00a0\u00a0\u00a0private string lastName;\n\u00a0\u00a0\u00a0public int EmployeeId\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get { return employeeId; }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set { employeeId = value; }\n\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0public string FirstName\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get { return firstName; }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set { firstName = value; }\n\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0public string LastName\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get { return lastName; }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set { lastName = value; }\n\u00a0\u00a0\u00a0}\n}\n```", "```cs\nEmployee obj = new Employee();\nobj.EmployeeId = 1;\nobj.FirstName = \"John\";\nobj.LastName = \"Doe\";\nConsole.WriteLine($\"{obj.EmployeeId} - {obj.LastName}, {obj.FirstName}\");\n```", "```cs\npublic int EmployeeId\n{\n\u00a0\u00a0\u00a0\u00a0get { return employeeId; }\n\u00a0\u00a0\u00a0\u00a0set {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (value < 0)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw new ArgumentException(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ID must be greater than zero.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0employeeId = value;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\npublic string Name\n{\n\u00a0\u00a0\u00a0\u00a0get { return $\"{FirstName} {LastName}\"; }\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; set; }\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public Employee(int id, string firstName, string lastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EmployeeId = id;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FirstName = firstName;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LastName = lastName;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\npublic string Name => $\"{FirstName} {LastName}\";\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0private int employeeId;\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get => employeeId;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set => employeeId = value > 0 ? value : \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw new ArgumentException(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ID must be greater than zero.\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0public int EmployeeId { get; set; } = 1;\n\u00a0\u00a0\u00a0public string FirstName { get; set; }\n\u00a0\u00a0\u00a0public string LastName { get; set; }\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId => 1;\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; set; }\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId = 1;\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; set; }\n}\n```", "```cs\nclass ProjectRoles\n{\n\u00a0\u00a0\u00a0\u00a0readonly Dictionary<int, string> roles = \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new Dictionary<int, string>();\n\u00a0\u00a0\u00a0\u00a0public string this[int projectId]\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!roles.TryGetValue(projectId, out string role))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw new Exception(\"Project ID not found!\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return role;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0roles[projectId] = value;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EmployeeId { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FirstName { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LastName { get; set; }\n\u00a0\u00a0\u00a0\u00a0public ProjectRoles Roles { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public Employee() => Roles = new ProjectRoles();\n}\n```", "```cs\nEmployee obj = new Employee()\n{\n\u00a0\u00a0\u00a0\u00a0EmployeeId = 1,\n\u00a0\u00a0\u00a0\u00a0FirstName = \"John\",\n\u00a0\u00a0\u00a0\u00a0LastName = \"Doe\"\n};\nobj.Roles[1] = \"Dev\";\nobj.Roles[3] = \"SA\";\n\nfor(int i = 1; i <= 3; ++i)\n{\n\u00a0\u00a0\u00a0\u00a0try\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Project {i}: role is {obj.Roles[i]}\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0catch(Exception ex)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(ex.Message);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeID;\n\u00a0\u00a0\u00a0\u00a0public string FirstName;\n\u00a0\u00a0\u00a0\u00a0public string LastName;\n\u00a0\u00a0\u00a0\u00a0public Employee(int EmployeeID, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string FirstName, string LastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.EmployeeID = EmployeeID;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.FirstName = FirstName;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.LastName = LastName;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0private static int id = 1;\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; private set; }\n\u00a0\u00a0\u00a0\u00a0private Employee(int id, string firstName, string lastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EmployeeId = id;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FirstName = firstName;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LastName = lastName;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public static Employee Create(string firstName, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string lastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new Employee(id++, firstName, lastName);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nEmployee obj1 = Employee.Create(\"John\", \"Doe\");\nEmployee obj2 = Employee.Create(\"Jane\", \"Doe\");\nConsole.WriteLine($\"{obj1.EmployeeId} {obj1.FirstName}\");\nConsole.WriteLine($\"{obj2.EmployeeId} {obj2.FirstName}\");\n```", "```cs\nstatic class MassConverters\n{\n\u00a0\u00a0\u00a0\u00a0public static double PoundToKg(double pounds)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return pounds * 0.45359237;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public static double KgToPound(double kgs)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return kgs * 2.20462262185;\n\u00a0\u00a0\u00a0\u00a0}\n}\nvar lbs = MassConverters.KgToPound(42.5);\nvar kgs = MassConverters.PoundToKg(180);\n```", "```cs\nclass Employee\n{\n\u00a0\u00a0\u00a0\u00a0private static int id;\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; private set; }\n\u00a0\u00a0\u00a0\u00a0static Employee()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string text = \"1\";\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text = File.ReadAllText(\"app.data\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0catch { }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int.TryParse(text, out id);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0private Employee(int id, string firstName, string lastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EmployeeId = id;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FirstName = firstName;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LastName = lastName;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public static Employee Create(string firstName, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string lastName)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var employee = new Employee(id++, firstName, lastName);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0File.WriteAllText(\"app.data\", id.ToString());\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return employee;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nEmployee obj1 = Employee.Create(\"John\", \"Doe\");\nEmployee obj2 = Employee.Create(\"Jane\", \"Doe\");\nConsole.WriteLine($\"{obj1.EmployeeId} {obj1.FirstName}\");\nConsole.WriteLine($\"{obj2.EmployeeId} {obj2.FirstName}\");\n```", "```cs\nclass Program\n{\n\u00a0\u00a0\u00a0\u00a0static void Swap(ref int a, ref int b)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int temp = a;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a = b;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0b = temp;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0static void Main(string[] args)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int num1 = 10;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int num2 = 20;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Before swapping: num1={num1}, num2={num2}\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Swap(ref num1, ref num2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"After swapping:\u00a0\u00a0num1={num1}, num2={num2}\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nclass Project\n{\n\u00a0\u00a0\u00a0\u00a0Employee owner;\n\u00a0\u00a0\u00a0\u00a0public string Name { get; private set; }\n\u00a0\u00a0\u00a0\u00a0public Project(string name, Employee owner)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Name = name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.owner = owner;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public ref Employee GetOwner()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return ref owner;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public override string ToString() => \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$\"{Name} (Owner={owner.FirstName} {owner.LastName})\";\n}\n```", "```cs\nEmployee e1 = new Employee(1, \"John\", \"Doe\");\nProject proj = new Project(\"Demo\", e1);\nConsole.WriteLine(proj);\nref Employee owner = ref proj.GetOwner();\nowner = new Employee(2, \"Jane\", \"Doe\");\nConsole.WriteLine(proj);\n```", "```cs\nstatic void DontTouch(in int value, in string text)\n{\n\u00a0\u00a0\u00a0\u00a0value = 42;\u00a0\u00a0\u00a0// error\n\u00a0\u00a0\u00a0\u00a0++value;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// error\n\u00a0\u00a0\u00a0\u00a0text = null;\u00a0\u00a0// error\n}\nint i = 0;\nstring s = \"hello\";\nDontTouch(i, s);\n```", "```cs\nstatic void Square(int input, out int output)\n{\n\u00a0\u00a0\u00a0\u00a0output = input * input;\n}\n```", "```cs\nint num = 10;\nint SquareNum;\nSquare(num, out SquareNum);\n```", "```cs\nint num = 10;\nSquare(num, out int SquareNum);\n```", "```cs\nclass foo\n{\n\u00a0\u00a0public void DoSomething(ref int i);\n\u00a0\u00a0public void DoSomething(out int i); // error: cannot overload\n}\nclass bar\n{\n\u00a0\u00a0public void DoSomethingElse(int i);\n\u00a0\u00a0public void DoSomethingElse(ref int i);\u00a0\u00a0// OK\n}\n```", "```cs\nstatic bool Any(params bool [] values)\n{\n\u00a0\u00a0\u00a0\u00a0foreach (bool v in values)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (v) return true;\n\u00a0\u00a0\u00a0\u00a0return false;\n}\nstatic bool All(params bool[] values)\n{\n\u00a0\u00a0\u00a0\u00a0if (values.Length == 0) return false;\n\u00a0\u00a0\u00a0\u00a0foreach (bool v in values)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!v) return false;\n\u00a0\u00a0\u00a0\u00a0return true;\n}\n```", "```cs\nvar a = Any(42 > 15, \"text\".Length == 3);\u00a0\u00a0// a=true\nvar b = All(true, false, true);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// b=false\nvar c = All();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// c=false\n```", "```cs\nstruct Point\n{\n\u00a0\u00a0\u00a0\u00a0public int X { get; }\n\u00a0\u00a0\u00a0\u00a0public int Y { get; }\n\u00a0\u00a0\u00a0\u00a0public Point(int x = 0, int y = 0)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0X = x;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Y = y;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nPoint p1 = new Point();\u00a0\u00a0\u00a0\u00a0\u00a0// x = 0, y = 0\nPoint p2 = new Point(1);\u00a0\u00a0\u00a0\u00a0// x = 1, y = 0\nPoint p3 = new Point(1, 2); // x = 1, y = 2\n```", "```cs\nPoint p1 = new Point(x: 1, y: 2); // x = 1, y = 2\nPoint p2 = new Point(1, y: 2);\u00a0\u00a0\u00a0\u00a0// x = 1, y = 2\nPoint p3 = new Point(x: 1, 2);\u00a0\u00a0\u00a0\u00a0// x = 1, y = 2\nPoint p4 = new Point(y: 2);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// x = 0, y = 2\nPoint p5 = new Point(x: 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// x = 1, y = 0\n```", "```cs\npublic interface IEngine\n{\n\u00a0\u00a0\u00a0double Power { get; }\n\u00a0\u00a0\u00a0void Start();\n}\npublic class DieselEngine : IEngine\n{\n\u00a0\u00a0\u00a0private double _power;\n\u00a0\u00a0\u00a0public double Power { get { return _power; } }\n\u00a0\u00a0\u00a0public void Start() { }\n}\n```", "```cs\npartial class Employee\n{\n\u00a0\u00a0\u00a0\u00a0partial void Promote();\n}\npartial class Employee\n{\n\u00a0\u00a0\u00a0\u00a0public int EmployeeId { get; set; }\n}\npartial class Employee\n{\n\u00a0\u00a0\u00a0\u00a0public string FirstName { get; set; }\n\u00a0\u00a0\u00a0\u00a0public string LastName { get; set; }\n\u00a0\u00a0\u00a0\u00a0partial void Promote()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Employee promoted!\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nEmployee obj = new Employee()\n{\n\u00a0\u00a0\u00a0\u00a0EmployeeId = 1,\n\u00a0\u00a0\u00a0\u00a0FirstName = \"John\",\n\u00a0\u00a0\u00a0\u00a0LastName = \"Doe\"\n};\nobj.Promote();\n```", "```cs\nstruct Point\n{\n\u00a0\u00a0\u00a0\u00a0public int x;\n\u00a0\u00a0\u00a0\u00a0public int y;\n}\n```", "```cs\nPoint p = new Point()\n{\n\u00a0\u00a0\u00a0\u00a0x = 2,\n\u00a0\u00a0\u00a0\u00a0y = 3\n};\n```", "```cs\nPoint p;\np.x = 2;\np.y = 3;\n```", "```cs\nPoint? p = null;\n```", "```cs\nstruct Point\n{\n\u00a0\u00a0\u00a0public int X { get; }\n\u00a0\u00a0\u00a0public int Y { get; }\n\u00a0\u00a0\u00a0public Point(int x = 0, int y = 0)\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0X = x;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Y = y;\n\u00a0\u00a0\u00a0}\n}\nPoint p1 = new Point(2, 3);\nPoint p2 = new Point(0, 3);\nif (p1.Equals(p2)) { /* do something */ }\n```", "```cs\nstruct Point : IEquatable<Point>\n{\n\u00a0\u00a0\u00a0\u00a0public int X { get; }\n\u00a0\u00a0\u00a0\u00a0public int Y { get; }\n\u00a0\u00a0\u00a0\u00a0public Point(int x = 0, int y = 0)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0X = x;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Y = y;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public bool Equals(Point other)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return X == other.X && Y == other.Y;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public override bool Equals(object obj)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (obj is Point other)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.Equals(other);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public override int GetHashCode()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return X.GetHashCode() * 17 + Y.GetHashCode();\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nstruct Point\n{\n\u00a0\u00a0\u00a0\u00a0public int X { get; }\n\u00a0\u00a0\u00a0\u00a0public int Y { get; }\n\u00a0\u00a0\u00a0\u00a0public Point(int x = 0, int y = 0)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0X = x;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Y = y;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public override bool Equals(object obj)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (obj is Point other)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.Equals(other);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public override int GetHashCode()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return X.GetHashCode() * 17 + Y.GetHashCode();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public static bool operator !=(Point p1, Point p2)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return p1.X != p2.X || p1.Y != p2.Y;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public static bool operator ==(Point p1, Point p2)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return p1.X == p2.X && p1.Y == p2.Y;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nPoint p1 = new Point(2, 3);\nPoint p2 = new Point(0, 3);\nif (p1 == p2) { /* do something */ }\n```", "```cs\nenum Priority\n{\n\u00a0\u00a0\u00a0\u00a0Low,\n\u00a0\u00a0\u00a0\u00a0Normal,\n\u00a0\u00a0\u00a0\u00a0Important,\n\u00a0\u00a0\u00a0\u00a0Urgent\n}\n```", "```cs\nenum Priority\n{\n\u00a0\u00a0\u00a0\u00a0Low = 0,\n\u00a0\u00a0\u00a0\u00a0Normal = 1,\n\u00a0\u00a0\u00a0\u00a0Important = 2,\n\u00a0\u00a0\u00a0\u00a0Urgent = 3\n}\n```", "```cs\nenum Priority\n{\n\u00a0\u00a0\u00a0\u00a0Low = 10,\n\u00a0\u00a0\u00a0\u00a0Normal,\n\u00a0\u00a0\u00a0\u00a0Important = 20,\n\u00a0\u00a0\u00a0\u00a0Urgent\n}\n```", "```cs\nenum Priority : byte\n{\n\u00a0\u00a0\u00a0\u00a0Low = 10,\n\u00a0\u00a0\u00a0\u00a0Normal,\n\u00a0\u00a0\u00a0\u00a0Important = 20,\n\u00a0\u00a0\u00a0\u00a0Urgent\n}\n```", "```cs\nPriority p = Priority.Normal;\nConsole.WriteLine(Priority.Urgent);\n```", "```cs\nPriority p1 = (Priority)42;\u00a0\u00a0\u00a0// p1 is 42\nPriority p2 = 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// p2 is 0\nPriority p3 = (int)10;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// p3 is Low\n```", "```cs\nint i = (int)Priority.Normal;\n```", "```cs\nEnum.TryParse(\"Normal\", out Priority p); // p is Normal\n```", "```cs\nEnum.TryParse(typeof(Priority), \"normal\", true, out object o);\nPriority p = (Priority)o;\u00a0\u00a0\u00a0// p is Normal\n```", "```cs\nnamespace chapter_04\n{\n\u00a0\u00a0\u00a0class foo { }\n}\n```", "```cs\nnamespace chapter_04\n{\n\u00a0\u00a0\u00a0namespace demo\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class foo { }\n\u00a0\u00a0\u00a0}\n}\n```", "```cs\nnamespace chapter_04.demo\n{\n\u00a0\u00a0\u00a0class foo { }\n}\n```", "```cs\nnamespace chapter_04\n{\n\u00a0\u00a0\u00a0\u00a0class Program\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void Main(string[] args)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var f = new chapter_04.demo.foo();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nusing chapter_04.demo;\nnamespace chapter_04\n{\n\u00a0\u00a0\u00a0\u00a0class Program\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void Main(string[] args)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var f = new foo();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nnamespace chapter_04.demo\n{\n\u00a0\u00a0\u00a0class foo { }\n}\nnamespace chapter_04.demo\n{\n\u00a0\u00a0\u00a0class bar { }\n}\n```", "```cs\nnamespace chapter_04.System\n{\n\u00a0\u00a0\u00a0\u00a0class Console { }\n\n\u00a0\u00a0\u00a0\u00a0class Program\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void Main(string[] args)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0global::System.Console.WriteLine(\"Hello, world!\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```"]