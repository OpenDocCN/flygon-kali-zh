["```java\n \u03bbx.x+1\n```", "```java\n(lambda (arg) (+ arg 1))\n```", "```java\nvoid anonymousClass() {\n    final Server server = new HttpServer();\n    waitFor(new Condition() {\n        @Override\n        public Boolean isSatisfied() {\n            return !server.isRunning();\n        }\n    });\n}\n\n```", "```java\n void closure() { \n     Server server = new HttpServer();\n     waitFor(() -> !server.isRunning()); \n }\n```", "```java\nclass WaitFor {\n    static void waitFor(Condition condition) throws   \n    InterruptedException {\n        while (!condition.isSatisfied())\n            Thread.sleep(250);\n    }\n}\n\n```", "```java\npublic class Example {\n    private String firstName = \"Jack\";\n\n    public void example() {\n        Function<String, String> addSurname = surname -> {\n            // equivalent to this.firstName\n            return firstName + \" \" + surname;  // or even,   \n            this.firstName\n        };\n    }\n}\n```", "```java\npublic class Example {\n    private String firstName = \"Charlie\";\n\n    public void anotherExample() {\n        Function<String, String> addSurname = new Function<String,  \n        String>() {\n            @Override\n            public String apply(String surname) {\n                return Example.this.firstName + \" \" + surname;   \n                // OK\n            }\n        };\n    }\n}\n```", "```java\npublic class Example {\n    private String firstName = \"Charlie\";\n\n  public void anotherExample() {\n    Function<String, String> addSurname = new Function<String,   \n    String>() {\n      @Override\n      public String apply(String surname) {\n        return this.firstName + \" \" + surname;   // compiler error\n      }\n    };\n  }\n}\n```", "```java\npublic class ShadowingExample {\n\n    private String firstName = \"Charlie\";\n\n    public void shadowingExample(String firstName) {\n        Function<String, String> addSurname = surname -> {\n            return this.firstName + \" \" + surname;\n        };\n    }\n}\n```", "```java\npublic class ShadowingExample {\n\n    private String firstName = \"Charlie\";\n\n    public void anotherShadowingExample(String firstName) {\n        Function<String, String> addSurname = new Function<String,  \n        String>() {\n            @Override\n            public String apply(String surname) {\n                return firstName + \" \" + surname;\n            }\n        };\n    }\n}\n```", "```java\nArrays.sort(numbers, new Comparator<Integer>() {\n    @Override\n    public int compare(Integer first, Integer second) {\n        return first.compareTo(second);\n    }\n});\n```", "```java\nArrays.sort(numbers, (first, second) -> first.compareTo(second));\n```", "```java\nComparator<Integer> ascending = (first, second) -> first.compareTo(second);\nArrays.sort(numbers, ascending);\n```", "```java\ninterface Example {\n     R apply(A arg);\n}\n```", "```java\nnew Example() {\n    @Override\n    public R apply(A args) {\n        body\n    }\n};\n```", "```java\n(args) {\n    body\n}\n```", "```java\n(args) -> {\n    body\n}\n```", "```java\nArrays.sort(numbers, new Comparator<Integer>() {\n    @Override\n    public int compare(Integer first, Integer second) {\n        return first.compareTo(second);\n    }\n});\n```", "```java\nArrays.sort(numbers, (Integer first, Integer second) {\n    return first.compareTo(second);\n});\n```", "```java\nArrays.sort(numbers, (Integer first, Integer second) -> {\n    return first.compareTo(second);\n});\n```", "```java\nArrays.sort(numbers, (first, second) -> {\n    return first.compareTo(second);\n});\n```", "```java\nArrays.sort(numbers, (first, second) -> first.compareTo(second));\n```", "```java\n(x) -> x + 1\n```", "```java\nx -> x + 1\n```", "```java\n(int x, int y) -> { return x + y; }\n(x, y) -> { return x + y; }\n(x, y) -> x + y; x -> x * 2\n() -> System.out.println(\"Hey there!\");\nSystem.out::println;\n```"]