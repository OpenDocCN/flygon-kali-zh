- en: Workspace Structure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作区结构
- en: Android Studio is a powerful and sophisticated development environment, designed
    with the specific purpose of developing, testing, and packaging Android applications.
    It can be downloaded, along with the Android SDK, as a single package, but as
    we shall see throughout the course of this book, it is, in reality, a collection
    of tools and components, many of which are installed and updated independently
    of each other.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio是一个功能强大且复杂的开发环境，专门用于开发、测试和打包Android应用程序。它可以作为一个单一的软件包，与Android
    SDK一起下载，但正如我们将在本书中看到的那样，它实际上是一组工具和组件，其中许多是独立安装和更新的。
- en: Android Studio is not the only way to develop Android apps; there are other
    IDEs, such as Eclipse and NetBeans, and it is even possible to develop a complete
    app using nothing more than Notepad and the command line, although this last method
    would be very slow and cumbersome.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio并不是开发Android应用程序的唯一方式；还有其他IDE，比如Eclipse和NetBeans，甚至可以仅使用记事本和命令行来开发完整的应用程序，尽管这种方法会非常缓慢和繁琐。
- en: Whether you are migrating from another IDE or just want to get the most from
    Android Studio, this book will take you through all of its most useful features
    in the order that these would be encountered during the course of developing an
    application, starting with UI development and progressing through coding and testing
    to building and distribution. Android Studio provides some useful and smart tools
    to assist us at every step of this journey.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是从其他IDE迁移还是只是想充分利用Android Studio，本书将按照开发应用程序的过程中遇到的顺序，带您了解其最有用的功能，从UI开发开始，逐步进行编码和测试，到构建和分发。Android
    Studio在这段旅程的每一步都为我们提供了一些有用和智能的工具。
- en: Built for a purpose, Android Studio has attracted a growing number of third-party
    plugins that provide a large array of valuable functions, not available directly
    via the IDE. These include plugins to speed up build times, debug a project over
    Wi-Fi, and many more. The most useful and popular of these will be covered in
    the relevant sections. Throughout the book, we will be finding ways to speed up
    tedious and difficult tasks using these plugins and Android Studio's built in
    components.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio是为了一个目的而构建的，吸引了越来越多的第三方插件，提供了大量有价值的功能，这些功能无法直接通过IDE获得。这些包括加快构建时间的插件，通过Wi-Fi调试项目等。其中最有用和最受欢迎的将在相关章节中介绍。在整本书中，我们将找到使用这些插件和Android
    Studio内置组件加快繁琐和困难任务的方法。
- en: 'In this chapter, you will be engaged with the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将涉及以下主题：
- en: Exploring the differences between Studio and other IDEs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Studio和其他IDE之间的差异
- en: Taking a brief guided tour
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行简要的导览
- en: Learning how the workspace is structured
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解工作区的结构
- en: Exploring editor windows
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索编辑器窗口
- en: Creating a Material theme
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建材料主题
- en: Understanding Tools windows
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解工具窗口
- en: Exploring device filesystems
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索设备文件系统
- en: Using Instant Run to speed up the build process
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用即时运行来加快构建过程
- en: Exploring the SDK manager
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索SDK管理器
- en: Introducing the virtual device manager
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍虚拟设备管理器
- en: Importing a project from another IDE
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从其他IDE导入项目
- en: '![](img/eb10778e-c457-47ca-8774-080d20db2e86.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb10778e-c457-47ca-8774-080d20db2e86.png)'
- en: Android Studio
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio
- en: If you are already familiar with Android Studio, then you may wish to skip some
    sections of this introductory chapter, as it is written more with those migrating
    from other IDEs in mind. However, there are a number of handy tips that you may
    not have come across before.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经熟悉Android Studio，那么您可能希望跳过本介绍章节的一些部分，因为它更多地是针对那些从其他IDE迁移的人。然而，您可能之前没有遇到过一些方便的技巧。
- en: Despite being arguably a superior tool, there are some very good reasons for
    having stuck with another IDE, such as Eclipse. Many developers develop for multiple
    platforms, which makes Eclipse a good choice of tool. Every developer has deadlines
    to meet, and getting to grips with unfamiliar software can slow them down considerably
    at first. This book will speed up this transition so that migrating developers
    can begin to take advantage of the added features provided by Android Studio with
    as little interruption as possible.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以说是一种更优越的工具，但有一些非常好的理由可以坚持使用另一个IDE，比如Eclipse。许多开发人员开发多个平台，这使得Eclipse成为一个很好的工具选择。每个开发人员都有截止日期要满足，熟悉陌生软件可能会在一开始大大减慢他们的速度。这本书将加快这种过渡，以便迁移开发人员可以尽可能少地中断地开始利用Android
    Studio提供的附加功能。
- en: How Android Studio differs
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android Studio的不同之处
- en: There are many ways that Android Studio differs from other IDEs and development
    tools. Some of these differences are quite subtle, such as the way support libraries
    are installed, and others, for instance the build process and the UI design, are
    profoundly different.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio与其他IDE和开发工具有许多不同之处。其中一些差异相当微妙，比如支持库的安装方式，而其他差异，例如构建过程和UI设计，则是完全不同的。
- en: 'Before taking a closer look at the IDE itself, it is a good idea to first understand
    what some of these important differences are. The major ones are listed here:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在更仔细地了解IDE本身之前，首先了解一些重要的区别是一个好主意。主要的区别列在这里：
- en: '**UI development**: The most significant difference between Studio and other
    IDEs is its layout editor, which is far superior to any of its rivals, offering
    text, design, and blueprint views, and most importantly, constraint layout tools for
    every activity or fragment, an easy-to-use theme and style editors, and a drag-and-drop
    design function. The layout editor also provides many tools unavailable elsewhere,
    such as a comprehensive preview function for viewing layouts on a multitude of
    devices and simple-to-use theme and translation editors.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI开发**：Studio和其他IDE之间最重要的区别是其布局编辑器，它比任何竞争对手都要优秀，提供文本、设计和蓝图视图，最重要的是，为每个活动或片段提供约束布局工具，易于使用的主题和样式编辑器，以及拖放设计功能。布局编辑器还提供了许多其他地方无法获得的工具，例如全面的预览功能，可以在多种设备上查看布局，以及易于使用的主题和翻译编辑器。'
- en: '**Project structure**: Although the underlying directory structure remains
    the same, the way Android Studio organizes each project differs considerably from
    its predecessors. Rather than using workspaces as in Eclipse, Studio employs modules
    that can more easily be worked on together without having to switch workspaces.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目结构：**尽管底层目录结构保持不变，但Android Studio组织每个项目的方式与其前身有很大不同。Studio使用模块而不是Eclipse中的工作区，这样可以更轻松地一起工作而无需切换工作区。'
- en: What is called a workspace in Eclipse is called a project in Studio, and what
    is called a project in Eclipse is a module in Studio.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在Eclipse中称为工作区的东西在Studio中称为项目，在Eclipse中称为项目的东西在Studio中称为模块。
- en: This difference in structure may seem unusual at first, but any Eclipse user
    will soon see how much time it can save once it becomes familiar.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这种结构上的差异起初可能看起来不寻常，但任何Eclipse用户一旦熟悉起来就会看到它可以节省多少时间。
- en: '**Code completion and refactoring:** The way that Android Studio intelligently
    completes code as you type makes it a delight to use. It regularly anticipates
    what you are about to type, and often a whole line of code can be entered with
    no more than two or three keystrokes. Refactoring too, is easier and more far-reaching
    than alternative IDEs, such as Eclipse and NetBeans. Almost anything can be renamed,
    from local variables to entire packages.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码补全和重构：** Android Studio智能地在您输入时完成代码的方式使其成为一种愉悦。它经常能够预测您即将输入的内容，通常只需两三次按键就可以输入整行代码。重构也比Eclipse和NetBeans等替代IDE更容易和更广泛。几乎任何东西都可以重命名，从局部变量到整个包。'
- en: '**Emulation:** Studio comes equipped with a flexible virtual device editor,
    allowing developers to create device emulators to model any number of real-world
    devices. These emulators are highly customizable, both in terms of form factor
    and hardware configurations, and virtual devices can be downloaded from many manufacturers.
    Users of other IDEs will be familiar with Android AVDs already, although they
    will certainly appreciate the preview features found in the Design tab.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仿真：** Studio配备了灵活的虚拟设备编辑器，允许开发人员创建设备仿真器来模拟任意数量的真实设备。这些仿真器可以高度定制，无论是在外形因素还是硬件配置方面，虚拟设备都可以从许多制造商那里下载。其他IDE的用户可能已经熟悉Android
    AVD，尽管他们肯定会喜欢Design选项卡中的预览功能。'
- en: '**Build tools:** Android Studio employs the Gradle build system, which performs
    the same functions as the Apache Ant system that many Java developers will be
    familiar with. It does, however, offer a lot more flexibility and allows for customized
    builds, enabling developers to create APKs that can be uploaded to TestFlight,
    or to produce demo versions of an app, with ease. It is also the Gradle system
    that allows for the modular nature discussed previously. Rather than each library
    or a third-party SDK being compiled as a JAR file, Studio builds each of these
    using Gradle.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建工具：** Android Studio采用了Gradle构建系统，它执行与许多Java开发人员熟悉的Apache Ant系统相同的功能。然而，它提供了更多的灵活性，并允许定制构建，使开发人员能够轻松创建可上传到TestFlight的APK，或者制作应用的演示版本。正是Gradle系统使得之前讨论的模块化成为可能。Studio不是将每个库或第三方SDK编译为JAR文件，而是使用Gradle构建每个库或SDK。'
- en: These are the most far-reaching differences between Android Studio and other
    IDEs, but there are more as well as many features that are unique. Studio provides
    the powerful JUnit test facility and allows for cloud platform support and even
    Wi-Fi debugging. It is also considerably faster than Eclipse, which, to be fair,
    has to cater for a wider range of development needs, as opposed to just one, and
    it can be run on less powerful machines.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是Android Studio与其他IDE之间最深远的差异，但还有更多独特的功能。Studio提供了强大的JUnit测试功能，允许云平台支持甚至Wi-Fi调试。它也比Eclipse快得多，公平地说，Eclipse必须满足更广泛的开发需求，而不仅仅是一个，而且它可以在性能较低的机器上运行。
- en: Android Studio also provides an amazing time-saving device in the form of Instant
    Run. This feature cleverly only builds the part of a project that has been edited,
    meaning that developers can test small changes to code without having to wait
    for a complete build to be performed for each test. This feature can bring these
    waiting times down from minutes to almost zero.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio还提供了一个令人惊叹的节省时间的工具，即即时运行。这个功能巧妙地只构建了项目中已编辑的部分，这意味着开发人员可以测试代码的小改动，而不必等待每次测试都进行完整的构建。这个功能可以将等待时间从几分钟减少到几乎零。
- en: Whether you are new to Android Studio or want to gain more from it, the first
    step is to take a broad look at its most prominent structures.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是新手还是想更多地了解Android Studio，第一步都是广泛了解其最突出的结构。
- en: Workspace structure
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作区结构
- en: 'The overall structure of Android Studio is not dissimilar to other IDEs. There
    are windows for editing text and screen components, others for navigating project
    structures, and others still for monitoring and debugging. The IDE is highly flexible
    and can be configured to suit many specific needs and preferences. A typical layout
    might look like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio的整体结构与其他IDE并无不同。有用于编辑文本和屏幕组件的窗口，用于导航项目结构的窗口，以及用于监视和调试的窗口。这个IDE非常灵活，可以根据许多特定的需求和偏好进行配置。典型的布局可能是这样的：
- en: '![](img/23ec00ec-4f89-4a55-94fe-6f1e8425b2cf.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23ec00ec-4f89-4a55-94fe-6f1e8425b2cf.png)'
- en: A typical workspace layout
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的工作区布局
- en: 'Although these windows can be arranged in any way we please, generally speaking,
    in the previous screenshot, the four panes might have the following functions:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些窗口可以按照我们的意愿进行排列，但一般来说，在上一张截图中，四个窗格可能具有以下功能：
- en: Navigating a project, module, or library
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航项目、模块或库
- en: Editing text and designing layouts
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑文本和设计布局
- en: Defining component properties or screen previews
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义组件属性或屏幕预览
- en: Monitoring and debugging
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监视和调试
- en: There are times when a large number of open panes can be distracting; for these
    times, Studio has a Distraction Free Mode, which displays only the current editor
    window and can be entered from the View menu.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有时打开大量窗格可能会分散注意力；对于这些时候，Studio有一个无干扰模式，只显示当前编辑器窗口，可以从视图菜单中进入。
- en: There are many different perspectives we can take on our projects and many ways
    to organize them. The best way to see how is to take a look at each in turn.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从许多不同的角度看待我们的项目，并有许多组织它们的方式。了解每种方式的最佳方法是依次查看每种方式。
- en: Editor windows
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑器窗口
- en: Naturally, the most important of all the windows in an IDE are those where we
    create and modify the code that underlies all our apps. Not only do we use editors
    for our XML and Java, there are, among others, editors for simplifying other resources,
    such as translations and themes. However graphical the editor may be, all Android
    resources end up as XML files in the `res` directory.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在IDE中最重要的窗口当然是我们创建和修改所有应用程序代码的窗口。我们不仅使用编辑器来编辑XML和Java，还有其他编辑器用于简化其他资源，如翻译和主题。然而，无论编辑器多么图形化，所有Android资源最终都以XML文件的形式出现在`res`目录中。
- en: 'It is quite possible to create most Android resources without ever having to
    write any code at all. Themes can be created with the corresponding editor with
    nothing more than a few clicks of a mouse. Nevertheless, if we are to consider
    ourselves as experts, it is important that we have a good understanding of the
    underlying code and how and where Studio stores these resources. The following
    example demonstrates how to create a new Android theme using the theme editor:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，我们可以在不写任何代码的情况下创建大多数Android资源。只需点击几下鼠标，就可以使用相应的编辑器创建主题。然而，如果我们要自认为是专家，了解底层代码以及Studio存储这些资源的方式和位置是很重要的。以下示例演示了如何使用主题编辑器创建新的Android主题：
- en: Start or open an Android Studio project.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动或打开Android Studio项目。
- en: Open the theme editor from Tools | Android | Theme Editor.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从工具|Android|主题编辑器中打开主题编辑器。
- en: '![](img/e63a5dd7-9448-4329-8f51-8bde45a5b56b.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e63a5dd7-9448-4329-8f51-8bde45a5b56b.png)'
- en: The theme editor
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 主题编辑器
- en: From the Theme drop-down in the top right corner of the editor, select Create
    New Theme and enter a name in the New Theme dialog.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器右上角的主题下拉菜单中，选择创建新主题，并在新主题对话框中输入名称。
- en: Leave the Theme parent field as-is.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将主题父级字段保持不变。
- en: Click on the colorPrimary thumbnail.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击colorPrimary缩略图。
- en: Choose a color you like from the resultant swatch with a weight of `500`.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从结果色板中选择一个你喜欢的颜色，权重为`500`。
- en: In the same manner, select the same color with a weight of `700` for the secondary
    color.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以相同的方式，为辅助颜色选择权重为`700`的相同颜色。
- en: Select a color with a weight of `100` that contrasts nicely with your primary
    colors for the accent.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个权重为`100`的颜色，与主色对比鲜明。
- en: Open a preview or the design editor to view these changes.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开预览或设计编辑器以查看这些更改。
- en: 'In the preceding example, we created a new theme that will be automatically
    applied throughout the application. We could have simply edited the default `AppTheme`,
    but this approach will simplify matters if we later decide to employ more than
    one theme. The IDE applies these changes straightaway by adding something like
    the following line to the `res/values/styles.xml` file:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们创建了一个新的主题，该主题将自动应用于整个应用程序。我们本可以简单地编辑默认的`AppTheme`，但如果以后决定使用多个主题，这种方法将简化问题。IDE通过向`res/values/styles.xml`文件添加以下行来立即应用这些更改：
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The actual color changes can be found in the `res/values/colors.xml` file.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的颜色更改可以在`res/values/colors.xml`文件中找到。
- en: The theme editor demonstrates rather nicely how Studio editors can create and
    modify code after little more than a few mouse clicks from us.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 主题编辑器相当好地展示了Studio编辑器如何在我们只需点击几下鼠标后创建和修改代码。
- en: All editors can be maximized with *Ctrl* + *Shift* +*F12*. Use the same keys
    to return to your original layout.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 所有编辑器都可以使用*Ctrl* + *Shift* +*F12*进行最大化。使用相同的键返回到原始布局。
- en: 'It is also possible to change the theme of the IDE itself by selecting Settings
    | Editor | Colors and Fonts from the File menu, as displayed in the following
    image:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以通过从文件菜单中选择设置|编辑器|颜色和字体来更改IDE本身的主题，如下图所示：
- en: '![](img/7638891a-bf99-43d7-a1ce-f3388b81b58f.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7638891a-bf99-43d7-a1ce-f3388b81b58f.png)'
- en: The Studio theme dialog
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Studio主题对话框
- en: Android Studio comes equipped with just one alternative color scheme, *Darcula*.
    This theme presents light text on a dark background and, as such, is far easier
    on the eye than the default settings, especially for those long, late night development
    sessions. There are other schemes available online and it can be a lot of fun
    to design one's own. However, for the purposes of producing printed material,
    we will stick with the default IDE theme here.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio只配备了一个备选颜色方案*Darcula*。这个主题在黑色背景上呈现浅色文本，因此对眼睛来说比默认设置要容易得多，尤其是对于那些长时间的深夜开发。还有其他在线可用的方案，设计自己的方案也很有趣。然而，为了制作印刷材料，我们将在这里坚持使用默认的IDE主题。
- en: 'Another good example of a subsidiary editor is the Translations editor, which
    is also a good way to demonstrate how the project structure differs from other
    IDEs. The following steps show how this is achieved:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个很好的子编辑器示例是Translations编辑器，这也是展示项目结构与其他IDE不同的好方法。以下步骤展示了如何实现这一点：
- en: Open the Translations editor by right-clicking on the `res/values/strings.xml` file
    and selecting it from the menu. This can also be found from the Language drop-down
    in the design XML editor.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`res/values/strings.xml`文件，从菜单中选择并打开Translations编辑器。也可以在设计XML编辑器的语言下拉菜单中找到。
- en: Click on the globe icon near the top left corner of the editor and select a
    language from the list.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击编辑器左上角附近的地球图标，并从列表中选择一种语言。
- en: 'Select the string you want to translate in the top pane and enter the value
    in the lower pane, as shown:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部窗格中选择要翻译的字符串，并在下方窗格中输入值，如图所示：
- en: '![](img/6858e36e-95f4-4c8e-b406-5747bfeb78d1.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6858e36e-95f4-4c8e-b406-5747bfeb78d1.png)'
- en: The Translations editor
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译编辑器
- en: This is a remarkably simple exercise, the point of it being to demonstrate how
    Android Studio stores such resources and how it displays them. The editor has
    created a new `strings.xml` file, identical to our original in every way apart
    from the string values of our translated text. This file will be referred to automatically
    by any device that has that language set as the default by the user.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常简单的练习，其目的是演示Android Studio如何存储这些资源以及如何显示它们。编辑器已经创建了一个新的`strings.xml`文件，除了翻译文本的字符串值之外，它在所有方面都与我们的原始文件相同。这个文件将自动被任何将该语言设置为用户默认语言的设备自动引用。
- en: Judging by the Project Explorer, one might think that there was a project directory
    called `strings.xml` in the values directory and that it contained two `strings.xml`
    files. This, in fact, is presented this way only to help us organize our resources.
    An examination of the `project` folder on disk will show that there are in fact
    two (or more) folders inside the `res` directory named `values` and `values-fr`.
    Not only does this help organize our work but it also helps minimize the space
    our apps take up on a device, as only the resource folders that are needed are
    installed on an end device.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过项目资源管理器，人们可能会认为在值目录中有一个名为`strings.xml`的项目目录，并且其中包含两个`strings.xml`文件。实际上，这样呈现只是为了帮助我们组织资源。检查磁盘上的`project`文件夹将显示实际上`res`目录中有两个（或更多）名为`values`和`values-fr`的文件夹。这不仅有助于组织我们的工作，还有助于减少应用程序在设备上占用的空间，因为只有需要的资源文件才会安装在最终设备上。
- en: The actual folder hierarchy can always be determined from the navigation bar
    directly under the main toolbar.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的文件夹层次结构可以直接从主工具栏下方的导航栏中确定。
- en: '![](img/8bf62d90-ddad-4bc7-b486-742d1facb642.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8bf62d90-ddad-4bc7-b486-742d1facb642.png)'
- en: The navigation bar
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 导航栏
- en: Themes and Translations are two of the least significant editors but make a
    good introduction to how Android Studio manages app resources. The majority of
    a developer's time is spent using code editors and these will, of course, be covered
    in depth throughout the book. However, although editors make up the core of the
    IDE, there are many other useful, and even vital, tools available to us, and the
    most commonly used of these are available from the tools margin.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 主题和翻译是两个最不重要的编辑器，但它们很好地介绍了Android Studio如何管理应用程序资源。开发人员的大部分时间都是在使用代码编辑器，当然，这将在整本书中深入介绍。然而，虽然编辑器构成了IDE的核心，但还有许多其他有用甚至至关重要的工具可供我们使用，其中最常用的工具可以从工具边缘获得。
- en: Tool windows
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具窗口
- en: There are at least a dozen tool windows available to us, more if you have installed
    plugins. They can be accessed via the View | Tools Windows menu, the tools icon
    on the far left-hand side of the status bar at the bottom of the workspace, or
    by pressing *Alt* and the corresponding number key to open a specific tool window.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们至少有十几个工具窗口可供使用，如果安装了插件，还有更多。它们可以通过查看|工具窗口菜单、工作区底部状态栏最左侧的工具图标，或按*Alt*和相应的数字键来打开特定的工具窗口。
- en: '![](img/79898bf0-fc31-401e-a80a-8ac2475abcfe.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/79898bf0-fc31-401e-a80a-8ac2475abcfe.png)'
- en: The Tool Windows menu
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 工具窗口菜单
- en: Tool Windows are highly configurable, and each window can be set as docked,
    floating, or contained in its own window.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 工具窗口是高度可配置的，每个窗口都可以设置为停靠、浮动或包含在自己的窗口中。
- en: The Tool Windows icon on the status bar can be used to hide and reveal tool
    window tabs around the border of the workspace.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 状态栏上的工具窗口图标可用于隐藏和显示工具窗口标签，围绕工作区的边框。
- en: 'This is particularly useful when working with more than one screen, as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用多个屏幕时，这是特别有用的：
- en: '![](img/0b1f7d34-9826-42b7-b09d-a6d468a2dbd8.png)A docked, floating, and windowed
    tool window'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/0b1f7d34-9826-42b7-b09d-a6d468a2dbd8.png)一个停靠的、浮动的和窗口化的工具窗口'
- en: 'We will be covering all these tools in depth throughout the course of the book.
    For now though, the following is a brief introduction to the most commonly used
    tools:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的整个过程中，我们将深入介绍所有这些工具。不过，以下是对最常用的工具的简要介绍：
- en: '**Messages**: *Alt* + *0*. This tool produces a paired-down version of the
    Gradle build process. A more detailed output can be found within the Gradle Console.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息**：*Alt* + *0*。这个工具生成了Gradle构建过程的简化版本。更详细的输出可以在Gradle控制台中找到。'
- en: '**Project**: *Alt* + *1*. Usually docked to the left of the workspace, this
    tool is our main navigational tool.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目**：*Alt* + *1*。通常停靠在工作区的左侧，这个工具是我们的主要导航工具。'
- en: '**Favorites**: *Alt* + *2*. This is a very handy organizational tool, providing
    quick access to commonly used classes and components. To add any file to the Favorites
    list, simply right-click on it in the project window and select Add to Favorites
    from the drop-down menu.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收藏夹**：*Alt* + *2*。这是一个非常方便的组织工具，可以快速访问常用的类和组件。要将任何文件添加到收藏夹列表中，只需在项目窗口中右键单击该文件，然后从下拉菜单中选择“添加到收藏夹”。'
- en: '**Run**: *Alt* + *3*. A powerful diagnostic tool that becomes available when
    an application is running on a device or emulator.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行**：*Alt* + *3*。这是一个强大的诊断工具，在应用程序在设备或模拟器上运行时可用。'
- en: '**Android**: *Alt* + *4*. This is Studio''s main debugging window and is used
    to monitor log output from a running application and take screenshots.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android**：*Alt* + *4*。这是Studio的主要调试窗口，用于监视运行应用程序的日志输出和截图。'
- en: '**Memory Monitor**: *Alt* + *5*. This incredibly useful tool produces a live
    graph of memory usage as an application is running.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存监视器**：*Alt* + *5*。这个非常有用的工具可以在应用程序运行时生成内存使用情况的实时图表。'
- en: '**Structure**: *Alt* + *6*. This tool produces detailed information about the
    current editor, showing a hierarchical view of classes, variables, and other components
    contained in that particular file.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构**：*Alt* + *6*。这个工具提供了关于当前编辑器的详细信息，显示了该特定文件中包含的类、变量和其他组件的分层视图。'
- en: One of the most useful Tool Windows is the Device File Explorer tool. This allows
    us to browse the filesystem of any connected device or emulator.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最有用的工具窗口之一是设备文件浏览器工具。这使我们能够浏览任何连接设备或模拟器的文件系统。
- en: '![](img/0662e7f2-c0b3-4bd1-86d2-7b715ded4558.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0662e7f2-c0b3-4bd1-86d2-7b715ded4558.png)'
- en: The Device File Explorer tool.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 设备文件浏览器工具。
- en: All application files can be found in `data/data`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 所有应用程序文件都可以在`data/data`中找到。
- en: Tool windows are fantastically useful and enable us to configure the IDE to
    suit the particular task we are working on. Being able to select appropriate tools
    like this is one of Android Studio's most useful features. Of course, Android
    Studio is nothing more than a frontend interface that allows us to connect with
    the real power behind Android, the SDK.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 工具窗口非常有用，使我们能够配置集成开发环境以适应我们正在进行的特定任务。能够选择适当的工具是Android Studio最有用的功能之一。当然，Android
    Studio只不过是一个前端界面，允许我们连接到Android背后的真正力量，即SDK。
- en: The Android SDK
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android SDK
- en: Technically speaking, it is quite possible to describe the **Software Development
    Kit**(**SDK**) as not being a part of Android Studio, as it is used by other IDEs.
    However, the IDE would be useless without it, and now is as good a time as any
    to take a quick look at it and its manager.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，可以将**软件开发工具包**（**SDK**）描述为不是Android Studio的一部分，因为它被其他集成开发环境使用。然而，没有它，集成开发环境将毫无用处，现在是一个很好的时机来快速了解一下它及其管理器。
- en: The Android SDK is a huge collection of APIs, consisting of Java classes and
    interfaces organized into complex but logical hierarchies along with other utilities,
    such as USB drivers and hardware accelerators.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK是一个庞大的API集合，包括组织成复杂但逻辑的层次结构的Java类和接口，以及其他实用工具，如USB驱动程序和硬件加速器。
- en: The SDK and its components update far more frequently than the operating system
    itself, a setup that users should be blissfully unaware of. Android users think
    in terms of Lollipop or Honeycomb; as developers, we see the Android world in
    terms of SDK levels.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: SDK及其组件的更新频率远远超过操作系统本身，用户应该对此毫不知情。Android用户以Lollipop或Honeycomb为单位；作为开发人员，我们以SDK级别来看待Android世界。
- en: 'The SDK is controlled with SDK Manager, which can be accessed via the main
    toolbar or from Settings | Appearance & Behavior | System Settings | Android SDK
    from the File menu. There is also a standalone SDK Manager, which can be run without
    Android Studio. This can be found in the following directory: `\AppData\Local\Android\sdk`.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: SDK由SDK Manager控制，可以通过主工具栏或从文件菜单的设置|外观和行为|系统设置|Android SDK中访问。还有一个独立的SDK Manager，可以在没有Android
    Studio的情况下运行。这可以在以下目录中找到：`\AppData\Local\Android\sdk`。
- en: '![](img/9ece20b0-2071-4b75-81e4-99d85c46d451.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ece20b0-2071-4b75-81e4-99d85c46d451.png)'
- en: The Android SDK standalone manager
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK独立管理器
- en: 'There are three sections to the SDK manager: tools, platforms, and extras.
    At the very minimum, you will need to install the latest SDK tools, platform tools,
    and build tools. You will also need to install the most recent platform and any
    other platform you intend to target directly. You will also need system images
    for any virtual devices you wish to create as well as the Google USB driver and
    HAXM hardware accelerator.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: SDK管理器有三个部分：工具、平台和额外。至少，您需要安装最新的SDK工具、平台工具和构建工具。您还需要安装最新的平台和任何其他您打算直接定位的平台。您还需要为您希望创建的任何虚拟设备安装系统映像以及Google
    USB驱动程序和HAXM硬件加速器。
- en: If you have been using Eclipse to develop Android apps, you will be acquainted
    with the Android support libraries. When using Android Studio, it is the Support
    Repository that should be installed instead.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您一直在使用Eclipse开发Android应用程序，您将熟悉Android支持库。在使用Android Studio时，应安装支持存储库。
- en: The easiest way to manage the various updates is to set them to be installed
    automatically, and this can be done from the Settings dialog (*Ctrl + Alt + S*)
    under Appearance and Behavior | System Settings | Updates.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 管理各种更新的最简单方法是将它们设置为自动安装，可以在设置对话框（*Ctrl + Alt + S*）中的外观和行为|系统设置|更新下完成。
- en: The SDK forms the backbone of our development environment, but however well
    we master it, we still need some way to test our creations, and in the absence
    of a large number of real devices, this depends on creating virtual devices with
    the Android device emulator.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: SDK构成了我们开发环境的支柱，但无论我们掌握得多么好，我们仍然需要一种方式来测试我们的创作，在没有大量真实设备的情况下，这取决于使用Android设备模拟器创建虚拟设备。
- en: Virtual devices
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟设备
- en: There are so many Android devices available on the market that it would be an
    impossibility to thoroughly test our apps on very many real devices . It is for
    this reason that the system allows us to create emulated devices using the virtual
    device manager.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有如此多的Android设备，要在很多真实设备上彻底测试我们的应用几乎是不可能的。正因为如此，系统允许我们使用虚拟设备管理器创建模拟设备。
- en: The AVD Manager allows us to create both form factor and hardware profiles from
    scratch and to provide several ready-made virtual devices and system images that
    can be downloaded from various manufacturers' websites.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: AVD管理器允许我们从头开始创建形态因素和硬件配置文件，并提供几个现成的虚拟设备和系统映像，可以从各个制造商的网站上下载。
- en: '![](img/a8d66bbc-1eba-4306-9320-6a83ee719b57.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8d66bbc-1eba-4306-9320-6a83ee719b57.png)'
- en: AVD configuration screen
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: AVD配置屏幕
- en: Android emulators can be notoriously slow, even on very powerful machines, and
    this is to be expected, as creating a fully functioning virtual device is a remarkably
    complex task. There are, however, a few things that can be done to speed things
    up a little by designing each virtual device to match the particular tasks of
    the app we are developing. For example, if your app does not make use of the device
    camera, then do not include it in the configuration. Likewise, do not allocate
    much more memory than the app itself requires.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Android模拟器可能非常慢，即使在非常强大的机器上也是如此，这是可以预料的，因为创建一个完全功能的虚拟设备是一个非常复杂的任务。然而，可以通过设计每个虚拟设备以匹配我们正在开发的应用程序的特定任务来加快速度。例如，如果您的应用程序不使用设备摄像头，则不要在配置中包含它。同样，不要分配比应用程序本身需要的内存多得多。
- en: Android virtual devices are not the only option available to us, and there are
    a small but growing number of third-party emulators. Many of these are designed
    with gamers rather than developers in mind; although Genymotion is specifically
    a development tool, it contains more functions and is generally faster than the
    native emulators. Its only drawbacks are that is only free for personal use and
    only provides system images for phones and tablets and not wearables or large
    screen devices, such as TVs.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Android虚拟设备并不是我们唯一的选择，还有一些少量但不断增长的第三方模拟器。其中许多是专为游戏玩家而不是开发人员设计的；尽管Genymotion是一个专门的开发工具，它包含更多功能，通常比原生模拟器更快。它的唯一缺点是只能免费供个人使用，并且只提供手机和平板电脑的系统映像，而不是可穿戴设备或大屏幕设备，如电视。
- en: Real-world devices naturally respond far faster than any emulator and, when
    it comes to testing basic functionality, using our own devices will provide swifter
    results. This approach is great for testing the fundamentals of an app but provide
    little to no feedback on just how our apps will look on the wide variety of screen
    sizes, shapes, and densities that Android devices can have.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界的设备自然比任何模拟器反应更快，当测试基本功能时，使用我们自己的设备会提供更快的结果。这种方法非常适合测试应用程序的基本功能，但几乎没有提供关于我们的应用程序在Android设备上可能具有的各种屏幕尺寸、形状和密度的反馈。
- en: 'Using real devices is a fast way to test application logic but developing apps
    for specific models or even generic size and shapes will inevitably require the
    creation of virtual devices. Fortunately, Android Studio comes equipped with an
    accelerated build process: Instant Run.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用真实设备是测试应用程序逻辑的快速方法，但为特定型号甚至通用大小和形状开发应用程序将不可避免地需要创建虚拟设备。幸运的是，Android Studio配备了一个加速构建过程：Instant
    Run。
- en: Instant Run
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Instant Run
- en: In earlier versions of Android Studio, each time a project was run on any kind
    of device, a full build had to be performed. Even if we made only tiny changes
    to our code, we would still have to wait for the entire app to be rebuilt and
    reinstalled. This could prove very time-consuming, especially on less powerful
    machines. This slowness often resulted in having to test several modifications
    at once, leading to a more complex debugging process than is ideal.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在较早的Android Studio版本中，每次在任何设备上运行项目时，都必须执行完整的构建。即使我们只对代码进行了微小的更改，我们仍然必须等待整个应用程序重新构建和重新安装。这可能非常耗时，特别是在性能较差的机器上。这种缓慢通常导致不得不一次性测试多个修改，导致比理想情况更复杂的调试过程。
- en: Instant Run attempts to build only those classes or activities that have been
    changed since the last build, and providing the manifest file has not been edited,
    the app is not even reinstalled, and in some cases, the launch activity is not
    even restarted.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Instant Run尝试仅构建自上次构建以来已更改的那些类或活动，并且只要清单文件没有被编辑，应用程序甚至不会被重新安装，有些情况下，启动活动甚至不会被重新启动。
- en: 'As Instant Run is a recent innovation, it is unfortunately not available on
    all versions of Android and, to take full advantage of it, you will need to set
    the minimum SDK level to API 21 or higher, although elements of it will work with
    API level 15 and higher. In Android Studio, this level is set from the `build.gradle
    (Module: app)` file, as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Instant Run是一项最近的创新，遗憾的是它并不适用于所有版本的Android，并且要充分利用它，您需要将最低SDK级别设置为API 21或更高级别，尽管它的一些元素将与API级别15及更高级别一起工作。在Android
    Studio中，此级别是从`build.gradle（Module：app）`文件中设置的，如下所示：
- en: '[PRE1]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: More often than not, we try to make our apps as backward-compatible as possible
    and developing an app that only works with API level 21 or higher would seriously
    limit the number of users we can reach. However, the time Instant Run saves us
    makes it worthwhile to test and debug an app API 21 or higher and then, later,
    reassemble it to match the versions we wish to target.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们往往会尽可能使我们的应用程序向后兼容，开发一个只能在API级别21或更高级别上运行的应用程序将严重限制我们能够触及的用户数量。然而，Instant
    Run为我们节省的时间使得值得测试和调试API 21或更高级别的应用程序，然后稍后重新组装以匹配我们希望目标的版本。
- en: When deciding which Android versions to target, a useful dashboard displays
    the up-to-date usage data of platforms and screens. It can be found at `developer.android.com/about/dashboards/index.html`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定要针对哪些Android版本时，一个有用的仪表板显示了平台和屏幕的最新使用数据。它可以在`developer.android.com/about/dashboards/index.html`找到。
- en: Moving from another IDE to Android Studio need not be a difficult transition
    and will prove invaluable once complete. However, it may be that you have projects
    developed in other IDEs that you wish to continue developing using Studio. Fortunately,
    this is a simple task, as the following section demonstrates.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个IDE迁移到Android Studio不需要是一个困难的过渡，一旦完成将会非常有价值。但是，您可能有在其他IDE中开发的项目，希望继续使用Studio进行开发。幸运的是，这是一个简单的任务，如下一节所示。
- en: Importing projects into Android Studio
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将项目导入到Android Studio
- en: Eclipse is, without question, one of the finest development tools around and,
    after 15 years, many of us have become very familiar with it. When it comes to
    developing for a variety of platforms, Eclipse is a fantastic tool but cannot
    compete with Android Studio when it comes to developing Android applications.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse毫无疑问是最好的开发工具之一，15年来，我们中的许多人对它非常熟悉。在开发各种平台时，Eclipse是一个很棒的工具，但在开发Android应用程序时无法与Android
    Studio竞争。
- en: 'If you are migrating from Eclipse, you will more than likely have projects
    you have been working on that you wish to import into Studio. The following steps
    demonstrate how this is done:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您从Eclipse迁移，您很可能有一些项目希望导入到Studio中。以下步骤演示了如何完成此操作：
- en: First ensure that your Eclipse ADT root directory contains both the `src` and
    `res` directories and the `AndroidManifest.xml` file.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先确保您的Eclipse ADT根目录包含`src`和`res`目录以及`AndroidManifest.xml`文件。
- en: Make a note of any Eclipse third-party plugins you have used as you will need
    to install equivalents into Studio.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下您使用过的Eclipse第三方插件，因为您需要在Studio中安装相应的插件。
- en: Open Android Studio and select Import Project from the welcome screen or from
    File | New | Import Project.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Android Studio并从欢迎屏幕或文件|新建|导入项目中选择导入项目。
- en: Select the folder that contains the manifest and prepare a destination folder,
    then follow the prompts to complete the import.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择包含清单的文件夹并准备一个目标文件夹，然后按照提示完成导入。
- en: The import process makes a complete copy of the project, leaving the original
    untouched, meaning it can still be worked on in Eclipse if you wish. Unfortunately,
    it is not possible to import third-party plugins but a large and growing number
    of plugins are available for Studio, and it is more than likely that you will
    be able to find equivalents. These can be browsed from File | Settings | Plugins.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 导入过程会完整复制项目，原始项目不受影响，这意味着如果您愿意，仍然可以在Eclipse中进行工作。不幸的是，无法导入第三方插件，但Studio有大量不断增长的插件可用，很可能您能找到相应的插件。这些可以从文件|设置|插件中浏览。
- en: If you have several Eclipse projects in the same workspace, then you should
    import one as a project and the rest as modules.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在同一个工作空间中有几个Eclipse项目，那么您应该将一个项目导入为项目，其余的导入为模块。
- en: We will look again at this process when we come to project configuration, but
    otherwise, from here on in, we will be assuming that all projects are begun in
    Android Studio.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们进行项目配置时，我们将再次查看这个过程，但除此之外，从现在开始，我们将假设所有项目都是在Android Studio中开始的。
- en: Summary
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter has served as a brief but complete introduction to Android Studio
    for those readers who are unfamiliar with it. We explored how the workspace is
    structured and the various flavors of editor available to us. This exploration
    led us to create a Material Design theme, use tool windows to perform a variety
    of useful tasks, as well as apply Instant Run to speed up the otherwise time-consuming
    build process.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 本章对于那些不熟悉Android Studio的读者来说，作为一个简短但完整的介绍。我们探讨了工作空间的结构以及我们可以使用的各种编辑器。这次探索使我们创建了一个Material
    Design主题，使用工具窗口执行各种有用的任务，并应用了“即时运行”来加快原本耗时的构建过程。
- en: The chapter concluded with a quick look at virtual devices and how we can import
    our projects from other IDEs. With this introduction complete, the following chapters
    will delve into the layout editor itself, as we see how to design application
    interfaces that work across the widest number of form factors.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本章以快速查看虚拟设备以及如何从其他IDE导入项目结束。有了这个介绍，接下来的章节将深入探讨布局编辑器本身，我们将看到如何设计适用于最广泛形态的应用界面。
