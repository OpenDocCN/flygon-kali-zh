["```cs\n<asp:Button ID=\"Button1\" runat=\"server\" Text=\"Join Classes\" />\n```", "```cs\nusing System.Linq;\nusing System.Collections.Generic;\n```", "```cs\npublic class Person\n```", "```cs\npublic string Name { get; set; }\n```", "```cs\npublic class Car\n```", "```cs\npublic Person Owner { get; set; }\n```", "```cs\npublic string Maker { get; set; }\n```", "```cs\nPerson per1 = new Person() { Name = \"Mark Owens\" };\n```", "```cs\nPerson per2 = new Person() { Name = \"Jenny Smith\" };\n```", "```cs\nPerson per3 = new Person() { Name = \"John Jenkins\" };\n```", "```cs\nCar car1 = new Car() { Owner = per1, Maker = \"Honda\" };\n```", "```cs\nCar car2 = new Car() { Owner = per2, Maker = \"Honda\" };\n```", "```cs\nCar car3 = new Car() { Owner = per1, Maker = \"Toyota\" };\n```", "```cs\nCar car4 = new Car() { Owner = per2, Maker = \"Tesla\" }; \n```", "```cs\nList<Person> people = new List<Person> { per1, per2, per3 };\n```", "```cs\nList<Car> cars = new List<Car> { car1, car2, car3, car4 };\n```", "```cs\nvar carsWithOwners = from person in people\n```", "```cs\njoin car in cars on person equals car.Owner\n```", "```cs\nselect new{ OwnerName = person.Name, CarMake = car.Maker };\n```", "```cs\nforeach(var ownedCar in carsWithOwners)\n```", "```cs\nsampLabel.Text += $\"<br>Owner={ownedCar.OwnerName} Car Make={ownedCar.CarMake}\";\n```", "```cs\n//using is a directive\n//System is a name space\n//name space is a collection of features that our needs to run\nusing System;\nusing System.Linq;\nusing System.Collections.Generic;\n//public means accessible anywhere\n//partial means this class is split over multiple files\n//class is a keyword and think of it as the outermost level of grouping\n//:System.Web.UI.Page means our page inherits the features of a Page\npublic class Person\n{\n    //define Person class\n    public string Name { get; set; }\n}\npublic class Car\n{\n    //define Car class, using field of type Person\n    public Person Owner { get; set; }\n    public string Maker { get; set; }\n}\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        //make three new people\n        Person per1 = new Person() { Name = \"Mark Owens\" };\n        Person per2 = new Person() { Name = \"Jenny Smith\" };\n        Person per3 = new Person() { Name = \"John Jenkins\" };\n        //make four new cars\n        Car car1 = new Car() { Owner = per1, Maker = \"Honda\" };\n        Car car2 = new Car() { Owner = per2, Maker = \"Honda\" };\n        Car car3 = new Car() { Owner = per1, Maker = \"Toyota\" };\n        Car car4 = new Car() { Owner = per2, Maker = \"Tesla\" };\n        //make lists of people and cars\n        List<Person> people = new List<Person> { per1, per2, per3 };\n        List<Car> cars = new List<Car> { car1, car2, car3, car4 };\n        //use linq to write a query that joins the two lists by car Owner\n        //here, the type of var is an enumerable list of anonymous \n        //data types\n        var carsWithOwners = from person in people join car in cars on person equals car.Owner\n        select new { OwnerName = person.Name, CarMake = car.Maker };\n        //foreach loops iterates over carsWithOwners\n        foreach(var ownedCar in carsWithOwners)\n        {\n            sampLabel.Text += $\"<br>Owner={ownedCar.OwnerName} Car Make= {ownedCar.CarMake}\";\n        }\n    }\n}\n```"]