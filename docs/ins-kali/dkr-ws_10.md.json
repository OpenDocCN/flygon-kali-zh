["```\n    # Linux\n    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n    # MacOS\n    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 \n    chmod +x minikube \n    sudo mv minikube /usr/local/bin\n    ```", "```\n    minikube start\n    ```", "```\n    minikube ssh\n    ```", "```\n    docker ps --filter \u201ename=kube-apiserver\" --filter \u201ename=etcd\" --filter \u201ename=kube-scheduler\" --filter \u201ename=kube-controller-manager\" | grep -v \u201epause\"\n    ```", "```\n    docker ps --filter \"name=kube-proxy\"  | grep -v \"pause\"\n    ```", "```\n    pgrep -l kubelet\n    ```", "```\n    2554 kubelet\n    ```", "```\n    exit\n    ```", "```\n    logout\n    ```", "```\n    # Linux\n    curl -LO https://storage.googleapis.com/kubernetes-release/release/'curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt'/bin/linux/amd64/kubectl\n    # MacOS\n    curl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl\"\n    chmod +x kubectl \n    sudo mv kubectl /usr/local/bin\n    ```", "```\n    kubectl config use-context minikube\n    ```", "```\n    Switched to context \"minikube\".\n    ```", "```\n    kubectl version --short\n    ```", "```\n    Client Version: v1.17.2\n    Server Version: v1.17.0\n    ```", "```\n    kubectl cluster-info\n    ```", "```\n    Kubernetes master is running at https://192.168.64.5:8443\n    KubeDNS is running at https://192.168.64.5:8445/api/v1/\n    namespaces/kube-system/Services/kube-dns:dns/proxy\n    To further debug and diagnose cluster problems, use \n    'kubectl cluster-info dump'.\n    ```", "```\n    kubectl get nodes\n    ```", "```\n    NAME        STATUS        ROLES        AGE        VERSION\n    Minikube    Ready         master       41h        v1.17.0\n    ```", "```\n    kubectl api-resources --output=\"name\"\n    ```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: server\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: main\n\u00a0\u00a0\u00a0\u00a0image: nginx\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n\u00a0\u00a0name: server\nspec:\n\u00a0\u00a0replicas: 10\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: server\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: server\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: main\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 80 \n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n\u00a0\u00a0name: database\nspec:\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0serviceName: mysql\n\u00a0\u00a0replicas: 1\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_ROOT_PASSWORD\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"root\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 3306\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: data\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /var/lib/mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subPath: mysql\n\u00a0\u00a0volumeClaimTemplates:\n\u00a0\u00a0- metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: data\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes: [\"ReadWriteOnce\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 2Gi\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n\u00a0\u00a0name: my-db\nspec:\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0- protocol: TCP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 3306\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 3306\n```", "```\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n\u00a0\u00a0name: my-db\nspec:\n\u00a0\u00a0rules:\n\u00a0\u00a0- host: my-db.docker-workshop.io\n\u00a0\u00a0\u00a0\u00a0http:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0paths:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- path: /\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0backend:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0serviceName: my-db\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0servicePort: 3306\n```", "```\napiVersion: Autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n\u00a0\u00a0name: server-scaler\nspec:\n\u00a0\u00a0scaleTargetRef:\n\u00a0\u00a0\u00a0\u00a0apiVersion: apps/v1\n\u00a0\u00a0\u00a0\u00a0kind: Deployment\n\u00a0\u00a0\u00a0\u00a0name: server\n\u00a0\u00a0minReplicas: 1\n\u00a0\u00a0maxReplicas: 10\n\u00a0\u00a0targetCPUUtilizationPercentage: 50\n```", "```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n\u00a0\u00a0namespace: critical-project\n\u00a0\u00a0name: Pod-reader\nrules:\n\u00a0\u00a0- apiGroups: [\"\"]\n\u00a0\u00a0\u00a0\u00a0resources: [\"Pods\"]\n\u00a0\u00a0\u00a0\u00a0verbs: [\"get\", \"watch\", \"list\"]\n```", "```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n\u00a0\u00a0name: read-Pods\n\u00a0\u00a0namespace: critical-project\nsubjects:\n\u00a0\u00a0- kind: User\n\u00a0\u00a0\u00a0\u00a0name: new-intern\nroleRef:\n\u00a0\u00a0kind: Role\n\u00a0\u00a0name: Pod-reader\n\u00a0\u00a0apiGroup: rbac.authorization.k8s.io\n```", "```\n    apiVersion: apps/v1\n    kind: StatefulSet\n    metadata:\n    \u00a0\u00a0name: database\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0matchLabels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n    \u00a0\u00a0serviceName: mysql\n    \u00a0\u00a0replicas: 1\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_ROOT_PASSWORD\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"root\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 3306\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: data\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /var/lib/mysql\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subPath: mysql\n    \u00a0\u00a0volumeClaimTemplates:\n    \u00a0\u00a0- metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: data\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes: [\"ReadWriteOnce\"]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 2Gi\n    ```", "```\n    kubectl apply -f database.yaml\n    ```", "```\n    StatefulSet.apps/database created\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n    \u00a0\u00a0name: database-service\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0app: mysql\n    \u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0- protocol: TCP\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 3306\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 3306\n    ```", "```\n    kubectl apply -f database-service.yaml\n    ```", "```\n    Service/database-service created\n    ```", "```\n    apiVersion: apps/v1 \n    kind: Deployment\n    metadata:\n    \u00a0\u00a0name: wordpress\n    \u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0app: wordpress\n    spec:\n    \u00a0\u00a0replicas: 3\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0matchLabels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: wordpress\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: wordpress\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- image: wordpress:4.8-apache\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: wordpress\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: WORDPRESS_DB_HOST\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: database-Service\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: WORDPRESS_DB_PASSWORD\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: root\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 80\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: wordpress\n    ```", "```\n    kubectl apply -f wordpress.yaml\n    ```", "```\n    Deployment.apps/wordpress created\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n    \u00a0\u00a0name: wordpress-service\n    spec:\n    \u00a0\u00a0type: LoadBalancer\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0app: wordpress\n    \u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0- protocol: TCP\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 80\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 80\n    ```", "```\n    kubectl apply -f wordpress-service.yaml\n    ```", "```\n    Service/wordpress-service created\n    ```", "```\n    kubectl get pods\n    ```", "```\n    minikube service wordpress-service --url\n    ```", "```\n    http://192.168.64.5:32765\n    ```", "```\n    curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n    ```", "```\n    helm repo add stable https://kubernetes-charts.storage.googleapis.com/\n    ```", "```\n    \"stable\" has been added to your repositories\n    ```", "```\n    helm search repo stable\n    ```", "```\n    helm install database stable/mysql\n    ```", "```\n    helm ls\n    ```", "```\n    kubectl get all -l release=database\n    ```"]