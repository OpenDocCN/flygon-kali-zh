["```\n> aws ecr list-repositories\n{\n    \"repositories\": [\n        {\n            \"repositoryArn\": \"arn:aws:ecr:us-east-1:385605022855:repository/docker-in-aws/todobackend\",\n            \"registryId\": \"385605022855\",\n            \"repositoryName\": \"docker-in-aws/todobackend\",\n            \"repositoryUri\": \"385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend\",\n            \"createdAt\": 1517692382.0\n        }\n    ]\n}\n> aws ecr delete-repository --repository-name docker-in-aws/todobackend\n{\n    \"repository\": {\n        \"repositoryArn\": \"arn:aws:ecr:us-east-1:385605022855:repository/docker-in-aws/todobackend\",\n        \"registryId\": \"385605022855\",\n        \"repositoryName\": \"docker-in-aws/todobackend\",\n        \"repositoryUri\": \"385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend\",\n        \"createdAt\": 1517692382.0\n    }\n}\n```", "```\n> aws ecr create-repository --repository-name docker-in-aws/todobackend\n{\n    \"repository\": {\n        \"repositoryArn\": \"arn:aws:ecr:us-east-1:385605022855:repository/docker-in-aws/todobackend\",\n        \"registryId\": \"385605022855\",\n        \"repositoryName\": \"docker-in-aws/todobackend\",\n        \"repositoryUri\": \"385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend\",\n        \"createdAt\": 1517693074.0\n    }\n}\n```", "```\n> mkdir todobackend-aws\n> touch todobackend-aws/ecr.yml > cd todobackend-aws\n> git init Initialized empty Git repository in /Users/jmenga/Source/docker-in-aws/todobackend-aws/.git/\n> git remote add origin https://github.com/jmenga/todobackend-aws.git\n> tree .\n.\n\u2514\u2500\u2500 ecr.yml\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\n\nDescription: ECR Repositories\n\nResources:\n  TodobackendRepository:\n    Type: AWS::ECR::Repository\n    Properties:\n      RepositoryName: docker-in-aws/todobackend\n```", "```\n> aws cloudformation deploy --template-file ecr.yml --stack-name ecr-repositories\nWaiting for changeset to be created..\nWaiting for stack create/update to complete\nSuccessfully created/updated stack - ecr-repositories\n```", "```\n> aws ecr get-login --no-include-email\ndocker login -u AWS -p eyJwYXl2ovSUVQUkJkbGJ5cjQ1YXJkcnNLV29ubVV6TTIxNTk3N1RYNklKdllvanZ1SFJaeUNBYk84NTJ2V2RaVzJUYlk9Iiw\nidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTE4MTIyNTI5fQ== https://385605022855.dkr.ecr.us-east-1.amazonaws.com\n```", "```\n> $(aws ecr get-login --no-include-email)\nLogin Succeeded\n```", "```\n> cd ../todobackend\n> docker build -t 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend .\nSending build context to Docker daemon 129.5kB\nStep 1/25 : FROM alpine AS build\n ---> 3fd9065eaf02\nStep 2/25 : LABEL application=todobackend\n ---> Using cache\n ---> f955808a07fd\n...\n...\n...\nStep 25/25 : USER app\n ---> Running in 4cf3fcab97c9\nRemoving intermediate container 4cf3fcab97c9\n---> 2b2d8d17367c\nSuccessfully built 2b2d8d17367c\nSuccessfully tagged 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:latest\n> docker images\nREPOSITORY                                                             TAG    IMAGE ID     SIZE \n385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend latest 2b2d8d17367c 99.4MB\n```", "```\n> docker push 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend\nThe push refers to repository [385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend]\n1cdf73b07ed7: Pushed\n0dfffc4aa16e: Pushed\nbaaced0ec8f8: Pushed\ne3b27097ac3f: Pushed\n3a29354c4bcc: Pushed\na031167f960b: Pushed\ncd7100a72410: Pushed\nlatest: digest: sha256:322c8b378dd90b3a1a6dc8553baf03b4eb13ebafcc926d9d87c010f08e0339fa size: 1787\n```", "```\nversion: '2.4'\n\nservices:\n  web:\n    image: nginx\n```", "```\nversion: '2.4'\n\nvolumes:\n  public:\n    driver: local\n\nservices:\n  test:\n    build:\n      context: .\n      dockerfile: Dockerfile\n      target: test\n  release:\n image: 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:latest\n    build:\n      context: .\n      dockerfile: Dockerfile\n    environment:\n      DJANGO_SETTINGS_MODULE: todobackend.settings_release\n      MYSQL_HOST: db\n      MYSQL_USER: todo\n      MYSQL_PASSWORD: password\n  app:\n    image: 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:${APP_VERSION}\n    extends:\n  ...\n  ...\n```", "```\n.PHONY: test release clean version\n\nexport APP_VERSION ?= $(shell git rev-parse --short HEAD)\n\nversion:\n  @ echo '{\"Version\": \"$(APP_VERSION)\"}'\n```", "```\n> docker rmi 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend\nUntagged: 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:latest\nUntagged: 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend@sha256:322c8b378dd90b3a1a6dc8553baf03b4eb13ebafcc926d9d87c010f08e0339fa\nDeleted: sha256:2b2d8d17367c32993b0aa68f407e89bf4a3496a1da9aeb7c00a8e49f89bf5134\nDeleted: sha256:523126379df325e1bcdccdf633aa10bc45e43bdb5ce4412aec282e98dbe076fb\nDeleted: sha256:54521ab8917e466fbf9e12a5e15ac5e8715da5332f3655e8cc51f5ad3987a034\nDeleted: sha256:03d95618180182e7ae08c16b4687a7d191f3f56d909b868db9e889f0653add46\nDeleted: sha256:eb56d3747a17d5b7d738c879412e39ac2739403bbf992267385f86fce2f5ed0d\nDeleted: sha256:9908bfa1f773905e0540d70e65d6a0991fa1f89a5729fa83e92c2a8b45f7bd29\nDeleted: sha256:d9268f192cb01d0e05a1f78ad6c41bc702b11559d547c0865b4293908d99a311\nDeleted: sha256:c6e4f60120cdf713253b24bba97a0c2a80d41a0126eb18f4ea5269034dbdc7e1\nDeleted: sha256:0b780adf8501c8a0dbf33f49425385506885f9e8d4295f9bc63c3f895faed6d1\n```", "```\n> docker-compose build release WARNING: The APP_VERSION variable is not set. Defaulting to a blank string.\nBuilding release\nStep 1/25 : FROM alpine AS build\n ---> 3fd9065eaf02\nStep 2/25 : LABEL application=todobackend\n ---> Using cache\n ---> f955808a07fd\n...\n...\nStep 25/25 : USER app\n ---> Using cache\n ---> f507b981227f\n\nSuccessfully built f507b981227f\nSuccessfully tagged 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:latest\n> docker images\n```", "```\nREPOSITORY                                                               TAG                 IMAGE ID            CREATED             SIZE\n385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend   latest              f507b981227f        4 days ago          99.4MB\n```", "```\n> docker-compose push release\nPushing release (385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:latest)...\nThe push refers to repository [385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend]\n9ae8d6169643: Layer already exists\ncdbc5d8be7d1: Pushed\n08a1fb32c580: Layer already exists\n2e3946df4029: Pushed\n3a29354c4bcc: Layer already exists\na031167f960b: Layer already exists\ncd7100a72410: Layer already exists\nlatest: digest: sha256:a1b029d347a2fabd3f58d177dcbbcd88066dc54ccdc15adad46c12ceac450378 size: 1787\n```", "```\n.PHONY: test release clean version login logout\n\nexport APP_VERSION ?= $(shell git rev-parse --short HEAD)\n\nversion:\n  @ echo '{\"Version\": \"$(APP_VERSION)\"}'\n\nlogin:\n $$(aws ecr get-login --no-include-email)\n\nlogout:\n docker logout https://385605022855.dkr.ecr.us-east-1.amazonaws.com test:\n    docker-compose build --pull release\n    docker-compose build\n    docker-compose run test\n\nrelease:\n    docker-compose up --abort-on-container-exit migrate\n    docker-compose run app python3 manage.py collectstatic --no-input\n    docker-compose up --abort-on-container-exit acceptance\n    @ echo App running at http://$$(docker-compose port app 8000 | sed s/0.0.0.0/localhost/g)\n\nclean:\n    docker-compose down -v\n    docker images -q -f dangling=true -f label=application=todobackend | xargs -I ARGS docker rmi -f ARGS\n```", "```\n> make logout docker logout https://385605022855.dkr.ecr.us-east-1.amazonaws.com\nRemoving login credentials for 385605022855.dkr.ecr.us-east-1.amazonaws.com\n > make login\n$(aws ecr get-login --no-include-email)\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nLogin Succeeded\n```", "```\n.PHONY: test release clean login logout publish\n\nexport APP_VERSION ?= $(shell git rev-parse --short HEAD)\n\nversion:\n  @ echo '{\"Version\": \"$(APP_VERSION)\"}'\n\n...\n...\n\nrelease:\n    docker-compose up --abort-on-container-exit migrate\n    docker-compose run app python3 manage.py collectstatic --no-input\n    docker-compose up --abort-on-container-exit acceptance\n    @ echo App running at http://$$(docker-compose port app 8000 | sed s/0.0.0.0/localhost/g)\n\npublish:\n docker-compose push release app\nclean:\n    docker-compose down -v\n    docker images -q -f dangling=true -f label=application=todobackend | xargs -I ARGS docker rmi -f ARGS\n```", "```\n> git commit -a -m \"Add publish tasks\"\n[master 97e4abf] Add publish tasks\n 2 files changed, 12 insertions(+), 1 deletion(-)\n\n> make login\n$(aws ecr get-login --no-include-email)\nLogin Succeeded\n\n> make test && make release\ndocker-compose build --pull release\nBuilding release\n...\n...\ntodobackend_db_1 is up-to-date\nCreating todobackend_app_1 ... done\nApp running at http://localhost:32774\n$ make publish\ndocker-compose push release app\nPushing release (385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:latest)...\nThe push refers to repository [385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend]\n53ca7006d9e4: Layer already exists\nca208f4ebc53: Layer already exists\n1702a4329d94: Layer already exists\ne2aca0d7f367: Layer already exists\nc3e0af9081a5: Layer already exists\n20ae2e176794: Layer already exists\ncd7100a72410: Layer already exists\nlatest: digest: sha256:d64e1771440208bde0cabe454f213d682a6ad31e38f14f9ad792fabc51008888 size: 1787\nPushing app (385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend:97e4abf)...\nThe push refers to repository [385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/todobackend]\n53ca7006d9e4: Layer already exists\nca208f4ebc53: Layer already exists\n1702a4329d94: Layer already exists\ne2aca0d7f367: Layer already exists\nc3e0af9081a5: Layer already exists\n20ae2e176794: Layer already exists\ncd7100a72410: Layer already exists\n97e4abf: digest: sha256:d64e1771440208bde0cabe454f213d682a6ad31e38f14f9ad792fabc51008888 size: 1787\n\n> make clean\ndocker-compose down -v\nStopping todobackend_app_1 ... done\nStopping todobackend_db_1 ... done\n...\n...\n\n> make logout\ndocker logout https://385605022855.dkr.ecr.us-east-1.amazonaws.com\nRemoving login credentials for 385605022855.dkr.ecr.us-east-1.amazonaws.com\n\n```", "```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecs:CreateCluster\",\n        \"ecs:DeregisterContainerInstance\",\n        \"ecs:DiscoverPollEndpoint\",\n        \"ecs:Poll\",\n        \"ecs:RegisterContainerInstance\",\n        \"ecs:StartTelemetrySession\",\n        \"ecs:Submit*\",\n        \"ecr:GetAuthorizationToken\",\n \"ecr:BatchCheckLayerAvailability\",\n \"ecr:GetDownloadUrlForLayer\",\n \"ecr:BatchGetImage\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```", "```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ecr:GetAuthorizationToken\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:BatchGetImage\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ecr:us-east-1:385605022855:repository/docker-in-aws/todobackend\"\n      ]\n    }\n  ]\n}\n```", "```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ecr:GetAuthorizationToken\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:BatchGetImage\",\n        \"ecr:PutImage\",         \n        \"ecr:InitiateLayerUpload\",         \n        \"ecr:UploadLayerPart\",         \n        \"ecr:CompleteLayerUpload\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ecr:us-east-1:385605022855:repository/docker-in-aws/todobackend\"\n      ]\n    }\n  ]\n}\n```", "```\n{\n    \"Version\": \"2008-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"RemoteAccountAccess\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::*<remote-account-id>*:root\"\n            },\n            \"Action\": [\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\"\n            ]\n        }\n    ]\n}\n```", "```\n> aws ecr set-repository-policy --repository-name docker-in-aws/todobackend --policy-text '{\n    \"Version\": \"2008-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"RemoteAccountAccess\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::*<remote-account-id>*:root\"\n            },\n            \"Action\": [\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\"\n            ]\n        }\n    ]\n}'\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\n\nDescription: ECR Repositories\n\nResources:\n  TodobackendRepository:\n    Type: AWS::ECR::Repository\n    Properties:\n      RepositoryName: docker-in-aws/todobackend\n      RepositoryPolicyText:\n Version: \"2008-10-17\"\n Statement:\n - Sid: RemoteAccountAccess\n Effect: Allow\n Principal:\n AWS: arn:aws:iam::*<remote-account-id>*:root\n Action:\n - ecr:GetDownloadUrlForLayer\n - ecr:BatchGetImage\n - ecr:BatchCheckLayerAvailability\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\n\nDescription: ECR Repositories\n\nResources:\n  TodobackendRepository:\n    Type: AWS::ECR::Repository\n    Properties:\n      RepositoryName: docker-in-aws/todobackend\n      RepositoryPolicyText:\n        Version: \"2008-10-17\"\n        Statement:\n          - Sid: RemoteAccountAccess\n            Effect: Allow\n            Principal:\n              AWS: arn:aws:iam::*<remote-account-id>*:root              Service: codebuild.amazonaws.com\n            Action:\n              - ecr:GetDownloadUrlForLayer\n              - ecr:BatchGetImage\n              - ecr:BatchCheckLayerAvailability\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\n\nDescription: ECR Repositories\n\nResources:\n  TodobackendRepository:\n    Type: AWS::ECR::Repository\n    Properties:\n      RepositoryName: docker-in-aws/todobackend\n      LifecyclePolicy:\n LifecyclePolicyText: |\n {\n \"rules\": [\n {\n \"rulePriority\": 10,\n \"description\": \"Untagged images\",\n \"selection\": {\n \"tagStatus\": \"untagged\",\n \"countType\": \"sinceImagePushed\",\n \"countUnit\": \"days\",\n \"countNumber\": 7\n },\n \"action\": {\n```", "```\n \"type\": \"expire\"\n }\n }\n ]\n }\n```"]