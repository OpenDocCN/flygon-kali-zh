["```\n    $ minikube start\n    ```", "```\n    $ kubectl create namespace chapter5\n    ```", "```\n$ helm create guestbook\n```", "```\n$ rm -rf guestbook/templates/tests\n```", "```\n    $ helm search hub redis\n    ```", "```\n    $ helm add repo bitnami https://charts.bitnami.com\n    ```", "```\n    $ helm search repo redis --versions\n    NAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\tCHART VERSION\tAPP VERSION\n    bitnami/redis\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t10.5.14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t5.0.8\n    bitnami/redis\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t10.5.13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t5.0.8\n    bitnami/redis\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t10.5.12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t5.0.8\n    bitnami/redis\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t10.5.11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \t5.0.8\n    ```", "```\ndependencies:\n\u00a0\u00a0- name: redis\n\u00a0\u00a0\u00a0\u00a0version: 10.5.x\n\u00a0\u00a0\u00a0\u00a0repository: https://charts.bitnami.com\n```", "```\napiVersion: v2\nname: guestbook\ndescription: A Helm chart for Kubernetes\ntype: application\nversion: 0.1.0\nappVersion: 1.16.0\ndependencies:\n\u00a0\u00a0- name: redis\n\u00a0\u00a0\u00a0\u00a0version: 10.5.x\n\u00a0\u00a0\u00a0\u00a0repository: https://charts.bitnami.com\n```", "```\n$ helm dependency update guestbook\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the 'bitnami' chart repository\nUpdate Complete.\u00a0\u00a0Happy Helming!\nSaving 1 charts\nDownloading redis from repo https://charts.bitnami.com\nDeleting outdated charts\n```", "```\n$ ls guestbook/charts\nredis-10.5.14.tgz\n```", "```\n$ helm show values charts/redis-10.5.14.tgz\n```", "```\n    ## String to fully override redis.fullname template\n    ##\n    # fullnameOverride:\n    ```", "```\n    name: {{ template 'redis.fullname' . }}-master\n    ```", "```\n    ## Use password authentication\n    usePassword: true\n    ```", "```\n    ## Redis config file\n    ## ref: https://redis.io/topics/config\n    ##\n    configmap: |-\n    \u00a0\u00a0# Enable AOF https://redis.io/topics/persistence#append-only-file\n    \u00a0\u00a0appendonly yes\n    \u00a0\u00a0# Disable RDB persistence, AOF persistence already enabled.\n    \u00a0\u00a0save ''\n    ```", "```\nredis:\n\u00a0\u00a0# Override the redis.fullname template\n\u00a0\u00a0fullnameOverride: redis\n\u00a0\u00a0# Enable unauthenticated access to Redis\n\u00a0\u00a0usePassword: false\n\u00a0\u00a0# Disable AOF persistence\n\u00a0\u00a0configmap: |-\n\u00a0\u00a0\u00a0\u00a0appendonly no\n```", "```\nimage: '{{ .Values.image.repository }}:{{ .Chart.AppVersion }}'\n```", "```\nimage:\n\u00a0\u00a0repository: nginx\n```", "```\nappVersion: 1.16.0\n```", "```\nimage: gcr.io/google-samples/gb-frontend:v4\n```", "```\ntype: {{ .Values.service.type }}\n```", "```\nservice:\n\u00a0\u00a0type: ClusterIP\n```", "```\n    image:\n    \u00a0\u00a0repository: gcr.io/google-samples/gb-frontend\n    \u00a0\u00a0pullPolicy: IfNotPresent\n    ```", "```\n    service:\n    \u00a0\u00a0type: NodePort\n    \u00a0\u00a0port: 80\n    ```", "```\n    appVersion: v4\n    ```", "```\n$ helm install my-guestbook guestbook -n chapter5\n```", "```\nNAME: my-guestbook\nLAST DEPLOYED: Sun Apr 26 09:57:52 2020\nNAMESPACE: chapter5\nSTATUS: deployed\nREVISION: 1\nNOTES:\n1\\. Get the application URL by running these commands:\n\u00a0\u00a0export NODE_PORT=$(kubectl get --namespace chapter5 -o jsonpath='{.spec.ports[0].nodePort}' services my-guestbook)\n\u00a0\u00a0export NODE_IP=$(kubectl get nodes --namespace chapter5 -o jsonpath='{.items[0].status.addresses[0].address}')\n\u00a0\u00a0echo http://$NODE_IP:$NODE_PORT\n```", "```\n$ kubectl get pods -n chapter5\n```", "```\n$ helm get notes my-guestbook -n chapter5\nNOTES:\n1\\. Get the application URL by running these commands:\n\u00a0\u00a0export NODE_PORT=$(kubectl get --namespace chapter5 -o jsonpath='{.spec.ports[0].nodePort}' services my-guestbook)\n\u00a0\u00a0export NODE_IP=$(kubectl get nodes --namespace chapter5 -o jsonpath='{.items[0].status.addresses[0].address}')\n\u00a0\u00a0echo http://$NODE_IP:$NODE_PORT\n```", "```\n$ helm uninstall my-guestbook -n chapter5\n```", "```\n$ kubectl delete pvc -l app=redis -n chapter5\n```", "```\n    $ mkdir guestbook/templates/backup\n    ```", "```\n    $ touch guestbook/templates/backup/persistentvolumeclaim.yaml\n    $ touch guestbook/templates/backup/job.yaml\n    ```", "```\n    $ mkdir guestbook/templates/restore\n    ```", "```\n    $ touch guestbook/templates/restore/job.yaml\n    ```", "```\n$ helm install my-guestbook guestbook -n chapter5\n```", "```\n$ helm upgrade my-guestbook guestbook -n chapter5\n```", "```\n$ kubectl get pvc -n chapter5\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 STATUS\nredis-data-redis-master-0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Bound\nredis-data-redis-master-0-backup-1\u00a0\u00a0 Bound\n```", "```\n$ helm rollback my-guestbook 1 -n chapter5\n```", "```\nservice:\n\u00a0\u00a0type: NodePort\n```", "```\n    type: {{ .Values.service.type }}\n    ```", "```\n$ helm upgrade my-guestbook . -n chapter5 --set service.type=LoadBalancer\n```", "```\nError: UPGRADE FAILED: template: guestbook/templates/service.yaml:12:6: executing 'guestbook/templates/service.yaml' at <fail 'value 'service.type' must be either 'ClusterIP' or 'NodePort''>: error calling fail: value 'service.type' must be either 'ClusterIP' or 'NodePort'\n```", "```\nimage:\n\u00a0\u00a0repository: gcr.io/google-samples/gb-frontend\n```", "```\n    image: '{{ .Values.image.repository }}:{{ .Chart.AppVersion }}'\n    ```", "```\n    $ helm upgrade my-guestbook . -n chapter5 --set image.repository=''\n    ```", "```\nError: UPGRADE FAILED: execution error at (guestbook/templates/deployment.yaml:28:21): value 'image.repository' is required\n```", "```\n    $ git clone $REPOSITORY_URL\n    ```", "```\nversion: 1.0.0\n```", "```\n$ helm package guestbook\n```", "```\n$ cp guestbook-1.0.0.tgz $GITHUB_CHART_REPO_CLONE\n```", "```\n$ helm repo index $GITHUB_CHART_REPO_CLONE\n```", "```\n$ git add --all\n$ git commit -m 'feat: adding the guestbook helm chart'\n$ git push origin master\n```", "```\n$ helm repo add learnhelm $GITHUB_PAGES_URL\n```", "```\n$ helm search repo guestbook\n```", "```\n$ kubectl delete namespace chapter5\n```"]