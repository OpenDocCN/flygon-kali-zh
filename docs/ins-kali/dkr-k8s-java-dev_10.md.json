["```\n$ python3 --version\n\n```", "```\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n```", "```\n$ sudo apt-get update\n\n$ sudo apt-get install python3.6\n\n```", "```\n$ brew install python3\n\n```", "```\n$ sudo apt-get install python3-pip\n\n```", "```\n$ curl -O https://bootstrap.pypa.io/get-pip.py\n\n```", "```\n$ python3 get-pip.py -user\n\n```", "```\n$ pip -V\n\nor \n\n$ pip --version\n\n```", "```\n$ pip3 install --user --upgrade awscli\n\n```", "```\nexport PATH=~/Library/Python/3.6/bin/:$PATH\n\n```", "```\n$ aws -version\n\n```", "```\n$ wget \\ https://github.com/kubernetes/kops/releases/download/1.6.1/kops-darwin-amd64 \n\n$ chmod +x kops-darwin-amd64\n\n$ mv kops-darwin-amd64 /usr/local/bin/kops\n\n```", "```\n$ wget \\ https://github.com/kubernetes/kops/releases/download/1.6.2/kops-linux-amd64\n\n$ chmod +x kops-linux-amd64\n\n$ mv kops-linux-amd64 /usr/local/bin/kops\n\n```", "```\n$ brew update && brew install kops\n\n```", "```\n$ aws iam create-group --group-name kops\n\n$ aws iam attach-group-policy --policy-arn $ arn:aws:iam::aws:policy/AmazonEC2FullAccess --group-name kops\n\n$ aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess --group-name kops\n\n$ aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonRoute53FullAccess --group-name kops\n\n$ aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/IAMFullAccess --group-name kops\n\n$ aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonVPCFullAccess --group-name kops\n\n```", "```\n$ aws iam create-user --user-name kops\n\n$ aws iam add-user-to-group --user-name kops --group-name kops\n\n```", "```\n$ aws iam list-users \n\n```", "```\n$ aws iam create-access-key --user-name kops\n\n```", "```\n$ aws configure \n\n```", "```\n$ export AWS_ACCESS_KEY_ID=<access key>\n\n$ export AWS_SECRET_ACCESS_KEY=<secret key>\n\n```", "```\n$ aws route53 list-hosted-zones | jq '.HostedZones[] \\ \n\n| select(.Name==\"mydomain.com.\") | .Id'\n\n```", "```\n$ aws route53 create-hosted-zone --name myservice.mydomain.com \\ \n\n--caller-reference $ID | jq .DelegationSet.NameServers\n\n```", "```\n$ aws route53 list-hosted-zones | jq '.HostedZones[] | \\ select(.Name==\" myservice.mydomain.com.\") | .Id'\n\n```", "```\n$ aws route53 get-hosted-zone --id <your-subdomain-zoneID> \\\n\n| jq .DelegationSet.NameServers\n\n```", "```\n{\n\n \"Changes\": [\n\n {\n\n \"Action\": \"CREATE\",\n\n \"ResourceRecordSet\": {\n\n \"Name\": \"myservice.mydomain.com\",\n\n \"Type\": \"NS\",\n\n \"TTL\": 300,\n\n \"ResourceRecords\": [\n\n {\n\n \"Value\": \"ns-1.awsdns-1.com\"\n\n },\n\n {\n\n \"Value\": \"ns-2.awsdns-2.org\"\n\n },\n\n {\n\n \"Value\": \"ns-3.awsdns-3.com\"\n\n },\n\n {\n\n \"Value\": \"ns-4.awsdns-4.net\"\n\n }\n\n ]\n\n }\n\n }\n\n ]\n\n}\n\n```", "```\n$ aws route53 change-resource-record-sets \n\n--change-batch file://my-service-subdomain.json \\\n\n--hosted-zone-id <your-parent-zone-id>\n\n```", "```\n$ aws route53 create-hosted-zone \\\n\n--name myservice.mydomain.com \\\n\n--caller-reference $ID | jq .DelegationSet.NameServers\n\n```", "```\n$ aws ec2 describe-availability-zones --region eu-central-1\n\n```", "```\n$ aws s3api create-bucket \\\n\n--bucket my-cluster-store \\\n\n--region eu-central-1 \\\n\n--create-bucket-configuration LocationConstraint=eu-central-1\n\n```", "```\n$ export KOPS_STATE_STORE=s3://my-cluster-store\n\n```", "```\n$ export NAME=my-rest-cluster.k8s.local\n\n```", "```\n$ kops create cluster [options]\n\n```", "```\n$ kops create cluster --v=0 \\\n\n--cloud=aws --node-count 2 \\\n\n--master-size=t2.medium \\\n\n--master-zones=eu-central-1a \\\n\n--zones eu-central-1a,eu-central-1b  \\\n\n--name=${NAME} \\\n\n--node-size=t2.medium\n\n```", "```\n$ kops edit cluster my-rest-cluster.k8s.local\n\n```", "```\n$ kops update cluster ${NAME} \n\n```", "```\n$ kops update cluster ${NAME} --yes\n\n```", "```\n$ kops validate cluster\n\n```", "```\n$ list nodes: kubectl get nodes --show-labels\n\n```", "```\n $ kops \n\nrolling\n\n-\n\nupdate \n\ncluster\n\n \u2013\n\nyes \n\n```", "```\n$ kubectl create -f \\\n\nhttps://rawgit.com/kubernetes/dashboard/master/src/deploy\n\nkubernetes-dashboard.yaml\n\n```", "```\n$ kubectl proxy\n\n```", "```\n$ kops delete cluster -name=${NAME} --yes\n\n```"]