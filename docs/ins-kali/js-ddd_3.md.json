["```js\nvar each = _.each = _.forEach = function(obj, iterator, context) {\n  if (obj == null) return;\n  if (nativeForEach && obj.forEach === nativeForEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, length = obj.length; i < length; i++) {\n      if (iterator.call(context, obj[i], i, obj) === breaker)\n      return;\n    }\n  } else {\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n      return;\n    }\n  }\n};\n```", "```js\nFeature: Prisoner transfer to other dungeon\n  As a dungeon master\n  I want to make prisoner transfer an automated process\n  So no important steps get left out\n\n  Scenario: Notifying other dungeons of the transfer\n    Given I have a prisoner ready to transfer to another dungeon\n    When I initiate the transfer\n    Then the other dungeon should be notified\n```", "```js\nvar prisonerTransfer = require(\"../../lib/prisoner_transfer\")\nvar assert = require(\"assert\")\n\ndescribe(\"Prisoner transfer to other dungeons\", function () {\n  /*\n   * Prisoner transfers need to be an automated process. After\n   * initiation the transfer should take the necessary steps to\n   * complete, and prompt for any additional information if needed\n   */\n\n  it(\"notifies other dungeons of the transfer\", function (done) {\n    var prionser = getPrisonerForTransfer()\n    var dungeon = getDungenonToTransfer()\n    prisonerTransfer(prionser, dungeon, function (err) {\n      assert.ifError(err)\n      assert.equal(dungeon.inbox.length, 1)\n      done()\n    })\n  })\n\n  // Helpers\n  /* get a prisoner to transfer */\n  function getPrisonerForTransfer() { return {} }\n\n  /* get a dungeon to transfer to */\n  function getDungenonToTransfer() { return { inbox: [] } }\n})\n```", "```js\n**$ mocha --recursive test**\n\n```", "```js\n{\n  \"name\": \"dungeon_manager\",\n  ...\n  \"scripts\": {\n    \"test\": \"./node_modules/.bin/mocha --recursive test\"\n  }\n  ...\n}\n```", "```js\n**$ npm test**\n\n```", "```js\n{\n  \"name\": \"dungeon_manager\",\n  ...\n  \"scripts\": {\n    \"test\": \"./node_modules/.bin/mocha --recursive test\",\n    \"package\": \"npm install && npm test\"\n  }\n  ...\n}\n```", "```js\n**$ npm run package**\n\n```", "```js\n[appserver]\nuser deploy\nhost appserver-1.dungeon-1.orc\nrepo ssh://deploy@githost.dungeon-1.orc/dungeon_manager\npath /home/deploy/dungeon_manager\nref origin/master\npost-deploy npm run package && npm start\n```", "```js\napp.post(\"/prisoner_transfer\", function(req, res) {\n  var dungeon = Dungeon.findById(req.params.dungeonId)\n  var prisoner = Prisoner.findById(req.params.prisonerId)\n\n  prisonerTransfer(prisoner, dungeon, function(err) {\n    var message\n    if(err) {\n      res.statusCode = 400\n      message = { error: err.message }\n    } else {\n      res.statusCode = 201\n      message = { success: true }\n    }\n    res.end(JSON.stringify(message))\n  })\n})\n```"]