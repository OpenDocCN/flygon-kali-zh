- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The TypeScript language and compiler has been a huge success story since its
    release in late 2012\. It has quickly carved out a solid footprint in the JavaScript
    development community, and continues to go from strength to strength. Many large-scale
    JavaScript projects, including projects by Adobe, Mozilla, and Asana, have made
    the decision to switch their code base from JavaScript to TypeScript. Recently,
    the Microsoft and Google teams announced that Angular 2.0 will be developed with
    TypeScript, thereby merging the AtScript and TypeScript languages into one.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 自2012年底发布以来，TypeScript语言和编译器已经取得了巨大的成功。它迅速在JavaScript开发社区中站稳了脚跟，并不断壮大。包括Adobe、Mozilla和Asana在内的许多大型JavaScript项目已经决定将它们的代码库从JavaScript切换到TypeScript。最近，微软和谷歌团队宣布Angular
    2.0将使用TypeScript开发，从而将AtScript和TypeScript语言合并为一种语言。
- en: This large-scale industry adoption of TypeScript shows the value of the language,
    the flexibility of the compiler, and the productivity gains that can be realized
    with its rich development toolset. On top of this industry support, the ECMAScript
    6 standard is getting closer and closer to publication, and TypeScript provides
    a way to use features of this standard in our applications today.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这种大规模的行业采用TypeScript显示了该语言的价值、编译器的灵活性以及使用其丰富的开发工具集可以实现的生产力增益。除了行业支持外，ECMAScript
    6标准也越来越接近发布，TypeScript提供了一种在我们的应用程序中使用该标准特性的方法。
- en: Writing JavaScript single page applications in TypeScript has been made even
    more appealing with the large collection of declaration files that have been built
    by the TypeScript community. These declaration files seamlessly integrate a large
    range of existing JavaScript frameworks into the TypeScript development environment,
    bringing with it increased productivity, early error detection, and advanced IntelliSense
    features.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TypeScript社区构建的大量声明文件，使得使用TypeScript编写JavaScript单页面应用程序变得更加吸引人。这些声明文件无缝地将大量现有的JavaScript框架整合到TypeScript开发环境中，带来了增加的生产力、早期错误检测和高级的智能感知功能。
- en: This book is a guide for both experienced TypeScript developers, as well as
    those who are just beginning their TypeScript journey. With a focus on Test Driven
    Development, detailed information on integration with many popular JavaScript
    libraries, and an in-depth look at TypeScript's features, this book will help
    you with your exploration of the next step in JavaScript development.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在成为有经验的TypeScript开发人员以及刚开始学习TypeScript的人的指南。通过专注于测试驱动开发、与许多流行的JavaScript库集成的详细信息，以及深入研究TypeScript的特性，本书将帮助您探索JavaScript开发的下一步。
- en: What this book covers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](ch01.html "Chapter 1. TypeScript – Tools and Framework Options"),
    *TypeScript – Tools and Framework Options*, sets the scene for beginning TypeScript
    development, by firstly looking at the various benefits of using TypeScript, and
    then discussing how to set up a development environment.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，“TypeScript – 工具和框架选项”，为开始TypeScript开发铺平了道路，首先介绍了使用TypeScript的各种好处，然后讨论了如何设置开发环境。
- en: '[Chapter 2](ch02.html "Chapter 2. Types, Variables and Function Techniques"),
    *Types, Variables and Function Techniques*, introduces the reader to the TypeScript
    language, starting with basic types and type inferences, and then moving on to
    discusses variables and functions.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，“类型、变量和函数技术”，向读者介绍了TypeScript语言，从基本类型和类型推断开始，然后讨论了变量和函数。
- en: '[Chapter 3](ch03.html "Chapter 3. Interfaces, Classes and Generics"), *Interfaces,
    Classes and Generics*, builds on the work from the previous chapter, and introduces
    the object-oriented concepts of interfaces, classes, and inheritance. It then
    introduces the reader to the syntax and usage of generics within TypeScript.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“接口、类和泛型”，在前一章的基础上构建，并介绍了接口、类和继承的面向对象概念。然后介绍了TypeScript中泛型的语法和用法。
- en: '[Chapter 4](ch04.html "Chapter 4. Writing and Using Declaration Files"), *Writing
    and Using Declaration Files*, walks the reader through building a declaration
    file for an existing body of JavaScript code, and then lists some of the most
    common syntax used when writing declaration files. This syntax is designed to
    be a quick reference guide to declaration file syntax, or a cheat sheet.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“编写和使用声明文件”，引导读者逐步构建现有JavaScript代码的声明文件，然后列出了编写声明文件时使用的一些最常见的语法。这些语法旨在成为声明文件语法的快速参考指南或备忘单。
- en: '[Chapter 5](ch05.html "Chapter 5. Third Party Libraries"), *Third Party Libraries*,
    shows the reader how to use declaration files from the DefinitelyTyped repository
    within the development environment. It then moves on to show the reader how to
    write TypeScript that is compatible with three popular JavaScript frameworks—Backbone,
    Angular, and ExtJs.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“第三方库”，向读者展示了如何在开发环境中使用DefinitelyTyped存储库中的声明文件。然后，它继续向读者展示如何编写与三种流行的JavaScript框架—Backbone、Angular和ExtJs兼容的TypeScript。
- en: '[Chapter 6](ch06.html "Chapter 6. Test Driven Development"), *Test Driven Development*,
    starts with a discussion on what Test Driven Development is, and then guides the
    reader through the process of creating various types of unit tests using the Jasmine
    library, including data-driven and asynchronous tests. The chapter finishes with
    a discussion on integration testing, test reporting, and using continuous integration
    build servers.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“测试驱动开发”，从讨论什么是测试驱动开发开始，然后引导读者通过使用Jasmine库创建各种类型的单元测试，包括数据驱动和异步测试。本章最后讨论了集成测试、测试报告和使用持续集成构建服务器。
- en: '[Chapter 7](ch07.html "Chapter 7. Modularization"), *Modularization*, looks
    at the two types of module generation that the TypeScript compiler uses: CommonJS
    and AMD. This chapter shows the reader how to build a CommonJS module for use
    with Node, and then discusses building AMD modules with Require, Backbone, AMD
    plugins, and jQuery plugins.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章 模块化")，*模块化*，介绍了TypeScript编译器使用的两种模块生成类型：CommonJS和AMD。本章向读者展示了如何构建用于Node的CommonJS模块，然后讨论了使用Require、Backbone、AMD插件和jQuery插件构建AMD模块。'
- en: '[Chapter 8](ch08.html "Chapter 8. Object-oriented Programming with TypeScript"),
    *Object-oriented Programming with TypeScript*, discusses advanced object-oriented
    design patterns, including the Service Location Design Pattern, Dependency Injection,
    and the Domain Events Design Pattern. The reader is taken through the concepts
    and ideas of each pattern, and then shown how one might implement these patterns
    using TypeScript.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章 TypeScript面向对象编程"), *TypeScript面向对象编程*，讨论了高级面向对象设计模式，包括服务定位设计模式、依赖注入和领域事件设计模式。读者将了解每种模式的概念和思想，然后展示如何使用TypeScript实现这些模式。'
- en: '[Chapter 9](ch09.html "Chapter 9. Let''s Get Our Hands Dirty"), *Let''s Get
    Our Hands Dirty*, builds a single-page application using TypeScript and Marionette
    from the ground up. This chapter starts with a discussion on page layout and transition,
    using an HTML-only version of the application. It then moves on to discuss, build
    and test the underlying data models and Marionette views that will be used within
    the application. Finally, the State and Mediator Design Pattern is implemented
    to manage page transitions and graphical elements.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章 让我们动手吧")，*让我们动手吧*，从头开始使用TypeScript和Marionette构建单页面应用程序。本章首先讨论页面布局和转换，使用应用程序的仅HTML版本。然后，讨论、构建和测试将在应用程序中使用的基础数据模型和Marionette视图。最后，实现了状态和中介者设计模式来管理页面转换和图形元素。'
- en: What you need for this book
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书做些什么
- en: You will need the TypeScript compiler and an editor of some sort. The TypeScript
    compiler is available as a Node.js plugin or a Windows executable; therefore,
    it will run on any operating system. [Chapter 1](ch01.html "Chapter 1. TypeScript
    – Tools and Framework Options"), *TypeScript – Tools and Framework Options* describes
    the setup of a development environment.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要TypeScript编译器和某种编辑器。TypeScript编译器可作为Node.js插件或Windows可执行文件使用；因此，它可以在任何操作系统上运行。[第1章](ch01.html
    "第1章 TypeScript - 工具和框架选项")，*TypeScript - 工具和框架选项*描述了开发环境的设置。
- en: Who this book is for
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁准备的
- en: Whether you are a JavaScript developer wanting to learn TypeScript, or an experienced
    TypeScript developer wanting to take your skills to the next level, this book
    is for you. From basic to advanced language constructs, Test Driven Development,
    and object-oriented techniques, you will learn how to get the most out of the
    TypeScript language and compiler. This book will show you how to incorporate strong
    typing, object-orientation, and design best practices into your JavaScript applications.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是想学习TypeScript的JavaScript开发人员，还是想将自己的技能提升到更高水平的有经验的TypeScript开发人员，这本书都适合您。从基本到高级语言构造、测试驱动开发和面向对象技术，您将学会如何充分利用TypeScript语言和编译器。本书将向您展示如何将强类型、面向对象和设计最佳实践融入到您的JavaScript应用程序中。
- en: Conventions
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是一些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "This
    `GruntFile.js` is necessary to setup all of the Grunt tasks."'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下："这个`GruntFile.js`是设置所有Grunt任务所必需的。"
- en: 'A block of code is set as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'New terms and important words are shown in bold. Words that you see on the
    screen, for example, in menus or dialog boxes, appear in the text like this: "After
    selecting a **Name** and browsing for a directory, clicking on **OK** will generate
    a TypeScript project."'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要单词以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会在文本中显示为："选择**名称**并浏览目录后，单击**确定**将生成一个TypeScript项目。"
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的框中。
- en: Tip
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会出现在这样。
