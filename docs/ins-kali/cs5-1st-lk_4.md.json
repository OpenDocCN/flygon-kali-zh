["```cs\nnamespace ViewerForFlickr.DataModel\n{\n    public static class Constants\n    {\n        public static readonly string ApiKey = \"<The API Key>\";\n        public static readonly string ApiSecret = \"<The API Secret>\";\n    }\n}\n```", "```cs\ninternal static class WebHelper\n{\n    public static async Task<T> Get<T>(string url)\n    {\n        HttpClient client = new HttpClient();\n        Stream stream = await client.GetStreamAsync(url);\n\n        Var  serializer = new DataContractJsonSerializer(typeof(T));\n        return (T)serializer.ReadObject(stream);\n    }\n}\n```", "```cs\n{\n    \"photos\": {\n        \"page\": 1,\n        \"pages\": 5,\n        \"perpage\": 100,\n        \"total\": \"500\",\n        \"photo\": [\n            {\n                \"id\": \"7991307958\",\n                \"owner\": \"8310501@N07\",\n                \"secret\": \"921afedb45\",\n                \"server\": \"8295\",\n                \"farm\": 9,\n                \"title\": \"Spreading one's wings [explored]\",\n                \"ispublic\": 1,\n                \"isfriend\": 0,\n                \"isfamily\": 0\n            }\n        ]\n    },\n    \"stat\": \"ok\"\n}\n```", "```cs\n[DataContract]\npublic class ApiPhoto\n{\n    [DataMember(Name=\"id\")]\n    public string Id { get; set; }\n    [DataMember(Name=\"owner\")]\n    public string Owner { get; set; }\n    [DataMember(Name=\"secret\")]\n    public string Secret { get; set; }\n    [DataMember(Name=\"server\")]\n    public string Server { get; set; }\n    [DataMember(Name=\"farm\")]\n    public string Farm { get; set; }\n    [DataMember(Name=\"title\")]\n    public string Title { get; set; }\n\n    public string CreateUrl()\n    {\n        string formatString = \"http://farm{0}.staticflickr.com/{1}/{2}_{3}_{4}.jpg\";\n\n        string size = \"m\";\n\n        return string.Format(formatString,\n            this.Farm,\n            this.Server,\n            this.Id,\n            this.Secret,\n            size);\n    }\n}\n```", "```cs\n[DataContract]\npublic class ApiPhotos\n{\n    [DataMember(Name=\"page\")]\n    public int Page { get; set; }\n    [DataMember(Name=\"pages\")]\n    public int Pages { get; set; }\n    [DataMember(Name=\"perpage\")]\n    public int PerPage { get; set; }\n    [DataMember(Name=\"total\")]\n    public int Total { get; set; }\n    [DataMember(Name=\"photo\")]\n    public ApiPhoto[] Photo { get; set; }\n}\n```", "```cs\n[DataContract]\npublic class ApiResult\n{\n    [DataMember(Name=\"photos\")]\n    public ApiPhotos Photos { get; set; }\n}\n```", "```cs\npublic static class Flickr\n{\n    private static async Task<ApiPhotos> LoadInteresting()\n    {\n        string url = \"http://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key={0}&format=json&nojsoncallback=1\";\n        url = string.Format(url, Constants.ApiKey);\n\n        ApiResult result = await WebHelper.Get<ApiResult>(url);\n\n        return result.Photos;\n    }\n}\n```", "```cs\n<DataTemplate x:Key=\"Standard250x250ItemTemplate\">\n    <Grid HorizontalAlignment=\"Left\" Width=\"250\" Height=\"250\">\n        <Border Background=\"{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}\">\n            <Image Source=\"{Binding Image}\" Stretch=\"UniformToFill\" AutomationProperties.Name=\"{Binding Title}\"/>\n        </Border>\n        <StackPanel VerticalAlignment=\"Bottom\" Background=\"{StaticResource ListViewItemOverlayBackgroundThemeBrush}\">\n            <TextBlock Text=\"{Binding Title}\" Foreground=\"{StaticResource ListViewItemOverlayForegroundThemeBrush}\" Style=\"{StaticResource TitleTextStyle}\" Height=\"60\" Margin=\"15,0,15,0\"/>\n            <TextBlock Text=\"{Binding Subtitle}\" Foreground=\"{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}\" Style=\"{StaticResource CaptionTextStyle}\" TextWrapping=\"NoWrap\" Margin=\"15,0,15,10\"/>\n        </StackPanel>\n    </Grid>\n</DataTemplate>\n```", "```cs\npublic class FlickrImage\n{\n    public Uri Image { get; set; }\n    public string Title { get; set; }\n}\n```", "```cs\npublic static readonly ObservableCollection<FlickrImage> Images = new ObservableCollection<FlickrImage>();\n\npublic static async void Load()\n{\n    var result = await LoadInteresting();\n\n    var images = from photo in result.Photo\n                    select new FlickrImage\n                    {\n                        Image = new Uri(photo.CreateUrl()),\n                        Title = photo.Title\n                    };\n\n    Images.Clear();\n    foreach (var image in images)\n    {\n        Images.Add(image);\n    }\n}\n```", "```cs\n<GridView\n    Grid.Row=\"2\"\n    ItemsSource=\"{Binding Images}\"\n    ItemTemplate=\"{StaticResource Standard250x250ItemTemplate}\"/>\n```", "```cs\nFlickr.Load();\nthis.DataContext = new { Images = Flickr.Images };\n```"]