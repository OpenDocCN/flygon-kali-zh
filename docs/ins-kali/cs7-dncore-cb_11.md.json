["```cs\nif (env.IsDevelopment())\n{\n   app.UseDeveloperExceptionPage();\n}\n\n```", "```cs\n        public void Configure(IApplicationBuilder app, \n          IHostingEnvironment env, \n          ILoggerFactory loggerFactory)\n        {\n          loggerFactory.AddConsole();\n\n          if (env.IsDevelopment())\n          {\n            app.UseDeveloperExceptionPage();\n          }\n\n         app.Run(async (context) =>\n         {\n           await context.Response.WriteAsync($\"The date is \n             {DateTime.Now.ToString(\"dd MMM yyyy\")}\");\n         });\n       }\n\n```", "```cs\n        if (env.IsDevelopment())\n        {\n          app.UseDeveloperExceptionPage();\n        }\n\n        app.UseWelcomePage();\n\n        app.Run(async (context) =>\n        {\n          await context.Response.WriteAsync($\"The date is \n            {DateTime.Now.ToString(\"dd MMM yyyy\")}\"); \n        });\n\n```", "```cs\n        app.UseWelcomePage(\"/hello\");\n\n```", "```cs\n        app.Run(async (context) =>\n        {\n          throw new Exception(\"Error in app.Run()\");\n          await context.Response.WriteAsync($\"The date is \n            {DateTime.Now.ToString(\"dd MMM yyyy\")}\"); \n        });\n\n```", "```cs\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\" />\n            <title>Friendly Error</title>\n          </head>\n          <body>\n            Something went wrong. Support has been notified.\n          </body>\n        </html>\n\n```", "```cs\n        env.EnvironmentName = EnvironmentName.Production;\n        if (env.IsDevelopment())\n        {\n          app.UseDeveloperExceptionPage();\n        }\n        else\n        {\n          DefaultFilesOptions options = new DefaultFilesOptions();\n          options.DefaultFileNames.Add(\"friendlyError.html\");\n          app.UseDefaultFiles(options);\n\n          app.UseExceptionHandler(\"/friendlyError\"); \n        }\n\n        app.UseStaticFiles();\n\n```", "```cs\nloggerFactory.AddConsole();\n\nif (env.IsDevelopment())\n{\n   app.UseDeveloperExceptionPage();\n}\nelse\n{\n   DefaultFilesOptions options = new DefaultFilesOptions();\n   options.DefaultFileNames.Add(\"friendlyError.html\");\n   app.UseDefaultFiles(options);\n\n   app.UseExceptionHandler(\"/friendlyError\"); \n}\n\napp.UseStaticFiles();\napp.UseMvc();\n\n```", "```cs\npublic void ConfigureServices(IServiceCollection services)\n{\n   services.AddMvc();\n}\n\n```", "```cs\n        public class StudentController\n        {\n          public string Find()\n          {\n            return \"Found students\";\n          }\n        }\n\n```", "```cs\n        private void FindController(IRouteBuilder route)\n        {\n\n        }\n\n```", "```cs\n        private void FindController(IRouteBuilder route)\n        {\n          route.MapRoute(\"Default\", \"{controller}/{action}\");\n        }\n\n```", "```cs\n        public void ConfigureServices(IServiceCollection services)\n        {\n          services.AddMvc();\n        }\n\n        public void Configure(IApplicationBuilder app, \n          IHostingEnvironment env, ILoggerFactory loggerFactory)\n        {\n          loggerFactory.AddConsole();\n\n          if (env.IsDevelopment())\n         {\n           app.UseDeveloperExceptionPage();\n         }\n         else\n         {\n           DefaultFilesOptions options = new DefaultFilesOptions();\n           options.DefaultFileNames.Add(\"friendlyError.html\");\n           app.UseDefaultFiles(options);\n\n           app.UseExceptionHandler(\"/friendlyError\"); \n         }\n\n         app.UseStaticFiles();\n         app.UseMvc(FindController);\n       }\n\n       private void FindController(IRouteBuilder route)\n       {\n         route.MapRoute(\"Default\", \"{controller}/{action}\");\n       }\n\n```", "```cs\n        public class ErrorController\n        {\n          public string Support()\n          {\n            return \"Content not found. Contact Support\";\n          }\n        }\n\n```", "```cs\n        route.MapRoute(\"Default\", \"{controller=Error}/{action=Support}\");\n\n```", "```cs\n        [Route(\"Error\")]\n        public class ErrorController\n        {\n          [Route(\"Support\")]\n          public string Support()\n          {\n            return \"Content not found. Contact Support\";\n          }\n        }\n\n```", "```cs\n[Route(\"Student\")]\npublic class StudentController : Controller\n{\n   [Route(\"Find\")]\n   public string Find()\n   {\n      return \"Found students\";\n   }\n}\n\n```", "```cs\npublic class Student\n{\n   public int StudentNumber { get; set; }\n   public string FirstName { get; set; }\n   public string LastName { get; set; }\n}\n\n```", "```cs\n[Route(\"Find\")]\npublic IActionResult Find()\n{\n   var studentModel = new Student\n   {\n      StudentNumber = 123\n      , FirstName = \"Dirk\"\n      , LastName = 'Strauss\"\n   };\n   return View(studentModel);\n}\n\n```", "```cs\n        <html >\n          <head>\n            <title></title>\n          </head>\n          <body>\n          </body>\n        </html>\n\n```", "```cs\n        @model AspNetCore.Models.Student\n        <html >\n          <head>\n            <title>Student</title>\n          </head>\n          <body>\n            <div>\n              <h1>Student Information</h1>\n              <strong>Student number:</strong>@Model.StudentNumber<br />\n              <strong>First name: </strong>@Model.FirstName<br />\n              <strong>First name: </strong>@Model.LastName<br />\n            </div>\n          </body>\n        </html>\n\n```"]