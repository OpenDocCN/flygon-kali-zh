["```\n> docker info\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 18.06.0-ce\nStorage Driver: overlay2\n Backing Filesystem: extfs\n Supports d_type: true\n Native Overlay Diff: true\n...\n...\n```", "```\n> docker run -it alpine echo \"Hello World\"\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\nff3a5c916c92: Pull complete\nDigest: sha256:e1871801d30885a610511c867de0d6baca7ed4e6a2573d506bbec7fd3b03873f\nStatus: Downloaded newer image for alpine:latest\nHello World\n> docker ps -a\nCONTAINER ID      IMAGE   COMMAND              CREATED       STATUS                 \na251bd2c53dd      alpine  \"echo 'Hello World'\" 3 seconds ago Exited (0) 2 seconds ago \n> docker rm a251bd2c53dd\na251bd2c53dd\n```", "```\n> brew install make --with-default-names\n==> Downloading https://ftp.gnu.org/gnu/make/make-4.2.1.tar.bz2\nAlready downloaded: /Users/jmenga/Library/Caches/Homebrew/make-4.2.1.tar.bz2\n==> ./configure --prefix=/usr/local/Cellar/make/4.2.1_1\n==> make install\n/usr/local/Cellar/make/4.2.1_1: 13 files, 959.5KB, built in 29 seconds\n> brew install jq tree ==> Downloading https://homebrew.bintray.com/bottles/jq-1.5_3.high_sierra.bottle.tar.gz\nAlready downloaded: /Users/jmenga/Library/Caches/Homebrew/jq-1.5_3.high_sierra.bottle.tar.gz\n==> Downloading https://homebrew.bintray.com/bottles/tree-1.7.0.high_sierra.bottle.1.tar.gz\nAlready downloaded: /Users/jmenga/Library/Caches/Homebrew/tree-1.7.0.high_sierra.bottle.1.tar.gz\n==> Pouring jq-1.5_3.high_sierra.bottle.tar.gz\n/usr/local/Cellar/jq/1.5_3: 19 files, 946.6KB\n==> Pouring tree-1.7.0.high_sierra.bottle.1.tar.gz\n/usr/local/Cellar/tree/1.7.0: 8 files, 114.3KB\n\n```", "```\n> brew install python\n==> Installing dependencies for python: gdbm, openssl, readline, sqlite, xz\n...\n...\n==> Caveats\nPython has been installed as\n  /usr/local/bin/python3\n\nUnversioned symlinks `python`, `python-config`, `pip` etc. pointing to\n`python3`, `python3-config`, `pip3` etc., respectively, have been installed into\n  /usr/local/opt/python/libexec/bin\n\nIf you need Homebrew's Python 2.7 run\n  brew install python@2\n\nPip, setuptools, and wheel have been installed. To update them run\n  pip3 install --upgrade pip setuptools wheel\n\nYou can install Python packages with\n  pip3 install <package>\nThey will install into the site-package directory\n  /usr/local/lib/python3.7/site-packages\n\nSee: https://docs.brew.sh/Homebrew-and-Python\n==> Summary\n/usr/local/Cellar/python/3.7.0: 4,788 files, 102.2MB\n```", "```\n> python3 -m site --user-base\n/Users/jmenga/Library/Python/3.7\n> echo 'export PATH=/Users/jmenga/Library/Python/3.7/bin:$PATH' >> ~/.bash_profile > source ~/.bash_profile \n```", "```\nPS > Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux \n```", "```\n> exec sudo usermod -d /mnt/c/Users/jmenga jmenga\n[sudo] password for jmenga:\n```", "```\n> pwd\n/mnt/c/Users/jmenga\n> echo $HOME\n/mnt/c/Users/jmenga\n```", "```\n> sudo apt-get update Get:1 http://security.ubuntu.com/ubuntu xenial-security InRelease [107 kB]\nHit:2 http://archive.ubuntu.com/ubuntu xenial InRelease\nGet:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [109 kB]\n...\n...\n> sudo apt-get install \\\n apt-transport-https \\\n ca-certificates \\\n curl \\\n software-properties-common\n...\n...\n> curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - OK> sudo add-apt-repository \\\n \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n $(lsb_release -cs) stable\" > sudo apt-get update\n...\n...\n> sudo apt-get install docker-ce\n...\n...\n> docker --version\nDocker version 18.06.0-ce, build 0ffa825\n> docker info\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n```", "```\n> export DOCKER_HOST=localhost:2375\n> docker info\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 18.06.0-ce\nStorage Driver: overlay2\n Backing Filesystem: extfs\n Supports d_type: true\n Native Overlay Diff: true\n...\n...\n> echo \"export DOCKER_HOST=localhost:2375\" >> ~/.bash_profile\n```", "```\n> curl -O https://bootstrap.pypa.io/get-pip.py > python3 get-pip.py --user\nCollecting pip\n...\n...\nInstalling collected packages: pip, setuptools, wheel\nSuccessfully installed pip-10.0.1 setuptools-39.2.0 wheel-0.31.1\n> rm get-pip.py\n> python3 -m site --user-base /mnt/c/Users/jmenga/.local > echo 'export PATH=/mnt/c/Users/jmenga/.local/bin:$PATH' >> ~/.bash_profile\n> source ~/.bash_profile \n```", "```\n> pip install docker-compose --user\nCollecting docker-compose\n...\n...\nSuccessfully installed cached-property-1.4.3 docker-3.4.1 docker-compose-1.22.0 docker-pycreds-0.3.0 dockerpty-0.4.1 docopt-0.6.2 jsonschema-2.6.0 texttable-0.9.1 websocket-client-0.48.0\n> docker-compose --version\ndocker-compose version 1.22.0, build f46880f\n```", "```\n> sudo apt-get install git make jq tree build-essential python3-dev\nReading package lists... Done\nBuilding dependency tree\n...\n...\nSetting up jq (1.5+dfsg-1) ...\nSetting up make (4.1-6) ...\nProcessing triggers for libc-bin (2.23-0ubuntu10) ...\n> git --version\ngit version 2.7.4\n> make --version\nGNU Make 4.1\nBuilt for x86_64-pc-linux-gnu\nCopyright (C) 1988-2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n> jq --version\njq-1.5-1-a5b5cbe\n```", "```\n> git clone https://github.com/<your-username>/todobackend.git\nCloning into 'todobackend'...\nremote: Counting objects: 231, done.\nremote: Total 231 (delta 0), reused 0 (delta 0), pack-reused 231\nReceiving objects: 100% (231/231), 31.75 KiB | 184.00 KiB/s, done.\n```", "```\nResolving deltas: 100% (89/89), done.\n> cd todobackend todobackend> \n```", "```\n> git pull\nAlready up to date.\n> git diff\ndiff --git a/Dockerfile b/Dockerfile\nindex e56b47f..4a73ce3 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n-COPY --from=build /build /build\n-COPY --from=build /app /app\n-WORKDIR /app\n+# Create app user\n+RUN addgroup -g 1000 app && \\\n+ adduser -u 1000 -G app -D app\n\n+# Copy and install application source and pre-built dependencies\n> git status\nOn branch master\nYour branch is up to date with 'origin/master'.\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n  modified: src/todobackend/settings.py\n  modified: src/todobackend/wsgi.py\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n  docker-compose.yml\n  src/acceptance.bats\n> git add -A > git commit -a -m \"Some commit message\"\n> git push -u origin master\n> git push\n```", "```\nDjango==2.0\ndjango-cors-headers==2.1.0\ndjangorestframework==3.7.3\nmysql-connector-python==8.0.11\npytz==2017.3\nuwsgi==2.0.17\n```", "```\ntodobackend> cd src\nsrc> pip3 install -r requirements.txt --user\nCollecting Django==2.0 (from -r requirements.txt (line 1))\n...\n...\nSuccessfully installed Django-2.0 django-cors-headers-2.1.0 djangorestframework-3.7.3 mysql-connector-python-8.0.11 pytz-2017.3 uwsgi-2.0.17\n```", "```\nsrc> python3 manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, sessions, todo\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying sessions.0001_initial... OK\n  Applying todo.0001_initial... OK\n```", "```\nsrc> python3 manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, sessions, todo\nRunning migrations:\n  No migrations to apply.\n```", "```\nsrc> python3 manage.py runserver\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\nJuly 02, 2018 - 07:23:49\nDjango version 2.0, using settings 'todobackend.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```", "```\nsrc> curl localhost:8000\n{\"todos\":\"http://localhost:8000/todos\"}\n```", "```\n> curl -X POST -H \"Content-Type: application/json\" localhost:8000/todos \\\n -d '{\"title\": \"Wash the car\", \"order\": 2}'\n{\"url\":\"http://localhost:8000/todos/2\",\"title\":\"Wash the car\",\"completed\":false,\"order\":2}\n\n> curl -s localhost:8000/todos | jq\n[\n {\n \"url\": \"http://localhost:8000/todos/1\",\n \"title\": \"Walk the dog\",\n \"completed\": false,\n \"order\": 1\n },\n {\n \"url\": \"http://localhost:8000/todos/2\",\n \"title\": \"Wash the car\",\n \"completed\": false,\n \"order\": 2\n }\n]\n\n> curl -X PATCH -H \"Content-Type: application/json\" localhost:8000/todos/2 \\\n -d '{\"completed\": true}' {\"url\":\"http://localhost:8000/todos/2\",\"title\":\"Wash the car\",\"completed\":true,\"order\":1}\n```", "```\n-r requirements.txt\ncolorama==0.3.9\ncoverage==4.4.2\ndjango-nose==1.4.5\nnose==1.3.7\npinocchio==0.4.2\n```", "```\nsrc> pip3 install -r requirements_test.txt --user\nRequirement already satisfied: Django==2.0 in /usr/local/lib/python3.7/site-packages (from -r requirements.txt (line 1)) (2.0)\nRequirement already satisfied: django-cors-headers==2.1.0 in /usr/local/lib/python3.7/site-packages (from -r requirements.txt (line 2)) (2.1.0)\n...\n...\nInstalling collected packages: django-coverage, nose, django-nose, pinocchio\nSuccessfully installed django-nose-1.4.5 pinocchio-0.4.2\n```", "```\nsrc> python3 manage.py test --settings todobackend.settings_test\nCreating test database for alias 'default'...\n\nEnsure we can create a new todo item\n- item has correct title\n- item was created\n- received 201 created status code\n- received location header hyperlink\n\nEnsure we can delete all todo items\n- all items were deleted\n- received 204 no content status code\n\nEnsure we can delete a todo item\n- received 204 no content status code\n- the item was deleted\n\nEnsure we can update an existing todo item using PATCH\n- item was updated\n- received 200 ok status code\n\nEnsure we can update an existing todo item using PUT\n- item was updated\n- received 200 created status code\n\n----------------------------------------------------------------------\nXML: /Users/jmenga/todobackend/src/unittests.xml\nName                              Stmts   Miss  Cover\n-----------------------------------------------------\ntodo/__init__.py                      0      0   100%\ntodo/admin.py                         1      1     0%\ntodo/migrations/0001_initial.py       5      0   100%\ntodo/migrations/__init__.py           0      0   100%\ntodo/models.py                        6      6     0%\ntodo/serializers.py                   7      0   100%\ntodo/urls.py                          6      0   100%\ntodo/views.py                        17      0   100%\n-----------------------------------------------------\nTOTAL                                42      7    83%\n----------------------------------------------------------------------\nRan 12 tests in 0.281s\n\nOK\n\nDestroying test database for alias 'default'...\n```"]