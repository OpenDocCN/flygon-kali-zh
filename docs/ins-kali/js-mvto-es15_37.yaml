- en: Chapter 9. New Features of Bootstrap 4
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。Bootstrap 4的新功能
- en: '**Bootstrap 4** is the latest version of Bootstrap at the time of writing.
    This version makes Bootstrap more powerful and easy to customize and use. In this
    chapter, you will learn about the new features of Bootstrap 4 with examples. I
    will assume that you already have some knowledge of Bootstrap and know how to
    create responsive websites using it. If you are new to Bootstrap or responsive
    web design, you can find good books to learn Bootstrap from scratch from the Packt
    catalog. We will use Bootstrap 4 to design all the projects we will be building
    from this chapter onwards.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Bootstrap 4**是我写作时的最新版本。这个版本使Bootstrap更强大和易于定制和使用。在本章中，您将学习Bootstrap 4的新功能，并附有示例。我假设您已经对Bootstrap有一些了解，并知道如何使用它创建响应式网站。如果您对Bootstrap或响应式网页设计不熟悉，您可以在Packt目录中找到学习Bootstrap从零开始的好书。我们将使用Bootstrap
    4来设计从本章开始构建的所有项目。'
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Various ways to download Bootstrap 4
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载Bootstrap 4的各种方式
- en: The compatibility of Bootstrap 4
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bootstrap 4的兼容性
- en: Support for Flexbox
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对Flexbox的支持
- en: Customizing Bootstrap 4
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义Bootstrap 4
- en: Responsive CSS units
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应式CSS单位
- en: Downloading Bootstrap 4
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Bootstrap 4
- en: To download Bootstrap 4, first visit [http://v4-alpha.getbootstrap.com/getting-started/download/](http://v4-alpha.getbootstrap.com/getting-started/download/).
    Here, you will find various ways to download Bootstrap 4, depending on the package
    manager you use. You can also directly download the compiled version if the package
    manager you use is not listed or if you don't use a package manager at all. This
    page also provides you with a link to download the source files.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Bootstrap 4，首先访问[http://v4-alpha.getbootstrap.com/getting-started/download/](http://v4-alpha.getbootstrap.com/getting-started/download/)。在这里，您将找到根据您使用的包管理器的不同方式来下载Bootstrap
    4。如果您使用的包管理器未列出，或者根本不使用包管理器，您也可以直接下载编译版本。此页面还提供了下载源文件的链接。
- en: It also provides custom builds, which are just parts of Bootstrap 4 that can
    be used when you just need a few features of Bootstrap 4 but not the whole library.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 它还提供自定义构建，这只是Bootstrap 4的部分，当您只需要Bootstrap 4的一些功能而不是整个库时可以使用。
- en: All major CDN services also support Bootstrap 4, so in case you want to enqueue
    it from a CDN, you can easily find CDN URLs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所有主要的CDN服务也支持Bootstrap 4，因此如果您想从CDN中引用它，您可以很容易地找到CDN的URL。
- en: 'For this chapter, directly download the compiled version and place it in a
    new directory named `bs4`. In the same directory, create a file named `index.html`,
    and place the following code in it:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，直接下载编译版本并将其放在一个名为`bs4`的新目录中。在同一目录中，创建一个名为`index.html`的文件，并将以下代码放入其中：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Browser and device support
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览器和设备支持
- en: Bootstrap 4 supports the latest stable releases of all major browsers and platforms.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4支持所有主要浏览器和平台的最新稳定版本。
- en: In terms of compatibility, the only change Bootstrap 4 has brought in is that
    it drops support for Internet Explorer 8\. Everything else remains the same as
    in Bootstrap 3.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在兼容性方面，Bootstrap 4带来的唯一变化是放弃了对Internet Explorer 8的支持。其他方面与Bootstrap 3保持一致。
- en: Understanding the rem and em CSS units
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解rem和em CSS单位
- en: Bootstrap 4 has switched from `px` to `rem` and `em` wherever possible. This
    is the main reason why Bootstrap 4 is not supported in IE 8 as IE 8 doesn't support
    the `em` and `rem` units. Bootstrap 4 switched to `rem` and `em` because they
    make responsive typography and component sizing easier.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4已尽可能地从`px`切换到`rem`和`em`。这是Bootstrap 4不支持IE 8的主要原因，因为IE 8不支持`em`和`rem`单位。Bootstrap
    4切换到`rem`和`em`是因为它们使响应式排版和组件大小调整更容易。
- en: If you are not familiar with the `rem` and `em` CSS units, then it's the right
    time to learn it.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不熟悉`rem`和`em` CSS单位，那么现在是学习的好时机。
- en: The `em` unit is relative to the font size of the parent element. `1em` is equal
    to the current font size of the parent element. `2em` means two times the size
    of the current font. For example, if an element is displayed with a font size
    of `10 px`, then `2em` is `20 px`. We can achieve responsive typography and components
    by just changing the parent element's font size using CSS media queries for different
    viewport or device width sizes.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`em`单位是相对于父元素的字体大小。`1em`等于父元素的当前字体大小。`2em`表示当前字体大小的两倍。例如，如果一个元素以`10 px`的字体大小显示，那么`2em`就是`20
    px`。我们可以通过使用CSS媒体查询来改变父元素的字体大小，从而实现响应式排版和组件，以适应不同的视口或设备宽度大小。'
- en: As `em` sizing is nested (it depends on parent element), if you have elements
    with `1.5em` sizing and then nest some HTML with elements that also have an `em`
    declaration, their sizing multiplies.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`em`大小是嵌套的（它取决于父元素），如果您有一些具有`1.5em`大小的元素，然后嵌套一些具有`em`声明的元素的HTML，它们的大小会相乘。
- en: The `rem` unit is similar to `em` but is relative to the font size of the HTML
    tag (root element). Therefore, it's not nested.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`rem`单位类似于`em`，但是相对于HTML标签（根元素）的字体大小。因此，它不是嵌套的。'
- en: Note
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Bootstrap 4 uses a base font size of 16 pixels.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4使用基本字体大小为16像素。
- en: The grid system
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网格系统
- en: 'The only change made in the Bootstrap 4 grid system is that a new extra-large
    breakpoint has been added. The class prefix for this breakpoint is `.col-xl-`.
    Here are the Bootstrap 4 grid breakpoints after this new addition:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4网格系统中唯一的变化是添加了一个新的超大断点。这个断点的类前缀是`.col-xl-`。在这个新添加之后，以下是Bootstrap
    4的网格断点：
- en: '![The grid system](img/00121.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![网格系统](img/00121.jpeg)'
- en: The `.col-xl-` breakpoint targets screen sizes of **1200px** or larger, which
    was targeted by `.col-lg-` in Bootstrap 3\. Therefore, this makes other breakpoints
    compress to target smaller screen sizes than they used to in Bootstrap 3\. Here,
    you can see that `.col-xs-` now targets a screen width of less than **544px**
    instead of the **768px** it did in Bootstrap 3, making it easier to target mobile
    devices and have different layouts for tablets and mobile devices, which was lacking
    in Bootstrap 3.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`.col-xl-`断点针对**1200px**或更大的屏幕尺寸，这是Bootstrap 3中`.col-lg-`的目标。因此，这使得其他断点压缩以针对比Bootstrap
    3中更小的屏幕尺寸。在这里，您可以看到`.col-xs-`现在针对的屏幕宽度小于**544px**，而不是Bootstrap 3中的**768px**，这使得更容易针对移动设备，并且在平板电脑和移动设备上具有不同的布局，这在Bootstrap
    3中是缺少的。'
- en: While Bootstrap uses `em` or `rem` for defining most sizes, `px` is used for
    grid breakpoints and container widths. This is because viewport width is in pixels
    and does not change with font size.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Bootstrap使用`em`或`rem`来定义大多数尺寸，但在网格断点和容器宽度上使用`px`。这是因为视口宽度以像素为单位，不随字体大小而改变。
- en: 'Here is an example of the new grid system. Place this code in the `<body>`
    tag of the `index.html` file:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新网格系统的示例。将此代码放在`index.html`文件的`<body>`标记中：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A Bootstrap row can have 12 columns at the most. As here we have more than 12
    columns in the row in some cases, the columns are wrapped, that is, columns are
    wrapped to a new line.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap行最多可以有12列。由于在某些情况下行中有超过12列，因此列被换行，即列被换行到新行。
- en: 'On mobile screens, the previous code will look like this:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动屏幕上，先前的代码将如下所示：
- en: '![The grid system](img/00122.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![网格系统](img/00122.jpeg)'
- en: 'On small tablets, it will look like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在小型平板电脑上，它看起来像这样：
- en: '![The grid system](img/00123.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![网格系统](img/00123.jpeg)'
- en: 'It will look like this on regular tablets:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在常规平板电脑上，它将如下所示：
- en: '![The grid system](img/00124.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![网格系统](img/00124.jpeg)'
- en: 'Laptops users will see this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本电脑用户将看到这个：
- en: '![The grid system](img/00125.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![网格系统](img/00125.jpeg)'
- en: 'Finally, on desktop monitors, it will look like this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在桌面显示器上，它将如下所示：
- en: '![The grid system](img/00126.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![网格系统](img/00126.jpeg)'
- en: So, in Bootstrap 4, we are able to precisely target all types of device.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在Bootstrap 4中，我们能够精确地针对所有类型的设备进行定位。
- en: Global margin reset
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局边距重置
- en: For all elements, Bootstrap 4 resets `margin-top` to `0` while keeping a consistent
    `margin-bottom` value on all elements.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有元素，Bootstrap 4将`margin-top`重置为`0`，同时保持所有元素的一致的`margin-bottom`值。
- en: 'For example, headings have `margin-bottom: .5rem` added, and paragraphs have
    `margin-bottom: 1rem` for easy spacing.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '例如，标题添加了`margin-bottom: .5rem`，段落添加了`margin-bottom: 1rem`，以便进行简单的间距设置。'
- en: Spacing utility classes
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 间距实用类
- en: Bootstrap 4 adds a new set of utility classes called **spacing utility classes**.
    These classes allow you to quickly add spacing in any direction of an element
    via margin or padding.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4添加了一组新的实用类，称为**间距实用类**。这些类允许您通过边距或填充在元素的任何方向上快速添加间距。
- en: The format of these classes is `[margin or padding]-[direction]-[size]`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类的格式是`[margin或padding]-[direction]-[size]`。
- en: 'For margin or padding, use the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于边距或填充，请使用以下内容：
- en: '`m` for margin'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`m`代表边距'
- en: '`p` for padding'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`p`用于填充'
- en: 'For direction, you can use these:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于方向，您可以使用以下内容：
- en: '`a` for all'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`a`用于所有'
- en: '`t` for top'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t`代表顶部'
- en: '`r` for right'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`r`用于右'
- en: '`l` for left'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`l`代表左'
- en: '`b` for bottom'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`b`代表底部'
- en: '`x` for left and right'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x`代表左右'
- en: '`y` for top and bottom'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y`代表上下'
- en: 'You can use these for sizes:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下内容进行尺寸：
- en: '`0` for zero'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0`代表零'
- en: '`1` for `1rem`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`代表`1rem`'
- en: '`2` for `1.5rem`'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`代表`1.5rem`'
- en: '`3` for `3rem`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3`代表`3rem`'
- en: 'Here is an example to demonstrate the spacing utility classes. Place this code
    at the end of the container element of `index.html`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是演示间距实用类的示例。将此代码放在`index.html`的容器元素的末尾：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here is how the page looks now:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在页面的外观如下：
- en: '![Spacing utility classes](img/00127.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![间距实用类](img/00127.jpeg)'
- en: Here, you can see the top and bottom margin space created by the spacing utility
    classes.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到间距实用类创建的顶部和底部边距空间。
- en: Display headings
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示标题
- en: Traditional heading elements, namely `h1`, `h2`, and so on, are designed to
    work best in the meat of your page content. When you need a heading to stand out,
    consider using a display heading—a larger, slightly more opinionated heading style.
    Display heading classes can be applied to any element of a page.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的标题元素，即`h1`，`h2`等，旨在最好地在页面内容中发挥作用。当您需要突出显示标题时，请考虑使用显示标题——一种更大，略微更有主张的标题样式。显示标题类可以应用于页面的任何元素。
- en: 'Here is an example to demonstrate display heading. Place this code at the end
    of the container element of `index.html`:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是演示显示标题的示例。将此代码放在`index.html`的容器元素的末尾：
- en: '[PRE3]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`display-1`, `display-2`, `display-3`, and `display-4` are the display heading
    classes.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`display-1`，`display-2`，`display-3`和`display-4`是显示标题类。'
- en: 'Here is the output of the code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是代码的输出：
- en: '![Display headings](img/00128.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![显示标题](img/00128.jpeg)'
- en: Inverse tables
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反向表
- en: A new class for tables has been introduced, named `table-inverse`. This is just
    another variation of `table` in terms of looks.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 引入了一个名为`table-inverse`的新表类。这只是外观上的`table`的另一种变化。
- en: 'Here is how to create an inverse table. Place this code at the end of the container
    element of `index.html`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是创建反向表的方法。将此代码放在`index.html`的容器元素的末尾：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is how the table looks:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是表的外观：
- en: '![Inverse tables](img/00129.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![反向表](img/00129.jpeg)'
- en: The card component
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卡片组件
- en: '**Cards** are a new component in Bootstrap 4 that replaces wells, panels, and
    thumbnails. A card is a flexible and extensible content container. It includes
    options for headers and footers, a wide variety of content, contextual background
    colors, and powerful display options.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**卡片**是Bootstrap 4中的一个新组件，取代了井，面板和缩略图。卡片是一个灵活且可扩展的内容容器。它包括标题和页脚的选项，各种内容，上下文背景颜色以及强大的显示选项。'
- en: 'Here is an example that demonstrates how to create a card and all of its subparts
    and styles. Place this code at the end of the container element of `index.html`:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例，演示了如何创建卡片及其所有子部分和样式。将此代码放在`index.html`的容器元素的末尾：
- en: '[PRE5]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is how the code looks:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是代码的外观：
- en: '![The card component](img/00130.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![卡片组件](img/00130.jpeg)'
- en: Here, I've created multiple cards so that it is easier to demonstrate all of
    their subparts and different styles.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我创建了多个卡片，以便更容易地展示它们的所有子部分和不同的样式。
- en: 'Here is how the previous code works:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这是先前代码的工作原理：
- en: To create a card, we need to use the `.card` class.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要创建一个卡片，我们需要使用`.card`类。
- en: By default, card width is 100% of its parent container. Therefore, here we are
    using a grid system to control width.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，卡片的宽度是其父容器的100%。因此，在这里我们使用网格系统来控制宽度。
- en: In the first card, we have a header, which is created using the `.card-header`
    class. Then, we have a card block, inside which we have a title and subtitle.
    A card block is a part of a card that has padding. Whenever you need padding in
    any part of the card, simply use the `.card-block` class. A card title is created
    using `.card-title`, and a card subtitle is created using the `.card-subtitle`
    class. The `.card-title` and `.card-subtitle` classes simply give appropriate
    margins. Then, we simply have a responsive image. After that, we have a paragraph
    using the `.card-text` class. The `.card-text` class makes sure that the last
    child element doesn't have any bottom margin. Then, we have two links with the
    `.card-link` class. `.card-link` applies a left margin to all `.card-link` classes
    from the second one. And finally, we have a card footer, which is created using
    `.card-footer`.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第一张卡片中，我们有一个标题，使用`.card-header`类创建。然后，我们有一个卡片块，在其中有一个标题和副标题。卡片块是卡片的一部分，具有填充。每当您需要卡片的任何部分填充时，只需使用`.card-block`类。使用`.card-title`创建卡片标题，使用`.card-subtitle`类创建卡片副标题。`.card-title`和`.card-subtitle`类只是给出适当的边距。然后，我们只有一个响应式图片。之后，我们使用`.card-text`类创建了一个段落。`.card-text`类确保最后一个子元素没有底部边距。然后，我们有两个链接，使用`.card-link`类。`.card-link`为第二个链接之后的所有`.card-link`类应用了左边距。最后，我们有一个卡片页脚，使用`.card-footer`创建。
- en: In the second card, we have a responsive image and then a block quote. We have
    added the `.card-img-top` class to the image, which adds a top-right and top-left
    border radius to the image. We have also added `.card-blockquote` to the block
    quote to remove the margin, padding, and left border from the block quote.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第二张卡片中，我们有一个响应式图片，然后是一个块引用。我们为图片添加了`.card-img-top`类，这会给图片添加顶部右侧和顶部左侧的边框半径。我们还为块引用添加了`.card-blockquote`，以删除块引用的边距、填充和左边框。
- en: In the third card, we simply have some text and a responsive image. We have
    added the `.card-img-bottom` class to the responsive image, which adds a bottom-right
    and bottom-left border radius to the image.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第三张卡片中，我们只是有一些文本和一个响应式图片。我们为响应式图片添加了`.card-img-bottom`类，这会在图片的底部右侧和底部左侧添加边框半径。
- en: The fourth card we created is for demonstrating card overlays. First, we added
    a responsive image with the `.card-img` class, which adds a border radius to all
    the corners. And then, we created an overlay using the `.card-img-overlay` class,
    which simply makes the position of the element absolute with some padding and
    no top, right, left, and bottom, thus putting the content on top of the card.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们创建的第四张卡片是用来演示卡片覆盖的。首先，我们添加了一个响应式图片，使用`.card-img`类，这会给所有角添加边框半径。然后，我们使用`.card-img-overlay`类创建了一个覆盖层，这只是使元素的位置绝对，并添加了一些填充，没有顶部、右侧、左侧和底部，从而将内容放在卡片的顶部。
- en: By default, cards use dark text and assume a light background. Add `.card-inverse`
    for white text and specify the `background-color` and `border-color` values to
    go with it. The fifth card is a demonstration of `.card-inverse`. Bootstrap 4
    also provides a few classes that add a background color and border color to cards.
    These classes are demonstrated in the last five cards.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，卡片使用深色文本，并假定是浅色背景。添加`.card-inverse`以获得白色文本，并指定`background-color`和`border-color`值以配合。第五张卡片是`.card-inverse`的演示。Bootstrap
    4还提供了一些类，为卡片添加了背景颜色和边框颜色。这些类在最后五张卡片中进行了演示。
- en: Card groups, decks, and columns
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 卡片组、牌组和列
- en: Card groups let you render cards as a single, attached element with equal width
    and height columns. Card groups only apply to screen sizes greater than `544px`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 卡片组允许您将卡片呈现为单个附加元素，具有相等的宽度和高度列。卡片组仅适用于屏幕尺寸大于`544px`。
- en: If you need a set of same-sized cards that aren't attached to one another, then
    use card decks instead of card groups. Card decks only apply to screen sizes greater
    than `544px`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要一组大小相同的卡片，而它们不是连接在一起的，则使用卡片组而不是卡片组。卡片组仅适用于屏幕尺寸大于`544px`。
- en: Finally, card columns let you organize cards into Masonry-like columns. Card
    columns only apply to screen sizes greater than `544px`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，卡片列允许您将卡片组织成类似砌体的列。卡片列仅适用于屏幕尺寸大于`544px`。
- en: 'Here is a code example of card groups, decks, and columns. Place it at the
    end of the container element of `index.html`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个卡片组、牌组和列的代码示例。将其放在`index.html`的容器元素的末尾：
- en: '[PRE6]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here is the output of the code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这是代码的输出：
- en: '![Card groups, decks, and columns](img/00131.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![卡片组、牌组和列](img/00131.jpeg)'
- en: As you can see, we have used the `.card-group` class to create a class group.
    We have used `.card-deck-wrapper` and `.card-deck` to create a card deck and,
    finally, `.card-columns` to organize cards into Masonry-like columns.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们使用`.card-group`类创建了一个类组。我们使用`.card-deck-wrapper`和`.card-deck`创建了一个卡片组，最后使用`.card-columns`将卡片组织成类似砌体的列。
- en: Outline buttons
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轮廓按钮
- en: Bootstrap 4 has added some new button styles with **outline buttons**. Outline
    buttons appear hollow or are simply inverses of regular buttons.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4添加了一些新的按钮样式，包括**轮廓按钮**。轮廓按钮看起来是空心的，或者只是常规按钮的反色。
- en: 'Here is example code to demonstrate outline buttons. Place this code at the
    end of the container element of `index.html`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例代码，用于演示轮廓按钮。将此代码放在`index.html`的容器元素的末尾：
- en: '[PRE7]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here is how the code looks:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这是代码的外观：
- en: '![Outline buttons](img/00132.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![轮廓按钮](img/00132.jpeg)'
- en: Moving from Less to Sass
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Less到Sass的转变
- en: The Bootstrap 4 source is written in Sass instead of Less. Less was used until
    Bootstrap 3\. This is great because Sass tends to be more favorable by frontend
    developers. It also compiles faster. Also, it doesn't seem as if there are currently
    any plans for a Less version. You can find the source files at [https://github.com/twbs/bootstrap/tree/v4-dev](https://github.com/twbs/bootstrap/tree/v4-dev).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4源代码是用Sass编写的，而不是Less。在Bootstrap 3之前使用的是Less。这很棒，因为Sass更受前端开发人员的青睐。它还编译得更快。此外，目前似乎没有Less版本的计划。您可以在[https://github.com/twbs/bootstrap/tree/v4-dev](https://github.com/twbs/bootstrap/tree/v4-dev)找到源文件。
- en: Text alignment and float utility classes
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本对齐和浮动实用类
- en: Utility classes for floats and text alignment now have responsive ranges. Bootstrap
    4 has dropped nonresponsive text alignment and float classes.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动和文本对齐的实用类现在具有响应式范围。Bootstrap 4已放弃了非响应式的文本对齐和浮动类。
- en: Responsive text alignment classes are of the `text-[xs/sm/md/lg/xl]-[left/right/center]`
    format. For example, the `text-lg-left` class left aligns text on viewports sized
    `lg` or wider.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式文本对齐类的格式为`text-[xs/sm/md/lg/xl]-[left/right/center]`。例如，`text-lg-left`类会在视口大小为`lg`或更大时左对齐文本。
- en: Classes of the format `pull-[xs/sm/md/lg/xl]-[left/right/none]` float an element
    to the left or right or disable floating based on the current viewport size. For
    example, the `pull-xs-left` class floats the element left on all viewport sizes.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 格式为`pull-[xs/sm/md/lg/xl]-[left/right/none]`的类将元素浮动到左侧或右侧，或根据当前视口大小禁用浮动。例如，`pull-xs-left`类会在所有视口大小上将元素向左浮动。
- en: Reboot
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重启
- en: Bootstrap 3 used `Normalize.css` as its CSS reset. In Bootstrap 4, the reset
    and Bootstrap base styles are combined into a single file called `reboot.scss`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 3使用`Normalize.css`作为其CSS重置。在Bootstrap 4中，重置和Bootstrap基本样式合并到一个名为`reboot.scss`的单个文件中。
- en: Flexbox support
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Flexbox支持
- en: '**Flexbox support** has finally come to Bootstrap in Bootstrap 4\. To enable
    various components and grid systems to use Flexbox, you can download the Flexbox
    version of the Bootstrap CSS file, which is available on their download page:
    [http://v4-alpha.getbootstrap.com/getting-started/download/](http://v4-alpha.getbootstrap.com/getting-started/download/).'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**Flexbox支持**终于在Bootstrap 4中出现了。要启用各种组件和网格系统使用Flexbox，您可以下载Bootstrap CSS文件的Flexbox版本，该文件可在其下载页面上找到：[http://v4-alpha.getbootstrap.com/getting-started/download/](http://v4-alpha.getbootstrap.com/getting-started/download/)。'
- en: 'Remember that Flexbox has poor browser support, so think twice before deciding
    to use it. Here is a diagram that shows the browser support of Flexbox:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，Flexbox的浏览器支持较差，因此在决定使用它之前要三思。以下是显示Flexbox浏览器支持的图表：
- en: '![Flexbox support](img/00133.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![Flexbox支持](img/00133.jpeg)'
- en: You can also change the value of the `$enable-flex` to `true` Sass variable
    and compile it to generate the Flexbox version of the Bootstrap CSS.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将`$enable-flex`的值更改为`true`的Sass变量，并编译它以生成Bootstrap CSS的Flexbox版本。
- en: Learn more about Flexbox support in Bootstrap 4 at [http://v4-alpha.getbootstrap.com/getting-started/flexbox/](http://v4-alpha.getbootstrap.com/getting-started/flexbox/).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在[http://v4-alpha.getbootstrap.com/getting-started/flexbox/](http://v4-alpha.getbootstrap.com/getting-started/flexbox/)了解更多关于Bootstrap
    4中Flexbox支持的信息。
- en: JavaScript improvements
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript改进
- en: In the source files, all the JavaScript plugins have been written using ES6,
    and for distribution, it is compiled with Babel. They also now come with UMD support.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在源文件中，所有的JavaScript插件都是使用ES6编写的，并且在分发时使用Babel进行编译。它们现在也支持UMD。
- en: Now that IE 8 support has been dropped, it's safe to always use jQuery 2.0 with
    Bootstrap. jQuery 2.0 is smaller and faster and has more features.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在IE 8支持已经被移除，因此可以放心地始终使用jQuery 2.0与Bootstrap。jQuery 2.0更小更快，功能更多。
- en: Adding Tether
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加Tether
- en: '**Tether** is a JavaScript library for efficiently making an absolutely positioned
    element stay next to another element on the page. For example, you might want
    a tooltip or dialog to open and remain next to the relevant item on the page.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**Tether**是一个JavaScript库，用于有效地使绝对定位的元素保持在页面上另一个元素的旁边。例如，您可能希望工具提示或对话框打开并保持在页面上相关项目的旁边。'
- en: In Bootstrap 4, Tether is integrated into tooltips and popovers for better auto-placement
    and performance. So, to make tooltips and popovers work in Bootstrap 4, you have
    to enqueue `tether.js`.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap 4中，Tether已集成到工具提示和弹出框中，以实现更好的自动定位和性能。因此，要使工具提示和弹出框在Bootstrap 4中工作，您必须加载`tether.js`。
- en: 'Add this line of code to the top of the `bootstrap.min.js` file to enqueue
    tether from a CDN:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将这行代码添加到`bootstrap.min.js`文件的顶部以从CDN加载tether：
- en: '[PRE8]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The 21:9 aspect ratio class
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 21:9宽高比类
- en: 'A new aspect ratio class has been added to Bootstrap 4: the `.embed-responsive-21by9`
    class for a `21:9` ratio. Here is an example of it:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4新增了一个新的宽高比类：`.embed-responsive-21by9`类用于`21:9`比例。以下是一个示例：
- en: '[PRE9]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Customizing Bootstrap 4
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义Bootstrap 4
- en: In Bootstrap 4, all the customization variable options are consolidated to a
    single file called `_variables.scss`, where you can compile your Sass on the fly
    and with little effort. This used be previously all done in a separate stylesheet.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap 4中，所有自定义变量选项都被整合到一个名为`_variables.scss`的单个文件中，您可以轻松地即时编译您的Sass。这曾经是在一个单独的样式表中完成的。
- en: This file provides a lot more customization options than Bootstrap used to provide
    earlier.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件提供了比以前更多的自定义选项。
- en: Glyphicons dropped
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标字体已删除
- en: '**Glyphicons** have been removed from the build, that is, Boostrap 4 doesn''t
    include an icon pack. You need to manually enqueue a icon pack.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**Glyphicons**已从构建中删除，也就是说，Boostrap 4不包括图标包。您需要手动加载图标包。'
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: So, we have seen all the new features of Bootstrap 4\. The grid system and cards
    are the two major additions to Bootstrap 4\. It's absolutely fine to switch to
    Bootstrap 4 now. Although Bootstrap 4 drops support for IE 8, it's still fine
    as users should also move with the technology. From now on, Bootstrap 4 will be
    used in all the projects we will create in this module.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经看到了Bootstrap 4的所有新功能。网格系统和卡片是Bootstrap 4的两个主要新增功能。现在切换到Bootstrap 4是完全可以的。尽管Bootstrap
    4放弃了对IE 8的支持，但用户也应该跟随技术的发展。从现在开始，我们将在本模块中创建的所有项目中使用Bootstrap 4。
