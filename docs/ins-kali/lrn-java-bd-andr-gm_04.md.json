["```java\nint x = 10;\n\nwhile(x > 0){\n  x--;\n  //x decreases by one each pass through the loop\n}\n```", "```java\nint x = 10;\n\nwhile(x > 10){\n  //more code here.\n  //but it will never run unless x is greater than 10.\n}\n```", "```java\nint playerLives = 3;\nint alienShips = 10;\n\nwhile(playerLives >0 && alienShips >0){\n  //Entire game code here.\n  //...\n  //...\n  //etc.\n}\n//continue here when either playerLives or alienShips = 0\n```", "```java\nint x = 1;\n\nwhile(x > 0){\n  x--;\n  //x is now 0 so the condition is false\n  //But this line still runs\n  //and this one\n  //and me!\n\n}\n```", "```java\nint x = 0;\n\nwhile(true){\n  x++; //I am going to get mighty big!\n}\n```", "```java\nint x = 0;\n\nwhile(true){\n  x++; //I am going to get mighty big!\n  break; //No you're not haha.\n  //code doesn't reach here\n}\n```", "```java\nint x = 0;\nint tooBig = 10;\n\nwhile(true){\n  x++; //I am going to get mighty big!\n  if(x == tooBig){\n    break;\n  } //No you're not haha.\n\n  //code reaches here only until x = 10\n}\n```", "```java\nint x = 0;\nint tooBig = 10;\nint tooBigToPrint = 5;\n\nwhile(true){\n  x++; //I am going to get mighty big!\n  if(x == tooBig){\n    break;\n  } //No your not haha.\n\n  //code reaches here only until x = 10\n\n  if(x >= tooBigToPrint){\n    //No more printing but keep looping\n    continue;\n  }\n  //code reaches here only until x = 5\n\n  //Print out x \n\n}\n```", "```java\nint x= 0;\ndo{\n  x++;\n}while(x < 10);\n//x now = 10 \n```", "```java\nfor(int i = 0; i < 10; i++){\n  //Something that needs to happen 10 times goes here\n}\n```", "```java\nfor(declaration and initialization; condition; change after each pass through loop)\n```", "```java\n    for(int i = 10; i > 0; i--){\n      //countdown\n    }\n    //blast off i = 0\n    ```", "```java\nRandom randInt = new Random();\n```", "```java\nint ourRandomNumber = randInt.nextInt(10);\n```", "```java\nourRandomNumber++;\n```", "```java\npackage com.packtpub.mathgamechapter3a.mathgamechapter3a;\n\nimport android.app.Activity;\nimport android.os.Bundle;\n```", "```java\npublic class GameActivity extends Activity {\n```", "```java\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.activity_main);\n```", "```java\nint partA = 2;\nint partB = 2;\n```", "```java\nint correctAnswer = partA * partB;\nint wrongAnswer1 = correctAnswer - 1;\nint wrongAnswer2 = correctAnswer + 1; \n```", "```java\n    @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            //The next line loads our UI design to the screen\n            setContentView(R.layout.activity_game);\n\n     //Here we initialize all our variables\n     int partA = 9;\n     int partB = 9;\n     int correctAnswer = partA * partB;\n     int wrongAnswer1 = correctAnswer - 1;\n     int wrongAnswer2 = correctAnswer + 1;\n\n        }//onCreate ends here\n    ```", "```java\n    /*Here we get a working object based on either the button\n    or TextView class and base as well as link our new objects directly to the appropriate UI elements that we created previously*/\n\n    TextView textObjectPartA = (TextView)findViewById(R.id.textPartA);\n\n    TextView textObjectPartB = (TextView)findViewById(R.id.textPartB);\n\n    Button buttonObjectChoice1 = (Button)findViewById(R.id.buttonChoice1);\n\n    Button buttonObjectChoice2 = (Button)findViewById(R.id.buttonChoice2);\n\n    Button buttonObjectChoice3 = (Button)findViewById(R.id.buttonChoice3);\n    ```", "```java\n    //Now we use the setText method of the class on our objects\n    //to show our variable values on the UI elements.\n    //Just like when we output to the console in the exercise -\n    //Expressions in Java, only now we use setText method\n    //to put the values in our variables onto the actual UI.\n    textObjectPartA.setText(\"\" + partA);\n    textObjectPartB.setText(\"\" + partB);\n\n    //which button receives which answer, at this stage is arbitrary.\n\n    buttonObjectChoice1.setText(\"\" + correctAnswer);\n    buttonObjectChoice2.setText(\"\" + wrongAnswer1);\n    buttonObjectChoice3.setText(\"\" + wrongAnswer2);\n    ```", "```java\n//Here we initialize all our variables\nint partA = 2;\nint partB = 2;\nint correctAnswer = partA * partB;\nint wrongAnswer1 = correctAnswer - 1;\nint wrongAnswer2 = correctAnswer + 1;\n```", "```java\nTextView textObjectPartA = (TextView)findViewById(R.id.textPartA);\n```", "```java\nButton buttonObjectChoice1 = Button)findViewById(R.id.buttonChoice1);\n```", "```java\nbuttonObjectChoice1.setText(\"\" + correctAnswer);\n```", "```java\nbuttonObjectChoice1.\n```", "```java\nbuttonObjectChoice1.\n```", "```java\nsetText(\"\" + correctAnswer);\n```", "```java\n    setContentView(R.layout.activity_main);\n    Button buttonPlay = (Button)findViewById(R.id.buttonPlay);\n\n    ```", "```java\n    buttonPlay.setOnClickListener(this);\n    ```", "```java\n    public class MainActivity extends Activity {\n    ```", "```java\n    public class MainActivity extends Activity implements View.OnClickListener{\n    ```", "```java\n    @Override\n        public void onClick(View view) {\n\n        }\n    ```", "```java\n    @Override\n        public void onClick(View view) {\n            Intent i;\n     i = new Intent(this, GameActivity.class);\n     startActivity(i);\n        }\n    ```", "```java\npackage com.packtpub.mathgamechapter3a.mathgamechapter3a;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\n\npublic class MainActivity extends Activity implements View.OnClickListener{\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        final Button buttonPlay = (Button)findViewById(R.id.buttonPlay);\n        buttonPlay.setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View view) {\n        Intent i;\n        i = new Intent(this, GameActivity.class);\n        startActivity(i);\n    }\n\n}\n```", "```java\npackage com.packtpub.mathgamechapter3a.mathgamechapter3a;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\n```", "```java\npublic class MainActivity extends Activity implements View.OnClickListener{\n```", "```java\n@Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main); \n```", "```java\nButton buttonPlay = (Button)findViewById(R.id.buttonPlay);\nbuttonPlay.setOnClickListener(this);\n```", "```java\n    @Override\n    public void onClick(View view) {\n        Intent i;\n        i = new Intent(this, GameActivity.class);\n        startActivity(i);\n    }\n```", "```java\nif(isComingOverBridge){\n  //Shoot them\n}\n```", "```java\nif(isComingOverBridge){\n  //Shoot them\n}else{\n  //Hold position\n}\n```", "```java\nboolean isComingOverTheBridge;\nint enemyTroops;\nint friendlyTroops;\n//Code that initializes the above variables one way or another\n\n//Now the if\nif(isComingOverTheBridge && friendlyTroops > enemyTroops){\n  //shoot them\n}else if(isComingOverTheBridge && friendlyTroops < enemyTroops) {\n  //blow the bridge\n}else{\n  //Hold position\n}\n```", "```java\nif (wavingWhiteFlag){\n  //Take prisoners\n}\n```", "```java\nif (!wavingWhiteFlag){//not surrendering so check everything else\n  if(isComingOverTheBridge && friendlyTroops > enemyTroops){\n    //shoot them\n  }else if(isComingOverTheBridge && friendlyTroops < enemyTroops) {\n    //blow the bridge\n  }\n}else{//this is the else for our first if\n  //Take prisoners\n{\n//Holding position\n```", "```java\nswitch(argument){\n\n}\n```", "```java\ncase x:\n  //code to for x\n  break;\n\ncase y:\n  //code for y\n  break;\n```", "```java\ndefault://Look no value\n  //Do something here if no other case statements are true\nbreak;\n```", "```java\n//get input from user in a String variable called command\nswitch(command){\n\n  case \"Go East\":\":\n  //code to go east\n  break;\n\n  case \"Go West\":\n  //code to go west\n  break;\n  case \"Take sword\":\n  //code to take the sword\n  break;\n\n  //more possible cases\n\n  default:\n  //Sorry I don't understand your command\n  break;\n\n}\n```", "```java\n    buttonObjectChoice1.setOnClickListener(this);\n    buttonObjectChoice2.setOnClickListener(this);\n    buttonObjectChoice3.setOnClickListener(this);\n    ```", "```java\n    public class GameActivity extends Activity {\n    ```", "```java\n    public class GameActivity extends Activity implements View.OnClickListener{\n    ```", "```java\n    @Override\n        public void onClick(View view) {\n\n        }\n    ```", "```java\n    switch (view.getId()) {\n\n                case R.id.buttonChoice1:\n                //button 1 stuff goes here\n                    break;\n\n                case R.id.buttonChoice2:\n                //button 2 stuff goes here\n                    break;\n\n                case R.id.buttonChoice3:\n               //button 3 stuff goes here\n                    break;\n\n            }\n    ```", "```java\n    int correctAnswer;\n    Button buttonObjectChoice1;\n    Button buttonObjectChoice2;\n    Button buttonObjectChoice3;\n    ```", "```java\n    //Here we initialize all our variables\n    int partA = 9;\n    int partB = 9;\n    correctAnswer = partA * partB;\n    int wrongAnswer1 = correctAnswer - 1;\n    int wrongAnswer2 = correctAnswer + 1;\n    ```", "```java\n    TextView textObjectPartA = (TextView)findViewById(R.id.textPartA);\n\n    TextView textObjectPartB = (TextView)findViewById(R.id.textPartB);\n\n    buttonObjectChoice1 = (Button)findViewById(R.id.buttonChoice1);\n\n    buttonObjectChoice2 = (Button)findViewById(R.id.buttonChoice2);\n\n    buttonObjectChoice3 = (Button)findViewById(R.id.buttonChoice3);\n\n    ```", "```java\n    @Override\n        public void onClick(View view) {\n            //declare a new int to be used in all the cases\n            int answerGiven=0;\n            switch (view.getId()) {\n\n                case R.id.buttonChoice1:\n                //initialize a new int with the value contained in buttonObjectChoice1\n                //Remember we put it there ourselves previously\n                    answerGiven = Integer.parseInt(\"\" + buttonObjectChoice1.getText());\n\n                    //is it the right answer?\n                    if(answerGiven==correctAnswer) {//yay it's the right answer\n                        Toast.makeText(getApplicationContext(), \"Well done!\", Toast.LENGTH_LONG).show();\n                    }else{//uh oh!\n                        Toast.makeText(getApplicationContext(),\"Sorry that's wrong\", Toast.LENGTH_LONG).show();\n                    }\n                    break;\n    ```", "```java\n                case R.id.buttonChoice2:\n                    //same as previous case but using the next button\n                    answerGiven = Integer.parseInt(\"\" + buttonObjectChoice2.getText());\n                    if(answerGiven==correctAnswer) {\n                        Toast.makeText(getApplicationContext(), \"Well done!\", Toast.LENGTH_LONG).show();\n                    }else{\n                        Toast.makeText(getApplicationContext(),\"Sorry that's wrong\", Toast.LENGTH_LONG).show();\n                    }\n                    break;\n\n                case R.id.buttonChoice3:\n                    //same as previous case but using the next button\n                    answerGiven = Integer.parseInt(\"\" + buttonObjectChoice3.getText());\n                    if(answerGiven==correctAnswer) {\n                        Toast.makeText(getApplicationContext(), \"Well done!\", Toast.LENGTH_LONG).show();\n                    }else{\n                        Toast.makeText(getApplicationContext(),\"Sorry that's wrong\", Toast.LENGTH_LONG).show();\n                    }\n                    break;\n\n            }\n    ```", "```java\ncase R.id.buttonChoice1:\n```", "```java\nanswerGiven = Integer.parseInt(\"\"+ buttonObjectChoice1.getText());\n```", "```java\nif(answerGiven==correctAnswer) {//yay it's the right answer\n  Toast.makeText(getApplicationContext(), \"Well done!\", Toast.LENGTH_LONG).show();\n}else{//uh oh!\n    Toast.makeText(getApplicationContext(),\"Sorry that's wrong\", Toast.LENGTH_LONG).show();\n                }\n```", "```java\nbreak;\n```", "```java\n// setContentView(R.layout.activity_main);\n```", "```java\nString a = \"Hello\";\nString b = \" Vinton Cerf\";\nint c = 55;\na = a + b\nc = c + c + 10;\na = a + c;\nc = c + a;\n```", "```java\nint x = 10;\nint y = 9;\nboolean isTrueOrFalse = false;\nisTrueOrFalse = (((x <=y)||(x == 10))&&((!isTrueOrFalse) || (isTrueOrFalse)));\n```", "```java\npublic boolean shootLazers(int number, string type)\n```", "```java\nprivate void setCoordinates(int x, int y){\n  //code to set coordinates goes here\n}\n```", "```java\n//I like it here\n\nsetCoordinates(4,6);//now I am going off to setCoordinates method\n\n//Phew, I'm back again - code continues here\n```", "```java\nint addAToB(int a, int b){\n  int answer = a + b;\n  return answer;\n}\n```", "```java\nint myAnswer = addAToB(2,4); \n```", "```java\n//Most code can see me\npublic int a;\n\n//Code in other classes can't see me\nprivate string secret = \"Shhh, I am private\";\n```", "```java\nint addAToB(int a, int b){\n  int answer = a + b;\n  return answer;\n}\n```", "```java\nvoid doSomething(){\n  //our code\n\n  //I'm done going back to calling code here\n  //no return is necessary\n}\n```", "```java\nvoid doSomethingElse(){\n  //our code\n\n  //I can do this as long as I don't try and add a value\n  return;\n}\n```", "```java\nvoid doYetAnotherThing(){\n  //some code\n  if(someCondition){\n    //if someCondition is true returning to calling code \n    //before the end of the method body\n    return;\n  }\n  //More code that might or might not get executed\n\n  return;\n  //As I'm at the bottom of the method body \n  //and the return type is void, I'm \n  //really not necessary but I suppose I make it \n  //clear that the method is over.\n}\n\nString joinTogether(String firstName, String lastName){\n  return firstName + lastName;\n}\n```", "```java\n//OK time to call some methods\ndoSomething();\ndoSomethingElse();\ndoYetAnotherThing();\nString fullName = joinTogether(\"Jeff \",\"Minter\")\n//fullName now = Jeff Minter\n//continue with code from here\n```", "```java\nXGHHY78802c(){\n  //code here\n}\n```", "```java\ndoSomeVerySpecificTask(){\n  //code here\n}\n\ngetMySpaceShipHealth(){\n  //code here\n}\n\nstartNewGame(){\n  //code here\n}\n```", "```java\nint addAToB(int a, int b){\n  int answer = a + b;\n  return answer;\n}\n```", "```java\nint returnedAnswer = addAToB(10,5);\n```", "```java\nvoid addToAddressBook(char firstInitial, String lastName, String city, int age){\n  //all the parameters are now living breathing,\n  //declared and initialized variables\n\n  //code to add details to address book goes here\n}\n```", "```java\n//code here\n    //some code\n```", "```java\n      boolean guessANumber(int try1, int try2, int try3){\n      //all the Log.i lines print to the Android console\n      Log.i(\"info\", \"Hi there, I am in the method body\");\n      //prove our parameters have arrived in the method\n      //By printing them in the console\n      Log.i(\"info\", \"try1 = \" + try1);\n      Log.i(\"info\", \"try2 = \" + try2);\n      Log.i(\"info\", \"try3 = \" + try3);\n    ```", "```java\n      //we use the found variable to store our true or false\n      //setting it to false to begin with\n      boolean found = false;\n\n      //Create an object of the Random class so we can use it\n      Random randInt = new Random();\n      //Generate a random number between 0 and 5\n      int randNum = randInt.nextInt(6);\n      //show our random number in the console\n      Log.i(\"info\", \"Our random number = \" + randNum);\n    ```", "```java\n      //Check if any of our guesses are the same as randNum\n      if(try1 == randNum || try2 == randNum || try3 == randNum){\n        found = true;\n        Log.i(\"info\", \"aha!\");\n       }else{\n         Log.i(\"info\", \"hmmm\");\n       }\n\n      return found;\n     }\n    ```", "```java\n    //all the Log.i lines print to the Android console\n    Log.i(\"info\", \"I am in the onCreate method\");\n\n    //Call guessANumber with three values\n    //and if true is returned output - Found it!\n    if(guessANumber( 1,2,3 )) {\n      Log.i(\"info\", \"Found It!\");\n    }else{//guessANumber returned false -didn't find it\n      Log.i (\"info\", \"Can't find it\");\n    }\n\n    //continuing with the rest of the program now\n    Log.i(\"info\", \"Back in onCreate\");\n    ```", "```java\ninfo: I am in the onCreate method\ninfo\ufe55Hi there, I am in the method body\ninfo\ufe55try1 = 1\ninfo\ufe55try2 = 2\ninfo\ufe55try3 = 3\ninfo\ufe55Our random number = 0\ninfo\ufe55hmmm\ninfo\ufe55Can't find it\ninfo\ufe55Back in onCreate\n\n```", "```java\nboolean guessANumber(int try1, int try2, int try3){\n  //all the Log.i lines print to the Android console\n  Log.i(\"info\", \"Hi there, I am in the method body\");\n  //prove our parameters have arrived in the method\n  //By printing them in the console\n  Log.i(\"info\", \"try1 = \" + try1);\n  Log.i(\"info\", \"try2 = \" + try2);\n  Log.i(\"info\", \"try3 = \" + try3);\n```", "```java\n//we use the found variable to store our true or false\n//setting it to false to begin with\nboolean found = false;\n```", "```java\n//Create an object of the Random class so we can use it\nRandom randInt = new Random();\n//Generate a random number between 0 and 5\nint randNum = randInt.nextInt(6);\n//show our random number in the console\nLog.i(\"info\", \"Our random number = \" + randNum);\n```", "```java\n//Check if any of our guesses are the same as randNum\nif(try1 == randNum || try2 == randNum || try3 == randNum){\n```", "```java\nfound = true;\nLog.i(\"info\", \"aha!\");\n```", "```java\n}else{\n  Log.i(\"info\", \"hmmm\");\n}\n```", "```java\n  return found;\n }\n```", "```java\n//all the Log.i lines print to the Android console\nLog.i(\"info\", \"I am in the onCreate method\");\n```", "```java\n//Call guessANumber with three values\n//and if true is returned output - Found it!\nif(guessANumber(1,2,3)){\n  Log.i(\"info\", \"Found It!\");\n  }\n```", "```java\nelse{//guessANumber returned false -didn't find it\n  Log.i (\"info\", \"Can't find it\");\n}\n\n//continuing with the rest of the program now\nLog.i(\"info\", \"Back in onCreate\");\n```", "```java\n    void printStuff(int myInt){\n      Log.i(\"info\", \"This is the int only version\");\n      Log.i(\"info\", \"myInt = \"+ myInt);\n    }\n    ```", "```java\n    void printStuff(String myString){\n      Log.i(\"info\", \"This is the String only version\");\n      Log.i(\"info\", \"myString = \"+ myString);\n    }\n    ```", "```java\n    void printStuff(int myInt, String myString){\n      Log.i(\"info\", \"This is the combined int and String version\");\n      Log.i(\"info\", \"myInt = \"+ myInt);\n      Log.i(\"info\", \"myString = \"+ myString);\n    }\n    ```", "```java\n    //declare and initialize a String and an int\n    int anInt = 10;\n    String aString = \"I am a string\";\n\n    //Now call the different versions of printStuff\n    //The name stays the same, only the parameters vary\n    printStuff(anInt);\n    printStuff(aString);\n    printStuff(anInt, aString);\n    ```", "```java\ninfo\ufe55 This is the int only version\ninfo\ufe55 myInt = 10\ninfo\ufe55 This is the String only version\ninfo\ufe55 myString = I am a string\ninfo\ufe55 This is the combined int and String version\ninfo\ufe55 myInt = 10\ninfo\ufe55 myString = I am a string\n\n```", "```java\nvoid printStuff(int myInt){\n...\n}\n\nvoid printStuff(String myString){\n...\n}\n\nvoid printStuff(int myInt, String myString){\n...\n}\n```", "```java\nprintStuff(anInt);\nprintStuff(aString);\nprintStuff(anInt, aString);\n```", "```java\n    public class GameActivity extends Activity implements View.OnClickListener{\n\n        int correctAnswer;\n        Button buttonObjectChoice1;\n        Button buttonObjectChoice2;\n        Button buttonObjectChoice3;\n        TextView textObjectPartA;\n     TextView textObjectPartB;\n     TextView textObjectScore;\n     TextView textObjectLevel;\n\n     int currentScore = 0;\n     int currentLevel = 1;\n\n    ```", "```java\n    //Here we initialize all our variables\n    int partA = 9;\n    int partB = 9;\n    correctAnswer = partA * partB;\n    int wrongAnswer1 = correctAnswer - 1;\n    int wrongAnswer2 = correctAnswer + 1;\n    ```", "```java\n    //Now we use the setText method of the class on our objects\n    //to show our variable values on the UI elements.\n    textObjectPartA.setText(\"\" + partA);\n    textObjectPartB.setText(\"\" + partA);\n\n    //which button receives which answer, at this stage is arbitrary.\n    buttonObjectChoice1.setText(\"\" + correctAnswer);\n    buttonObjectChoice2.setText(\"\" + wrongAnswer1);\n    buttonObjectChoice3.setText(\"\" + wrongAnswer2);\n    ```", "```java\n    protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            //The next line loads our UI design to the screen\n            setContentView(R.layout.activity_game);\n\n            /*Here we get a working object based on either the button\n              or TextView class and base as well as link our new objects\n              directly to the appropriate UI elements that we created previously*/\n            textObjectPartA = (TextView)findViewById(R.id.textPartA);\n\n            textObjectPartB = (TextView)findViewById(R.id.textPartB);\n\n     textObjectScore = (TextView)findViewById(R.id.textScore);\n\n     textObjectLevel = (TextView)findViewById(R.id.textLevel);\n\n            buttonObjectChoice1 = (Button)findViewById(R.id.buttonChoice1);\n\n            buttonObjectChoice2 = (Button)findViewById(R.id.buttonChoice2);\n\n            buttonObjectChoice3 = (Button)findViewById(R.id.buttonChoice3);\n\n            buttonObjectChoice1.setOnClickListener(this);\n            buttonObjectChoice2.setOnClickListener(this);\n            buttonObjectChoice3.setOnClickListener(this);\n\n    }//onCreate ends here\n    ```", "```java\n    @Override\n        public void onClick(View view) {\n            //declare a new int to be used in all the cases\n            int answerGiven=0;\n            switch (view.getId()) {\n\n                case R.id.buttonChoice1:\n                    //initialize a new int with the value contained in buttonObjectChoice1\n                    //Remember we put it there ourselves previously\n                    answerGiven = Integer.parseInt(\"\" + buttonObjectChoice1.getText());\n\n                    break;\n\n                case R.id.buttonChoice2:\n                    //same as previous case but using the next button\n                    answerGiven = Integer.parseInt(\"\" + buttonObjectChoice2.getText());\n\n                    break;\n\n                case R.id.buttonChoice3:\n                    //same as previous case but using the next button\n                    answerGiven = Integer.parseInt(\"\" + buttonObjectChoice3.getText());\n\n                    break;\n\n            }\n\n        }\n    ```", "```java\n    void setQuestion(){\n    ```", "```java\n    //generate the parts of the question\n    int numberRange = currentLevel * 3;\n    Random randInt = new Random();\n\n    int partA = randInt.nextInt(numberRange);\n    partA++;//don't want a zero value\n\n    int partB = randInt.nextInt(numberRange);\n    partB++;//don't want a zero value\n    ```", "```java\n    correctAnswer = partA * partB;\n    int wrongAnswer1 = correctAnswer-2;\n    int wrongAnswer2 = correctAnswer+2;\n\n    textObjectPartA.setText(\"\"+partA);\n    textObjectPartB.setText(\"\"+partB);\n    ```", "```java\n    //set the multi choice buttons\n    //A number between 0 and 2\n    int buttonLayout = randInt.nextInt(3);\n    switch (buttonLayout){\n\n    case 0:\n    buttonObjectChoice1.setText(\"\"+correctAnswer);\n    buttonObjectChoice2.setText(\"\"+wrongAnswer1);\n    buttonObjectChoice3.setText(\"\"+wrongAnswer2);\n       break;\n\n    case 1:\n\n    buttonObjectChoice2.setText(\"\"+correctAnswer);\n    buttonObjectChoice3.setText(\"\"+wrongAnswer1);\n    buttonObjectChoice1.setText(\"\"+wrongAnswer2);\n       break;\n\n    case 2:\n    buttonObjectChoice3.setText(\"\"+correctAnswer);\n    buttonObjectChoice1.setText(\"\"+wrongAnswer1);\n    buttonObjectChoice2.setText(\"\"+wrongAnswer2);\n       break;\n     }\n\n    }\n    ```", "```java\nint numberRange = currentLevel * 3;\n```", "```java\nint partA = randInt.nextInt(numberRange);\n```", "```java\npartA++;//don't want a zero value\n```", "```java\n    void updateScoreAndLevel(int answerGiven){\n    ```", "```java\n    if(isCorrect(answerGiven)){\n      for(int i = 1; i <= currentLevel; i++){\n        currentScore = currentScore + i;\n       }\n\n       currentLevel++;\n    }\n    ```", "```java\n    else{\n      currentScore = 0;\n      currentLevel = 1;\n    }\n    ```", "```java\n      //Actually update the two TextViews\n      textObjectScore.setText(\"Score: \" + currentScore);\n      textObjectLevel.setText(\"Level: \" + currentLevel);\n    }\n    ```", "```java\nif(isCorrect(answerGiven)){\n```", "```java\nfor(int i = 1; i <= currentLevel; i++){\n  currentScore = currentScore + i;\n}\n\ncurrentLevel++;\n```", "```java\n    boolean isCorrect(int answerGiven){\n    ```", "```java\n    boolean correctTrueOrFalse;\n    if(answerGiven == correctAnswer){//YAY!\n      Toast.makeText(getApplicationContext(), \"Well done!\", Toast.LENGTH_LONG).show();\n       correctTrueOrFalse=true;\n    }else{//Uh-oh!\n        Toast.makeText(getApplicationContext(), \"Sorry\", Toast.LENGTH_LONG).show();\n        correctTrueOrFalse=false;\n    }\n    ```", "```java\n      return correctTrueOrFalse;\n    }\n    ```", "```java\n      setQuestion();\n\n    }//onCreate ends here\n    ```", "```java\n    updateScoreAndLevel(answerGiven);\n    ```", "```java\n    setQuestion();\n    ```", "```java\nint correctAnswer;\nButton buttonObjectChoice1;\nButton buttonObjectChoice2;\nButton buttonObjectChoice3;\nTextView textObjectPartA;\nTextView textObjectPartB;\nTextView textObjectScore;\nTextView textObjectLevel;\n\nint currentScore = 0;\nint currentLevel = 1;\n```", "```java\n    android:screenOrientation=\"portrait\"\n    ```", "```java\n    <activity\n    android:name=\"com.packtpub.mathgamechapter4.app.MainActivity\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\">\n\n    </activity>\n\n    ```", "```java\n    <activity\n    android:name=\"com.packtpub.mathgamechapter4.app.GameActivity\"\n    android:label=\"@string/title_activity_game\"\n    android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\">\n    </activity>\n\n    ```", "```java\nvoid doSomething(){\n  return 4;\n}\n```", "```java\nint x=19;\ndo{\n  x=11;\n  x++;\n}while(x<20)\n```"]