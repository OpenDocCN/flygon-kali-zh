- en: Connecting a Chart Control to SQL Server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将图表控件连接到SQL Server
- en: In this chapter, you will learn about how to drag charts into the page and then
    make them work with some simple tables inside SQL Server through C# as the language
    that connects the page and the database.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何将图表拖放到页面中，然后通过C#作为连接页面和数据库的语言，使其与SQL Server中的一些简单表一起工作。
- en: Placing a chart into the HTML page
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将图表放入HTML页面
- en: Crank up a project and what we will do first is to place a chart in the <html>
    page. Go to Toolbox (*Ctrl* + *Alt* + *X*), enter `char...` in the Search field,
    and drag and drop it below the line that begins with `<form id=...`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 启动一个项目，我们首先要做的是将一个图表放在<html>页面中。转到工具箱（*Ctrl* + *Alt* + *X*），在搜索栏中输入`char...`，然后将其拖放到以`<form
    id=...`开头的行下面。
- en: 'As you can see on your screen, this generates all of the following markup.
    You can leave it as is. It''s sufficient for our purposes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在屏幕上看到的，这生成了所有以下标记。你可以保持不变。对我们的目的来说已经足够了：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can delete the two `<div...` lines and the `<asp:Label ID...` line. We don't
    need them.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以删除两个`<div...`行和`<asp:Label ID...`行。我们不需要它们。
- en: Adding a button to the HTML page
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在HTML页面中添加一个按钮
- en: Next, you need to place a button below the `</asp:Chart>` line. So again, go
    to Toolbox, grab a `Button` control, and drag it in there. Change the text on
    the button to say Load Data. Here, `Load Data` means loading and displaying it
    in the chart.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在`</asp:Chart>`行下面放置一个按钮。再次，转到工具箱，抓取一个`Button`控件，拖放到那里。将按钮上的文本更改为“加载数据”。这里，“加载数据”意味着加载并在图表中显示它。
- en: 'Notice that, when you drag in a chart, the page adds the entire block shown
    as follows, at the top of `System.Web.UI.DataVisualization.Charting`:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当你拖入一个图表时，页面会在`System.Web.UI.DataVisualization.Charting`的顶部添加整个块，如下所示：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Adding a new table to the People database
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在`People`数据库中添加一个新表
- en: 'Now, for the next stage, click on View in the menu bar, and select SQL Server
    Object Explorer. You have to add a new table, so in the `People` database, right-click
    on the Tables folder and select Add New Table... . Your screen should look like
    the one shown in *Figure 20.5.1*:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在下一个阶段，点击菜单栏中的“查看”，选择“SQL Server对象资源管理器”。你需要添加一个新表，所以在`People`数据库中，右键点击“表”文件夹，选择“添加新表...”。你的屏幕应该看起来像*图20.5.1*中所示的样子：
- en: '![](img/e4839e3b-46f3-4c0b-99d8-8182a069e907.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4839e3b-46f3-4c0b-99d8-8182a069e907.png)'
- en: 'Figure 20.5.1: A blank new table'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.1：一个空白的新表
- en: Next, type `XValues` in the `Id` field, and then click in the Data Type field.
    Start to type `decimal`, and notice that `decimal(18,0)` shows up automatically.
    Now change this to `(18,3)`. This simply means a field that is 18 wide and has
    3 decimal places; that is, it's a total of 18 wide with 3 to the right and 15
    to the left for a total of 18 altogether. The Allow Nulls box should be checked
    for this field. It's the same thing for `YValues`. Imagine that we've done an
    experiment, and we've measured some quantities. So, enter `YValues` in the `Id`
    field, `decimal(18,3)` in the data type field, and leave the Allow Nulls box checked
    for this field.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在“Id”字段中输入`XValues`，然后点击数据类型字段。开始输入`decimal`，注意到`decimal(18,0)`会自动显示出来。现在将其改为`(18,3)`。这意味着一个宽度为18且有3位小数的字段；也就是说，总共有18位，右边3位，左边15位。对于这个字段，应该勾选“允许空值”。对于`YValues`也是一样。假设我们做了一个实验，测量了一些数量。所以，在“Id”字段中输入`YValues`，在数据类型字段中输入`decimal(18,3)`，并且对于这个字段勾选“允许空值”。
- en: Next, right-click on Id and select Set Primary Key.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，右键点击“Id”，选择“设置为主键”。
- en: Enabling auto-incrementation
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用自动递增
- en: 'Next, you want to enable auto-incrementation, so specifically that means the
    following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你想要启用自动递增，具体来说就是以下内容：
- en: 'First, rename the table to `ExperimentValues`, as follows:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将表重命名为`ExperimentValues`，如下所示：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After `PRIMARY KEY`, put `identity(1,1)`, as follows:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“主键”后面，输入`identity(1,1)`，如下所示：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here, `identity(1,1)`, as you learned previously, means that this field will
    grow by 1, beginning from 1, every time you add a new record. So, this is the
    structure of our table, as shown in *Figure 20.5.2*:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`identity(1,1)`，正如你之前学到的，意味着这个字段将从1开始每次添加新记录时增加1。所以，这是我们表的结构，如*图20.5.2*所示：
- en: '![](img/636d8841-b783-413f-a010-3581bca71771.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/636d8841-b783-413f-a010-3581bca71771.png)'
- en: 'Figure 20.5.2: The structure of our table for this chapter'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.2：本章表的结构
- en: Adding values to the new table
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向新表中添加值
- en: Next, click on the Update button. Click on Update Database in the dialog box
    that appears.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击“更新”按钮。在弹出的对话框中点击“更新数据库”。
- en: 'Now, you have `ExperimentValues`. Right-click on it, select View Data, and
    let''s add some values, as shown in *Figure 20.5.3*:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你有了`ExperimentValues`。右键点击它，选择“查看数据”，然后让我们添加一些数值，如*图20.5.3*所示：
- en: '![](img/8330810b-5aab-4cf0-a771-e3392b57c3d9.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8330810b-5aab-4cf0-a771-e3392b57c3d9.png)'
- en: 'Figure 20.5.3: Values added to the ExperimentValues table'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.3：添加到ExperimentValues表中的值
- en: Now, we've got some values in a table. Notice again that the Id field is auto
    incremented—it begins at 1 and grows by 1 every time you add a new record. Close
    the table windows and go back into `Default.aspx.cs`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们在表中有了一些数值。再次注意到，“Id”字段是自动递增的——它从1开始，每添加一条新记录就增加1。关闭表窗口，回到`Default.aspx.cs`。
- en: 'Now, double-click on the Design button, and a little chart appears, as shown
    in *Figure 20.5.4*:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，双击“设计”按钮，会出现一个小图表，如*图20.5.4*所示：
- en: '![](img/dfdf6394-7e3a-48ee-b807-a09ed41bd675.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfdf6394-7e3a-48ee-b807-a09ed41bd675.png)'
- en: 'Figure 20.5.4: Theoretical preview of the data in the ExperimentValues table'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.4：实验值表中数据的理论预览
- en: Coding the project
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编码项目
- en: 'This chart does not represent the real data yet. It is just a theoretical preview.
    So, double-click on the Load Data button, which brings up the event handler in
    `Default.aspx.cs`. Delete the `Page_Load` stub. We''ll start with the code shown
    in *Figure 20.5.5* for this project:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表还不代表真实的数据。这只是一个理论预览。所以，双击“加载数据”按钮，这会打开`Default.aspx.cs`中的事件处理程序。删除`Page_Load`存根。我们将从本项目的代码开始，如*图20.5.5*所示：
- en: '![](img/7c6ccd51-4e62-4eb7-a71b-640dc8d7ddf2.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7c6ccd51-4e62-4eb7-a71b-640dc8d7ddf2.png)'
- en: 'Figure 20.5.5: The starting code for this project'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.5：此项目的起始代码
- en: Adding a namespace
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加命名空间
- en: 'The first thing is you have to add a namespace. So, go to the top of the file,
    and under `using System`, enter the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您必须添加一个命名空间。因此，转到文件顶部，在`using System`下输入以下内容：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This line is used for connections and commands.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此行用于连接和命令。
- en: Building the connection string
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建连接字符串
- en: 'In the next stage, you need the connection string. So, on the following line
    you start by entering `string connString =`, followed by the `@` symbol to make
    it a verbatim string, and then you put the `""` symbols. Now, to get the connection
    string, do the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一阶段，您需要连接字符串。因此，在下一行开始时，输入`string connString =`，然后输入`@`符号使其成为逐字字符串，然后放置`""`符号。现在，要获取连接字符串，请执行以下操作：
- en: Click on View in the menu bar, and select SQL Server Object Explorer.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击菜单栏中的“查看”，然后选择“SQL Server对象资源管理器”。
- en: Right-click on the People database, and select Properties.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击People数据库，然后选择属性。
- en: In the Properties pane, double-click on Connection String to select it with
    its long description.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性窗格中，双击连接字符串以选择其长描述。
- en: Then, right-click on the long description and copy it.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，右键单击长描述并将其复制。
- en: Paste the description between the set of `""` symbols.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`""`符号集之间粘贴描述。
- en: 'The connection string line should then look like the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，连接字符串行应如下所示：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This is the connection string specific to your computer. You can now close the
    SQL Server Object Explorer and Properties panes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是特定于您计算机的连接字符串。您现在可以关闭SQL Server对象资源管理器和属性窗格。
- en: 'Now, enter the following beneath this line:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在此行下方输入以下内容：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Writing a SQL query
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写SQL查询
- en: 'Next, you''ll make the `commandText` variable. So, between a set of curly braces,
    enter the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将创建`commandText`变量。因此，在一对大括号之间，输入以下内容：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: To define the text, you have to write the actual SQL query, so you type `select
    XValues, YValues from dbo.ExperimentValues`. This will select `XValues` and `YValues`
    from those two column names in the `ExperimentValues` table.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义文本，您必须编写实际的SQL查询，因此输入`select XValues, YValues from dbo.ExperimentValues`。这将从`ExperimentValues`表中的这两个列名中选择`XValues`和`YValues`。
- en: Making the command object
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建命令对象
- en: 'Now, you need to make the command object, so enter the following next:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您需要创建命令对象，因此接下来输入以下内容：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here you pass in the two relevant quantities, the two arguments, so specifically,
    `(commandText, conn)`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您传入两个相关数量，两个参数，具体来说是`(commandText, conn)`。
- en: Opening the connection and making a SQL data reader
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打开连接并创建SQL数据读取器
- en: 'In the next stage, you will open a connection, so enter the following below
    the preceding line:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一阶段，您将打开一个连接，因此在上一行下方输入以下内容：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then you''ll make a SQL data reader, so enter the following next:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您将创建一个SQL数据读取器，因此接下来输入以下内容：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This line will get the data that we need.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此行将获取我们需要的数据。
- en: 'Now that you''ve done all of that, type the following below the preceding line:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经完成了所有这些，接下来在上一行下方输入以下内容：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note that we include the name of the column, `XValues`, which is to serve as
    the labeling for the *x*-axis. So, the *x*-axis is the horizontal axis.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们包括列名`XValues`，它将用作*x*轴的标签。因此，*x*轴是水平轴。
- en: Running the program
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行程序
- en: This is the heart of the application. Crank it up in your browser, and click
    on the Load Data button.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这是应用程序的核心。在浏览器中启动它，并单击“加载数据”按钮。
- en: '![](img/b0f361cf-fdc3-4f97-b051-84ee1beb07ee.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0f361cf-fdc3-4f97-b051-84ee1beb07ee.png)'
- en: 'Figure 20.5.6: Display of The actual data from the ExperimentValues table'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.6：来自ExperimentValues表的实际数据的显示
- en: Here's the data, as shown in *Figure 20.5.6*. It has the values along the horizontal
    and vertical axes.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这是数据，如*图20.5.6*所示。它具有沿水平和垂直轴的值。
- en: Modifying the program to display the Y values
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改程序以显示Y值
- en: 'If you wanted to, just to show you how easy it is, you could change the following
    line to the Y values. In other words, you can flip them around:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，只是为了向您展示它有多容易，您可以将以下行更改为Y值。换句话说，您可以将它们颠倒过来：
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, crank it up in your browser, and click on the Load Data button once again.
    The results are shown in *Figure 20.5.7*:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在浏览器中启动它，并再次单击“加载数据”按钮。结果显示在*图20.5.7*中：
- en: '![](img/112b2f60-6943-4960-bde5-6d5d6a9416f0.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/112b2f60-6943-4960-bde5-6d5d6a9416f0.png)'
- en: 'Figure 20.5.7: Chart of the Values from the ExperimentValues table'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图20.5.7：来自ExperimentValues表的值的图表
- en: Now you see that it looks very different. So that's how you can make simple
    charts. Now save this. This is the whole application.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您看到它看起来非常不同。这就是您如何制作简单的图表。现在保存这个。这就是整个应用程序。
- en: Chapter review
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 章节回顾
- en: 'Let''s review what we did: you built the connection string and finished making
    the connection inside the `using (SqlConnection conn...` line so that the connection
    could be properly disposed of. Then, you wrote the query string, made the command
    object, opened a connection, and executed the reader. Finally, you used `DataBind`
    to bind the database table to the charts so that you could display the results.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们做了什么：您构建了连接字符串并完成了在`using (SqlConnection conn...`行内建立连接，以便可以正确处理连接。然后，您编写了查询字符串，创建了命令对象，打开了连接并执行了读取器。最后，您使用`DataBind`将数据库表绑定到图表，以便可以显示结果。
- en: 'The complete version of the `Default.aspx.cs` file for this chapter, including
    comments, is shown in the following code block:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的`Default.aspx.cs`文件的完整版本，包括注释，显示在以下代码块中：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Summary
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about dragging charts into the page and then making
    them work with some simple tables inside SQL Server through C# as the language
    that connects the page and the database. You placed a chart into the HTML page,
    added a new table to the `People` database, enabled auto-incrementation, added
    values to the new table, added a namespace, built a connection string, wrote a
    SQL query, opened the connection and made a SQL data reader, ran the program,
    and finally modified it to display the Y values.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何将图表拖入页面，然后通过C#作为连接页面和数据库的语言，使它们与SQL Server中的一些简单表一起工作。您将图表放入HTML页面，向`People`数据库添加了一个新表，启用了自动递增，向新表添加了值，添加了命名空间，构建了连接字符串，编写了SQL查询，打开了连接并创建了一个SQL数据读取器，运行了程序，最后修改它以显示Y值。
- en: In the next chapter, you will learn how to use LINQ together with SQL and SQL
    Server.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何将LINQ与SQL和SQL Server一起使用。
