["```js\nclass LoginModel{\n  UserName: string;\n  Password: string;\n  RememberMe: bool;\n  LoginSuccessful: bool;\n  LoginErrorMessage: string;\n}\n```", "```js\nclass LoginController {\n  constructor(model) {\n    this.model = model;\n  }\n  Login(userName, password, rememberMe) {\n    this.model.UserName = userName;\n    this.model.Password = password;\n    this.model.RememberMe = rememberMe;\n    if (this.checkPassword(userName, password))\n      this.model.LoginSuccessful;\n    else {\n      this.model.LoginSuccessful = false;\n      this.model.LoginErrorMessage = \"Incorrect username or password\";\n    }\n  }\n};\n```", "```js\nclass CreateCastleView {\n  constructor(document, controller, model, validationResult) {\n    this.document = document;\n    this.controller = controller;\n    this.model = model;\n    this.validationResult = validationResult;\n    this.document.getElementById(\"saveButton\").addEventListener(\"click\", () => this.saveCastle());\n    this.document.getElementById(\"castleName\").value = model.name;\n    this.document.getElementById(\"description\").value = model.description;\n    this.document.getElementById(\"outerWallThickness\").value = model.outerWallThickness;\n    this.document.getElementById(\"numberOfTowers\").value = model.numberOfTowers;\n    this.document.getElementById(\"moat\").value = model.moat;\n  }\n  saveCastle() {\n    var data = {\n      name: this.document.getElementById(\"castleName\").value,\n      description: this.document.getElementById(\"description\").value,\n      outerWallThickness: this.document.getElementById(\"outerWallThickness\").value,\n      numberOfTowers: this.document.getElementById(\"numberOfTowers\").value,\n      moat: this.document.getElementById(\"moat\").value\n    };\n    this.controller.saveCastle(data);\n  }\n}\n```", "```js\nclass ValidationResult{\n  public IsValid: boolean;\n  public Errors: Array<String>;\n  public constructor(){\n    this.Errors = new Array<String>();\n  }\n}\n```", "```js\nclass Controller {\n  constructor(document) {\n    this.document = document;\n  }\n  createCastle() {\n    this.setView(new CreateCastleView(this.document, this));\n  }\n  saveCastle(data) {\n    var validationResult = this.validate(data);\n    if (validationResult.IsValid) {\n      //save castle to storage\n      this.saveCastleSuccess(data);\n    }\n    else {\n      this.setView(new CreateCastleView(this.document, this, data, validationResult));\n    }\n  }\n  saveCastleSuccess(data) {\n    this.setView(new CreateCastleSuccess(this.document, this, data));\n  }\n  setView(view) {\n    //send the view to the browser\n  }\n  validate(model) {\n    var validationResult = new validationResult();\n    if (!model.name || model.name === \"\") {\n      validationResult.IsValid = false;\n      validationResult.Errors.push(\"Name is required\");\n    }\n    return;\n  }\n}\n```", "```js\nclass Model {\n  constructor(name, description, outerWallThickness, numberOfTowers, moat) {\n    this.name = name;\n    this.description = description;\n    this.outerWallThickness = outerWallThickness;\n    this.numberOfTowers = numberOfTowers;\n    this.moat = moat;\n  }\n}\n```", "```js\nclass CreateCastleView {\n  constructor(document, presenter) {\n    this.document = document;\n    this.presenter = presenter;\n    this.document.getElementById(\"saveButton\").addEventListener(\"click\", this.saveCastle);\n  }\n  setCastleName(name) {\n    this.document.getElementById(\"castleName\").value = name;\n  }\n  getCastleName() {\n    return this.document.getElementById(\"castleName\").value;\n  }\n  setDescription(description) {\n    this.document.getElementById(\"description\").value = description;\n  }\n  getDescription() {\n    return this.document.getElementById(\"description\").value;\n  }\n  setOuterWallThickness(outerWallThickness) {\n    this.document.getElementById(\"outerWallThickness\").value = outerWallThickness;\n  }\n  getOuterWallThickness() {\n    return this.document.getElementById(\"outerWallThickness\").value;\n  }\n  setNumberOfTowers(numberOfTowers) {\n    this.document.getElementById(\"numberOfTowers\").value = numberOfTowers;\n  }\n  getNumberOfTowers() {\n    return parseInt(this.document.getElementById(\"numberOfTowers\").value);\n  }\n  setMoat(moat) {\n    this.document.getElementById(\"moat\").value = moat;\n  }\n  getMoat() {\n    return this.document.getElementById(\"moat\").value;\n  }\n  setValid(validationResult) {\n  }\n  saveCastle() {\n    this.presenter.saveCastle();\n  }\n}\n```", "```js\nclass CreateCastlePresenter {\n  constructor(document) {\n    this.document = document;\n    this.model = new CreateCastleModel();\n    this.view = new CreateCastleView(document, this);\n  }\n  saveCastle() {\n    var data = {\n      name: this.view.getCastleName(),\n      description: this.view.getDescription(),\n      outerWallThickness: this.view.getOuterWallThickness(),\n      numberOfTowers: this.view.getNumberOfTowers(),\n      moat: this.view.getMoat()\n    };\n    var validationResult = this.validate(data);\n    if (validationResult.IsValid) {\n      //write to the model\n      this.saveCastleSuccess(data);\n    }\n    else {\n      this.view.setValid(validationResult);\n    }\n  }\n  saveCastleSuccess(data) {\n    //redirect to different presenter\n  }\n  validate(model) {\n    var validationResult = new validationResult();\n    if (!model.name || model.name === \"\") {\n      validationResult.IsValid = false;\n      validationResult.Errors.push(\"Name is required\");\n    }\n    return;\n  }\n}\n```", "```js\nvar CreateCastleView = (function () {\n  function CreateCastleView(document, viewModel) {\n    this.document = document;\n    this.viewModel = viewModel;\n    var _this = this;\n    this.document.getElementById(\"saveButton\").addEventListener(\"click\", function () {\n    return _this.saveCastle();\n  });\n  this.document.getElementById(\"name\").addEventListener(\"change\", this.nameChangedInView);\n  this.document.getElementById(\"description\").addEventListener(\"change\", this.descriptionChangedInView);\n  this.document.getElementById(\"outerWallThickness\").addEventListener(\"change\", this.outerWallThicknessChangedInView);\n  this.document.getElementById(\"numberOfTowers\").addEventListener(\"change\", this.numberOfTowersChangedInView);\n  this.document.getElementById(\"moat\").addEventListener(\"change\",this.moatChangedInView);\n}\nCreateCastleView.prototype.nameChangedInView = function (name) {\n  this.viewModel.nameChangedInView(name);\n};\n\nCreateCastleView.prototype.nameChangedInViewModel = function (name) {\n  this.document.getElementById(\"name\").value = name;\n};\n//snipped more of the same\nCreateCastleView.prototype.isValidChangedInViewModel = function (validationResult) {\n  this.document.getElementById(\"validationWarning\").innerHtml = validationResult.Errors;\n  this.document.getElementById(\"validationWarning\").className = \"visible\";\n};\nCreateCastleView.prototype.saveCastle = function () {\n  this.viewModel.saveCastle();\n};\nreturn CreateCastleView;\n})();\nCastleDesign.CreateCastleView = CreateCastleView;\n```", "```js\nvar CreateCastleViewModel = (function () {\n  function CreateCastleViewModel(document) {\n    this.document = document;\n    this.model = new CreateCastleModel();\n    this.view = new CreateCastleView(document, this);\n  }\n  CreateCastleViewModel.prototype.nameChangedInView = function (name) {\n    this.name = name;\n  };\n\n  CreateCastleViewModel.prototype.nameChangedInViewModel = function (name) {\n    this.view.nameChangedInViewModel(name);\n  };\n  //snip\n  CreateCastleViewModel.prototype.saveCastle = function () {\n    var validationResult = this.validate();\n    if (validationResult.IsValid) {\n      //write to the model\n      this.saveCastleSuccess();\n    } else {\n      this.view.isValidChangedInViewModel(validationResult);\n    }\n  };\n\n  CreateCastleViewModel.prototype.saveCastleSuccess = function () {\n    //do whatever is needed when save is successful.\n    //Possibly update the view model\n  };\n\n  CreateCastleViewModel.prototype.validate = function () {\n    var validationResult = new validationResult();\n    if (!this.name || this.name === \"\") {\n      validationResult.IsValid = false;\n        validationResult.Errors.push(\"Name is required\");\n    }\n    return;\n  };\n  return CreateCastleViewModel;\n})();\n```", "```js\nvar CreateCastleModel = (function () {\n  function CreateCastleModel(name, description, outerWallThickness, numberOfTowers, moat) {\n    this.name = name;\n    this.description = description;\n    this.outerWallThickness = outerWallThickness;\n    this.numberOfTowers = numberOfTowers;\n    this.moat = moat;\n  }\n  return CreateCastleModel;\n})();\n```", "```js\nvar CreateCastleModel = (function () {\n  function CreateCastleModel(name, description, outerWallThickness, numberOfTowers, moat) {\n    this.name = ko.observable(name);\n    this.description = ko.observable(description);\n    this.outerWallThickness = ko.observable(outerWallThickness);\n    this.numberOfTowers = ko.observable(numberOfTowers);\n    this.moat = ko.observable(moat);\n  }\n  return CreateCastleModel;\n})();\n```", "```js\nvar model = new CreateCastleModel();\nmodel.name(\"Winterfell\"); //set\nmodel.name(); //get\n```", "```js\nvar model = { };\nObject.observe(model, function(changes){\n  changes.forEach(function(change) {\n    console.log(\"A \" + change.type + \" occured on \" +  change.name + \".\");\n    if(change.type==\"update\")\n      console.log(\"\\tOld value was \" + change.oldValue );\n  });\n});\nmodel.item = 7;\nmodel.item = 8;\ndelete model.item;\n```"]