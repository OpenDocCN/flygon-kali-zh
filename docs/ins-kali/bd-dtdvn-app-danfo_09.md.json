["```js\nlet data = { 'A': [ 'foo', 'bar', 'foo', 'bar',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'foo', 'bar', 'foo', 'foo' ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'C': [ 1, 3, 2, 4, 5, 2, 6, 7 ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'D': [ 3, 2, 4, 1, 5, 6, 7, 8 ] };\nlet df = new dfd.DataFrame(data);\nlet group_df = df.groupby([ \"A\"]);\n```", "```js\ngroup_df.mean().print()\n```", "```js\nlet col_c = group_df.col(['C'])\ncol_c.sum().print()\n```", "```js\nlet col_d = group_df.col(['D'])\ncol_d.count().print()\n```", "```js\nlet data = { 'A': [ 'foo', 'bar', 'foo', 'bar',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'foo', 'bar', 'foo', 'foo' ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0' B': [ 'one', 'one', 'two', 'three',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'two', 'two', 'one', 'three' ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'C': [ 1, 3, 2, 4, 5, 2, 6, 7 ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'D': [ 3, 2, 4, 1, 5, 6, 7, 8 ] };\nlet df = new dfd.DataFrame(data);\nlet group_df = df.groupby([ \"A\", \"B\"]);\n```", "```js\ngroup_df.mean().print()\n```", "```js\nlet col_c = group_df.col(['C']);\ncol_c.sum().print();\n```", "```js\nlet group_df = df.groupby([ \"A\"]);\nconsole.log(group_df.data_tensors)\n```", "```js\n{\n\u00a0\u00a0foo: DataFrame,\n\u00a0\u00a0bar: DataFrame\n}\n```", "```js\nlet grouped_data = group_df.data_tensors;\nfor (let key in grouped_data) {\n\u00a0\u00a0grouped_data[key].print();\n}\n```", "```js\nlet group_df = df.groupby([ \"A\", \"B\"]); \nlet grouped_data = group_df.data_tensors;\nfor (let key in grouped_data) {\n\u00a0\u00a0let key_data = grouped_data[key];\n\u00a0\u00a0for (let key2 in key_data) {\n\u00a0\u00a0\u00a0\u00a0grouped_data[key][key2].print();\n\u00a0\u00a0}\n}\n```", "```js\n    {\n    \u00a0\u00a0foo : {\n    \u00a0\u00a0\u00a0\u00a0one: DataFrame,\n    \u00a0\u00a0\u00a0\u00a0two: DataFrame,\n    \u00a0\u00a0\u00a0\u00a0three: DataFrame\n    \u00a0\u00a0},\n    \u00a0\u00a0bar: {\n    \u00a0\u00a0\u00a0\u00a0one: DataFrame,\n    \u00a0\u00a0\u00a0\u00a0two: DataFrame,\n    \u00a0\u00a0\u00a0\u00a0three: DataFrame\n    \u00a0\u00a0}\n    }\n    ```", "```js\nlet group_df = df.groupby([ \"A\"]);\ngroup_df.get_groups([\"foo\"]).print()\n```", "```js\ngroup_df.get_groups([\"bar\"]).print()\n```", "```js\nlet group_df = df.groupby([ \"A\", \"B\"]);\ngroup_df.get_groups([\"foo\",\"one\"]).print()\n```", "```js\ngroup_df.get_groups([\"bar\",\"two\"]).print()\n```", "```js\nlet group_df = df.groupby([ \"A\"]);\nconst add = (x) => {\n\u00a0\u00a0return x.add(2);\n};\ngroup_df.apply(add).print();\n```", "```js\nlet data = { 'A': [ 'foo', 'bar', 'foo', 'bar',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'foo', 'bar', 'foo', 'foo' ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'B': [ 'one', 'one', 'two', 'three',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'two', 'two', 'one', 'three' ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'C': [ 1, 3, 2, 4, 5, 2, 6, 7 ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'D': [ 3, 2, 4, 1, 5, 6, 7, 8 ] };\nlet df = new DataFrame(data);\nlet group_df = df.groupby([ \"A\", \"B\"]);\n\nconst subMin = (x) => {\n\u00a0\u00a0return x.sub(x.min());\n};\n\ngroup_df.apply(subMin).print();\n```", "```js\nconst subMin = (x) => {\n\u00a0\u00a0if (x.values.length > 1) {\n\u00a0\u00a0\u00a0\u00a0return x.sub(x.min());\n\u00a0\u00a0} else {\n\u00a0\u00a0\u00a0\u00a0return x;\n\u00a0\u00a0}\n};\n\ngroup_df.apply(subMin).print();\n```", "```js\nlet data = { 'A': [ 'foo', 'bar', 'foo', 'bar',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'foo', 'bar', 'foo', 'foo' ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'C': [ 1, 3, 2, 4, 5, 2, 6, 7 ],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'D': [ 3, 2, 4, 1, 5, 6, 7, 8 ] };\nlet df = new DataFrame(data);\nlet group_df = df.groupby([ \"A\"]);\n\n// (x - x.mean()) / x.std()\nconst norm = (x) => {\n\u00a0\u00a0return x.sub(x.mean()).div(x.std());\n};\n\ngroup_df.apply(norm).print();\n```", "```js\nlet data = { 'A': [ 'foo', 'bar', 'foo', 'bar',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'foo', 'bar', 'foo', 'foo' ],\n\u00a0\u00a0\u00a0\u00a0'C': [ 1, 3, 2, 4, 5, 2, 6, 7 ],\n\u00a0\u00a0\u00a0\u00a0'D': [ 3, 2, 4, 1, 5, 6, 7, 8 ] };\nlet df = new DataFrame(data);\nlet group_df = df.groupby([ \"A\"]);\n\ngroup_df.agg({ C:\"mean\", D: \"count\" }).print();\n```", "```js\nlet data = { 'A': [ 'foo', 'bar', 'foo', 'bar',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'foo', 'bar', 'foo', 'foo' ],\n\u00a0\u00a0\u00a0\u00a0'B': [ 'one', 'one', 'two', 'three',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'two', 'two', 'one', 'three' ],\n\u00a0\u00a0\u00a0\u00a0'C': [ 1, 3, 2, 4, 5, 2, 6, 7 ],\n\u00a0\u00a0\u00a0\u00a0'D': [ 3, 2, 4, 1, 5, 6, 7, 8 ] };\nlet df = new DataFrame(data);\nlet group_df = df.groupby([ \"A\", \"B\"]);\n\ngroup_df.agg({ C:\"mean\", D: \"count\" }).print();\n```", "```js\nconst dfd = require('danfojs-node')\nasync function analysis(){\n\u00a0\u00a0const df = dfd.read_csv(\"titanic.csv\")\n\u00a0\u00a0df.head().print()\n}\nanalysis()\n```", "```js\nconst dfd = require('danfojs-node')\nasync function analysis(){\n\u00a0\u00a0const df = dfd.read_csv(\"titanic.csv\")\n\u00a0\u00a0df.head().print()\n\n\u00a0\u00a0//groupby Sex column\n\u00a0\u00a0const sex_df = df.groupby([\"Sex\"]).col([\"Survived\"]).mean()\n\u00a0\u00a0sex_df.head().print()\n\n\u00a0\u00a0//groupby Pclass column\n\u00a0\u00a0const pclass_df = df.groupby([\"Pclass\"]).col([\"Survived\"]).mean()\n\u00a0\u00a0pclass_df.head().print()\n}\nanalysis()\n```"]