- en: Chapter 1. Getting Started with Jasmine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 使用Jasmine入门
- en: It is an exciting time to be a JavaScript developer; technologies have matured,
    web browsers are more standardized, and there are new things to play with every
    day. JavaScript has become an established language, and the Web is the true open
    platform of today. We've seen the rise of single-page web applications, the proliferation
    of **Model View Controller** (**MVC**) frameworks, such as Backbone.js and AngularJS,
    the use of JavaScript on the server with Node.js, and even mobile applications
    created entirely with HTML, JavaScript, and CSS using technologies such as PhoneGap.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 成为JavaScript开发人员是一个令人兴奋的时刻；技术已经成熟，Web浏览器更加标准化，每天都有新的东西可以玩。JavaScript已经成为一种成熟的语言，而Web是当今真正开放的平台。我们已经看到单页Web应用的兴起，**模型视图控制器**（**MVC**）框架的大量使用，如Backbone.js和AngularJS，使用Node.js在服务器上使用JavaScript，甚至使用诸如PhoneGap等技术完全使用HTML、JavaScript和CSS创建的移动应用程序。
- en: From its humble beginnings with handling HTML forms, to the massive applications
    of today, the JavaScript language has come very far, and with it, a number of
    tools have matured to ensure that you can have the same level of quality with
    it that you have with any other language.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从处理HTML表单的谦虚开始，到今天的大型应用程序，JavaScript语言已经走了很远的路，随之而来的是一系列成熟的工具，以确保你在使用它时能够达到与其他语言相同的质量水平。
- en: This book is about the tools that keep you in control of your JavaScript development.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是关于让你控制JavaScript开发的工具。
- en: JavaScript – the bad parts
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript - 不好的部分
- en: There are many complications when dealing with client JavaScript code; the obvious
    one, is that you cannot control the client's runtime. While on the server, you
    can run a specific version of your Node.js server, you can't oblige your clients
    to run the latest version of Chrome or Firefox.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 处理客户端JavaScript代码时会遇到许多复杂问题；显而易见的是，你无法控制客户端的运行时。在服务器上，你可以运行特定版本的Node.js服务器，但你无法强迫客户端运行最新版本的Chrome或Firefox。
- en: The JavaScript language is defined by the ECMAScript specification; therefore,
    each browser can have its own implementation of a runtime, which means there could
    be small differences or bugs between them.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript语言由ECMAScript规范定义；因此，每个浏览器都可以有自己的运行时实现，这意味着它们之间可能存在一些小的差异或错误。
- en: Besides that, you have issues with the language itself. Brendan Eich developed
    JavaScript in just 10 days, under a lot of management pressure at Netscape. Although
    it got itself right in its simplicity, first-class functions, and object prototypes,
    it also introduced some problems with the attempt to make the language malleable
    and allow it to evolve.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还会遇到语言本身的问题。Brendan Eich在Netscape受到很大的管理压力下，仅用10天时间开发了JavaScript。尽管它在简洁性、一流函数和对象原型方面做得很好，但它也在试图使语言具有可塑性并允许其发展的过程中引入了一些问题。
- en: 'Every JavaScript object is mutable; this means that there is nothing you can
    do to prevent a module from overwriting pieces of other modules. The following
    code illustrates how simple it is to overwrite the global `console.log` function:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每个JavaScript对象都是可变的；这意味着你无法阻止一个模块覆盖其他模块的部分。以下代码说明了覆盖全局`console.log`函数有多么简单：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This was a conscious decision on the language design; it allows developers to
    tinker and add missing functionality to the language. But given such power, it
    is relatively easy to make a mistake.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是语言设计上的一个有意识的决定；它允许开发人员对语言进行调整并添加缺失的功能。但是在拥有这样的权力的同时，很容易犯错。
- en: Version 5 of the ECMA specification introduced the `Object.seal` function, which
    prevents further changes on any object once called. But its current support is
    not widespread; Internet Explorer, for example, only implemented it on its version
    9.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ECMA规范的第5版引入了`Object.seal`函数，一旦调用就可以防止对任何对象的进一步更改。但它目前的支持并不广泛；例如，Internet Explorer只在其第9版上实现了它。
- en: Another problem, is with how JavaScript deals with type. In other languages,
    an expression like `'1' + 1` would probably raise an error; in JavaScript, due
    to some non-intuitive type coercion rules, the aforementioned code results in
    `'11'`. But the main problem is in its inconsistency; on multiplication, a string
    is converted into a number, so `'3' * 4`, is actually `12`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题是JavaScript处理类型的方式。在其他语言中，像`'1' + 1`这样的表达式可能会引发错误；在JavaScript中，由于一些不直观的类型强制转换规则，上述代码的结果是`'11'`。但主要问题在于它的不一致性；在乘法运算中，字符串被转换为数字，所以`'3'
    * 4`实际上是`12`。
- en: 'This can lead to some hard-to-find problems on big expressions. Suppose you
    have some data coming from a server, and although you are expecting numbers, one
    value came as a string:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能导致在大型表达式上出现一些难以发现的问题。假设你有一些来自服务器的数据，虽然你期望是数字，但一个值却是字符串：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The resulting value of the preceding example is `'1212'`, a string.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 前面示例的结果值是`'1212'`，一个字符串。
- en: These are just two common problems faced by developers. Throughout the book,
    you are going to apply best practices and write tests to guarantee that you don't
    fall into these, and other, pitfalls.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是开发人员面临的两个常见问题。在整本书中，你将应用最佳实践并编写测试，以确保你不会陷入这些和其他陷阱。
- en: Jasmine and behavior-driven development
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jasmine和行为驱动开发
- en: Jasmine is a little **behavior-driven development** (BDD) test framework created
    by the developers at Pivotal Labs, to allow you to write automated JavaScript
    unit tests.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Jasmine是由Pivotal Labs的开发人员创建的一个小型**行为驱动开发**（BDD）测试框架，允许你编写自动化的JavaScript单元测试。
- en: But before we can go any further, first we need to get some fundamentals right,
    starting with what a test unit is.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们继续之前，首先我们需要搞清楚一些基本知识，从测试单元开始。
- en: A test unit is a piece of code that tests a functionality unit of the application
    code. But sometimes, it can be tricky to understand what a functionality unit
    can be, so for that reason, Dan North came up with a solution in the form of BDD,
    which is a rethink of **test-driven development** (**TDD**).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 测试单元是测试应用程序代码功能单元的一段代码。但有时，理解功能单元是什么可能会有些棘手，因此，为此，Dan North提出了一种解决方案，即BDD，这是对**测试驱动开发**（**TDD**）的重新思考。
- en: In traditional unit testing practice, the developer is left with loose guidelines
    on how to start the process of testing, what to test, how big a test should be,
    or even how to call a test.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的单元测试实践中，开发人员在如何开始测试过程、要测试什么、测试的规模有多大，甚至如何调用测试等方面都没有明确的指导。
- en: To fix these problems, Dan took the concept of **user stories** from the standard
    agile construct, as a model on how to write tests.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，丹从标准的敏捷构造中引入了**用户故事**的概念，作为编写测试的模型。
- en: 'For example, a music player application could have an acceptance criterion
    such as:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，音乐播放器应用程序可能有一个验收标准，如下所示：
- en: '**Given** a player, **when** the song has been paused, **then** it should indicate
    that the song is currently paused.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**假设**有一个播放器，**当**歌曲被暂停时，**然后**它应该指示歌曲当前是暂停状态。'
- en: 'As shown in the following list, this acceptance criterion is written following
    an underlying pattern:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如下列表所示，这个验收标准是按照一个基本模式编写的：
- en: '**Given**: This provides an initial context'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**假设**：这提供了一个初始上下文'
- en: '**When**: This defines the event that occurs'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当**：这定义了发生的事件'
- en: '**Then**: This ensures an outcome'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**然后**：这确保了一个结果'
- en: 'In Jasmine, this translates into a very expressive language that allows tests
    to be written in a way that reflects actual business values. The preceding acceptance
    criterion written as a Jasmine test unit would be as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jasmine中，这转化为一种非常富有表现力的语言，允许以反映实际业务价值的方式编写测试。前面的验收标准写成Jasmine测试单元将如下所示：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can see how the criterion translates well into the Jasmine syntax. In the
    next chapter, we will get into the details of how these functions work.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到标准很好地转化为了Jasmine语法。在下一章中，我们将详细介绍这些函数的工作原理。
- en: With Jasmine, as with other BDD frameworks, each acceptance criterion directly
    translates to a test unit. For that reason, each test unit is usually called a
    **spec**, short for specification. During the course of this book, we will be
    using this terminology.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Jasmine，与其他BDD框架一样，每个验收标准直接转化为一个测试单元。因此，每个测试单元通常被称为**规范**。在本书的过程中，我们将使用这个术语。
- en: Downloading Jasmine
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Jasmine
- en: Getting started with Jasmine is actually pretty simple.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用Jasmine实际上非常简单。
- en: Open the Jasmine website at [http://jasmine.github.io/2.1/introduction.html#section-Downloads](http://jasmine.github.io/2.1/introduction.html#section-Downloads)
    and download the **Standalone Release** (version 2.1.3 is going to be used in
    the book).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Jasmine网站[http://jasmine.github.io/2.1/introduction.html#section-Downloads](http://jasmine.github.io/2.1/introduction.html#section-Downloads)，并下载**独立版本**（本书将使用2.1.3版本）。
- en: While at the Jasmine website, you might notice that it is actually a live page
    executing the specs contained in it. This is made possible by the simplicity of
    the Jasmine framework, allowing it to be executed in the most diverse environments.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jasmine网站上，您可能会注意到它实际上是一个执行其中包含的规范的实时页面。这是由于Jasmine框架的简单性所实现的，使其能够在最不同的环境中执行。
- en: 'After you''ve downloaded the distribution and uncompressed it, you can open
    the `SpecRunner.html` file on your browser. It will show the results of a sample
    test suite (including the acceptance criterion we showed you earlier):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下载了分发并解压缩后，您可以在浏览器中打开`SpecRunner.html`文件。它将显示一个示例测试套件的结果（包括我们之前向您展示的验收标准）：
- en: '![Downloading Jasmine](graphics/B04138_01_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![下载Jasmine](graphics/B04138_01_01.jpg)'
- en: This shows the SpecRunner.html file opened on the browser
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了在浏览器上打开的SpecRunner.html文件
- en: This `SpecRunner.html` file is a Jasmine browser spec runner. It is a simple
    HTML file that references the Jasmine code, the source files, and the test files.
    For convention purposes, we are going to refer to this file simply as **runner**.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`SpecRunner.html`文件是一个Jasmine浏览器规范运行器。这是一个简单的HTML文件，引用了Jasmine代码、源文件和测试文件。出于约定目的，我们将简称这个文件为**runner**。
- en: 'You can see how simple it is by opening it on a text editor. It is a small
    HTML file that references the Jasmine source:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在文本编辑器中打开它来看到它有多简单。这是一个引用了Jasmine源代码的小型HTML文件：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The runner references the source files:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: runner引用了源文件：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The runner references a special `SpecHelper.js` file that contains code shared
    between specs:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: runner引用了一个特殊的`SpecHelper.js`文件，其中包含在规范之间共享的代码：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The runner also references the spec files:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: runner还引用了规范文件：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的帐户中下载您购买的所有Packt图书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接通过电子邮件接收文件。
- en: The Jasmine framework is set up inside the `lib/jasmine-2.1.3/boot.js` file,
    and although it's an extensive file, most of its content is in documentation on
    how the setup actually happens. It is recommended that you open it in a text editor
    and study its content.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Jasmine框架设置在`lib/jasmine-2.1.3/boot.js`文件中，虽然它是一个庞大的文件，但它的大部分内容都是关于设置实际发生的文档。建议您在文本编辑器中打开它并研究其内容。
- en: Although, for now, we are running the specs in the browser, in [Chapter 8](ch08.html
    "Chapter 8. Build Automation"), *Build Automation*, we are going to make the same
    specs and code run on a **headless browser**, such as PhantomJS, and have the
    results written on the console.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管目前我们是在浏览器中运行规范，在[第8章](ch08.html "第8章。构建自动化")*构建自动化*中，我们将使相同的规范和代码在**无头浏览器**（如PhantomJS）上运行，并将结果写入控制台。
- en: A headless browser is a browser environment without its graphical user interface.
    It can either be an actual browser environment, such as PhantomJS, which uses
    the WebKit rendering engine, or a simulated browser environment, such as Envjs.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 无头浏览器是一个没有图形用户界面的浏览器环境。它可以是一个实际的浏览器环境，比如使用WebKit渲染引擎的PhantomJS，也可以是一个模拟的浏览器环境，比如Envjs。
- en: And although not covered in this book, Jasmine can also be used to test server-side
    JavaScript code written for environments such as Node.js.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本书未涉及，但Jasmine也可以用于测试为诸如Node.js等环境编写的服务器端JavaScript代码。
- en: This Jasmine flexibility is amazing, because you can use the same tool to test
    all sorts of JavaScript code.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这种Jasmine的灵活性令人惊叹，因为你可以使用同样的工具来测试各种类型的JavaScript代码。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you saw some of the motivations behind testing a JavaScript
    application. I showed you some common pitfalls of the JavaScript language and
    how BDD and Jasmine both help you to write better tests.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你看到了测试JavaScript应用程序的动机之一。我向你展示了JavaScript语言的一些常见陷阱，以及BDD和Jasmine如何帮助你编写更好的测试。
- en: You have also seen how easy it is to download and get started with Jasmine.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你也看到了使用Jasmine进行下载和入门是多么简单。
- en: In the next chapter, you are going to learn how to think in BDD and code your
    very first spec.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何以BDD的方式思考并编写你的第一个规范。
