- en: '*Chapter 13*: Learning from Kubernetes CVEs'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章：从Kubernetes CVEs中学习
- en: '**Common Vulnerabilities and Exposures** (**CVEs**) are identifications for
    publicly known security vulnerabilities and exposures that are found in popular
    applications. The CVE ID is made up of the `CVE` string followed by the year and
    the ID number for the vulnerability. The CVE database is publicly available and
    is maintained by the MITRE Corporation. The CVE entries include a brief description
    of each issue, which is helpful to understand the root cause and severity of the
    issue. These entries do not include technical details about the issue. CVEs are
    useful for IT professionals to coordinate and prioritize updates. Each CVE has
    a severity associated with it. MITRE uses a **Common Vulnerability Scoring System**
    (**CVSS**) to assign a severity rating to a CVE. It is recommended to patch high-severity
    CVEs immediately. Let''s look at an example of a CVE entry on [cve.mitre.org](http://cve.mitre.org).'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**通用漏洞和暴露**（**CVEs**）是对广为人知的安全漏洞和暴露的标识，这些漏洞和暴露存在于流行的应用程序中。CVE ID由`CVE`字符串后跟漏洞的年份和ID号组成。CVE数据库是公开可用的，并由MITRE公司维护。CVE条目包括每个问题的简要描述，有助于了解问题的根本原因和严重程度。这些条目不包括问题的技术细节。CVE对于IT专业人员协调和优先更新是有用的。每个CVE都有与之相关的严重性。MITRE使用**通用漏洞评分系统**（**CVSS**）为CVE分配严重性评级。建议立即修补高严重性的CVE。让我们看一个在[cve.mitre.org](http://cve.mitre.org)上的CVE条目的例子。'
- en: 'As you can see in the following screenshot, a CVE entry includes the ID, a
    brief description, references, the name of the **CVE Numbering Authority** (**CNA**),
    and the date on which the entry was created:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，CVE条目包括ID、简要描述、参考文献、**CVE编号管理机构**（**CNA**）的名称以及条目创建日期：
- en: '![Figure 13.1 – MITRE entry for CVE-2018-18264'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.1 - CVE-2018-18264的MITRE条目'
- en: '](image/B15566_13_001.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B15566_13_001.jpg)'
- en: Figure 13.1 – MITRE entry for CVE-2018-18264
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 - CVE-2018-18264的MITRE条目
- en: For security researchers and attackers, the most interesting part of a CVE entry
    is the **References** section. References for CVEs are links to blogs published
    by researchers covering the technical details of the issue, as well as links to
    issue descriptions and pull requests. Security researchers study the references
    to understand the vulnerability and develop mitigations for similar issues or
    for known issues that don't have a fix yet. Attackers, on the other hand, study
    the references to find unpatched variations of the issue.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于安全研究人员和攻击者来说，CVE条目最有趣的部分是**参考文献**部分。CVE的参考文献是指研究人员发布的博客链接，涵盖了问题的技术细节，以及问题描述和拉取请求的链接。安全研究人员研究这些参考文献，以了解漏洞并开发类似问题的缓解措施，或者针对尚未修复的已知问题。另一方面，攻击者研究这些参考文献，以找到未修补的问题变体。
- en: In this chapter, we'll discuss four publicly known security vulnerabilities
    of Kubernetes. First, we will look at a path-traversal issue—CVE-2019-11246\.
    This issue allowed attackers to modify the content on the client side, which could
    potentially lead to exfiltration or code execution on the cluster administrator's
    machine. Next, we will discuss CVE-2019-1002100, which allows users to cause **Denial-of-Service**
    (**DoS**) attacks on the API server. Then, we will discuss CVE-2019-11253, which
    allows unauthenticated users to cause DoS attacks on `kube-apiserver`. Lastly,
    we will discuss CVE-2019-11247, which allows users with namespace privileges to
    modify cluster-wide resources. We will discuss mitigation strategies for each
    CVE. Upgrading to the latest version of Kubernetes and `kubectl`, which patches
    vulnerabilities, should be your first priority. The latest stable version of Kubernetes
    can be found at [https://github.com/kubernetes/kubernetes/releases](https://github.com/kubernetes/kubernetes/releases).
    The mitigation strategies that we will discuss will help strengthen your cluster
    against attacks of a similar nature. Finally, we will introduce `kube-hunter`,
    which can be used to scan Kubernetes clusters for known security vulnerabilities.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论Kubernetes的四个公开已知安全漏洞。首先，我们将看一下路径遍历问题-CVE-2019-11246。这个问题允许攻击者修改客户端的内容，这可能导致数据泄露或在集群管理员的机器上执行代码。接下来，我们将讨论CVE-2019-1002100，它允许用户对API服务器进行**拒绝服务**（DoS）攻击。然后，我们将讨论CVE-2019-11253，它允许未经身份验证的用户对`kube-apiserver`进行DoS攻击。最后，我们将讨论CVE-2019-11247，它允许具有命名空间权限的用户修改集群范围的资源。我们将讨论每个CVE的缓解策略。升级到Kubernetes和`kubectl`的最新版本，以修补漏洞，应该是您的首要任务。Kubernetes的最新稳定版本可以在[https://github.com/kubernetes/kubernetes/releases](https://github.com/kubernetes/kubernetes/releases)找到。我们将讨论的缓解策略将有助于加强您的集群对类似性质的攻击。最后，我们将介绍`kube-hunter`，它可以用于扫描已知安全漏洞的Kubernetes集群。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The path traversal issue in kubectl cp—CVE-2019-11246
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kubectl cp中的路径遍历问题-CVE-2019-11246
- en: The DoS issue in JSON parsing—CVE-2019-1002100
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON解析中的DoS问题-CVE-2019-1002100
- en: The DoS issue in YAML parsing—CVE-2019-11253
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YAML解析中的DoS问题-CVE-2019-11253
- en: The privilege-escalation issue in role parsing—CVE-2019-11247
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色解析中的特权升级问题-CVE-2019-11247
- en: Scanning known vulnerabilities using kube-hunter
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用kube-hunter扫描已知漏洞
- en: The path traversal issue in kubectl cp – CVE-2019-11246
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: kubectl cp中的路径遍历问题-CVE-2019-11246
- en: Developers often copy files to or from containers in a Pod for debugging. `kubectl
    cp` allows developers to copy files from or to a container in a Pod (by default,
    this is done in the first container within the Pod).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员经常为调试目的将文件复制到或从Pod中的容器中。 `kubectl cp`允许开发人员从Pod中的容器复制文件，或者将文件复制到Pod中的容器（默认情况下，这是在Pod中的第一个容器中完成的）。
- en: 'To copy files to a Pod, you can use the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件复制到Pod，您可以使用以下方法：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To copy files from a Pod, you can use the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Pod复制文件，您可以使用以下方法：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When files are copied from a pod, Kubernetes first creates a TAR archive of
    the files inside the container. It then copies the TAR archive to the client and
    then finally unpacks the TAR archive for the client. In 2018, researchers found
    a way to use `kubectl cp` to overwrite files on the client's host. If an attacker
    has access to a pod, this vulnerability could be used to replace the TAR archive
    with special files that use relative paths by overwriting the original TAR binary
    with a malicious one. When the malformed TAR file was copied to the host, it could
    overwrite the files on the host when it was extracted. This could lead to data
    compromise and code execution on the host.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当文件从一个pod中复制时，Kubernetes首先创建文件内部的文件的TAR归档。然后将TAR归档复制到客户端，最后为客户端解压TAR归档。2018年，研究人员发现了一种方法，可以使用`kubectl
    cp`来覆盖客户端主机上的文件。如果攻击者可以访问一个pod，这个漏洞可以被用来用恶意文件替换TAR归档。当畸形的TAR文件被复制到主机时，它可以在解压时覆盖主机上的文件。这可能导致数据泄露和主机上的代码执行。
- en: 'Let''s look at an example where the attacker modifies the TAR archive to have
    two files: `regular.txt` and `foo/../../../../bin/ps`. In this archive, `regular.txt`
    is the file that the user is expecting and `ps` is a malicious binary. If this
    archive is copied to `/home/user/admin`, the malicious binary overwrites the well-known
    `ps` binary in the `bin` folder. The first patch for this issue was incomplete
    and attackers found a way to exploit the same issue using symlinks. Researchers
    found a way to bypass the fix for symlinks, which was finally addressed in versions
    1.12.9, 1.13.6, and 1.14.2, and was assigned CVE-2019-11246.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子，攻击者修改TAR归档，使其包含两个文件：`regular.txt`和`foo/../../../../bin/ps`。在这个归档中，`regular.txt`是用户期望的文件，`ps`是一个恶意二进制文件。如果这个归档被复制到`/home/user/admin`，恶意二进制文件将覆盖`bin`文件夹中的众所周知的`ps`二进制文件。这个问题的第一个补丁是不完整的，攻击者找到了一种利用符号链接的方法来利用相同的问题。研究人员找到了一种绕过符号链接修复的方法，最终在1.12.9、1.13.6和1.14.2版本中解决了这个问题，并被分配了CVE-2019-11246。
- en: Mitigation strategy
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓解策略
- en: 'You can use the following strategies to harden your cluster against this issue
    and issues similar to CVE-2019-11246 that haven''t yet been found:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下策略来加固您的集群，以防止这个问题和类似于CVE-2019-11246的问题：
- en: '**Always use the updated version of kubectl**: You can find the latest version
    of the `kubectl` binary by using the following command:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**始终使用更新版本的kubectl**：您可以使用以下命令找到`kubectl`二进制文件的最新版本：'
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Use admission controllers to limit the use of kubectl cp**: As we discussed
    in [*Chapter 7*](B15566_07_Final_ASB_ePub.xhtml#_idTextAnchor186), *Authentication,
    Authorization, and Admission Control*, Open Policy Agent can be used as an admission
    controller. Let''s look at a policy that denies calls to `kubectl cp`:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用准入控制器限制kubectl cp的使用**：正如我们在[*第7章*](B15566_07_Final_ASB_ePub.xhtml#_idTextAnchor186)中讨论的那样，*身份验证、授权和准入控制*，Open
    Policy Agent可以用作准入控制器。让我们看一个拒绝调用`kubectl cp`的策略：'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This policy denies the execution of a TAR binary in the pod, thereby disabling
    `kubectl cp` for all users. You can update this policy to allow `kubectl cp` for
    specific users or groups.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个策略拒绝了pod中TAR二进制文件的执行，从而禁用了所有用户的`kubectl cp`。您可以更新此策略，以允许特定用户或组的`kubectl cp`。
- en: '**Apply appropriate access controls to the client**: If you are an administrator
    of a production cluster, there are many secrets on your work machine that the
    attackers might want access to. Ideally, the build machine should not be your
    work laptop. Having dedicated hardware that admins can `ssh` into to access the
    Kubernetes cluster is good practice. You should also ensure that any sensitive
    data on the build machine has appropriate access controls.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为客户端应用适当的访问控制：如果您是生产集群的管理员，您的工作机器上有许多攻击者可能想要访问的机密信息。理想情况下，构建机器不应该是您的工作笔记本电脑。管理员可以`ssh`到的专用硬件来访问Kubernetes集群是一个良好的做法。您还应确保构建机器上的任何敏感数据都具有适当的访问控制。
- en: '**Set the security context for all pods**: As discussed in [*Chapter 8*](B15566_08_Final_ASB_ePub.xhtml#_idTextAnchor249),
    *Securing Kubernetes Pods*, ensure that pods have `readOnlyRootFilesystem`, which
    will prevent the files from being tampered with (for example, overwrite `/bin/tar
    binary`) by attackers in the filesystem:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为所有pod设置安全上下文：如[*第8章*](B15566_08_Final_ASB_ePub.xhtml#_idTextAnchor249)中所讨论的，*保护Kubernetes
    Pod*，确保pod具有`readOnlyRootFilesystem`，这将防止攻击者在文件系统中篡改文件（例如，覆盖`/bin/tar`二进制文件）。
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Use Falco rules to detect file modification**: We discussed Falco in [*Chapter
    11*](B15566_11_Final_ASB_ePub.xhtml#_idTextAnchor324), *Defense in Depth*. Falco
    rules (which can be found at [https://github.com/falcosecurity/falco/blob/master/rules/falco_rules.yaml](https://github.com/falcosecurity/falco/blob/master/rules/falco_rules.yaml))
    can be set up to do the following:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Falco规则检测文件修改：我们在[*第11章*](B15566_11_Final_ASB_ePub.xhtml#_idTextAnchor324)中讨论了Falco，*深度防御*。Falco规则（可以在[https://github.com/falcosecurity/falco/blob/master/rules/falco_rules.yaml](https://github.com/falcosecurity/falco/blob/master/rules/falco_rules.yaml)找到）可以设置为执行以下操作：
- en: '**Detect modification of a binary in a pod**: Use `Write below monitored dir`
    in the default Falco rules to detect changes to the TAR binary:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 检测pod中二进制文件的修改：使用默认的Falco规则中的`Write below monitored dir`来检测对TAR二进制文件的更改：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Detect the use of a vulnerable kubectl instance**: `kubectl` versions 1.12.9,
    1.13.6, and 1.14.2 have a fix for this issue. The use of any versions earlier
    than this will trigger the following rule:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 检测使用易受攻击的kubectl实例：`kubectl`版本1.12.9、1.13.6和1.14.2已修复了此问题。使用早于此版本的任何版本都将触发以下规则：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: CVE-2019-11246 is a great example of why you need to keep track of security
    advisories and read through the technical details to add mitigation strategies
    to your cluster to ensure that if any variations of an issue are discovered, your
    cluster is safe. Next, we will look at CVE-2019-1002100, which can be used to
    cause DoS issues on `kube-apiserver`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: CVE-2019-11246是为什么您需要跟踪安全公告并阅读技术细节以添加减轻策略到您的集群以确保如果发现问题的任何变化，您的集群是安全的一个很好的例子。接下来，我们将看看CVE-2019-1002100，它可以用于在`kube-apiserver`上引起DoS问题。
- en: DoS issues in JSON parsing – CVE-2019-1002100
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JSON解析中的DoS问题-CVE-2019-1002100
- en: 'Patching is a commonly used technique used to update API objects at runtime.
    Developers use `kubectl patch` to update API objects at runtime. A simple example
    of this can be adding a container to a pod:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 修补是一种常用的技术，用于在运行时更新API对象。开发人员使用`kubectl patch`在运行时更新API对象。一个简单的例子是向pod添加一个容器：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The preceding patch file allows a pod to be updated to have a new Redis container.
    `kubectl patch` allows patches to be in JSON format. The issue was in the JSON
    parsing code of `kube-apiserver`, which allowed an attacker to send a malformed
    `json-patch` instance to cause a DoS attack in the API server. In [*Chapter 10*](B15566_10_Final_ASB_ePub.xhtml#_idTextAnchor305),
    *Real-Time Monitoring and Resource Management of a Kubernetes Cluster*, we discussed
    the importance of the availability of services within Kubernetes clusters. The
    root cause of this issue was unchecked error conditions and unbounded memory allocation
    to `kube-apiserver` for the `patch` requests.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的补丁文件允许一个pod被更新以拥有一个新的Redis容器。`kubectl patch`允许补丁以JSON格式。问题出现在`kube-apiserver`的JSON解析代码中，这允许攻击者发送一个格式错误的`json-patch`实例来对API服务器进行DoS攻击。在[*第10章*](B15566_10_Final_ASB_ePub.xhtml#_idTextAnchor305)中，*Kubernetes集群的实时监控和资源管理*，我们讨论了Kubernetes集群中服务可用性的重要性。这个问题的根本原因是`kube-apiserver`对`patch`请求的未经检查的错误条件和无限制的内存分配。
- en: Mitigation strategy
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓解策略
- en: 'You can use the following strategies to harden your cluster against this issue
    and issues similar to CVE-2019-100210 that haven''t yet been found:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下策略来加固你的集群，以防止这个问题和类似CVE-2019-100210的问题：
- en: '**Use resource monitoring tools in Kubernetes clusters**: As discussed in [*Chapter
    10*](B15566_10_Final_ASB_ePub.xhtml#_idTextAnchor305), *Real-Time Monitoring and
    Resource Management of a Kubernetes Cluster*, resource-monitoring tools such as
    Prometheus and Grafana can help identify issues of higher memory consumption in
    the master node. High values in the graphs for Prometheus metrics could look as
    follows:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在Kubernetes集群中使用资源监控工具**：如[*第10章*](B15566_10_Final_ASB_ePub.xhtml#_idTextAnchor305)中所讨论的，*Kubernetes集群的实时监控和资源管理*，资源监控工具如Prometheus和Grafana可以帮助识别主节点内存消耗过高的问题。在Prometheus指标图表中，高数值可能如下所示：'
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: These resources graph maximum memory, CPU, and network usage by `kube-apiserver`
    over 5-minute intervals. Any abnormality in these usage patterns is a sign of
    an attack on `kube-apiserver`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这些资源图表显示了`kube-apiserver`在5分钟间隔内的最大内存、CPU和网络使用情况。这些使用模式中的任何异常都是`kube-apiserver`受到攻击的迹象。
- en: '**Set up high-availability Kubernetes masters**: We learned about high-availability
    clusters in [*Chapter 11*](B15566_11_Final_ASB_ePub.xhtml#_idTextAnchor324), *Defense
    in Depth*. High-availability clusters have multiple instances of Kubernetes components.
    If the load on one component is high, other instances can be used until the load
    is reduced or the first instance is restarted.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建立高可用性的Kubernetes主节点**：我们在[*第11章*](B15566_11_Final_ASB_ePub.xhtml#_idTextAnchor324)中学习了高可用性集群，*深度防御*。高可用性集群有多个Kubernetes组件的实例。如果一个组件的负载很高，其他实例可以被使用，直到负载减少或第一个实例重新启动。'
- en: 'Using `kops`, you can use `--master-zones={zone1, zone2}` to have multiple
    masters:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kops`，你可以使用`--master-zones={zone1, zone2}`来拥有多个主节点：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As you can see, there are multiple `kube-apiserver` pods running in this cluster.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，这个集群中有多个`kube-apiserver` pods在运行。
- en: '**Limit users'' privileges using RBAC**: Privileges to users should also follow
    the principle of least privilege, which was discussed in [*Chapter 4*](B15566_04_Final_ASB_ePub.xhtml#_idTextAnchor108),
    *Applying the Principle of Least Privilege in Kubernetes*. If a user does not
    require access to `PATCH` privileges for any resource, the role should be updated
    so that they don''t have access.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用RBAC限制用户权限**：用户的权限也应该遵循最小权限原则，这在[*第4章*](B15566_04_Final_ASB_ePub.xhtml#_idTextAnchor108)中已经讨论过，*在Kubernetes中应用最小权限原则*。如果用户不需要访问任何资源的`PATCH`权限，角色应该被更新以便他们没有访问权限。'
- en: '**Test your patches in the staging environment**: Staging environments should
    be set up as a replica of the production environment. Developers are not perfect,
    so it''s possible for a developer to create a malformed patch. If patches or updates
    to the cluster are tested in the staging environment, bugs in the patch can be
    found without disrupting the production services.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在暂存环境中测试您的补丁**：暂存环境应设置为生产环境的副本。开发人员并不完美，因此开发人员可能会创建格式不正确的补丁。如果在暂存环境中测试集群的补丁或更新，就可以在不影响生产服务的情况下发现补丁中的错误。'
- en: DoS is often considered a low-severity issue, but if it happens to the core
    component of your cluster, you should take it seriously. DoS attacks on `kube-apiserver`
    can disrupt the availability of the whole cluster. Next, we look at another DoS
    attack against an API server. This attack can be performed by unauthenticated
    users, making it more severe than CVE-2019-1002100.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: DoS通常被认为是低严重性问题，但如果发生在集群的核心组件上，您应该认真对待。对`kube-apiserver`的DoS攻击可能会破坏整个集群的可用性。接下来，我们将看看针对API服务器的另一种DoS攻击。未经身份验证的用户可以执行此攻击，使其比CVE-2019-1002100更严重。
- en: A DoS issue in YAML parsing – CVE-2019-11253
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YAML解析中的DoS问题 - CVE-2019-11253
- en: XML bombs, or billion laughs attacks, are popular with any XML parsing code.
    Similar to parsing issues in XML, this was a parsing issue in YAML files that
    were sent to `kube-apiserver`. If a YAML file sent to the server has recursive
    references, it triggers the `kube-apiserver` to consume CPU resources, which causes
    availability issues on the API server. In most cases, requests parsed by `kube-apiserver`
    are restricted to authenticated users, so unauthenticated users should not be
    able to trigger this issue. There was an exception to this rule in the Kubernetes
    versions preceding 1.14 that allowed unauthenticated users to check whether they
    could perform an action using `kubectl auth can-i`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: XML炸弹或十亿笑攻击在任何XML解析代码中都很受欢迎。与XML解析问题类似，这是发送到`kube-apiserver`的YAML文件中的解析问题。如果发送到服务器的YAML文件具有递归引用，它会触发`kube-apiserver`消耗CPU资源，从而导致API服务器的可用性问题。在大多数情况下，由`kube-apiserver`解析的请求受限于经过身份验证的用户，因此未经身份验证的用户不应该能够触发此问题。在Kubernetes版本1.14之前的版本中有一个例外，允许未经身份验证的用户使用`kubectl
    auth can-i`来检查他们是否能执行操作。
- en: This issue is similar to CVE-2019-1002100, but is more severe as unauthenticated
    users can also trigger this issue.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题类似于CVE-2019-1002100，但更严重，因为未经身份验证的用户也可以触发此问题。
- en: Mitigation strategy
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓解策略
- en: 'You can use the following strategies to harden your cluster against this issue
    and issues similar to CVE-2019-11253 that haven''t yet been found:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下策略来加固您的集群，以防止此问题和类似于CVE-2019-11253的尚未发现的问题：
- en: '**Use resource-monitoring tools in Kubernetes clusters**: Similar to CVE-2019-1002100,
    resource-monitoring tools, such as Prometheus and Grafana, which we discussed
    in [*Chapter 10*](B15566_10_Final_ASB_ePub.xhtml#_idTextAnchor305), *Real-Time
    Monitoring and Resource Management of a Kubernetes Cluster*, can help identify
    issues of higher memory consumption in the master node.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在Kubernetes集群中使用资源监控工具**：类似于CVE-2019-1002100，资源监控工具（如Prometheus和Grafana）可以帮助识别主节点内存消耗过高的问题，我们在[*第10章*](B15566_10_Final_ASB_ePub.xhtml#_idTextAnchor305)中讨论了*实时监控和资源管理的Kubernetes集群*。'
- en: '**Enable RBAC**: The vulnerability is caused by the improper handling of recursive
    entities in the YAML file by `kube-apiserver` and the ability of unauthenticated
    users to interact with the `kube-apiserver`. We discussed RBAC in [*Chapter 7*](B15566_07_Final_ASB_ePub.xhtml#_idTextAnchor186),
    *Authentication, Authorization, and Admission Control*. RBAC is enabled by default
    in the current version of Kubernetes. You can also enable it by passing `--authorization-mode=RBAC`
    to the `kube-apiserver`. In this case, unauthenticated users should not be allowed
    to interact with `kube-apiserver`. For authenticated users, the principle of least
    privilege should be followed.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用RBAC**：漏洞是由`kube-apiserver`在YAML文件中对递归实体的处理不当以及未经身份验证的用户与`kube-apiserver`交互的能力引起的。我们在[*第7章*](B15566_07_Final_ASB_ePub.xhtml#_idTextAnchor186)中讨论了RBAC，*身份验证、授权和准入控制*。RBAC在当前版本的Kubernetes中默认启用。您也可以通过将`--authorization-mode=RBAC`传递给`kube-apiserver`来启用它。在这种情况下，未经身份验证的用户不应被允许与`kube-apiserver`交互。对于经过身份验证的用户，应遵循最小特权原则。'
- en: '**Disable auth can-i for unauthenticated users (for v1.14.x)**: Unauthenticated
    users should not be allowed to interact with `kube-apiserver`. In Kubernetes v1.14.x,
    you can disable `auth can-i` for unauthenticated servers using the RBAC file at
    [https://github.com/kubernetes/kubernetes/files/3735508/rbac.yaml.txt](https://github.com/kubernetes/kubernetes/files/3735508/rbac.yaml.txt):'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为未经身份验证的用户禁用auth can-i（对于v1.14.x）**：不应允许未经身份验证的用户与`kube-apiserver`交互。在Kubernetes
    v1.14.x中，您可以使用[https://github.com/kubernetes/kubernetes/files/3735508/rbac.yaml.txt](https://github.com/kubernetes/kubernetes/files/3735508/rbac.yaml.txt)中的RBAC文件禁用未经身份验证的服务器的`auth
    can-i`：'
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The second command disables auto-updates for `clusterrolebinding`, which will
    ensure that the changes are not overwritten on restart.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个命令禁用了`clusterrolebinding`的自动更新，这将确保在重新启动时不会覆盖更改。
- en: '**kube-apiserver should not be exposed to the internet**: Allowing access to
    the API servers from trusted entities using a firewall or VPCs is good practice.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**kube-apiserver不应暴露在互联网上**：允许来自受信任实体的API服务器访问使用防火墙或VPC是一个良好的做法。'
- en: '**Disable anonymous-auth**: We discussed `anonymous-auth` as an option that
    should be disabled if possible in [*Chapter 6*](B15566_06_Final_ASB_ePub.xhtml#_idTextAnchor170),
    *Securing Cluster Components*. Anonymous authentication is enabled by default
    in Kubernetes 1.16+ for legacy policy rules. If you are not using any legacy rules,
    it is recommended to disable `anonymous-auth` by default passing `--anonymous-auth=false`
    to the API server.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用匿名身份验证**：我们在[*第6章*](B15566_06_Final_ASB_ePub.xhtml#_idTextAnchor170)中讨论了`anonymous-auth`作为一个应该在可能的情况下禁用的选项，*保护集群组件*。匿名身份验证在Kubernetes
    1.16+中默认启用以用于传统策略规则。如果您没有使用任何传统规则，建议默认禁用`anonymous-auth`，方法是将`--anonymous-auth=false`传递给API服务器。'
- en: As we discussed earlier, a DoS attack on `kube-apiserver` can cause a disruption
    of services throughout the cluster. In addition to using the latest version of
    Kubernetes, which includes a patch for this issue, it is important to follow these
    mitigation strategies to avoid similar issues in your cluster. Next, we will discuss
    an issue in the authorization module that triggers privilege escalation for authenticated
    users.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，对`kube-apiserver`的DoS攻击可能会导致整个集群的服务中断。除了使用包含此问题补丁的最新版本的Kubernetes之外，重要的是遵循这些缓解策略，以避免集群中出现类似问题。接下来，我们将讨论授权模块中触发经过身份验证用户特权升级的问题。
- en: The Privilege escalation issue in role parsing – CVE-2019-11247
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 角色解析中的特权升级问题 – CVE-2019-11247
- en: We discussed RBAC in detail in [*Chapter 7*](B15566_07_Final_ASB_ePub.xhtml#_idTextAnchor186),
    *Authentication, Authorization, and Admission Control*. Roles and RoleBindings
    allow users to get the privileges to perform certain actions. These privileges
    are namespaced. If a user needs a cluster-wide privilege, ClusterRoles and ClusterRolebindings
    are used. This issue allowed users to make cluster-wide modifications even if
    their privileges were namespaced. Configurations for admission controllers, such
    as Open Policy Access, could be modified by users with a namespaced role.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第7章*](B15566_07_Final_ASB_ePub.xhtml#_idTextAnchor186)中详细讨论了 RBAC，*认证、授权和准入控制*。角色和角色绑定允许用户获得执行某些操作的特权。这些特权是有命名空间的。如果用户需要集群范围的特权，则使用集群角色和集群角色绑定。这个问题允许用户进行集群范围的修改，即使他们的特权是有命名空间的。准入控制器的配置，比如
    Open Policy Access，可以被具有命名空间角色的用户修改。
- en: Mitigation strategy
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓解策略
- en: 'You can use the following strategies to harden your cluster against this issue
    and issues similar to CVE-2019-11247 that haven''t yet been found:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下策略来加固您的集群，以防止这个问题和类似 CVE-2019-11247 的问题：
- en: '**Avoid wildcards in Roles and RoleBindings**: Roles and ClusterRoles should
    be specific to the resource names, verbs, and API groups. Adding `*` to `roles`
    can allow users to have access to resources that they should not have access to.
    This adheres to the principle of least privilege, which we discussed in [*Chapter
    4*](B15566_04_Final_ASB_ePub.xhtml#_idTextAnchor108), *Applying the Principle
    of Least Privilege in Kubernetes*.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**避免在角色和角色绑定中使用通配符**：角色和集群角色应该特定于资源名称、动词和 API 组。在 `roles` 中添加 `*` 可以允许用户访问他们本不应该访问的资源。这符合我们在[*第4章*](B15566_04_Final_ASB_ePub.xhtml#_idTextAnchor108)中讨论的最小特权原则，*在
    Kubernetes 中应用最小特权原则*。'
- en: '**Enable Kubernetes auditing**: We discussed auditing and audit policies for
    Kubernetes in [*Chapter 11*](B15566_11_Final_ASB_ePub.xhtml#_idTextAnchor324),
    *Defense in Depth*. Kubernetes auditing can help identify any unintended actions
    in a Kubernetes cluster. In most cases, a vulnerability such as this will be used
    to modify and delete any additional controls within the cluster. You can use the
    following policy to identify instances of these kinds of exploits:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用 Kubernetes 审计**：我们在[*第11章*](B15566_11_Final_ASB_ePub.xhtml#_idTextAnchor324)中讨论了
    Kubernetes 的审计和审计策略，*深度防御*。Kubernetes 的审计可以帮助识别集群中的任何意外操作。在大多数情况下，这样的漏洞会被用来修改和删除集群中的任何额外控制。您可以使用以下策略来识别这类利用的实例：'
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This policy logs any instances of the deletion or modification of pods in `kube-system`
    or the `monitoring` namespace.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此策略记录了在 `kube-system` 或 `monitoring` 命名空间中删除或修改 pod 的任何实例。
- en: This issue is certainly an interesting one since it highlights that the security
    features provided by Kubernetes can also be harmful if they are misconfigured.
    Next, we will talk about `kube-hunter`, which is an open source tool to find any
    known security issues in your cluster.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题确实很有趣，因为它突显了 Kubernetes 提供的安全功能如果配置错误也可能会带来危害。接下来，我们将讨论 `kube-hunter`，这是一个开源工具，用于查找集群中已知的安全问题。
- en: Scanning for known vulnerabilities using kube-hunter
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 kube-hunter 扫描已知的漏洞
- en: Security advisories and announcements ([https://kubernetes.io/docs/reference/issues-security/security/](https://kubernetes.io/docs/reference/issues-security/security/))
    published by Kubernetes are the best way to keep track of new security vulnerabilities
    found in Kubernetes. The announcements and advisory emails can get a bit overwhelming
    and it's always possible to miss an important vulnerability. To avoid these situations,
    a tool that periodically checks the cluster for any known CVEs comes to the rescue.
    `kube-hunter` is an open source tool that is developed and maintained by Aqua
    that helps identify known security issues in your Kubernetes cluster.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes发布的安全公告和公告（[https://kubernetes.io/docs/reference/issues-security/security/](https://kubernetes.io/docs/reference/issues-security/security/)）是跟踪Kubernetes中发现的新安全漏洞的最佳方式。这些公告和咨询电子邮件可能会有点压倒性，很可能会错过重要的漏洞。为了避免这些情况，定期检查集群中是否存在已知CVE的工具就派上用场了。`kube-hunter`是一个由Aqua开发和维护的开源工具，可帮助识别您的Kubernetes集群中已知的安全问题。
- en: 'The steps to set up `kube-hunter` are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`kube-hunter`的步骤如下：
- en: 'Clone the repository:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆存储库：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the `kube-hunter` pod in your cluster:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的集群中运行`kube-hunter` pod：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'View the logs to find any issues with your cluster:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看日志以查找集群中的任何问题：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following output shows a list of known vulnerabilities in Kubernetes v1.13.0:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出显示了Kubernetes v1.13.0中已知的漏洞列表：
- en: '![Figure 13.2 – Results of kube-hunter'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.2 - kube-hunter的结果'
- en: '](image/B15566_13_002.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B15566_13_002.jpg)'
- en: Figure 13.2 – Results of kube-hunter
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 - kube-hunter的结果
- en: This screenshot highlights some of the issues discovered by `kube-hunter` for
    a Kubernetes v1.13.0 cluster. The issues found by `kube-hunter` should be treated
    as critical and should be addressed immediately.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这个截图突出显示了`kube-hunter`在Kubernetes v1.13.0集群中发现的一些问题。`kube-hunter`发现的问题应该被视为关键，并应立即解决。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed the importance of CVEs. These publicly known identifiers
    are important for cluster administrators, security researchers, and attackers.
    We discussed the important aspects of CVE entries, which are maintained by MITRE.
    We then looked at four well-known CVEs and discussed the issue and the mitigation
    strategy for each CVE. As a cluster administrator, upgrading the `kubectl` client
    and Kubernetes version should always be your first priority. However, adding mitigation
    strategies to detect and prevent exploits caused by similar issues that have not
    been reported publicly is equally important. Finally, we discussed an open source
    tool, `kube-hunter`, which can be used to periodically identify issues in your
    Kubernetes cluster. This removes the overhead of cluster administrators keeping
    a close eye on security advisories and announcements by Kubernetes.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了CVE的重要性。这些公开已知的标识对于集群管理员、安全研究人员和攻击者都很重要。我们讨论了由MITRE维护的CVE条目的重要方面。然后我们看了四个知名的CVE，并讨论了每个CVE的问题和缓解策略。作为集群管理员，升级`kubectl`客户端和Kubernetes版本应该始终是您的首要任务。然而，添加缓解策略以检测和防止由未公开报告的类似问题引起的利用同样重要。最后，我们讨论了一个开源工具`kube-hunter`，它可以定期识别您的Kubernetes集群中的问题。这消除了集群管理员密切关注Kubernetes的安全公告和公告的额外负担。
- en: Now, you should be able to understand the importance of publicly disclosed vulnerabilities
    and how these advisories help strengthen the overall security posture of your
    Kubernetes cluster. Reading through these advisories will help you identify any
    problems in your cluster and help harden your cluster going forward.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该能够理解公开披露的漏洞的重要性，以及这些公告如何帮助加强您的Kubernetes集群的整体安全姿态。阅读这些公告将帮助您识别集群中的任何问题，并有助于加固您的集群。
- en: Questions
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the most important parts of a CVE entry for cluster administrators,
    security researchers, and attackers?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CVE条目对集群管理员、安全研究人员和攻击者来说最重要的部分是什么？
- en: Why are client-side security issues such as CVE-2019-11246 important for a Kubernetes
    cluster?
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么客户端安全问题，如CVE-2019-11246对Kubernetes集群很重要？
- en: Why are DoS issues in the kube-apiserver treated as high-severity issues?
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么kube-apiserver中的DoS问题被视为高严重性问题？
- en: Compare authenticated versus unauthenticated DoS issues in the API server.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较API服务器中经过身份验证与未经身份验证的DoS问题。
- en: Discuss the importance of `kube-hunter`.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 讨论`kube-hunter`的重要性。
- en: Further references
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多参考资料
- en: 'The CVE list: [https://cve.mitre.org/cve/search_cve_list.html](https://cve.mitre.org/cve/search_cve_list.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVE列表：[https://cve.mitre.org/cve/search_cve_list.html](https://cve.mitre.org/cve/search_cve_list.html)
- en: 'Detecting CVE-2019-11246 with Falco: [https://sysdig.com/blog/how-to-detect-kubernetes-vulnerability-cve-2019-11246-using-falco/](https://sysdig.com/blog/how-to-detect-kubernetes-vulnerability-cve-2019-11246-using-falco/)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Falco检测CVE-2019-11246：[https://sysdig.com/blog/how-to-detect-kubernetes-vulnerability-cve-2019-11246-using-falco/](https://sysdig.com/blog/how-to-detect-kubernetes-vulnerability-cve-2019-11246-using-falco/)
- en: 'Preventing CVE-2019-11246 with OPA: [https://blog.styra.com/blog/investigate-and-correct-cves-with-the-k8s-api](https://blog.styra.com/blog/investigate-and-correct-cves-with-the-k8s-api)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OPA防止CVE-2019-11246：[https://blog.styra.com/blog/investigate-and-correct-cves-with-the-k8s-api](https://blog.styra.com/blog/investigate-and-correct-cves-with-the-k8s-api)
- en: 'The GitHub issue for CVE-2019-1002100: [https://github.com/kubernetes/kubernetes/issues/74534](https://github.com/kubernetes/kubernetes/issues/74534)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVE-2019-1002100的GitHub问题：[https://github.com/kubernetes/kubernetes/issues/74534](https://github.com/kubernetes/kubernetes/issues/74534)
- en: 'The GitHub issue for CVE-2019-11253: [https://github.com/kubernetes/kubernetes/issues/83253](https://github.com/kubernetes/kubernetes/issues/83253)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVE-2019-11253的GitHub问题：[https://github.com/kubernetes/kubernetes/issues/83253](https://github.com/kubernetes/kubernetes/issues/83253)
- en: 'The GitHub issue for CVE-2019-11247: [https://github.com/kubernetes/kubernetes/issues/80983](https://github.com/kubernetes/kubernetes/issues/80983)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVE-2019-11247的GitHub问题：[https://github.com/kubernetes/kubernetes/issues/80983](https://github.com/kubernetes/kubernetes/issues/80983)
- en: '`kube-hunter`: [https://github.com/aquasecurity/kube-hunter](https://github.com/aquasecurity/kube-hunter)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kube-hunter`：[https://github.com/aquasecurity/kube-hunter](https://github.com/aquasecurity/kube-hunter)'
- en: 'The GitHub issue for CVE 2020-8555: [https://github.com/kubernetes/kubernetes/issues/91542](https://github.com/kubernetes/kubernetes/issues/91542)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVE 2020-8555的GitHub问题：[https://github.com/kubernetes/kubernetes/issues/91542](https://github.com/kubernetes/kubernetes/issues/91542)
- en: 'The GitHub issue for CVE 2020-8555: [https://github.com/kubernetes/kubernetes/issues/91507](https://github.com/kubernetes/kubernetes/issues/91507)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CVE 2020-8555的GitHub问题：[https://github.com/kubernetes/kubernetes/issues/91507](https://github.com/kubernetes/kubernetes/issues/91507)
