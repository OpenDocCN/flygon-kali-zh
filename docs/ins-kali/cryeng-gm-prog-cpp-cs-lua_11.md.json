["```cs\n<SurfaceType name=\"mat_fabric\">\n  <Physics friction=\"0.80000001\" elasticity=\"0\" pierceability=\"7\" can_shatter=\"1\"/>\n</SurfaceType>\n```", "```cs\n<FXLib>\n  <Effect name=\"vegetation_spruce\">\n    <Particle>\n      <Name>Snow.Vegetation.SpruceNeedleGroup</Name>\n    </Particle>\n  </Effect>\n</FXLib>\n```", "```cs\n<Sound>\n  <Name>Sounds/Animals:Animals:Pig</Name>\n</Sound>\n```", "```cs\nIMaterialEffects *pMaterialEffects = gEnv->pGame->GetIGameFramework()->GetIMaterialEffects();\n\nTMFXEffectId effectId = pMaterialEffects->GetEffectId(\"footstep_player\", surfaceId);\n```", "```cs\nSMFXRunTimeEffectParams params;\nparams.pos = Vec3(0, 0, 10);\n\nbool result = gEnv->pGame->GetIGameFramework()->GetIMaterialEffects()->ExecuteEffect(effectId, params);\n```", "```cs\nif(effectId != InvalidEffectId)\n{\n  SMFXResourceListPtr->pList = pMaterialEffects->GetResources(effectId);\n\n  if(pList && pList->m_particleList)\n  {\n    const char *particleEffectName = pList->m_particleList->m_particleParams.name;\n  }\n}\n```", "```cs\nISound *pSound = gEnv->pSoundSystem->CreateSound(\"Sounds/Animals:Animals:Pig\", 0);\n```", "```cs\nIEntitySoundProxy *pSoundProxy = (IEntitySoundProxy *)pEntity->CreateProxy(ENTITY_PROXY_SOUND);\n\nif(pSoundProxy)\n  pSoundProxy->PlySound(pSound);\n```"]