["```\n$prlimit --nproc=2 --pid=18065\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: demo\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: demo\n```", "```\n$kubectl get pod demo \u2014output=yaml\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0annotations:\n\u00a0\u00a0\u00a0\u00a0kubectl.kubernetes.io/last-applied-configuration: |\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"demo\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"demo\"}]}}\n\u00a0\u00a0\u00a0\u00a0kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0demo'\n\u00a0\u00a0creationTimestamp: \"2020-05-07T21:54:47Z\"\n\u00a0\u00a0name: demo\n\u00a0\u00a0namespace: default\n\u00a0\u00a0resourceVersion: \"3455\"\n\u00a0\u00a0selfLink: /api/v1/namespaces/default/pods/demo\n\u00a0\u00a0uid: 5e783495-90ad-11ea-ae75-42010a800074\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- image: nginx\n\u00a0\u00a0\u00a0\u00a0imagePullPolicy: Always\n\u00a0\u00a0\u00a0\u00a0name: demo\n\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 100m\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: demo\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: demo\n\u00a0\u00a0\u00a0\u00a0image: nginx\n\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hugepages-2Mi: 100Mi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 500m \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 300Mi \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hugepages-2Mi: 100Mi \n```", "```\n$kubectl get pod demo \u2014output=yaml\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0creationTimestamp: \"2020-05-07T22:02:16Z\"\n\u00a0\u00a0name: demo-1\n\u00a0\u00a0namespace: default\n\u00a0\u00a0resourceVersion: \"5030\"\n\u00a0\u00a0selfLink: /api/v1/namespaces/default/pods/demo-1\n\u00a0\u00a0uid: 6a276dd2-90ae-11ea-ae75-42010a800074\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- image: nginx\n\u00a0\u00a0\u00a0\u00a0imagePullPolicy: Always\n\u00a0\u00a0\u00a0\u00a0name: demo\n\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hugepages-2Mi: 100Mi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 500m\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hugepages-2Mi: 100Mi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 300Mi\n```", "```\n$ cat stress.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: demo\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: demo\n\u00a0\u00a0\u00a0\u00a0image: polinux/stress\n\u00a0\u00a0\u00a0\u00a0command: [\"stress\"]\n\u00a0\u00a0\u00a0\u00a0args: [\"--vm\", \"1\", \"--vm-bytes\", \"150M\", \"--vm-hang\", \"1\"]\n```", "```\n$ kubectl create -f stress.yaml pod/demo created\n$ kubectl get pods NAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 READY\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 RESTARTS\u00a0\u00a0 AGE demo\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03h\n```", "```\ncontainers:\n\u00a0\u00a0- name: demo\n\u00a0\u00a0\u00a0\u00a0image: polinux/stress\n\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"150Mi\"\n\u00a0\u00a0\u00a0\u00a0command: [\"stress\"]\nargs: [\"--vm\", \"1\", \"--vm-bytes\", \"150M\", \"--vm-hang\", \"1\"]\n```", "```\n$ kubectl get pods\nNAME\u00a0\u00a0\u00a0\u00a0 READY\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 RESTARTS\u00a0\u00a0 AGE\ndemo\u00a0\u00a0\u00a0\u00a0 1/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a044s\ndemo-1\u00a0\u00a0 0/1\u00a0\u00a0\u00a0\u00a0 CrashLoopBackOff\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05s\n```", "```\n$ kubectl describe pods demo\nName:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 demo\nNamespace:\u00a0\u00a0\u00a0\u00a0default\n...\nContainers:\n\u00a0\u00a0demo:\n\u00a0\u00a0\u00a0\u00a0Container ID:\u00a0\u00a0docker://a43de56a456342f7d53fa9752aa4fa7366 cd4b8c395b658d1fc607f2703750c2\n\u00a0\u00a0\u00a0\u00a0Image:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 polinux/stress\n\u00a0\u00a0\u00a0\u00a0Image ID:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0docker-pullable://polinux/stress@sha256:b61 44f84f9c15dac80deb48d3a646b55c7043ab1d83ea0a697c09097aaad21aa\n...\n\u00a0\u00a0\u00a0\u00a0Command:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0stress\n\u00a0\u00a0\u00a0\u00a0Args:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--vm\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--vm-bytes\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0150M\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--vm-hang\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\n\u00a0\u00a0\u00a0\u00a0State:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Waiting\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 CrashLoopBackOff\n\u00a0\u00a0\u00a0\u00a0Last State:\u00a0\u00a0\u00a0\u00a0 Terminated\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OOMKilled\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exit Code:\u00a0\u00a0\u00a0\u00a01\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Started:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Mon, 04 May 2020 10:48:14 -0700\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Finished:\u00a0\u00a0\u00a0\u00a0 Mon, 04 May 2020 10:48:14 -0700\n```", "```\n$ kubectl describe namespace default\nName:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 default\nLabels:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <none>\nAnnotations:\u00a0\u00a0<none>\nStatus:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Active\nResource Quotas\n Name:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 gke-resource-quotas\n Resource\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Used\u00a0\u00a0Hard\n --------\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0---\u00a0\u00a0 ---\n count/ingresses.extensions\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0 100\n count/jobs.batch\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0 5k\n pods\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02\u00a0\u00a0\u00a0\u00a0 1500\n services\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\u00a0\u00a0\u00a0\u00a0 500\nResource Limits\n Type\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Resource\u00a0\u00a0Min\u00a0\u00a0Max\u00a0\u00a0Default Request\u00a0\u00a0Default Limit\u00a0\u00a0Max Limit/Request Ratio\n ----\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --------\u00a0\u00a0---\u00a0\u00a0---\u00a0\u00a0---------------\u00a0\u00a0-------------\u00a0\u00a0-----------------------\n Container\u00a0\u00a0cpu\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 -\u00a0\u00a0\u00a0\u00a0-\u00a0\u00a0\u00a0\u00a0100m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 -\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-\n```", "```\n    $ kubectl create namespace demo\n    namespace/demo created\n    ```", "```\n    $ cat quota.yaml\n    apiVersion: v1\n    kind: ResourceQuota\n    metadata:\n    \u00a0\u00a0name: compute-resources\n    spec:\n    \u00a0\u00a0hard:\n    \u00a0\u00a0\u00a0\u00a0requests.cpu: \"1\"\n    ```", "```\n    $ kubectl apply -f quota.yaml --namespace demo\n    resourcequota/compute-resources created\n    ```", "```\n    $ kubectl describe namespace demo\n    Name:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0demo\n    Labels:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<none>\n    Annotations:\u00a0\u00a0<none>\n    Status:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Active\n    Resource Quotas\n     Name:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compute-resources\n     Resource\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Used\u00a0\u00a0Hard\n     --------\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0---\u00a0\u00a0\u00a0---\n     requests.cpu\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a01\n     Name:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gke-resource-quotas\n     Resource\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Used\u00a0\u00a0Hard\n     --------\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0---\u00a0\u00a0\u00a0---\n     count/ingresses.extensions\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0100\n     count/jobs.batch\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a05k\n     pods\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a01500\n     services\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0500\n    ```", "```\n    $ kubectl apply -f nginx-cpu-1.yaml --namespace demo\n    Error from server (Forbidden): error when creating \"nginx-cpu-1.yaml\": pods \"demo-1\" is forbidden: exceeded quota: compute-resources, requested: requests.cpu=1, used: requests.cpu=1, limited: requests.cpu=1\n    ```", "```\n$ ps aux | grep kube-api\nroot\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03708\u00a0\u00a06.7\u00a0\u00a08.7 497216 345256 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ssl\u00a0\u00a001:44\u00a0\u00a0 0:10 kube-apiserver --advertise-address=192.168.99.116 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/var/lib/minikube/certs/ca.crt --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\n```", "```\n    $kubectl create namespace demo\n    ```", "```\n    $ cat limit_range.yaml\n    apiVersion: \"v1\"\n    kind: \"LimitRange\"\n    metadata:\n    \u00a0\u00a0name: limit1\n    \u00a0\u00a0namespace: demo\n    spec:\n    \u00a0\u00a0limits:\n    \u00a0\u00a0- type: \"Container\"\n    \u00a0\u00a0\u00a0\u00a0max:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 512Mi\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 500m\n    \u00a0\u00a0\u00a0\u00a0min:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 50Mi\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 50m\n    ```", "```\n    $ kubectl get limitrange -n demo\n    NAME\u00a0\u00a0\u00a0\u00a0\u00a0CREATED AT\n    limit1\u00a0\u00a0\u00a02020-04-30T02:06:18Z\n    ```", "```\n    $cat nginx-bad.yaml\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: nginx-bad\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0- name: nginx-bad\n    \u00a0\u00a0\u00a0\u00a0image: nginx-bad\n    \u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"800Mi\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: \"500m\"\n    ```", "```\n    $ kubectl apply -f nginx-bad.yaml -n demo\n    Error from server (Forbidden): error when creating \"nginx-bad.yaml\": pods \"nginx-bad\" is forbidden: maximum memory usage per Container is 512Mi, but limit is 800M\n    ```", "```\n    $kubectl create serviceaccount dashboard-admin-sa\n    ```", "```\n    $kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa\n    ```", "```\n    $ kubectl describe serviceaccount dashboard-admin-sa\n    Name:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dashboard-admin-sa\n    Namespace:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default\n    Labels:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<none>\n    Annotations:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<none>\n    Image pull secrets:\u00a0\u00a0<none>\n    Mountable secrets:\u00a0\u00a0\u00a0dashboard-admin-sa-token-5zwpw\n    Tokens:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dashboard-admin-sa-token-5zwpw\n    Events:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<none>\n    ```", "```\n    $ kubectl describe secrets dashboard-admin-sa-token-5zwpw\n    Name:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dashboard-admin-sa-token-5zwpw\n    Namespace:\u00a0\u00a0\u00a0\u00a0default\n    Labels:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<none>\n    Annotations:\u00a0\u00a0kubernetes.io/service-account.name: dashboard-admin-sa\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0kubernetes.io/service-account.uid: 83218a92-915c-11ea-b763-42010a800022\n    Type:\u00a0\u00a0kubernetes.io/service-account-token\n    Data\n    ====\n    ca.crt:\u00a0\u00a0\u00a0\u00a0\u00a01119 bytes\n    namespace:\u00a0\u00a07 bytes\n    token:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<token>\n    ```", "```\n$ docker ps | grep dashboard\na963e6e6a54b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03b08661dc379\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"/metrics-sidecar\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4 minutes ago\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Up 4 minutes\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s_dashboard-metrics-scraper_dashboard-metrics-scraper-84bfdf55ff-wfxdm_kubernetes-dashboard_5a7ef2a8-b3b4-4e4c-ae85-11cc8b61c1c1_0\nc28f0e2799c1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cdc71b5a8a0e\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"/dashboard --insecu\u2026\"\u00a0\u00a0 4 minutes ago\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Up 4 minutes\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s_kubernetes-dashboard_kubernetes-dashboard-bc446cc64-czmn8_kubernetes-dashboard_40630c71-3c6a-447b-ae68-e23603686ede_0\n10f0b024a13f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s.gcr.io/pause:3.2\u00a0\u00a0 \"/pause\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4 minutes ago\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Up 4 minutes\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s_POD_dashboard-metrics-scraper-84bfdf55ff-wfxdm_kubernetes-dashboard_5a7ef2a8-b3b4-4e4c-ae85-11cc8b61c1c1_0\nf9c1e82174d8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s.gcr.io/pause:3.2\u00a0\u00a0 \"/pause\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4 minutes ago\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Up 4 minutes\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s_POD_kubernetes-dashboard-bc446cc64-czmn8_kubernetes-dashboard_40630c71-3c6a-447b-ae68-e23603686ede_0\n```", "```\n$ ps aux | grep dashboard\ndbus\u00a0\u00a0\u00a0\u00a0 10727\u00a0\u00a00.9\u00a0\u00a01.1 136752 46240 ?\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ssl\u00a0\u00a005:46\u00a0\u00a0 0:02 /dashboard --insecure-bind-address=0.0.0.0 --bind-address=0.0.0.0 --namespace=kubernetes-dashboard --enable-skip-login --disable-settings-authorizer\ndocker\u00a0\u00a0 11889\u00a0\u00a00.0\u00a0\u00a00.0\u00a0\u00a011408\u00a0\u00a0 556 pts/0\u00a0\u00a0\u00a0\u00a0S+\u00a0\u00a0 05:51\u00a0\u00a0 0:00 grep dashboard\n```", "```\n$ minikube addons enable metrics-server\n```", "```\n$ kubectl get apiservices | grep metrics\nv1beta1.metrics.k8s.io\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 kube-system/metrics-server\u00a0\u00a0 True\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a07m17s\n```", "```\n$ kubectl top node\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 CPU(cores)\u00a0\u00a0 CPU%\u00a0\u00a0 MEMORY(bytes)\u00a0\u00a0 MEMORY%\nminikube\u00a0\u00a0 156m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 7%\u00a0\u00a0\u00a0\u00a0 1140Mi\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a030%\n$ kubectl top pod\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 CPU(cores)\u00a0\u00a0 MEMORY(bytes)\nnginx-good\u00a0\u00a0 0m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2Mi\n```", "```\n    $kubectl create namespace monitoring\n    ```", "```\n    $ cat prometheus-role.yaml\n    apiVersion: rbac.authorization.k8s.io/v1beta1\n    kind: ClusterRole\n    metadata:\n    \u00a0\u00a0name: prometheus\n    rules:\n    - apiGroups: [\"\"]\n    \u00a0\u00a0resources:\n    \u00a0\u00a0- nodes\n    \u00a0\u00a0- nodes/proxy\n    \u00a0\u00a0- services\n    \u00a0\u00a0- endpoints\n    \u00a0\u00a0- pods\n    \u00a0\u00a0verbs: [\"get\", \"list\", \"watch\"]\n    - apiGroups:\n    \u00a0\u00a0- extensions\n    \u00a0\u00a0resources:\n    \u00a0\u00a0- ingresses\n    \u00a0\u00a0verbs: [\"get\", \"list\", \"watch\"]\n    - nonResourceURLs: [\"/metrics\"]\n    \u00a0\u00a0verbs: [\"get\"]\n    $ kubectl create -f prometheus-role.yaml\n    clusterrole.rbac.authorization.k8s.io/prometheus created\n    ```", "```\n    $ cat prometheus-rolebinding.yaml\n    apiVersion: rbac.authorization.k8s.io/v1beta1\n    kind: ClusterRoleBinding\n    metadata:\n    \u00a0\u00a0name: prometheus\n    roleRef:\n    \u00a0\u00a0apiGroup: rbac.authorization.k8s.io\n    \u00a0\u00a0kind: ClusterRole\n    \u00a0\u00a0name: prometheus\n    subjects:\n    - kind: ServiceAccount\n    \u00a0\u00a0name: default\n    \u00a0\u00a0namespace: monitoring\n    ```", "```\n    $ cat config_prometheus.yaml apiVersion: v1\n    kind: ConfigMap\n    metadata:\n    \u00a0\u00a0name: prometheus-server-conf\n    \u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0name: prometheus-server-conf\n    \u00a0\u00a0namespace: monitoring\n    data:\n    \u00a0\u00a0prometheus.yml: |-\n    \u00a0\u00a0\u00a0\u00a0global:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scrape_interval: 5s\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0evaluation_interval: 5s\n    \u00a0\u00a0scrape_configs:\u00a0\u00a0\u00a0\u00a0- job_name: 'kubernetes-apiservers'\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0kubernetes_sd_configs:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- role: endpoints\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scheme: https\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tls_config:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0relabel_configs:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0action: keep\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0regex: default;kubernetes;https\n    ```", "```\n    spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: prometheus\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: prom/prometheus:v2.12.0\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0args:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- \"--config.file=/etc/prometheus/prometheus.yml\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- \"--storage.tsdb.path=/prometheus/\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 9090\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: prometheus-config-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /etc/prometheus/\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: prometheus-storage-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /prometheus/\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumes:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: prometheus-config-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0configMap:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0defaultMode: 420\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: prometheus-server-conf\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: prometheus-storage-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0emptyDir: {}\n    ```", "```\n    $ kubectl port-forward <prometheus-pod> 8080:9090 -n monitoring\n    ```", "```\n    sum(rate(container_cpu_usage_seconds_total{container_name!=\"POD\",pod_name!=\"\"}[5m]))\n    ```", "```\n    sum(rate(container_cpu_usage_seconds_total{container_name!=\"POD\",namespace!=\"\"}[5m])) by (namespace)\n    ```", "```\n    sum(kube_pod_container_resource_requests_cpu_cores) by (pod)\n    ```", "```\nprometheus.rules: |-\n\u00a0\u00a0\u00a0\u00a0groups:\n\u00a0\u00a0\u00a0\u00a0- name: Demo Alert\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rules:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- alert: High Pod Memory\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0expr: sum(container_memory_usage_bytes{pod!=\"\"})\u00a0\u00a0by (pod) > 1000000000\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for: 1m\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0severity: high\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0annotations:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0summary: High Memory Usage\n```", "```\n    $ cat grafana-data.yaml\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0apiVersion: v1\n    kind: ConfigMap\n    metadata:\n    \u00a0\u00a0name: grafana-datasources\n    \u00a0\u00a0namespace: monitoring\n    data:\n    \u00a0\u00a0prometheus.yaml: |-\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"apiVersion\": 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"datasources\": [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"access\":\"proxy\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"editable\": true,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": \"prometheus\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"orgId\": 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"type\": \"prometheus\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"url\": \"http://192.168.99.128:30000\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"version\": 1\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n    \u00a0\u00a0name: grafana\n    \u00a0\u00a0namespace: monitoring\n    spec:\n    \u00a0\u00a0replicas: 1\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0matchLabels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: grafana\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: grafana\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: grafana\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: grafana\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: grafana/grafana:latest\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: grafana\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 3000\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- mountPath: /var/lib/grafana\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: grafana-storage\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- mountPath: /etc/grafana/provisioning/datasources\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: grafana-datasources\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0readOnly: false\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumes:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: grafana-storage\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0emptyDir: {}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: grafana-datasources\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0configMap:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: grafana-datasources\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n    \u00a0\u00a0name: grafana\n    \u00a0\u00a0namespace: monitoring\n    \u00a0\u00a0annotations:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prometheus.io/scrape: 'true'\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prometheus.io/port:\u00a0\u00a0\u00a0'3000'\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0app: grafana\n    \u00a0\u00a0type: NodePort\n    \u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0- port: 3000\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 3000\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nodePort: 32000\n    ```"]