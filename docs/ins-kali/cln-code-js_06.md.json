["```js\nclass TenancyAgreement {\n\n  // Option #1:\n  saveSignedDocument(\n    id,\n    timestamp\n  ) {}\n\n  // Option #2:\n  saveSignedDocument(\n    documentId,\n    documentTimestamp\n  ) {}\n\n  // Option #3:\n  saveSignedDocument(\n    tenancyAgreementSignedDocumentID,\n    tenancyAgreementSignedDocumentTimestamp\n  ) {}\n\n}\n```", "```js\nconst app = {};\napp.transactions = {};\napp.transactions.dealMaking = {};\napp.transactions.dealMaking.states = [\n  'REJECTED_DEAL',\n  'ACCEPTED_DEAL',\n  'PENDING_DEAL',\n  'STALLED_DEAL'\n];\n```", "```js\nfunction makeFilteredRequest(endpoint, filterFn) {\n  return fetch(`/${endpoint}/`)\n    .then(response => response.json())\n    .then(data => data.filter(filterFn);\n}\n```", "```js\nvar something;\nsomething = 1;    // a number\nsomething = true; // a boolean\nsomething = [];   // an array\nsomething = {};   // an object\n```", "```js\nfunction incId(id, f) {\n  for (let x = 0; x < ids.length; ++x) {\n    if (ids[x].id === id && f(ids[x])) {\n      ids[x].n++;\n    }\n  }\n}\n```", "```js\nfunction incrementJobInstancesByIdIfFilter(id, filter) {\n  for (let i = 0; i < jobs.length; i++) {\n    let job = jobs[i];\n    if (job.id === id && filter(job)) {\n      job.nInstances++;\n    }\n  }\n}\n```", "```js\nfunction deStylizeParameters(params) {\n  disEntangleParams(params, p => !!p.style).obliterate();\n}\n```", "```js\nfunction removeStylingFromParams(params) {\n  filterParams(params, param => !!param.style).remove();\n}\n```", "```js\ndocumentManager.refreshAndSaveSignedAndNonPendingDocuments();\n```", "```js\ndocumentManager.refreshSignedDocuments();\ndocumentManager.refreshNonPendingDocuments();\ndocumentManager.saveSignedDocuments();\ndocumentManager.saveNonPendingDocuments();\n```", "```js\ndocumentManager.refreshDocumentsWithStates([\n  documentManager.STATE_SIGNED,\n  documentManager.STATE_NON_PENDING\n]);\n```", "```js\napp/\n|-- deepClone.js\n|-- deepEquality.js\n|-- getParamsFromURL.js\n|-- getURL.js\n|-- openModal.js\n|-- openModalWithTemplate.js\n|-- setupAppWithCustomConfig.js\n|-- setupAppWithDefaultConfig.js\n|-- setURL.js\n|-- ...\n```", "```js\napp/\n|-- setup/\n|   |-- defaultConfig.js\n|   |-- setup.js\n|-- modal/\n|   |-- open.js\n|   |-- openWithTemplate.js\n|-- utils/\n    |-- url/\n    |   |-- getParams.js\n    |   |-- get.js\n    |   |-- set.js\n    |-- obj/\n        |-- deepEquality.js\n        |-- deepClone.js\n```", "```js\nfunction displayModalWithMessage(\n  modalDisplayer_Message,\n  modalDisplayer_Options\n) {\n  const modalDisplayer_ModalInstance = new Modal();\n  modalDisplayer_ModalInstance.setMessage(modalDisplayerMessage);\n  modalDisplayer_ModalInstance.setOptions(modalDisplayerOptions);\n  modalDisplayer_ModalInstance.show();\n  return modalDisplayer_ModalInstance;\n}\n```", "```js\nfunction showModalWithMessage(message, options) {\n  const modalInstance = new Modal();\n  modalInstance.setMessage(message);\n  modalInstance.setOptions(options);\n  modalInstance.show();\n  return modalInstance;\n}\n```", "```js\nclass MyDataStructure {\n  addItem() {}\n  pushItems() {}\n  setItemIfNotExists() {}\n  // ...\n}\n```", "```js\nclass MyDataStructure {\n  addItem() {}\n  addItems() {}\n  addItemIfNotExists() {}\n  // ...\n}\n```", "```js\nfunction renderArticle(name) {\n  const article = Article.getByName(name);\n  const title = article.getTitle();\n  const strArticle = article.toString();\n  // ...\n}\n```", "```js\nfindBlueBicycleWithAMissingFrontWheel();\n```", "```js\nfindBicycle({\n  color: 'blue',\n  frontWheel: 'missing'\n});\n```", "```js\nfindObject({\n  type: 'bicycle',\n  color: 'blue',\n  frontWheel: 'missing'\n});\n```", "```js\nconst findBicycle    = config => findObject({ ...config, type: 'bicycle' });\nconst findSkateboard = config => findObject({ ...config, type: 'skateboard' });\nconst findScooter    = config => findObject({ ...config, type: 'scooter' });\n```"]