["```kt\n<resources>\n <!--\nTODO: Before you run your application, you need a Google Maps API key.\n\nTo get one, follow this link, follow the directions and press \"Create\" at the end:\n\nhttps://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=00:ED:1B:E2:03:B9:2E:F4:A9:0F:25:7A:2F:40:2E:D2:89:96:AD:2D%3Bcom.natarajan.locationalarm\n\nYou can also add your credentials to an existing key, using these values:\nPackage name:\n 00:ED:1B:E2:03:B9:2E:F4:A9:0F:25:7A:2F:40:2E:D2:89:96:AD:2D\nSHA-1 certificate fingerprint:\n 00:ED:1B:E2:03:B9:2E:F4:A9:0F:25:7A:2F:40:2E:D2:89:96:AD:2D\n\nAlternatively, follow the directions here:\n https://developers.google.com/maps/documentation/android/start#get-key\n\nOnce you have your key (it starts with \"AIza\"), replace the \"google_maps_key\"\n string in this file.\n -->\n<string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">YOUR_KEY_HERE</string>\n </resources>\n```", "```kt\nclass MapsActivity : AppCompatActivity(), OnMapReadyCallback {\n\nprivate lateinit var mMap: GoogleMap\n override fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\n         setContentView(R.layout.activity_maps)\n// Obtain the SupportMapFragment and get notified when the map is ready to be used.\nval mapFragment = supportFragmentManager\n.findFragmentById(R.id.map) as SupportMapFragment\n         mapFragment.getMapAsync(this)\n     }\n\n }\n```", "```kt\noverride fun onMapReady(googleMap: GoogleMap) {\n mMap = googleMap\n// Add a marker in Sydney and move the camera\nval sydney= LatLng(-33.852,151.211)\nmMap.addMarker(MarkerOptions().position(sydney).title(\"Marker in Sydney\"))\nmMap.moveCamera(CameraUpdateFactory.newLatLng(sydney))\n}\n```", "```kt\noverride fun onMapReady(googleMap: GoogleMap) {\n mMap = googleMap\n// Add a marker in Chennai and move the camera\nval chennai = LatLng(13.07975, 80.1798347)\n //val chennai = LatLng(-34.0, 151.0)\nmMap.addMarker(MarkerOptions().position(chennai).title(\"Marker in Chennai\"))\n mMap.moveCamera(CameraUpdateFactory.newLatLng(chennai))\n }\n```", "```kt\n<android.support.v7.widget.LinearLayoutCompat \n\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\"\nandroid:layout_weight=\"1.0\"><fragment\nandroid:id=\"@+id/map\"\nandroid:layout_weight=\"0.8\"\nandroid:name=\"com.google.android.gms.maps.SupportMapFragment\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\ntools:context=\"com.natarajan.locationalarm.MapsActivity\" />\n\n<Button\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_weight=\"0.2\"\nandroid:id=\"@+id/settingsbtn\"\nandroid:onClick=\"onClickSettingsButton\"\nandroid:text=\"@string/Settings\"/>\n\n </android.support.v7.widget.LinearLayoutCompat>\n```", "```kt\nfun onClickSettingsButton(view: View) {\n val intent = Intent(\"android.intent.action.SETTINGACTIVITY\")\n startActivity(intent)\n }\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout \nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\">\n\n     <EditText\nandroid:id=\"@+id/latText\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:ems=\"10\"\nandroid:hint='Latitude'\nandroid:inputType=\"numberDecimal\" />\n\n     <EditText\nandroid:id=\"@+id/langText\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:ems=\"10\"\nandroid:hint=\"Longitude\"\nandroid:inputType=\"numberDecimal\" />\n\n     <Button\nandroid:id=\"@+id/alarmbtn\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:onClick=\"onClickButton\"\nandroid:text=\"Ok\" />\n\n </LinearLayout>\n```", "```kt\nclass SettingsActivity : AppCompatActivity() {\n\npublic override fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\n         setContentView(R.layout.settings_activity)\n\n}\nfun onClickButton(view: View) {\n         Toast.makeText(this, \"Alarm Set\", Toast.*LENGTH_LONG*).show()\n     }\n}\n```", "```kt\n*<?*xml version=\"1.0\" encoding=\"utf-8\"*?>* <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.natarajan.locationalarm\">\n*<!--\n          T*he ACCESS_COARSE/FINE_LOCATION permissions are not required to use\n          Google Maps Android API v2, but you must specify either coarse or fine\n          location permissions for the 'MyLocation' functionality. \n     --><uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n\n     <application android:allowBackup=\"true\" android:icon=\"@mipmap/ic_launcher\" android:label=\"@string/app_name\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:supportsRtl=\"true\" android:theme=\"@style/AppTheme\">\n*<!--\n        *      The API key for Google Maps-based APIs is defined as a string resource.\n              (See the file \"res/values/google_maps_api.xml\").\n              Note that the API key is linked to the encryption key used to sign the APK.\n              You need a different API key for each encryption key, including the release key that is used to\n              sign the APK for publishing.\n              You can define the keys for the debug and release targets in src/debug/ and src/release/. *-->* <meta-data android:name=\"com.google.android.geo.API_KEY\" android:value=\"@string/google_maps_key\" />\n\n         <activity android:name=\".MapsActivity\" android:label=\"@string/title_activity_maps\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n                 <category android:name=\"android.intent.category.LAUNCHER\" />\n             </intent-filter>\n         </activity>\n\n         <activity android:name=\".SettingsActivity\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.SETTINGACTIVITY\" />\n                 <category android:name=\"android.intent.category.DEFAULT\" />\n             </intent-filter>\n         </activity>\n\n     </application>\n\n </manifest>\n```", "```kt\napply plugin: 'com.android.application' apply plugin: 'kotlin-android' apply plugin: 'kotlin-android-extensions' android {\n     compileSdkVersion 26\ndefaultConfig {\n         applicationId \"com.natarajan.locationalarm\" minSdkVersion 15\ntargetSdkVersion 26\nversionCode 1\nversionName \"1.0\" testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\" }\n     buildTypes {\n         release {\n             minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' }\n     }\n }\n\n dependencies {\n     implementation fileTree(dir: 'libs', include: ['*.jar'])\n     implementation\"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version\" implementation 'com.android.support:appcompat-v7:26.1.0'\n implementation 'com.google.android.gms:play-services-maps:11.8.0' testImplementation 'junit:junit:4.12' androidTestImplementation 'com.android.support.test:runner:1.0.1' androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1' }\n```"]