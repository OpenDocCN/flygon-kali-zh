- en: Setting Up for Android Development
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Android开发进行设置
- en: Java is one of the most widely used languages worldwide and, until recently,
    was the language of choice for Android development. Java, in all its greatness,
    still has some issues. Over the years, we've seen the evolution of a number of
    JVM languages that have tried to fix the issues that come with Java. A quite recent
    one is Kotlin. Kotlin is a new programming language developed by JetBrains, a
    software development company that produces software developer tools (one of their
    products is IntelliJ IDEA, which Android Studio is based on).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Java是全球使用最广泛的语言之一，直到最近，它还是Android开发的首选语言。Java在其所有伟大之处仍然存在一些问题。多年来，我们看到了许多试图解决Java问题的JVM语言的发展。其中一个相当新的是Kotlin。Kotlin是由JetBrains开发的一种新的编程语言，JetBrains是一家生产软件开发工具的软件开发公司（他们的产品之一是Android
    Studio基于的IntelliJ IDEA）。
- en: 'In this chapter, we''ll take a look at:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看看：
- en: What makes Kotlin great for Android development
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kotlin在Android开发中的优势
- en: What you need to be ready for Android development
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Android开发做好准备
- en: Why develop Android with Kotlin?
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要用Kotlin开发Android？
- en: Of all the JVM languages, Kotlin is the only one that offers a lot more to Android
    developers. Kotlin is the only JVM language, other than Java, which offers integrations
    with Android Studio.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有的JVM语言中，Kotlin是唯一一个为Android开发者提供了更多功能的语言。Kotlin是除了Java之外唯一一个与Android Studio集成的JVM语言。
- en: Let's take a look at some of Kotlin's amazing features.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看一些Kotlin的惊人特性。
- en: Concise
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简洁
- en: One of Java's biggest issue is verbosity. Anyone who has ever tried writing
    a simple *hello world* program in Java will tell you the number of lines of code
    that requires. Unlike Java, Kotlin is not a verbose language. Kotlin eliminates
    a lot boilerplate code such as `getters` and `setters`. For example, let's compare
    a POJO in Java to the same POJO in Kotlin.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Java最大的问题之一是冗长。任何尝试在Java中编写一个简单的“hello world”程序的人都会告诉你需要多少行代码。与Java不同，Kotlin不是一种冗长的语言。Kotlin消除了很多样板代码，比如`getters`和`setters`。例如，让我们比较一下Java中的POJO和Kotlin中的POJO。
- en: '**Student POJO in Java**:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Java中的学生POJO**：'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Student POJO in Kotlin**:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Kotlin中的学生POJO**：'
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see, there's way less Kotlin code for the same functionality.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，相同功能的Kotlin代码要少得多。
- en: Say bye bye to the NullPointerException
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 告别NullPointerException
- en: One of the major pain points with using Java and a number of other languages
    has to do with accessing a null reference. This can result in your application
    crashing without showing the user an adequate error message. If you're a Java
    developer, I'm pretty sure you're well acquainted with the almighty `NullPointerException`. One
    of the most amazing things about Kotlin is null safety.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Java和其他语言的主要痛点之一是访问空引用。这可能导致您的应用程序崩溃，而不向用户显示充分的错误消息。如果您是Java开发人员，我相信您对`NullPointerException`非常熟悉。关于Kotlin最令人惊讶的一点是空安全性。
- en: 'With Kotlin, a `NullPointerException` can only be caused by one of the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Kotlin，`NullPointerException`只能由以下原因之一引起：
- en: An external Java code
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部Java代码
- en: An explicit call to throw the `NullPointerException`
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显式调用抛出`NullPointerException`
- en: Usage of the `!!` operator (we'll learn more about this operator later)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`!!`运算符（我们稍后将学习更多关于这个运算符的知识）
- en: Data inconsistency regarding initialization
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于初始化的数据不一致
- en: How cool is that?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这有多酷？
- en: Java interoperability
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java的互操作性
- en: Kotlin is developed to be able to work comfortably with Java. What this means
    for developers is that you can make use of the libraries written in Java. You
    can also work with legacy Java code without worry. And, the fun part about it
    is you can also call Kotlin code in Java.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Kotlin被开发成能够与Java舒适地工作。对于开发人员来说，这意味着您可以使用用Java编写的库。您还可以放心地使用传统的Java代码。而且，有趣的部分是您还可以在Java中调用Kotlin代码。
- en: This feature is very important for Android developers because, currently, Android
    APIs are written in Java.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能对于Android开发者来说非常重要，因为目前Android的API是用Java编写的。
- en: Setting up your environment
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置您的环境
- en: Before beginning your Android development journey, there are number things you
    have to do to make your machine Android developer-ready. We'll go through them
    in this section.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始Android开发之前，您需要做一些准备工作，使您的计算机能够进行Android开发。我们将在本节中逐一介绍它们。
- en: You can skip this section if you're not new to Android development.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对Android开发不是很了解，可以跳过本节。
- en: Java
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java
- en: Since Kotlin runs on the JVM, we have to make sure that our machine has the
    **Java Development Kit **(**JDK**) installed. If you do not have Java installed,
    skip to the section on installing the JDK. If you're not certain, you can follow
    the following instructions to check the version of Java installed on your machine.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Kotlin运行在JVM上，我们必须确保我们的计算机上安装了**Java开发工具包**（JDK）。如果您没有安装Java，请跳转到安装JDK的部分。如果您不确定，可以按照以下说明检查您的计算机上安装的Java版本。
- en: 'On Windows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上：
- en: Open the Windows Start menu
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Windows开始菜单
- en: Under the Java Program listing, select About Java
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Java程序列表下，选择关于Java
- en: A popup will show, with details about the version of Java on the machine:![](img/4a49056b-26e4-482d-a202-f0933799b944.png)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会显示一个弹出窗口，其中包含计算机上Java版本的详细信息：![](img/4a49056b-26e4-482d-a202-f0933799b944.png)
- en: 'On a Mac or any other Linux machine:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac或其他Linux机器上：
- en: 'Open the Terminal app. To do this, open launchpad and type `terminal` in the
    search box. The Terminal app will show up as shown in the following screenshot.
    Select it:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端应用程序。要做到这一点，打开启动台并在搜索框中输入`终端`。终端应用程序将显示如下截图所示。选择它：
- en: '![](img/564cd114-cbd6-44b0-b8aa-58374caa7b39.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/564cd114-cbd6-44b0-b8aa-58374caa7b39.png)'
- en: 'In Terminal, type the following command to check the JDK version on your machine:
    `java -version`'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中，输入以下命令来检查您的计算机上的JDK版本：`java -version`
- en: 'If you have the JDK installed, the version of Java will be displayed as shown
    in the following screenshot:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你已经安装了JDK，Java的版本将会显示在下面的截图中：
- en: '![](img/eec560b1-e3c5-4ec0-9112-71bc5b58a0ff.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eec560b1-e3c5-4ec0-9112-71bc5b58a0ff.png)'
- en: Installing the JDK
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装JDK
- en: Open your browser and go to the Java website: [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，转到Java网站：[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
- en: 'Under the Downloads tab, click on the **Download** button under the JDK, as
    shown in the following screenshot:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“下载”选项卡下，单击JDK下的**下载**按钮，如下面的屏幕截图所示：
- en: '![](img/dc5d2c84-a3e9-4ead-bd29-f3db47e02beb.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc5d2c84-a3e9-4ead-bd29-f3db47e02beb.png)'
- en: On the next screen, select the Accept License Agreement checkbox and click on
    the download link for the product that matches your operating system
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，选择“接受许可协议”复选框，然后单击与您的操作系统匹配的产品的下载链接
- en: When the download is complete, go ahead and install the JDK
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，继续安装JDK
- en: When the installation is complete, you can run the version check command again
    to be sure your installation was successful
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，您可以再次运行版本检查命令，以确保您的安装成功
- en: Android Studio
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android Studio
- en: A number of **IDEs** support Android development, but the best and most used
    Android IDE is Android Studio. Android Studio is based on the IntelliJ IDE (developed
    by JetBrains).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 许多**IDE**支持Android开发，但最好和最常用的Android IDE是Android Studio。 Android Studio基于由JetBrains开发的IntelliJ
    IDE。
- en: Installing Android Studio
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Android Studio
- en: 'Go over to the Android Studio page, [https://developer.android.com/sdk/installing/studio.html](https://developer.android.com/sdk/installing/studio.html), and
    click the DOWNLOAD ANDROID STUDIO button:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 转到Android Studio页面，[https://developer.android.com/sdk/installing/studio.html](https://developer.android.com/sdk/installing/studio.html)，然后单击“下载Android
    Studio”按钮：
- en: '![](img/b6f19183-98fc-402d-919d-d6242c53fed9.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f19183-98fc-402d-919d-d6242c53fed9.png)'
- en: 'On the popup that appears, read and accept the terms and conditions and click
    the DOWNLOAD ANDROID STUDIO FOR MAC button:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在弹出窗口上，阅读并接受条款和条件，然后单击**下载适用于Mac的Android Studio**按钮：
- en: '![](img/82780a3a-bd4f-4e0b-91ff-74c635bc6615.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82780a3a-bd4f-4e0b-91ff-74c635bc6615.png)'
- en: The name of the button is different depending on the operating system you're
    using.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮的名称因使用的操作系统而异。
- en: The download will begin and you'll be redirected to an instructions page ([https://developer.android.com/studio/install](https://developer.android.com/studio/install)).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 下载将开始，并且您将被重定向到一个说明页面（[https://developer.android.com/studio/install](https://developer.android.com/studio/install)）。
- en: Follow the instructions specified for your operating system to install Android
    Studio. When the installation is complete, open Android Studio and start the setup
    process.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 按照您的操作系统的指定说明安装Android Studio。安装完成后，打开Android Studio并开始设置过程。
- en: Getting Android Studio ready
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备Android Studio
- en: 'On the Complete Installation screen, make sure the I do not have a previous
    version of Studio or I do not want to import my settings option is selected, and
    click the OK button:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在完整安装屏幕上，请确保选择了“我没有以前的Studio版本”或“我不想导入我的设置”选项，然后单击“确定”按钮：
- en: '![](img/fd000e7f-e483-4041-a4e1-0ecf44ff09fb.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd000e7f-e483-4041-a4e1-0ecf44ff09fb.png)'
- en: 'On the Welcome screen, click Next to move to the Install Type screen:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在欢迎屏幕上，单击“下一步”转到安装类型屏幕：
- en: '![](img/8172f9df-9d64-4d31-be41-d9dd01fe6821.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8172f9df-9d64-4d31-be41-d9dd01fe6821.png)'
- en: 'Then, select the Standard option and click Next to continue:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，选择标准选项，然后单击“下一步”继续：
- en: '![](img/2abf755b-e3c6-4752-8e05-1d9dd00a73b1.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2abf755b-e3c6-4752-8e05-1d9dd00a73b1.png)'
- en: 'On the Verify Settings screen, confirm your setup by clicking the Finish button:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在“验证设置”屏幕上，通过单击“完成”按钮确认您的设置：
- en: '![](img/1d604ecf-f60a-4e84-b9c1-7bc4cf009bf1.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1d604ecf-f60a-4e84-b9c1-7bc4cf009bf1.png)'
- en: 'The SDK components listed on the Verify Settings screen will start downloading.
    You can click on the Show Details button to view the details of the components
    being downloaded:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在“验证设置”屏幕上，列出的SDK组件将开始下载。您可以单击“显示详细信息”按钮查看正在下载的组件的详细信息：
- en: '![](img/7de2a4a6-bf91-4e1e-9154-5c763c61c461.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7de2a4a6-bf91-4e1e-9154-5c763c61c461.png)'
- en: When the download and installation is complete, click the Finish button. That's
    it. You're done installing and setting up Android Studio.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 下载和安装完成后，单击“完成”按钮。就是这样。您已经完成了安装和设置Android Studio。
- en: Creating your first Android project
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的第一个Android项目
- en: 'On the Welcome to Android Studio screen, click Start a new Android Studio project:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在欢迎使用Android Studio屏幕上，单击“开始新的Android Studio项目”：
- en: '![](img/d6fa10c7-a42f-4ea1-899a-342b2744b84e.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6fa10c7-a42f-4ea1-899a-342b2744b84e.png)'
- en: This starts the Create New Project wizard. On the Configure your new project
    screen, enter `TicTacToe` as the Application name. Specify the Company domain.
    The Package name is generated from the company domain and the application name.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动创建新项目向导。在配置新项目屏幕上，将“TicTacToe”输入为应用程序名称。指定公司域。包名称是从公司域和应用程序名称生成的。
- en: 'Set the Project location to a location of your choice, and click Next:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将项目位置设置为您选择的位置，然后单击“下一步”：
- en: '![](img/a08bc2ea-00ab-4798-8ec6-5b2476a35c9f.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a08bc2ea-00ab-4798-8ec6-5b2476a35c9f.png)'
- en: Choosing an SDK
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择SDK
- en: On the Target Android Devices screen, you have to select the device types and
    the corresponding minimum version of Android required to run your app. The Android **Software
    Development Kit **(**SDK**) provides tools required to build your Android app
    irrespective of your language of choice.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在目标Android设备屏幕上，您必须选择设备类型和相应的最低Android版本，以便运行您的应用程序。 Android**软件开发工具包（SDK）**提供了构建Android应用程序所需的工具，无论您选择的语言是什么。
- en: Each new version of the SDK comes with a new set of features to help developers
    provide more awesome features in their apps. The difficulty, though, is Android
    runs on a very wide range of devices, some of which do not have the capabilities
    to support the latest versions of Android. This puts developers in a tough position
    of choosing between implementing great new features or supporting a wider range
    of devices.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 每个新版本的SDK都带有一组新功能，以帮助开发人员在其应用程序中提供更多令人敬畏的功能。然而，困难在于Android在非常广泛的设备范围上运行，其中一些设备无法支持最新版本的Android。这使开发人员在实施出色的新功能或支持更广泛的设备范围之间陷入困境。
- en: 'Android tries to make this decision easier by providing the following:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Android试图通过提供以下内容来使这个决定更容易：
- en: 'Data on the percentage of devices using specific SDKs to help developers make
    an informed choice. To view this data in Android Studio, click Help me choose under
    the minimum SDK dropdown. This will show you a list of currently supported Android
    SDK versions with their supported features, and the percentage of Android devices
    your app will support if you select that as your minimum SDK:'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供有关使用特定SDK的设备百分比的数据，以帮助开发人员做出明智的选择。要在Android Studio中查看此数据，请单击最低SDK下拉菜单下的“帮助我选择”。这将显示当前支持的Android
    SDK版本列表及其支持的功能，以及如果将其选择为最低SDK，则应用程序将支持的Android设备的百分比：
- en: '![](img/0c08ec03-33f9-44cb-b45e-7e64079ca2ca.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c08ec03-33f9-44cb-b45e-7e64079ca2ca.png)'
- en: You can check out an up-to-date and more detailed version of that data on the
    Android developer dashboard ([https://developer.android.com/about/dashboards/](https://developer.android.com/about/dashboards/)).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Android开发者仪表板（[https://developer.android.com/about/dashboards/](https://developer.android.com/about/dashboards/)）上查看最新和更详细的数据。
- en: Android also provides support libraries to help with backward compatibility
    of certain new features added in newer SDK versions. Each support library is backward
    compatible to a specific API Level. Support libraries are usually named based
    on the API level with which they're backward compatible with. An example is appcompat-v7,
    which provides backward compatibility to API Level 7.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android还提供了支持库，以帮助向后兼容某些新功能，这些功能是在较新的SDK版本中添加的。每个支持库都向后兼容到特定的API级别。支持库通常根据其向后兼容的API级别进行命名。一个例子是appcompat-v7，它提供了对API级别7的向后兼容性。
- en: 'We''ll discuss SDK versions further in a later section. For now, you can select
    API 15: Android 4.0.3 (IceCreamSandwich) and click Next:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的部分进一步讨论SDK版本。现在，您可以选择API 15：Android 4.0.3（冰淇淋三明治）并单击“下一步”：
- en: '![](img/c71d48d9-26d3-4a4c-9b33-6b522d2282a6.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c71d48d9-26d3-4a4c-9b33-6b522d2282a6.png)'
- en: 'The next screen is the Add an Activity to Mobile screen. This is where you
    select your default activity. Android Studio gives a number of options, from an
    activity with a blank screen to an activity with a login screen. For now, select
    the Basic Activity option and click Next:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的屏幕是“在移动屏幕上添加活动”。这是您选择默认活动的地方。 Android Studio提供了许多选项，从空白屏幕的活动到带有登录屏幕的活动。现在，选择“基本活动”选项，然后单击“下一步”：
- en: '![](img/6995117e-8d9c-4727-acb3-d4e699534398.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6995117e-8d9c-4727-acb3-d4e699534398.png)'
- en: 'On the next screen, enter the name and title of the activity, and the name
    of the activity layout. Then, click **Finish**:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，输入活动的名称和标题，以及活动布局的名称。然后，单击**完成**：
- en: '![](img/1c55aafe-481a-4e00-82db-da02d9260196.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c55aafe-481a-4e00-82db-da02d9260196.png)'
- en: Building your project
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建您的项目
- en: After clicking the Finish button, Android Studio generates and configures the
    project in the background for you. One of the background processes Android Studio
    performs is configuring Gradle.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“完成”按钮后，Android Studio会在后台为您生成和配置项目。 Android Studio执行的后台进程之一是配置Gradle。
- en: Gradle
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gradle
- en: Gradle is a build automation system that is easy to use, and can be used to
    automate the life cycle of your project, from building and testing to publishing.
    In Android, it takes your source code and configured Android build tools and generates
    an **Android Package** **Kit** (**APK**) file.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Gradle是一个易于使用的构建自动化系统，可用于自动化项目的生命周期，从构建和测试到发布。在Android中，它接受您的源代码和配置的Android构建工具，并生成一个**Android
    Package** **Kit** (**APK**)文件。
- en: 'Android Studio generates the basic Gradle configurations needed to build your
    initial project. Let''s take a look at those configurations. Open `build.gradle`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio生成了构建初始项目所需的基本Gradle配置。让我们来看看这些配置。打开`build.gradle`：
- en: '![](img/6d7ec561-2c9b-49b9-a16f-93a91945c2a7.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d7ec561-2c9b-49b9-a16f-93a91945c2a7.png)'
- en: 'The Android section specifies all Android-specific configurations, such as:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Android部分指定了所有特定于Android的配置，例如：
- en: '`compileSdkVersion`: Specifies the Android API level the app should be compiled
    with.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compileSdkVersion`：指定应用程序应使用的Android API级别进行编译。'
- en: '`buildToolsVersion`: Specifies the build tool version your app should be built
    with.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buildToolsVersion`：指定应用程序应使用的构建工具版本。'
- en: '`applicationId`: This is used to uniquely identify the application when publishing
    to the Play Store. As you may have noticed, it is currently the same as the package
    name you specified when creating the app. The `applicationId` defaults to the
    package name on creation, but that doesn''t mean you can''t make them different.
    You can. Just remember, you shouldn''t change the `applicationId` again after
    you publish the first version of the app. The package name can be found in the
    app''s Manifest file.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`applicationId`：在发布到Play商店时用于唯一标识应用程序。您可能已经注意到，它目前与创建应用程序时指定的包名称相同。在创建时，`applicationId`默认为包名称，但这并不意味着您不能使它们不同。您可以。只是记住，在发布应用程序的第一个版本后，不应再次更改`applicationId`。包名称可以在应用程序的清单文件中找到。'
- en: '`minSdkVersion`: As specified earlier, this specifies the minimum API level
    required to run the app.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`minSdkVersion`：如前所述，这指定了运行应用程序所需的最低API级别。'
- en: '`targetSdkVersion`: Specifies the API level used to test your app.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`targetSdkVersion`：指定用于测试应用的API级别。'
- en: '`versionCode`: Specifies the version number of your app. This should be changed
    for every new version before publishing.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`versionCode`：指定应用的版本号。在发布之前，每个新版本都应更改此版本号。'
- en: '`versionName`: Specifies a user-friendly version name for your app.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`versionName`：为您的应用指定一个用户友好的版本名称。'
- en: The Dependencies section specifies dependencies needed to build your app.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖项部分指定了构建应用程序所需的依赖项。
- en: Parts of an Android project
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android项目的各个部分
- en: 'We will have a look at the different parts of our project. The screenshot depicts
    our project:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看看项目的不同部分。屏幕截图显示了我们的项目：
- en: '![](img/049af957-80d6-464e-83db-de7e64e52102.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/049af957-80d6-464e-83db-de7e64e52102.png)'
- en: 'Let''s take a further look at the different parts of our project:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步了解项目的不同部分：
- en: 'The `manifests/AndroidManifest.xml`: Specifies important details about your
    app required by the Android system to run the app. Part of these details are:'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manifests/AndroidManifest.xml`：指定Android系统运行应用程序所需的有关应用程序的重要细节。其中一些细节是：'
- en: The package name
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包名
- en: Describing the components of the app, including the activities, services, and
    many more
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述应用程序的组件，包括活动，服务等等
- en: Declaring the permissions required by your app
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明应用程序所需的权限
- en: 'The `res` directory: Contains application resources such as images, xml layouts,
    colors, dimensions, and string resources:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res`目录：包含应用程序资源，如图像，xml布局，颜色，尺寸和字符串资源：'
- en: 'The `res/layout` directory: Contains xml layouts that define the app''s **User
    Interface** (**UI**)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res/layout`目录：包含定义应用程序**用户界面**（**UI**）的xml布局'
- en: 'The `res/menu` directory: Contains layouts that define the content of the app''s
    menus'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res/menu`目录：包含定义应用程序菜单内容的布局'
- en: 'The `res/values` directory: Contains resources such as colors (`res/values/colors.xml`)
    and strings (`res/values/strings.xml`)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res/values`目录：包含资源，如颜色（`res/values/colors.xml`）和字符串（`res/values/strings.xml`）'
- en: And, your Java and/or Kotlin source files
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及您的Java和/或Kotlin源文件
- en: Running your app
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行您的应用程序
- en: Android gives you the ability to run your app on an actual device or a virtual
    one even before publishing it on the Google Play Store.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Android使您能够在将应用程序发布到Google Play商店之前，就可以在实际设备或虚拟设备上运行您的应用程序。
- en: The Android emulator
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android模拟器
- en: The Android SDK comes with a virtual mobile device that runs on your computer
    and makes use of its resources. This virtual mobile device is called the emulator. The
    emulator is basically a configurable mobile device. You can configure its RAM
    size, screen size, and so on. You can also run more than one emulator. This is
    most helpful when you want to test your app on different device configurations
    (such as screen sizes and Android versions) but can't afford to get actual ones.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK配备了一个在计算机上运行并利用其资源的虚拟移动设备。这个虚拟移动设备称为模拟器。模拟器基本上是一个可配置的移动设备。您可以配置其RAM大小，屏幕大小等。您还可以运行多个模拟器。当您想要在不同的设备配置（如屏幕大小和Android版本）上测试应用程序，但又负担不起实际设备时，这是非常有帮助的。
- en: You can read more about the emulator on the developer page, at [https://developer.android.com/studio/run/emulator](https://developer.android.com/studio/run/emulator).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在开发者页面上阅读有关模拟器的更多信息，网址为[https://developer.android.com/studio/run/emulator](https://developer.android.com/studio/run/emulator)。
- en: Creating an Android emulator
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Android模拟器
- en: 'An Android emulator can be created from the **Android Virtual Device **(**AVD**) Manager.
    You can start the AVD Manager by clicking on its icon on the Android Studio toolbar,
    as shown in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Android模拟器可以从**Android虚拟设备（AVD）**管理器创建。您可以通过单击Android Studio工具栏上的图标来启动AVD管理器，如下面的屏幕截图所示：
- en: '![](img/277e67e3-b435-45d8-b687-3854126f325a.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/277e67e3-b435-45d8-b687-3854126f325a.png)'
- en: 'Or, alternatively, by selecting Tools | Android | AVD Manager from the menu:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，通过从菜单中选择工具| Android | AVD管理器：
- en: '![](img/d557c18f-0f51-4402-89af-9830d68b1103.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d557c18f-0f51-4402-89af-9830d68b1103.png)'
- en: 'On the Your Virtual Devices screen, click the Create Virtual Device... button:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在“您的虚拟设备”屏幕上，单击“创建虚拟设备...”按钮：
- en: '![](img/df251bfe-c63f-4231-9244-f0acda1c34ec.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df251bfe-c63f-4231-9244-f0acda1c34ec.png)'
- en: 'If you already have an emulator created, the button will be at the bottom of
    the screen:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经创建了模拟器，按钮将位于屏幕底部：
- en: '![](img/9a6ec546-854e-496b-bbd0-70edaca3e78d.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9a6ec546-854e-496b-bbd0-70edaca3e78d.png)'
- en: The next step is to select the type of device you want to emulate. The AVD Manager
    allows you to create emulators for TVs, phones, tablets, and Android wear devices.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是选择要模拟的设备类型。AVD管理器允许您为电视，手机，平板电脑和Android穿戴设备创建模拟器。
- en: 'Make sure the Phone is selected in the Category section on the left-hand side
    of the screen. Go through the list of devices in the middle of the screen and
    choose one. Then, click Next:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在屏幕左侧的类别部分中选择“手机”。浏览屏幕中间的设备列表并选择一个。然后，单击“下一步”：
- en: '![](img/4e86bf56-ba32-487c-9826-58ce6e0a4a53.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e86bf56-ba32-487c-9826-58ce6e0a4a53.png)'
- en: 'On the System Image screen, select the version of Android you want your device
    to run on, and click Next:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统映像屏幕上，选择您希望设备运行的Android版本，然后单击“下一步”：
- en: '![](img/c522fc7b-4038-46c4-b48e-231fa030b970.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c522fc7b-4038-46c4-b48e-231fa030b970.png)'
- en: If the SDK version you want to emulate is not downloaded, click on the Download
    link next to it in order to download it.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要模拟的SDK版本尚未下载，请单击其旁边的下载链接以下载它。
- en: 'On the Verify Configuration screen, go through and confirm the virtual device
    settings by clicking the Finish button:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在验证配置屏幕上，通过单击“完成”按钮来确认虚拟设备设置：
- en: '![](img/2baedaa3-d90e-4bbf-b949-5ace2d8fe445.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2baedaa3-d90e-4bbf-b949-5ace2d8fe445.png)'
- en: 'You will be sent back to the Your Virtual Devices screen, with your new emulator
    showing the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被发送回“您的虚拟设备”屏幕，您的新模拟器将显示如下：
- en: '![](img/4178f043-6110-4f5f-b821-d2e16a0d2196.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4178f043-6110-4f5f-b821-d2e16a0d2196.png)'
- en: You can click on the play icon under the Actions tab to start the emulator,
    or the pencil icon to edit its configurations.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以单击“操作”选项卡下的播放图标来启动模拟器，或者单击铅笔图标来编辑其配置。
- en: 'Let''s go ahead and start the emulator we just created by clicking on the play
    icon:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续通过单击播放图标来启动刚刚创建的模拟器：
- en: '![](img/64294223-858a-495b-bf18-0abfa0823d13.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/64294223-858a-495b-bf18-0abfa0823d13.png)'
- en: As you may have noticed, the virtual device comes with a toolbar on the right-hand
    side. That toolbar is known as the **emulator toolbar**. It gives you the ability
    to emulate functionalities such as shutdown, screen rotation, volume increase
    and decrease, and zoom controls.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，虚拟设备右侧带有一个工具栏。该工具栏称为**模拟器工具栏**。它使您能够模拟功能，如关闭、屏幕旋转、音量增加和减少以及缩放控件。
- en: 'Clicking on the More(...) icon at the bottom of the toolbar also gives you
    access to extra controls to simulate functionalities such as fingerprint, device
    location, message sending, phone calls, and battery power:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 单击工具栏底部的More(...)图标还可以让您访问额外的控件，以模拟指纹、设备位置、消息发送、电话呼叫和电池电量等功能：
- en: '![](img/79b3d884-c4e7-41cb-a3ea-1c91d9168797.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/79b3d884-c4e7-41cb-a3ea-1c91d9168797.png)'
- en: Running from an emulator
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从模拟器运行
- en: 'Running your app from an emulator is pretty easy. Click on the play icon on
    the Android Studio toolbar, as shown in the following screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 从模拟器运行您的应用程序非常容易。单击Android Studio工具栏上的播放图标，如下面的屏幕截图所示：
- en: '![](img/2b305cd1-b362-4c4a-a312-4f357abde8d6.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b305cd1-b362-4c4a-a312-4f357abde8d6.png)'
- en: 'On the Select Deployment Target screen that pops up, select the device you
    want to run the app on and click OK:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在弹出的“选择部署目标”屏幕上，选择要在其上运行应用程序的设备，然后单击“确定”：
- en: '![](img/8405a62d-497c-4a9e-b218-3f8bbcacb4ff.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8405a62d-497c-4a9e-b218-3f8bbcacb4ff.png)'
- en: 'Android Studio will build and run your app on the emulator:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio将在模拟器上构建和运行您的应用程序：
- en: '![](img/5aecaf19-654f-454f-8213-6e658bab6a2e.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5aecaf19-654f-454f-8213-6e658bab6a2e.png)'
- en: 'If you do not already have an emulator running, your emulators will show up
    under the ***Available Virtual Devices*** section. Selecting them will start the
    emulator and then run your app on it:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未运行模拟器，您的模拟器将显示在***可用虚拟设备***部分下。选择它们将启动模拟器，然后在其上运行您的应用程序：
- en: '![](img/088f6a76-9f8b-4257-9a33-d0d6e2a38ed7.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/088f6a76-9f8b-4257-9a33-d0d6e2a38ed7.png)'
- en: Running on an actual device
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在实际设备上运行
- en: 'To run your app on an actual device, you can build and copy the APK onto the
    device and run it from there. To do this, Android requires that the device is
    enabled to allow the installation of apps from unknown sources. To do this, perform
    the following steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要在实际设备上运行您的应用程序，您可以构建并将APK复制到设备上，并从那里运行。为此，Android要求设备启用允许从未知来源安装应用程序的选项。请执行以下步骤：
- en: Open the Settings app on your device.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的设备上打开“设置”应用程序。
- en: Select Security.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“安全”。
- en: Look for and turn on the Unknown Sources option.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找并打开“未知来源”选项。
- en: You will be prompted about the danger that comes with installing apps from Unknown
    sources. Read carefully and click OK to confirm.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将收到有关从未知来源安装应用程序的危险的提示。仔细阅读并单击“确定”以确认。
- en: That's it. You can now upload your APK and run it on the phone.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就是这样。您现在可以上传您的APK并在手机上运行它。
- en: You can easily disable the Unknown Sources setting by going back to Settings |
    Security and turning off the option.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过返回到“设置”|“安全”并关闭该选项来轻松禁用“未知来源”设置。
- en: 'We can all agree that this way of running your app is not very ideal, especially
    for debugging. With this in mind, Android devices come with the ability to run
    and debug your app very easily without having to upload your app to the device.
    This can either be done by connecting your device via a USB cable. To do this,
    Android requires Developer Mode to be enabled. Follow the instructions below to
    enable Developer Mode:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都可以同意以这种方式运行您的应用程序并不是非常理想的，特别是用于调试。考虑到这一点，Android设备具有在不必将应用程序上传到设备的情况下非常轻松地运行和调试应用程序的能力。这可以通过连接设备使用USB电缆来完成。为此，Android要求启用开发者模式。请按照以下说明启用开发者模式：
- en: Open the Settings app on your device.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的设备上打开“设置”应用程序。
- en: Scroll down and select About phone.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并选择“关于手机”。
- en: On the **Phone status** screen, scroll down and tap **Build** **number** multiple
    times until you see a toast that says You're now a developer!
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“手机状态”屏幕上，向下滚动并点击“版本号”多次，直到看到一个提示，上面写着“您现在是开发者！”
- en: Go back to the **Settings** screen. You should now see a Developer options entry.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到“设置”屏幕。现在应该会看到“开发人员选项”条目。
- en: Select Developer options.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“开发人员选项”。
- en: On the Developer options screen, turn on the switch at the top of the screen.
    If it's off, you'll be prompted with an Allow development settings? dialog. Click
    OK to confirm.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“开发人员选项”屏幕上，打开屏幕顶部的开关。如果关闭，您将收到一个“允许开发设置？”对话框。单击“确定”以确认。
- en: Scroll down and turn on USB debugging. You'll be prompted with an **Allow USB
    debugging?** dialog. Click OK to confirm.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并打开USB调试。您将收到一个**允许USB调试？**对话框。单击“确定”以确认。
- en: Next, connect your device to your computer via the USB.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过USB将您的设备连接到计算机。
- en: You'll be prompted with another ***Allow USB debugging?*** dialog that has your
    computer's RSA key fingerprint. Check the Always allow from this computer option,
    and click OK to confirm.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将收到另一个***允许USB调试？***对话框，其中包含您计算机的RSA密钥指纹。选择“始终允许此计算机”选项，然后单击“确定”以确认。
- en: 'You''re now set to run your app on the device. Once again, click the Run button
    on the toolbar, select your device in the options shown in the Select Deployment
    Target dialog, and click OK:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以在设备上运行您的应用程序。再次单击工具栏上的“运行”按钮，在“选择部署目标”对话框中选择您的设备，并单击“确定”：
- en: '![](img/b3f241b8-d7b1-4747-be3b-c305f8c68bad.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b3f241b8-d7b1-4747-be3b-c305f8c68bad.png)'
- en: 'That''s it. You should now have your app showing on your device:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。您现在应该在您的设备上看到您的应用程序：
- en: '![](img/5f305bda-f5ac-4a32-81cf-87927112b045.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5f305bda-f5ac-4a32-81cf-87927112b045.png)'
- en: Summary
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we went through the process of checking and installing the
    JDK, which is required for Android development. We also installed and set up our
    Android Studio environment. We created our first Android app and learned to run
    it on an emulator and on an actual device.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们经历了检查和安装JDK的过程，这是Android开发所必需的。我们还安装并设置了我们的Android Studio环境。我们创建了我们的第一个Android应用程序，并学会在模拟器和实际设备上运行它。
- en: In the next chapter, we'll learn to configure and set up Android Studio and
    our project for development with Kotlin.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何配置和设置Android Studio和我们的项目以使用Kotlin进行开发。
