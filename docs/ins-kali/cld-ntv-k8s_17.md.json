["```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n\u00a0\u00a0name: delayedjobs.delayedresources.mydomain.com\nspec:\n\u00a0\u00a0group: delayedresources.mydomain.com\n\u00a0\u00a0versions:\n\u00a0\u00a0\u00a0\u00a0- name: v1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0served: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openAPIV3Schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: object\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0properties:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: object\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0properties:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0delaySeconds:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: integer\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: string\n\u00a0\u00a0scope: Namespaced\n\u00a0\u00a0conversion:\n\u00a0\u00a0\u00a0\u00a0strategy: None\n\u00a0\u00a0names:\n\u00a0\u00a0\u00a0\u00a0plural: delayedjobs\n\u00a0\u00a0\u00a0\u00a0singular: delayedjob\n\u00a0\u00a0\u00a0\u00a0kind: DelayedJob\n\u00a0\u00a0\u00a0\u00a0shortNames:\n\u00a0\u00a0\u00a0\u00a0- dj\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n\u00a0\u00a0name: delayedjob.delayedresources.mydomain.com\nspec:\n\u00a0\u00a0group: delayedresources.mydomain.com\n\u00a0\u00a0versions:\n\u00a0\u00a0\u00a0\u00a0- name: v1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0served: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: false\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deprecated: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deprecationWarning: \"DelayedJob v1 is deprecated!\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openAPIV3Schema:\n\t\t\u2026\n\u00a0\u00a0\u00a0\u00a0- name: v2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0served: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openAPIV3Schema:\n\t\t...\n\u00a0\u00a0scope: Namespaced\n\u00a0\u00a0conversion:\n\u00a0\u00a0\u00a0\u00a0strategy: None\n\u00a0\u00a0names:\n\u00a0\u00a0\u00a0\u00a0plural: delayedjobs\n\u00a0\u00a0\u00a0\u00a0singular: delayedjob\n\u00a0\u00a0\u00a0\u00a0kind: DelayedJob\n\u00a0\u00a0\u00a0\u00a0shortNames:\n\u00a0\u00a0\u00a0\u00a0- dj\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n\u00a0\u00a0name: delayedjob.delayedresources.mydomain.com\nspec:\n\u00a0\u00a0group: delayedresources.mydomain.com\n\u00a0\u00a0versions:\n\u00a0\u00a0\u00a0\u00a0- name: v1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0served: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openAPIV3Schema:\n\t\t...\n\u00a0\u00a0scope: Namespaced\n\u00a0\u00a0conversion:\n\u00a0\u00a0\u00a0\u00a0strategy: Webhook\n\u00a0\u00a0\u00a0\u00a0webhook:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clientConfig:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0url: \"https://webhook-conversion.com/delayedjob\"\n\u00a0\u00a0names:\n\u00a0\u00a0\u00a0\u00a0plural: delayedjobs\n\u00a0\u00a0\u00a0\u00a0singular: delayedjob\n\u00a0\u00a0\u00a0\u00a0kind: DelayedJob\n\u00a0\u00a0\u00a0\u00a0shortNames:\n\u00a0\u00a0\u00a0\u00a0- dj\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openAPIV3Schema:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: object\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0properties:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: object\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0properties:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0delaySeconds:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: integer\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: string\n```", "```\napiVersion: delayedresources.mydomain.com/v1\nkind: DelayedJob\nmetadata:\n\u00a0\u00a0name: my-instance-of-delayed-job\nspec:\n\u00a0\u00a0delaySeconds: 6000\n\u00a0\u00a0image: \"busybox\"\n```", "```\n    kubectl apply -f delayedjob-crd-spec.yaml\n    ```", "```\n    customresourcedefinition \"delayedjob.delayedresources.mydomain.com\" has been created\n    ```", "```\n    kubectl apply -f my-delayed-job.yaml\n    ```", "```\ndelayedjob \"my-instance-of-delayed-job\" has been created\n```", "```\n// The main function of our controller\nfunction main() {\n\u00a0\u00a0// While loop which runs forever\n\u00a0\u00a0while() {\n\u00a0\u00a0\u00a0\u00a0\u00a0// fetch the full list of delayed job objects from the cluster\n\tvar currentDelayedJobs = kubeAPIConnector.list(\"delayedjobs\");\n\u00a0\u00a0\u00a0\u00a0\u00a0// Call the Analysis step function on the list\n\u00a0\u00a0\u00a0\u00a0\u00a0var jobsToSchedule = analyzeDelayedJobs(currentDelayedJobs);\n\u00a0\u00a0\u00a0\u00a0\u00a0// Schedule our Jobs with added delay\n\u00a0\u00a0\u00a0\u00a0\u00a0scheduleDelayedJobs(jobsToSchedule);\n\u00a0\u00a0\u00a0\u00a0\u00a0wait(5000);\n\u00a0\u00a0}\n}\n```", "```\n// The analysis function\nfunction analyzeDelayedJobs(listOfDelayedJobs) {\n\u00a0\u00a0var listOfJobsToSchedule = [];\n\u00a0\u00a0foreach(dj in listOfDelayedJobs) {\n\u00a0\u00a0\u00a0\u00a0// Check if dj has been scheduled, if not, add a Job object with\n\u00a0\u00a0\u00a0\u00a0// added delay command to the to schedule array\n\u00a0\u00a0\u00a0\u00a0if(dj.annotations[\"is-scheduled\"] != \"true\") {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0listOfJobsToSchedule.push({\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: dj.image,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Command: \"sleep \" + dj.delaySeconds + \"s\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0originalDjName: dj.name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0}\n\u00a0\u00a0return listOfJobsToSchedule;\u00a0\u00a0\n}\n```", "```\n// The update function\nfunction scheduleDelayedJobs(listOfJobs) {\n\u00a0\u00a0foreach(job in listOfDelayedJobs) {\n\u00a0\u00a0\u00a0\u00a0// First, go ahead and schedule a regular Kubernetes Job\n\u00a0\u00a0\u00a0\u00a0// which the Kube scheduler can pick up on.\n\u00a0\u00a0\u00a0\u00a0// The delay seconds have already been added to the job spec\n\u00a0\u00a0\u00a0\u00a0// in the analysis step\n\u00a0\u00a0\u00a0\u00a0kubeAPIConnector.create(\"job\", job.image, job.command);\n\u00a0\u00a0\u00a0\u00a0// Finally, mark our original DelayedJob with a \"scheduled\"\n\u00a0\u00a0\u00a0\u00a0// attribute so our controller doesn't try to schedule it again\n\u00a0\u00a0\u00a0\u00a0kubeAPIConnector.update(\"delayedjob\", job.originalDjName,\n\u00a0\u00a0\u00a0\u00a0annotations: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"is-scheduled\": \"true\"\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0} \n}\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n\u00a0\u00a0name: cloud-controller-manager\n\u00a0\u00a0namespace: kube-system\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n\u00a0\u00a0name: system:cloud-controller-manager\nsubjects:\n- kind: ServiceAccount\n\u00a0\u00a0name: cloud-controller-manager\n\u00a0\u00a0namespace: kube-system\nroleRef:\n\u00a0\u00a0apiGroup: rbac.authorization.k8s.io\n\u00a0\u00a0kind: ClusterRole\n\u00a0\u00a0name: cluster-admin\n```", "```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0k8s-app: cloud-controller-manager\n\u00a0\u00a0name: cloud-controller-manager\n\u00a0\u00a0namespace: kube-system\nspec:\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s-app: cloud-controller-manager\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0k8s-app: cloud-controller-manager\n```", "```\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0serviceAccountName: cloud-controller-manager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: cloud-controller-manager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: k8s.gcr.io/cloud-controller-manager:<current ccm version for your version of k8s>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /usr/local/bin/cloud-controller-manager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- --cloud-provider=<cloud provider name>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- --leader-elect=true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- --use-service-account-credentials\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- --allocate-node-cidrs=true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- --configure-cloud-routes=true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- --cluster-cidr=<CIDR of the cluster based on Cloud Provider>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tolerations:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- key: node.cloudprovider.kubernetes.io/uninitialized\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"true\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0effect: NoSchedule\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- key: node-role.kubernetes.io/master\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0effect: NoSchedule\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nodeSelector:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0node-role.kubernetes.io/master: \"\"\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n\u00a0\u00a0name: my-service-with-dns\n\u00a0\u00a0annotations:\n\u00a0\u00a0\u00a0\u00a0external-dns.alpha.kubernetes.io/hostname: myapp.mydomain.com\nspec:\n\u00a0\u00a0type: LoadBalancer\n\u00a0\u00a0ports:\n\u00a0\u00a0- port: 80\n\u00a0\u00a0\u00a0\u00a0name: http\n\u00a0\u00a0\u00a0\u00a0targetPort: 80\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0app: my-app\n```", "```\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n\u00a0\u00a0name: my-domain-ingress\n\u00a0\u00a0annotations:\n\u00a0\u00a0\u00a0\u00a0kubernetes.io/ingress.class: \"nginx\".\nspec:\n\u00a0\u00a0rules:\n\u00a0\u00a0- host: myapp.mydomain.com\n\u00a0\u00a0\u00a0\u00a0http:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0paths:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- backend:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0serviceName: my-app-service\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0servicePort: 80\n```"]