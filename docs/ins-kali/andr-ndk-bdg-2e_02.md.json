["```kt\n    cd $ANDROID_NDK/samples/san-angeles\n    android update project -p ./\n    ```", "```kt\n    Error: The project either has no target set or the target is invalid.\n    Please provide a --target to the 'android update' command.\n\n    ```", "```kt\n    ant debug\n\n    ```", "```kt\n    ant installd\n\n    ```", "```kt\n    adb shell am start -a android.intent.action.MAIN -n com.example.SanAngeles/com.example.SanAngeles.DemoActivity\n\n    ```", "```kt\n    android create project -p ./MyProjectDir -n MyProject -t android-8 -k com.mypackage -a MyActivity\n\n    ```", "```kt\n    android update project -p ./ -l ../MyLibraryProject\n\n    ```", "```kt\nndk-build clean\n\n```", "```kt\nant clean\n\n```", "```kt\nant uninstall\n\n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <manifest \n          package=\"com.example.SanAngeles\"\n          android:versionCode=\"1\"\n          android:versionName=\"1.0\">\n    ...\n            <activity android:name=\".DemoActivity\"\n                      android:label=\"@string/app_name\">\n    ```", "```kt\n    package com.packtpub.store;\n\n    public class Store {\n     static {\n     System.loadLibrary(\"com_packtpub_store_Store\");\n     }\n    }\n\n    ```", "```kt\n    package com.packtpub.store;\n    ...\n    public class StoreActivity extends Activity {\n     private Store mStore = new Store();\n\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            setContentView(R.layout.activity_store);\n\n            if (savedInstanceState == null) {\n                getFragmentManager().beginTransaction()\n                                    .add(R.id.container,\n                                         new PlaceholderFragment())\n                                    .commit();\n            }\n        }\n\n        public static class PlaceholderFragment extends Fragment {\n            public PlaceholderFragment() {\n            }\n\n            @Override\n            public View onCreateView(LayoutInflater inflater,\n                                     ViewGroup container,\n                                     Bundle savedInstanceState)\n            {\n                View rootView = inflater.inflate(R.layout.fragment_store,\n                                                 container, false);\n                return rootView;\n            }\n        }\n    }\n    ```", "```kt\n    package com.packtpub.store;\n\n    public class Store {\n        static {\n            System.loadLibrary(\"com_packtpub_store_Store\");\n        }\n\n     public native int getCount();\n    }\n    ```", "```kt\n    public class StoreActivity extends Activity {\n        ...\n        public static class PlaceholderFragment extends Fragment {\n     private Store mStore = new Store();\n         ...\n            public PlaceholderFragment() {\n            }\n\n            @Override\n            public View onCreateView(LayoutInflater inflater,\n                                     ViewGroup container,\n                                     Bundle savedInstanceState)\n            {\n                View rootView = inflater.inflate(R.layout.fragment_store,\n                                                 container, false);\n     updateTitle();\n                return rootView;\n            }\n\n     private void updateTitle() {\n     int numEntries = mStore.getCount();\n     getActivity().setTitle(String.format(\"Store (%1$s)\",\n     numEntries));\n            }\n        }\n    }\n    ```", "```kt\n    /* DO NOT EDIT THIS FILE - it is machine generated */\n    #include <jni.h>\n    /* Header for class com_packtpub_store_Store */\n\n    #ifndef _Included_com_packtpub_store_Store\n    #define _Included_com_packtpub_store_Store\n    #ifdef __cplusplus\n    extern \"C\" {\n    #endif\n    /*\n     * Class:     com_packtpub_store_Store\n     * Method:    getCount\n     * Signature: ()I\n     */\n    JNIEXPORT jint JNICALL Java_com_packtpub_store_Store_getCount\n      (JNIEnv *, jobject);\n\n    #ifdef __cplusplus\n    }\n    #endif\n    #endif\n    ```", "```kt\n    #include \"com_packtpub_store_Store.h\"\n\n    JNIEXPORT jint JNICALL Java_com_packtpub_store_Store_getCount\n      (JNIEnv* pEnv, jobject pObject) {\n        return 0;\n    }\n    ```", "```kt\n    APP_PLATFORM := android-14\n    APP_ABI := armeabi armeabi-v7a x86\n    ```", "```kt\n#include <unistd.h>\n\u2026\nsleep(3); // in seconds.\n```", "```kt\n    #include \"com_packtpub_store_Store.h\"\n\n    JNIEXPORT jint JNICALL Java_com_packtpub_store_Store_getCount\n      (JNIEnv* pEnv, jobject pObject) {\n     pEnv = 0;\n     return pEnv->CallIntMethod(0, 0);\n    }\n    ```", "```kt\n    cd <projet directory>\n    adb logcat | ndk-stack -sym obj/local/armeabi-v7a\n\n    ```", "```kt\n    apply plugin: 'com.android.application'\n\n    android {\n        compileSdkVersion 21\n        buildToolsVersion \"21.1.2\"\n\n        defaultConfig {\n            applicationId \"com.packtpub.store\"\n            minSdkVersion 14\n            targetSdkVersion 21\n            versionCode 1\n            versionName \"1.0\"\n     ndk {\n     moduleName \"com_packtpub_store_Store\"\n            }\n        }\n        buildTypes {\n            release {\n                minifyEnabled false\n                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            }\n        }\n    }\n\n    dependencies {\n        compile fileTree(dir: 'libs', include: ['*.jar'])\n        compile 'com.android.support:appcompat-v7:21.0.3'\n    }\n    ```", "```kt\n    import org.apache.tools.ant.taskdefs.condition.Os\n\n    apply plugin: 'com.android.application'\n\n    android {\n        compileSdkVersion 21\n        buildToolsVersion \"21.1.2\"\n\n        defaultConfig {\n            applicationId \"com.packtpub.store\"\n            minSdkVersion 14\n            targetSdkVersion 21\n            versionCode 1\n            versionName \"1.0\"\n        }\n        buildTypes {\n            release {\n                minifyEnabled false\n                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            }\n        }\n    ```", "```kt\n            ...\n            sourceSets.main {\n                jniLibs.srcDir 'src/main/libs'\n                jni.srcDirs = []\n            }\n        ```", "```kt\n        ...\n\n     task ndkBuild(type: Exec) {\n     if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n     commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath\n     } else {\n     commandLine 'ndk-build', '-C', file('src/main').absolutePath\n     }\n     }\n\n     tasks.withType(JavaCompile) {\n     compileTask -> compileTask.dependsOn ndkBuild\n     }\n    }\n\n    dependencies {\n        compile fileTree(dir: 'libs', include: ['*.jar'])\n        compile 'com.android.support:appcompat-v7:21.0.3'\n    }\n    ```"]