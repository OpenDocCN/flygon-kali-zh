- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Welcome to Native Docker clustering with Swarm! This is a book about containers
    and distributed systems. We’ll show how to use the native Docker tools to model
    micro services, spawn tasks, scale up the size of your application, and push your
    containers to the Docker clustering limit! In a word, we’ll discuss Docker orchestration.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到具有Swarm的本地Docker集群！这是一本关于容器和分布式系统的书。我们将展示如何使用本地Docker工具来建模微服务，生成任务，扩展应用程序的规模，并将容器推送到Docker集群的极限！一句话，我们将讨论Docker编排。
- en: With the recent rise of Swarm Mode and the enablement of Swarm inside the Docker
    Engine itself, it turned out that the best way to orchestrate Docker is… Docker!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Swarm Mode的最近崛起以及在Docker Engine内部启用Swarm，事实证明编排Docker的最佳方式是……Docker！
- en: Good, but what do we mean by “orchestrate Docker”? What is orchestration? Better,
    what is an orchestra?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不错，但是“编排Docker”是什么意思？什么是编排？更好的是，什么是管弦乐队？
- en: '![Preface](images/preface.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![前言](images/preface.jpg)'
- en: An orchestra is an ensemble of musicians led by a conductor, who dictates tempo,
    rhythm and shapes the sound. Strings, woodwinds, percussions, keyboards and other
    instruments follow the conductor’s direction to perform an astonishing symphony,
    for example Beethoven’s The Ninth.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 管弦乐队是由指挥家带领的音乐家组成的合奏团，指挥家指挥着节奏、节奏和声音的形状。弦乐、木管、打击乐、键盘和其他乐器都遵循指挥家的指导来演奏令人惊叹的交响乐，例如贝多芬的第九交响曲。
- en: 'Similarly, in a containers orchestration system the musicians are tasks, and
    the conductor is a leader service (Swarm primitives). Tasks don’t play a symphony,
    or at least not only: More abstractly they execute some computational job, for
    example they run a webserver. The conductor, Swarm, is responsible for their provisioning,
    their availability, their linkage, their scaling. This (and more) is what we mean
    by “Docker orchestration”.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在容器编排系统中，音乐家是任务，指挥是领导服务（Swarm原语）。任务不仅仅演奏交响乐，或者至少不仅仅是：更抽象地说，它们执行一些计算工作，例如运行Web服务器。指挥家Swarm负责它们的配置、可用性、链接和扩展。这（以及更多）就是我们所说的“Docker编排”。
- en: This book shows how to provision such Docker “orchestras”, how to guarantee
    the availability of the service, how to connect tasks and how to scale the platform,
    to play the symphony of your application.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书展示了如何配置这样的Docker“管弦乐队”，如何保证服务的可用性，如何连接任务以及如何扩展平台，以演奏您应用程序的交响乐。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](ch01.html "Chapter 1. Welcome to Docker Swarm"), *Welcome to Docker
    Swarm*, introduces Swarm, and explains why you need a clustering solution for
    your containers. It illustrates the Swarm features, giving a high-level description
    of its architecture. We define some use cases and describe how Swarm is different
    from Fleet, Kubernetes and Mesos. The chapter proceeds with the Docker tools installation
    and finally with two Swarms provisionings: A local Swarm Standalone and a remote
    Swarm Mode cluster on DigitalOcean.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。欢迎来到Docker Swarm")，“欢迎来到Docker Swarm”，介绍了Swarm，并解释了为什么您需要一个容器的集群解决方案。它说明了Swarm的特性，并对其架构进行了高层次的描述。我们定义了一些用例，并描述了Swarm与Fleet、Kubernetes和Mesos的不同之处。本章介绍了Docker工具的安装，最后介绍了两个Swarm配置：本地Swarm
    Standalone和DigitalOcean上的远程Swarm Mode集群。'
- en: '[Chapter 2](ch02.html "Chapter 2. Discover the Discovery Services"), *Discover
    the Discovery Services*, is a descriptive and mostly abstract chapter. We’ll learn
    what discovery mechanisms and consensus algorithms are, and why they are crucial
    for distributed systems. We’ll describe in detail Raft and its implementation
    Etcd, the consensus mechanism included in Swarm Mode. We will also show the limitations
    of the discovery mechanism used in [Chapter 1](ch01.html "Chapter 1. Welcome to
    Docker Swarm"), *Welcome to Docker Swarm*, by extending the local tiny example
    with Consul, re deploying it.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，“发现发现服务”，是一个描述性和大部分抽象的章节。我们将学习发现机制和共识算法是什么，以及它们对分布式系统的重要性。我们将详细描述Raft及其实现Etcd，这是Swarm模式中包含的共识机制。我们还将通过使用Consul扩展本地微小示例来展示第1章中使用的发现机制的局限性，并重新部署它。
- en: '[Chapter 3](ch03.html "Chapter 3. Meeting Docker Swarm Mode"), *Meeting Docker
    Swarm Mode*, is about the new Docker kit that allows to create task clusters of
    any size. We will introduce Swarmit, the foundation of Docker Swarm Mode, showing
    how it works in Docker 1.12+, discuss its architecture, its concepts, how it’s
    different from the “old” Swarm, and how it organizes workloads by abstracting
    services and tasks.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“了解Docker Swarm模式”，讲述了允许创建任意大小任务集群的新Docker工具包。我们将介绍Swarmit，Docker Swarm模式的基础，展示它在Docker
    1.12+中的工作原理，讨论其架构、概念，以及它与“旧”Swarm的不同之处，以及它如何通过抽象服务和任务来组织工作负载。
- en: '[Chapter 4](ch04.html "Chapter 4. Creating a Production-Grade Swarm"), *Creating
    a Production-Grade Swarm*, shows and discusses the community-driven projects Swarm2k
    and Swarm3k, our 2,300 and 4,800 nodes Swarm clusters experiments, which ran hundreds
    of thousands of containers. We demonstrate how such huge clusters were planned,
    provisioned, and summarize the lessons we learned.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“创建生产级别的Swarm”，展示并讨论了由社区驱动的项目Swarm2k和Swarm3k，我们的2300和4800节点Swarm集群实验，其中运行了数十万个容器。我们演示了如何规划、配置这样庞大的集群，并总结了我们所学到的经验教训。
- en: '[Chapter 5](ch05.html "Chapter 5. Administer a Swarm Cluster"), *Administer a
    Swarm Cluster*, is a chapter about infrastructure. We will show how to increase
    or decrease Swarms sizes, how to promote and demote nodes, and how to update clusters
    and nodes properties. We’ll introduce Shipyard and Portainer.io as graphical UIs
    for Swarm.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“管理Swarm集群”，是关于基础设施的一章。我们将展示如何增加或减少Swarm的大小，如何提升和降级节点，以及如何更新集群和节点属性。我们将介绍Shipyard和Portainer.io作为Swarm的图形用户界面。
- en: '[Chapter 6](ch06.html "Chapter 6. Deploy Real Applications on Swarm"), *Deploy
    Real Applications on Swarm*, is where we will put real applications in motion
    on Swarm and where we add to the discussion some notes about Compose, Docker Stacks
    and Docker Application Bundles. We will show the typical deployment workflow,
    how to filter and schedule containers over the cluster, launch them as services,
    handle containers as tasks. We’ll start defining a web service with Nginx, then
    we’ll deploy a mandatory Wordpress with MySQL example. We’ll finally move on with
    a more realistic app: Apache Spark.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“在Swarm上部署真实应用程序”，是我们将在Swarm上运行真实应用程序并在讨论中添加一些关于Compose、Docker Stacks和Docker
    Application Bundles的注释的地方。我们将展示典型的部署工作流程，如何在集群上过滤和调度容器，将它们作为服务启动，以任务的形式处理容器。我们将开始定义一个带有Nginx的web服务，然后部署一个必需的带有MySQL的Wordpress示例。最后，我们将继续使用一个更现实的应用程序：Apache
    Spark。
- en: '[Chapter 7](ch07.html "Chapter 7. Scaling Up Your Platform"), *Scale Up Your
    Platform*, will develop new topics from the previous chapter. Here we’ll introduce
    Flocker to add storage capacity to Spark on Swarm, and we’ll show how to install
    and use it automatically at a scale in conjunction with Swarm. We’ll refine our
    Spark example by running some real big data jobs and setting up a basic monitoring
    system for this infrastructure.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“扩展你的平台”，将从上一章开发新的主题。在这里，我们将介绍Flocker，为Spark on Swarm增加存储容量，并展示如何在与Swarm结合的规模上自动安装和使用它。我们将通过运行一些真正的大数据作业和为这个基础设施设置一个基本的监控系统来完善我们的Spark示例。
- en: '[Chapter 8](ch08.html "Chapter 8. Exploring Additional Features of Swarm"),
    *Exploring Additional Features to Swarm*, discusses some advanced topics important
    to Swarm, such as Libnetwork and Libkv.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“探索Swarm的其他功能”，讨论了一些对Swarm非常重要的高级主题，比如Libnetwork和Libkv。
- en: '[Chapter 9](ch09.html "Chapter 9. Securing a Swarm Cluster and the Docker Software
    Supply Chain"), *Securing a Swarm Cluster and Docker Software Supply Chain*, will
    focus on security considerations for Swarm clusters. Among the arguments, certificates,
    firewalling concepts for platform, and a mention to Notary.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“保护Swarm集群和Docker软件供应链”，将重点讨论Swarm集群的安全考虑。其中包括证书、平台防火墙概念，以及对Notary的提及。
- en: '[Chapter 10](ch10.html "Chapter 10. Swarm and the Cloud"), *Swarm and the Cloud*,
    is a chapter illustrating the most popular options for running Swarm on cloud
    providers. We’ll install Swarm on AWS and Azure before introducing the Docker
    Datacenter, and we’ll finally move to OpenStack showing how to install and manage
    Swarms on the top of Magnum, the Container as a Service solution for OpenStack.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“Swarm和云”，是一章介绍在云提供商上运行Swarm的最流行选项。我们将在AWS和Azure上安装Swarm，然后介绍Docker Datacenter，最后我们将转向OpenStack，展示如何在Magnum的顶部安装和管理Swarm，Magnum是OpenStack的容器即服务解决方案。
- en: '[Chapter 11](ch11.html "Chapter 11. What is next?"), *What is Next?*, concludes
    the discussion with an overview on the next Docker orchestration trends, such
    as software defined infrastructures, Infrakit, unikernels, Containers as a Service.
    The adventure continues!'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“接下来是什么？”，通过概述下一个Docker编排趋势，比如软件定义基础设施、Infrakit、unikernels、容器即服务，结束了讨论。冒险还在继续！
- en: What you need for this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你需要为这本书做些什么
- en: 'We assume the reader to have some experience using Docker from the command
    line: throughout the book we’ll continuously pull images, run containers, define
    services, expose ports and create networks.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设读者有一些使用Docker命令行的经验：在整本书中，我们将不断地拉取镜像、运行容器、定义服务、暴露端口和创建网络。
- en: Also, the ideal reader possesses a basic understanding of networking protocols
    and is familiar with public and private cloud concepts like virtual machines and
    tenant networks.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，理想的读者具有对网络协议的基本理解，并熟悉公共和私有云概念，比如虚拟机和租户网络。
- en: To follow the examples in the text, you will need Docker and its tools. [Chapter
    1](ch01.html "Chapter 1. Welcome to Docker Swarm"), *Welcome to Docker Swarm*,
    covers their installation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随文本中的示例，你需要Docker及其工具。第1章，“欢迎来到Docker Swarm”，涵盖了它们的安装。
- en: Also, to get the most from the examples, you will need access to a a public
    (for example AWS, Azure or DigitalOcean) or private (for example OpenStack) cloud
    to instantiate Virtual Machines.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，为了从示例中获得最大的收益，你需要访问一个公共（例如AWS、Azure或DigitalOcean）或私有（例如OpenStack）云来实例化虚拟机。
- en: Who this book is for
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is for Docker users - developers and system administrators - who want
    to exploit the current Swarm and Swarmkit features for scaling massive applications
    with containers**.**
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为Docker用户 - 开发人员和系统管理员 - 而写的，他们想要利用当前的Swarm和Swarmkit功能来扩展容器的大规模应用。
- en: Conventions
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您会发现许多文本样式，用于区分不同类型的信息。以下是一些样式的例子及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "When
    executing `docker swarm init`, just copy-paste the lines printed as output"'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下："当执行 `docker swarm
    init` 时，只需复制粘贴输出的行"
- en: 'A block of code is set as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一块代码设置如下：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都是这样写的：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The UI has the expected options, included a list of templates for launching
    containers, such as **MySQL** or a P**rivate Registry**, but at the moment of
    writing it doesn’t support Swarm services yet"'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会在文本中出现，如："UI具有预期的选项，包括启动容器的模板列表，例如**MySQL**或**私有注册表**，但在撰写本文时尚不支持Swarm服务"'
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的框中。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 技巧和窍门是这样出现的。
