- en: Chapter 3. Securing and Hardening Linux Kernels
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。保护和加固Linux内核
- en: 'In this chapter, we will turn our attention to securing and hardening the one
    key piece that every container running on your Docker host relies on: the Linux
    kernel. We will focus on two topics: guides that you can follow to harden the
    Linux kernel and tools that you can add to your arsenal to help harden the Linux
    kernel. Let''s take a brief look at what we will be covering in this chapter before
    diving in:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将把注意力转向保护和加固每个在您的Docker主机上运行的容器所依赖的关键组件：Linux内核。我们将专注于两个主题：您可以遵循的加固Linux内核的指南和您可以添加到您的工具库中以帮助加固Linux内核的工具。在深入讨论之前，让我们简要地看一下本章将涵盖的内容：
- en: Linux kernel hardening guides
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux内核加固指南
- en: Linux kernel hardening tools
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux内核加固工具
- en: '**Grsecurity**'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grsecurity**'
- en: '**Lynis**'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lynis**'
- en: Linux kernel hardening guides
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux内核加固指南
- en: In this section, we will be looking at the SANS Institute hardening guide for
    the Linux kernel. While a lot of this information is outdated, I believe that
    it is important for you to understand how the Linux kernel has evolved and become
    a secure entity. If you were to step into a time machine and go back to the year
    2003 and attempt to do the things you want to do today, this is everything you
    would have to do.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一下SANS研究所关于Linux内核的加固指南。虽然很多信息已经过时，但我认为了解Linux内核如何发展并成为一个安全实体是很重要的。如果你能够进入时光机，回到2003年并尝试做今天想做的事情，这就是你必须做的一切。
- en: First, some background information about the SANS Institute. It is a private
    US-based company that specializes in cybersecurity and information technology-related
    training and education. These trainings prepare professionals to defend their
    environments against attackers. SANS also offers a variety of free security-related
    content via their SANS Technology Institute Leadership Lab. More information about
    this can be found at [http://www.sans.edu/research/leadership-laboratory](http://www.sans.edu/research/leadership-laboratory).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，关于SANS研究所的一些背景信息。这是一家总部位于美国的私人公司，专门从事网络安全和信息技术相关的培训和教育。这些培训使专业人员能够防御其环境免受攻击者的侵害。SANS还通过其SANS技术学院领导实验室提供各种免费的安全相关内容。有关更多信息，请访问[http://www.sans.edu/research/leadership-laboratory](http://www.sans.edu/research/leadership-laboratory)。
- en: To help alleviate against this widespread attack base, there needs to be security
    focus on every aspect of your IT infrastructure and software. Based upon this,
    the first place to start would be at the Linux kernel.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助减轻这种广泛的攻击基础，需要在IT基础设施和软件的每个方面都有安全关注。基于此，开始的第一步应该是在Linux内核上。
- en: SANS hardening guide deep dive
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SANS加固指南深入研究
- en: As we have already covered the background of the SANS Institute, let's go ahead
    and jump into the guide that we will be following to secure our Linux kernel(s).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经介绍了SANS研究所的背景，让我们继续并开始遵循我们将用来保护我们的Linux内核的指南。
- en: 'For reference, we will be using the following URL and highlighting the sticking
    points that you should be focusing on and implementing in your environments to
    secure the Linux kernel:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，我们将使用以下URL，并重点介绍您应该关注和在您的环境中实施以保护Linux内核的关键点：
- en: '[https://www.sans.org/reading-room/whitepapers/linux/linux-kernel-hardening-1294](https://www.sans.org/reading-room/whitepapers/linux/linux-kernel-hardening-1294)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.sans.org/reading-room/whitepapers/linux/linux-kernel-hardening-1294](https://www.sans.org/reading-room/whitepapers/linux/linux-kernel-hardening-1294)'
- en: The Linux kernel is an always-developing and maturing piece of the Linux ecosystem
    and for this reason, it's important to get a firm grasp on the Linux kernel as
    it stands currently, which will help when looking to lockdown the new feature
    sets that might come in future releases.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核是Linux生态系统中不断发展和成熟的一部分，因此，重要的是要对当前的Linux内核有一个牢固的掌握，这将有助于在未来的发布中锁定新的功能集。
- en: The Linux kernel allows loading modules without having to recompile or reboot,
    which is great when you are looking to eliminate downtime. Some various operating
    systems require reboots when trying to apply updates to a certain operating system/application
    criteria. This can also be a bad thing with regards to the Linux kernel as the
    attackers can inject harmful material into the kernel and wouldn't need to reboot
    the machine, which might be caught by someone noticing the reboot of the system.
    For this reason, it is suggested that a statically compiled kernel with the load
    option be disabled to help prevent against attack vectors.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核允许加载模块，而无需重新编译或重新启动，这在您希望消除停机时间时非常有用。一些不同的操作系统在尝试将更新应用到特定的操作系统/应用程序标准时需要重新启动。这也可能是Linux内核的一个坏处，因为攻击者可以向内核注入有害材料，并且不需要重新启动机器，这可能会被注意到系统的重新启动。因此，建议禁用带有加载选项的静态编译内核，以帮助防止攻击向量。
- en: Buffer overflows are another way attackers can compromise a kernel and gain
    entry. Applications have a limit, or buffer, on how much a user can store in memory.
    An attacker overflows this buffer with specially crafted code, which could let
    the attacker gain control of the system that, in turn, will empower them to do
    whatever they want at that point. They could add backdoors to the system, send
    logs off to a nefarious place, add additional users to the system, or even lock
    you out of the system. To prevent these type of attacks, there are three areas
    of focus that the guide hones in on.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 缓冲区溢出是攻击者入侵内核并获取权限的另一种方式。应用程序在内存中存储用户数据的限制或缓冲区。攻击者使用特制的代码溢出这个缓冲区，这可能让攻击者控制系统，从而赋予他们在那一点上做任何他们想做的事情的权力。他们可以向系统添加后门，将日志发送到一个邪恶的地方，向系统添加额外的用户，甚至将您锁在系统外。为了防止这些类型的攻击，指南专注于三个重点领域。
- en: The first is the **Openwall** Linux kernel patch that was a patch created to
    address this issue. This patch also includes some other security enhancements
    that might be attributed to your running environments. Some of these items included
    restricted links and file reads/writes in the `/tmp` folder location and restricted
    access to the `/proc` locations on the filesystem. It also includes enhanced enforcement
    for a number of user processes that you could control as well as the ability to
    destroy shared memory segments, which were not in use, and lastly, some other
    enhancements for those of you that are running kernel versions older than version
    2.4.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是**Openwall** Linux内核补丁，这是一个用来解决这个问题的补丁。这个补丁还包括一些其他安全增强功能，可能归因于您的运行环境。其中一些项目包括在`/tmp`文件夹位置限制链接和文件读取/写入，以及对文件系统上`/proc`位置的访问限制。它还包括对一些用户进程的增强执行力，您也可以控制，以及能够销毁未使用的共享内存段，最后，对于那些运行内核版本旧于2.4版本的用户，还有一些其他增强功能。
- en: If you are running an older version of the Linux kernel, you will want to check
    out the Openwall hardened Linux at [http://www.openwall.com/Owl/](http://www.openwall.com/Owl/)
    and Openwall Linux at [http://www.openwall.com/linux/](http://www.openwall.com/linux/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在运行较旧版本的Linux内核，您将希望查看[http://www.openwall.com/Owl/](http://www.openwall.com/Owl/)上的Openwall强化Linux和[http://www.openwall.com/linux/](http://www.openwall.com/linux/)上的Openwall
    Linux。
- en: The next piece of software is called **Exec** **Shield** and it takes a similar
    approach to the Openwall Linux kernel patch, which implements a non-executable
    stack, but Exec Shield extends this by attempting to protect any and all segments
    of virtual memory. This patch is limited to the prevention of attacks against
    the Linux kernel address space. These address spaces include stack, buffer, or
    function pointer overflow spaces.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个软件叫做**Exec** **Shield**，它采用了类似于Openwall Linux内核补丁的方法，实现了一个不可执行的堆栈，但是Exec
    Shield通过尝试保护任何和所有的虚拟内存段来扩展了这一点。这个补丁仅限于防止针对Linux内核地址空间的攻击。这些地址空间包括堆栈、缓冲区或函数指针溢出空间。
- en: More information about this patch can be found at [https://en.wikipedia.org/wiki/Exec_Shield](https://en.wikipedia.org/wiki/Exec_Shield).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个补丁的更多信息可以在[https://en.wikipedia.org/wiki/Exec_Shield](https://en.wikipedia.org/wiki/Exec_Shield)找到。
- en: 'The last one is **PaX**, which is a team that creates a patch for the Linux
    kernel to prevent against a variety of software vulnerabilities. As this is something
    we will be talking about in-depth in the next section, we will just discuss some
    of its features. This patch focuses on the following three address spaces:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个是**PaX**，它是一个为Linux内核创建补丁以防止各种软件漏洞的团队。由于这是我们将在下一节深入讨论的内容，我们将只讨论一些它的特点。这个补丁关注以下三个地址空间：
- en: '**PAGEEXEC**: These are paging-based, non-executable pages'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PAGEEXEC**：这些是基于分页的、不可执行的页面'
- en: '**SEGMEXEC**: These are segmentation–based, non-executable pages'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEGMEXEC**：这些是基于分段的、不可执行的页面'
- en: '**MPROTECT**: These are `mmap()` and `mprotect()` restrictions'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MPROTECT**：这些是`mmap()`和`mprotect()`的限制'
- en: To learn more about PaX, visit [https://pax.grsecurity.net](https://pax.grsecurity.net).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关PaX的更多信息，请访问[https://pax.grsecurity.net](https://pax.grsecurity.net)。
- en: 'Now that you have seen how much efforts you had to put in, you should be glad
    that security is now at the forefront for everyone, especially, the Linux kernel.
    In some of the later chapters, we will be looking at some of the following new
    technologies that are being used to help secure environments:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经看到了你需要付出多少努力，你应该高兴安全现在对每个人都是至关重要的，特别是Linux内核。在后面的一些章节中，我们将看一些正在用于帮助保护环境的新技术：
- en: Namespaces
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名空间
- en: cgroups
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cgroups
- en: sVirt
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sVirt
- en: Summon
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Summon
- en: There are also a lot of capabilities that can be accomplished through the `--cap-ad
    and --cap-drop` switches on your `docker run` command.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`docker run`命令上的`--cap-ad`和`--cap-drop`开关也可以实现许多功能。
- en: 'Even like the days before, you still need to be aware of the fact that the
    kernel is shared throughout all your containers on a host, therefore, you need
    to protect this kernel and watch out for vulnerabilities when necessary. The following
    link allows you to view **Common** **Vulnerabilities and** **Exposures** (**CVE**)
    in the Linux kernel:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 即使像以前一样，你仍然需要意识到内核在主机上的所有容器中是共享的，因此，你需要保护这个内核，并在必要时注意漏洞。以下链接允许您查看Linux内核中的**常见**
    **漏洞和** **曝光**（**CVE**）：
- en: '[https://www.cvedetails.com/vulnerability-list/vendor_id-33/product_id-47/cvssscoremin-7/cvssscoremax-7.99/Linux-Linux-Kernel.html](https://www.cvedetails.com/vulnerability-list/vendor_id-33/product_id-47/cvssscoremin-7/cvssscoremax-7.99/Linux-Linux-Kernel.html)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.cvedetails.com/vulnerability-list/vendor_id-33/product_id-47/cvssscoremin-7/cvssscoremax-7.99/Linux-Linux-Kernel.html](https://www.cvedetails.com/vulnerability-list/vendor_id-33/product_id-47/cvssscoremin-7/cvssscoremax-7.99/Linux-Linux-Kernel.html)'
- en: Access controls
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问控制
- en: There are various levels of access controls that you can layer on top of Linux
    as well as recommendations that you should follow with reference to certain users,
    and these would be the superusers on your system. Just to give some definition
    to superusers, they are the accounts on the system that have unfettered access
    to do anything and everything. You should include the root user when you are layering
    on these access controls.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Linux上叠加各种级别的访问控制，以及应该遵循的特定用户的建议，这些用户将是您系统上的超级用户。只是为了给超级用户一些定义，他们是系统上具有无限制访问权限的帐户。在叠加这些访问控制时，应包括root用户。
- en: 'These access control recommendations will be the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这些访问控制建议将是以下内容：
- en: Restricting usage of the root user
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制root用户的使用
- en: Restricting its ability to SSH
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制其SSH的能力
- en: 'By default, on some systems, root has the ability to SSH to machine if SSH
    is enabled, which we can see from a portion of the `/etc/ssh/sshd_config` file
    on some Linux systems, as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，在某些系统上，如果启用了SSH，root用户有能力SSH到机器上，我们可以从一些Linux系统的`/etc/ssh/sshd_config`文件的部分中看到如下内容：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'From what you can see here, the section for `PermitRootLogin no` is commented
    out with the `#` symbol so that means this line won''t be interpreted. To change
    this, simply remove the `#` symbol and save the file and restart the service.
    The section of this file should now be similar to the following code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里你可以看到，“PermitRootLogin no”部分被用“#”符号注释掉，这意味着这行不会被解释。要更改这个，只需删除“#”符号，保存文件并重新启动服务。该文件的部分现在应该类似于以下代码：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, you may want to restart the SSH service for these changes to take affect,
    as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可能希望重新启动SSH服务以使这些更改生效，如下所示：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Restrict its ability to log in beyond the console. On most Linux systems, there
    is a file in `/etc/default/login` and in that file, there is a line that is similar
    to the following:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制其在控制台之外的登录能力。在大多数Linux系统上，有一个文件在`/etc/default/login`中，在该文件中，有一行类似以下的内容：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Similar to the preceding example, we need to uncomment this line by removing
    `#` for this to take affect. This will only allow the root user to log in at `console`
    and not via SSH or other methods.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于前面的例子，我们需要通过删除`#`来取消注释此行，以使其生效。这将只允许root用户在`console`上登录，而不是通过SSH或其他方法。
- en: Restrict `su` command
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制`su`命令
- en: 'The `su` commands allow you to login as the root user and be able to issue
    root-level commands, which gives you full access to the entire system. To restrict
    access to who can use this command, there is a file located at `/etc/pam.d/su`,
    and in this file, you will see a line similar to the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`su`命令允许您以root用户身份登录并能够发出root级别的命令，从而完全访问整个系统。为了限制谁可以使用此命令，有一个文件位于`/etc/pam.d/su`，在这个文件中，您会看到类似以下的一行：'
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can also choose the following line of code here, depending upon your Linux
    flavor:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择这里的以下代码行，具体取决于您的Linux版本：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The check for wheel membership will be done against the current user ID for
    the ability to use the `su` command.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 检查wheel成员资格将根据当前用户ID来执行对`su`命令的使用能力。
- en: Requiring `sudo` to run commands
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求使用`sudo`来运行命令
- en: 'Some other access controls that are remanded are the use of the following controls:'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他一些推荐使用的访问控制包括以下控制：
- en: '**Mandatory** **Access Controls** (**MAC**): Restricting what users can do
    on systems'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制访问控制（MAC）：限制用户在系统上的操作
- en: '**Role-Based** **Access Controls**: Using groups to assign the roles that these
    groups can perform'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于角色的访问控制：使用组分配这些组可以执行的角色
- en: '**Rule Set Based Access Controls** (**RSBAC**): Rule sets that are grouped
    in the request type and performs actions based on set rule(s)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于规则集的访问控制（RSBAC）：按请求类型分组的规则集，并根据设置的规则执行操作
- en: '**Domain** **and Type Enforcement** (**DTE**): Allow or restrict certain domains
    from performing set actions or preventing domains from interacting with each other'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**领域和类型强制执行**（DTE）：允许或限制某些领域执行特定操作，或防止领域相互交互'
- en: 'You can also utilize the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以利用以下内容：
- en: SELinux (RPM-based systems (such as Red Hat, CentOS, and Fedora)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux（基于RPM的系统（如Red Hat、CentOS和Fedora）
- en: AppArmor (apt-get-based systems (such as Ubuntu and Debian)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AppArmor（基于apt-get的系统（如Ubuntu和Debian）
- en: These RSBAC, as we discussed earlier, allow you to choose methods of control
    that are appropriate for what your system is running. You can also create your
    own access control modules that can help enforce. By default, on most Linux systems,
    these type of environments are enabled or in enforcing mode. Majority of people
    will turn these off when they create a new system, but it comes with security
    drawbacks, therefore, it's important to learn how these systems work and use them
    in the enabled or enforcement mode to help mitigate further risks.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: RSBAC，正如我们之前讨论的那样，允许您选择适合系统运行的控制方法。您还可以创建自己的访问控制模块，以帮助执行。在大多数Linux系统上，默认情况下，这些类型的环境是启用或强制执行模式的。大多数人在创建新系统时会关闭这些功能，但这会带来安全缺陷，因此，重要的是要学习这些系统的工作原理，并在启用或强制执行模式下使用它们以帮助减轻进一步的风险。
- en: 'More information about each can be found at the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有关每个的更多信息可以在以下找到：
- en: '**SELinux**: [https://en.wikipedia.org/wiki/Security-Enhanced_Linux](https://en.wikipedia.org/wiki/Security-Enhanced_Linux)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux：[https://en.wikipedia.org/wiki/Security-Enhanced_Linux](https://en.wikipedia.org/wiki/Security-Enhanced_Linux)
- en: '**AppArmor**: [https://en.wikipedia.org/wiki/AppArmor](https://en.wikipedia.org/wiki/AppArmor)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AppArmor**：[https://en.wikipedia.org/wiki/AppArmor](https://en.wikipedia.org/wiki/AppArmor)'
- en: Distribution focused
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 面向发行版
- en: There are many Linux distributions, or flavors as they call them, in the Linux
    community that have been *pre-baked* to be already hardened. We referenced one
    earlier, the **Owlwall** flavor of Linux, but there are others out there as well.
    Out of the other two, one that is no longer around is **Adamantix** and the other
    is **Gentoo Linux**. These Linux flavors feature some baked-in Linux kernel hardening
    as standards of their operating system builds.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux社区中有许多Linux发行版，或者他们称之为“风味”，已经被*预先烘烤*以进行硬化。我们之前提到过一个，即Linux的**Owlwall**风味，但还有其他一些。在其他两个中，一个已经不复存在，即**Adamantix**，另一个是**Gentoo
    Linux**。这些Linux风味作为其操作系统构建的标准，具有一些内置的Linux内核加固功能。
- en: Linux kernel hardening tools
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux内核加固工具
- en: There are some Linux kernel hardening tools out there, but we will focus on
    only two of them in this section. The first being Grsecurity and the second being
    Lynis. These are tools that you can add to your arsenal to help in increasing
    the security of the environments that you will be running your Docker containers
    on.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些Linux内核加固工具，但在本节中我们将只关注其中两个。第一个是Grsecurity，第二个是Lynis。这些工具可以增加您的武器库，帮助增强您将在其中运行Docker容器的环境的安全性。
- en: Grsecurity
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Grsecurity
- en: 'So, what exactly is Grsecurity? According to their website, Grsecurity is an
    extensive security enhancement for the Linux kernel. This enhancement contains
    a wide range of items that help in defending against various threats. These threats
    might include the following components:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Grsecurity到底是什么？根据他们的网站，Grsecurity是Linux内核的广泛安全增强。这个增强包含了一系列项目，有助于抵御各种威胁。这些威胁可能包括以下组件：
- en: '**Zero day exploits**: This mitigates and keeps your environment protected
    until a long-term solution can be made available through the vendor.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零日漏洞利用：这可以减轻并保护您的环境，直到供应商提供长期解决方案。
- en: '**Shared host or container weaknesses**: This protects you against kernel compromises
    that various technologies, and very much so containers, use for each container
    on the host.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享主机或容器的弱点**：这可以保护您免受各种技术以及容器使用的针对主机上每个容器的内核妥协。'
- en: '**It goes beyond basic access controls**: Grsecurity works with the PaX team
    to introduce complexity and unpredictability to the attacker, while responding
    and denying the attacker any more chances.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**它超越了基本的访问控制**：Grsecurity与PaX团队合作，引入复杂性和不可预测性，以防止攻击者，并拒绝攻击者再有机会。'
- en: '**Integrates with you existing Linux distribution:** As Grsecurity is kernel-based,
    it can be used with any Linux flavors such as Red Hat, Ubuntu, Debian, and Gentoo.
    Whatever your Linux flavor is, it doesn''t matter, as the focus is on the underlying
    Linux kernel.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与现有的Linux发行版集成**：由于Grsecurity是基于内核的，因此可以与Red Hat、Ubuntu、Debian和Gentoo等任何Linux发行版一起使用。无论您使用的是哪种Linux发行版，都没有关系，因为重点是底层的Linux内核。'
- en: More information can be found at [https://grsecurity.net/](https://grsecurity.net/).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请访问[https://grsecurity.net/](https://grsecurity.net/)。
- en: 'To directly get to the good stuff and see the feature set that is offered by
    utilizing a tool like Grsecurity, you will want to go to the following link:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要直接了解有关使用类似Grsecurity的工具提供的功能集，请访问以下链接：
- en: '[http://grsecurity.net/features.php](http://grsecurity.net/features.php)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://grsecurity.net/features.php](http://grsecurity.net/features.php)'
- en: 'On this page, items will be grouped into the following five categories:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在此页面，项目将被分为以下五个类别：
- en: Memory Corruption Defenses
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存损坏防御
- en: Filesystem Hardening
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件系统加固
- en: Miscellaneous Protections
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他保护
- en: RBAC
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RBAC
- en: GCC Plugins
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCC插件
- en: Lynis
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lynis
- en: 'Lynis is an open source tool that is used to audit your systems for security.
    It runs directly on the host so that it has access to the Linux kernel itself,
    as well as various other items. Lynis runs on almost every Unix operating system
    including the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis是一个用于审核系统安全性的开源工具。它直接在主机上运行，因此可以访问Linux内核本身以及其他各种项目。Lynis可以在几乎所有Unix操作系统上运行，包括以下操作系统：
- en: AIS
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AIS
- en: FreeBSD
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FreeBSD
- en: Mac OS
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac OS
- en: Linux
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux
- en: Solaris
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Solaris
- en: 'Lynis was written as a shell script, therefore, it''s just as easy as copying
    and pasting on your system and running a simple command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis是一个shell脚本编写的工具，因此，它与在系统上复制和粘贴以及运行简单命令一样容易：
- en: '[PRE6]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'While it is running, the following actions are being taken:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时，将执行以下操作：
- en: Determining the OS
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定操作系统
- en: Performing a search for available tools and utilities
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行搜索以获取可用工具和实用程序
- en: Checking for any Lynis update
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查是否有Lynis更新
- en: Running tests from enabled plugins
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从启用的插件运行测试
- en: Running security tests per category
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按类别运行安全性测试
- en: Reporting status of security scan
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告安全扫描状态
- en: More information can be found at [https://rootkit.nl/projects/lynis.html](https://rootkit.nl/projects/lynis.html)
    and [https://cisofy.com/lynis/](https://cisofy.com/lynis/).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请访问[https://rootkit.nl/projects/lynis.html](https://rootkit.nl/projects/lynis.html)和[https://cisofy.com/lynis/](https://cisofy.com/lynis/)。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we took a look at hardening and securing Linux kernels. We
    first looked at some hardening guides followed by a deep dive of an overview of
    the SANS Institute Hardening Guide. We also took a look at how to prevent buffer
    overflows in our kernels and applications through various patches. We also looked
    at various access controls, SELinux, and AppArmor. Lastly, we took a look at two
    hardening tools that we can add to our toolbox of software in the form of Grsecurity
    and Lynis.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了加固和保护Linux内核。我们首先查看了一些加固指南，然后深入了解了SANS研究所加固指南的概述。我们还研究了如何通过各种补丁来防止内核和应用程序中的缓冲区溢出。我们还研究了各种访问控制、SELinux和AppArmor。最后，我们还研究了两种加固工具，可以将它们添加到我们的软件工具箱中，即Grsecurity和Lynis。
- en: In the next chapter, we will take a look at the Docker Bench application for
    security. This is an application that can look at the various Docker items, such
    as host configuration, Docker daemon configuration, daemon configuration files,
    container images and build files, container runtime, and lastly, Docker security
    operations. It will contain hands-on examples with a lot of code outputs.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看一下Docker Bench安全应用程序。这是一个可以查看各种Docker项目的应用程序，比如主机配置、Docker守护程序配置、守护程序配置文件、容器镜像和构建文件、容器运行时，最后是Docker安全操作。它将包含大量代码输出的实际示例。
