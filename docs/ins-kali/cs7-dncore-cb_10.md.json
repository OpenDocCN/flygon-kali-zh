["```cs\n        /usr/bin/ruby -e \"$(curl -fsSL         https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n```", "```cs\n        using System;\n\n        class Program\n        {\n          static void Main(string[] args)\n          {\n            Console.WriteLine(\"Hello World!\");\n          }\n        }\n\n```", "```cs\n        static void Main(string[] args)\n        {\n          Console.WriteLine(\"I can run on Windows, Linux and macOS\");\n          GetSystemInfo();\n          Console.ReadLine();\n        }\n\n        private static void GetSystemInfo()\n        {\n          var osInfo = System.Runtime.InteropServices.RuntimeInformation.OSDescription;\n          Console.WriteLine($\"Current OS is: {osInfo}\");\n        }\n\n```", "```cs\n        <Project ToolsVersion=\"15.0\"           >\n          <Import Project=\"$(MSBuildExtensionsPath)$(MSBuildToolsVersion)\n            Microsoft.Common.props\" />\n            <PropertyGroup>\n              <OutputType>Exe</OutputType>\n              <TargetFramework>netcoreapp1.1</TargetFramework>\n            </PropertyGroup>\n            <ItemGroup>\n              <Compile Include=\"***.cs\" />\n              <EmbeddedResource Include=\"***.resx\" />\n            </ItemGroup>\n            <ItemGroup>\n              <PackageReference Include=\"Microsoft.NETCore.App\">\n                <Version>1.1.0</Version>\n              </PackageReference>\n              <PackageReference Include=\"Microsoft.NET.Sdk\">\n                <Version>1.0.0-alpha-20161104-2</Version>\n                <PrivateAssets>All</PrivateAssets>\n              </PackageReference>\n            </ItemGroup>\n          <Import Project=\"$(MSBuildToolsPath)Microsoft.CSharp.targets\" />\n        </Project>\n\n```", "```cs\n        using System;\n        using System.Collections.Generic;\n        using System.Linq;\n        using System.Threading.Tasks;\n        using Microsoft.AspNetCore.Builder;\n        using Microsoft.AspNetCore.Hosting;\n        using Microsoft.AspNetCore.Http;\n        using Microsoft.Extensions.DependencyInjection;\n        using Microsoft.Extensions.Logging;\n\n        namespace AspNetCore\n        {\n          public class Startup\n          {\n            // This method gets called by the runtime. Use this method \n               to add services to the container.\n            // For more information on how to configure your application, \n               visit https://go.microsoft.com/fwlink/?LinkID=398940\n            public void ConfigureServices(IServiceCollection services)\n            {\n            }\n\n            // This method gets called by the runtime. Use this method \n               to configure the HTTP request pipeline.\n            public void Configure(IApplicationBuilder app, \n              IHostingEnvironment env, ILoggerFactory loggerFactory)\n            {\n              loggerFactory.AddConsole();\n\n              if (env.IsDevelopment())\n              {\n                app.UseDeveloperExceptionPage();\n              }\n\n              app.Run(async (context) =>\n              {\n                await context.Response.WriteAsync(\"Hello World!\");\n              });\n            }\n          }\n        }\n\n```", "```cs\npublic static void Main(string[] args)\n{\n   var host = new WebHostBuilder()\n       .UseKestrel()\n       .UseContentRoot(Directory.GetCurrentDirectory())\n       .UseIISIntegration()\n       .UseStartup<Startup>()\n       .Build();\n\n   host.Run();\n}\n\n```", "```cs\n        dotnet publish --output \"c:temppublish\" --configuration release\n\n```"]