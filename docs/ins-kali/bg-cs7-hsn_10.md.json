["```cs\n<asp:Button ID=\"Button1\" runat=\"server\" Text=\"Show People\" />\n```", "```cs\nusing System.Linq;\n```", "```cs\npublic class Person\n```", "```cs\npublic string Name { get; set; }\npublic decimal Salary { get; set; }\n```", "```cs\npublic Person(string name, decimal salary)\n```", "```cs\nName = name; Salary = salary;\n```", "```cs\nPerson[] people = new Person[] { new Person(\"John\", 76877), new Person(\"Bobby\", 78988), new Person(\"Joan\", 87656) };\n```", "```cs\nIEnumerable<Person> peopleWithN = people.Where(per => per.Name.EndsWith(\"n\")).OrderByDescending(per => per.Salary);\n```", "```cs\nusing System.Collections.Generic;\n```", "```cs\nforeach(Person p in peopleWithN)\n```", "```cs\nsampLabel.Text += $\"<br>{p.Name} {p.Salary:C}\";\n```", "```cs\n//using is a directive\n//System is a name space\n//name space is a collection of features that our needs to run\nusing System;\nusing System.Linq;\nusing System.Collections.Generic;\n//public means accessible anywhere\n//partial means this class is split over multiple files\n//class is a keyword and think of it as the outermost level of grouping\n//:System.Web.UI.Page means our page inherits the features of a Page\npublic class Person\n{\n    public string Name { get; set; } //auto implemented properties\n    public decimal Salary { get; set; }\n    public Person(string name, decimal salary)\n    {\n        Name = name; Salary = salary;//set values of properties\n    }\n}\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        //make array of people\n        Person[] people = new Person[] { new Person(\"John\", 76877), \n                                         new Person(\"Bobby\",78988), \n                                         new Person(\"Joan\", 87656) };\n        //find all people with \"n\" as the last letter, and then display \n        //the results sorted from high to low salary\n        IEnumerable<Person> peopleWithN = \n        people.Where(per => per.Name.EndsWith(\"n\")).OrderByDescending\n        (per => per.Salary);\n        //display name and salary formatted as currency\n        foreach (Person p in peopleWithN)\n        {\n            sampLabel.Text += $\"<br>{p.Name} {p.Salary:C}\";\n        }\n    }\n}\n```"]