["```java\n    public class ApplicationWindow extends JFrame {\n    public ApplicationWindow() {\n    this.setTitle(\"Example\");\n    this.setSize(200, 100);\n    this.setLocationRelativeTo(null);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setLayout(new FlowLayout());\n    JButton exitButton = new JButton(\"Exit\");\n    this.add(exitButton);\n    }\n    }\n\n    ```", "```java\n    int totalButtons = MouseInfo.getNumberOfButtons();\n    System.out.println(Toolkit.getDefaultToolkit().areExtraMouseButtonsEnabled());\n    System.out.println(\"You have \" + totalButtons + \" total buttons\");\n\n    ```", "```java\n    this.addMouseListener(this);\n    this.addMouseWheelListener(this);\n    exitButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n\n    ```", "```java\n    public void mousePressed(MouseEvent e) {\n    System.out.println(\"\" + e.getButton());\n    }\n\n    ```", "```java\n    public void mouseWheelMoved(MouseWheelEvent e) {\n    System.out.println(\"\" + e.getPreciseWheelRotation() +\n    \" - \" + e.getWheelRotation());\n    }\n\n    ```", "```java\njava -Dsun.awt.enableExtraMouseButtons=false ApplicationDriver\n\n```", "```java\nSystem.setProperty(\"sun.awt.enableExtraMouseButtons\", \"true\");\n\n```", "```java\n    public class ApplicationDriver {\n    public static void main(String[] args) {\n    SwingUtilities.invokeLater(new Runnable() {\n    @Override\n    public void run() {\n    ApplicationWindow window = new ApplicationWindow();\n    window.setVisible(true);\n    }\n    });\n    }\n    }\n\n    ```", "```java\n    public class ApplicationWindow extends JFrame {\n    private SecondWindow second;\n    public ApplicationWindow() {\n    this.setTitle(\"Example\");\n    this.setBounds(100, 100, 200, 200);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setLayout(new FlowLayout());\n    second = new SecondWindow();\n    second.setVisible(true);\n    JButton secondButton = new JButton(\"Hide\");\n    this.add(secondButton);\n    secondButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    second.setVisible(false);\n    });\n    JButton thirdButton = new JButton(\"Reveal\");\n    this.add(thirdButton);\n    thirdButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    second.setVisible(true);\n    }\n    });\n    JButton exitButton = new JButton(\"Exit\");\n    this.add(exitButton);\n    exitButton.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent event) {\n    System.exit(0);\n    }\n    });\n    }\n    }\n\n    ```", "```java\n    public class SecondWindow extends JFrame {\n    public SecondWindow() {\n    this.setTitle(\"Second Window\");\n    this.setBounds(400, 100, 200, 200);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setAutoRequestFocus(false);\n    }\n    }\n\n    ```", "```java\n    public class ApplicationDriver {\n    public static void main(String[] args) {\n    SwingUtilities.invokeLater(new Runnable() {\n    @Override\n    public void run() {\n    ApplicationWindow window = new ApplicationWindow();\n    window.setVisible(true);\n    }\n    });\n    }\n    }\n\n    ```", "```java\n    public class ApplicationWindow extends JFrame implements ActionListener {\n    private JButton firstButton;\n    private JButton secondButton;\n    public ApplicationWindow() {\n    this.setTitle(\"Example\");\n    this.setBounds(100, 100, 200, 200);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setLayout(new FlowLayout());\n    firstButton = new JButton(\"First\");\n    this.add(firstButton);\n    firstButton.addActionListener(this);\n    secondButton = new JButton(\"Second\");\n    this.add(secondButton);\n    secondButton.addActionListener(this);\n    }\n    }\n\n    ```", "```java\n    @Override\n    public void actionPerformed(ActionEvent e) {\n    Thread worker;\n    JButton button = (JButton) e.getSource();\n    Toolkit toolkit = Toolkit.getDefaultToolkit();\n    EventQueue eventQueue = toolkit.getSystemEventQueue();\n    SecondaryLoop secondaryLoop = eventQueue.createSecondaryLoop();\n    Calendar calendar = Calendar.getInstance();\n    String name;\n    if (button == firstButton) {\n    name = \"First-\"+calendar.get(Calendar.MILLISECOND);\n    }\n    else {\n    name = \"Second-\"+calendar.get(Calendar.MILLISECOND);\n    }\n    worker = new WorkerThread(secondaryLoop, name);\n    worker.start();\n    if (!secondaryLoop.enter()) {\n    System.out.println(\"Error with the secondary loop\");\n    }\n    else {\n    System.out.println(name + \" Secondary loop returned\");\n    }\n    }\n\n    ```", "```java\n    class WorkerThread extends Thread {\n    private String message;\n    private SecondaryLoop secondaryLoop;\n    public WorkerThread(SecondaryLoop secondaryLoop, String message) {\n    this.secondaryLoop = secondaryLoop;\n    this.message = message;\n    }\n    @Override\n    public void run() {\n    System.out.println(message + \" Loop Sleeping ... \");\n    try {\n    Thread.sleep(2000);\n    }\n    catch (InterruptedException ex) {\n    ex.printStackTrace();\n    }\n    System.out.println(message + \" Secondary loop completed with a result of \" +\n    secondaryLoop.exit());\n    }\n    }\n\n    ```", "```java\n    synchronized (someObject) {\n    Toolkit toolkit = Toolkit.getDefaultToolkit();\n    EventQueue eventQueue = toolkit.getSystemEventQueue();\n    while(someCondition && !eventQueue.isDispatchThread()) {\n    try {\n    wait();\n    }\n    catch (InterruptedException e) {\n    }\n    }\n    // Continue processing\n    }\n\n    ```", "```java\n    public class SampleApplet extends Applet {\n    BufferedImage image;\n    Graphics2D g2d;\n    public void init() {\n    int width = getWidth();\n    int height = getHeight();\n    image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\n    g2d = image.createGraphics();\n    g2d.setPaint(Color.BLUE);\n    g2d.fillRect(0, 0, width, height);\n    try {\n    Thread.sleep(2000);\n    }\n    catch (InterruptedException ie) {\n    ie.printStackTrace();\n    }\n    }\n    public void paint(Graphics g) {\n    g.drawImage(image, 0, 0, this);\n    }\n    }\n\n    ```", "```java\n    <HTML>\n    <HEAD>\n    <TITLE>Checking Applet Status</TITLE>\n    <SCRIPT>\n    function determineAppletState() {\n    if (sampleApplet.status == 1) {\n    document.getElementById(\"statediv\").innerHTML = \"Applet loading ...\";\n    sampleApplet.onLoad = onLoadHandler;\n    }\n    else if (sampleApplet.status == 2) {\n    document.getElementById(\"statediv\").innerHTML = \"Applet already loaded\";\n    }\n    else {\n    document.getElementById(\"statediv\").innerHTML = \"Applet entered error while loading\";\n    }\n    }\n    function onLoadHandler() {\n    document.getElementById(\"loadeddiv\").innerHTML = \"Applet has loaded\";\n    }\n    </SCRIPT>\n    </HEAD>\n\n    ```", "```java\n    <BODY onload=\"determineAppletState()\">\n    <H3>Sample Applet</H3>\n    <DIV ID=\"statediv\">state</DIV>\n    <DIV ID=\"loadeddiv\"></DIV>\n\n    ```", "```java\n    <DIV>\n    <SCRIPT src=\"img/deployJava.js\"></SCRIPT>\n    <SCRIPT>\n    var attributes = {id:'sampleApplet', code:'SampleApplet.class', archive:'SampleApplet.jar', width:200,\n    height:100};\n    var parameters = {java_status_events: 'true'};\n    deployJava.runApplet(attributes, parameters, '7'7);\n    </SCRIPT>\n    </DIV>\n    </BODY>\n    </HTML>\n\n    ```"]