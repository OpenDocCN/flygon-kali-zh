["```\n     **yum -y install --enablerepo=updates-testing kubernetes**\n\n    ```", "```\n     **yum -y install etcd iptables-services**\n\n    ```", "```\n     **echo \"192.168.121.9  fed-master \n            192.168.121.65  fed-node\" >> /etc/hosts**\n\n    ```", "```\n     **systemctl disable iptables-services firewalld \n            systemctl stop iptables-services firewalld** \n\n    ```", "```\n     **# Comma separated list of nodes in the etcd cluster\n            KUBE_MASTER=\"--master=http://fed-master:8080\"\n            # logging to stderr means we get it in the systemd journal\n            KUBE_LOGTOSTDERR=\"--logtostderr=true\"\n            # journal message level, 0 is debug\n            KUBE_LOG_LEVEL=\"--v=0\"\n            # Should this cluster be allowed to run privileged docker \n            containers\n            KUBE_ALLOW_PRIV=\"--allow-privileged=false\"**\n\n    ```", "```\n     **# The address on the local server to listen to. \n            KUBE_API_ADDRESS=\"--address=0.0.0.0\" \n\n            # Comma separated list of nodes in the etcd cluster \n            KUBE_ETCD_SERVERS=\"--etcd-servers=http://127.0.0.1:2379\" \n\n            # Address range to use for services         \n            KUBE_SERVICE_ADDRESSES=\"--service-cluster-ip-\n            range=10.254.0.0/16\" \n\n            # Add your own! \n            KUBE_API_ARGS=\"\"**\n\n    ```", "```\n     **ETCD_LISTEN_CLIENT_URLS=\"http://0.0.0.0:2379\"** \n\n    ```", "```\n     **### \n            # Kubernetes kubelet (node) config \n\n            # The address for the info server to serve on (set to 0.0.0.0 \n            or \"\" for \n            all interfaces) \n            KUBELET_ADDRESS=\"--address=0.0.0.0\" \n\n            # You may leave this blank to use the actual hostname \n            KUBELET_HOSTNAME=\"--hostname-override=fed-node\" \n\n            # location of the api-server \n            KUBELET_API_SERVER=\"--api-servers=http://fed-master:8080\" \n\n            # Add your own! \n            #KUBELET_ARGS=\"\"**\n\n    ```", "```\n     **$ nano start-k8s.sh \n            for SERVICES in etcd kube-apiserver kube-controller-manager \n            kube-scheduler \n            kube-proxy kubelet docker; do  \n                systemctl restart $SERVICES \n                systemctl enable $SERVICES \n                systemctl status $SERVICES  \n            done**\n\n    ```", "```\n            { \n                \"apiVersion\": \"v1\", \n                \"kind\": \"Node\", \n                \"metadata\": { \n                    \"name\": \"fed-node\", \n                    \"labels\":{ \"name\": \"fed-node-label\"} \n                }, \n                \"spec\": { \n                    \"externalID\": \"fed-node\" \n                } \n            } \n\n    ```", "```\n     **$ kubectl create -f ./node.json \n\n            $ kubectl get nodes \n            NAME               LABELS                  STATUS \n            fed-node           name=fed-node-label     Unknown** \n\n    ```", "```\n     **kubectl get nodes \n            NAME                LABELS                  STATUS \n            fed-node            name=fed-node-label     Ready**\n\n    ```", "```\n **openssl genrsa -out /tmp/serviceaccount.key 2048**\n\n```", "```\n **KUBE_API_ARGS=\"--\n         service_account_key_file=/tmp/serviceaccount.key\"**\n\n```", "```\n **KUBE_CONTROLLER_MANAGER_ARGS=\" -**\n **service_account_private_key_file\n        =/tmp/serviceaccount.key\"**\n\n```", "```\n     **$ curl -Lo minikube** \n    **https://storage.googleapis.com/minikube/releases/v0.12.2/minikube-darwin-amd64**\n     **% Total % Received % Xferd Average Speed Time Time Time Current**\n     **Dload Upload Total Spent Left Speed**\n     **100 79.7M 100 79.7M 0 0 1857k 0 0:00:43 0:00:43 --:--:-- 1863k**\n\n    ```", "```\n    **$ chmod +x minikube** \n\n    ```", "```\n     **$ sudo mv minikube /usr/local/bin**\n\n    ```", "```\n    **$ curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/darwin/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/\n\n            https://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/darwin/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/\n              % Total % Received % Xferd Average Speed Time Time Time Current\n                                         Dload Upload Total Spent Left Speed\n            100 53.2M 100 53.2M 0 0 709k 0 0:01:16 0:01:16 --:--:-- 1723k** \n\n    ```", "```\n     **$ minikube start\n\n            Starting local Kubernetes cluster...\n\n            Downloading Minikube ISO\n\n            36.00 MB / 36.00 MB\n\n    \t\t[==============================================] \n            100.00% 0s**\n\n    ```", "```\n     **$ kubectl config use-context minikube \n            switched to context \"minikube\".**\n\n    ```", "```\n     **$ kubectl get nodes\n\n            NAME       STATUS    AGE\n            minikube   Ready     39m** \n\n    ```", "```\n     **$ kubectl run hello-minikube --\n              image=gcr.io/google_containers/echoserver:1.4 --port=8080\n\n            deployment \"hello-minikube\" created\n\n            $ kubectl expose deployment hello-minikube --type=NodePort\n\n            service \"hello-minikube\" exposed** \n\n    ```", "```\n     **$  kubectl get pod\n         NAME                           READY   STATUS    RESTARTS   AGE          hello-minikube-3015430129-otr7u   1/1    running       0          36s\n            vkohli-m01:~ vkohli$ curl $(minikube service hello-minikube --url)\n            CLIENT VALUES:\n            client_address=172.17.0.1\n            command=GET\n            real path=/\n            query=nil\n            request_version=1.1\n            request_uri=http://192.168.99.100:8080/\n\n            SERVER VALUES:\n            server_version=nginx: 1.10.0 - lua: 10001\n\n            HEADERS RECEIVED:\n            accept=*/*\n            host=192.168.99.100:30167\n            user-agent=curl/7.43.0** \n\n    ```", "```\n     **$ minikube dashboard\n\n            Opening kubernetes dashboard in default browser...** \n\n    ```", "```\n    **$ sudo pip install awscli**\n\n    ```", "```\n    **$ aws configure**\n    **AWS Access Key ID [None]: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX**\n    **AWS Secret Access Key [None]: YYYYYYYYYYYYYYYYYYYYYYYYYYYY**\n    **Default region name [None]: us-east-1**\n    **Default output format [None]: text**\n\n    ```", "```\n    **$ aws iam create-instance-profile --instance-profile-name Kube**\n\n    ```", "```\n    **$ aws iam create-role --role-name Test-Role --assume-role-policy-\n              document /root/kubernetes/Test-Role-Trust-Policy.json**\n\n    ```", "```\n    **$ aws iam add-role-to-instance-profile --role-name Test-Role --\n              instance-profile-name Kube**\n\n    ```", "```\n    **$ export AWS_DEFAULT_PROFILE=Kube**\n\n    ```", "```\n    **$ export KUBERNETES_PROVIDER=aws; wget -q -O - https://get.k8s.io | bash**\n    **Downloading kubernetes release v1.1.1 to /home/vkohli/kubernetes.tar.gz**\n    **--2015-11-22 10:39:18--  https://storage.googleapis.com/kubernetes-\n            release/release/v1.1.1/kubernetes.tar.gz**\n    **Resolving storage.googleapis.com (storage.googleapis.com)... \n            216.58.220.48, 2404:6800:4007:805::2010**\n    **Connecting to storage.googleapis.com \n            (storage.googleapis.com)|216.58.220.48|:443... connected.**\n    **HTTP request sent, awaiting response... 200 OK**\n    **Length: 191385739 (183M) [application/x-tar]**\n    **Saving to: 'kubernetes.tar.gz'**\n    **100%[======================================>] 191,385,739 1002KB/s   \n            in 3m 7s**\n    **2015-11-22 10:42:25 (1002 KB/s) - 'kubernetes.tar.gz' saved \n            [191385739/191385739]**\n    **Unpacking kubernetes release v1.1.1**\n    **Creating a kubernetes on aws...**\n    **... Starting cluster using provider: aws**\n    **... calling verify-prereqs**\n    **... calling kube-up**\n    **Starting cluster using os distro: vivid**\n    **Uploading to Amazon S3**\n    **Creating kubernetes-staging-e458a611546dc9dc0f2a2ff2322e724a**\n    **make_bucket: s3://kubernetes-staging-e458a611546dc9dc0f2a2ff2322e724a/**\n    **+++ Staging server tars to S3 Storage: kubernetes-staging-\n            e458a611546dc9dc0f2a2ff2322e724a/devel**\n    **upload: ../../../tmp/kubernetes.6B8Fmm/s3/kubernetes-salt.tar.gz to \n            s3://kubernetes-staging-e458a611546dc9dc0f2a2ff2322e724a/devel/kubernetes-\n            salt.tar.gz**\n    **Completed 1 of 19 part(s) with 1 file(s) remaining**\n\n    ```", "```\n    **ZONE=${KUBE_AWS_ZONE:-us-west-2a}**\n    **MASTER_SIZE=${MASTER_SIZE:-t2.micro}**\n    **MINION_SIZE=${MINION_SIZE:-t2.micro}**\n    **NUM_MINIONS=${NUM_MINIONS:-4}**\n    **AWS_S3_REGION=${AWS_S3_REGION:-us-east-1}**\n\n    ```", "```\n     **$ wget https://storage.googleapis.com/golang/go1.7.3.linux-** \n     **amd64.tar.gz\n\n            $ tar -C /usr/local -xzf go1.7.3.linux-amd64.tar.gz\n\n            $ go\n\n            Go is a tool for managing Go source code.\n            Usage:\n              go command [arguments]** \n\n    ```", "```\n    **$ export GOPATH=/usr/local/go**\n    **$ export PATH=$PATH:$GOPATH/bin**\n\n    ```", "```\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0$ curl --remote-name-all https://storage.googleapis.com/\n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0govmomi/vmdk/2016-01-08/kube.vmdk.gz{,.md5}**\n     **% Total\u00a0\u00a0\u00a0 % Received % Xferd\u00a0 Average Speed\u00a0\u00a0 Time\u00a0\u00a0\u00a0 Time\u00a0\u00a0\u00a0\u00a0 Time\u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0Current**\n     **Dload\u00a0 Upload\u00a0\u00a0 Total\u00a0\u00a0 Spent\u00a0\u00a0\u00a0 Left\u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0Speed**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0100\u00a0 663M\u00a0 100\u00a0 663M\u00a0\u00a0 0\u00a0\u00a0 0\u00a0 14.4M\u00a0\u00a0\u00a0\u00a0\u00a0 0\u00a0 0:00:45\u00a0 0:00:45 --:--:-- \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a017.4M**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0100\u00a0\u00a0\u00a0 47\u00a0 100\u00a0\u00a0\u00a0 47\u00a0\u00a0 0\u00a0  0\u00a0\u00a0\u00a0\u00a0 70\u00a0\u00a0\u00a0\u00a0\u00a0 0 --:--:-- --:--:-- --:--:--\u00a0\u00a0\u00a0\n          \u00a0 0**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0$ md5sum -c kube.vmdk.gz.md5**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0kube.vmdk.gz: OK**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0$ gzip -d kube.vmdk.gz**\n\n    ```", "```\n**export GOVC_URL='https://[USERNAME]:[PASSWORD]@[ESXI-HOSTNAME-IP]/sdk'**\n**export GOVC_DATASTORE='[DATASTORE-NAME]'**\n**export GOVC_DATACENTER='[DATACENTER-NAME]'**\n**#username & password used to login to the deployed kube VM**\n**export GOVC_RESOURCE_POOL='*/Resources'**\n**export GOVC_GUEST_LOGIN='kube:kube'** \n**export GOVC_INSECURE=true**\n\n```", "```\n **$ govc datastore.import kube.vmdk kube**\n\n```", "```\n**$ cd kubernetes**\n**$ KUBERNETES_PROVIDER=vsphere cluster/kube-up.sh**\n\n```", "```\n**$ cd kubernetes**\n**$ make release**\n**$ KUBERNETES_PROVIDER=vsphere cluster/kube-up.sh**\n\n```", "```\n**$ cluster/kube-down.sh**\n\n```", "```\n    **$ mkdir nginx_kube_example**\n    **$ cd nginx_kube_example**\n\n    ```", "```\n    **$ vi nginx_pod.yaml**\n    **apiVersion: v1**\n    **kind: ReplicationController**\n    **metadata:**\n     **name: nginx**\n    **spec:**\n     **replicas: 2**\n     **selector:**\n     **app: nginx**\n     **template:**\n     **metadata:**\n     **name: nginx**\n     **labels:**\n     **app: nginx**\n     **spec:**\n     **containers:**\n     **- name: nginx**\n     **image: nginx**\n     **ports:**\n     **- containerPort: 80**\n\n    ```", "```\n    **$ kubectl create -f nginx_pod.yaml**\n\n    ```", "```\n    **$ kubectl get pods**\n    **NAME          READY     REASON    RESTARTS   AGE**\n    **nginx-karne   1/1       Running   0          14s**\n    **nginx-mo5ug   1/1       Running   0          14s**\n    **$ kubectl get rc**\n    **CONTROLLER   CONTAINER(S)   IMAGE(S)   SELECTOR    REPLICAS**\n    **nginx        nginx          nginx      app=nginx   2**\n\n    ```", "```\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0$ docker ps**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0CONTAINER ID \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IMAGE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0        COMMAND\n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0CREATED\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PORTS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NAMES**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a01d3f9cedff1d\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 nginx:latest\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"nginx -g \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0'daemon of\u00a0\u00a0 41 seconds ago\u00a0\u00a0\u00a0\u00a0\u00a0 Up 40 seconds\n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0k8s_nginx.6171169d_nginx-karne_default_5d5bc813-3166-11e5-8256-\n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0ecf4bb2bbd90_886ddf56**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a00b2b03b05a8d\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 nginx:latest\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"nginx -g \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0'daemon of\u00a0\u00a0 41 seconds ago\u00a0\u00a0\u00a0\u00a0\u00a0 Up 40 seconds**\n\n    ```", "```\n    **$ vi nginx_service.yaml**\n    **apiVersion: v1**\n    **kind: Service**\n    **metadata:**\n     **labels:**\n     **name: nginxservice**\n     **name: nginxservice**\n    **spec:**\n     **ports:**\n     **# The port that this service should serve on.**\n     **- port: 82**\n     **# Label keys and values that must match in order to receive traffic for \n            this service.**\n     **selector:**\n     **app: nginx**\n     **type: LoadBalancer**\n\n    ```", "```\n    **$kubectl create -f nginx_service.yaml**\n    **services/nginxservice**\n\n    ```", "```\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0$ kubectl get services**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0NAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 LABELS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0          SELECTOR\u00a0\u00a0\u00a0 IP(S)\n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0PORT(S)**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0kubernetes\u00a0\u00a0\u00a0\u00a0 component=apiserver,provider=kubernetes\u00a0 <none>\u00a0\u00a0\u00a0\u00a0\u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0192.168.3.1\u00a0\u00a0\u00a0 443/TCP**\n    **\u00a0 \u00a0 \u00a0 \u00a0\u00a0nginxservice\u00a0\u00a0 name=nginxservice\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 app=nginx\u00a0\u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0\u00a0192.168.3.43\u00a0\u00a0 82/TCP**\n\n    ```", "```\n    **$ kubetl get nodes**\n\n    ```", "```\n     **master:**\n     **var/log/kube-apiserver.log - API Server, responsible for serving the API\n            /var/log/kube-scheduler.log - Scheduler, responsible for making scheduling \n        decisions\n            /var/log/kube-controller-manager.log - Controller that manages replication \n        controllers**\n     **Worker nodes:** \n     **/var/log/kubelet.log - Kubelet, responsible for running containers on the \n        node\n            /var/log/kube-proxy.log - Kube Proxy, responsible for service load \n        balancing** \n\n    ```", "```\n    **$ cluster/kubectl.sh describe pod podname**\n\n    ```", "```\n    **$ cluster/kubectl.sh get events**\n\n    ```", "```\n     **$ sudo docker ps -a**\n\n    ```"]