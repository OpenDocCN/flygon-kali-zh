["```kt\nfun detectDevice(v: View) {\n   // What is the orientation?\n   val display = windowManager.defaultDisplay\n   txtOrientation.text = \"${display.rotation}\"\n\n   // What is the resolution?\n   val xy = Point()\n   display.getSize(xy)\n   txtResolution.text = \"x = ${xy.x} y = ${xy.y}\"\n}\n```", "```kt\nimport android.graphics.Point\nimport android.view.Display\nimport android.view.View\n```", "```kt\nbutton.setOnClickListener {\n   val myDialog = MyDialog()\n   myDialog.show(supportFragmentManager, \"123\")\n   // This calls onCreateDialog\n   // Don't worry about the strange looking 123\n   // We will find out about this in Chapter 18\n}\n```", "```kt\nimport android.app.Fragment\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Button\nimport android.widget.Toast\n```", "```kt\nclass SimpleFragment: Fragment() {\n}\n```", "```kt\nclass SimpleFragment: Fragment() {\n    val myString: String = \"Hello from SimpleFragment\"\n}\n```", "```kt\noverride fun onCreateView(\n          inflater: LayoutInflater,\n          container: ViewGroup?,\n          savedInstanceState: Bundle?)\n          : View? {\n\n  val view = inflater.inflate(\n              R.layout.fragment_layout,\n              container,\n              false)  \n\n  return view\n}\n```", "```kt\n\u2026:View?\n```", "```kt\n(inflater: LayoutInflater, container: ViewGroup?...\n```", "```kt\nreturn view\n```", "```kt\nval button = view.findViewById(R.id.button) as Button\n\nbutton.setOnClickListener(\n  {\n         Toast.makeText(activity,\n               myString, Toast.LENGTH_SHORT).show()\n  }\n)\n```", "```kt\n// Create a new fragment using the manager\nvar frag = supportFragmentManager\n         .findFragmentById(R.id.fragmentHolder)\n\n// Check the fragment has not already been initialized\nif (frag == null) {\n   // Initialize the fragment based on our SimpleFragment\n   frag = SimpleFragment()\n         supportFragmentManager.beginTransaction()\n               .add(R.id.fragmentHolder, frag)\n               .commit()\n}\n```"]