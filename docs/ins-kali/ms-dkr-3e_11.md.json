["```\n$ docker image pull portainer/portainer\n$ docker image ls\n```", "```\n$ docker container run -d \\\n -p 9000:9000 \\\n -v /var/run/docker.sock:/var/run/docker.sock \\\n portainer/portainer\n```", "```\n$ docker container run -d -p 9000:9000 -v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine portainer/portainer\n```", "```\n {\n \"type\": \"container\",\n \"title\": \"Nginx\",\n \"description\": \"High performance web server\",\n \"categories\": [\"webserver\"],\n \"platform\": \"linux\",\n \"logo\": \"https://portainer.io/images/logos/nginx.png\",\n \"image\": \"nginx:latest\",\n \"ports\": [\n \"80/tcp\",\n \"443/tcp\"\n ],\n \"volumes\": [\"/etc/nginx\", \"/usr/share/nginx/html\"]\n }\n```", "```\n {\n \"type\": \"container\",\n \"title\": \"MariaDB\",\n \"description\": \"Performance beyond MySQL\",\n \"categories\": [\"database\"],\n \"platform\": \"linux\",\n \"logo\": \"https://portainer.io/images/logos/mariadb.png\",\n \"image\": \"mariadb:latest\",\n \"env\": [\n {\n \"name\": \"MYSQL_ROOT_PASSWORD\",\n \"label\": \"Root password\"\n }\n ],\n \"ports\": [\n \"3306/tcp\"\n ],\n \"volumes\": [\"/var/lib/mysql\"]\n }\n```", "```\n$ docker container run --name [Name of Container] -p 3306 -e MYSQL_ROOT_PASSWORD=[Root password] -d mariadb:latest\n```", "```\n$ docker container inspect cluster\n```", "```\n$ docker container stats cluster\n```", "```\n$ docker container logs cluster\n```", "```\n$ docker container logs --timestamps cluster\n```", "```\n$ docker container exec -it cluster /bin/sh\n```", "```\n$ docker image pull amazonlinux\n```", "```\n$ docker image inspect russmckendrick/cluster\n```", "```\n$ docker events --since '2018-09-27T16:30:00' --until '2018-09-28T16:30:00'\n```", "```\n$ docker info\n```", "```\n$ docker volume prune\n```", "```\n$ docker-machine create -d virtualbox swarm-manager\n$ docker-machine create -d virtualbox swarm-worker01\n$ docker-machine create -d virtualbox swarm-worker02\n```", "```\n$ docker $(docker-machine config swarm-manager) swarm init \\\n --advertise-addr $(docker-machine ip swarm-manager):2377 \\\n --listen-addr $(docker-machine ip swarm-manager):2377\n```", "```\n$ SWARM_TOKEN=SWMTKN-1-45acey6bqteiro42ipt3gy6san3kec0f8dh6fb35pnv1xz291v-4l89ei7v6az2b85kb5jnf7nku\n$ docker $(docker-machine config swarm-worker01) swarm join \\\n --token $SWARM_TOKEN \\\n $(docker-machine ip swarm-manager):2377\n$ docker $(docker-machine config swarm-worker02) swarm join \\\n --token $SWARM_TOKEN \\\n $(docker-machine ip swarm-manager):2377\n```", "```\n$ eval $(docker-machine env swarm-manager)\n```", "```\n$ docker node ls\n```", "```\n$ docker service create \\\n --name portainer \\\n --publish 9000:9000 \\\n --constraint 'node.role == manager' \\\n --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n portainer/portainer \\\n -H unix:///var/run/docker.sock\n```", "```\n$ docker service ls \n$ docker service inspect portainer --pretty\n```", "```\n$ open http://$(docker-machine ip swarm-manager):9000\n```", "```\nversion: \"3\"\n\nservices:\n   redis:\n     image: redis:alpine\n     volumes:\n       - redis_data:/data\n     restart: always\n   mobycounter:\n     depends_on:\n       - redis\n     image: russmckendrick/moby-counter\n     ports:\n       - \"8080:80\"\n     restart: always\n\nvolumes:\n    redis_data:\n```", "```\n$ docker-machine ls\n```", "```\n$ cd ~/.docker/machine/certs/\n$ open .\n```", "```\n$ docker-machine rm swarm-manager swarm-worker01 swarm-worker02\n```"]