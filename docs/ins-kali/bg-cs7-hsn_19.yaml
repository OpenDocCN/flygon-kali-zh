- en: Using the Nullable Feature to Make Apps More Stable
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用可空特性使应用程序更稳定
- en: In this chapter, you will learn about using the *nullable* keyword to ensure
    that records that have missing values can still be brought, for example, into
    an application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习使用*nullable*关键字来确保具有缺失值的记录仍然可以被引入应用程序中。
- en: Adding a Show People button to the HTML
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在HTML中添加一个显示人员按钮
- en: Crank up Visual Studio, and make a project. What we will do first is to put
    a simple button into the HTML page. For this, go to Toolbox, grab a `Button` control,
    and drop it below the line that begins with `<form id=...`. Change the text on
    the button to say `Show People`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Visual Studio，创建一个项目。我们首先要做的是将一个简单的按钮放入HTML页面中。为此，请转到工具箱，获取一个`Button`控件，并将其放在以`<form
    id=...`开头的行下面。将按钮上的文本更改为“显示人员”。
- en: 'You will make a class called `Person`, and you will make that class from the
    database. To do this, go to the View menu and open SQL Server Object Explorer.
    Remember that we made a database called `People`, and it is comprised of these
    fields: `Id`, `NAME`, and `DATEADDED`.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您将创建一个名为`Person`的类，并且将从数据库中创建该类。要做到这一点，转到“视图”菜单并打开SQL Server对象资源管理器。请记住，我们创建了一个名为`People`的数据库，它由这些字段组成：`Id`，`NAME`和`DATEADDED`。
- en: Adding a field to the people database
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向people数据库添加一个字段
- en: 'Now, let''s add one more field. Right-click on the dbo.People table icon, and
    select View Code. To make an additional field, type the following after `DATEADDED`:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们再添加一个字段。右键单击dbo.People表图标，然后选择“查看代码”。要添加一个额外的字段，在`DATEADDED`之后输入以下内容：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is a new field type, `decimal (18,2)` means a field that is 18 units wide
    and has 2 decimals; that is, it''s a total of 18 units wide with 2 to the right
    and 16 units to the left for a total of 18 units altogether. Next, click on Update
    and then the Update Database button in the dialog box that appears. Now, as you
    can see in the SQL Server Object Explorer pane, this field has been added, as
    shown in *Figure 19.4.1*:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个新的字段类型，`decimal (18,2)`表示一个宽度为18个单位且有2位小数的字段；也就是说，它总共有18个单位宽，右边有2个单位，左边有16个单位，总共有18个单位。接下来，点击“更新”，然后点击出现的对话框中的“更新数据库”按钮。现在，您可以在SQL
    Server对象资源管理器窗格中看到，该字段已添加，如*图19.4.1*所示：
- en: '![](img/e0032eaf-f582-4ff0-82b8-b6fd4108f467.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0032eaf-f582-4ff0-82b8-b6fd4108f467.png)'
- en: 'Figure 19.4.1: The Salary field has been added to dbo.People'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.4.1：工资字段已添加到dbo.People
- en: Modifying the dbo.People table
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改dbo.People表
- en: 'Now, with that in place, you can modify the table. Right-click on the dbo.People
    table icon and go to View Data. To illustrate the concept, enter some salary amounts
    in a few of the rows and leave the others as NULL. Thus, a combination of databases
    will get NULL information. The dbo.People now looks like *Figure 19.4.2*:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，有了这个，您可以修改表。右键单击dbo.People表图标，然后转到“查看数据”。为了说明这个概念，在一些行中输入一些工资金额，将其他行留空。因此，数据库的组合将获得NULL信息。dbo.People现在看起来像*图19.4.2*：
- en: '![](img/3fdc3c83-7993-4dac-a0dc-8598419a01de.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3fdc3c83-7993-4dac-a0dc-8598419a01de.png)'
- en: 'Figure 19.4.2: Salaries are entered into the table'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.4.2：工资已输入到表中
- en: If you reload it by clicking the Refresh(![](img/cb8f5266-5c08-4e5c-ae3e-351bde05611e.png))
    button, it confirms that it's saved.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果点击刷新按钮（![](img/cb8f5266-5c08-4e5c-ae3e-351bde05611e.png)）重新加载它，它会确认已保存。
- en: If you double-click on the Salary Column heading, it expands the column to fit.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '如果双击工资列标题，它会展开列以适应。 '
- en: 'Here, if you enter something such as `77777777777777777777` for Salary, an
    error message is displayed indicating Invalid value for cell (row, column). So,
    just keep in mind that if you try to enter something like `788777.988888`—it will
    round it automatically to two decimal places as `788777.99`. So, that''s basically
    how `decimal (18,2)` works: it imposes restrictions on the data that can be entered.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，如果您为薪水输入诸如`77777777777777777777`之类的内容，将显示一个错误消息，指示单元格（行，列）的值无效。因此，请记住，如果您尝试输入诸如`788777.988888`之类的内容，它将自动四舍五入为两位小数，即`788777.99`。这基本上就是`decimal
    (18,2)`的工作原理：它对可以输入的数据施加限制。
- en: Writing the code for this project
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为该项目编写代码
- en: 'In the next stage, go to the Design view, and double-click on the Show People
    button. This takes us into `Default.aspx.cs`. Delete the `Page_Load` block. The
    relevant portion of the starting code for this project should look like *Figure
    19.4.3*:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个阶段，转到设计视图，并双击“显示人员”按钮。这将带我们进入`Default.aspx.cs`。删除`Page_Load`块。该项目的起始代码的相关部分应如*图19.4.3*所示：
- en: '![](img/d51ceffc-e93f-4be9-9733-d184bc069751.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d51ceffc-e93f-4be9-9733-d184bc069751.png)'
- en: 'Figure 19.4.3: The starting code section for this project'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.4.3：该项目的起始代码部分
- en: 'Now, we will write code. Let''s go through the creation of the code, step-by-step.
    First, near the top of the file under `using System`, enter the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将编写代码。让我们逐步进行代码的创建。首先，在`using System`下面的文件顶部输入以下内容：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We''ll use this line to make a list of people. Then, also enter the following
    just below it:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用这行来制作一个人员列表。然后，在它的下面也输入以下内容：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating the person class
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建person类
- en: 'Now for the next stage; we''ll make a class called `Person`; so, enter the
    following just above the line that begins with `public partial class _Default...`:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是下一个阶段；我们将创建一个名为`Person`的类；因此，请在以`public partial class _Default...`开头的行的上方输入以下内容：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Making the properties
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建属性
- en: 'Next, we will make two properties. So, enter the following lines between a
    set of curly braces:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建两个属性。因此，请在一对大括号之间输入以下行：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Because the information referenced by public decimal could be missing, you put
    in a `?` symbol. This is a *nullable* quantity, which we'll call `Salary`. This
    is the class.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 因为由public decimal引用的信息可能丢失，所以您要输入一个`?`符号。这是一个*nullable*数量，我们将其称为`Salary`。这就是这个类。
- en: 'Now, to make use of this, you have to take the following typical steps. First,
    you want to clear the output from the label any time somebody clicks on the button,
    so enter the following between a set of curly braces under the line that begins
    with `protected void Button1_Click...`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要使用这个，你必须采取以下典型的步骤。首先，你希望在有人点击按钮时清除标签的输出，所以在以`protected void Button1_Click...`开头的行下面的花括号之间输入以下内容：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Making the list of people
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作人员名单
- en: 'In the next stage, we''ll make a list of people, so enter the following under
    this line:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个阶段，我们将制作一个人员名单，所以在这一行下面输入以下内容：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here, we call this as `peopleList` and set that equal to a new list of persons.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们称之为`peopleList`，并将其设置为新的人员列表。
- en: Building the connection string
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建连接字符串
- en: 'In the next stage, you need to get the connection string, so, on the following
    line, you start by entering `string connString =`, followed by the `@` symbol
    to make it a verbatim string, and then you put the `""` symbols. Now to get the
    connection string, do the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个阶段，你需要获取连接字符串，所以，在下一行开始，输入`string connString =`，然后跟上`@`符号使其成为逐字字符串，然后放上`""`符号。现在，要获取连接字符串，做以下操作：
- en: Click on View in the menu bar and select SQL Server Object Explorer.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击菜单栏中的“查看”，选择“SQL Server对象资源管理器”。
- en: Right-click on the People database and select Properties.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击People数据库，选择属性。
- en: In the Properties pane, double-click on Connection String to select it with
    its long description.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性窗格中，双击连接字符串以选择它及其长描述。
- en: Then right-click on the long description and copy it.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后右键单击长描述并复制它。
- en: Paste the description between the set of `""` symbols.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一对`""`符号之间粘贴描述。
- en: 'The connection string line should then look like the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 连接字符串行应该如下所示：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can now close the SQL Server Object Explorer and Properties panes.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以关闭SQL Server对象资源管理器和属性窗格了。
- en: Entering the SQL-related code
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输入与SQL相关的代码
- en: 'Now, let''s go to SQL-related code. First, enter the following below the connection
    string:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们转到与SQL相关的代码。首先，在连接字符串下面输入以下内容：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We'll call the SQL connection, `conn`, and we will initialize the new SQL connection
    with the connection string.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将调用SQL连接，`conn`，并使用连接字符串初始化新的SQL连接。
- en: 'Now, let''s make a command; enter the following between a set of curly braces
    below this line:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个命令；在这一行下面的花括号之间输入以下内容：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, you open a connection by entering the following just below that:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过在下面输入以下内容打开一个连接：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, enter the following below this line:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在这条线下面输入以下内容：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Adding people to the list from the table
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从表中添加人员到列表
- en: 'For the next stage in the process, start by entering the following between
    a set of curly braces below this line:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在过程的下一个阶段，从下面的花括号之间输入以下内容：
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'While this condition returns `True`, we will make objects using the information
    from the table in the database. In order to do that, enter the following between
    a set of curly braces below this line:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当这个条件返回`True`时，我们将使用数据库中表的信息来创建对象。为了做到这一点，在这一行下面的花括号之间输入以下内容：
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here, the first part of this line gets the column at index 1, converts it to
    a string, and then, assigns it to the name property of each object. Then, we say
    `Salary = reader[3]`, and because this is the one that could be missing a value,
    we say `decimal?`—as a nullable decimal, in other words.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，这行的第一部分获取索引为1的列，将其转换为字符串，然后将其分配给每个对象的名称属性。然后，我们说`Salary = reader[3]`，因为这是可能缺少值的部分，我们说`decimal?`—即可空的十进制。
- en: Displaying the records
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示记录
- en: 'We are getting close at this point; the last stage, of course, is to display
    the records to see the effect of the nullable. Outside all of the curly braces
    beneath the `peopleList.Add...` line (as shown as follows), enter the following
    `foreach` statement:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上我们已经接近了；最后阶段，当然是显示记录以查看可空的效果。在`peopleList.Add...`行下面的所有花括号之外（如下所示），输入以下`foreach`语句：
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Next, enter the following between a set of curly braces below this line:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在这一行下面的花括号之间输入以下内容：
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is the heart of our application.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们应用程序的核心。
- en: Before running this application, once again note that an interesting piece is
    the `Salary` property in `...Salary = reader[3] as decimal? })`. The question
    mark after `as decimal` indicates that it's a nullable decimal. A decimal value
    could be missing, which is a different situation. If you just put `as decimal`,
    the tool tip would say that it's an error.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行此应用程序之前，再次注意`...Salary = reader[3] as decimal? })`中`Salary`属性的一个有趣的地方。`as
    decimal`后面的问号表示它是一个可空的十进制数。十进制值可能丢失，这是一个不同的情况。如果你只是写`as decimal`，工具提示会说这是一个错误。
- en: Running the program
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行程序
- en: 'Now, crank this up in your browser. Click on the Show People button. Let''s
    examine the results, as shown in *Figure 19.4.4*:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开你的浏览器。点击“显示人员”按钮。让我们检查结果，如*图19.4.4*所示：
- en: '![](img/ef146936-e850-432d-9c98-84c2b567dfcc.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef146936-e850-432d-9c98-84c2b567dfcc.png)'
- en: 'Figure 19.4.4: The results of running our program'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.4.4：运行程序的结果
- en: Notice that when there's no salary, it displays just the name—it doesn't give
    anything else, nor does it crash. So, it's pretty good.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当没有工资时，它只显示姓名，不会提供其他任何信息，也不会崩溃。所以，这很好。
- en: This is a practical application of that little symbol, the question mark, after
    our data type and nullable.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是那个小符号的实际应用，问号，在我们的数据类型和可空之后。
- en: Chapter review
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 章节回顾
- en: 'For review, the complete version of the `Default.aspx.cs` file for this chapter,
    including comments, is shown in the following code block:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回顾，包括注释的本章`Default.aspx.cs`文件的完整版本如下所示：
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned about using the *nullable* keyword to ensure that
    records that have missing values can still be brought, for example, into an application.
    You added a field to the `People` database, modified the `dbo.people` table, created
    a `Person` class, made a list of people, built a connection string, entered SQL-related
    code, and added people to the list from the `dbo.people` table.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了使用*nullable*关键字来确保具有缺失值的记录仍然可以被引入应用程序。您向`People`数据库添加了一个字段，修改了`dbo.people`表，创建了一个`Person`类，制作了一个人员列表，构建了连接字符串，输入了与SQL相关的代码，并从`dbo.people`表中添加了人员到列表中。
- en: In the next chapter, you will learn about dragging charts into the page and
    then making them work with some simple tables inside the SQL Server through C#
    as the language that connects the page and the database.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何将图表拖入页面，然后通过C#作为连接页面和数据库的语言，使它们与SQL Server内的一些简单表格配合使用。
