["```php\nfunction* fibonacci () {\n let n2 = 0;x\n let n1 = 1;\n while ( true ) {\n   let input = yield n2;\n   if ( input ) {\n     n1 = 1;\n     n2 = 0;\n   } else {\n     let next = n1 + n2;\n     [ n1, n2 ] = [ next, n1 ];\n   }\n }\n}\nlet gen = fibonacci();\n```", "```php\nconst db = require( './simple_db' );\nasync function main() {\n const missingKeys = [];\n try { const user = await db.get( 'john' ); } \n catch ( err ) { missingKeys.push( 'john' ); }\n try { const user = await db.get( 'sam' ); }\n catch ( err ) { missingKeys.push( 'sam' ); }\n try { const user = await db.get( 'zach' ); }\n catch ( err ) {\n \u00a0\u00a0missingKeys.push( 'zach' );\n \u00a0\u00a0await db.insert('zach', { first: 'zach', last: 'smith', age: 25 });\n \u00a0\u00a0try { const user = await db.get( 'zach' ); }\n \u00a0\u00a0catch ( err ) { missingKeys.push( 'zach' ); }\n }\n return missingKeys;\n}\nmain().then( console.log ).catch( console.log );\n```", "```php\n    <script src=\"./node_modules/jquery/dist/jquery.js\"></script>\n    ```", "```php\n$( '.lightButton' ).on( 'click', e => {\n \u00a0e.stopPropagation();\n \u00a0const element = $( e.target ).prev();\n \u00a0if ( element.attr( 'lit' ) !== 'true' ) {\n \u00a0\u00a0\u00a0element.attr( 'lit', 'true' );\n \u00a0\u00a0\u00a0element.css( 'background-color', 'black' );\n \u00a0} else {\n \u00a0\u00a0\u00a0element.attr( 'lit', 'false' );\n \u00a0\u00a0\u00a0element.css( 'background-color', 'white' );\n \u00a0}\n} );\n$( '#toggle' ).on( 'click', e => {\n \u00a0e.stopPropagation();\n \u00a0$( '.lightButton' ).trigger( 'click' );\n} );\n```", "```php\n'use strict';\nconst { fibonacci } = require( './index.js' );\ndescribe( 'fibonacci', () => {\n\u00a0it( 'n=0 should equal 0', ( done ) => {\n\u00a0\u00a0\u00a0done( fibonacci( 0 ) !== 0 );\n\u00a0} );\n\u00a0it( 'n=1 should equal 1', ( done ) => {\n\u00a0\u00a0\u00a0done( fibonacci( 1 ) !== 1 );\n\u00a0} );\n\u00a0it( 'n=2 should equal 1', ( done ) => {\n\u00a0\u00a0\u00a0done( fibonacci( 2 ) !== 1 );\n\u00a0} );\n\u00a0it( 'n=5 should equal 5', ( done ) => {\n\u00a0\u00a0\u00a0done( fibonacci( 5 ) !== 5 );\n\u00a0} );\n\u00a0it( 'n=7 should equal 13, ( done ) => {\n\u00a0\u00a0\u00a0done( fibonacci( 7 ) !== 13 );\n\u00a0} );\n\u00a0it( 'n=9 should equal 34, ( done ) => {\n\u00a0\u00a0\u00a0done( fibonacci( 9 ) !== 34 );\n\u00a0} );\n} );\n```", "```php\nfunction immutable( data ) {\n\u00a0if ( typeof data !== 'object' ) {\n\u00a0\u00a0\u00a0return;\n\u00a0}\n\u00a0Object.freeze( data );\n\u00a0Object.values( data ).forEach( immutable );\n}\n```", "```php\n    this.setState( { value: e.target.value } );\n    ```", "```php\nclass Editor extends React.Component {\n\u00a0constructor( props ) { ... }\n\u00a0handleChange( e ) { ... }\n\u00a0save() { ... }\n\u00a0load() { ... }\n\u00a0goHome() { ... }\n\u00a0render() {\n\u00a0\u00a0\u00a0return (\n\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button type=\"button\" onClick={this.goHome.bind( this )}>Back to home</button>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"text\" name=\"Note Text\" value={this.state.value} onChange={this.handleChange.bind( this )}/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button type=\"button\" onClick={this.load.bind( this )}>Load</button>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button type=\"button\" onClick={this.save.bind( this )}>Save</button>\n\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0);\n\u00a0}\n}\nclass Home extends React.Component {\n\u00a0goEdit() { ... }\n\u00a0render() {\n\u00a0\u00a0\u00a0return (\n\u00a0\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h1>Note Editor App</h1>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<button type=\"button\" onClick={this.goEdit.bind( this )}>Edit Note</button>\n\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0);\n\u00a0}\n}\n//{\u2026}\n```"]