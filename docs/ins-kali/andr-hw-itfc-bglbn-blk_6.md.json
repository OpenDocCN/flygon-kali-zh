["```kt\npublic class HardwareTask extends AsyncTask<Void, Void, Boolean> {\n\n  private native boolean openHardware();\n  private native boolean pollButton();\n  private native boolean changeLED(boolean lit);\n  private native boolean readSensor();\n  private native float getSensorTemperature();\n  private native float getSensorPressure();\n  private native boolean closeHardware();\n```", "```kt\n    public void onResume() {\n        super.onResume();\n\n        // Create our background hardware communication thread\n        hwTask = new HardwareTask();\n        hwTask.pollHardware(this);\n    }\n```", "```kt\n    public void pollHardware(Activity act) {\n      mCallerActivity = act;\n      execute();\n    }\n```", "```kt\n    public void onPause() {\n        super.onPause();\n\n        // Release the hardware when the app is paused\n        if (hwTask != null) {\n          hwTask.cancel(true);\n          hwTask = null;\n        }\n    }\n```", "```kt\n    protected void onCancelled() {\n        Log.i(\"HardwareTask\", \"Cancelled.\");\n        isDone = true;\n    }\n```", "```kt\nprotected void onPreExecute() {    \n    Log.i(\"HardwareTask\", \"onPreExecute\");\n    isDone = false;\n    ...\n    if (!openHardware()) {\n      Log.e(\"HardwareTask\", \"Error opening hardware\");\n      isDone = true;\n    } else {\n      changeLED(false);\n    }\n  }\n```", "```kt\nprotected Boolean doInBackground(Void... params) { \n\n      ...\n\n      // Poll the button until an error or done\n      while (!isDone && !isCancelled()) {\n```", "```kt\n      while (!isDone && !isCancelled()) {\n         if (pollButton()) {\n...\n         }\n         Thread.sleep(100);\n      }\n      ...        \n      return false;\n}\n```", "```kt\n            if (!changeLED(true)) {\n               Log.e(\"HardwareTask\", \"Unable to turn LED on\");\n            }\n```", "```kt\n            if (!readSensor())\n            {\n               Log.e(\"HardwareTask\", \"Unable to read sensor\");\n            }\n```", "```kt\n            temperature = getSensorTemperature();\n            pressure = getSensorPressure();\n```", "```kt\n            publishProgress();\n            Thread.sleep(1000);\n            if (!changeLED(false)) {\n               Log.e(\"HardwareTask\", \"Unable to turn LED off\");\n            }\n         } // End of pollButton() check\n```", "```kt\n   protected void onProgressUpdate(Void... values) {\n      ((MainActivity)mCallerActivity).\n         updateSensorData(temperature, pressure);\n   }\n```", "```kt\n    public void updateSensorData(float temperature, float pressure) {\n      Toast toast = Toast.makeText(getApplicationContext(), \n          \"Updating sensor data\", Toast.LENGTH_SHORT);\n      TextView tv = (TextView) findViewById(R.id.temperatureTextView);    \n       tv.setText(\"Temperature: \" + temperature);\n\n    tv = (TextView) findViewById(R.id.pressureTextView);\n       tv.setText(\"Pressure: \" + pressure);\n\n       toast.show();\n    }\n```", "```kt\n   protected void onPostExecute(Boolean result) {\n    if (!closeHardware()) {\n      Log.e(\"HardwareTask\", \"Error closing hardware\");\n    }\n       ...\n    }\n```"]