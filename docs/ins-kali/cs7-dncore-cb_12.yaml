- en: Choosing and Using a Source Control Strategy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择和使用源代码控制策略
- en: 'Source control is an essential part of every developer''s toolkit. It doesn''t
    matter whether you are a hobbyist or professional programmer, when you get up
    from your desk to go home, you better be sure your code is safe. In this chapter,
    we will be looking at choosing and using a source control strategy. Some of the
    topics we will be taking a look at are:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码控制是每个开发人员工具包的重要组成部分。无论您是业余爱好者还是专业程序员，当您离开办公桌回家时，您最好确保您的代码是安全的。在本章中，我们将讨论选择和使用源代码控制策略。我们将讨论一些主题，比如：
- en: Setting up Visual Studio account management and determining which source control
    solution is best for you
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Visual Studio帐户管理并确定哪种源代码控制解决方案最适合您
- en: Setting up Visual Studio GitHub integration, checking in code for the first
    time, and checking in changes
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Visual Studio GitHub集成，首次检入代码，以及检入更改
- en: Working as a team using GitHub, handling and resolving conflicts in code
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用GitHub作为团队合作，处理和解决代码冲突
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: During my career, I used Visual SourceSafe, SVN, VSTS, Bitbucket, and GitHub.
    It really does not matter how you approach it, the important thing is that you
    keep your source code safe and versioned. When I first started working with source
    control, the company I worked at used Visual SourceSafe. If you are unfamiliar
    with the software, just Google it. You will see results come back containing words
    such as hate, unpleasant, bad, and Microsoft's source destruction system. You
    get the point.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的职业生涯中，我使用过Visual SourceSafe、SVN、VSTS、Bitbucket和GitHub。重要的不是你如何对待它，而是你保持你的源代码安全和版本化。当我开始使用源代码控制时，我所在的公司使用了Visual
    SourceSafe。如果您对这个软件不熟悉，可以搜索一下。你会看到一些包含“讨厌”、“不愉快”、“糟糕”和“微软的源代码破坏系统”的结果。你懂的。
- en: We had an employee leave files exclusively checked out to him, after he resigned
    and emigrated to another country. I'm beginning to wonder if the company policy
    to enforce the use of SourceSafe wasn't the reason he emigrated. But jokes apart,
    it gave us endless problems. Slap SourceSafe on a large project, and you could
    end up with a disaster. These days, however, developers have excellent choices
    available to them.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个员工离开了他独占的文件，之后他辞职并移民到另一个国家。我开始怀疑公司强制使用SourceSafe的政策是否是他移民的原因。但开玩笑的，这给我们带来了无尽的问题。在一个大型项目上使用SourceSafe，可能会导致灾难。然而，如今，开发人员有很好的选择。
- en: The two that stand out are obviously Microsoft Team Services and GitHub. Both
    have a free tier, but the decision of using one over the other depends entirely
    on your unique situation.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 显而易见的两个是Microsoft Team Services和GitHub。它们都有免费的层级，但使用其中一个而不是另一个的决定完全取决于您的独特情况。
- en: Setting up Visual Studio account management and determining which source control
    solution is best for you
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Visual Studio帐户管理并确定哪种源代码控制解决方案最适合您
- en: Visual Studio allows developers to create an account and sign in. This is particularly
    beneficial if you hot desk often or work in multiple locations on different machines
    (think work and home PCs), because Visual Studio will then automatically sync
    your settings between the machines you're signed in to.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio允许开发人员创建帐户并登录。如果您经常在不同的机器上工作（比如工作和家用PC），那么这将特别有益，因为Visual Studio将自动在您登录的机器之间同步您的设置。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe will assume that you have just completed installing Visual Studio
    2017 on your machine. It doesn't matter whether you have installed the trial or
    licensed version of Visual Studio 2017.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将假设您刚刚在您的计算机上安装了Visual Studio 2017。无论您安装的是试用版还是授权版的Visual Studio 2017都无所谓。
- en: How to do it...
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: After installation completes, open up Visual Studio.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，打开Visual Studio。
- en: 'At the top right of Visual Studio, you will see that there is a Sign in link:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio的右上方，您会看到一个“登录”链接：
- en: '![](img/B06434_13_01.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_01.png)'
- en: Clicking on the Sign in link, you will be allowed to enter your e-mail address
    here. I find it useful to just use my Outlook e-mail address. In my opinion, it
    is one of the best web e-mails available.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“登录”链接，您将被允许在此输入您的电子邮件地址。我发现直接使用我的Outlook电子邮件地址很有用。在我看来，这是最好的网络电子邮件之一。
- en: Note that I'm not endorsing Outlook for any other reason other than I really
    think it is a great product. I also have a Gmail account as well as an iCloud
    e-mail account.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我之所以推荐Outlook并不是因为其他原因，而是因为我真的认为它是一个很棒的产品。我还有一个Gmail帐户和一个iCloud电子邮件帐户。
- en: After adding your e-mail account, Visual Studio will redirect you to a sign
    in page.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加完您的电子邮件帐户后，Visual Studio将重定向您到登录页面。
- en: 'Because I already have an Outlook account, Visual Studio simply allows me to
    sign in with it. If, however, you need to create an account, you can do so from
    the sign up link on the Sign in to Visual Studio form:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为我已经有一个Outlook帐户，所以Visual Studio只允许我使用它登录。但是，如果您需要创建一个帐户，可以在“登录到Visual Studio”表单上的注册链接上这样做：
- en: '![](img/B06434_13_02-1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_02-1.png)'
- en: 'Visual Studio will now redirect you to a sign up page where you can go and
    create an account:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Visual Studio现在将重定向您到一个注册页面，您可以在那里创建一个帐户：
- en: '![](img/B06434_13_03.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_03.png)'
- en: 'After your account is created, you will be prompted to return to Visual Studio
    to sign in. After you have signed in, Visual Studio will display your details
    in the right-hand corner of the IDE:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建完您的帐户后，您将被提示返回Visual Studio进行登录。登录后，Visual Studio将在IDE的右上角显示您的详细信息：
- en: '![](img/B06434_13_04.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_04.png)'
- en: Clicking on the down arrow next to your account name, you can view your Account
    settings....
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击您的帐户名称旁边的向下箭头，您可以查看您的帐户设置....
- en: '![](img/B06434_13_05.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_05.png)'
- en: 'This will show you a summary of your account, from where you can further personalize
    your account:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将向您显示您的帐户摘要，您可以在其中进一步个性化您的帐户：
- en: '![](img/B06434_13_06.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_06.png)'
- en: How it works...
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The choice of source control is a topic every developer has a strong opinion
    about. Unfortunately, if you work for a boss, that decision might not even be
    up to you. Many companies have already set up their source control system just
    the way they like it, and you will need to fall in with company procedure. That
    is just the way it is. It is, however, good to know about the options available
    to you as an indie developer.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码控制的选择是每个开发人员都有强烈意见的话题。不幸的是，如果您为老板工作，这个决定可能甚至不取决于您。许多公司已经按照他们喜欢的方式设置了他们的源代码控制系统，您需要遵守公司的程序。这就是现实。然而，作为独立开发人员，了解可用的选项是很好的。
- en: All good developers should be writing code in their own time too. You are not
    only a developer while you sit at work. We eat, breathe, sleep, and live code.
    It is part of who and what we are. I will say that in order for you to become
    better at your job as a developer, you must play with code in your own time. Start
    a pet project, get some friends together, and decide to write some software together.
    Not only will this make you all better at what you do, but you will learn a lot
    from each other.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所有优秀的开发人员也应该在自己的时间里编写代码。您不仅在工作时才是开发人员。我们吃饭、呼吸、睡觉，生活中都离不开代码。这是我们是谁以及我们是什么的一部分。我会说，为了成为更好的开发人员，您必须在自己的时间里玩弄代码。开始一个小项目，召集一些朋友，决定一起编写一些软件。这不仅会让您们都变得更好，而且您们会互相学到很多东西。
- en: If you are a remote developer who does not commute to and work in an office
    every day, you can still connect with the developer community. There are so many
    resources available to developers, and the developer community is more than happy
    to rally around newbies and help them grow. Starting a solo or pet project is
    useless if you don't commit (pun intended) to keeping your code safe. To do this,
    you don't have to pay a single dollar either. **Visual Studio Online** (now called
    **Team Services**) and GitHub provide developers with a fantastic platform to
    keep your code safe.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是一名远程开发人员，不需要每天通勤到办公室工作，您仍然可以与开发人员社区联系。开发人员有很多资源可用，开发人员社区也乐意围绕新手提供帮助。如果您不致力于保护您的代码，开始一个独立或小项目是没有意义的。而要做到这一点，您也不必花一分钱。**Visual
    Studio Online**（现在称为**团队服务**）和GitHub为开发人员提供了一个绝佳的平台来保护您的代码。
- en: Let's start by looking at Team Services. The site can be found by pointing your
    browser to [https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看团队服务。可以通过将浏览器指向[https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)来找到该网站。
- en: 'Here you will see that Microsoft has given developers a fantastic opportunity
    to use Team Services. It is absolutely free for up to five users. This means that
    you and your mates can collaboratively work on the next big thing while ensuring
    that your code remains secure. Signing up is as simple as clicking on the Get
    started for free link:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您将看到微软为开发人员提供了使用团队服务的绝佳机会。最多可免费使用五个用户。这意味着您和您的伙伴可以共同致力于下一个大项目，同时确保您的代码保持安全。注册非常简单，只需点击“免费开始”链接：
- en: 'For information on pricing, visit the following link:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有关定价信息，请访问以下链接：
- en: '[https://www.visualstudio.com/team-services/pricing/](https://www.visualstudio.com/team-services/pricing/)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.visualstudio.com/team-services/pricing/](https://www.visualstudio.com/team-services/pricing/)'
- en: 'The second excellent option is GitHub. It differs slightly in its free offering
    by requiring developers to use a public repository on the free account. If you
    don''t mind your code being essentially open source, then GitHub is a great choice.
    With GitHub though, you can have unlimited collaborators and public repositories:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个优秀的选择是GitHub。它在免费提供方面略有不同，要求开发人员在免费账户上使用公共存储库。如果您不介意您的代码基本上是开源的，那么GitHub是一个很好的选择。不过，使用GitHub，您可以拥有无限的合作者和公共存储库：
- en: 'For information on pricing, visit the following link:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有关定价信息，请访问以下链接：
- en: '[https://github.com/pricing](https://github.com/pricing)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/pricing](https://github.com/pricing)'
- en: The choice of source control essentially comes down to the openness of your
    code. If you can afford to let other developers see and download your code, then
    GitHub is a great choice. If you need your code to remain private and only shared
    between specific people, then a paid GitHub account will suit you better. If you
    don't want to fork out money yet, then Team Services will be your best bet.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码控制的选择基本上取决于您的代码的开放性。如果您可以让其他开发人员看到并下载您的代码，那么GitHub是一个很好的选择。如果您需要您的代码保持私密，并且只在特定人员之间共享，那么付费的GitHub账户会更适合您。如果您还不想花钱，那么团队服务将是您最好的选择。
- en: Setting up Visual Studio GitHub integration, checking in code for the first
    time, and checking in changes
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Visual Studio GitHub集成，首次提交代码，以及提交更改
- en: GitHub has been a tour de force for so many years. There are developers that
    swear by it. In fact, it is the default option when using Apple's Xcode IDE. For
    whatever reason you decide to use GitHub, rest assured that you and your code
    are in good hands.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，GitHub一直是一股强大的力量。有开发人员对它赞不绝口。事实上，使用Apple的Xcode IDE时，它是默认选项。无论出于何种原因，您决定使用GitHub，可以放心，您和您的代码都在安全的手中。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'The following recipe will assume that you have already signed up for GitHub
    and that you have enabled Two-factor authentication. If you have not signed up
    for a GitHub account, you can do so by going to [https://github.com/](https://github.com/) and
    creating a new account. To enable Two-factor authentication on your GitHub account
    (something I personally strongly advise), do the following:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将假定您已经注册了GitHub账户，并且已启用了双因素身份验证。如果您还没有注册GitHub账户，可以访问[https://github.com/](https://github.com/)注册一个新账户。要在GitHub账户上启用双因素身份验证（我个人强烈建议这样做），请执行以下操作：
- en: 'Click on the down arrow next to your profile image, and select Settings:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击个人资料图片旁边的向下箭头，然后选择设置：
- en: '![](img/B06434_13_07.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_07.png)'
- en: 'From the Personal settings menu that appears on the left of the next web page,
    select Security:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下一个网页左侧出现的个人设置菜单中，选择安全性：
- en: '![](img/B06434_13_08.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_08.png)'
- en: The first section on the security page will be your Two-factor authentication
    status. To get started with setting it up, click on the Set up two-factor authentication
    button.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安全页面的第一部分将是您的双因素身份验证状态。要开始设置它，请单击“设置双因素身份验证”按钮。
- en: You will then be presented with a brief overview of what Two-factor authentication
    is and you will be given the choice of Set up using an app (which I recommend)
    or Set up using SMS. Using an app is by far the easiest, and if you have a smartphone
    or tablet, you can download an authenticator application from the applicable app
    store. From there on, follow the prompts that GitHub give you to complete the
    Two-factor authentication setup.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您将看到什么是双因素身份验证的简要概述，并可以选择使用应用程序进行设置（我推荐的）或使用短信进行设置。使用应用程序是最简单的方法，如果您有智能手机或平板电脑，可以从适用的应用商店下载身份验证器应用程序。然后，按照GitHub给出的提示完成双因素身份验证设置。
- en: After you have completed the setup, your Two-factor authentication will be switched
    on.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成设置后，您的双因素身份验证将被打开。
- en: '![](img/B06434_13_09.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_09.png)'
- en: How to do it...
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到的...
- en: 'Adding the GitHub extension to Visual Studio is easily done by downloading
    the visx from the following link and installing it: [https://visualstudio.github.com/downloads/GitHub.VisualStudio.vsix](https://visualstudio.github.com/downloads/GitHub.VisualStudio.vsix).'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将GitHub扩展添加到Visual Studio很容易，只需从以下链接下载visx并安装：[https://visualstudio.github.com/downloads/GitHub.VisualStudio.vsix](https://visualstudio.github.com/downloads/GitHub.VisualStudio.vsix)。
- en: Assuming that you have an existing application you want to add to GitHub, the
    process of adding it to a new repository is quite simple. I have simply created
    a console application with nothing but the template code, but you can add any
    project type and size to GitHub.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设您有要添加到GitHub的现有应用程序，那么将其添加到新存储库的过程非常简单。我只是创建了一个仅包含模板代码的控制台应用程序，但您可以将任何项目类型和大小添加到GitHub。
- en: On the View menu in Visual Studio 2017, select the Team Explorer option.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio 2017的“视图”菜单中，选择“Team Explorer”选项。
- en: You will be presented with two options under the Hosted Service Providers section.
    For now, we will select GitHub and, seeing as we already have an account, we will
    click on Connect...
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在托管服务提供程序部分，您将看到两个选项。现在，我们将选择GitHub，并且，因为我们已经有一个帐户，我们将单击“连接”...
- en: '![](img/B06434_13_10.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_10.png)'
- en: 'You will now be presented with the GitHub login page. You are also offered
    the chance to sign up from here if you do not have an existing GitHub account:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您将看到GitHub登录页面。如果您没有现有的GitHub帐户，您也可以从这里注册：
- en: '![](img/B06434_13_11.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_11.png)'
- en: 'Because I have Two-factor authentication set up on my GitHub account, I am
    prompted to use my authenticator application to enter the generated authentication
    code and authenticate myself:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为我在GitHub帐户上设置了双因素身份验证，所以我被提示使用我的身份验证器应用程序输入生成的身份验证代码并进行身份验证：
- en: '![](img/B06434_13_12.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_12.png)'
- en: 'After you have been authenticated, you will return to the Manage Connections
    screen. If your project isn''t displayed under the Local Git Repositories, you
    can add it:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认证后，您将返回到“管理连接”屏幕。如果您的项目未显示在本地Git存储库下，可以添加它：
- en: '![](img/B06434_13_13.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_13.png)'
- en: 'Next, you will want to click on the Home icon, which is a picture of a little
    house at the top of the Team Explorer window. From the Home screen, click on the
    Sync button:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您将要单击主页图标，即Team Explorer窗口顶部的小房子图标。从主屏幕，单击“同步”按钮：
- en: '![](img/B06434_13_14.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_14.png)'
- en: This will display the Publish window to you. Under GitHub, click on the Publish
    to GitHub button. This is going to publish your project to a new repository on
    GitHub.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将向您显示发布窗口。在GitHub下，单击“发布到GitHub”按钮。这将把您的项目发布到GitHub的新存储库中。
- en: Remember, if you are using the free GitHub, all your repositories are public.
    If you are writing code that can't be made public (is not open source), then sign
    up for one of the paid GitHub accounts that include private repositories.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果您使用的是免费的GitHub，那么您的所有存储库都是公开的。如果您正在编写不能公开的代码（不是开源的），那么请注册一个包括私人存储库的付费GitHub帐户。
- en: '![](img/B06434_13_15.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_15.png)'
- en: 'GitHub will then prompt you to add in the details for this publish. Because
    you connected to GitHub earlier, your username will already be selected in the
    drop-down menu. When you are ready, click on Publish:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GitHub随后会提示您添加此发布的详细信息。因为您之前连接到了GitHub，所以您的用户名将已在下拉菜单中选择。准备好后，单击“发布”：
- en: '![](img/B06434_13_16.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_16.png)'
- en: 'When the project has been published to GitHub, you will automatically be returned
    to the Home screen:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目发布到GitHub后，您将自动返回到主屏幕：
- en: '![](img/B06434_13_17.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_17.png)'
- en: 'Looking at your GitHub account online, you will see that the project has been
    added:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看您的GitHub帐户在线，您将看到项目已添加：
- en: '![](img/B06434_13_18.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_18.png)'
- en: Next, let's go and make some changes to the `GitHubDemo` application. Just go
    ahead and add a new class to your project. I called mine `NewClass.cs`, but you
    can call yours whatever you like.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们去对`GitHubDemo`应用程序进行一些更改。只需添加一个新类到您的项目中。我称我的为`NewClass.cs`，但您可以随意命名。
- en: 'You will notice that as soon as a change is made to your project, that the
    solution will mark the changed items with a red tick. Your class is marked with
    a green plus sign:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会注意到，一旦对项目进行更改，解决方案将用红色勾标记更改的项目。您的类将用绿色加号标记：
- en: '![](img/B06434_13_19.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_19.png)'
- en: To add the changes to your GitHub repository, you can follow two routes. The
    first option is to go to the Team Explorer - Home window and click on the Changes
    button.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将更改添加到GitHub存储库，您可以选择两种方法。第一种选择是转到Team Explorer - 主页窗口，然后单击“更改”按钮。
- en: The second (and in my opinion more convenient) option, is to right-click the
    solution in Solution Explorer and click on the Commit... menu item from the context
    menu.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二种（我认为更方便的）选择是在“解决方案资源管理器”中右键单击解决方案，然后从上下文菜单中单击“提交...”菜单项。
- en: GitHub might ask you for your user information the first time you perform a
    commit.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次执行提交时，GitHub可能会要求您提供用户信息。
- en: 'Before you are allowed to commit your changes, you must fill in the required
    commit message. In a real team project, be as descriptive as possible in your
    commit message. Consider using task item code (or backlog codes) to uniquely identify
    the code being added. This will save your (or another developer''s) bacon sometime
    in the future, I guarantee it:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在允许提交更改之前，您必须填写所需的提交消息。在真实的团队项目中，在提交消息中尽可能详细地描述。考虑使用任务项代码（或积压代码）来唯一标识所添加的代码。这将在未来的某个时候为您（或其他开发人员）节省时间，我保证：
- en: '![](img/B06434_13_20.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_20.png)'
- en: 'One important thing to note is that you have three commit options available
    to you if you click on the down arrow next to the Commit All button. The Commit
    All button will just record the changes you make on your local machine. In other
    words, the change will not be reflected in the remote repository. The Commit All
    and Push button will record the changes on your local machine and push those changes
    to your remote GitHub repository. The Commit All and Sync button will record the
    changes on your local machine, then it will pull any changes from the remote repository,
    and finally it will do the push. You will want to do this if you are working in
    a team. For this recipe, however, I will just do a Commit All and Push, seeing
    as I am the only developer working on this repo:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要注意的一件重要事情是，如果单击“提交所有”按钮旁边的向下箭头，您将有三个提交选项可供选择。提交所有按钮将仅记录您在本地机器上进行的更改。换句话说，更改不会反映在远程存储库中。提交所有并推送按钮将记录本地机器上的更改，并将这些更改推送到您的远程GitHub存储库。提交所有并同步按钮将记录本地机器上的更改，然后将从远程存储库中拉取任何更改，最后进行推送。如果您正在团队中工作，您将希望这样做。但是，对于本教程，我将只进行提交所有并推送，因为我是唯一在这个存储库上工作的开发人员：
- en: '![](img/B06434_13_21.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_21.png)'
- en: 'When the commit has completed, the Team Explorer - Synchronization window will
    notify you of the successful commit:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当提交完成后，团队资源管理器 - 同步窗口将通知您提交成功：
- en: '![](img/B06434_13_22.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_22.png)'
- en: 'Heading over to GitHub online, you will see the newly pushed changes reflected
    in your GitHub repository, along with the commit message:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到GitHub在线，您将看到新推送的更改反映在您的GitHub存储库中，以及提交消息：
- en: '![](img/B06434_13_23.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_23.png)'
- en: GitHub is a fantastic source control solution for any developer. Consider creating
    an open source project. It is more beneficial than you might imagine.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GitHub是任何开发人员的绝佳源代码控制解决方案。考虑创建一个开源项目。它比您想象的更有益。
- en: More and more these days, prospective employers are reviewing developers' GitHub
    repos when considering applicants for developer positions. Keep that in mind,
    because a GitHub repo is a resume in itself.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，越来越多的潜在雇主在考虑开发人员职位申请者时会审查他们的GitHub存储库。请记住这一点，因为GitHub存储库本身就是一份简历。
- en: How it works...
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The free GitHub account allows you to create public repositories. This means
    that anyone is able to search for, view, and clone your project from GitHub to
    their own desktop. This is the central idea behind GitHub. This is obviously a
    key factor for indie developers and corporates that don't want to spend money.
    Corporates can afford it more than an indie developer, but I think that some companies
    prefer to roll their own, rather than use a service provider hosted in the cloud
    somewhere. This means that they prefer to keep the source control under their
    control by setting up a source control system on their own corporate servers.
    Having GitHub as an option for indie developers is an awesome solution. For those
    that require private repos, the fee isn't a stumbling block either.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 免费的GitHub帐户允许您创建公共存储库。这意味着任何人都可以从GitHub搜索、查看和克隆您的项目到他们自己的桌面。这是GitHub的核心理念。这显然是独立开发人员和不想花钱的公司的关键因素。公司可以承受比独立开发人员更多的费用，但我认为一些公司更喜欢自己动手，而不是使用云中托管的服务提供商。这意味着他们更喜欢通过在自己的公司服务器上设置源代码控制系统来保持对源代码控制的控制。对于独立开发人员来说，GitHub作为一个选择是一个很棒的解决方案。对于那些需要私有存储库的人来说，费用也不是一个障碍。
- en: Working as a team using GitHub, handling and resolving conflicts in code
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GitHub作为团队合作，处理和解决代码冲突
- en: GitHub and Team Services really come into their own when working in teams. The
    effect of collaborative effort is quite powerful. Sometimes though, it can be
    a bit challenging. Let us have a look at using GitHub to work in a team setup.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在团队中工作时，GitHub和Team Services真的发挥了作用。协作努力的效果非常强大。不过，有时可能会有些挑战。让我们看看如何使用GitHub在团队设置中工作。
- en: Getting ready
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will be using the existing `GitHubDemo` app checked in to GitHub. Let's assume
    that a new developer (let's call him John) has joined the team. Before you can
    let him push code to your branch, you need to add him as a collaborator. To do
    this, log in to GitHub and click on the Settings tab in your `GitHubDemo` repository.
    Click on Collaborators in the menu to the left.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用已经检入GitHub的现有`GitHubDemo`应用程序。假设一个新的开发人员（我们称之为约翰）加入了团队。在您允许他将代码推送到您的分支之前，您需要将他添加为合作者。要做到这一点，请登录GitHub，然后单击`GitHubDemo`存储库中的设置选项卡。单击左侧菜单中的合作者。
- en: 'You can then search for collaborators to add by entering their GitHub username,
    full name, or e-mail address:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以通过输入他们的GitHub用户名、全名或电子邮件地址来搜索要添加的合作者：
- en: '![](img/B06434_13_24.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_24.png)'
- en: 'When you are done, click on the Add collaborator button to add John as a collaborator
    to your project:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，单击“添加合作者”按钮将约翰添加为项目的合作者：
- en: '![](img/B06434_13_25.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_25.png)'
- en: John will receive an e-mail and will first need to respond to your invitation
    to collaborate.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 约翰将收到一封电子邮件，并首先需要回复您的合作邀请。
- en: '![](img/B06434_13_26.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_26.png)'
- en: How to do it...
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: John goes about setting up his Visual Studio environment, including getting
    connected to GitHub, by clicking on Team in the menu and clicking on Manage Connections....
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 约翰开始设置他的Visual Studio环境，包括通过单击菜单中的团队并单击管理连接来连接到GitHub....
- en: He logs in to GitHub with his e-mail address and password.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他用电子邮件地址和密码登录GitHub。
- en: Take note that if you have just signed up to GitHub, you will need to click
    on the verification e-mail sent to the e-mail address you specified when signing
    up. Without verifying your e-mail address, you will not be able to log in from
    Visual Studio.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果您刚刚注册GitHub，您需要单击发送到注册时指定的电子邮件地址的验证电子邮件。如果未验证您的电子邮件地址，您将无法从Visual Studio登录。
- en: 'After connecting, John sees his GitHub details loaded:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接后，约翰看到他的GitHub详细信息已加载：
- en: 'He now wants to work on the `GitHubDemo` application and finds it on GitHub
    by searching for it by name:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他现在想要在GitHub上工作`GitHubDemo`应用程序，并通过名称搜索在GitHub上找到它：
- en: '![](img/B06434_13_27.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_27.png)'
- en: 'He now copies the URL from the Clone with HTTPS textbox from the Clone or download
    button:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他现在从克隆或下载按钮的“使用HTTPS”文本框中复制URL：
- en: '![](img/B06434_13_28.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_28.png)'
- en: 'Back in Visual Studio, John expands the Local Git Repositories and clicks on
    Clone. He pastes the copied URL to the Git Repository path and specifies where
    the code should be cloned to on his hard drive. He then clicks on Clone:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到Visual Studio，约翰展开本地Git存储库并单击克隆。他将复制的URL粘贴到Git存储库路径，并指定代码应克隆到他的硬盘上的位置。然后单击克隆：
- en: '![](img/B06434_13_29.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_29.png)'
- en: When the code is cloned, it will be in the folder path John specified earlier.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当代码被克隆时，它将在约翰之前指定的文件夹路径中。
- en: 'Time to make some changes to the code. He opens the project in Visual Studio
    as normal. John decides to work on the `NewClass` class and adds a new function
    that returns a countdown integer:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是时候对代码进行一些更改了。他像往常一样在Visual Studio中打开项目。约翰决定在`NewClass`类上工作，并添加一个返回倒计时整数的新函数：
- en: '![](img/B06434_13_30-1.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_30-1.png)'
- en: After the code change is complete, John prepares to commit the code he just
    added to the `GitHubDemo` project.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码更改完成后，约翰准备提交他刚刚添加到`GitHubDemo`项目的代码。
- en: After adding a commit message, he then clicks on Commit All and Sync.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加提交消息后，然后单击“提交所有”和“同步”。
- en: One important thing to note is that you have three commit options available
    to you if you click on the down arrow next to the Commit All button. This button
    will just record the changes you make on your local machine. In other words, the
    change will not be reflected in the remote repository. The Commit All and Push
    button will record the changes on your local machine and push those changes to
    your remote GitHub repository. The Commit All and Sync button will record the
    changes on your local machine, then it will pull any changes from the remote repository,
    and finally it will do the push.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的事情要注意的是，如果您单击“提交所有”按钮旁边的向下箭头，您将有三个提交选项可供选择。此按钮将仅记录您在本地计算机上进行的更改。换句话说，更改不会反映在远程存储库中。
    “提交所有并推送”按钮将记录本地计算机上的更改，并将这些更改推送到远程GitHub存储库。 “提交所有并同步”按钮将记录本地计算机上的更改，然后将从远程存储库中拉取任何更改，最后将进行推送。
- en: 'John''s changes are committed to the GitHub repository:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 约翰的更改已提交到GitHub存储库：
- en: '![](img/B06434_13_31.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_31.png)'
- en: 'On the other side of the office, I am working on the same bit of code. The
    only problem is that I have added the same method with my own implementation of
    the `CountDown` logic:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在办公室的另一边，我正在处理相同的一小部分代码。唯一的问题是我已经添加了相同的方法，并使用了自己的`CountDown`逻辑实现：
- en: '![](img/B06434_13_32.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_32.png)'
- en: 'I get ready and commit my changes to GitHub:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我准备好并提交我的更改到GitHub：
- en: '![](img/B06434_13_33.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_33.png)'
- en: GitHub immediately prevents me from doing this. This is because if my code is
    pushed, the earlier commit by John will be lost. GitHub has a great help file
    on the subject in GitHub Help at [https://help.github.com/articles/dealing-with-non-fast-forward-errors/](https://help.github.com/articles/dealing-with-non-fast-forward-errors/).
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GitHub立即阻止我这样做。这是因为如果我的代码被推送，John之前的提交将会丢失。GitHub在GitHub帮助中有关于这个主题的很好的帮助文件[https://help.github.com/articles/dealing-with-non-fast-forward-errors/](https://help.github.com/articles/dealing-with-non-fast-forward-errors/)。
- en: '![](img/B06434_13_34.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_34.png)'
- en: 'The Output window contains a more descriptive error message:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 输出窗口包含更详细的错误消息：
- en: '<q>Error encountered while pushing to the remote repository: rejected Updates
    were rejected because the remote contains work that you do not have locally. This
    is usually caused by another repository pushing to the same ref. You may want
    to first integrate the remote changes before pushing again.</q>'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: <q>推送到远程存储库时遇到错误：被拒绝的更新，因为远程包含您本地没有的工作。这通常是由另一个存储库推送到相同的引用引起的。您可能需要在再次推送之前先集成远程更改。</q>
- en: 'To resolve this, click on Pull to get the latest commit that John did. Your
    code will then be in a conflicted state. This sounds bad, but it isn''t. It is
    putting you in control of the decision on which code will be used. You can see
    that the pull shows that there are conflicted files and also the incoming commit
    message that John added:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要解决此问题，请单击“拉取”以获取约翰最新的提交。然后您的代码将处于冲突状态。听起来很糟糕，但实际上并不是。这让您控制决定使用哪些代码。您可以看到拉取显示有冲突的文件，还有约翰添加的传入提交消息：
- en: '![](img/B06434_13_35.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_35.png)'
- en: 'To view the conflicts, click on the Resolve the conflicts link in the message
    pop-up:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看冲突，请点击消息弹出窗口中的解决冲突链接：
- en: '![](img/B06434_13_36.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_36.png)'
- en: 'You will then see the Resolve Conflicts screen listing the conflicted files.
    Clicking on a file will expand it into a short summary and action options screen.
    It is always prudent to click on the Compare Files link to see the difference
    between the files in conflict:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后您将看到解决冲突屏幕，列出了冲突的文件。单击文件将其展开为简短摘要和操作选项屏幕。始终明智地单击“比较文件”链接以查看冲突文件之间的差异：
- en: '![](img/B06434_13_37.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_37.png)'
- en: 'The differences in code are immediately evident. The process you follow from
    here on is subject to how you work together as a team. Usually, the conflict can
    be quite complex and it is always a good idea to speak to the developer concerned
    about the way forward:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码上的差异立即显而易见。从这里开始，你们团队的工作流程取决于你们如何合作。通常，冲突可能会非常复杂，因此与相关开发人员讨论未来的方向总是一个好主意：
- en: '![](img/B06434_13_38.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_38.png)'
- en: 'In this case, John and I decided that his code was better and more concise.
    So the decision was made to simply click on Take Remote and use John''s code.
    When you have clicked on the link, you need to click on Commit Merge:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这种情况下，约翰和我决定他的代码更好、更简洁。因此，决定只需点击“接受远程”并使用约翰的代码。当你点击链接后，需要点击“提交合并”：
- en: '![](img/B06434_13_39.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_39.png)'
- en: 'After adding a commit message, you can then push your code to the repo. In
    this case, I simply replaced all my code with John''s, but there might be situations
    when you will be using some of your code and some of another developer''s code.
    GitHub allows us to easily handle these conflicts:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加提交消息后，你可以将代码推送到仓库。在这种情况下，我只是用约翰的代码替换了我的所有代码，但可能会出现一些情况，你需要使用一些你的代码和另一位开发者的代码。GitHub允许我们轻松处理这些冲突。
- en: '![](img/B06434_13_40.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_40.png)'
- en: 'After pushing the code to the remote, GitHub notifies you that the code has
    successfully been synchronized:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代码推送到远程后，GitHub会通知你代码已成功同步：
- en: '![](img/B06434_13_41.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06434_13_41.png)'
- en: How it works...
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: GitHub takes the pain out of committing, resolving conflicts, and merging code.
    It is, without a doubt, an essential tool in any developer's toolkit and essential
    for development teams. Even if you are not using it professionally, it's a great
    idea to create a repo for yourself. Start using it to check on the pet projects
    you work on after hours. Expanding your knowledge beyond what you work with on
    a day-to-day basis will make you a better developer.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub简化了提交、解决冲突和合并代码的痛苦。毫无疑问，它是任何开发者工具包中的必备工具，也是开发团队的必备工具。即使你不是专业使用它，为自己创建一个仓库也是一个好主意。开始使用它来检查你在下班后工作的宠物项目。将你的知识扩展到日常工作之外，这将使你成为一个更好的开发者。
