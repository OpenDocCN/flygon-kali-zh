["```cs\n        using System.Net;\n\n        public static async Task<HttpResponseMessage> Run\n                              (HttpRequestMessage req, TraceWriter log)\n        {\n          log.Info(\"C# HTTP trigger function processed a request.\");\n\n          // Get request body\n          dynamic data = await req.Content.ReadAsAsync<object>();\n\n          // Extract github comment from request body\n          string gitHubComment = data?.comment?.body;\n\n          return req.CreateResponse(HttpStatusCode.OK, \"From Github:\" +\n                                    gitHubComment);\n        }\n\n```", "```cs\n        {\n          \"bindings\": [\n            {\n              \"type\": \"httpTrigger\",\n              \"direction\": \"in\",\n              \"webHookType\": \"github\",\n              \"name\": \"req\"\n            },\n            {\n              \"type\": \"http\",\n              \"direction\": \"out\",\n              \"name\": \"res\"\n            }\n          ],\n          \"disabled\": false\n        }\n\n```", "```cs\nInstall-Package DocRaptor\n\n```", "```cs\n    <%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"InvoicePrint.aspx.cs\" Inherits=\"Serverless.InvoicePrint\" %>\n\n    <!DOCTYPE html>\n\n    <html >\n      <head runat=\"server\">\n         <title>Invoice</title>\n         <meta http-equiv=\"content-type\" content=\"text/html;\n          charset=utf-8\"/>\n        <link href=\"css/invoice.css\" rel=\"stylesheet\" />\n        <script type=\"text/javascript\">\n          function ToggleErrorDisplay()\n          {\n            if ($(\"#errorDetails\").is(\":visible\")) {\n              $(\"#errorDetails\").hide();\n            } else {\n              $(\"#errorDetails\").show();\n            }\n          }\n\n          function TogglePrintResult() {\n            if ($(\"#printDetails\").is(\":visible\")) {\n              $(\"#printDetails\").hide();\n            } else {\n              $(\"#printDetails\").show();\n            }\n          }\n        </script>\n      </head>\n      <body>\n        <form runat=\"server\">\n          <div id=\"container\"> \n            <div id=\"main\">\n              <div id=\"header\">\n                <div id=\"header_info black\">The Software Company\n                  <span class=\"black\">|</span> (072)-412-5920 \n                  <span class=\"black\">|</span> software.com</div>\n              </div>\n              <h1 class=\"black\" id=\"quote_name\">Invoice INV00015</h1>\n              <div id=\"client\" style=\"float: right\">\n                <div id=\"client_header\">client:</div>\n                <p class=\"address black\">\n                  Mr. Wyle E. Coyote\n                </p>\n              </div>\n              <table id=\"phase_details\">\n                <thead>\n                  <tr>\n                    <th class=\"title\">Stock Code</th>\n                    <th class=\"description\">Item Description</th>\n                    <th class=\"price\">price</th>\n                  </tr>\n                </thead>\n                <tr class=\"first black\">\n                  <td>BCR902I45</td>\n                  <td>Acme Company Roadrunner Catch'em Kit</td>\n                  <td class=\"price\">\n                    <div class=\"price_container\">$300</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Booster Skates</td>\n                  <td class=\"price\">\n                    <div class=\"price_container\">$200</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Emergency Parachute</td>\n                  <td class=\"price\">\n                     <div class=\"price_container\">$100</div>\n                  </td>\n                </tr>\n                <tr class=\"last\">\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                <tr class=\"first black\">\n                  <td>BFT547J78</td>\n                  <td>Very Sneaky Trick Seed Kit</td>\n                  <td class=\"price\">\n                    <div class=\"price_container\">$800</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Giant Magnet and Lead Roadrunner Seeds</td>\n                  <td class=\"price\">\n                    <div class=\"price_container\">$500</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Rollerblades</td>\n                  <td class=\"price\">\n                    <div class=\"price_container\">$300</div>\n                  </td>\n                </tr>\n                <tr class=\"last\">\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </table>\n            </div>\n            <div id=\"total_price\">\n              <h2>TOTAL: <span class=\"price black\">$1100</span></h2>\n            </div>\n            <div id=\"print_link\">\n              <asp:LinkButton ID=\"lnkPrintInvoice\" runat=\"server\"\n                Text=\"Print this invoice\" OnClick=\"lnkPrintInvoice_Click\">\n              </asp:LinkButton> \n            </div>\n            <div id=\"errorDetails\">\n              <asp:Label ID=\"lblErrorDetails\" runat=\"server\">\n              </asp:Label>\n            </div>\n            <div id=\"printDetails\">\n              <asp:Label ID=\"lblPrintDetails\" runat=\"server\">\n              </asp:Label>\n            </div>\n          </div>\n        </form>\n\n      </body>\n    </html>\n\n```", "```cs\n        Configuration.Default.Username = \"YOUR_API_KEY_HERE\";\n        DocApi docraptor = new DocApi();\n\n         Doc doc = new Doc(\n           Test: true,\n           Name: \"docraptor-csharp.pdf\",\n           DocumentType: Doc.DocumentTypeEnum.Pdf,\n           DocumentContent: GetInvoiceContent()\n        );\n\n        byte[] create_response = docraptor.CreateDoc(doc);\n        File.WriteAllBytes(@\"C:tempinvoiceDownloadsinvoice.pdf\",\n                           create_response);\n\n```", "```cs\n        using System;\n        using System.Web.UI;\n        using DocRaptor.Client;\n        using DocRaptor.Model;\n        using DocRaptor.Api;\n        using System.IO;\n        using System.Net;\n        using System.Text;\n\n```", "```cs\n        private string GetInvoiceContent()\n        {\n          WebRequest req = WebRequest.Create\n                              (\"http://localhost:37464/invoice.html\");\n          WebResponse resp = req.GetResponse();\n          Stream st = resp.GetResponseStream();\n          StreamReader sr = new StreamReader(st, Encoding.ASCII);\n          return sr.ReadToEnd();\n        }\n\n```", "```cs\n        internal static class StampysLovelyWorld\n        { \n          public static void SaveStampy(string fileToSave,\n                                        string bucket,\n                                        string bucketDirectory,\n                                        string bucketFilename)\n          {\n            IAmazonS3 client = AWSClientFactory.CreateAmazonS3Client\n                                        (RegionEndpoint.EUCentral1);\n\n            TransferUtility utility = new TransferUtility(client); \n            TransferUtilityUploadRequest request = new \n                                    TransferUtilityUploadRequest();\n\n            request.BucketName = bucket + \"/\" + bucketDirectory;\n            request.Key = bucketFilename; \n            request.FilePath = fileToSave; \n            utility.Upload(request); \n          }\n        }\n\n```", "```cs\n        static void Main(string[] args)\n        {\n          string uploadFile = \"C:UsersdirkPicturesSaved \n                               PicturesStampyCat.png\";\n          string S3Bucket = \"familyvaultdocs\"; \n          string S3Folder = \"MinecraftPictures\";\n          string uploadedFilename = $\"{DateTime.Now.ToString(\"yyyymmdd\")}\n                                      - StampyCat.png\";\n          StampysLovelyWorld.SaveStampy(uploadFile, S3Bucket, S3Folder,\n                                        uploadedFilename);\n          WriteLine(\"uploaded\");\n          ReadLine();\n        }\n\n```", "```cs\n        <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n        <configuration>\n          <appSettings>\n            <add key=\"AWSProfileName\" value=\"profile1\"/>\n            <add key=\"AWSAccessKey\" value=\"AKIAJ6Q2Q77IHJX7STWA\"/>\n            <add key=\"AWSSecretKey\" value=\"uFBN6xtuWCSf9zR9WzQKrh1vk\n                                           zU2PEuosTTy5qhc\"/>\n          </appSettings>\n          <startup>\n            <supportedRuntime version=\"v4.0\" sku=\".NETFramework,\n                Version=v4.6.2\" />\n          </startup>\n        </configuration>\n\n```", "```cs\n        public async Task<string> FunctionHandler(S3Event evnt,\n                                                ILambdaContext context)\n        {\n          var s3Event = evnt.Records?[0].S3;\n          if(s3Event == null)\n          {\n            return null;\n          }\n\n          try\n          {\n            var response = await this.S3Client.GetObjectMetadataAsync\n                           (s3Event.Bucket.Name, s3Event.Object.Key);\n            return response.Headers.ContentType;\n          }\n          catch(Exception e)\n          {\n            context.Logger.LogLine($\"Error getting object\n              {s3Event.Object.Key} from bucket {s3Event.Bucket.Name}.\n              Make sure they exist and your bucket is in the same\n              region as this function.\");\n            context.Logger.LogLine(e.Message);\n            context.Logger.LogLine(e.StackTrace);\n            throw;\n          }\n        }\n\n```", "```cs\nError creating Lambda function: User: arn:aws:iam::932141661806:user/S3Lambda is not authorized to perform: lambda:CreateFunction on resource: arn:aws:lambda:eu-central-1:932141661806:function:S3LambdaFunction\n\n```"]