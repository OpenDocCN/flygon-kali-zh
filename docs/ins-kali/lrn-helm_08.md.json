["```\n$ git clone https://github.com/PacktPublishing/-Learn-Helm Learn-Helm\n```", "```\n    minikube start\n    ```", "```\n    kubectl create namespace chapter6\n    ```", "```\n$ helm template [NAME] [CHART] [flags]\n```", "```\n$ helm template my-guestbook Learn-Helm/helm-charts/charts/guestbook\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: {{ .Values.replicas }}\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: {{ .Values.port }}\n```", "```\nreplicas: 1\nport: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: 1\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --set replicas=2\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: 2\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: {{ .Values.replicas }}\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: main\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: {{ .Values.imageRegistry }}/{{ .Values.imageName }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: {{ .Values.port }}\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: 1\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: main\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: /\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: {{ .Values.replicas }}\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: main\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: {{ required 'value 'imageRegistry' is required' .Values.imageRegistry }}/{{ required 'value 'imageName' is required' .Values.imageName }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: {{ .Values.port }}\n```", "```\n$ helm template my-chart $CHART_DIRECTORY\nError: execution error at (test-chart/templates/deployment.yaml:17:20): value 'imageRegistry' is required\n```", "```\nimageRegistry: my-registry.example.com\nimageName: learnhelm/my-image\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --values my-values.yaml\n---\n# Source: test-chart/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0replicas: 1\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: main\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: my-registry.example.com/learnhelm/my-image\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n```", "```\nreplicas: 1\nport: 8080\n## REQUIRED\nimageRegistry:\n## REQUIRED\nimageName:\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n{{- range .Values.env }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: {{ .name }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: {{ .value }}\n{{- end }}\n{{- if .Values.enableLiveness }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0livenessProbe:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0httpGet:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: /\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: {{ .Values.port }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initialDelaySeconds: 5\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0periodSeconds: 10\n{{- end }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 8080\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --values my-values.yaml\n---\n# Source: test-chart/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n```", "```\nenv:\n\u00a0\u00a0- name: BOOK\n\u00a0\u00a0\u00a0\u00a0value: Learn Helm\nenableLiveness: true\n```", "```\n---\n# Source: test-chart/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: BOOK\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: Learn Helm\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0livenessProbe:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0httpGet:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: /\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 8080\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initialDelaySeconds: 5\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0periodSeconds: 10\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n{{ .Values.resources | toYaml | indent 12 }}\n```", "```\nresources:\n\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0cpu: 200m\n\u00a0\u00a0\u00a0\u00a0memory: 256Mi\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 200m\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 256Mi\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --validate\n```", "```\nError: unable to build kubernetes objects from release manifest: unable to recognize '': no matches for kind 'Deployment' in version 'v1'\n```", "```\n$ helm install my-chart $CHART --dry-run\n```", "```\n$ helm lint PATH [flags]\n```", "```\n$ helm lint $GUESTBOOK_CHART_PATH\n==> Linting guestbook/\n[INFO] Chart.yaml: icon is recommended\n1 chart(s) linted, 0 chart(s) failed\n```", "```\nguestbook/\n\u00a0\u00a0templates/\n\u00a0\u00a0values.yaml\n```", "```\n==> Linting .\nError unable to check Chart.yaml file in chart: stat Chart.yaml: no such file or directory\nError: 1 chart(s) linted, 1 chart(s) failed\n```", "```\nguestbook/\n\u00a0\u00a0Chart.yaml\u00a0\u00a0# Empty\n\u00a0\u00a0templates/\n\u00a0\u00a0values.yaml\n```", "```\n==> Linting .\n[ERROR] Chart.yaml: name is required\n[ERROR] Chart.yaml: apiVersion is required. The value must be either 'v1' or 'v2'\n[ERROR] Chart.yaml: version is required\n[INFO] Chart.yaml: icon is recommended\n[ERROR] templates/: validation: chart.metadata.name is required\nError: 1 chart(s) linted, 1 chart(s) failed\n```", "```\npip install yamllint --user\n```", "```\n$ helm template my-guestbook Learn-Helm/helm-charts/charts/guestbook | yamllint -\n```", "```\n$ cat -n <(helm template my-guestbook Learn-Helm/helm-charts/charts/guestbook)\n```", "```\nrules:\n\u00a0\u00a0indentation:\n\u00a0\u00a0\u00a0\u00a0# Allow\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myList\n\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- item1\n\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- item2\n\u00a0\u00a0\u00a0\u00a0# Or\n\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myList\n\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- item1\n\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- item2\n\u00a0\u00a0\u00a0\u00a0indent-sequences: whatever\n```", "```\n$ helm template my-guestbook guestbook | yamllint -\n```", "```\n$ mkdir $GUESTBOOK_CHART_DIR/templates/test\n$ touch $GUESTBOOK_CHART_DIR/templates/test/frontend-connection.yaml\n$ touch $GUESTBOOK_CHART_DIR/templates/test/backend-connection.yaml\n```", "```\n$ helm install my-guestbook $GUESTBOOK_CHART_DIR -n chapter6 --wait\n```", "```\nhelm test [RELEASE] [flags]\n```", "```\n$ helm test my-guestbook -n chapter6\n```", "```\nTEST SUITE:\u00a0\u00a0\u00a0\u00a0 my-guestbook-test-frontend-connection\nLast Started:\u00a0\u00a0 Tue Jan 28 18:50:23 2020\nLast Completed: Tue Jan 28 18:50:25 2020\nPhase:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Succeeded\nTEST SUITE:\u00a0\u00a0\u00a0\u00a0 my-guestbook-test-backend-connection\nLast Started:\u00a0\u00a0 Tue Jan 28 18:50:25 2020\nLast Completed: Tue Jan 28 18:50:26 2020\nPhase:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Succeeded\n```", "```\n$ helm test my-guestbook -n chapter6 --logs\n```", "```\nPOD LOGS: my-guestbook-test-frontend-connection\n\u00a0\u00a0% Total\u00a0\u00a0\u00a0\u00a0% Received % Xferd\u00a0\u00a0Average Speed\u00a0\u00a0 Time\u00a0\u00a0\u00a0\u00a0Time\u00a0\u00a0\u00a0\u00a0 Time\u00a0\u00a0Current\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Dload\u00a0\u00a0Upload\u00a0\u00a0 Total\u00a0\u00a0 Spent\u00a0\u00a0\u00a0\u00a0Left\u00a0\u00a0Speed\n<html ng-app='redis'>\n\u00a0\u00a0<head>\n\u00a0\u00a0\u00a0\u00a0<title>Guestbook</title>\n```", "```\nPOD LOGS: my-guestbook-test-backend-connection\n```", "```\nexport IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')\nexport PORT=$(kubectl get svc my-guestbook -n chapter6 -o jsonpath='{.spec.ports[0].nodePort}')\necho http://$IP:$PORT\n```", "```\n$ helm test my-guestbook -n chapter6 --logs\n```", "```\nPOD LOGS: my-guestbook-test-backend-connection\n,Writing Helm charts is fun!\n```", "```\nhelm-charts/\n\u00a0\u00a0guestbook/\n\u00a0\u00a0\u00a0\u00a0Chart.yaml\n\u00a0\u00a0\u00a0\u00a0templates/\n\u00a0\u00a0\u00a0\u00a0README.md\n\u00a0\u00a0\u00a0\u00a0values.yaml\n\u00a0\u00a0redis/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Contains the same file structure as 'guestbook'\n\u00a0\u00a0wordpress/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Contains the same file structure as 'guestbook'\n\u00a0\u00a0README.md\n```", "```\nguestbook/\n\u00a0\u00a0Chart.yaml\n\u00a0\u00a0ci/\n\u00a0\u00a0\u00a0\u00a0nodeport-service-values.yaml\n\u00a0\u00a0\u00a0\u00a0ingress-values.yaml\n\u00a0\u00a0templates/\n\u00a0\u00a0values.yaml\n```", "```\n$ pip install yamale --user\n```", "```\n$ python setup.py install\n```", "```\nLICENSE\nREADME.md\netc/chart_schema.yaml\netc/lintconf.yaml\nct\n```", "```\n$ mkdir $HOME/.ct\n$ mv $HOME/Downloads/etc/* $HOME/.ct/\n$ mv $HOME/Downloads/ct /usr/local/bin/\n```", "```\n$ git clone https://github.com/PacktPublishing/-Learn-Helm Learn-Helm\n```", "```\nchart-dirs:\n\u00a0\u00a0- helm-charts/charts\nchart-repos:\n\u00a0\u00a0- bitnami=https://charts.bitnami.com\n```", "```\n$ cd $LEARN_HELM_LOCATION\n$ ls\nct.yaml\u00a0\u00a0guestbook-operator\u00a0\u00a0helm-charts\u00a0\u00a0jenkins\u00a0\u00a0LICENSE\u00a0\u00a0nginx-cd\u00a0\u00a0README.md\n```", "```\n$ ct lint-and-install\n```", "```\n$ git checkout -b chart-testing-example\n```", "```\ndescription: Used to deploy the Guestbook application\n```", "```\ndescription: Deploys an NGINX instance to Kubernetes\n```", "```\n$ ct lint-and-install\n```", "```\nversion: 1.1.0\n```", "```\n$ ct lint-and-install\n```", "```\nLinting chart with values file 'nginx/ci/clusterip-values.yaml'...\nLinting chart with values file 'nginx/ci/nodeport-values.yaml'...\nInstalling chart with values file 'nginx/ci/clusterip-values.yaml'...\nInstalling chart with values file 'nginx/ci/nodeport-values.yaml'...\n```", "```\n$ ct lint-and-install --upgrade\n```", "```\nTesting upgrades of chart 'guestbook => (version: '1.0.1', path: 'guestbook')' relative to previous revision 'guestbook => (version: '1.0.0', path: 'ct_previous_revision216728160/guestbook')'...\n```", "```\nSkipping upgrade test of 'guestbook => (version: '2.0.0', path: 'helm-charts/charts/guestbook')' because: 1 error occurred:\n\t* 2.0.0 does not have same major version as 1.0.0\n```", "```\n$ kubectl delete ns chapter6\n```"]