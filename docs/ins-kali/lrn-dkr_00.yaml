- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Developers are faced with ever-increasing pressure to build, modify, test, and
    deploy highly distributed applications in a high cadence. Operations engineers
    are looking for a uniform deployment strategy that encompasses most or all of
    their ever-growing portfolio of applications, and stakeholders want to keep their
    total cost of ownership low. Docker containers combined with a container orchestrator
    such as Kubernetes help them all to achieve these goals.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员面临着越来越大的压力，需要以高速部署高度分布式应用程序。运维工程师正在寻找一个统一的部署策略，涵盖他们不断增长的应用程序组合的大部分或全部内容，利益相关者希望保持总体拥有成本低。Docker容器与Kubernetes等容器编排器结合使用，帮助他们实现这些目标。
- en: Docker containers accelerate and simplify the building, shipping, and running
    of highly distributed applications. Containers turbo-charge CI/CD pipelines, and
    containerized applications allow a company to standardize on one common deployment
    platform, such as Kubernetes. Containerized applications are more secure and can
    be run on any platform that's able to run containers, on premises or in the cloud.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Docker容器加速并简化了高度分布式应用程序的构建、交付和运行。容器加速了CI/CD流水线，容器化的应用程序允许公司在一个共同的部署平台上实现标准化，如Kubernetes。容器化的应用程序更安全，并且可以在任何能够运行容器的平台上运行，无论是在本地还是在云端。
- en: Who this book is for
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is targeted at system administrators, operations engineers, DevOps
    engineers, and developers or stakeholders who are interested in getting started
    with Docker from scratch.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向系统管理员、运维工程师、DevOps工程师以及有兴趣从零开始学习Docker的开发人员或利益相关者。
- en: What this book covers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖了什么内容
- en: '[Chapter 1](d0240d21-a3b8-40d0-876e-e8d8185f364b.xhtml), *What Are Containers
    and Why Should I Use Them?*, introduces the concept of containers and why they
    are so extremely useful in the software industry.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章《什么是容器，为什么我应该使用它们？》介绍了容器的概念以及它们在软件行业中为何如此有用。
- en: '[Chapter 2](99a92fe1-4652-4934-9c33-f3e19483afcd.xhtml), *Setting Up a Working
    Environment*, discusses in detail how to set up an ideal environment for developers,
    DevOps, and operators that can be used when working with Docker containers.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章《建立工作环境》详细讨论了如何为开发人员、DevOps和运维人员建立一个理想的工作环境，用于处理Docker容器。
- en: '[Chapter 3](d9bb597d-2b32-4144-b068-564d85bcdf68.xhtml), *Mastering Containers*,
    explains how to start, stop, and remove containers. We will also see how to inspect
    containers to retrieve additional metadata from them. Furthermore, we''ll see
    how to run additional processes, how to attach to the main process in an already
    running container, and how to retrieve logging information from a container that
    is produced by the processes running inside it. Finally, the chapter introduces
    the inner workings of a container, including such things as Linux namespaces and
    groups.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章《掌握容器》解释了如何启动、停止和移除容器。我们还将看到如何检查容器以从中检索额外的元数据。此外，我们将看到如何运行额外的进程，如何附加到已经运行的容器中的主进程，以及如何从容器中检索由其中运行的进程产生的日志信息。最后，本章介绍了容器的内部工作原理，包括Linux命名空间和组等内容。
- en: '[Chapter 4](527543ae-a569-47dc-975d-65c96d0f6ff0.xhtml), *Creating and Managing
    Container Images*, presents the different ways to create the container images
    that serve as the templates for containers. It introduces the inner structure
    of an image and how it is built. This chapter also explains how to lift and shift
    an existing legacy application so that it can run in containers.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，《创建和管理容器镜像》，介绍了创建作为容器模板的容器镜像的不同方法。它介绍了镜像的内部结构以及它是如何构建的。本章还解释了如何将现有的遗留应用程序迁移，以便它可以在容器中运行。
- en: '[Chapter 5](f3a48b12-d541-467b-aeb3-df014e60da6b.xhtml), *Data Volumes and
    Configuration*, introduces data volumes, which can be used by stateful components
    running in containers. The chapter also shows how we can define individual environment
    variables for the application running inside the container, as well as how to
    use files containing whole sets of configuration settings.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，《数据卷和配置》，介绍了可以被运行在容器中的有状态组件使用的数据卷。本章还展示了我们如何为容器内运行的应用程序定义单独的环境变量，以及如何使用包含整套配置设置的文件。
- en: '[Chapter 6](b6647803-2c5c-4b9d-9a4a-a836ac356329.xhtml), *Debugging Code Running
    in Containers*, discusses techniques commonly used to allow a developer to evolve,
    modify, debug, and test their code while running in a container. With these techniques
    at hand, the developer will enjoy a frictionless development process for applications
    running in a container, similar to what they experience when developing applications
    that run natively.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，《在容器中运行代码调试》，讨论了常用的技术，允许开发人员在容器中运行代码时进行演变、修改、调试和测试。有了这些技术，开发人员将享受到类似于在本地开发运行应用程序时的无摩擦的开发过程。
- en: '[Chapter 7](b8ba79e9-1e6c-4b91-965d-d6b62b94437b.xhtml), *Using Docker to Supercharge
    Automation*, shows how we can use tools to perform administrative tasks without
    having to install those tools on the host computer. We will also see how to use
    containers that host and run test scripts or code used to test and validate application
    services running in containers. Finally, this chapter guides us through the task
    of building a simple Docker-based CI/CD pipeline.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，《使用Docker来加速自动化》，展示了我们如何使用工具执行管理任务，而无需在主机计算机上安装这些工具。我们还将看到如何使用承载和运行测试脚本或用于测试和验证在容器中运行的应用程序服务的代码的容器。最后，本章指导我们完成构建基于Docker的简单CI/CD流水线的任务。
- en: '[Chapter 8](03d78ab6-ef5d-4ed3-8fcd-94753c0b2262.xhtml), *Advanced Docker Usage
    Scenarios*, presents advanced tips, tricks, and concepts that are useful when
    containerizing complex distributed applications, or when using Docker to automate
    sophisticated tasks.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，《高级Docker使用场景》，介绍了在将复杂的分布式应用程序容器化或使用Docker自动化复杂任务时有用的高级技巧、技巧和概念。
- en: '[Chapter 9](bbbf480e-3d5a-4ad7-94e9-fae735b025ae.xhtml), *Distributed Application
    Architecture*, introduces the concept of a distributed application architecture
    and discusses the various patterns and best practices that are required to run
    a distributed application successfully. Finally, it discusses the additional requirements
    that need to be fulfilled to run such an application in production.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，《分布式应用程序架构》，介绍了分布式应用程序架构的概念，并讨论了成功运行分布式应用程序所需的各种模式和最佳实践。最后，它讨论了在生产环境中运行此类应用程序需要满足的额外要求。
- en: '[Chapter 10](f3b1e24a-2ac4-473a-b9c8-270b97df6a8a.xhtml), *Single-Host Networking*, presents
    the Docker container networking model and its single-host implementation in the
    form of the bridge network. This chapter introduces the concept of software-defined
    networks and explains how they are used to secure containerized applications.
    It also discusses how container ports can be opened to the public and thus make
    containerized components accessible from the outside world. Finally, it introduces
    Traefik, a reverse proxy, to enable sophisticated HTTP application-level routing
    between containers.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“单主机网络”，介绍了Docker容器网络模型及其在桥接网络形式下的单主机实现。本章介绍了软件定义网络的概念，并解释了它们如何用于保护容器化应用程序。还讨论了如何将容器端口对外开放，从而使容器化组件可以从外部访问。最后，介绍了Traefik，一个反向代理，可以实现容器之间复杂的HTTP应用级路由。
- en: '[Chapter 11](412c6f55-a00b-447f-b22a-47b305453507.xhtml), *Docker Compose*, addresses
    the concept of an application consisting of multiple services, each running in
    a container, and how Docker Compose allows us to easily build, run, and scale
    such an application using a declarative approach.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“Docker Compose”，讨论了由多个服务组成的应用程序的概念，每个服务在一个容器中运行，以及Docker Compose如何允许我们使用声明性方法轻松构建、运行和扩展这样的应用程序。
- en: '[Chapter 12](27c0d9ce-fab6-4ce9-9034-4f2fb62931e8.xhtml), *Orchestrators*, presents
    the concept of orchestrators. It explains why orchestrators are needed and how
    they work conceptually. The chapter will also provide an overview of the most
    popular orchestrators and name a few of their pros and cons.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，“编排器”，介绍了编排器的概念。它解释了为什么需要编排器以及它们的工作原理。本章还概述了最流行的编排器，并列举了它们的一些优缺点。
- en: '[Chapter 13](a6f04592-db31-452a-aad1-ca56d9999767.xhtml), *Introduction to
    Docker Swarm*, introduces Docker''s native orchestrator, SwarmKit. We will see
    all the concepts and objects SwarmKit uses to deploy and run a distributed, resilient,
    robust, and highly available application in a cluster on premises or in the cloud.
    The chapter also introduces how SwarmKit ensures secure applications using software-defined
    networks to isolate containers and secrets to protect sensitive information. Additionally,
    this chapter shows how to install a highly available Docker swarm in the cloud.
    It introduces the routing mesh, which provides Layer 4 routing and load balancing.
    Finally, it shows how to deploy an application consisting of multiple services
    onto the swarm.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，“Docker Swarm简介”，介绍了Docker的本地编排器SwarmKit。我们将了解SwarmKit用于在本地或云中部署和运行分布式、具有弹性、健壮和高可用性应用程序所使用的所有概念和对象。本章还介绍了SwarmKit如何通过软件定义网络来确保安全应用程序，以隔离容器，并使用秘密来保护敏感信息。此外，本章还展示了如何在云中安装高可用的Docker
    Swarm。它介绍了路由网格，提供第4层路由和负载平衡。最后，展示了如何将由多个服务组成的应用程序部署到Swarm上。
- en: '[Chapter 14](38cc9953-ef48-431b-97d5-f49f3e0415b0.xhtml),  *Zero-Downtime Deployments
    and Secrets*, explains how to deploy services or applications onto a Docker swarm
    with zero downtime and automatic rollback capabilities. It also introduces secrets
    as a means to protect sensitive information.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第14章，“零停机部署和秘密”，解释了如何在Docker集群上部署服务或应用程序，实现零停机和自动回滚功能。还介绍了秘密作为保护敏感信息的手段。
- en: '[Chapter 15](b8e4dc09-b2ce-4f89-9682-d8f0c6e126f6.xhtml), *Introduction to
    Kubernetes*, introduces the current most popular container orchestrator. It introduces
    the core Kubernetes objects that are used to define and run a distributed, resilient,
    robust, and highly available application in a cluster. Finally, it introduces
    MiniKube as a way to locally deploy a Kubernetes application, and also the integration
    of Kubernetes with Docker for Mac and Docker for Windows.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第15章，“Kubernetes简介”，介绍了当前最流行的容器编排器。它介绍了用于在集群中定义和运行分布式、有弹性、健壮和高可用应用程序的核心Kubernetes对象。最后，它介绍了MiniKube作为在本地部署Kubernetes应用程序的一种方式，以及Kubernetes与Docker
    for Mac和Docker for Windows的集成。
- en: '[Chapter 16](cdf765aa-eed9-4d88-a452-4ba817bc81dd.xhtml), *Deploying, Updating,
    and Securing an Application with Kubernetes*, explains how to deploy, update,
    and scale applications into a Kubernetes cluster. It also explains how to instrument
    your application services with liveness and readiness probes to support Kubernetes
    in its health and availability checking. Furthermore, the chapter explains how
    zero-downtime deployments are achieved to enable disruption-free updates and rollbacks
    of mission-critical applications. Finally, the chapter introduces Kubernetes secrets
    as a means to configure services and protect sensitive data.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第16章，“使用Kubernetes部署、更新和保护应用程序”，解释了如何将应用程序部署、更新和扩展到Kubernetes集群中。它还解释了如何使用活跃性和就绪性探针来为Kubernetes支持健康和可用性检查。此外，该章还解释了如何实现零停机部署，以实现对关键任务应用程序的无干扰更新和回滚。最后，该章介绍了Kubernetes
    secrets作为配置服务和保护敏感数据的手段。
- en: '[Chapter 17](5a68bda6-e7bf-4d54-b1a9-2be9f5d5acfb.xhtml), *Monitoring and Troubleshooting
    an App Running in Production*, teaches different techniques to monitor an individual
    service or a whole distributed application running on a Kubernetes cluster. It
    also shows how to troubleshoot an application service that is running in production
    without altering the cluster or the cluster nodes on which the service is running.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第17章，“监控和故障排除正在生产中运行的应用程序”，教授了监视在Kubernetes集群上运行的单个服务或整个分布式应用程序的不同技术。它还展示了如何在不更改集群或运行服务的集群节点的情况下，对正在生产中运行的应用程序服务进行故障排除。
- en: '[Chapter 18](899f4b4e-21da-4b16-934c-8a8a3663e457.xhtml), *Running a Containerized
    App in the Cloud*, provides an overview of some of the most popular ways of running
    containerized applications in the cloud. We include self-hosting and hosted solutions
    and discuss their pros and cons. Fully managed offerings of vendors such as Microsoft
    Azure and Google Cloud Engine are briefly discussed.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第18章，“在云中运行容器化应用程序”，概述了在云中运行容器化应用程序的一些最流行的方式。我们包括自托管和托管解决方案，并讨论它们的优缺点。微软Azure和谷歌云引擎等供应商的完全托管服务也进行了简要讨论。
- en: To get the most out of this book
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: A solid understanding of distributed application architecture and an interest
    in accelerating and simplifying the building, shipping, and running of highly
    distributed applications are expected. No prior experience with Docker containers
    is required.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 期望对分布式应用程序架构有扎实的理解，并对加速和简化构建、交付和运行高度分布式应用程序感兴趣。不需要有Docker容器的先前经验。
- en: Access to a computer with Windows 10 Professional or macOS installed is highly
    recommended. The computer should have at least 16 GB of memory.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议使用安装了Windows 10专业版或macOS的计算机。计算机应至少具有16GB内存。
- en: '| **Software/Hardware covered in the book** | **OS Requirements** |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| **书中涵盖的软件/硬件** | **操作系统要求** |'
- en: '| Docker for Desktop, Docker Toolbox, Visual Studio Code, Powershell or Bash
    Terminal. | Windows 10 Pro/macOS/ Linux minimum of 8GB RAM |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| Docker for Desktop, Docker Toolbox, Visual Studio Code, Powershell 或 Bash
    终端。| Windows 10 Pro/macOS/Linux 至少 8GB RAM |'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to copy/pasting of code.**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用本书的数字版本，我们建议您自己输入代码或通过 GitHub 仓库访问代码（链接在下一节中提供）。这样做将有助于避免与复制/粘贴代码相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support) and
    register to have the files emailed directly to you.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[www.packtpub.com/support](https://www.packtpub.com/support)注册，文件将直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packt.com](http://www.packt.com).
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packt.com](http://www.packt.com)上登录或注册。
- en: Select the Support tab.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“支持”选项卡。
- en: Click on Code Downloads.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载”。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“搜索”框中输入书名，然后按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用以下最新版本解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip 适用于 Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX 适用于 Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip 适用于 Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Learn-Docker---Fundamentals-of-Docker-19.x-Second-Edition](https://github.com/PacktPublishing/Learn-Docker---Fundamentals-of-Docker-19.x-Second-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在 GitHub 上，网址为[https://github.com/PacktPublishing/Learn-Docker---Fundamentals-of-Docker-19.x-Second-Edition](https://github.com/PacktPublishing/Learn-Docker---Fundamentals-of-Docker-19.x-Second-Edition)。如果代码有更新，将在现有的
    GitHub 仓库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自我们丰富书籍和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。去看看吧！
- en: Download the color images
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/9781838827472_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/9781838827472_ColorImages.pdf).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个 PDF 文件，其中包含本书中使用的屏幕截图/图表的彩色图片。您可以在这里下载：[http://www.packtpub.com/sites/default/files/downloads/9781838827472_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/9781838827472_ColorImages.pdf)。
- en: Conventions used
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles. Here
    is an example: "The container runtime on a Docker host consists of `containerd`
    and `runc`."'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：指示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和 Twitter 句柄。这是一个例子："Docker
    主机上的容器运行时由 `containerd` 和 `runc` 组成。"'
- en: 'A block of code is set as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都是这样写的：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示一个新术语，一个重要的词，或者你在屏幕上看到的词。例如，菜单或对话框中的单词会在文本中以这种方式出现。这是一个例子：“从管理面板中选择系统信息。”'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会这样出现。提示和技巧会这样出现。
