- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1 – Communicating with Kubernetes
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 - 与Kubernetes通信
- en: Container orchestration is a software pattern where multiple containers are
    controlled and scheduled in order to serve an application.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 容器编排是一种软件模式，其中多个容器被控制和调度以便为应用程序提供服务。
- en: The Kubernetes API server (`kube-apiserver`) handles requests to update Kubernetes
    resources. The scheduler (`kube-scheduler`) decides where to place (schedule)
    containers. The controller manager (`kube-controller-manager`) ensures that the
    desired configuration of Kubernetes resources is reflected in the cluster. `etcd`
    provides a data store for the cluster configuration.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kubernetes API服务器（`kube-apiserver`）处理更新Kubernetes资源的请求。调度程序（`kube-scheduler`）决定在哪里放置（调度）容器。控制器管理器（`kube-controller-manager`）确保Kubernetes资源的期望配置反映在集群中。`etcd`为集群配置提供数据存储。
- en: The `kube-apiserver` must be started with the `--authorization-mode=ABAC` and
    `--authorization-policy-file=filename` parameters.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`kube-apiserver`必须使用`--authorization-mode=ABAC`和`--authorization-policy-file=filename`参数启动。'
- en: For high availability of the control plane, in case of a failure of one of the
    master nodes.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了保证控制平面的高可用性，以防其中一个主节点发生故障。
- en: In the event that a resource has already been created, `kubectl create` will
    fail because the resource already exists, while `kubectl apply` will attempt to
    apply any YAML changes to the resource.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果资源已经创建，`kubectl create`将失败，因为资源已经存在，而`kubectl apply`将尝试将任何YAML更改应用于资源。
- en: The `kubectl use-context` command can be used to switch between multiple contexts
    within a `kubeconfig` file. To change between `kubeconfig` files, the `KUBECONFIG`
    environment variable can be set to the path of the new file.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`kubectl use-context`命令可用于在`kubeconfig`文件中切换多个上下文。要在`kubeconfig`文件之间切换，可以将`KUBECONFIG`环境变量设置为新文件的路径。'
- en: Imperative commands do not provide a history of changes to a resource.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令式命令不提供对资源更改的历史记录。
- en: Chapter 2 – Setting Up Your Kubernetes Cluster
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章 - 设置您的Kubernetes集群
- en: Minikube makes it easy to set up a local Kubernetes cluster for development.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Minikube使得在本地轻松设置Kubernetes集群进行开发。
- en: In some cases, there may be a fixed minimum cost for the cluster that is larger
    than a self-provisioned cluster. Some managed options also have license costs
    in addition to the cost of compute.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在某些情况下，集群的固定最低成本可能大于自行配置的集群。一些托管选项还有许可成本，除了计算成本之外。
- en: Kubeadm is agnostic to infrastructure providers, while Kops supports only several
    major providers with deeper integration and compute provisioning.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kubeadm对基础设施提供商是不可知的，而Kops仅支持几个主要提供商，并具有更深入的集成和计算资源提供。
- en: As of the writing of this book, AWS, Google Cloud Platform, Digital Ocean, VMware,
    and OpenStack, in various levels of production readiness.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 截至本书撰写时，AWS，Google Cloud Platform，Digital Ocean，VMware和OpenStack在各种生产准备级别上。
- en: Typically, the cluster components are defined in the `systemd` service definitions,
    which allows the automatic restart of services if a node shuts down and restarts
    at the OS level.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，集群组件在`systemd`服务定义中定义，这允许在节点在操作系统级别关闭和重新启动时自动重新启动服务。
- en: Chapter 3 – Running Application Containers on Kubernetes
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 - 在Kubernetes上运行应用程序容器
- en: If you had development, staging, and production environments, you could make
    one namespace for each.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您有开发、分级和生产环境，您可以为每个环境创建一个命名空间。
- en: The Node that the Pod is running in could be in a *broken* state where the control
    plane cannot reach it. Typically, when a Node gracefully exits the cluster, the
    Pod will simply be rescheduled instead of showing an *Unknown* status.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Pod正在运行的节点可能处于*损坏*状态，控制平面无法到达它。通常，当节点正常退出集群时，Pod将被简单地重新调度，而不是显示*未知*状态。
- en: To prevent memory-hungry Pods from taking over the entire Node and causing indeterminate
    behavior in other Pods on the Node.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 防止占用内存的Pod占据整个节点并导致节点上其他Pod的不确定行为。
- en: You should add more delay to the *Startup* probe if you have one. If not, you
    will need to add one, or add a delay to the *Readiness* probe.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有*Startup*探测器，您应该增加更多的延迟。如果没有，您将需要添加一个，或者在*Readiness*探测器中添加延迟。
- en: Chapter 4 – Scaling and Deploying Your Application
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 - 扩展和部署您的应用程序
- en: ReplicationControllers have less flexibility in how the selector is configured
    – only key-value selectors are allowed.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ReplicationControllers在选择器配置方面的灵活性较小 - 只允许键值选择器。
- en: Deployments allow you to specify how updates are rolled out.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署允许您指定如何滚动更新。
- en: Jobs work well for batch tasks, or tasks that can be scaled horizontally with
    a clear completion target.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作业非常适合批处理任务，或者可以水平扩展并具有明确完成目标的任务。
- en: StatefulSets provide an ordinal Pod identity that stays the same when those
    Pods restart.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: StatefulSets提供了一个有序的Pod标识，当这些Pod重新启动时保持不变。
- en: In addition to an existing version, a new Deployment can be created with the
    canary version. Then, both versions can be accessed in parallel.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了现有版本外，还可以创建一个带有金丝雀版本的新部署。然后，两个版本可以并行访问。
- en: Chapter 5 – Services and Ingress – Communicating with the Outside World
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 - 服务和入口 - 与外部世界通信
- en: You would use a ClusterIP service.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该使用ClusterIP服务。
- en: You can use the `kubectl describe` command to see what port on the Nodes a NodePort
    service is active on.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用`kubectl describe`命令查看NodePort服务在节点上的哪个端口处于活动状态。
- en: In a cloud environment where you often have to pay per load balancer, Ingress
    allows you to specify multiple routing rules while only having to pay for one
    load balancer.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在云环境中，您经常需要按负载均衡器付费，入口允许您指定多个路由规则，同时只需支付一个负载均衡器的费用。
- en: ExternalName services can be used to easily route to other pieces of infrastructure
    in your cloud environment – such as managed databases and object storage.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ExternalName服务可用于轻松路由到云环境中的其他基础设施 - 例如托管数据库和对象存储。
- en: Chapter 6 – Kubernetes Application Configuration
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 - Kubernetes应用程序配置
- en: Secrets are stored encoded and optionally encrypted in `etcd`. ConfigMaps are
    stored in plain text.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 秘密以编码形式存储，并在`etcd`中可选加密。ConfigMaps以明文形式存储。
- en: They are Base64-encoded.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它们是Base64编码的。
- en: The data will be more visible when describing the ConfigMap. The key-value pattern
    is also easier to use when mounting the ConfigMap as an environment variable.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在描述ConfigMap时，数据将更加可见。当将ConfigMap挂载为环境变量时，键值模式也更容易使用。
- en: Depending on how you set up your cluster, your secrets may not be encrypted
    at all. If a cluster's EncryptionConfiguration is not set, secrets will only be
    Base64-encoded – and they can easily be decoded. By creating your cluster with
    an EncryptionConfiguration, your secrets will be stored encrypted in `etcd`. This
    is not a security panacea, but encryption at rest is certainly necessary to improve
    security for secrets.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您设置集群的方式，您的秘密可能根本没有加密。如果集群的EncryptionConfiguration未设置，秘密将只被Base64编码 - 并且可以很容易地被解码。通过使用EncryptionConfiguration创建您的集群，您的秘密将以加密形式存储在`etcd`中。这并不是一个安全的灵丹妙药，但是静态加密对于提高秘密的安全性当然是必要的。
- en: Chapter 7 – Storage on Kubernetes
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章 - Kubernetes上的存储
- en: Volumes are tied to the life cycle of a Pod and are deleted when the Pod is
    deleted. Persistent Volumes will remain until a cluster is deleted, or they are
    specifically deleted themselves.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 卷与Pod的生命周期相关联，并在删除Pod时被删除。持久卷将保留，直到集群被删除，或者它们被明确地删除。
- en: StorageClasses define the *type* of a Persistent Volume. They can be used to
    distinguish between different types of storage, such as between faster SSD storage
    and slower hard drives – or different types of cloud storage. StorageClasses determine
    where a PersistentVolumeClaim and Persistent Volume will go to get provisioned
    storage.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: StorageClasses定义持久卷的*类型*。它们可用于区分不同类型的存储，例如更快的SSD存储和较慢的硬盘存储 - 或不同类型的云存储。StorageClasses确定持久卷索赔和持久卷将去获取配置存储的位置。
- en: Use a managed Kubernetes service with integrated storage provisioning or add
    a **cloud-controller-manager** configuration to your cluster.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用带有集成存储配置的托管Kubernetes服务，或者向您的集群添加**cloud-controller-manager**配置。
- en: Any application that needs to store state for longer than the life of an individual
    Pod would not work with Volumes. Any application that needs to have state that
    is tolerant to Pod failure needs a Persistent Volume.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何需要存储状态超过单个Pod寿命的应用程序都无法使用卷。任何需要具有对Pod故障具有容忍性状态的应用程序都需要持久卷。
- en: Chapter 8 – Pod Placement Controls
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 - Pod放置控制
- en: Node Selectors can be used to match against Node labels and multiple Nodes can
    fulfill the requirements. Using a Node name means that you specify the single
    Node where the Pod must be placed.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 节点选择器可用于匹配节点标签，并且多个节点可以满足要求。使用节点名称意味着您指定必须放置Pod的单个节点。
- en: Kubernetes implements some default taints to ensure that Pods do not get scheduled
    on Nodes that are malfunctioning or lack resources. In addition, Kubernetes taints
    the master Nodes to prevent scheduling of user applications on the masters.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kubernetes实施了一些默认的污点，以确保Pod不会被调度到发生故障或缺乏资源的节点上。此外，Kubernetes会在主节点上设置污点，以防止用户应用程序在主节点上进行调度。
- en: Too many affinities and anti-affinities can slow down the scheduler or cause
    it to become unresponsive. Determining Pod placement in cases with a lot of affinities
    or anti-affinities is very compute-heavy.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太多的亲和性和反亲和性可能会减慢调度器的速度，或导致其无响应。在具有许多亲和性或反亲和性的情况下确定Pod的放置是非常计算密集的。
- en: Using anti-affinities, you could prevent Pods from co-existing with like Pods
    in the same failure domain. Nodes in the same failure domain would be labeled
    with a failure domain or zone identifier. Anti-affinity would look for Pods matching
    the specific tier of the application level in the same failure domain, and prevent
    scheduling on Nodes matching that domain. The end result would be each tier of
    the three-tier application being spread out among multiple failure domains.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用反亲和性，您可以防止Pod与同一故障域中的相似Pod共存。同一故障域中的节点将带有故障域或区域标识符。反亲和性将寻找与同一故障域中应用程序级别的特定层相匹配的Pod，并防止在匹配该域的节点上进行调度。最终结果将是三层应用程序的每个层在多个故障域中分布。
- en: Chapter 9 – Observability on Kubernetes
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章 - Kubernetes上的可观察性
- en: Metrics correspond to numerical values that present application/compute performance
    and/or usage across many categories, including disk, CPU, memory, latency, and
    so on. Logs correspond to the application, Node, or control plane text logs.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指标对应于数字值，表示应用程序/计算性能和/或跨许多类别的使用情况，包括磁盘、CPU、内存、延迟等。日志对应于应用程序、节点或控制平面文本日志。
- en: The Grafana UI is highly customizable and can be used to present complex Prometheus
    (or another data source's) queries in an elegant, flexible way.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Grafana UI 高度可定制，并可用于以优雅灵活的方式呈现复杂的Prometheus（或其他数据源的）查询。
- en: FluentD would need to run on the production cluster in order to collect logs.
    Elasticsearch and Kibana could run on a separate cluster or other infrastructure.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FluentD需要在生产集群上运行以收集日志。Elasticsearch和Kibana可以在单独的集群或其他基础设施上运行。
- en: Chapter 10 – Troubleshooting Kubernetes
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 - Kubernetes故障排除
- en: One of the strengths of Kubernetes is the ability to scale the cluster easily
    by adding nodes or changing Pod placement by using controls such as taints and
    tolerations. In addition, Pod restarts can result in completely different IPs
    for the same application. This means that both the compute and network topologies
    can be ever-changing.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kubernetes的一个优势是通过添加节点或使用控件（如污点和容忍度）轻松扩展集群。 此外，Pod重新启动可能导致相同应用程序具有完全不同的IP。 这意味着计算和网络拓扑结构可能会不断变化。
- en: The `kubelet` is typically run as a Linux service with `systemd`, with control
    available using `systemctl` and logs in `journalctl`.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`kubelet`通常作为Linux服务在`systemd`中运行，可以使用`systemctl`进行控制，并在`journalctl`中查看日志。'
- en: There are a few different methodologies to use, but generally, you would want
    to check whether all Nodes are ready and schedulable; whether there are any Pod
    Placement Controls precluding scheduling of the Pod; and whether there is any
    dependent storage, ConfigMaps, or secrets that do not exist.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有一些不同的方法可以使用，但通常，您会想要检查所有节点是否准备就绪和可调度； 是否有任何Pod放置控件阻止了Pod的调度； 以及是否存在任何依赖存储、ConfigMaps或不存在的secrets。
- en: Chapter 11 – Template Code Generation and CI/CD on Kubernetes
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章 - 模板代码生成和Kubernetes上的CI/CD
- en: Helm Charts use templates and variables, while Kustomize uses a patch-based
    strategy. Kustomize is built into recent versions of kubectl, while Helm uses
    a separate CLI tool.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Helm Charts使用模板和变量，而Kustomize使用基于补丁的策略。 Kustomize内置于最新版本的kubectl中，而Helm使用单独的CLI工具。
- en: The configuration should emphasize security, since deploy credentials could
    be used to deploy attacker workloads to your cluster. Using either secure environment
    variables or access management controls on your cloud provider are two good strategies.
    The credentials should absolutely not be placed in any Git repository.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置应强调安全性，因为部署凭据可能被用于部署攻击者的工作负载到您的集群。 在云提供商上使用安全环境变量或访问管理控制是两种好策略。 凭据绝对不应放置在任何Git存储库中。
- en: In-cluster setups can be preferable since Kubernetes credentials are not required
    to be provided by an external system. Out-of-cluster setups are usually simpler,
    and more synchronous than in-cluster setups, where a control loop determines when
    changes are made to the resource configuration.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在集群内设置可能更可取，因为Kubernetes凭据不需要由外部系统提供。 集群外设置通常比集群内设置更简单，更同步，其中控制循环确定何时对资源配置进行更改。
- en: Chapter 12 – Kubernetes Security and Compliance
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章 - Kubernetes安全性和合规性
- en: MutatingAdmissionWebhook and ValidatingAdmissionWebhook.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MutatingAdmissionWebhook和ValidatingAdmissionWebhook。
- en: A NetworkPolicy with a blank Pod Selector has the effect of selecting all Pods.
    A NetworkPolicy with all Pods selected, and Ingress and Egress types added without
    any rules, will have the effect of automatically denying all ingress and egress
    to all Pods in the namespace of the NetworkPolicy.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 具有空Pod选择器的NetworkPolicy会选择所有Pod。 具有选择了所有Pod的NetworkPolicy，并且添加了Ingress和Egress类型而没有任何规则，将自动拒绝对命名空间中所有Pod的所有入口和出口。
- en: We would want to track any API requests where resources are patched or updated,
    because attackers could update a Deployment, Pod, or another resource with malicious
    containers.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望跟踪任何API请求，在这些请求中资源被打补丁或更新，因为攻击者可能会更新部署、Pod或其他资源，并植入恶意容器。
- en: Chapter 13 – Extending Kubernetes with CRDs
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章 - 使用CRD扩展Kubernetes
- en: The stored version is the version that is actually stored in the data store.
    Served versions are any versions that are accepted by the API for read or write
    operations. The served versions are converted into the stored version when stored
    in `etcd`.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 存储版本是实际存储在数据存储中的版本。 服务版本是API接受的任何读取或写入操作的版本。 存储在`etcd`中时，服务版本将转换为存储版本。
- en: Measure, Analyze, and Update (typically).
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量、分析和更新（通常）。
- en: Depending on the cloud provider, the **cluster-autoscaler** addon will directly
    update autoscaling groups in order to add or remove Nodes.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据云提供商，**cluster-autoscaler**插件将直接更新自动缩放组，以添加或删除节点。
- en: Chapter 14 – Service Meshes and Serverless
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章 - 服务网格和无服务器
- en: A static Envoy configuration refers to an Envoy configuration that is manually
    created or written by a user. A dynamic Envoy configuration (like those provided
    by Istio) will constantly adapt to new containers, as well as new routing and
    filter rules, from an external controller or data plane.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 静态的Envoy配置是指由用户手动创建或编写的Envoy配置。动态的Envoy配置（例如Istio提供的那些）将不断适应新的容器，以及来自外部控制器或数据平面的新路由和过滤规则。
- en: Listeners, Routes, Clusters, and Endpoints.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监听器、路由、集群和端点。
- en: Knative requires many components in order to run. This allows for plenty of
    customization but makes it more difficult to set up and operate than OpenFaaS.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Knative需要许多组件才能运行。这样可以进行大量定制，但使得设置和操作比OpenFaaS更困难。
- en: Chapter 15 – Stateful Workloads on Kubernetes
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章 - Kubernetes上的有状态工作负载
- en: Minio is an AWS S3-compatible storage tool.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Minio是一种与AWS S3兼容的存储工具。
- en: StatefulSets assist self-clustering applications such as distributed databases
    by providing stable, ordinal Pod identities, in addition to Persistent Volume
    stability.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: StatefulSets通过提供稳定的序数Pod标识以及持久卷稳定性，帮助自我集群化的应用程序，如分布式数据库。
- en: In Kubernetes, Pods can be short-lived, and stateful applications can be distributed.
    This means that the process of maintaining state between Pods (for instance, the
    database consensus) can become difficult if Pods change identity and storage needs
    to be replicated from scratch.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kubernetes中，Pod可以是短暂的，有状态的应用程序可以是分布式的。这意味着在Pod之间保持状态的过程（例如，数据库一致性）可能会变得困难，如果Pod改变身份并且需要从头开始复制存储。
