["```kt\nandroid create avd -n <name> -t <targetID> [-<option> <value>] ...\n\n```", "```kt\nandroid list targets\n\n```", "```kt\nemulator \u2013avd <avd_name> [options]\n\n```", "```kt\ncd c:/android-SDK\n\n```", "```kt\ncd platform-tools\n\n```", "```kt\nC:\\android-SDK\\platform-tools>\n\n```", "```kt\nadb devices\n\n```", "```kt\n    public class MyFirstTestActivityTest extends ActivityInstrumentationTestCase2<MyFirstTestActivity> {\n    ```", "```kt\n    public class MyFirstTestActivityTest\n            extends ActivityInstrumentationTestCase2<MyFirstTestActivity> {\n\n        private MyFirstTestActivity mFirstTestActivity;\n        private TextView mFirstTestText;\n\n        public MyFirstTestActivityTest() {\n            super(MyFirstTestActivity.class);\n        }\n\n        @Override\n        protected void setUp() throws Exception {\n            super.setUp();\n            mFirstTestActivity = getActivity();\n            mFirstTestText =\n                    (TextView) mFirstTestActivity\n                    .findViewById(R.id.my_first_test_text_view);\n        }\n    }\n    ```", "```kt\npublic void testPreconditions() {\n    assertNotNull(\"mFirstTestActivity is null\", mFirstTestActivity);\n    assertNotNull(\"mFirstTestText is null\", mFirstTestText);\n}\n```", "```kt\npublic void testMyFirstTestTextView_labelText() {\n    final String expected =\n            mFirstTestActivity.getString(R.string.my_first_test);\n    final String actual = mFirstTestText.getText().toString();\n    assertEquals(expected, actual);\n}\n```"]