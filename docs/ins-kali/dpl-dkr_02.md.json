["```\n$ # Install the pre-requisites\n$ sudo apt install -y apt-transport-https \\\n                      curl\n\n$ # Add Docker's signing key into our apt configuration to ensure they are the only ones that can send us updates. This key should match the one that the apt repository is using so check the online installation instruction if you see \"NO_PUBKEY <key_id>\" errors.\n$ apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 \\\n              --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n\n$ # Add the repository location to apt. Your URL may be different depending on if Xenial is your distribution.\n$ echo \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" | sudo tee -a /etc/apt/sources.list.d/docker.list\n\n$ # Update the apt listings and install Docker\n$ sudo apt update\n$ sudo apt install docker-engine\n```", "```\n$ docker --version\nDocker version 17.05.0-ce, build 89658be\n```", "```\n$ # Pull the image from the server to our local repository\n$ docker pull nginx\nUsing default tag: latest\nlatest: Pulling from library/nginx\n94ed0c431eb5: Pull complete\n9406c100a1c3: Pull complete\naa74daafd50c: Pull complete\nDigest: sha256:788fa27763db6d69ad3444e8ba72f947df9e7e163bad7c1f5614f8fd27a311c3\nStatus: Downloaded newer image for nginx:latest\n```", "```\n$ docker run nginx\n```", "```\n$ docker run -d \\\n             -p 8080:80 \\\n             nginx\ndd1fd1b62d9cf556d96edc3ae7549f469e972267191ba725b0ad6081dda31e74\n```", "```\n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\ndd1fd1b62d9c nginx \"nginx -g 'daemon ...\" 13 minutes ago Up 13 minutes 0.0.0.0:8080->80/tcp dazzling_swanson\n```", "```\n$ docker stop dd1fd1b62d9c\ndd1fd1b62d9c\n```", "```\n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n```", "```\n$ docker ps -a\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\ndd1fd1b62d9c nginx \"nginx -g 'daemon ...\" 24 minutes ago Exited (137) 2 minutes ago dazzling_swanson\n```", "```\n$ docker start dd1fd1b62d9c\ndd1fd1b62d9c\n\n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\ndd1fd1b62d9c nginx \"nginx -g 'daemon ...\" 28 minutes ago Up About a minute 0.0.0.0:8080->80/tcp dazzling_swanson\n```", "```\n$ docker stop dd1fd1b62d9c\ndd1fd1b62d9c\n\n$ docker rm dd1fd1b62d9c\ndd1fd1b62d9c\n\n$ docker ps -a\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n```", "```\n$ docker run -d \\\n             --rm \\\n             nginx\nf64b35fc42c33f4af2648bf4f1dce316b095b30d31edf703e099b93470ab725a\n\n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nf64b35fc42c3 nginx \"nginx -g 'daemon ...\" 4 seconds ago Up 3 seconds 80/tcp awesome_bell\n```", "```\n$ # Inspect NGINX image info and after you match our query, return also next two lines\n$ docker inspect nginx | grep -A2 \"ExposedPorts\"\n\"ExposedPorts\": {\n \"80/tcp\": {}\n},\n```", "```\n$ docker run -d \\\n             -p 8080:80 \\\n             nginx\n06ebb46f64817329d360bb897bda824f932b9bcf380ed871709c2033af069118\n\n$ # Access the page http://localhost:8080 with your browser\n\n$ docker logs 06ebb46f\n172.17.0.1 - - [02/Aug/2017:01:39:51 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.01\" \"-\"\n2017/08/02 01:39:51 [error] 6#6: *1 open() \"/usr/share/nginx/html/favicon.ico\" failed (2: No such file or directory), client: 172.17.0.1, server: localhost, request: \"GET /favicon.ico HTTP/1.1\", host: \"localhost:8080\"\n172.17.0.1 - - [02/Aug/2017:01:39:51 +0000] \"GET /favicon.ico HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.01\" \"-\"\n172.17.0.1 - - [02/Aug/2017:01:39:52 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.01\" \"-\"\n```", "```\n$ docker run -d \\\n             -p 8080:80 \\\n             nginx\n06ebb46f64817329d360bb897bda824f932b9bcf380ed871709c2033af069118\n\n$ docker exec 06ebb46f ls -la /etc/nginx/conf.d/\ntotal 12\ndrwxr-xr-x 2 root root 4096 Jul 26 07:33 .\ndrwxr-xr-x 3 root root 4096 Jul 26 07:33 ..\n-rw-r--r-- 1 root root 1093 Jul 11 13:06 default.conf\n```", "```\n$ docker exec -it \\\n              06ebb46f /bin/bash\nroot@06ebb46f6481:/# ls -la /etc/nginx/conf.d/\ntotal 12\ndrwxr-xr-x 2 root root 4096 Jul 26 07:33 .\ndrwxr-xr-x 3 root root 4096 Jul 26 07:33 ..\n-rw-r--r-- 1 root root 1093 Jul 11 13:06 default.conf\nroot@06ebb46f6481:/# exit\nexit\n\n$ # Back to host shell\n```", "```\n$ docker exec -it 06ebb46f /bin/bash\n\nroot@06ebb46f6481:/# ps  # No ps on system\nbash: ps: command not found\n\nroot@06ebb46f6481:/# apt-get update -q\nHit:1 http://security.debian.org stretch/updates InRelease\nGet:3 http://nginx.org/packages/mainline/debian stretch InRelease [2854 B]\nIgn:2 http://cdn-fastly.deb.debian.org/debian stretch InRelease\nHit:4 http://cdn-fastly.deb.debian.org/debian stretch-updates InRelease\nHit:5 http://cdn-fastly.deb.debian.org/debian stretch Release\nFetched 2854 B in 0s (2860 B/s)\nReading package lists...\n\nroot@06ebb46f6481:/# apt-get install -y procps\n<snip>\nThe following NEW packages will be installed:\nlibgpm2 libncurses5 libprocps6 procps psmisc\n0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 558 kB of archives.\nAfter this operation, 1785 kB of additional disk space will be used.\n<snip>\n\nroot@06ebb46f6481:/# ps\nPID TTY TIME CMD\n31 ? 00:00:00 bash\n595 ? 00:00:00 ps\n\nroot@06ebb46f6481:/#\n```", "```\nFROM ubuntu:latest\n\nRUN apt-get update -q && \\\n apt-get install -qy iputils-ping\n\nCMD [\"ping\", \"google.com\"]\n```", "```\n$ # Build using Dockerfile from current directory and tag our resulting image as \"test_container\"\n$ docker build -t test_container . \nSending build context to Docker daemon 1.716MB\nStep 1/3 : FROM ubuntu:latest\n---> 14f60031763d\nStep 2/3 : RUN apt-get update -q && apt-get install -qy iputils-ping\n---> Running in ad1ea6a6d4fc\nGet:1 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]\n<snip>\nThe following NEW packages will be installed:\niputils-ping libffi6 libgmp10 libgnutls-openssl27 libgnutls30 libhogweed4\nlibidn11 libnettle6 libp11-kit0 libtasn1-6\n0 upgraded, 10 newly installed, 0 to remove and 8 not upgraded.\nNeed to get 1304 kB of archives.\n<snip>\nSetting up iputils-ping (3:20121221-5ubuntu2) ...\nProcessing triggers for libc-bin (2.23-0ubuntu9) ...\n---> eab9729248d9\nRemoving intermediate container ad1ea6a6d4fc\nStep 3/3 : CMD ping google.com\n---> Running in 44fbc308e790\n---> a719d8db1c35\nRemoving intermediate container 44fbc308e790\nSuccessfully built a719d8db1c35\nSuccessfully tagged test_container:latest\n```", "```\n$ docker build -t test_container . \nSending build context to Docker daemon 1.716MB\nStep 1/3 : FROM ubuntu:latest\n---> 14f60031763d\nStep 2/3 : RUN apt-get update -q && apt-get install -qy iputils-ping\n---> Using cache\n---> eab9729248d9\nStep 3/3 : CMD ping google.com\n---> Using cache\n---> a719d8db1c35\nSuccessfully built a719d8db1c35\nSuccessfully tagged test_container:latest\n```", "```\n$ # Run the image tagged \"test_container\"\n$ docker run test_container \nPING google.com (216.58.216.78) 56(84) bytes of data.\n64 bytes from ord30s21-in-f14.1e100.net (216.58.216.78): icmp_seq=1 ttl=52 time=45.9 ms\n64 bytes from ord30s21-in-f14.1e100.net (216.58.216.78): icmp_seq=2 ttl=52 time=41.9 ms\n64 bytes from ord30s21-in-f14.1e100.net (216.58.216.78): icmp_seq=3 ttl=52 time=249 ms\n^C\n--- google.com ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2002ms\nrtt min/avg/max/mdev = 41.963/112.460/249.470/96.894 ms\n```", "```\nRUN apt-get update -q\nRUN apt-get install -qy iputils-ping\n```", "```\nRUN apt-get install -qy curl iputils-ping\n```", "```\n$ mkdir ~/advanced_nginx\n$ cd ~/advanced_nginx\n```", "```\n$ echo \"Just a test file\" > test.txt\n```", "```\n    server {\n      listen 80;\n      server_name _;\n      root /srv/www/html;\n\n      # Deny access to any files prefixed with '.'\n      location ~/\\. {\n        deny all;\n      }\n\n      # Serve up the root path at <host>/\n      location / {\n        index index.html;\n        autoindex on;\n      }\n    }\n```", "```\nFROM nginx:latest\n\n# Make sure we are fully up to date\nRUN apt-get update -q && \\\n apt-get dist-upgrade -y\n\n# Remove the default configuration\nRUN rm /etc/nginx/conf.d/default.conf\n\n# Create our website's directory and make sure\n# that the webserver process can read it\nRUN mkdir -p /srv/www/html && \\\n chown nginx:nginx /srv/www/html\n\n# Put our custom server configuration in\nCOPY nginx_main_site.conf /etc/nginx/conf.d/\n\n# Copy our test file in the location that is\n# being served up\nCOPY test.txt /srv/www/html/\n```", "```\n$ # Print top 2 lines of main config file in NGINX image\n$ docker run --rm \\\n             nginx /bin/head -2 /etc/nginx/nginx.conf\n\nuser nginx;\n```", "```\n$ docker build -t web_server . \nSending build context to Docker daemon 17.41kB\nStep 1/6 : FROM nginx:latest\n ---> b8efb18f159b\nStep 2/6 : RUN apt-get update -q && apt-get dist-upgrade -yq\n ---> Running in 5cd9ae3712da\nGet:1 http://nginx.org/packages/mainline/debian stretch InRelease [2854 B]\nGet:2 http://security.debian.org stretch/updates InRelease [62.9 kB]\nGet:3 http://nginx.org/packages/mainline/debian stretch/nginx amd64 Packages [11.1 kB]\nGet:5 http://security.debian.org stretch/updates/main amd64 Packages [156 kB]\nIgn:4 http://cdn-fastly.deb.debian.org/debian stretch InRelease\nGet:6 http://cdn-fastly.deb.debian.org/debian stretch-updates InRelease [88.5 kB]\nGet:7 http://cdn-fastly.deb.debian.org/debian stretch Release [118 kB]\nGet:8 http://cdn-fastly.deb.debian.org/debian stretch Release.gpg [2373 B]\nGet:9 http://cdn-fastly.deb.debian.org/debian stretch/main amd64 Packages [9497 kB]\nFetched 9939 kB in 40s (246 kB/s)\nReading package lists...\nReading package lists...\nBuilding dependency tree...\nReading state information...\nCalculating upgrade...\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n ---> 4bbd446af380\nRemoving intermediate container 5cd9ae3712da\nStep 3/6 : RUN rm /etc/nginx/conf.d/default.conf\n ---> Running in 39ad3da8979a\n ---> 7678bc9abdf2\nRemoving intermediate container 39ad3da8979a\nStep 4/6 : RUN mkdir -p /srv/www/html && chown nginx:nginx /srv/www/html\n ---> Running in e6e50483e207\n ---> 5565de1d2ec8\nRemoving intermediate container e6e50483e207\nStep 5/6 : COPY nginx_main_site.conf /etc/nginx/conf.d/\n ---> 624833d750f9\nRemoving intermediate container a2591854ff1a\nStep 6/6 : COPY test.txt /srv/www/html/\n ---> 59668a8f45dd\nRemoving intermediate container f96dccae7b5b\nSuccessfully built 59668a8f45dd\nSuccessfully tagged web_server:latest\n```", "```\n$ docker run -d \\\n             -p 8080:80 \\\n             --rm \\\n             web_server \nbc457d0c2fb0b5706b4ca51b37ca2c7b8cdecefa2e5ba95123aee4458e472377\n\n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nbc457d0c2fb0 web_server \"nginx -g 'daemon ...\" 30 seconds ago Up 29 seconds 0.0.0.0:8080->80/tcp goofy_barti\n```", "```\n$ mkdir ~/python_webserver\n$ cd ~/python_webserver\n\n$ echo \"Just a test file\" > test.txt\n```", "```\nFROM python:3\n\n# Add some labels for cache busting and annotating\nLABEL version=\"1.0\"\nLABEL org.sgnn7.name=\"python-webserver\"\n\n# Set a variable that we will keep reusing to prevent typos\nENV SRV_PATH=/srv/www/html\n\n# Make sure we are fully up to date\nRUN apt-get update -q && \\\n apt-get dist-upgrade -y\n\n# Let Docker know that the exposed port we will use is 8000\nEXPOSE 8000\n\n# Create our website's directory, then create a limited user\n# and group\nRUN mkdir -p $SRV_PATH && \\\n groupadd -r -g 350 pythonsrv && \\\n useradd -r -m -u 350 -g 350 pythonsrv\n\n# Define ./external as an externally-mounted directory\nVOLUME $SRV_PATH/external\n\n# To serve things up with Python, we need to be in that\n# same directory\nWORKDIR $SRV_PATH\n\n# Copy our test file\nCOPY test.txt $SRV_PATH/\n\n# Add a URL-hosted content into the image\nADD https://raw.githubusercontent.com/moby/moby/master/README.md \\\n $SRV_PATH/\n\n# Make sure that we can read all of these files as a\n# limited user\nRUN chown -R pythonsrv:pythonsrv $SRV_PATH\n\n# From here on out, use the limited user\nUSER pythonsrv\n\n# Run the simple http python server to serve up the content\nCMD [ \"python3\", \"-m\", \"http.server\" ]\n```", "```\nLABEL version=\"1.0\"\nLABEL org.sgnn7.name=\"python-webserver\"\n```", "```\nRUN mkdir -p $SRV_PATH && \\\n groupadd -r -g 350 pythonsrv && \\\n useradd -r -m -u 350 -g 350 pythonsrv\n```", "```\nADD https://raw.githubusercontent.com/moby/moby/master/README.md \\\n $SRV_PATH/\n```", "```\nCMD [ \"python3\", \"-m\", \"http.server\" ]\n```", "```\n$ docker build -t python_server . \nSending build context to Docker daemon 16.9kB\nStep 1/14 : FROM python:3\n ---> 968120d8cbe8\n<snip>\nStep 14/14 : CMD python3 -m http.server\n ---> Running in 55262476f342\n ---> 38fab9dca6cd\nRemoving intermediate container 55262476f342\nSuccessfully built 38fab9dca6cd\nSuccessfully tagged python_server:latest\n\n$ docker run -d \\\n             -p 8000:8000 \\\n             --rm \\\n             python_server \nd19e9bf7fe70793d7fce49f3bd268917015167c51bd35d7a476feaac629c32b8\n```", "```\n$ # Kill our old container that is still running\n$ docker kill d19e9bf7\nd19e9bf7\n\n$ # Run our image but mount our current folder to container's\n$ # /srv/www/html/external folder\n$ docker run -d \\\n             -p 8000:8000 \\\n             --rm \\\n             -v $(pwd):/srv/www/html/external \\\n             python_server \n9756b456074f167d698326aa4cbe5245648e5487be51b37b00fee36067464b0e\n```"]