["```\n    $docker container run --name testevents ubuntu:14.04 ping google.com\n    ```", "```\n    PING google.com (172.217.165.142) 56(84) bytes of data.\n    64 bytes from lax30s03-in-f14.1e100.net (172.217.165.142):\n    icmp_seq=1 ttl=115 time=68.9 ms\n    64 bytes from lax30s03-in-f14.1e100.net (172.217.165.142):\n    icmp_seq=2 ttl=115 time=349 ms\n    64 bytes from lax30s03-in-f14.1e100.net (172.217.165.142):\n    icmp_seq=3 ttl=115 time=170 ms\n    ```", "```\n    $docker container ls\n    ```", "```\n    CONTAINER ID    IMAGE           COMMAND            CREATED\n    \u00a0\u00a0\u00a0STATUS           PORTS          NAMES\n    10e235033813     ubuntu:14.04   \"ping google.com\"  10 seconds ago\n    \u00a0\u00a0\u00a0Up 5 seconds                    testevents\n    ```", "```\n    $docker container pause testevents\n    ```", "```\n    $docker container ls\n    ```", "```\n    CONTAINER ID    IMAGE         COMMAND            CREATED\n    \u00a0\u00a0\u00a0STATUS            PORTS          NAMES\n    10e235033813    ubuntu:14.04  \"ping google.com\"  26 seconds ago\n    \u00a0\u00a0\u00a0Up 20 seconds (Paused)           testevents\n    ```", "```\n    $docker container unpause testevents\n    ```", "```\n    $docker container ls\n    ```", "```\n    CONTAINER ID    IMAGE         COMMAND            CREATED\n    \u00a0\u00a0\u00a0STATUS            PORTS          NAMES\n    10e235033813    ubuntu:14.04  \"ping google.com\"  43 seconds ago\n    \u00a0\u00a0\u00a0Up 37 seconds                    testevents\n    ```", "```\n    $docker container stop testevents\n    ```", "```\n    64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\n    icmp_seq = 42 ttl=115 time=19.8 ms\n    64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\n    icmp_seq = 43 ttl=115 time=18.7 ms\n    ```", "```\n    $docker container ls\n    ```", "```\n    CONTAINER ID      IMAGE      COMMAND     CREATED\n            STATUS         PORTS                   NAMES\n    ```", "```\n    $docker container ls -a\n    ```", "```\n    CONTAINER ID    IMAGE         COMMAND            CREATED\n    \u00a0\u00a0\u00a0STATUS            PORTS          NAMES\n    10e235033813    ubuntu:14.04  \"ping google.com\"  1 minute ago\n    \u00a0\u00a0\u00a0Exited (137) 13 seconds ago      testevents\n    ```", "```\n    $docker container start -a testevents\n    ```", "```\n    64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\n    icmp_seq = 55 ttl=115 time=63.5 ms\n    64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\n    icmp_seq = 56 ttl=115 time=22.2 ms\n    ```", "```\n    $docker container ls\n    ```", "```\n    CONTAINER ID    IMAGE         COMMAND            CREATED\n    \u00a0\u00a0\u00a0STATUS            PORTS          NAMES\n    10e235033813    ubuntu:14.04  \"ping google.com\"  43 seconds ago\n    \u00a0\u00a0\u00a0Up 37 seconds                    testevents\n    ```", "```\n    $docker container rm -f testevents\n    ```", "```\n    testevents\n    ```", "```\n    $docker container ls -a\n    ```", "```\n    $docker container run --name testcreate ubuntu:14.04 time\n    ```", "```\n    $docker container ls\n    ```", "```\n    CONTAINER ID    IMAGE         COMMAND            CREATED\n    \u00a0\u00a0\u00a0STATUS            PORTS          NAMES\n    ```", "```\n    $docker container ls -a\n    ```", "```\n    CONTAINER ID    IMAGE         COMMAND         CREATED\n    \u00a0\u00a0\u00a0STATUS            PORTS          NAMES\n    C262e6718724    ubuntu:14.04  \"time\"          30 seconds ago\n    \u00a0\u00a0\u00a0Created                          testcreate\n    ```", "```\n    $docker container run -it --name testsize ubuntu:14.04\n    ```", "```\n    $docker image ls\n    ```", "```\n    REPOSITORY     TAG      IMAGE ID         CREATED\n    \u00a0\u00a0SIZE\n    ubuntu         14.04    971bb3841501     23 months ago\n    \u00a0\u00a0188MB\n    ```", "```\n    $docker container ls -s\n    ```", "```\n    CONTAINER ID    IMAGE          COMMAND      CREATED\n    \u00a0\u00a0STATUS     PORTS    NAMES      SIZE\n    9f2d2d1ee3e0    ubuntu:14.04   \"/bin/bash\"  6 seconds ago\n    \u00a0\u00a0Up 6 minutes        testsize   0B (virtual 188MB)\n    ```", "```\n    root@9f2d2d1ee3e0: apt-get update\n    ```", "```\n    root@9f2d2d1ee3e: apt-get install -y wget\n    ```", "```\n    $docker container ls -s\n    ```", "```\n    CONTAINER ID    IMAGE          COMMAND      CREATED\n    \u00a0\u00a0STATUS     PORTS    NAMES      SIZE\n    9f2d2d1ee3e0    ubuntu:14.04   \"/bin/bash\"  9 seconds ago\n    \u00a0\u00a0Up 9 minutes        testsize   27.8MB (virtual 216MB)\n    ```", "```\n    $docker swarm init --advertise-addr <IP>\n    ```", "```\n    $ docker service create -p 80 --replicas 2 nginx:1.14.2\n    ```", "```\n    $docker service ls\n    ```", "```\n    ID            NAME             MODE        REPLICAS  IMAGE\n    \u00a0\u00a0\u00a0\u00a0\u00a0PORTS\n    xmnp23wc0m6c  amazing_hellman  replicated  2/2       nginx:1.14.2\n    \u00a0\u00a0\u00a0\u00a0\u00a0*:30000->80/tcp\n    ```", "```\n    $curl 192.168.0.223:3000\n    ```", "```\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <title>Welcome to nginx!</title>\n    <style>\n    \u00a0\u00a0\u00a0\u00a0body {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 35em;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0margin: 0 auto;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0font-family: Tahoma, Verdana, Arial, sans-serif;\n    \u00a0\u00a0\u00a0\u00a0}\n    </style>\n    </head>\n    </body>\n    <h1>Welcome to nginx!<h1>\n    <p>If you see this page, the nginx web server is successfully \n    installed and working. Further configuration is required. </p>\n    <p>For online documentation and support please refer to\n    <a href=\"http://nginx.org/\">nginx.org</a>.<br/>\n    Commercial support is available at\n    <a href=\"http://nginx.com/\">nginx.com</a>.</p>\n    <p><em>Thank you for using nginx.</em></p>\n    </body>\n    <html>\n    ```", "```\n    $docker service scale amazing_hellman=5\n    ```", "```\n    amazing_hellman scaled to 5\n    overall progress: 5 out of 5 tasks\n    1/5: running\n    2/5: running\n    3/5: running\n    4/5: running\n    5/5: running\n    verify: Service converged\n    ```", "```\n    $docker service ls\n    ```", "```\n    ID            NAME             MODE        REPLICAS  IMAGE\n    \u00a0\u00a0\u00a0\u00a0\u00a0PORTS\n    xmnp23wc0m6c  amazing_hellman  replicated  5/5       nginx:1.14.2\n    \u00a0\u00a0\u00a0\u00a0\u00a0*:30000->80/tcp\n    ```", "```\n    $docker service rm amazing_hellman\n    ```", "```\n    amazing_hellman\n    ```", "```\n    $docker service ls\n    ```", "```\n    ID       NAME      MODE      REPLICAS      IMAGE      PORTS\n    ```", "```\n    $vi stack.yml\n    ```", "```\n    # Use root/example as user/password credentials\n    version: '3.1'\n    services:\n    \u00a0\u00a0db:\n    \u00a0\u00a0\u00a0\u00a0image: mysql\n    \u00a0\u00a0\u00a0\u00a0command: --default-authentication-plugin=      mysql_native_password\n    \u00a0\u00a0\u00a0\u00a0restart: always\n    \u00a0\u00a0\u00a0\u00a0environment:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MYSQL_ROOT_PASSWORD: example\n    \u00a0\u00a0adminer:\n    \u00a0\u00a0\u00a0\u00a0image: adminer\n    \u00a0\u00a0\u00a0\u00a0restart: always\n    \u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 8080:8080\n    ```", "```\n    :wq\n    ```", "```\n    $cat stack.yml\n    ```", "```\n    $docker stack deploy -c stack.yml mysql\n    ```", "```\n    Ignoring unsupported options: restart\n    Creating network mysql_default\n    Creating service mysql_db\n    Creating service mysql_adminer\n    ```", "```\n    $docker stack ls\n    ```", "```\n    NAME     SERVICES    ORCHESTRATOR\n    mysql    2           Swarm\n    ```", "```\n    $docker stack rm mysql\n    ```", "```\n    Removing service mysql_adminer\n    Removing service mysql_db\n    Removing network mysql_default\n    ```", "```\n    $docker volume create vol1\n    ```", "```\n    vol1\n    ```", "```\n    $docker volume ls\n    ```", "```\n    DRIVER            VOLUME NAME\n    Local             vol1\n    ```", "```\n    $docker volume inspect vol1\n    ```", "```\n    [\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"CreatedAt\": \"2020-06-16T16:44:13-04:00\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Driver\": \"local\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Labels\": {},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Mountpoint: \"/var/lib/docker/volumes/vol1/_data\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Name\": \"vol1\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Options\": {},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Scope\": \"local\"\n    \u00a0\u00a0\u00a0\u00a0}\n    ]\n    ```", "```\n    $ docker container run -it -v vol1:/container_vol --name container1 ubuntu:14.04 bash\n    ```", "```\n    root@acc8900e4cf1:/# echo hello > /container_vol/new_file.txt\n    ```", "```\n    root@acc8900e4cf1:/# ls /container_vol\n    ```", "```\n    root@acc8900e4cf1:/# exit\n    ```", "```\n    $ sudo ls /var/lib/docker/volumes/vol1/_data\n    ```", "```\n    new_file.txt\n    ```", "```\n    $ sudo cat /var/lib/docker/volumes/vol1/_data/new_file.txt\n    ```", "```\n    $docker container rm -v container1\n    ```", "```\n    container1\n    ```", "```\n    $docker volume ls\n    ```", "```\n    DRIVER        VOLUME NAME\n    Local         vol1\n    ```", "```\n    $docker volume rm vol1\n    ```", "```\n    vol1\n    ```", "```\n    $docker volume ls\n    ```", "```\n    DRIVER        VOLUME NAME\n    ```", "```\n    $docker container run -itd -v /newvol --name container2 ubuntu:14.04 bash\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER     VOLUME NAME\n    Local      8f4087212f6537aafde7eaca4d9e4a446fe99933c3af3884d\n    0645b66b16fbfa4\n    ```", "```\n    $docker container rm -fv container2\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    $docker container run --name db1 -v db:/var/lib/postgresql/data -e POSTGRES_PASSWORD=password -d postgres\n    ```", "```\n    $ docker container exec -it db1 psql -U postgres\n    ```", "```\n    CREATE TABLE PEOPLE(NAME TEXT, AGE int);\n    ```", "```\n    INSERT INTO PEOPLE VALUES('ENGY','41');\n    INSERT INTO PEOPLE VALUES('AREEJ','12');\n    ```", "```\n    SELECT * FROM PEOPLE;\n    ```", "```\n    \\q\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER            VOLUME NAME\n    Local             db\n    ```", "```\n    $ docker container rm -fv db1\n    ```", "```\n    db1\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER          VOLUME NAME\n    Local           db\n    ```", "```\n    $docker container run --name db2 -v db:/var/lib/postgresql/data -e POSTGRES_PASSWORD=password -d postgres\n    ```", "```\n    $ docker container exec -it db2 psql -U postgres\n    postgres=# SELECT * FROM PEOPLE;\n    ```", "```\n    \\q\n    ```", "```\n    $ docker container rm -f db2\n    ```", "```\n    db2\n    ```", "```\n    $ docker volume rm db\n    ```", "```\n    db\n    ```", "```\n    $ docker container run --name db1 -e POSTGRES_PASSWORD=password -d postgres\n    ```", "```\n    $ docker container exec -it db1 psql -U postgres\n    ```", "```\n    CREATE TABLE PEOPlE(NAME TEXT, AGE int);\n    ```", "```\n    INSERT INTO PEOPLE VALUES('ENGY','41');\n    INSERT INTO PEOPLE VALUES('AREEJ','12');\n    ```", "```\n    SELECT * FROM PEOPLE;\n    ```", "```\n    \\q\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER     VOLUME NAME\n    Local      6fd85fbb83aa8e2169979c99d580daf2888477c654c\n    62284cea15f2fc62a42c32\n    ```", "```\n    $ docker container rm -fv db1\n    ```", "```\n    db1\n    ```", "```\n    $docker volume ls\n    ```", "```\n    DRIVER     VOLUME NAME\n    ```", "```\n    $docker system df\n    ```", "```\n    TYPE            TOTAL     ACTIVE     SIZE      RECLAIMABLE\n    Images          6         2          1.261GB   47.9MB (75%)\n    Containers      11        2          27.78MB   27.78MB (99%)\n    Local Volumes   2         2          83.26MB   OB (0%)\n    Build Cache                          0B        0B\n    ```", "```\n    $docker system df -v\n    ```", "```\n    $docker volume ls\n    ```", "```\n    DRIVER    VOLUME NAME\n    local     a7675380798d169d4d969e133f9c3c8ac17e733239330397ed\n    ba9e0bc05e509fc\n    local     db\n    ```", "```\n    $docker ps -a --filter volume=db\n    ```", "```\n    CONTAINER ID    IMAGE     COMMAND                 CREATED\n    \u00a0\u00a0STATUS       PORTS         NAMES\n    55c60ad38164    postgres  \"docker-entrypoint.s\u2026\"  2 hours ago\n    \u00a0\u00a0Up 2 hours   5432/tcp      db_with\n    ```", "```\n    $docker container run -v /newvol --name c1 -it ubuntu:14.04 bash\n    ```", "```\n    cd newvol/\n    ```", "```\n    echo hello > /newvol/file1.txt\n    ```", "```\n    $docker container run --name c2 --volumes-from c1 -it ubuntu:14.04 bash\n    ```", "```\n    cd newvol/\n    ls\n    ```", "```\n    echo hello2 > /newvol/file2.txt\n    ```", "```\n    ls\n    ```", "```\n    file1.txt\tfile2.txt\n    ```", "```\n    docker attach c1\n    ```", "```\n    ls\n    ```", "```\n    file1.txt\tfile2.txt\n    ```", "```\n    exit\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER    VOLUME NAME\n    local     2d438bd751d5b7ec078e9ff84a11dbc1f11d05ed0f82257c\n    4e8004ecc5d93350\n    ```", "```\n    $ docker container rm -v c1\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER    VOLUME NAME\n    local     2d438bd751d5b7ec078e9ff84a11dbc1f11d05ed0f82257c\n    4e8004ecc5d93350\n    ```", "```\n    $ docker container rm -fv c2\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    DRIVER           VOLUME NAME\n    ```", "```\n    $docker container run --name c1 -v /newvol -it ubuntu:14.04 bash\n    ```", "```\n    echo hello > /newvol/file.txt\n    cd newvol\n    ```", "```\n    cd newvol\n    ```", "```\n    ls\n    ```", "```\n    file.txt\n    ```", "```\n    cat file.txt\n    ```", "```\n    hello\n    ```", "```\n    exit\n    ```", "```\n    $ docker container commit c1 newimage\n    ```", "```\n    $ docker image inspect newimage --format={{.ContainerConfig.Volumes}}\n    ```", "```\n    map[/newvol:{}]\n    ```", "```\n    $ docker container run -it newimage\n    ```", "```\n    cd newvol\n    ls\n    ```", "```\n    exit\n    ```", "```\n    $ docker container rm -f $(docker container ls -aq)\n    ```", "```\n    $ docker container run --name c1 -it ubuntu:14.04 bash\n    ```", "```\n    mkdir new \n    cd new\n    ```", "```\n    echo hello > file.txt\n    ```", "```\n    cat file.txt\n    ```", "```\n    hello\n    ```", "```\n    exit\n    ```", "```\n    $ docker container commit c1 newimage\n    ```", "```\n    $ docker container run -it newimage\n    ```", "```\n    ls\n    ```", "```\n    bin  boot  dev  etc  home  lib  lib64  media  mnt  new  opt\n    proc  root  run sbin  srv  sys  tmp  usr  var\n    ```", "```\n    cd new/\n    ls\n    ```", "```\n    file.txt\n    ```", "```\n    cat file.txt\n    ```", "```\n    hello\n    ```", "```\n    exit\n    ```", "```\n    SELECT * FROM events WHERE info ->> 'status' = 'pull';\n    ```", "```\nSELECT * FROM events WHERE info ->> 'status' = 'destroy';\n```", "```\nSELECT info ->> 'id' as id FROM events WHERE info ->> status'     = 'destroy';\n```", "```\n    access.log       error.log\n    ```"]