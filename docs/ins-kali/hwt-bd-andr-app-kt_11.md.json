["```kt\n    \u00a0\u00a0\u00a0\u00a0implementation \"androidx.constraintlayout       :constraintlayout:2.0.4\"\n    \u00a0\u00a0\u00a0\u00a0implementation 'androidx.recyclerview:recyclerview:1.1.0'\n    \u00a0\u00a0\u00a0\u00a0def lifecycle_version = \"2.2.0\"\n    \u00a0\u00a0\u00a0\u00a0implementation \"androidx.lifecycle:lifecycle-extensions       :$lifecycle_version\"\n    \u00a0\u00a0\u00a0\u00a0def room_version = \"2.2.5\"\n          implementation \"androidx.room:room-runtime:$room_version\"\n    \u00a0\u00a0\u00a0\u00a0kapt \"androidx.room:room-compiler:$room_version\"\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.squareup.retrofit2:retrofit:2.6.2'\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.squareup.retrofit2:converter-gson:2.6.2'\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.google.code.gson:gson:2.8.6'\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'junit:junit:4.12'\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'android.arch.core:core-testing:2.1.0'\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'org.mockito:mockito-core:2.23.0'\n    \u00a0\u00a0\u00a0\u00a0androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n    \u00a0\u00a0\u00a0\u00a0androidTestImplementation 'androidx.test.espresso:espresso-      core:3.3.0\n    ```", "```kt\n    data class Post(\n    \u00a0\u00a0\u00a0\u00a0@SerializedName(\"id\") val id: Long,\n    \u00a0\u00a0\u00a0\u00a0@SerializedName(\"userId\") val userId: Long,\n    \u00a0\u00a0\u00a0\u00a0@SerializedName(\"title\") val title: String,\n    \u00a0\u00a0\u00a0\u00a0@SerializedName(\"body\") val body: String\n    )\n    ```", "```kt\n    interface PostService {\n    \u00a0\u00a0\u00a0\u00a0@GET(\"posts\")\n    \u00a0\u00a0\u00a0\u00a0fun getPosts(): Call<List<Post>>\n    }\n    ```", "```kt\n    @Entity(tableName = \"posts\")\n    data class PostEntity(\n    \u00a0\u00a0\u00a0\u00a0@PrimaryKey(autoGenerate = true) @ColumnInfo(name = \"id\")       val id: Long,\n    \u00a0\u00a0\u00a0\u00a0@ColumnInfo(name = \"userId\") val userId: Long,\n    \u00a0\u00a0\u00a0\u00a0@ColumnInfo(name = \"title\") val title: String,\n    \u00a0\u00a0\u00a0\u00a0@ColumnInfo(name = \"body\") val body: String\n    )\n    ```", "```kt\n    @Dao\n    interface PostDao {\n    \u00a0\u00a0\u00a0\u00a0@Insert(onConflict = OnConflictStrategy.REPLACE)\n    \u00a0\u00a0\u00a0\u00a0fun insertPosts(posts: List<PostEntity>)\n    \u00a0\u00a0\u00a0\u00a0@Query(\"SELECT * FROM posts\")\n    \u00a0\u00a0\u00a0\u00a0fun loadPosts(): LiveData<List<PostEntity>>\n    }\n    ```", "```kt\n    @Database(\n    \u00a0\u00a0\u00a0\u00a0entities = [PostEntity::class],\n    \u00a0\u00a0\u00a0\u00a0version = 1\n    )\n    abstract class PostDatabase : RoomDatabase() {\n    \u00a0\u00a0\u00a0\u00a0abstract fun postDao(): PostDao\n    }\n    ```", "```kt\n    class PostMapper {\n    \u00a0\u00a0\u00a0\u00a0fun serviceToEntity(post: Post): PostEntity {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return PostEntity(post.id, post.userId, post.title,           post.body)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    interface PostRepository {\n    \u00a0\u00a0\u00a0\u00a0fun getPosts(): LiveData<List<PostEntity>>\n    }\n    ```", "```kt\n    class PostRepositoryImpl(\n    \u00a0\u00a0\u00a0\u00a0private val postService: PostService,\n    \u00a0\u00a0\u00a0\u00a0private val postDao: PostDao,\n    \u00a0\u00a0\u00a0\u00a0private val postMapper: PostMapper,\n    \u00a0\u00a0\u00a0\u00a0private val executor: Executor\n    ) : PostRepository {\n    \u00a0\u00a0\u00a0\u00a0override fun getPosts(): LiveData<List<PostEntity>> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postService.getPosts().enqueue(object :           Callback<List<Post>> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onFailure(call: Call<List<Post>>, t:               Throwable) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onResponse(call: Call<List<Post>>,               response: Response<List<Post>>) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.body()?.let { posts ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0executor.execute {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postDao.insertPosts(posts.map { post ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postMapper.serviceToEntity(post)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return postDao.loadPosts()\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class RepositoryApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0lateinit var postRepository: PostRepository\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val retrofit = Retrofit.Builder()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.baseUrl(\"https://jsonplaceholder.typicode.com/\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.addConverterFactory(GsonConverterFactory.create())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.build()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val postService =           retrofit.create<PostService>(PostService::class.java)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val notesDatabase =\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Room.databaseBuilder(applicationContext,               PostDatabase::class.java, \"post-db\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.build()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postRepository = PostRepositoryImpl(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postService,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0notesDatabase.postDao(),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PostMapper(),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Executors.newSingleThreadExecutor()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    ```", "```kt\n    class PostViewModel(private val postRepository: PostRepository) :   ViewModel() {\n    \u00a0\u00a0\u00a0\u00a0fun getPosts() = postRepository.getPosts()\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <androidx.constraintlayout.widget.ConstraintLayout   xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0android:padding=\"10dp\">\n    \u00a0\u00a0\u00a0\u00a0<TextView\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/view_post_row_title\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\" />\n    \u00a0\u00a0\u00a0\u00a0<TextView\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/view_post_row_body\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginTop=\"5dp\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toBottomOf           =\"@id/view_post_row_title\" />\n    </androidx.constraintlayout.widget.ConstraintLayout>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <androidx.constraintlayout.widget.ConstraintLayout   xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:tools=\"http://schemas.android.com/tools\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_height=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0tools:context=\".MainActivity\">\n    \u00a0\u00a0\u00a0\u00a0<androidx.recyclerview.widget.RecyclerView\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_recycler_view\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"0dp\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"0dp\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintBottom_toBottomOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintLeft_toLeftOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintRight_toRightOf=\"parent\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\" />\n    </androidx.constraintlayout.widget.ConstraintLayout>\n    ```", "```kt\n    class PostAdapter(private val layoutInflater: LayoutInflater) :\n    \u00a0\u00a0\u00a0\u00a0RecyclerView.Adapter<PostAdapter.PostViewHolder>() {\n    \u00a0\u00a0\u00a0\u00a0private val posts = mutableListOf<PostEntity>()\n    \u00a0\u00a0\u00a0\u00a0override fun onCreateViewHolder(parent: ViewGroup, viewType:       Int): PostViewHolder =\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PostViewHolder(layoutInflater.inflate           (R.layout.view_post_row, parent, false))\n    \u00a0\u00a0\u00a0\u00a0override fun getItemCount() = posts.size\n    \u00a0\u00a0\u00a0\u00a0override fun onBindViewHolder(holder: PostViewHolder,       position: Int) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0holder.bind(posts[position])\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun updatePosts(posts: List<PostEntity>) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.posts.clear()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.posts.addAll(posts)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.notifyDataSetChanged()\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0inner class PostViewHolder(containerView: View) :       RecyclerView.ViewHolder(containerView) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val titleTextView: TextView =           containerView.findViewById<TextView>            (R.id.view_post_row_title)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val bodyTextView: TextView = \n              containerView.findViewById<TextView>            (R.id.view_post_row_body)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun bind(postEntity: PostEntity) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bodyTextView.text = postEntity.body\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0titleTextView.text = postEntity.title\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MainActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0private lateinit var postAdapter: PostAdapter\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postAdapter = PostAdapter(LayoutInflater.from(this))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val recyclerView = findViewById<RecyclerView>          (R.id.activity_main_recycler_view)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recyclerView.adapter = postAdapter\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recyclerView.layoutManager = LinearLayoutManager(this)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val postRepository = (application as           RepositoryApplication).postRepository\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val postViewModel = ViewModelProvider(this, object :           ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?> create(modelClass:               Class<T>): T {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return PostViewModel(postRepository) as T\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}).get(PostViewModel::class.java)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postViewModel.getPosts().observe(this, Observer {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postAdapter.updatePosts(it)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    data class UiPost(\n    \u00a0\u00a0\u00a0\u00a0val title: String,\n    \u00a0\u00a0\u00a0\u00a0val body: String\n    )\n    ```", "```kt\n    sealed class Result {\n    \u00a0\u00a0\u00a0\u00a0object Loading : Result()\n    \u00a0\u00a0\u00a0\u00a0class Success(val uiPosts: List<UiPost>) : Result()\n    \u00a0\u00a0\u00a0\u00a0class Error(val throwable: Throwable) : Result()\n    }\n    ```", "```kt\n    class PostMapper {\n    \u00a0\u00a0\u00a0\u00a0fun serviceToEntity(post: Post): PostEntity {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return PostEntity(post.id, post.userId, post.title,           post.body)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun serviceToUi(post: Post): UiPost {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return UiPost(post.title, post.body)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    interface PostRepository {\n    \u00a0\u00a0\u00a0\u00a0fun getPosts(): LiveData<Result>\n    }\n    ```", "```kt\n    override fun getPosts(): LiveData<Result> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val result = MutableLiveData<Result>()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0result.postValue(Result.Loading)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postService.getPosts().enqueue(object :           Callback<List<Post>> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onFailure(call: Call<List<Post>>, t:               Throwable) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0result.postValue(Result.Error(t))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onResponse(call: Call<List<Post>>,               response: Response<List<Post>>) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (response.isSuccessful) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.body()?.let { posts ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0executor.execute {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postDao.insertPosts(posts.map                               { post ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postMapper.serviceToEntity(post)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0result.postValue(Result                               .Success(posts.map { post ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postMapper.serviceToUi(post)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0result.postValue(Result.Error                       (RuntimeException(\"Unexpected error\")))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return result\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postViewModel.getPosts().observe(this,           Observer { result ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when (result) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0is Result.Error -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Toast.makeText(applicationContext,                       R.string.error_message, Toast.LENGTH_LONG)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.show()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0result.throwable.printStackTrace()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0is Result.Loading -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// TODO show loading spinner\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0is Result.Success -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0postAdapter.updatePosts(result.uiPosts)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    ```", "```kt\n    class PostAdapter(private val layoutInflater: LayoutInflater) :\n    \u00a0\u00a0\u00a0\u00a0RecyclerView.Adapter<PostAdapter.PostViewHolder>() {\n    \u00a0\u00a0\u00a0\u00a0private val posts = mutableListOf<UiPost>()\n    \u00a0\u00a0\u00a0\u00a0override fun onCreateViewHolder(parent: ViewGroup, viewType:       Int): PostViewHolder =\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PostViewHolder(layoutInflater           .inflate(R.layout.view_post_row, parent, false))\n    \u00a0\u00a0\u00a0\u00a0override fun getItemCount(): Int = posts.size\n    \u00a0\u00a0\u00a0\u00a0override fun onBindViewHolder(holder: PostViewHolder,       position: Int) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0holder.bind(posts[position])\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun updatePosts(posts: List<UiPost>) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.posts.clear()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.posts.addAll(posts)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.notifyDataSetChanged()\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0inner class PostViewHolder(containerView: View) :       RecyclerView.ViewHolder(containerView) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val titleTextView: TextView =         containerView.findViewById<TextView>          (R.id.view_post_row_title)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val bodyTextView: TextView =           containerView.findViewById<TextView>            (R.id.view_post_row_body)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun bind(post: UiPost) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bodyTextView.text = post.body\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0titleTextView.text = post.title\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\nval prefs = getSharedPreferences(\"my-prefs-file\",   Context.MODE_PRIVATE)\n```", "```kt\nPreferenceManager.getDefaultSharedPreferences(context)\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0 val editor = prefs.edit()\n\u00a0\u00a0\u00a0\u00a0 editor.putBoolean(\"my_key_1\", true)\n\u00a0\u00a0\u00a0\u00a0 editor.putString(\"my_key_2\", \"my string\")\n\u00a0\u00a0\u00a0\u00a0 editor.putLong(\"my_key_3\", 1L)\n\u00a0\u00a0\u00a0\u00a0 editor.apply()\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0 val editor = prefs.edit()\n\u00a0\u00a0\u00a0\u00a0 editor.clear()\n\u00a0\u00a0\u00a0\u00a0 editor.apply()\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0 prefs.getBoolean(\"my_key_1\", false)\n\u00a0\u00a0\u00a0\u00a0 prefs.getString(\"my_key_2\", \"\")\n\u00a0\u00a0\u00a0\u00a0 prefs.getLong(\"my_key_3\", 0L)\n```", "```kt\n    \u00a0\u00a0\u00a0\u00a0implementation       \"androidx.constraintlayout:constraintlayout:2.0.4\"\n    \u00a0\u00a0\u00a0\u00a0def lifecycle_version = \"2.2.0\"\n    \u00a0\u00a0\u00a0\u00a0implementation \"androidx.lifecycle:lifecycle-      extensions:$lifecycle_version\"\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'junit:junit:4.12'\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'android.arch.core:core-testing:2.1.0'\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'org.mockito:mockito-core:2.23.0'\n    \u00a0\u00a0\u00a0\u00a0androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n    \u00a0\u00a0\u00a0\u00a0androidTestImplementation       'androidx.test.espresso:espresso-core:3.3.0'\n    ```", "```kt\n    const val KEY_TEXT = \"keyText\"\n    class PreferenceWrapper(private val sharedPreferences:   SharedPreferences) {\n    \u00a0\u00a0\u00a0\u00a0private val textLiveData = MutableLiveData<String>()\n    \u00a0\u00a0\u00a0\u00a0init {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sharedPreferences           .registerOnSharedPreferenceChangeListener { _, key ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when (key) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0KEY_TEXT -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0textLiveData.postValue(sharedPreferences                       .getString(KEY_TEXT, \"\"))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun saveText(text: String) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sharedPreferences.edit()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.putString(KEY_TEXT, text)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.apply()\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun getText(): LiveData<String> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0textLiveData.postValue(sharedPreferences           .getString(KEY_TEXT, \"\"))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return textLiveData\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class PreferenceApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0lateinit var preferenceWrapper: PreferenceWrapper\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0preferenceWrapper =           PreferenceWrapper(getSharedPreferences(\"prefs\",             Context.MODE_PRIVATE))\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    android:name=\".PreferenceApplication\"\n    ```", "```kt\n    class PreferenceViewModel(private val preferenceWrapper:   PreferenceWrapper) : ViewModel() {\n    \u00a0\u00a0\u00a0\u00a0fun saveText(text: String) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0preferenceWrapper.saveText(text)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun getText(): LiveData<String> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return preferenceWrapper.getText()\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    activity_main.xml\n    9\u00a0\u00a0\u00a0\u00a0<TextView\n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_text_view\"\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginTop=\"50dp\"\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintLeft_toLeftOf=\"parent\"\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintRight_toRightOf=\"parent\"\n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\" />\n    17\n    18\u00a0\u00a0\u00a0\u00a0<EditText\n    19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_edit_text\"\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"200dp\"\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:inputType=\"none\"\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintLeft_toLeftOf=\"parent\"\n    24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintRight_toRightOf=\"parent\"\n    25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toBottomOf=             \"@id/activity_main_text_view\" />\n    26\n    27\u00a0\u00a0\u00a0\u00a0<Button\n    28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_button\"\n    29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:inputType=\"none\"\n    32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:text=\"@android:string/ok\"\n    33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintLeft_toLeftOf=\"parent\"\n    34\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintRight_toRightOf=\"parent\"\n    35\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toBottomOf=            \"@id/activity_main_edit_text\" /> \n    The complete code for this step can be found at http://packt.live/39RhIj0.\n    ```", "```kt\n    class MainActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val preferenceWrapper = (application as         PreferenceApplication).preferenceWrapper\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val preferenceViewModel = ViewModelProvider(this, object           : ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?> create(modelClass:               Class<T>): T {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return PreferenceViewModel(preferenceWrapper)                   as T\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}).get(PreferenceViewModel::class.java)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0preferenceViewModel.getText().observe(this, Observer {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_text_view)           .text = it\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<Button>(R.id.activity_main_button)          .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0preferenceViewModel.saveText(findViewById<EditText>          (R.id.activity_main_edit_text).text.toString())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<PreferenceScreen xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\u00a0\u00a0\u00a0\u00a0<PreferenceCategory app:title=\"Primary settings\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<SwitchPreferenceCompat\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"work_offline\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"Work offline\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<Preference\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:icon=\"@mipmap/ic_launcher\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"my_key\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:summary=\"Summary\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"Title\" />\n\u00a0\u00a0\u00a0\u00a0</PreferenceCategory>\n</PreferenceScreen>\n```", "```kt\nclass MyPreferenceFragment : PreferenceFragmentCompat() {\n\u00a0\u00a0\u00a0\u00a0override fun onCreatePreferences(savedInstanceState: Bundle?,       rootKey: String?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setPreferencesFromResource(R.xml.settings_preferences,           rootKey)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\nfindPreference<>(key)\n```", "```kt\nval preferenceScreen =   preferenceManager.createPreferenceScreen(context)\n```", "```kt\nval editTextPreference = EditTextPreference(context)\neditTextPreference.key = \"key\"\neditTextPreference.title = \"title\"\nval preferenceScreen = preferenceManager.createPreferenceScreen(context)\npreferenceScreen.addPreference(editTextPreference)\nsetPreferenceScreen(preferenceScreen)\n```", "```kt\n    implementation 'androidx.preference:preference-ktx:1.1.1'\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <resources>\n    \u00a0\u00a0\u00a0\u00a0<string name=\"key_mobile_data\"       translatable=\"false\">mobile_data</string>\n    </resources>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <PreferenceScreen xmlns:app=  \"http://schemas.android.com/apk/res-auto\">\n    \u00a0\u00a0\u00a0\u00a0<SwitchPreferenceCompat\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"@string/key_mobile_data\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"@string/mobile_data\" />\n    \u00a0\u00a0\u00a0\u00a0<Preference\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:selectable=\"false\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:summary=\"@string/manage_data_wisely\" />\n    </PreferenceScreen>\n    ```", "```kt\n    <string name=\"mobile_data\">Mobile data</string>\n    <string name=\"manage_data_wisely\">Manage your data   wisely</string>\n    ```", "```kt\n    class MorePreferenceFragment : PreferenceFragmentCompat() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreatePreferences(savedInstanceState: Bundle?,       rootKey: String?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setPreferencesFromResource(R.xml.preferences_more,           rootKey)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    <string name=\"key_network_scan\"   translatable=\"false\">network_scan</string>\n    <string name=\"key_frequency\"   translatable=\"false\">frequency</string>\n    <string name=\"key_ip_address\"   translatable=\"false\">ip_address</string>\n    <string name=\"key_domain\" translatable=\"false\">domain</string>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <PreferenceScreen xmlns:app=  \"http://schemas.android.com/apk/res-auto\">\n    \u00a0\u00a0\u00a0\u00a0<PreferenceCategory app:title=\"@string/connectivity\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<SwitchPreferenceCompat\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"@string/key_network_scan\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"@string/network_scan\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<SeekBarPreference\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"@string/key_frequency\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"@string/frequency\" />\n    \u00a0\u00a0\u00a0\u00a0</PreferenceCategory>\n    \u00a0\u00a0\u00a0\u00a0<PreferenceCategory app:title=\"@string/configuration\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<EditTextPreference\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"@string/key_ip_address\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"@string/ip_address\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<EditTextPreference\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:key=\"@string/key_domain\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:title=\"@string/domain\" />\n    \u00a0\u00a0\u00a0\u00a0</PreferenceCategory>\n    PreferenceFragment and another. By default, the system will do the transition for us, but there is a way to override this behavior in case we want to update our UI.\n    ```", "```kt\n    <string name=\"connectivity\">Connectivity</string>\n    <string name=\"network_scan\">Network scan</string>\n    <string name=\"frequency\">Frequency</string>\n    <string name=\"configuration\">Configuration</string>\n    <string name=\"ip_address\">IP Address</string>\n    <string name=\"domain\">Domain</string>\n    <string name=\"more\">More</string>\n    ```", "```kt\n    class SettingsPreferenceFragment : PreferenceFragmentCompat() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreatePreferences(savedInstanceState: Bundle?,       rootKey: String?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setPreferencesFromResource(R.xml.preferences_settings,           rootKey)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <FrameLayout   xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    \u00a0\u00a0\u00a0\u00a0xmlns:tools=\"http://schemas.android.com/tools\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_height=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0tools:context=\".MainActivity\"\n    \u00a0\u00a0\u00a0\u00a0android:id=\"@+id/fragment_container\"/>\n    ```", "```kt\n    class MainActivity : AppCompatActivity(),\n    \u00a0\u00a0\u00a0\u00a0onPreferenceStartFragment from the PreferenceFragmentCompat.OnPreferenceStartFragmentCallback interface. This allows us to intercept the switch between fragments and add our own behavior. The first half of the method will use the inputs of the method to create a new instance of MorePreferenceFragment, while the second half performs the fragment transaction. Then, we return true because we have handled the transition\u00a0ourselves.\n    ```", "```kt\n    class SettingsPreferenceFragment : PreferenceFragmentCompat() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreatePreferences(savedInstanceState: Bundle?,       rootKey: String?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setPreferencesFromResource(R.xml.preferences_settings,           rootKey)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val ipAddressPref =           findPreference<EditTextPreference>(getString             (R.string.key_ip_address))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ipAddressPref?.setOnPreferenceChangeListener {           preference, newValue ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0preference.summary = newValue.toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0true\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val domainPref = findPreference<EditTextPreference>          (getString(R.string.key_domain))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0domainPref?.setOnPreferenceChangeListener { preference,           newValue ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0preference.summary = newValue.toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0true\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val sharedPrefs = PreferenceManager           .getDefaultSharedPreferences(requireContext())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ipAddressPref?.summary = sharedPrefs           .getString(getString(R.string.key_ip_address), \"\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0domainPref?.summary = sharedPrefs           .getString(getString(R.string.key_domain), \"\")\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val cacheDir = context.cacheDir\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val fileToReadFrom = File(cacheDir, \"my-file.txt\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val size = fileToReadFrom.length().toInt()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val bytes = ByteArray(size)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val tmpBuff = ByteArray(size)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val fis = FileInputStream(fileToReadFrom)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var read = fis.read(bytes, 0, size)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (read < size) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var remain = size - read\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while (remain > 0) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0read = fis.read(tmpBuff, 0, remain)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.arraycopy(tmpBuff, 0, bytes, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0size - remain, read)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0remain -= read\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (e: IOException) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw e\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} finally {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fis.close()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val bytesToWrite = ByteArray(100)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val cacheDir = context.cacheDir\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val fileToWriteIn = File(cacheDir, \"my-file.txt\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!fileToWriteIn.exists()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fileToWriteIn.createNewFile()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val fos = FileOutputStream(fileToWriteIn)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fos.write(bytesToWrite)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fos.close()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (e: Exception) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0e.printStackTrace()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n<paths xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\u00a0\u00a0\u00a0\u00a0<files-path name=\"my-visible-name\" path=\"/my-folder-name\" />\n</paths>\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val assetManager = context.assets\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val root = \"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val files = assetManager.list(root)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0files?.forEach {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val inputStream = assetManager.open(root + it)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n    implementation 'commons-io:commons-io:2.6'\n    testImplementation 'org.mockito:mockito-core:2.23.0'\n    ```", "```kt\n    class AssetFileManager(private val assetManager: AssetManager) {\n    \u00a0\u00a0\u00a0\u00a0fun getMyAppFileInputStream() =       assetManager.open(\"my-app-file.txt\")\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <paths>\n    \u00a0\u00a0\u00a0\u00a0<external-files-path name=\"docs\" path=\"docs/\"/>\n    </paths>\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<provider\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:name=\"androidx.core.content.FileProvider\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:authorities=\"com.android.testable.files\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:exported=\"false\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:grantUriPermissions=\"true\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<meta-data\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:name=\"android.support \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.FILE_PROVIDER_PATHS\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:resource=\"@xml/file_provider_paths\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</provider>\n    ```", "```kt\n    class ProviderFileManager(\n    \u00a0\u00a0\u00a0\u00a0private val context: Context,\n    \u00a0\u00a0\u00a0\u00a0getDocsFolder will return the path to the docs folder we defined in the XML. If the folder does not exist, then it will be created. The writeStream method will extract the URI for the file we wish to save and, using the Android ContentResolver class, will give us access to the OutputStream class of the file we will be saving into. Notice that FileToUriMapper doesn't exist yet. The code is moved into a separate class in order to make this class testable.\n    ```", "```kt\n    class FileToUriMapper {\n    \u00a0\u00a0\u00a0\u00a0fun getUriFromFile(context: Context, file: File): Uri {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getUriForFile method is part of the FileProvider class and its role is to convert the path of a file into a URI that can be used by ContentProviders/ContentResolvers to access data. Because the method is static, it prevents us from testing properly.Notice the test rule we used. This comes in handy when testing files. What it does is supply the test with the necessary files and folders and when the test finishes, it will remove all the files and folders.\n    ```", "```kt\n    activity_main.xml\n    9\u00a0\u00a0\u00a0\u00a0<Button\n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_file_provider\"\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginTop=\"200dp\"\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:text=\"@string/file_provider\"\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintEnd_toEndOf=\"parent\"\n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"parent\"\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toTopOf=\"parent\" />\n    18\n    19\u00a0\u00a0\u00a0\u00a0<Button\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_saf\"\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginTop=\"50dp\"\n    24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:text=\"@string/saf\"\n    25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintEnd_toEndOf=\"parent\"\n    26\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintStart_toStartOf=\"parent\"\n    27\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app:layout_constraintTop_toBottomOf=            \"@id/activity_main_file_provider\" /> \n    The complete code for this step can be found at http://packt.live/3bTNmz4.\n    ```", "```kt\n    class MainActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0private val assetFileManager: AssetFileManager by lazy {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0AssetFileManager(applicationContext.assets)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0private val providerFileManager: ProviderFileManager by lazy {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProviderFileManager(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationContext,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FileToUriMapper(),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Executors.newSingleThreadExecutor()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<Button>(R.id.activity_main_file_provider)          .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val newFileName = \"Copied.txt\"\n    MainActivity to create our objects and inject data into the different classes we have. If we execute this code and click the FileProvider button, we don't see an output on the UI. However, if we look with Android Device File Explorer, we can locate where the file was saved. The path may be different on different devices and operating systems. The paths could be as follows:*   `mnt/sdcard/Android/data/<package_name>/files/docs`*   `sdcard/Android/data/<package_name>/files/docs`*   `storage/emulated/0/Android/data/<package_name>/files/docs`\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<Button>(R.id.activity_main_saf)      .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (Build.VERSION.SDK_INT >=               Build.VERSION_CODES.KITKAT) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val intent =                   Intent(Intent.ACTION_CREATE_DOCUMENT).apply {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0addCategory(Intent.CATEGORY_OPENABLE)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type = \"text/plain\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0putExtra(Intent.EXTRA_TITLE, \"Copied.txt\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startActivityForResult(intent,                   REQUEST_CODE_CREATE_DOC)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0override fun onActivityResult(requestCode: Int, resultCode:       Int, data: Intent?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (requestCode == REQUEST_CODE_CREATE_DOC           && resultCode == Activity.RESULT_OK) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data?.data?.let { uri ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onActivityResult(requestCode, resultCode, data)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0fun writeStreamFromUri(name: String, inputStream:       InputStream, uri:Uri){\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0executor.execute {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val outputStream =               context.contentResolver.openOutputStream(uri, \"rw\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IOUtils.copy(inputStream, outputStream)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (requestCode == REQUEST_CODE_CREATE_DOC           && resultCode == Activity.RESULT_OK) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data?.data?.let { uri ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val newFileName = \"Copied.txt\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0providerFileManager.writeStreamFromUri(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newFileName,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0assetFileManager.getMyAppFileInputStream(),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0uri\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startActivityForResult(intent, REQUEST_IMAGE_CAPTURE)\n```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val intent =               Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 intent.data = photoUri\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sendBroadcast(intent)\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val paths = arrayOf(\"path1\", \"path2\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val mimeTypes= arrayOf(\"type1\", \"type2\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MediaScannerConnection.scanFile(context,paths,           mimeTypes) { path, uri ->\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val contentValues = ContentValues()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0contentValues.put(MediaStore.Images.ImageColumns.TITLE,           \"my title\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0contentValues.put(MediaStore.Images.ImageColumns               .DATE_ADDED, timeInMillis)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0contentValues.put(MediaStore.Images.ImageColumns               .MIME_TYPE, \"image/*\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0contentValues.put(MediaStore.Images.ImageColumns               .DATA, \"my-path\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val newUri = contentResolver.insert(MediaStore.Video               .Media.EXTERNAL_CONTENT_URI, contentValues)\n                    newUri?.let { \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val outputStream = contentResolver                 .openOutputStream(newUri)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Copy content in outputstream\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0implementation 'commons-io:commons-io:2.6'\n    \u00a0\u00a0\u00a0\u00a0testImplementation 'org.mockito:mockito-core:2.23.0'\n    ```", "```kt\n    ...\n    compileSdkVersion 30\n    \u00a0\u00a0\u00a0\u00a0defaultConfig {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetSdkVersion 30\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0}\n    ...\n    ```", "```kt\n    <uses-permission\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:maxSdkVersion=\"28\" />\n    ```", "```kt\n    class FileHelper(private val context: Context) {\n    \u00a0\u00a0\u00a0\u00a0fun getUriFromFile(file: File): Uri {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return FileProvider.getUriForFile(context,           \"com.android.testable.camera\", file)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0fun getPicturesFolder(): String =       Environment.DIRECTORY_PICTURES\n\n    \u00a0\u00a0\u00a0\u00a0fun getVideosFolder(): String = Environment.DIRECTORY_MOVIES\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <paths>\n    \u00a0\u00a0\u00a0\u00a0<external-path name=\"photos\" path=\"Android/data       /com.android.testable.camera/files/Pictures\"/>\n    \u00a0\u00a0\u00a0\u00a0<external-path name=\"videos\" path=\"Android/data       /com.android.testable.camera/files/Movies\"/>\n    </paths>\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<provider\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:name=\"androidx.core.content.FileProvider\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:authorities=\"com.android.testable.camera\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:exported=\"false\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:grantUriPermissions=\"true\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<meta-data\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:name=\"android.support                   .FILE_PROVIDER_PATHS\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:resource=\"@xml/file_provider_paths\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</provider>\n    ```", "```kt\n    data class FileInfo(\n    \u00a0\u00a0\u00a0\u00a0val uri: Uri,\n    \u00a0\u00a0\u00a0\u00a0val file: File,\n    \u00a0\u00a0\u00a0\u00a0val name: String,\n    \u00a0\u00a0\u00a0\u00a0val relativePath:String,\n    \u00a0\u00a0\u00a0\u00a0val mimeType:String\n    )\n    ```", "```kt\n    MediaContentHelper.kt\n    7\u00a0\u00a0\u00a0\u00a0class MediaContentHelper {\n    8\n    9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun getImageContentUri(): Uri =\n    10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (android.os.Build.VERSION.SDK_INT >=                 android.os.Build.VERSION_CODES.Q) {\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MediaStore.Images.Media.getContentUri                     (MediaStore.VOLUME_EXTERNAL_PRIMARY)\n    12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else {\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MediaStore.Images.Media.EXTERNAL_CONTENT_URI\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    15\n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun generateImageContentValues(fileInfo: FileInfo)             = ContentValues().apply {\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.put(MediaStore.Images.Media\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.DISPLAY_NAME, fileInfo.name)\n    18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (android.os.Build.VERSION.SDK_INT >= \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android.os.Build.VERSION_CODES.Q) {\n    19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.put(MediaStore.Images.Media                     .RELATIVE_PATH, fileInfo.relativePath)\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.put(MediaStore.Images.Media             .MIME_TYPE, fileInfo.mimeType)\n    22\u00a0\u00a0\u00a0\u00a0}\n    The complete code for this step can be found at http://packt.live/3ivwekp.\n    ```", "```kt\n    ProviderFileManager.kt\n    12\u00a0\u00a0\u00a0\u00a0class ProviderFileManager(\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val context: Context,\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val fileHelper: FileHelper,\n    15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val contentResolver: ContentResolver,\n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val executor: Executor,\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private val mediaContentHelper: MediaContentHelper\n    18\u00a0\u00a0\u00a0\u00a0) {\n    19\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun generatePhotoUri(time: Long): FileInfo {\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val name = \"img_$time.jpg\"\n    22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val file = File(\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.getExternalFilesDir(fileHelper                     .getPicturesFolder()),\n    24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name\n    25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    26\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return FileInfo(\n    27\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fileHelper.getUriFromFile(file),\n    28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0file,\n    29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name,\n    30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fileHelper.getPicturesFolder(),\n    31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"image/jpeg\"\n    32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    The complete code for this step can be found at http://packt.live/2XXB9Bu.\n    ```", "```kt\n    activity_main.xml\n    10\u00a0\u00a0\u00a0\u00a0<Button\n    11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/photo_button\"\n    12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:text=\"@string/photo\" />\n    15\n    16\u00a0\u00a0\u00a0\u00a0<Button\n    17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/video_button\"\n    18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_marginTop=\"5dp\"\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:text=\"@string/video\" />\n    The complete code for this step can be found at http://packt.live/3qDSyLU.\n    ```", "```kt\n    MainActivity.kt\n    14\u00a0\u00a0\u00a0\u00a0class MainActivity : AppCompatActivity() {\n    15 \n    16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0companion object {\n    17\n    18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private const val REQUEST_IMAGE_CAPTURE = 1\n    19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private const val REQUEST_VIDEO_CAPTURE = 2\n    20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private const val REQUEST_EXTERNAL_STORAGE = 3\n    21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    22\n    23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private lateinit var providerFileManager:             ProviderFileManager\n    24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private var photoInfo: FileInfo? = null\n    25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private var videoInfo: FileInfo? = null\n    26\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private var isCapturingVideo = false\n    27\n    28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0providerFileManager =\n    32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProviderFileManager(\n    33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationContext,\n    34\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0FileHelper(applicationContext),\n    35\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0contentResolver,\n    36\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Executors.newSingleThreadExecutor(),\n    37\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MediaContentHelper()\n    38\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    The complete code for this step can be found at http://packt.live/3ivUTpm.\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0override fun onActivityResult(requestCode: Int,       resultCode: Int, data: Intent?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when (requestCode) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0REQUEST_IMAGE_CAPTURE -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0providerFileManager.insertImageToStore(photoInfo)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0REQUEST_VIDEO_CAPTURE -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0providerFileManager.insertVideoToStore(videoInfo)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else -> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onActivityResult(requestCode,                   resultCode, data)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n{\n\u00a0\u00a0\u00a0\u00a0\"message\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"https://images.dog.ceo/breeds/hound-          afghan/n02088094_4837.jpg\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"https://images.dog.ceo/breeds/hound-          basset/n02088238_13908.jpg\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"https://images.dog.ceo/breeds/hound-          ibizan/n02091244_3939.jpg\"\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0\"status\": \"success\"\n}\n```"]