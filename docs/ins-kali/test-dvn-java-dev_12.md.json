["```java\napply plugin: 'java'\napply plugin: 'org.springframework.boot'\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\nbootRepackage.executable = true\n\nrepositories {\n  mavenLocal()\n  mavenCentral()\n}\n\ndependencies {\n  compile 'org.springframework.boot:spring-boot-starter-actuator'\n  compile 'org.springframework.boot:spring-boot-starter-web'\n\n  testCompile 'junit:junit:4.12'\n  testCompile 'org.hamcrest:hamcrest-all:1.3'\n  testCompile 'org.mockito:mockito-core:1.10.19'\n}\n```", "```java\n@Service\npublic class ThimblerigService {\n  private RandomNumberGenerator randomNumberGenerator;\n\n  @Autowired\n  ThimblerigService(RandomNumberGenerator randomNumberGenerator) {\n    this.randomNumberGenerator = randomNumberGenerator;\n  }\n\n  public BetResult placeBet(int position, BigDecimal betAmount) {\n    ...\n  }\n}\n```", "```java\n@RestController\n@RequestMapping(\"/v1/thimblerig\")\npublic class ThimblerigAPI {\n  private ThimblerigService thimblerigService;\n\n  @Autowired\n  public ThimblerigAPI(ThimblerigService thimblerigService) {\n    this.thimblerigService = thimblerigService;\n  }\n\n  @ResponseBody\n  @PostMapping(value = \"/placeBet\",\n      consumes = MediaType.APPLICATION_JSON_VALUE)\n  public BetReport placeBet(@RequestBody NewBet bet) {\n    BetResult betResult =\n        thimblerigService.placeBet(bet.getPick(), bet.getAmount());\n    return new BetReport(betResult);\n  }\n}\n```", "```java\npublic class ThimblerigServiceTest {\n  @Test\n  public void placingBetDoesNotAcceptPositionsLessThanOne() {\n    ...\n  }\n\n  @Test\n  public void placingBetDoesNotAcceptPositionsGreaterThan3() {\n    ...\n  }\n\n  @Test\n  public void placingBetOnlyAcceptsAmountsGreaterThanZero() {\n    ...\n  }\n\n  @Test\n  public void onFailedBetThePrizeIsZero() {\n    ...\n  }\n\n  @Test\n  public void whenThePositionIsGuessedCorrectlyThePrizeIsDoubleTheBet() {\n    ...\n  }\n}\n```", "```java\nVagrant.configure(\"2\") do |config|\n\n  config.vm.box = \"ubuntu/trusty64\"\n  config.vm.box_check_update = false\n\n  config.vm.network \"forwarded_port\", guest: 8080, host: 9090\n\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.gui = false\n    vb.memory = 2048\n  end\n\n  config.vm.provision \"docker\" do |d|\n    d.run \"jenkins/jenkins\",\n      args: \"-p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home\"\n  end\nend\n```", "```java\n$> vagrant up\n```", "```java\n$> vagrant ssh\n$> docker exec jenkins-jenkins cat /var/jenkins_home/secrets/initialAdminPassword\n```", "```java\n$> chmod u+x thimblerig-service.jar\n$> ./thimblerig-service.jar \n```", "```java\n$> curl http://localhost:8080/health\n{\"status\":\"UP\"}\n```"]