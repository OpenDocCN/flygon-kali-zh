["```js\n.form-area {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n```", "```js\n.title {\n  margin: 20px;\n}\n.form-group {\n  min-width: 500px;\n}\n```", "```js\n@media only screen and (max-width: 736px) {\n  .form-group {\n    min-width: 90vw;\n  }\n}\n```", "```js\n.loading-indicator {\n  max-height: 50px;\n  max-width: 50px;\n}\n```", "```js\n<form action=\"/register\" method=\"post\" id=\"registrationForm\">\n```", "```js\nhttp://localhost:8080/register?username=&email=&phone=&age=&profession=school&experience=1&comment=\n```", "```js\nclass Home {\n  constructor() {\n\n  }\n\n}\n\nwindow.addEventListener(\"load\", () => {\n new Home();\n});\n```", "```js\n this.$form = document.querySelector('#registrationForm');\n this.$username = document.querySelector('#username');\n this.$email = document.querySelector('#email');\n this.$phone = document.querySelector('#phone');\n this.$age = document.querySelector('#age');\n this.$profession = document.querySelector('#profession');\n this.$experience = document.querySelector('#experience');\n this.$comment = document.querySelector('#comment');\n this.$submit = document.querySelector('#submit');\n this.$loadingIndicator = document.querySelector('#loadingIndicator');\n```", "```js\nthis.$form.addEventListener('submit', event => {\n  this.onFormSubmit(event);\n});\n```", "```js\nonFormSubmit(event) {\n  event.preventDefault();\n}\n```", "```js\ngetFormValues() {\n  return {\n    username: this.$username.value,\n    email: this.$email.value,\n    phone: this.$phone.value,\n    age: this.$age.value,\n    profession: this.$profession.value,\n    experience: parseInt(document.querySelector('input[name=\"experience\"]:checked').value),\n    comment: this.$comment.value,\n  };\n}\n```", "```js\nonFormSubmit(event) {\n  event.preventDefault();\n  const formValues = this.getFormValues();\n}\n```", "```js\n.\n\u251c\u2500\u2500 about.js\n\u251c\u2500\u2500 general.js\n\u251c\u2500\u2500 home.js\n\u251c\u2500\u2500 services\n\u2502   \u2514\u2500\u2500 formValidation\n\u2502       \u2514\u2500\u2500 validateRegistrationForm.js\n\u2514\u2500\u2500 status.js\n```", "```js\nexport default function validateRegistrationForm(formValues) {\n}\n```", "```js\nfunction validateUserName(name) {\n  return name.length > 3 ? true: false;\n}\n```", "```js\nfunction validateUserName(name) {\n  return name.length > 3;\n}\n```", "```js\nconst pattern = /^a+/\n```", "```js\npattern.test('alpha') // this will return true\npattern.test('beta') // this will return false\n```", "```js\nfunction validateEmail(email) {\n  const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\ [\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return emailRegex.test(email);\n}\n```", "```js\nfunction validatePhone(phone) {\n  const phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  return phoneRegex.test(phone);\n}\n```", "```js\nfunction validateAge(age) {\n  return age >= 10 && age <= 25;\n}\n```", "```js\nfunction validateProfession(profession) {\n  const acceptedValues = ['school','college','trainee','employee'];\n  return acceptedValues.indexOf(profession) > -1;\n}\n```", "```js\nfunction validateExperience(experience) {\n  return experience > 0 && experience < 4;\n}\n```", "```js\nexport default function validateRegistrationForm(formValues) {\n\n  const result = {\n    username: validateUserName(formValues.username),\n    email: validateEmail(formValues.email),\n    phone: validatePhone(formValues.phone),\n    age: validateAge(formValues.age),\n    profession: validateProfession(formValues.profession),\n    experience: validateExperience(formValues.experience),\n  };\n\n}\n```", "```js\nlet field, isValid = true;\nfor(field in result) {\n  isValid = isValid && result[field];\n}\n```", "```js\nexport default function validateRegistrationForm(formValues) {\n  ...\n  ...\n  return { isValid, result };\n}\n```", "```js\nimport validateRegistrationForm from './services/formValidation/validateRegistrationForm';\n```", "```js\nonFormSubmit(event) {\n  event.preventDefault();\n\n  const formValues = this.getFormValues();\n  const formStatus = validateRegistrationForm(formValues);\n\n  if(formStatus.isValid) {\n    this.clearErrors();\n    this.submitForm(formValues);\n  } else {\n    this.clearErrors();\n    this.highlightErrors(formStatus.result);\n  }\n}\n```", "```js\nclearErrors() {\n  this.$username.parentElement.classList.remove('has-error');\n  this.$phone.parentElement.classList.remove('has-error');\n  this.$email.parentElement.classList.remove('has-error');\n  this.$age.parentElement.classList.remove('has-error');\n  this.$profession.parentElement.classList.remove('has-error');\n  this.$experience.parentElement.classList.remove('has-error');\n}\n```", "```js\nhighlightErrors(result) {\n  if(!result.username) {\n    this.$username.parentElement.classList.add('has-error');\n  }\n  if(!result.phone) {\n    this.$phone.parentElement.classList.add('has-error');\n  }\n  if(!result.email) {\n    this.$email.parentElement.classList.add('has-error');\n  }\n  if(!result.age) {\n    this.$age.parentElement.classList.add('has-error');\n  }\n  if(!result.profession) {\n    this.$profession.parentElement.classList.add('has-error');\n  }\n  if(!result.experience) {\n    this.$experience.parentElement.classList.add('has-error');\n  }\n}\n```", "```js\nsubmitForm(formValues) {\n}\n```", "```js\nRoute: /registration,\nMethod: POST,\nBody: the form data in JSON format\n{\n  \"username\":\"Test User\",\n  \"email\":\"mail@test.com\",\n  \"phone\":\"123-456-7890\",\n  \"age\":\"16\",\n  \"profession\":\"school\",\n  \"experience\":\"1\",\n  \"comment\":\"Some comment from user\"\n} If registration is success:\nstatus code: 200\nresponse: { \"message\": \"Test User is Registered Successfully\" }\n```", "```js\nasyncOne('one', () => {\n  ...\n  asyncTwo('two', () => {\n    ...\n    asyncThree('three', () => {\n      ...\n      asyncFour('four', () => {\n      });\n    });\n  });\n});\n```", "```js\nnew Promise((resolve, reject) => {\n  // Some asynchronous logic\n  resolve(5);\n});\n```", "```js\nfunction theAsyncCode() {\n  return new Promise((resolve, reject) => {\n    console.log('The Async Code executed!');\n    resolve(5);\n  });\n}\n```", "```js\nfunction onlyAfterAsync(result) {\n  console.log('Now onlyAfterAsync is executing...');\n  console.log(`Final result of execution - ${result}`);\n}\n```", "```js\ntheAsyncCode()\n.then(result => onlyAfterAsync(result))\n.catch(error => console.error(error))\n```", "```js\nfunction theAsyncCode2(data) {\n  return new Promise((resolve, reject) => {\n    console.log('The Async Code 2 executed');\n    resolve(data);\n  });\n}\n```", "```js\ntheAsyncCode()\n.then(data => theAsyncCode2(data))\n.then(result => onlyAfterAsync(result))\n.catch(error => console.error(error));\n```", "```js\ntheAsyncCode()\n.then(theAsyncCode2)\n.then(onlyAfterAsync)\n.catch(console.error);\n```", "```js\n.\n\u251c\u2500\u2500 api\n\u2502   \u2514\u2500\u2500 apiCall.js\n\u2514\u2500\u2500 formValidation\n    \u2514\u2500\u2500 validateRegistrationForm.js\n```", "```js\nexport default function apiCall(route, body = {}, method='GET') {\n}\n```", "```js\napiCall('/registration) // values of body = {} and method = 'GET' \n```", "```js\napiCall('/registration', {'a': 5}, 'POST'); // values of body = {'a': 5} and method = 'POST'\n```", "```js\nexport default function apiCall(route, body = {}, method='GET') {\n\n  const request = new Promise((resolve, reject) => {\n    // Code for fetch will be written here\n  });\n\n}\n```", "```js\nconst headers = new Headers({\n  'Content-Type': 'application/json',\n});\n```", "```js\nconst requestDetails = {\n  method,\n  mode: 'cors',\n  headers,\n};\n```", "```js\nif(method !== 'GET') requestDetails.body = JSON.stringify(body);\n```", "```js\nfunction handleErrors(response) {\n  if(response.ok) {\n    return response.json();\n  } else {\n    throw Error(response.statusText);\n  }\n}\n\nfetch(`${SERVER_URL}/${route}`, requestDetails)\n  .then(response => handleErrors(response))\n  .then(data => resolve(data))\n  .catch(err => reject(err));\n```", "```js\nfetch(`${SERVER_URL}/${route}`, requestDetails)\n  .then(handleErrors)\n  .then(resolve)\n  .catch(reject);\n```", "```js\nconst request = new Promise((resolve, reject) => {\n....\n});\n\nconst timeout = new Promise((request, reject) => {\n  setTimeout(reject, timeoutDuration, `Request timed out!`);\n});\n```", "```js\nconst  timeoutDuration = 5000;\n```", "```js\nreturn new Promise((resolve, reject) => {\n  Promise.race([request, timeout])\n    .then(resolve)\n    .catch(reject);\n});\n```", "```js\nsubmitForm(formValues) {\n  this.$submit.classList.add('hidden');\n  this.$loadingIndicator.classList.remove('hidden');\n}\n```", "```js\nimport apiCall from './services/api/apiCall';\nimport toastr from 'toastr';\nimport '../../node_modules/toastr/toastr.less';\n```", "```js\napiCall('registration', formValues, 'POST')\n  .then(response => {\n    this.$submit.classList.remove('hidden');\n    this.$loadingIndicator.classList.add('hidden');\n    toastr.success(response.message);\n    this.resetForm(); // For clearing the form\n  })\n  .catch(() => {\n    this.$submit.classList.remove('hidden');\n    this.$loadingIndicator.classList.add('hidden');\n    toastr.error('Error!');\n  });\n```", "```js\nresetForm() {\n  this.$username.value = '';\n  this.$email.value = '';\n  this.$phone.value = '';\n  this.$age.value = '';\n  this.$profession.value = 'school';\n  this.$experience.checked = true;\n  this.$comment.value = '';\n}\n```", "```js\n<div id=\"loadingIndicator\">\n  <p>Data loading...</p>\n  <image src=\"./src/assets/images/loading.gif\" class=\"loading-indicator\"></image>\n</div>\n```", "```js\n<div id=\"loadingError\" class=\"hidden\">\n  <h3>Unable to load data...Try refreshing the page.</h3>\n</div>\n```", "```js\n<ul class=\"nav nav-tabs hidden\" id=\"tabArea\">\n  <li role=\"presentation\" class=\"active\"><a href=\"\" id=\"experienceTab\">Experience</a></li>\n  <li role=\"presentation\"><a href=\"\" id=\"professionTab\">Profession</a></li>\n  <li role=\"presentation\"><a href=\"\" id=\"ageTab\">Age</a></li>\n</ul>\n```", "```js\n<div class=\"chart-area hidden\" id=\"chartArea\">\n  <canvas id=\"experienceChart\"></canvas>\n  <canvas id=\"professionChart\"></canvas>\n  <canvas id=\"ageChart\"></canvas>\n</div>\n```", "```js\nclass Status {\n  constructor() {\n    this.$experienceTab = document.querySelector('#experienceTab');\n    this.$professionTab = document.querySelector('#professionTab');\n    this.$ageTab = document.querySelector('#ageTab');\n\n    this.$ageCanvas = document.querySelector('#ageChart');\n    this.$professionCanvas = document.querySelector('#professionChart');\n    this.$experienceCanvas = document.querySelector('#experienceChart');\n\n    this.$loadingIndicator = document.querySelector('#loadingIndicator');\n    this.$tabArea = document.querySelector('#tabArea');\n    this.$chartArea = document.querySelector('#chartArea');\n\n    this.$errorMessage = document.querySelector('#loadingError');\n\n    this.statisticData; // variable to store data from the server\n }\n\n}\n```", "```js\nwindow.addEventListener(\"load\", () => {\n  new Status();\n});\n```", "```js\nRoute: /statistics,\nMethod: GET,  Server Response on Success:\nstatus code: 200\nresponse: {\"experience\":[35,40,25],\"profession\":[30,40,20,10],\"age\":[30,60,10]}\n```", "```js\nimport apiCall from './services/api/apiCall';\n```", "```js\nloadData() {\n  apiCall('statistics')\n    .then(response => {\n      this.statisticData = response;\n\n      this.$loadingIndicator.classList.add('hidden');\n      this.$tabArea.classList.remove('hidden');\n      this.$chartArea.classList.remove('hidden');\n    })\n    .catch(() => {\n      this.$loadingIndicator.classList.add('hidden');\n      this.$errorMessage.classList.remove('hidden');\n    });\n}\n```", "```js\nconstructor() {\n  ...\n  this.loadData();\n}\n```", "```js\nimport Chart from 'chart.js';\n```", "```js\nnew Chart($canvas, {type: 'pie', data});\n```", "```js\n{\n  datasets: [{\n    data: [],\n    backgroundColor: [],\n    borderColor: [],\n  }],\n  labels: []\n}\n```", "```js\nloadExperience() {\n  const data = {\n    datasets: [{\n      data: this.statisticData.experience,\n      backgroundColor:[\n        'rgba(255, 99, 132, 0.6)',\n        'rgba(54, 162, 235, 0.6)',\n        'rgba(255, 206, 86, 0.6)',\n      ],\n      borderColor: [\n        'white',\n        'white',\n        'white',\n      ]\n    }],\n    labels: [\n      'Beginner',\n      'Intermediate',\n      'Advanced'\n    ]\n  };\n  new Chart(this.$experienceCanvas,{\n    type: 'pie',\n    data,\n  });\n}\n```", "```js\nloadProfession() {\n  const data = {\n    datasets: [{\n      data: this.statisticData.profession,\n      backgroundColor:[\n        'rgba(255, 99, 132, 0.6)',\n        'rgba(54, 162, 235, 0.6)',\n        'rgba(255, 206, 86, 0.6)',\n        'rgba(75, 192, 192, 0.6)',\n      ],\n      borderColor: [\n        'white',\n        'white',\n        'white',\n        'white',\n      ]\n    }],\n    labels: [\n      'School Students',\n      'College Students',\n      'Trainees',\n      'Employees'\n    ]\n  };\n  new Chart(this.$professionCanvas,{\n    type: 'pie',\n    data,\n  });\n}\n```", "```js\nloadAge() {\n  const data = {\n    datasets: [{\n      data: this.statisticData.age,\n      backgroundColor:[\n        'rgba(255, 99, 132, 0.6)',\n        'rgba(54, 162, 235, 0.6)',\n        'rgba(255, 206, 86, 0.6)',\n      ],\n      borderColor: [\n        'white',\n        'white',\n        'white',\n      ]\n    }],\n    labels: [\n      '10-15 years',\n      '15-20 years',\n      '20-25 years'\n    ]\n  };\n  new Chart(this.$ageCanvas,{\n    type: 'pie',\n    data,\n  });\n}\n```", "```js\nloadData() {\n  apiCall('statistics')\n    .then(response => {\n      ...\n      this.loadAge();\n      this.loadExperience();\n      this.loadProfession();\n     })\n...\n}\n```", "```js\n.chart-area {\n  margin: 25px;\n  max-width: 600px;\n}\n```", "```js\nhideCharts() {\n  this.$experienceTab.parentElement.classList.remove('active');\n  this.$professionTab.parentElement.classList.remove('active');\n  this.$ageTab.parentElement.classList.remove('active');\n  this.$ageCanvas.classList.add('hidden');\n  this.$professionCanvas.classList.add('hidden');\n  this.$experienceCanvas.classList.add('hidden');\n}\n```", "```js\naddEventListeners() {\n  this.$experienceTab.addEventListener('click', this.loadExperience.bind(this));\n  this.$professionTab.addEventListener('click', this.loadProfession.bind(this));\n  this.$ageTab.addEventListener('click', this.loadAge.bind(this));\n}\n```", "```js\nloadExperience(event = null) {\n  if(event) event.preventDefault();\n  this.hideCharts();\n  this.$experienceCanvas.classList.remove('hidden');\n  this.$experienceTab.parentElement.classList.add('active');\n\n  const data = {...}\n  ...\n}\n```", "```js\nloadAge(event = null) {\n  if(event) event.preventDefault();\n  this.hideCharts();\n  this.$ageCanvas.classList.remove('hidden');\n  this.$ageTab.parentElement.classList.add('active');\n\n  const data = {...}\n  ...\n}\n```", "```js\nloadProfession(event = null) {\n  if(event) event.preventDefault();\n  this.hideCharts();\n  this.$professionCanvas.classList.remove('hidden');\n  this.$professionTab.parentElement.classList.add('active');\n\n  const data = {...}\n  ...\n}\n```", "```js\n<script  async  defer src=\"https://maps.googleapis.com/maps/api/js?key=API_KEY&callback=**initMap**\">\n```", "```js\nexport function initMap() {\n}\n\nwindow.addEventListener(\"load\", () => {\n  const $script = document.createElement('script');\n  $script.src = `https://maps.googleapis.com/maps/api/js?key=${GMAP_KEY}&callback=bundle.initMap`;\n  document.querySelector('body').appendChild($script);\n});\n```", "```js\nexport function initMap() {\n  const map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 13,\n    center: {lat: 59.325, lng: 18.070}\n  });\n\n  const marker = new google.maps.Marker({\n    map,\n    draggable: true,\n    animation: google.maps.Animation.DROP,\n    position: {lat: 59.325, lng: 18.070}\n  });\n\n  marker.addListener('click', () => {\n    infowindow.open(map,marker);\n  });\n\n  const infowindow = new google.maps.InfoWindow({\n    content: `<h3>Event Location</h3><p>Event Address with all the contact details</p>`\n  });\n\n  infowindow.open(map,marker);\n}\n```", "```js\n{\n  \"status\": [\n    \"16f9901e75ba0ce6ed9c.status.js\",\n    \"16f9901e75ba0ce6ed9c.status.css\",\n    \"16f9901e75ba0ce6ed9c.status.js.map\",\n    \"16f9901e75ba0ce6ed9c.status.css.map\"\n  ],\n  \"home\": [\n    \"756fc66292dc44426e28.home.js\",\n    \"756fc66292dc44426e28.home.css\",\n    \"756fc66292dc44426e28.home.js.map\",\n    \"756fc66292dc44426e28.home.css.map\"\n  ],\n  \"about\": [\n    \"1b4af260a87818dfb51f.about.js\",\n    \"1b4af260a87818dfb51f.about.css\",\n    \"1b4af260a87818dfb51f.about.js.map\",\n    \"1b4af260a87818dfb51f.about.css.map\"\n  ]\n}\n```", "```js\n...\n<head>\n  ...\n  <link rel=\"stylesheet\" href=\"dist/16f9901e75ba0ce6ed9c.status.css\">\n</head>\n<body>\n  ...\n  <script src=\"dist/16f9901e75ba0ce6ed9c.status.js\"></script>\n</body>\n...\n```"]