- en: Chapter 4. Using Actors, Classes, and Volumes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。使用演员、类和体积
- en: 'We have our environment set up with all of the essential actors and objects
    placed. There are other equally, if not more, important types of objects (or actors),
    without which the game would not be complete. These are Visual and Basic classes
    and Volumes, which are actors with special properties. Some are vital to the game,
    while some add special features. In this chapter, we will be looking at some of
    these volumes and classes and how they affect the game. We will cover the following
    topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设置好了环境，所有必要的演员和物体都已经放置好了。还有其他同样重要，甚至更重要的对象（或演员），没有它们游戏就不完整。这些是具有特殊属性的视觉和基本类和体积的演员。有些对游戏至关重要，而有些则添加了特殊功能。在本章中，我们将看一些这些体积和类以及它们如何影响游戏。我们将涵盖以下主题：
- en: Basic classes
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本类
- en: Visual Effects
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视觉效果
- en: Volumes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 体积
- en: All Classes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有类
- en: Basic classes
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本类
- en: We will kick off with an introduction to basic classes. These can be accessed
    in the **Modes** panel under the **Basic** section.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从基本类的介绍开始。这些可以在“模式”面板的“基本”部分中找到。
- en: '![Basic classes](img/image00294.jpeg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![基本类](img/image00294.jpeg)'
- en: 'This contains the most basic classes that are essential to every almost all
    games, regardless of their type or genre. Let us go over them:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这包含了几乎所有游戏都必不可少的最基本的类。让我们来看看它们：
- en: '**Empty Actor**: An Actor is any object that is placed in the game world. All
    objects, lights, cameras, volumes, and so on are actors. An empty actor is an
    empty entity that you can place in your level. It does not have any inherent properties.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空演员：演员是放置在游戏世界中的任何对象。所有的物体、灯光、摄像机、体积等都是演员。空演员是一个空的实体，你可以放置在你的关卡中。它没有任何固有属性。
- en: '**Empty Character**: An **Empty Character** does not have a mesh or any animations—just
    a collision capsule.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空角色：一个空角色没有网格或任何动画，只有一个碰撞胶囊。
- en: '**Empty Pawn**: A **Pawn** is an actor that can be possessed (in other words,
    controlled) by a player or the AI. The game''s characters, all of the enemies,
    allies, and NPCs in the game are all pawns.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空幻影：幻影是一个可以被玩家或AI控制的演员。游戏中的角色、所有的敌人、盟友和NPC都是幻影。
- en: '**Player Start**: As the name suggests, **Player Start** is where the player
    spawns when playing the game. If there is no Player Start actor in the level,
    the player will spawn at the origin of the world (`0`,`0`,`0`).'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 玩家起始：顾名思义，玩家起始是玩游戏时玩家生成的地方。如果关卡中没有玩家起始演员，玩家将生成在世界的原点（`0`,`0`,`0`）处。
- en: '**Point Light**: As mentioned in the previous chapter, **Point Light** is the
    most basic and most widely used source of lighting. You can also add the Point
    Light actor from here.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点光源：如前一章所述，点光源是最基本和最广泛使用的光源。你也可以从这里添加点光源演员。
- en: '**Cube**: This adds a cube primitive (static mesh) to the game.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 立方体：这会在游戏中添加一个立方体原语（静态网格）。
- en: '**Sphere**: This adds a sphere primitive to the game.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 球体：这会在游戏中添加一个球体原语。
- en: '**Cylinder**: This adds a cylinder primitive to the game.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圆柱体：这会在游戏中添加一个圆柱体原语。
- en: '**Cone**: This adds a cone primitive to the game.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圆锥体：这会在游戏中添加一个圆锥体原语。
- en: '**Box trigger / Sphere trigger**: The next two actors have been clubbed together
    since they serve the same purpose; the only difference is their shapes. Triggers,
    simply put, add interactivity to the game. You can add an event for the trigger
    (for instance, if the player touches it, hits a specific key, and so on), which,
    when fulfilled, carries out a specific action as set by the developer. For example,
    you can have a trigger, which when the player touches, turns on a light, and so
    on. UE4 offers two default shapes: box and sphere. You can also create custom
    shape triggers, but more on that later.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 盒触发器/球体触发器：下面的两个演员被合并在一起，因为它们具有相同的作用；唯一的区别是它们的形状。触发器简单来说就是为游戏添加交互性。你可以为触发器添加一个事件（例如，如果玩家触碰它，按下特定键等），当满足条件时，执行开发人员设置的特定动作。例如，你可以有一个触发器，当玩家触碰时，打开一个灯光等。UE4提供了两种默认形状：盒和球体。你也可以创建自定义形状的触发器，但稍后再说。
- en: Adding basic class actors to the game
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将基本类演员添加到游戏中
- en: Now that you are acquainted with the basic classes, let us go ahead and add
    some to our level.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经熟悉了基本类，让我们继续在我们的关卡中添加一些。
- en: Placing the Player Start actor
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 放置玩家起始演员
- en: The first thing that we are going to place is the Player Start actor. Its placement
    is vital and should be decided beforehand. In our game, we would want our player
    to start in the first room. Keeping that in mind, drag the Player Start actor
    and place it in the first room, away from the door.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要放置的第一件事是玩家起始演员。它的位置至关重要，应该事先决定好。在我们的游戏中，我们希望玩家从第一个房间开始。记住这一点，将玩家起始演员拖放到第一个房间，远离门口。
- en: '![Placing the Player Start actor](img/image00295.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![放置玩家起始演员](img/image00295.jpeg)'
- en: The actor is represented by a gamepad with a flag next to it. As you can see,
    there is a capsule-shaped volume around it. This capsule is there to give you
    an idea about the size of the character as well as its placement when the game
    starts. So make sure that the capsule does not overlap any other actor or surface,
    as doing so will change the icon into a sign saying **Bad Size**. You can resize
    this capsule by using the **Scale** tool so that it fits with the character.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 演员由旁边有旗帜的游戏手柄表示。你可以看到它周围有一个胶囊形状的体积。这个胶囊是为了让你了解角色的大小以及游戏开始时的放置位置。所以确保胶囊不要与任何其他演员或表面重叠，否则会将图标更改为标有“尺寸不好”的标志。你可以使用“缩放”工具调整这个胶囊的大小，使其与角色匹配。
- en: '![Placing the Player Start actor](img/image00296.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![放置玩家起始演员](img/image00296.jpeg)'
- en: You may have also noticed a blue arrow along with the icon. The direction in
    which the arrow points is where the character will face when the game starts (remember,
    *W* is for the translate tool, *E* is for the rotation tool, and *R* is for the
    scaling tool). You can change this direction with the help of the rotation action.
    If you were to click on the **Play** button, the character would spawn where the
    actor is placed, facing the direction of the arrow.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还注意到了一个蓝色箭头和图标。箭头指向的方向是游戏开始时角色面对的方向（记住，*W*是平移工具，*E*是旋转工具，*R*是缩放工具）。您可以通过旋转操作改变这个方向。如果您点击“播放”按钮，角色将在演员放置的位置生成，并面向箭头指向的方向。
- en: Adding triggers
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加触发器
- en: Next, we are going to add triggers. We are going to keep things simple by using
    only Box triggers. To place a Box trigger, simply drag it from the **Modes** panel
    and place it on the level. What we will do with the triggers we will cover in
    the next chapter. For now, you can simply place the triggers in the locations
    mentioned in the following sections.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加触发器。我们将只使用框触发器来保持简单。要放置框触发器，只需从“模式”面板拖动它并放置在关卡上。我们将在下一章中介绍触发器的用途。现在，您只需将触发器放置在以下部分提到的位置即可。
- en: Always name your actors, be it triggers, lights, characters, or so on. It is
    not only considered good practice but it will make your project easier to read
    and will keep everything organized and is easier to track.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 始终为您的演员命名，无论是触发器、灯光、角色等等。这不仅被认为是良好的做法，而且会使您的项目更易阅读，保持一切井然有序，更易于跟踪。
- en: Room 1
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间1
- en: In the first room, place the first trigger near the key cube. This trigger will
    be used to interact with the key cube. The placement and dimensions of this trigger
    (or any trigger for that matter) are important, since they determine how far the
    player can interact with the key cube. For example, if the trigger is too large,
    the player will be able to pick up the key cube from afar, which is not what we
    want. We want the player to be relatively close to or adjacent to the key cube
    before they can pick it up.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个房间中，将第一个触发器放置在钥匙立方体附近。此触发器将用于与钥匙立方体交互。此触发器（或任何触发器）的放置和尺寸都很重要，因为它们决定了玩家可以与钥匙立方体交互的距离。例如，如果触发器太大，玩家将能够从远处拾取钥匙立方体，这不是我们想要的。我们希望玩家在可以拾取之前相对靠近或相邻于钥匙立方体。
- en: 'Keeping that in mind, place the trigger and set the dimensions such that it
    encapsulates the entire key cube (so that the player can pick it up from any direction),
    and make it taller (so that the player does not have to look directly at the key
    cube to pick it up; otherwise, it will get annoying). Finally, make the trigger
    bigger than the key cube. Once set, it should look something like the following
    screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点，放置触发器并设置尺寸，使其包围整个钥匙立方体（以便玩家可以从任何方向拾取），并使其更高（以便玩家不必直接看着钥匙立方体才能拾取；否则，这会很烦人）。最后，使触发器比钥匙立方体更大。设置完成后，它应该看起来像以下截图：
- en: '![Room 1](img/image00297.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![房间1](img/image00297.jpeg)'
- en: Add the next trigger in this room on the pedestal. This is where the player
    will have to place the key cube in order to open the door.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个房间中，在基座上添加下一个触发器。这是玩家必须将钥匙立方体放置在此处才能打开门。
- en: Once again, drag and drop a Box Trigger, and place it on top of the pedestal.
    Again, as we did with the trigger for the key cube, set this trigger's dimensions
    such that the player can interact with it from any direction and does not have
    to be standing right next to it in order to interact with it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，拖放一个框触发器，并将其放置在基座上方。与之前为钥匙立方体设置触发器时一样，设置此触发器的尺寸，使玩家可以从任何方向与之交互，而不必站在旁边才能与之交互。
- en: '![Room 1](img/image00298.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![房间1](img/image00298.jpeg)'
- en: To check the placement of the trigger and whether its position and dimensions
    are correctly set, you can first unhide the trigger actor by unchecking the **Actor
    Hidden in Game** option—found in the trigger's **Details** panel and then play
    the level. For now, this will do in terms of trigger placement. Let us now move
    on to the second room.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查触发器的放置位置以及其位置和尺寸是否正确设置，您可以首先取消隐藏触发器演员，方法是取消选中“游戏中隐藏的演员”选项——在触发器的“详细信息”面板中找到，然后播放关卡。现在，就触发器的放置而言，这样就可以了。现在让我们继续进行到第二个房间。
- en: Room 2
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间2
- en: In the second room, place the first trigger near the large door in the middle
    of the room. Now, we would want the player to be able to open the door from anywhere.
    Keeping that in mind, place the trigger such that it covers the entire door lengthwise
    and widthwise. Again, adjust the width, keeping in mind how close you want the
    player to be in order to interact with the door.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个房间中，将第一个触发器放置在房间中央的大门附近。现在，我们希望玩家可以从任何地方打开门。记住这一点，将触发器放置在整个门的长度和宽度范围内。同样，调整宽度时要考虑您希望玩家与门交互时的距离。
- en: '![Room 2](img/image00299.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![房间2](img/image00299.jpeg)'
- en: Next, place the next two triggers that on the pedestal, similar to that in the
    other rooms. Since the pedestals have similar dimensions, you can place the triggers
    by duplicating them in the previous room.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在基座上放置下两个触发器，与其他房间中的情况类似。由于基座具有相似的尺寸，您可以通过在上一个房间中复制它们来放置触发器。
- en: '![Room 2](img/image00300.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![房间2](img/image00300.jpeg)'
- en: We are not going to place any triggers on the key cubes as we did in the previous
    room. The reason behind this will be explained in the next chapter.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会像在上一个房间中那样在钥匙立方体上放置任何触发器。这背后的原因将在下一章中解释。
- en: Room 3
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间3
- en: In the third room, we have a couple of pedestals upon which there will be buttons.
    Therefore, we will require triggers for interactivity. Again, do not place triggers
    on the key cube.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三个房间中，我们有几个基座，上面将放置按钮。因此，我们需要触发器进行交互。同样，不要在钥匙立方体上放置触发器。
- en: '![Room 3](img/image00301.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![房间3](img/image00301.jpeg)'
- en: Room 4
  id: totrans-48
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间4
- en: Finally, in the fourth room, as with the previous rooms, place triggers on all
    of the pedestals and doors.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在第四个房间，与之前的房间一样，在所有基座和门上放置触发器。
- en: '![Room 4](img/image00302.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![房间4](img/image00302.jpeg)'
- en: We have now placed most of the triggers we need for our game. We will add more
    later. And with that, we are done placing Basic classes into our level. Let us
    now move on to the Visual Effects class and see how it affects our game.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经放置了游戏所需的大部分触发器。我们以后会添加更多。有了这些，我们已经将基本类放置到了我们的关卡中。现在让我们继续进行视觉效果类的操作，看看它如何影响我们的游戏。
- en: Visual Effects
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视觉效果
- en: Since we have already covered the Light class in the previous chapter, we are
    going to skip it and move straight to the Visual Effects class. The Visual Effects
    class contains actors that affect the visuals of the game. Although not necessary
    components of a game, they help improve its overall quality.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在上一章已经涵盖了光类，我们将跳过它，直接进入视觉效果类。视觉效果类包含影响游戏视觉的角色。虽然不是游戏的必要组成部分，但它们有助于提高游戏的整体质量。
- en: Moreover, they do not require a lot of memory.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它们不需要太多的内存。
- en: '![Visual Effects](img/image00303.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![视觉效果](img/image00303.jpeg)'
- en: 'There are various actors in Visual Effects classes:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉效果类中有各种角色：
- en: '**Post Process Volume**: This is an actor that can be used to manipulate the
    look and feel of the game. The effects will take place while the player is in
    the volume. There are many effects available. Some examples include **Anti-Aliasing**
    (removes hard edges of actors, giving them a smoother finish), **Bloom** (can
    be seen in real life when looking at a bright object against a darker background),
    **Depth of Field** (blurs objects based on their distance from a focal point),
    and much more. There are several effects that you can add to your game by using
    **Post Process Volume**; so experiment with the volume to see everything you can
    do with it.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后期处理体积**: 这是一个可以用来操纵游戏外观和感觉的角色。效果将在玩家在体积中时生效。有许多可用的效果。一些例子包括**抗锯齿**（去除角色的硬边，使它们更加平滑），**泛光**（在现实生活中，当看着一个明亮的物体在较暗的背景下时会看到），**景深**（根据物体与焦点的距离模糊物体），等等。通过使用**后期处理体积**，你可以为你的游戏添加多种效果；所以尝试使用体积来看看你可以做些什么。'
- en: '**Atmospheric Fog**: In an outdoor level, just having a skylight is not enough
    to provide a realistic outdoor scene. In reality, the light coming from the sun
    scatters and spreads because of the earth''s atmosphere. To have that effect in
    the game, you need to add the **Atmospheric Fog** actor to the level. You can
    set properties such as **Sun Multiplier** (to brighten the fog as well as the
    sky), **Default Brightness** (to set the brightness of the **Fog**), **Default
    Light Color** (to set the color of the atmosphere), and more.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大气雾**: 在室外关卡中，仅仅拥有天窗是不足以提供逼真的室外场景的。实际上，来自太阳的光线会因为地球的大气层而散射和传播。为了在游戏中产生这种效果，你需要在关卡中添加**大气雾**角色。你可以设置属性，比如**太阳倍增器**（用于增亮雾和天空），**默认亮度**（用于设置**雾**的亮度），**默认光颜色**（用于设置大气的颜色），等等。'
- en: '**Exponential Height Fog**: You can use this actor to add fog and mist to your
    level. This is also used mostly in outdoor scenes. You can set properties such
    as the **Fog** density, the color of the **Fog**, the **Fog Height Falloff** (how
    the density of the fog decreases as we go up), and so on.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指数高度雾**: 你可以使用这个角色在你的关卡中添加雾和薄雾。这也主要用于室外场景。你可以设置属性，比如**雾**密度，**雾**的颜色，**雾高度衰减**（随着高度的增加，雾的密度如何减少），等等。'
- en: '**Sphere Reflection Capture**: This is another useful tool. The **Sphere Reflection
    Capture** actor takes the lighting information and provides a realistic reflective
    effect, giving materials a glossy finish. Metallic materials and similar rely
    on this actor to provide a realistic finish. In the actor''s setting panel, you
    will see something called the **Influence Radius**, which is the volume in which
    the actor has influence. You can increase or decrease it. Below that are the **Brightness**
    settings, which you can use to set how bright you want the reflections to be.
    Keep in mind that if you change the lighting in the level (by moving it, changing
    the brightness, changing the color, and so on) or move the actors around, the
    **Sphere Reflection Capture** actor will not update. You will have to update it
    manually, which you can do with the help of the **Update Capture** button that
    is located above the **Influence Radius** option.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**球形反射捕获**: 这是另一个有用的工具。**球形反射捕获**角色获取光照信息并提供逼真的反射效果，使材质具有光泽的效果。金属材料和类似的材料依赖于这个角色来提供逼真的效果。在角色的设置面板中，你会看到一个叫做**影响半径**的东西，它是角色的影响范围。你可以增加或减少它。在下面是**亮度**设置，你可以用它来设置你想要的反射亮度。请记住，如果你改变了关卡中的光照（移动它，改变亮度，改变颜色等等）或者移动了角色，**球形反射捕获**角色不会自动更新。你需要手动更新它，你可以通过位于**影响半径**选项上方的**更新捕获**按钮来做到这一点。'
- en: '**Box Reflection Capture**: This is similar to **Sphere Reflection Capture**.
    The only difference is that while the **Sphere Reflection Capture** actor has
    a spherical influence area, the Box Reflection Capture actor has a cubical area
    of influence, making it relatively less effective than a **Sphere Reflection Capture**
    actor. This actor is best used in hallways or cubical rooms. Its settings are
    the same as the **Sphere Reflection Capture** actor, only instead of an Influence
    Radius, it has a **Box Transition Distance**, which can be used to either increase
    or decrease its area of influence. Again, as with the **Sphere Reflection Capture**
    actor, if you change the lighting or the objects in the game, you will have to
    click on the **Update Captures** button to update the reflections.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**盒形反射捕获**: 这与**球形反射捕获**类似。唯一的区别是，**球形反射捕获**角色具有球形影响区域，而盒形反射捕获角色具有立方体影响区域，使其相对于**球形反射捕获**角色的效果较弱。这个角色最适合用在走廊或立方体房间中。它的设置与**球形反射捕获**角色相同，只是它有一个**盒过渡距离**，可以用来增加或减少它的影响范围。同样，与**球形反射捕获**角色一样，如果你改变游戏中的光照或物体，你需要点击**更新捕获**按钮来更新反射。'
- en: '**Deferred Decal**: The **Deferred Decal** actor provides an easy and inexpensive
    way of adding decals onto objects. It is a great way of adding effects such as
    blood splatter. You can pick which material you want for the decal and place it
    on the level.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟贴花：**延迟贴花**角色提供了一种简单且廉价的方式来在物体上添加贴花。这是一个很好的方法，可以添加血迹等效果。您可以选择要用于贴花的材质，并将其放置在关卡上。
- en: Adding Visual Effect actors to the game – Post Process Volume
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将视觉效果角色添加到游戏中-后期处理体积
- en: The first thing we are going to add to the level is a Post Process Volume. When
    the player picks up a key cube, we want to give them a visual indicator that they
    have picked it up. The visual indicator, in this case, is a flash on the screen.
    To add the actor, simply drag it from the panel and drop it on the level, over
    the key cube. The post process volume is represented by a light pink cube.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要添加到关卡中的第一件事是后期处理体积。当玩家拾取钥匙方块时，我们希望给他们一个视觉指示，表明他们已经拾取了它。在这种情况下，视觉指示是屏幕上的闪光。要添加角色，只需从面板中拖动它并将其放置在关卡上，覆盖在钥匙方块上。后期处理体积由浅粉色的立方体表示。
- en: '![Adding Visual Effect actors to the game – Post Process Volume](img/image00304.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![将视觉效果角色添加到游戏中-后期处理体积](img/image00304.jpeg)'
- en: After the Post Process Volume has been placed, let us set some properties in
    the **Details** panel. In this panel, you will see quite a lot of options. All
    of them are categorized based on the type of effect they create. One thing to
    note is that some of the effects are not available on mobile.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 放置后期处理体积后，让我们在**详细信息**面板中设置一些属性。在此面板中，您将看到许多选项。所有这些选项都是根据它们创建的效果类型进行分类的。需要注意的一点是，其中一些效果在移动设备上不可用。
- en: 'We are just going to tweak the **Global Illumination** setting. In the **Details**
    panel, go to the **Global Illumination** section, where you will see two settings:
    **Indirect Lighting Color** and **Indirect Lighting Intensity**.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只会调整**全局照明**设置。在**详细信息**面板中，转到**全局照明**部分，您将看到两个设置：**间接光照颜色**和**间接光照强度**。
- en: '![Adding Visual Effect actors to the game – Post Process Volume](img/image00305.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![将视觉效果角色添加到游戏中-后期处理体积](img/image00305.jpeg)'
- en: First, enable both effects by selecting them. Then, in the **Indirect Lighting
    Color** option, set the color to anything you like. In our case, we are going
    to set the color to blue. You can also set the Indirect Lighting Intensity option
    to anything you want, but we are just going to leave it at **1**.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过选择它们来启用两种效果。然后，在**间接光照颜色**选项中，将颜色设置为任何您喜欢的颜色。在我们的情况下，我们将颜色设置为蓝色。您还可以将间接光照强度选项设置为任何您想要的值，但我们只会将其设置为**1**。
- en: 'Once set, if you move inside the volume, you will find everything turned blue.
    This is going to be our effect for when we pick up our cube:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完成后，如果您走进体积，您会发现一切都变成了蓝色。这将是我们拾取方块时的效果：
- en: '![Adding Visual Effect actors to the game – Post Process Volume](img/image00306.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![将视觉效果角色添加到游戏中-后期处理体积](img/image00306.jpeg)'
- en: Now, if you were to test the game and walk inside the cube, everything would
    turn blue and remain blue unless you stepped out of the volume. We do not want
    that. We only want the screen to turn blue for a brief moment—when the player
    picks up the key cube—and then fade away. We need to change another setting. We
    want the volume to be disabled when the game starts and only be triggered when
    the player picks up the key cube. We will cover how to enable this setting in
    the next chapter. For now, go to the **Details** panel, and in the **Post Process
    Volume** section, you will find the **Enabled** option checked. Simply uncheck
    it; this will disable the **Post Process Volume**. If you were to check it now,
    you would see that the screen no longer turns blue. Finally, duplicate and place
    **Post Process Volumes** over all the key cubes in the level.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您测试游戏并走进立方体，一切都会变成蓝色，并且除非您走出体积，否则会保持蓝色。我们不希望那样。我们只希望屏幕在玩家拾取钥匙方块时短暂变蓝，然后消失。我们需要更改另一个设置。我们希望在游戏开始时禁用体积，并且只在玩家拾取钥匙方块时触发。我们将在下一章中介绍如何启用此设置。现在，转到**详细信息**面板，在**后期处理体积**部分，您会发现**已启用**选项已选中。只需取消选中；这将禁用**后期处理体积**。如果您现在选中它，您会发现屏幕不再变蓝。最后，在关卡中复制并放置**后期处理体积**覆盖在所有钥匙方块上。
- en: Volumes
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 体积
- en: Volumes are actors that have special properties. They can be seen as invisible
    triggers, each doing something different (depending on the type of volume) when
    the player enters them. There are various types of **Volume** actors available;
    each has a different property upon entering it. Volumes are only visible in the
    **Editor** mode and not in the actual game itself. Therefore, they are usually
    accompanied by another actor. For example, a Volume called **Pain Causing Volume**,
    as the name suggests, causes the player to take damage when it is entered into.
    It is obvious that developers would use this volume when the player walks through
    something hazardous, such as fire, electricity, and so on. Therefore, the volume
    would be placed around it. The fire would act as a visual cue indicating that
    the area is unsafe to go through, and the **Pain Causing Volume** would take care
    of the rest (cause damage to the player).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 体积是具有特殊属性的角色。它们可以被视为不可见的触发器，每个触发器在玩家进入时执行不同的操作（取决于体积类型）。有各种类型的**体积**角色可用；每个进入时都具有不同的属性。体积只在**编辑器**模式中可见，而在实际游戏中不可见。因此，它们通常会与另一个角色一起出现。例如，名为**造成疼痛的体积**的体积，顾名思义，当玩家进入其中时会造成伤害。显然，开发人员会在玩家走过危险区域时使用此体积，例如火灾、电击等。因此，体积将被放置在周围。火灾将作为视觉提示，表明该区域不安全，而**造成疼痛的体积**将处理其余部分（对玩家造成伤害）。
- en: There are different types of volumes available to users. Let us take a look
    at them.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以使用不同类型的体积。让我们来看看它们。
- en: '![Volumes](img/image00307.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![体积](img/image00307.jpeg)'
- en: '**Audio Volume**: Audio Volume allows you to control the audio within the game
    by tweaking its settings.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音频体积**：音频体积允许您通过调整其设置来控制游戏中的音频。'
- en: '**Blocking Volume**: The **Blocking Volume** acts as an invisible wall, which
    prevents certain types of actors from going through it. You can set what types
    of actors can and cannot pass through in the **Details** panel.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阻挡体积**：**阻挡体积**充当一个看不见的墙，阻止某些类型的角色通过。您可以在**详细信息**面板中设置哪些类型的角色可以通过，哪些类型的角色不能通过。'
- en: '**Camera Blocking Volume**: This prevents camera actors from passing through
    it.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相机阻挡体积**：这可以防止相机角色穿过它。'
- en: '**Cull Distance Volume**: This is an optimizing tool that does not render objects
    smaller or equal to a set value (set by the developer), based on their distance
    from the camera. This is an important tool, especially if you have a vast outdoor
    scene, since it will not render objects far away, therefore saving memory.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**剔除距离体积**：这是一个优化工具，根据物体距离摄像机的距离不渲染小于或等于开发人员设置的值的物体。这是一个重要的工具，特别是如果您有一个广阔的室外场景，因为它不会渲染远处的物体，从而节省内存。'
- en: '**Kill ZVolume**: This destroys any actor that enters it, including the player.
    This can be used in cases when the player falls off the edge of a cliff, into
    a pit, and so on.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**杀死体积**：这会摧毁进入其中的任何角色，包括玩家。这可以在玩家从悬崖边掉下，掉入坑等情况下使用。'
- en: '**Level Streaming Volume**: This is another optimizing tool that you can use
    to set the part (s) of the level you want to be visible to the player. This is
    really useful when you have huge levels. You can use this volume to hide parts
    of the level that the player cannot see from his/her current location or parts
    that are far away from him/her.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**级别流式传输体积**：这是另一个优化工具，您可以使用它来设置玩家可见的级别部分。当您有巨大的级别时，这非常有用。您可以使用此体积隐藏玩家当前位置看不到的级别部分或远离他/她的部分。'
- en: '**Lightmass Character Indirect Detail Volume**: This takes the lighting information
    and generates indirect light maps inside the volume.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lightmass角色间接细节体积**：它获取光照信息并在体积内生成间接光照图。'
- en: '**Lightmass Importance Volume**: Yet another optimizing tool, the Lightmass
    Importance Volume is used to generate lighting information within it (indirect
    lighting, shadows, and so on). It is advisable to place a Lightmass Importance
    Volume around your game level for faster light building.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lightmass重要性体积**：另一个优化工具，Lightmass重要性体积用于在其中生成光照信息（间接光照，阴影等）。建议在游戏级别周围放置Lightmass重要性体积以加快光照构建速度。'
- en: '**Nav Mesh Bounds Volume and Nav Modifier Volume**: The Nav Mesh Bounds Volume
    is used for the AI to move around in the level. When placed, the AI character
    will move anywhere within the volume (provided the area is accessible in the first
    place).'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导航网格边界体积和导航修改器体积**：导航网格边界体积用于AI在级别中移动。放置后，AI角色将在体积内的任何地方移动（前提是该区域首先是可访问的）。'
- en: A **Nav Modifier Volume** is used to modify **Nav Mesh Bounds Volume**. You
    can set it so that a certain area inside the **Nav Mesh Volume** can be blocked
    off and the AI character will not be able to traverse through it
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**导航修改器体积**用于修改**导航网格边界体积**。您可以设置它，以便在**导航网格体积**内的某个区域被封锁，AI角色将无法穿过它。'
- en: '**Pain Causing Volume**: This causes damage to any player that enters it.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**疼痛体积**：这会对进入其中的任何玩家造成伤害。'
- en: '**Physics Volume**: This in which certain physical properties of a physics
    object can be altered. For example, you can enable/disable a setting called **Water
    Volume**: This, when enabled, simulates the character moving through a watery
    area, such as a swamp.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**物理体积**：这是可以改变物理对象的某些物理属性的体积。例如，您可以启用/禁用称为**水体积**的设置：当启用时，模拟角色穿过水域，如沼泽。'
- en: '**Post Process Volume**: This is the same as the volume found in the **Visual
    Effects** section.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后期处理体积**：这与**视觉效果**部分中找到的体积相同。'
- en: '**Precomputed Visibility Override Volume**: Using this volume, you can manually
    override the visibility of the actors in the game.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预计算可见性覆盖体积**：使用此体积，您可以手动覆盖游戏中角色的可见性。'
- en: '**Precomputed Visibility Volume**: This volume has a similar function as the
    **Precomputed Visibility Override Volume**, the only difference being that this
    volume automatically stores the visibility of the actors in the game.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预计算可见性体积**：此体积与**预计算可见性覆盖体积**具有相似的功能，唯一的区别是此体积自动存储游戏中角色的可见性。'
- en: '**Trigger Volume**: This is the same as the trigger actors, which were discussed
    earlier. One of the differences is that that while trigger actors come in a predefined
    shape, you can alter the shape of a trigger Volume using the **Edit Geometry**
    Mode.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**触发体积**：这与之前讨论过的触发角色相同。一个区别是，触发角色以预定义的形状出现，而您可以使用**编辑几何**模式更改触发体积的形状。'
- en: One more thing that you should know about volumes is that just like with BSP
    brushes, you can edit their shapes to create your own custom shaped volume. The
    way to edit is the same as that of BSP brushes. In the **Modes** panel, clicking
    on the **Edit Geometry** mode will switch to the editing mode. Once done, you
    can click on any volume you want in order to change and make the desired changes.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 关于体积，您还应该知道，就像BSP刷子一样，您可以编辑它们的形状以创建自己的自定义形状的体积。编辑的方式与BSP刷子的方式相同。在**模式**面板中，单击**编辑几何**模式将切换到编辑模式。完成后，您可以单击要更改并进行所需更改的任何体积。
- en: Adding Volumes to the game
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向游戏添加体积
- en: Now that we know what Volumes are and the types of Volumes available, let us
    go ahead and add a few of them to our level.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了体积是什么以及可用的体积类型，让我们继续向我们的级别添加一些体积。
- en: Lightmass Importance Volume
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Lightmass重要性体积
- en: It is advisable to use the Lightmass Importance Volume, since it reduces the
    rendering time (light building time). We are going to set its dimensions so that
    it encapsulates all of the four rooms in the game. Simply drag the actor from
    the **Modes** panel and drop it on the screen.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用Lightmass重要性体积，因为它可以减少渲染时间（光照构建时间）。我们将设置其尺寸，使其包围游戏中的四个房间。只需从**模式**面板拖动角色并将其放在屏幕上。
- en: '![Lightmass Importance Volume](img/image00308.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![Lightmass重要性体积](img/image00308.jpeg)'
- en: The Lightmass Importance Volume is represented by a yellow colored cube. Set
    its dimensions such that it encapsulates all of the four rooms in the game.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Lightmass Importance Volume由一个黄色的立方体表示。设置其尺寸，使其包含游戏中的所有四个房间。
- en: '![Lightmass Importance Volume](img/image00309.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![Lightmass Importance Volume](img/image00309.jpeg)'
- en: If you were to build the lighting now, you would notice that the building process
    takes relatively less time, and the areas outside the rooms are now completely
    dark. The engine now focuses mainly on what is inside the volume to produce high-quality
    lighting, and anything outside of it will be of lower quality, in terms of lighting.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果现在构建照明，您会注意到建筑过程所需的时间相对较短，房间外的区域现在完全黑暗。引擎现在主要关注体积内的内容，以产生高质量的照明，而体积外的任何内容在照明方面将质量较低。
- en: Nav Mesh Bounds Volume
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Nav Mesh Bounds Volume
- en: Next, add the **Nav Mesh Bounds Volume**. If you wish to have an AI character
    in your game, a **Nav Mesh Bounds Volume** is an important component. As mentioned
    previously, this volume is basically one within which the AI character moves and
    interacts with the world. When designing your game, you should know where all
    the AI-controlled characters will move around in the game and what objects they
    can interact with, and then place your volume accordingly.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加**Nav Mesh Bounds Volume**。如果您希望在游戏中有一个AI角色，**Nav Mesh Bounds Volume**是一个重要的组件。如前所述，该体积基本上是AI角色在其中移动和与世界互动的范围。在设计游戏时，您应该知道所有由AI控制的角色将在游戏中移动的位置以及他们可以与之交互的对象，然后相应地放置您的体积。
- en: Grab the **Nav Mesh Bounds Volume** and drag it into the screen. We are going
    to require the volume in room 3 and room 4\. The volume is represented by a gray
    cube.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 抓住**Nav Mesh Bounds Volume**并将其拖入屏幕。我们需要在房间3和房间4中使用这个体积。该体积由一个灰色的立方体表示。
- en: Room 3
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间3
- en: Place the **Nav Mesh Bounds** **Volume** on and near the pit, opposite the pedestals
    with the switches.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在坑上方和附近放置**Nav Mesh Bounds Volume**，与开关的基座相对。
- en: 'When placing this volume, it is advisable to turn on **Navigation** in the
    **Show** menu. In the **Viewport Toolbar**, click on **Show** and check the **Navigation
    option** to have it appear in the Viewport. Once toggled, you will see that any
    surface, actor, or any other physical object (or parts of them) inside the volume
    will have a bright green color on them. This is a visual indicator of where the
    AI will be active. It will ignore anything outside of itself:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在放置这个体积时，建议在**显示**菜单中打开**导航**。在**视口工具栏**中，点击**显示**并勾选**导航选项**，以在视口中显示它。一旦切换，您会看到体积内的任何表面、角色或任何其他物理对象（或它们的部分）都会在其上呈现出明亮的绿色。这是AI活动的视觉指示器。它将忽略体积外的任何东西：
- en: '![Room 3](img/image00310.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![房间3](img/image00310.jpeg)'
- en: As mentioned earlier, any part of a surface or object that the volume overlaps
    with will be green. Let us move on to room 4.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，体积重叠的表面或对象的任何部分都将是绿色的。让我们继续进行到房间4。
- en: Room 4
  id: totrans-110
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间4
- en: 'In room 4, we are going to need a big Nav Mesh Bounds Volume, one that covers
    almost the whole room. Place the Volume and move its sides using the Geometry
    Editing mode. After setting the dimensions, it should look something like the
    following screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在房间4中，我们需要一个大的Nav Mesh Bounds Volume，几乎覆盖整个房间。放置体积并使用几何编辑模式移动其边缘。设置尺寸后，它应该看起来像以下的截图：
- en: '![Room 4](img/image00311.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![房间4](img/image00311.jpeg)'
- en: Our AI character will now know where to move about in the level (The area highlighted
    in green).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的AI角色现在将知道在关卡中移动的位置（绿色高亮显示的区域）。
- en: All Classes
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所有类别
- en: Lastly, we have the **All Classes** section, in which all of the classes and
    volumes we have discussed so far are listed. Additionally, there are certain actors
    that are not displayed in the previous three sections and are only accessible
    via the **All Classes** section.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有**所有类别**部分，其中列出了到目前为止我们讨论过的所有类别和体积。此外，还有一些角色未显示在前三个部分中，只能通过**所有类别**部分访问。
- en: '![All Classes](img/image00312.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![所有类别](img/image00312.jpeg)'
- en: 'There are many such actors, some of which are beyond the scope of this guide.
    We will only talk about some of the actors that are in the **All Classes** section:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多这样的角色，其中一些超出了本指南的范围。我们只会谈论一些在**所有类别**部分中的角色：
- en: '**Ambient Sound Actor**: This is an actor that you can use to play audio or
    sound effects in your game. It also emulates real-world sounds, in that the closer
    you are to the source, the louder the sound will get, and conversely, the further
    you are from the source, the fainter it will get.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境声音角色**：这是一个您可以用来在游戏中播放音频或音效的角色。它还模拟真实世界的声音，即您离源头越近，声音就会越大，反之亦然，您离源头越远，声音就会越微弱。'
- en: '**Camera**: A **Camera** actor is one through which you see the virtual world.
    By default, your character class already has a camera, but if you want to import
    your own character, a **Camera** actor is an essential component. It is also used
    in cutscenes, and so on.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**摄像机**：**摄像机**角色是您通过它看到虚拟世界的角色。默认情况下，您的角色类已经有一个摄像机，但如果您想导入自己的角色，**摄像机**角色是一个必不可少的组件。它还用于过场动画等。'
- en: '**Default Pawn**: A **Default Pawn** actor is a simple spherical actor with
    built-in flying mechanics, static mesh, spherical collision, and so on, which
    you can use for simple AI.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认角色**：**默认角色**角色是一个简单的球形角色，具有内置的飞行机制、静态网格、球形碰撞等，您可以用于简单的AI。'
- en: '**Landscape**: A different way of switching to the landscape mode can be found
    here. If you drag the landscape actor from here and drop it on the screen, the
    mode will change to Landscape mode, wherein you can place your terrain.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地形**：在这里可以找到切换到地形模式的另一种方法。如果您从这里拖动地形角色并将其放在屏幕上，模式将切换到地形模式，在那里您可以放置您的地形。'
- en: '**Level Bounds**: A **Level Bounds** actor, when placed in the level, automatically
    updates and resizes to encapsulate the entire world. It can be used to calculate
    the size of the level and the world. Just keep in mind that if your level has
    a skybox or a skydome, the volume will resize and include that as well.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关卡边界**：**关卡边界**演员在关卡中放置时会自动更新和调整大小以囊括整个世界。它可以用于计算关卡和世界的大小。只需记住，如果您的关卡有天空盒或天空圆顶，该体积也会调整大小并包括其中。'
- en: '**Matinee Actor**: Matinee is a powerful tool used to create cinematics, set
    pieces, and so on. There are two ways of adding a Matinee actor. The first way
    is through the Viewport Toolbar. Simply click on **Matinee**, and select **Add
    Matinee** when the menu opens. The other way is with this option. You can drag
    the actor from the **Modes** panel and drop it on the level.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Matinee演员**：Matinee是用于创建电影、布景等的强大工具。添加Matinee演员有两种方法。第一种方法是通过视口工具栏。只需单击**Matinee**，然后在菜单打开时选择**添加Matinee**。另一种方法是使用此选项。您可以从**模式**面板拖动演员并将其放置在关卡上。'
- en: '**Nav Link Proxy**: The **Nav Link Proxy** actor is used if an AI character
    has to perform actions, such as dropping off or jumping off a ledge, jumping between
    gaps, and so on. It allows the AI character to leave the Nav Mesh temporarily.
    (We will return to this in the next chapter, when we talk about AI.)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导航链接代理**：**导航链接代理**演员用于如果AI角色必须执行动作，例如从悬崖上跳下或跳跃，跳跃之间的间隙等。它允许AI角色暂时离开导航网格。（我们将在下一章回到这一点，当我们谈论AI时。）'
- en: '**Target Point**: **Target Point** actors are used to get the coordinates of
    a particular point in the level. They can also be used for AI characters. If you
    want to have your AI character follow a particular path, or have it patrol a certain
    area, you should use target points. Also, keep in mind that Target Points should
    be placed inside the Nav Mesh Bounds Volume, otherwise the AI actor will ignore
    them, even if you have it scripted to move towards the said Target Point. Target
    points can also be used if you want your character to teleport to a particular
    destination.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标点**：**目标点**演员用于获取关卡中特定点的坐标。它们也可以用于AI角色。如果您希望AI角色沿着特定路径移动，或者让它巡逻特定区域，您应该使用目标点。此外，请记住，目标点应放置在Nav
    Mesh Bounds Volume内，否则AI角色将忽略它们，即使您已经编写脚本让其朝着所说的目标点移动。如果您希望角色传送到特定目的地，也可以使用目标点。'
- en: '**Text Render**: The **Text Render** actor, as the name might suggest, is used
    to render text in the game. If you want your game to have popup text (for tutorials
    or something similar), this is what you should use. You can import your own font
    and create your own text render.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本渲染：**文本渲染**演员，顾名思义，用于在游戏中渲染文本。如果您希望游戏中有弹出文本（用于教程或类似内容），这就是您应该使用的。您可以导入自己的字体并创建自己的文本渲染。
- en: '**Class Blueprints**: Although not a single specific actor per se, all of the
    Class Blueprints that you create in your project are displayed here. What a Class
    Blueprint exactly is will be discussed in the next chapter. For now, the only
    thing you need to know and remember is that all of the classes you create are
    also accessible from here.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类蓝图**：虽然不是单个特定的演员，但您在项目中创建的所有类蓝图都显示在这里。类蓝图究竟是什么将在下一章中讨论。目前，您需要知道和记住的唯一一件事是，您创建的所有类也可以从这里访问。'
- en: Adding actors from All Classes
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从所有类中添加演员
- en: Now that we have discussed some of the actors found in All Classes, let us go
    ahead and add a few of them to our game.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了在所有类中找到的一些演员，让我们继续向游戏中添加其中一些。
- en: Camera
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 摄像机
- en: The first thing we are going to add is a Camera Actor. As a part of the **tutorial**,
    we are going to have a small cut-scene in which we will show the door opening
    when the player has placed the key cube on the pedestal (so that the player understands
    what the key cube is for and what it does).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要添加的第一件事是摄像机演员。作为**教程**的一部分，我们将制作一个小的过场动画，在其中当玩家将钥匙立方体放在基座上时，我们将展示门的打开（以便玩家了解钥匙立方体的用途和作用）。
- en: 'So, drag the **CameraActor** from the All Classes panel and place it on the
    level. Once done, set it in such a way that it faces the door. The following screenshot
    is an example of where you can place your camera:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从所有类面板中拖动**CameraActor**并将其放置在关卡上。完成后，设置它以面向门。以下截图是您可以放置摄像机的示例位置：
- en: '![Camera](img/image00313.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![摄像机](img/image00313.jpeg)'
- en: The small window on the bottom-right corner of the screen shows the view from
    the second camera, which you can use to properly adjust its position until you
    can see the door clearly. Any time you select any **CameraActor**, the window
    opens, showing you the view from the selected **CameraActor**. We are going to
    need this when we create our cut-scene in later chapters.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕右下角的小窗口显示了从第二摄像机的视图，您可以使用它来正确调整其位置，直到您可以清楚地看到门。每当您选择任何**CameraActor**时，该窗口都会打开，显示您从所选**CameraActor**的视图。我们将在后续章节中创建过场动画时需要这个。
- en: Matinee actors
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Matinee演员
- en: We are also going to place several Matinee actors. Instead of moving our doors
    and platforms for our AI characters via scripting (or in this case, blueprint),
    we are going to implement said features with the help of Matinee. We will animate
    the opening of the door and the drawing of the animation in **Unreal Matinee**
    and call it whenever the player interacts with the appropriate trigger.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将放置几个Matinee演员。我们不打算通过脚本（或在这种情况下，蓝图）移动我们的门和平台，而是打算借助Matinee实现这些功能。我们将在**虚幻Matinee**中制作门的打开和动画的绘制，并在玩家与适当的触发器交互时调用它。
- en: To add a Matinee actor, drag it from the **Modes** panel and place it near the
    door.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加Matinee演员，请从**模式**面板中拖动它并将其放置在门附近。
- en: Note
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Although where you place the Matinee actor does not matter, to prevent confusion
    and to make things more convenient, you should place it near the actor(s) you
    want to move or edit using Matinee.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然放置Matinee演员的位置并不重要，为了避免混淆并使事情更加方便，您应该将其放置在您希望使用Matinee移动或编辑的演员附近。
- en: '![Matinee actors](img/image00314.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![Matinee演员](img/image00314.jpeg)'
- en: Just place the Matinee actors like this for all the doors. We still have to
    place more Matinee actors, but we will do so later.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 只需像这样放置动画演员来控制所有的门。我们还需要放置更多的动画演员，但我们稍后会这样做。
- en: Target Point
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目标点
- en: Next up, we are going to place a couple of Target Point actors. As mentioned
    previously, Target Points are useful for moving AI characters. We will have a
    fairly simple AI, one which moves in a specified path, stops when it hits a switch,
    and respawns if it falls in the pit.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将放置一对目标点演员。如前所述，目标点对于移动AI角色非常有用。我们将有一个非常简单的AI，它沿着指定的路径移动，在触发开关时停止，并且如果掉入坑中则重新出现。
- en: Room 3
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间3
- en: 'In room 3, place two target points: one where the AI character will be initially
    and the other where the switch will be. When the AI character falls into the pit,
    it will respawn at the first Target Point. When the player activates it, the AI
    character will go to the second Target Point.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在房间3中，放置两个目标点：一个是AI角色最初的位置，另一个是开关的位置。当AI角色掉入坑中时，它将重新出现在第一个目标点。当玩家激活它时，AI角色将前往第二个目标点。
- en: '![Room 3](img/image00315.jpeg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![房间3](img/image00315.jpeg)'
- en: The actors are depicted by a small target icon. Let us now place them in room
    4.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些演员由一个小的目标图标表示。现在让我们把它们放在房间4中。
- en: Room 4
  id: totrans-148
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 房间4
- en: In room 4, we are going to place a couple of Target Point actors, since the
    AI character will take a more nonlinear route.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在房间4中，我们将放置一对目标点演员，因为AI角色将采取更多的非线性路径。
- en: '![Room 4](img/image00316.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![房间4](img/image00316.jpeg)'
- en: The preceding screenshot is the top view of room 4\. The player will start from
    the left-hand side and will have to direct the AI character towards the right.
    Also, as you can see, we have placed seven Target Point actors. The path the AI
    character will take is shown by the red line. With that done, we have fully placed
    our Target Point actors. With that, we have placed all of the classes, volumes,
    and other actors in our level.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图是房间4的俯视图。玩家将从左侧开始，并且必须引导AI角色朝右侧移动。此外，正如你所看到的，我们已经放置了七个目标点演员。AI角色将走的路径由红线表示。完成这些后，我们已经完全放置了我们的目标点演员。通过这样做，我们已经在我们的关卡中放置了所有的类、体积和其他演员。
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at some of the actors present in the Modes panel
    that are vital to the functionality of the game, and some that enhance the overall
    experience.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一些在模式面板中出现的对游戏功能至关重要的演员，以及一些增强整体体验的演员。
- en: Apart from talking about them, we also placed some of them in our level. We
    are now close to making our game. In the next chapter, we are going to talk about
    Blueprints—probably the most important topic we will be covering in our guide.
    Without them, there would be no interactivity in the game. So, let us start scripting
    in the next chapter.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 除了讨论它们，我们还在我们的关卡中放置了一些。我们现在离制作游戏很近了。在下一章中，我们将讨论蓝图——可能是我们指南中最重要的主题。没有它们，游戏中就没有互动性。所以，让我们在下一章开始编写脚本。
