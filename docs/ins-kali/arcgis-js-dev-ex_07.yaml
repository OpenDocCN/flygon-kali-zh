- en: Chapter 7. Map Analytics and Visualization Techniques
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。地图分析和可视化技术
- en: 'Performing analytics on map data will reveal a lot of spatial patterns that
    would otherwise stay hidden. The API provides a lot of methods to elicit such
    information using advanced statistical queries on the data. Combine this with
    the intuitive data visualization methods provided by the API and you''re one step
    nearer to becoming a map data scientist. We will be building a demographics analytic
    portal in this chapter by first trying to understand a few basic statistical concepts,
    and then by practically applying those in the code with the aid of the analytic
    and rendering modules provided by the API. Specifically we will be covering the
    following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对地图数据进行分析将揭示许多空间模式，否则这些模式将保持隐藏。 API提供了许多方法来使用数据上的高级统计查询来获取这些信息。结合API提供的直观数据可视化方法，您将更接近成为地图数据科学家。在本章中，我们将首先尝试了解一些基本的统计概念，然后通过在API提供的分析和渲染模块的帮助下在代码中实际应用这些概念。具体来说，我们将涵盖以下主题：
- en: Introduction to the demographics analytic portal we're going to develop
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍我们将要开发的人口统计分析门户
- en: Introduction to basic statistical measures
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本统计量介绍
- en: Modules provided by the API to calculate the feature statistics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: API提供的模块来计算要素统计信息
- en: A brief introduction to the classification methods
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类方法的简要介绍
- en: Code-backed explanation for developing renderers with visual variables
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用代码支持的解释来开发具有视觉变量的渲染器
- en: Performing multivariate mapping
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行多变量映射
- en: Performing automatic mapping using smart mapping
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用智能映射执行自动映射
- en: Building a demographics analytic portal
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建人口统计分析门户
- en: We are going to build a demographic analytic portal to demonstrate the advanced
    analytics capabilities of the API. Demographics refers to the classification of
    the population living in an area based on various socio-economic factors such
    as age, educational attainment, nationality, median household income, race, gender,
    and so on. The demographic data is mostly based on Census data and other reliable
    sources.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将构建一个人口统计分析门户，以展示API的高级分析功能。人口统计是指根据各种社会经济因素对居住在某一地区的人口进行分类，例如年龄、教育程度、国籍、家庭收入中位数、种族、性别等。人口统计数据主要基于人口普查数据和其他可靠来源。
- en: The demographics can be used to perform various analytics and is equally useful
    to government to make policy decisions and businesses to make marketing decisions.
    The power of demographic data lies in performing appropriate analytics such that
    we can extract useful information about the population living in an area in comparison
    to the ones surrounding it. Let's consider this URL, which provides detailed statistics
    on the median household income at block level—[http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer](http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 人口统计数据可用于执行各种分析，并且对政府做出政策决策和企业做出营销决策同样有用。人口统计数据的力量在于执行适当的分析，以便我们可以提取有关居住在某一地区的人口与周围人口的有用信息。让我们考虑这个网址，它提供了关于街区层面的家庭收入中位数的详细统计数据
    - [http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer](http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer)。
- en: 'This map service shows the most updated 2015 demographic data for the USA.
    Among the hundreds of demographic parameters provided, we are interested in the
    median household income in the United States in 2015\. Income amounts are expressed
    in current dollars, including an adjustment for inflation or cost-of-living increases.
    The median is the value that divides the distribution of household income into
    two equal parts. For more information on this map, including the terms of use,
    visit this URL: [http://doc.arcgis.com/en/living-atlas/item/?itemId=6db428407492470b8db45edaa0de44c1&subType=demographics](http://doc.arcgis.com/en/living-atlas/item/?itemId=6db428407492470b8db45edaa0de44c1&subType=demographics)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该地图服务显示了2015年美国最新的人口统计数据。在提供的数百个人口统计参数中，我们对2015年美国家庭收入中位数感兴趣。收入金额以当前美元表示，包括通货膨胀或生活成本增加的调整。中位数是将家庭收入分布为两个相等部分的值。有关此地图的更多信息，包括使用条款，请访问此网址：[http://doc.arcgis.com/en/living-atlas/item/?itemId=6db428407492470b8db45edaa0de44c1&subType=demographics](http://doc.arcgis.com/en/living-atlas/item/?itemId=6db428407492470b8db45edaa0de44c1&subType=demographics)
- en: 'These data are provided as a part of the Living Atlas endeavor of Esri. To
    use this data, you will require an ArcGIS Online organizational subscription or
    an ArcGIS Developer account. To access this item, you''ll need to do one of the
    following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据是Esri的Living Atlas项目的一部分。要使用这些数据，您将需要ArcGIS Online组织订阅或ArcGIS开发人员帐户。要访问此项目，您需要执行以下操作之一：
- en: Sign in with an account that is a member of an organizational subscription
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用组织订阅的成员帐户登录
- en: Sign in with a developer account
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用开发人员帐户登录
- en: 'If you don''t have an account, you can sign up for a free trial of ArcGIS or
    a free ArcGIS Developer account at this link: [https://developers.arcgis.com/en/sign-up/](https://developers.arcgis.com/en/sign-up/)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您没有帐户，可以在此链接[https://developers.arcgis.com/en/sign-up/]注册ArcGIS的免费试用版或免费的ArcGIS开发人员帐户
- en: Basic statistical measures
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本统计量
- en: 'Let''s discuss some basic statistics so that we can utilize some of the statistical
    functionality provided by the API to the fullest extent. The five basic statistical
    parameters we may need to understand clearly before proceeding further are:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一些基本统计数据，以便我们可以充分利用API提供的统计功能。在进一步进行之前，我们可能需要清楚地了解五个基本统计参数：
- en: Minimum
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小值
- en: Maximum
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大值
- en: Average
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均值
- en: Standard deviation
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准差
- en: Standardization
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准化
- en: Minimum
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最小值
- en: As the name suggests, this implies the least value in a dataset. In our case
    of the block-level household income, the `minimum` statistic indicates the block
    with the least median household income.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，这意味着数据集中的最小值。在我们的案例中，对于街区级别的家庭收入，`最小`统计数据表示具有最低家庭收入中位数的街区。
- en: Maximum
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最大值
- en: Similar to the `minimum`, the `maximum` statistic defines the maximum median
    household income value among all the blocks considered.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与`最小`类似，`最大`统计量定义了所有考虑的街区中的最大家庭收入中位数值。
- en: Sum
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总和
- en: '`Sum` is a simple yet effective statistic that gives us the total value of
    all the data being considered.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`Sum`是一个简单而有效的统计量，它给出了所有考虑的数据的总值。'
- en: Average
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平均值
- en: An `Average` statistic defines the arithmetic mean value of all the values.
    An average is derived by dividing the `Sum` statistic by the count of the data
    values taken for the calculation.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`Average`统计定义了所有值的算术平均值。平均值是通过将`Sum`统计量除以用于计算的数据值的计数来推导的。'
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Standard deviation
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准差
- en: 'Standard deviation is perhaps the most important statistic that one can derive
    from any given data. Standard deviation is a measure of how spread out the data
    are or how much the data deviates from the mean or average. When we know the standard
    deviation, we can normally observe that:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 标准差可能是从任何给定数据中推导出的最重要的统计量。标准差是数据的分散程度或数据偏离平均值或平均值的度量。当我们知道标准差时，通常可以观察到：
- en: 68% of values are within plus or minus one times the standard deviation from
    the mean
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 68%的数值在平均值加减一个标准差的范围内
- en: 95% of values are within plus or minus two times standard deviation from the
    mean
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 95%的数值在平均值加减两倍标准差的范围内
- en: 99.7% of values are within three times the standard deviation from the mean
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 99.7%的数值在平均值加减三倍标准差的范围内
- en: This is based on the fact that most data follows the normal distribution curve.
    When we order the data and plot the values, the histogram looks like a bell curve.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是基于大多数数据遵循正态分布曲线的事实。当我们对数据进行排序并绘制数值时，直方图看起来像钟形曲线。
- en: Standardization
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准化
- en: Knowing the concept of standard deviation and mean, we can normalize our data.
    This process is known as **standardization** and the statistical measure derived
    from the process is known as the **standard score** (`z-score`). When we have
    datasets with large values, standardization is an effective way to summarize the
    data and quantify it.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 了解标准差和平均值的概念后，我们可以对数据进行标准化。这个过程被称为**标准化**，从这个过程中得到的统计量被称为**标准分数**（`z-score`）。当我们有大量值的数据集时，标准化是总结数据和量化数据的有效方法。
- en: So to convert any value to a standard score (`z-score`), we need to first subtract
    the value from the mean, then divide by the standard deviation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，要将任何值转换为标准分数（`z-score`），我们需要首先从平均值中减去该值，然后除以标准差。
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Statistical functionality provided by the API
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API提供的统计功能
- en: Let's investigate what the API has to offer us in terms of these basic statistical
    measures. Later we will use these statistical measures in our application to provide
    better insight into the data. We will also use these techniques in our visualization
    techniques.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们调查API在这些基本统计量方面提供了什么。稍后我们将在我们的应用程序中使用这些统计量，以更好地了解数据。我们还将在我们的可视化技术中使用这些技术。
- en: StatisticDefinition module
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: StatisticDefinition模块
- en: The API provides a module called the `StatisticalDefinition` module, which can
    be used in conjunction with the Query task and Query modules to extract the basic
    statistical measures we just discussed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: API提供了一个名为`StatisticalDefinition`的模块，可以与查询任务和查询模块一起使用，提取我们刚刚讨论的基本统计量。
- en: 'Module name: `esri/tasks/StatisticDefinition`'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 模块名称：`esri/tasks/StatisticDefinition`
- en: 'The following are the properties used to define a statistic definition object:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用于定义统计定义对象的属性：
- en: '`onStatisticField`: Used to define the field on which statistics will be calculated'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onStatisticField`：用于定义将计算统计量的字段'
- en: '`outStatisticFieldName`: The name of the output field'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`outStatisticFieldName`：输出字段的名称'
- en: '`statisticType`: Used to define the type of statistic. The accepted statistic
    types are:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`statisticType`：用于定义统计类型。接受的统计类型包括：'
- en: '`min`: to get the minimum statistic'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`：获取最小统计量'
- en: '`max`: to get the maximum statistic'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`：获取最大统计量'
- en: '`sum`: the get the sum statistic'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sum`：获取总和统计量'
- en: '`avg`: to derive the average value statistic'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`avg`：推导平均值统计量'
- en: '`stddev`: to derive the standard deviation statistic'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stddev`：推导标准差统计量'
- en: Let's try to use these and derive these statistical measures on the demographics
    layer URL we just provided at the beginning of the chapter.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试在本章开头提供的人口统计图层URL上使用这些并推导这些统计量。
- en: 'The following screenshot shows a code snippet and explains how these statistics
    are derived for the county layer in the demographics map service:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一个代码片段，并解释了如何为人口统计地图服务中的县级图层推导这些统计量：
- en: '![StatisticDefinition module](graphics/B04959_07_01.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![StatisticDefinition模块](graphics/B04959_07_01.jpg)'
- en: The required statistics can be extracted using this simple code snippet.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用这个简单的代码片段提取所需的统计数据。
- en: 'The console screen should look like this after the code has been executed:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 代码执行后，控制台屏幕应该如下所示：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The derived statistics such as `Plus1StdDev`, `Plus2StdDev`, `Plus3StdDev`,
    `Minus1StdDev`, `Minus2StdDev`, and `Minus3StdDev` shall be used later to render
    the data better.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后将使用推导的统计量，如`Plus1StdDev`、`Plus2StdDev`、`Plus3StdDev`、`Minus1StdDev`、`Minus2StdDev`和`Minus3StdDev`来更好地呈现数据。
- en: Classification methods
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分类方法
- en: 'When we have a large quantity of data, we use rendering methods to classify
    it. We need to identify an appropriate classification method to create the class
    breaks. The following classification methods are supported by the API:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有大量数据时，我们使用渲染方法对其进行分类。我们需要确定一个适当的分类方法来创建类别间断点。API支持以下分类方法：
- en: Equal interval
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等间隔
- en: Natural breaks
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然断点
- en: Quantile
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分位数
- en: Standard deviation
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准差
- en: Let's discuss very briefly the implications of using each classification method.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要讨论使用每种分类方法的影响。
- en: Equal interval
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 等间隔
- en: This classification method breaks the data into equal parts. We need to know
    the data range to use this classification method. This method should be used when
    the data is dispersed and well distributed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这种分类方法将数据分成相等的部分。我们需要知道数据范围以使用这种分类方法。当数据分散且分布良好时，应使用此方法。
- en: '![Equal interval](graphics/B04959_07_02.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![等间隔](graphics/B04959_07_02.jpg)'
- en: Natural breaks
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自然断点
- en: Natural breaks is a classification method based on the Jenks Break Algorithm.
    Basically, this algorithm creates more numbers of breaks at locations where data
    is more clustered. This is done by seeking to minimize each class's average deviation
    from the class mean, while maximizing each class's deviation from the means of
    the other groups. In other words, the method seeks to reduce the variance within
    classes and maximize the variance between classes.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 自然断点是基于Jenks断点算法的分类方法。基本上，该算法在数据更加聚集的位置创建更多的断点。这是通过寻求最小化每个类的平均偏差来实现的，同时最大化每个类与其他组的平均值的偏差。换句话说，该方法旨在减少类内的方差，并最大化类间的方差。
- en: '![Natural breaks](graphics/B04959_07_03.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![自然断点](graphics/B04959_07_03.jpg)'
- en: Quantile
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分位数
- en: This method classifies data such that there are an equal number of data points
    in each group.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法对数据进行分类，使每个组中的数据点数量相等。
- en: Standard deviation
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标准差
- en: As discussed previously, standard deviation is a measure of how much the data
    deviates from the mean. Using this classification methodology, we can find how
    much and also where the data is within beyond three standard deviations (outliers'
    cases), between two and three standard deviations (higher and lower end values),
    and within one standard deviation from the mean.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，标准差是数据偏离平均值的度量。使用这种分类方法，我们可以找出数据偏离平均值超出三个标准差的程度（异常值的情况），在两个和三个标准差之间的数据（较高和较低的值），以及距离平均值一个标准差内的数据。
- en: '![Standard deviation](graphics/B04959_07_04.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![标准差](graphics/B04959_07_04.jpg)'
- en: Concept of normalization
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 归一化概念
- en: 'Normalizing a data value is useful for computing a lot of things. Consider
    the following scenarios:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据值进行归一化对于计算许多事情都很有用。考虑以下情景：
- en: '**Case 1**: We need to symbolize how densely populated each state is. Symbolizing
    based on the population field would give a wrong measure or convey wrong information.
    All we might have to do is to divide each state''s population by its geographic
    area to get a measure of the population density.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Case 1**：我们需要符号化每个州的人口密度。基于人口字段的符号化会给出错误的度量或传达错误的信息。我们可能只需要将每个州的人口除以其地理面积，以得到人口密度的度量。'
- en: Similarly, if we need to convey the percentage of youth population (age < 35)
    against the total population, we need to divide the field having the youth population
    by the field displaying the total population.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果我们需要传达年轻人口（年龄<35岁）占总人口的百分比，我们需要将拥有年轻人口的字段除以显示总人口的字段。
- en: '**Case 2**: When trying to symbolize the income distribution of the entire
    world, we may encounter a large range of values. If we were to use a color or
    opacity renderer, some countries would be on the higher end of the spectrum, while
    some would be at the bottom with many in between, with lots of color information
    not really used up. In such scenarios, it would be more useful to display the
    income distribution using a logarithmic scale.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Case 2**：当尝试符号化整个世界的收入分布时，我们可能会遇到大范围的值。如果我们使用颜色或不透明度渲染器，一些国家将位于光谱的较高端，而一些国家将位于底部，中间有许多国家，但实际上并没有使用太多的颜色信息。在这种情况下，使用对数刻度来显示收入分布将更有用。'
- en: '**Case 3**: When we need to calculate the value as a percentage of totals such
    as crime data or number of participants from each state in a marathon, we need
    to divide the value by the total.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Case 3**：当我们需要计算值作为总数的百分比时，例如犯罪数据或每个州参加马拉松比赛的参与者人数，我们需要将该值除以总数。'
- en: Many renderers have a `normalizationField` and `normalizationType` property
    to implement such normalization.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 许多渲染器都有`normalizationField`和`normalizationType`属性来实现这种归一化。
- en: '`normalizationField` lets us define the field that is used for normalization.
    For example, for *Case 1*, the `Area` field and `Total Population` field is the
    `normalizationField`.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`normalizationField`让我们定义用于归一化的字段。例如，对于*Case 1*，`Area`字段和`Total Population`字段是`normalizationField`。'
- en: '`normalizationType` is the type of normalizing that needs to be performed on
    the value. The three possible values for `normalizationType` are field, log, and
    percent-of-total. For example, for *Case 1*, we need to use the `normalizationType`
    as `field`. For *Case 2*, we need to use `log`, and for *Case 3*, we need to use
    `percent-of-total` as `normalizationType`.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`normalizationType`是需要对值执行的归一化类型。`normalizationType`的三个可能值是field、log和percent-of-total。例如，对于*Case
    1*，我们需要使用`normalizationType`作为`field`。对于*Case 2*，我们需要使用`log`，对于*Case 3*，我们需要使用`percent-of-total`作为`normalizationType`。'
- en: Feature layer statistics
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要素图层统计
- en: 'In version 3.13 of the API, this plugin was introduced that could prove handy
    for calculating feature layer statistics. Using the feature layer statistics plugin,
    we can calculate the statistics for the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在API的3.13版本中，引入了这个插件，可以方便地计算要素图层的统计信息。使用要素图层统计插件，我们可以计算以下统计信息：
- en: The basic statistics on a field for a feature layer
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要素图层上的基本统计信息
- en: Class break statistics
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类别断点统计
- en: Unique values in a field
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段中的唯一值
- en: Suggested scale range for viewing a layer
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看图层的建议比例范围
- en: Getting a sample feature
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取样本要素
- en: Calculating a histogram
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算直方图
- en: 'The plugin can be added to the feature layer using the following code snippet:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下代码片段将插件添加到要素图层中：
- en: '[PRE3]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the previous snippet, `CountyDemogrpahicsLayer` is the name of the feature
    layer to which the `FeatureLayerStatistics` plugin is being added.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，`CountyDemogrpahicsLayer`是要添加`FeatureLayerStatistics`插件的要素图层的名称。
- en: 'The usual parameters expected by the methods used in the plugin are `field`
    and `classificationMethod`. The `field` plugin refers to the name of the attribute
    field based on which the statistic is computed. The `classificationMethod` refers
    to one of the classification methods discussed previously based on which statistics
    are computed:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 插件中使用的方法所期望的通常参数是`field`和`classificationMethod`。`field`插件是指根据其计算统计数据的属性字段的名称。`classificationMethod`是指根据先前讨论的分类方法之一，计算统计数据的方法：
- en: '[PRE4]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The methods on the plugins always return a promise. The following snippet calculates
    the basic statistical values on the field as defined in `featureLayerStatsParams`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 插件上的方法总是返回一个promise。以下代码片段计算了在`featureLayerStatsParams`中定义的字段上的基本统计值：
- en: '[PRE5]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The results look like this in the browser console:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 结果在浏览器控制台中如下所示：
- en: '[PRE6]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The previous result provided about the same or more information as that derived
    from the statistical definition module that we used earlier.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的结果提供了与我们之前使用的统计定义模块得到的相同或更多的信息。
- en: 'The following snippet calculates the class break values on the field as defined
    in `featureLayerStatsParams`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段计算了在`featureLayerStatsParams`中定义的字段上的类别分隔值：
- en: '[PRE7]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The beautified result looks like this:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 美化后的结果如下：
- en: '[PRE8]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Working with continuous and break renderers
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用连续和分级渲染器
- en: Continuous renderers refers to renderers that symbolize features on a continuous
    spectrum of values unlike unique value renderers. We need to define several `stops`
    or `breakpoints` for such renderers. These `stops` define a class and the renderer
    checks which class each value falls into. Based on the class, the data is visualized
    with the aid of visualization variables such as color, size, opacity, or even
    rotation.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 连续渲染器是指在连续数值范围上对要素进行符号化的渲染器，与唯一值渲染器不同。我们需要为这些渲染器定义几个`stops`或`breakpoints`。这些`stops`定义了一个类，渲染器会检查每个值属于哪个类。根据类别，数据会通过可视化变量（如颜色、大小、透明度甚至旋转）进行可视化。
- en: Using the statistics available, we can use the `ClassBreaksRenderer` provided
    by the API to create classed and continuous renderers easily. `ClassBreaksRenderer`
    symbolizes each graphic based on the value of some numeric attribute with different
    visualization.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 利用可用的统计数据，我们可以使用API提供的`ClassBreaksRenderer`轻松创建分级和连续渲染器。`ClassBreaksRenderer`根据某些数值属性的值对每个图形进行符号化。
- en: 'Module name: `esri/renderers/ClassBreaksRenderer`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 模块名称：`esri/renderers/ClassBreaksRenderer`
- en: 'The setting of color, size, or opacity is enabled on this module with the aid
    of properties such as `colorInfo`, `opacityInfo`, and `sizeInfo`. The following
    methods are available on the `ClassBreaksRenderer`:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用属性如`colorInfo`、`opacityInfo`和`sizeInfo`，可以在此模块上设置颜色、大小或透明度。`ClassBreaksRenderer`上提供了以下方法：
- en: '`setColorInfo`(`colorInfo`): Sets the `colorInfo` property'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setColorInfo`(`colorInfo`): 设置`colorInfo`属性'
- en: '`setOpacityInfo`(`opacityInfo`): Sets opacity info for the renderer as defined
    by the info parameter'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setOpacityInfo`(`opacityInfo`): 根据info参数设置渲染器的透明度信息'
- en: '`setRotationInfo`(`rotationInfo`): Modifies rotation info for the renderer'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setRotationInfo`(`rotationInfo`): 修改渲染器的旋转信息'
- en: '`setSizeInfo`(`sizeInfo`): Sets size info of the renderer to modify the symbol
    size based on the data value'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setSizeInfo`(`sizeInfo`): 设置渲染器的大小信息，以根据数据值修改符号大小'
- en: 'Let''s discuss more about these in detail. The following diagram provides a
    brief guide to developing a renderer:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地讨论这些。以下图表提供了一个开发渲染器的简要指南：
- en: '![Working with continuous and break renderers](graphics/B04959_07_05.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![使用连续和分级渲染器](graphics/B04959_07_05.jpg)'
- en: ColorInfo
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ColorInfo
- en: '`ColorInfo` is an object used to define the color ramp to render the layer.
    We only need to provide discrete sets of color values at the `stops` or sometimes
    just the color values in the ramp:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`ColorInfo`是一个用于定义图层颜色渐变的对象。我们只需要在`stops`处提供离散的颜色值，有时也可以在渐变中只提供颜色值：'
- en: 'A simple `ColorInfo` object example is as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的`ColorInfo`对象示例如下：
- en: '[PRE9]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To create a classed color renderer, we need define a `stops` object to define
    discrete colors instead of continuous colors. A `stops` object will contain the
    color at each `stop`. When defining `stops`, we need *not* define the `minDataValue`
    or `maxDataValue`. Let's discuss a bit about where we can get an appropriate color
    scheme for our renderer.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个分级颜色渲染器，我们需要定义一个`stops`对象来定义离散颜色，而不是连续颜色。一个`stops`对象将包含每个`stop`处的颜色。在定义`stops`时，我们*不*需要定义`minDataValue`或`maxDataValue`。让我们讨论一下在哪里可以获得适合我们渲染器的合适颜色方案。
- en: Selecting a color scheme
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择颜色方案
- en: 'The following website provides us with an easy way to choose a color scheme
    that can be used for constructing a `colorInfo` object or color ramps: [http://colorbrewer2.org/](http://colorbrewer2.org/)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 以下网站为我们提供了一种简单的选择颜色方案的方法，可用于构建`colorInfo`对象或颜色渐变：[http://colorbrewer2.org/](http://colorbrewer2.org/)
- en: 'In this website you can do the following:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个网站上，你可以做以下事情：
- en: Select the number of data classes—the default is `3`. The API's default number
    of classes is `5`. So change the drop down value to `5` classes.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择数据类别的数量，默认值为`3`。API的默认类别数为`5`。因此将下拉值更改为`5`类别。
- en: 'Select the nature of your data:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您数据的性质：
- en: '**sequential**: Use this to show an incremental quantity such as population
    or population density.![Selecting a color scheme](graphics/B04959_07_06.jpg)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sequential**: 用于显示递增的数量，如人口或人口密度。![选择颜色方案](graphics/B04959_07_06.jpg)'
- en: '**diverging**: Use this to emphasize the difference in values, especially at
    the extreme ends. For example, when mapping median income, the lower end of the
    income scale may be displayed in red and the higher end in blue.![Selecting a
    color scheme](graphics/B04959_07_07.jpg)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**diverging**: 用于强调值的差异，特别是在极端端点。例如，当映射收入中位数时，收入范围的较低端可能显示为红色，较高端显示为蓝色。![选择颜色方案](graphics/B04959_07_07.jpg)'
- en: '**qualitative**: This color scheme is used when we need to differentiate distinct
    values or classes using different colors.![Selecting a color scheme](graphics/B04959_07_08.jpg)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定性**：当我们需要使用不同颜色区分不同值或类时，使用此颜色方案。![选择颜色方案](graphics/B04959_07_08.jpg)'
- en: Pick as multihued or a single-hue color scheme.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择多色调或单色调颜色方案。
- en: 'Constraint the color hues based on:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于以下约束条件限制颜色色调：
- en: 'Purpose:'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的：
- en: Color-blind friendly
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 色盲友好
- en: Print friendly
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印友好
- en: Photocopy safe
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复印机安全
- en: 'Context:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背景：
- en: Roads
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 道路
- en: Cities
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 城市
- en: Borders
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边界
- en: 'Export the color scheme as:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将颜色方案导出为：
- en: JavaScript Array object—this is the handiest function
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript数组对象——这是最方便的函数
- en: Adobe PDF
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adobe PDF
- en: '![Selecting a color scheme](graphics/B04959_07_09.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![选择颜色方案](graphics/B04959_07_09.jpg)'
- en: Creating a classed color renderer
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个分级颜色渲染器
- en: 'As we discussed earlier, to create a classed color renderer, we need to define
    a `stops` object to define discrete colors instead of continuous colors. A `stops`
    object will contain the color at each stop. A `stops` object is an array object
    that is assigned to the renderer object. A `stops` array object contains objects
    with the following properties:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，要创建一个分级颜色渲染器，我们需要定义一个`stops`对象来定义离散颜色，而不是连续颜色。`stops`对象将包含每个停止点的颜色。`stops`对象是分配给渲染器对象的数组对象。`stops`数组对象包含具有以下属性的对象：
- en: '`value`'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`'
- en: '`color`'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color`'
- en: '`label`'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label`'
- en: 'A `stops` object mostly looks like this:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`stops`对象大多看起来像这样：'
- en: '[PRE10]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now let''s find a way to automatically populate the `stops` object. Remember
    we can get an array of colors based on a color scheme we select from the `colorbrewer2.org`
    website. The `color` array can be used to fill the `color` property of each object
    in the `stops` object. The `value` property of each object in the `stops` object
    can be derived from the return object of the `featureLayerStatistics` computation.
    The `featureLayerStatistics` computation provides the `minimum`, `maximum`, and
    `label` values for each class. We can assign the maximum value of each class to
    the `value` property for each object in the `stops` object:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们找到一种自动填充`stops`对象的方法。记住，我们可以从`colorbrewer2.org`网站上选择的颜色方案中获取颜色数组。`color`数组可以用来填充`stops`对象中每个对象的`color`属性。`stops`对象中每个对象的`value`属性可以从`featureLayerStatistics`计算的返回对象中派生出来。`featureLayerStatistics`计算为每个类提供`最小值`、`最大值`和`标签`值。我们可以将每个类的最大值分配给`stops`对象中每个对象的`value`属性：
- en: '[PRE11]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Creating a classed color renderer](graphics/B04959_07_10.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个分级颜色渲染器](graphics/B04959_07_10.jpg)'
- en: opacityInfo
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: opacityInfo
- en: '`opacityInfo` is an object that defines how a feature''s opacity is calculated.
    The `opacityInfo` object can be used to set the opacity levels for the classes
    in a `ClassBreaksRenderer`. The `opacityInfo` object can also be used to set a
    continuous opacity renderer.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`opacityInfo`是一个定义特征不透明度如何计算的对象。`opacityInfo`对象可用于为`ClassBreaksRenderer`中的类设置不透明度级别。`opacityInfo`对象也可用于设置连续不透明度渲染器。'
- en: Similar to the `colorInfo` object, you can either specify the opacity values
    as an array along with the minimum and maximum data value, or you can define the
    `stops` object within which you can define the opacity value.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 与`colorInfo`对象类似，您可以指定不透明度值作为数组，以及最小和最大数据值，或者您可以定义`stops`对象，在其中可以定义不透明度值。
- en: 'Using `opacityInfo` to create a continuous renderer:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`opacityInfo`创建一个连续渲染器：
- en: '[PRE12]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Using opacityInfo to create a classes opacity renderer
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用opacityInfo创建一个类别不透明度渲染器
- en: Let's use the `opacityInfo` to render another field representing the diversity
    Index of each county. The diversity index measures diversity on a scale from `0`
    to `100`. The diversity index, an Esri proprietary index, is defined as the likelihood
    that two persons, selected at random from the same area, would belong to a different
    race or ethnic group. The diversity index measures only the degree of diversity
    in an area, not its racial composition.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`opacityInfo`来渲染另一个字段，表示每个县的多样性指数。多样性指数在从`0`到`100`的范围内测量多样性。多样性指数是Esri专有的指数，定义为从同一地区随机选择的两个人属于不同种族或民族群体的可能性。多样性指数仅测量区域的多样性程度，而不是其种族构成。
- en: 'Our objective is to display the counties with a higher diversity index with
    higher opacity values, and counties with a lesser diversity index with lesser
    opacity values. The opacity values can be broken between a minimum and maximum
    value by using the following snippet:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是以更高的不透明度值显示多样性指数较高的县，以及以较低的不透明度值显示多样性指数较低的县。可以使用以下代码段将不透明度值在最小值和最大值之间分割：
- en: '[PRE13]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In the previous snippet, `opacity_stat_result` is the promise result of the
    `getClassBreaks()` method of the `FeatureLayerSatistics` module:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一段代码中，`opacity_stat_result`是`FeatureLayerSatistics`模块的`getClassBreaks()`方法的承诺结果：
- en: '[PRE14]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Using opacityInfo to create a classes opacity renderer](graphics/B04959_07_11.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![使用opacityInfo创建一个类别不透明度渲染器](graphics/B04959_07_11.jpg)'
- en: SizeInfo
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SizeInfo
- en: The `SizeInfo` object defines the size of the symbol where feature size is proportional
    to data value.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`SizeInfo`对象定义了特征大小与数据值成比例的符号大小。'
- en: The API help page mentions that the symbol size can represent two different
    types of data—distance and non-distance. The distance data type refers to the
    actual distance on the field, and the non-distance data type refers to the cartographic
    size of the symbols. Representing the tree canopy using the `sizeInfo` based on
    the actual diameter of the canopy is an example of distance data-type. Representing
    the size of the roads based on the traffic density or size of the states based
    on the population density or median income enhances the cartographic presentation
    of the feature.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: API帮助页面提到符号大小可以代表两种不同类型的数据——距离和非距离。距离数据类型指的是字段上的实际距离，非距离数据类型指的是符号的地图大小。使用`sizeInfo`根据树冠的实际直径表示树冠是距离数据类型的一个例子。根据交通密度表示道路大小，或者根据人口密度或中位收入表示州的大小，可以增强要素的地图呈现。
- en: RotationInfo
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RotationInfo
- en: '`RotationInfo` can be used to define how marker symbols are rotated. `RotationInfo`
    can be used to depict wind direction, vehicle heading, and so on. A field specifying
    the rotation angle must be present to define the `RotationInfo`. There are two
    types of rotation angle units allowed. They are:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`RotationInfo`可用于定义标记符号的旋转方式。`RotationInfo`可用于表示风向、车辆方向等。必须存在指定旋转角度的字段来定义`RotationInfo`。允许使用两种旋转角度单位。'
- en: '**geographic**: This represents angles from the geographic north in a clockwise
    direction. Wind speeds and car directions are normally expressed in geographic
    angles.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理**：这表示从地理北方顺时针方向的角度。风速和汽车方向通常用地理角度表示。'
- en: '**arithmetic**: This represents angles measured in an anticlockwise direction.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**算术**：这表示逆时针方向测量的角度。'
- en: 'The following diagram shows the difference between geographic and arithmetic
    angles:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了地理和算术角度之间的差异：
- en: '![RotationInfo](graphics/B04959_07_12.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![RotationInfo](graphics/B04959_07_12.jpg)'
- en: Multivariate mapping
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多变量映射
- en: So far, we have been discussing rendering features using a single field name
    or variable. And we have also been discussing the various visual variables that
    can be used to render features such as color, opacity, size, rotation, and so
    on. What if we could combine the visual variables and render features based on
    more than one field value?
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在讨论使用单个字段名称或变量来渲染要素的功能。我们还讨论了可以用来渲染要素的各种视觉变量，如颜色、不透明度、大小、旋转等。如果我们能够结合这些视觉变量，并根据多个字段值来渲染要素呢？
- en: 'As an example, when mapping at county level, we may consider using color to
    represent population density, opacity to indicate median household income, and
    size to indicate the percentage of federal spending on education, which is normalized
    by the population field. The number of fields we choose to use is limited to the
    four visual variables, namely: color, opacity, size, and rotation.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在县级别进行映射时，我们可以考虑使用颜色来表示人口密度，使用不透明度来表示家庭收入中位数，并使用大小来表示联邦教育支出占人口字段的百分比。我们选择使用的字段数量限于四个视觉变量，即：颜色、不透明度、大小和旋转。
- en: 'Multivariate mapping is enabled by a property known as `visualVariables` in
    `ClassBreaksRenderer`. Let''s try to use two visual variables, namely `colorInfo`
    and `opacityInfo`, which we used to demonstrate two different demographic parameters,
    namely median household income and diversity index. Our current objective would
    be to represent median house income using color, and at the same time determine
    the opacity value of the features based on the diversity index:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量映射是由`ClassBreaksRenderer`中的`visualVariables`属性启用的。让我们尝试使用两个视觉变量，即`colorInfo`和`opacityInfo`，我们用它们来演示两个不同的人口统计参数，即家庭收入中位数和多样性指数。我们当前的目标是使用颜色来表示家庭收入中位数，并同时根据多样性指数确定要素的不透明度值：
- en: '[PRE15]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Multivariate mapping](graphics/B04959_07_13.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![多变量映射](graphics/B04959_07_13.jpg)'
- en: Smart mapping
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 智能映射
- en: With the knowledge of all these statistics, it's time to go smart with mapping
    using the smart mapping module provided by the API. Imagine a module that can
    automatically call the renderer parameters on its own given a few basic inputs,
    such as the feature layer on which the renderer needs to be generated and the
    classification method.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 有了所有这些统计数据的知识，现在是时候使用API提供的智能映射模块进行智能映射了。想象一下，一个模块可以根据一些基本输入自动调用渲染器参数，例如需要生成渲染器的要素图层和分类方法。
- en: 'Module name: `esri/renderers/smartMapping`'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 模块名称：`esri/renderers/smartMapping`
- en: 'The smart mapping module provides several methods, each of which produces a
    renderer. The renderers that the smart mapping module can produce are:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 智能映射模块提供了几种方法，每种方法都会生成一个渲染器。智能映射模块可以生成的渲染器包括：
- en: Color-based classed renderer
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于颜色的分类渲染器
- en: Size-based classed renderer
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于大小的分类渲染器
- en: Type-based renderer
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于类型的渲染器
- en: Heat map renderer
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 热力图渲染器
- en: Smart mapping even takes care of the rendering based on the Basemap. For example,
    a certain color or opacity renderer works well with a darker-themed Basemap such
    as satellite, and certain renderers work well with a light-themed Basemap such
    as street maps.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 智能映射甚至可以根据底图进行渲染。例如，某些颜色或不透明度渲染器在较暗的底图（如卫星图）上效果良好，而某些渲染器在较亮的底图（如街道地图）上效果良好。
- en: 'With three simple steps, you can let the API decide the color scheme and create
    the classes color renderer for you:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 通过三个简单的步骤，您可以让API决定颜色方案，并为您创建类颜色渲染器：
- en: Construct a schemes object from the Esri styles `choropleth` module (import
    `esri/styles/choropleth`)
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Esri样式`choropleth`模块（导入`esri/styles/choropleth`）构建一个方案对象
- en: 'Construct a classed color parameter object with the following properties:'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下属性构建一个分类颜色参数对象：
- en: '`basemap`'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`basemap`'
- en: '`classificationMethod`'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classificationMethod`'
- en: '`layer`'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`layer`'
- en: '`field`'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field`'
- en: '`scheme`—choose the `primaryScheme` property from the schemes object constructed
    earlier'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scheme`——从之前构建的方案对象中选择`primaryScheme`属性'
- en: '`numClasses`'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numClasses`'
- en: Assign a classed color parameter object as a parameter to the `createClassedColorRenderer()`
    method belonging to the smart mapping module
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一个分类颜色参数对象分配为智能映射模块的`createClassedColorRenderer()`方法的参数
- en: Assign the renderer property returned by the smart mapping method to the feature
    layer's `setRenderer()` method as a parameter
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将智能映射方法返回的渲染器属性分配给要素图层的`setRenderer()`方法作为参数
- en: Redraw the feature layer and refresh the legend object
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重绘要素图层并刷新图例对象
- en: 'The following code explains how smart mapping can be used to create a classed
    color renderer:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码解释了如何使用智能映射创建一个分类颜色渲染器：
- en: '[PRE16]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The following screenshots show the classed color renderer created using the
    smart mapping module for four different classifications, namely equal interval,
    natural breaks, quantile, and standard deviation. The user's discretion is used
    to decide which would serve as the best classification method based on the purpose
    of mapping the data, and also the audience.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了使用智能制图模块创建的分级颜色渲染器，分别为等间隔、自然断点、分位数和标准偏差四种不同的分类。用户可以自行决定根据地图数据的目的和受众群体，选择最适合的分类方法。
- en: We can manually define the color scheme by editing the `scheme` object, which
    is a property in the parameter object for the `createClassedColorRenderer()` method.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过编辑`scheme`对象来手动定义颜色方案，该对象是`createClassedColorRenderer()`方法的参数对象中的一个属性。
- en: '![Smart mapping](graphics/B04959_07_14.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: 智能制图
- en: Summary
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We are one step closer to becoming a map data scientist. We covered a lot of
    ground in this chapter, starting with a brush up of a few introductory statistics
    concepts. We then saw the code in action in how a statistics definition and feature
    layer statistics module can give us invaluable statistic measures that can be
    used to render the map data meaningfully. We then evaluated how to use the visual
    variables such as `colorInfo`, `opacityInfo`, `rotationInfo`, and `sizeInfo` effectively
    in a renderer. We also tried to combine these visual variables and performed a
    multivariate rendering. And, finally, we tried our hands at automatic rendering
    using the smart mapping module. In the next chapter, we will be dealing with charts
    and other advanced visualization techniques to provide analytical information
    to the users.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 我们离成为地图数据科学家又近了一步。在本章中，我们涵盖了很多内容，从简要统计概念的复习开始。然后我们看到了代码如何运行，统计定义和要素图层统计模块如何给我们提供宝贵的统计量，可以用来有意义地渲染地图数据。然后我们评估了如何有效地使用视觉变量，如`colorInfo`、`opacityInfo`、`rotationInfo`和`sizeInfo`在渲染器中。我们还尝试结合这些视觉变量进行多变量渲染。最后，我们尝试使用智能制图模块进行自动渲染。在下一章中，我们将讨论图表和其他高级可视化技术，为用户提供分析信息。
