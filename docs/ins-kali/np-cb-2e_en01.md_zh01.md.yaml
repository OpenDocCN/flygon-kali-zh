- en: Chapter 1. Winding Along with IPython
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章：使用 IPython
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下秘籍：
- en: Installing IPython
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 IPython
- en: Using IPython as a shell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 IPython 作为 Shell
- en: Reading manual pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读手册页
- en: Installing matplotlib
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Matplotlib
- en: Running an IPython notebook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 IPython 笔记本
- en: Exporting an IPython notebook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出 IPython 笔记本
- en: Importing a web notebook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入网络笔记本
- en: Configuring a notebook server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置笔记本服务器
- en: Exploring the SymPy profile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 SymPy 配置文件
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'IPython, which is available at [http://ipython.org/](http://ipython.org/),
    is a free, open source project available for Linux, Unix, Mac OS X, and Windows.
    The IPython authors only request that you cite IPython in any scientific work
    where IPython was used. IPython provides an architecture for interactive computing.
    The most notable part of this project is the IPython shell. IPython provides the
    following components, among others:'
  prefs: []
  type: TYPE_NORMAL
  zh: IPython，可从[`ipython.org`](http://ipython.org/)获得，是一个免费的开源项目  ，可用于 Linux，Unix，MacOSX，
    和 Windows。 IPython 作者仅要求您在使用 IPython 的任何科学著作中引用 IPython。 IPython 提供了用于交互式计算的架构。
    该项目最值得注意的部分是 IPython 外壳。 IPython 提供了以下组件，其中包括：
- en: Interactive Python shells (terminal-based and Qt application)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交互式 Python 外壳（基于终端的 Qt 应用）
- en: A web notebook (available in IPython 0.12 and later) with support for rich media
    and plotting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Web 笔记本（在 IPython 0.12 和更高版本中可用），支持富媒体和绘图
- en: IPython is compatible with Python versions 2.5, 2.6, 2.7, 3.1, 3.2, 3.3, and
    3.4\. The compatibility depends on the IPython version. For instance, IPython
    2.3.0 requires Python 2.7 or 3.3+.
  prefs: []
  type: TYPE_NORMAL
  zh: IPython 与 Python 2.5、2.6、2.7、3.1、3.2、3.3 和 3.4 版本兼容。 兼容性取决于 IPython 版本。 例如，IPython
    2.3.0 需要 Python 2.7 或 3.3+。
- en: You can try IPython in the cloud without installing it on your system by going
    to [http://www.pythonanywhere.com/try-ipython/](http://www.pythonanywhere.com/try-ipython/).
    There is a slight delay compared to locally installed software, so this is not
    as good as the real thing. However, most of the features available in the IPython
    interactive shell seem to be available. PythonAnywhere also has a Vi (m) editor,
    which if you like vi, is obviously great. You can save and edit files from your
    IPython sessions.
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[`www.pythonanywhere.com/try-ipython`](http://www.pythonanywhere.com/try-ipython/)上在云中尝试 IPython 而不将其安装在系统上。
    与本地安装的软件相比，会有一些延迟，因此这不如真实的软件好。 但是，  IPython 交互式外壳程序中可用的大多数功能似乎都可用。 PythonAnywhere
    也有一个 Vi(m) 编辑器，如果您喜欢 Vi 的话，那显然很棒。 您可以从 IPython 会话中保存和编辑文件。
- en: Installing IPython
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 IPython
- en: IPython can be installed in various ways, depending on your operating system.
    For the terminal-based shell, there is a dependency on `readline`. The web notebook
    requires `tornado` and `zmq`.
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过多种方式安装 IPython ，具体取决于您的操作系统。 对于基于终端的外壳，需要依赖`readline`。 网络笔记本需要`tornado`和`zmq`。
- en: In addition to installing IPython, we will install `setuptools`, which gives
    you the `easy_install` command. The `easy_install` command is a popular `package`
    manager for Python. `pip` can be installed once you have `easy_install`. The `pip`
    command is similar to `easy_install` and adds options such as uninstalling.
  prefs: []
  type: TYPE_NORMAL
  zh: 除了安装 IPython 外，我们还将安装`setuptools`，它为您提供`easy_install`命令。 `easy_install`命令是 Python
    的流行`package`管理器。 一旦拥有`easy_install`即可安装`pip`。 `pip`命令类似于`easy_install`，并添加了诸如卸载之类的选项。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'This section describes how IPython can be installed on Windows, Mac OS X, and
    Linux. It also describes how to install IPython and its dependencies with `easy_install`
    and `pip`, or from source:'
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍如何在 Windows，MacOSX 和 Linux 上安装 IPython。 它还描述了如何使用`easy_install`和`pip`或从源代码安装
    IPython 及其依赖项：
- en: '**Installing IPython and setuptools on Windows**: A binary Windows installer
    for Python 2 or Python 3 is available on the IPython website. Also see [http://ipython.org/ipython-doc/stable/install/install.html#windows](http://ipython.org/ipython-doc/stable/install/install.html#windows).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 Windows 上安装 IPython 和 Setuptools**：IPython 网站上提供了适用于 Python2 或 Python3
    的二进制 Windows 安装程序。 另见[`ipython.org/ipython-doc/stable/install/install.html#windows`](http://ipython.org/ipython-doc/stable/install/install.html#windows)。'
- en: 'Install setuptools with an installer from [http://pypi.python.org/pypi/setuptools#files](http://pypi.python.org/pypi/setuptools#files).
    Then install `pip`, like this:'
  prefs: []
  type: TYPE_NORMAL
  zh: 使用来自[`pypi.python.org/pypi/setuptools#files`](http://pypi.python.org/pypi/setuptools#files)的安装程序安装 Setuptools。 然后安装`pip`，如下所示：
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Installing IPython on Mac OS X**: Install the Apple Developer Tools (Xcode)
    if necessary. Xcode can be found at [https://developer.apple.com/xcode/](https://developer.apple.com/xcode/).
    Follow the `easy_install/pip` instructions or the instructions for installation
    from source provided later in this section.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 MacOSX 上安装 IPython**：如果需要，请安装苹果开发者工具（Xcode）。 可以在[`developer.apple.com/xcode`](https://developer.apple.com/xcode/)上找到  Xcode。
    请遵循`easy_install/pip`说明或本节后面提供的从源安装的说明。'
- en: '**Installing IPython on Linux**: Since there are so many Linux distributions,
    this section will not be exhaustive:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 Linux 上安装 IPython**：由于 Linux 发行版太多，因此本节将不详尽：'
- en: 'On Debian, type the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Debian 上，键入以下命令：
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'On Fedora, the magic command is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Fedora 上，魔术命令如下：
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following command will install IPython on Gentoo:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下命令将在 Gentoo 上安装 IPython：
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For Ubuntu, the install command is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Ubuntu，安装命令如下：
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Installing IPython with easy_install or pip**: Install IPython and all the
    dependencies required for the recipes in this chapter with `easy_install` using
    the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用`easy_install`或`pip`安装 IPython**：使用以下命令，通过`easy_install`安装 IPython 和本章中的秘籍所需的所有依赖项：'
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Alternatively, you can first install pip with `easy_install` by typing this
    command in your terminal:'
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以通过在终端中键入以下命令，首先使用`easy_install`安装`pip`：
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After that, install IPython using `pip`:'
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，使用`pip`安装 IPython：
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Installing from source**: If you want to use the bleeding-edge development
    version, then installing from source is for you:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源代码安装**：如果您想使用最新的开发版本，则从源代码安装适合您：'
- en: Download the latest source archive from [https://github.com/ipython/ipython/archive/master.zip](https://github.com/ipython/ipython/archive/master.zip).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[`github.com/ipython/ipython/archive/master.zip`](https://github.com/ipython/ipython/archive/master.zip)下载最新的源存档。
- en: 'Unpack the source code from the archive:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从存档中解压缩源代码：
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Instead, if you have Git installed, you can clone the Git repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相反，如果您已安装 Git，则可以克隆 Git 仓库：
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Go to the root directory within the downloaded source:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到下载源中的根目录：
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Run the setup script. This may require you to run the command with `sudo`,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行安装脚本。 这可能需要您使用`sudo`运行命令，如下所示：
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: We installed IPython using several methods. Most of these methods install the
    latest stable release, except when you install from source, which will install
    the development version.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用几种方法安装了 IPython。 这些方法大多数都安装最新的稳定版本，但从源代码安装时除外，这将安装开发版本。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Instructions from the official IPython website at [http://ipython.org/install.html](http://ipython.org/install.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '来自 IPython 官方网站的说明位于[`ipython.org/install.html`](http://ipython.org/install.html)'
- en: Using IPython as a shell
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 IPython 作为外壳
- en: Scientists and engineers are used to experimenting. IPython was created by scientists
    with experimentation in mind. The interactive environment that IPython provides
    is viewed by many as a direct answer to MATLAB, Mathematica, Maple, and R.
  prefs: []
  type: TYPE_NORMAL
  zh: 科学家和工程师习惯进行实验。 IPython 是科学家根据实验而创建的。 IPython 提供的交互式环境被许多人视为对 MATLAB，Mathematica，Maple
    和 R 的直接回答。
- en: 'The following is a list of features of the IPython shell:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 IPython 外壳的功能列表：
- en: Tab completion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制表符补全
- en: History mechanism
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史机制
- en: Inline editing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内联编辑
- en: The ability to call external Python scripts with `%run`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`%run`调用外部 Python 脚本的功能
- en: The ability to call magic functions that interact with the operating system
    shell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用与操作系统外壳程序交互的魔术函数的能力
- en: Access to system commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问系统命令
- en: The `pylab` switch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pylab`开关'
- en: Access to Python debugger and profiler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 Python 调试器和分析器
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'This section describes how to use the IPython shell:'
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何使用 IPython 外壳：
- en: '`pylab`: The `pylab` switch automatically imports all the SciPy, NumPy, and
    matplotlib packages. Without this switch, we would have to import these packages
    ourselves.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pylab`：`pylab`开关会自动导入所有 SciPy，NumPy 和 Matplotlib 包。 没有此开关，我们将不得不自行导入这些包。'
- en: 'All we need to do is enter the following instruction on the command line:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的就是在命令行中输入以下指令：
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Saving a session**: We might want to be able to go back to our experiments.
    In IPython, it is easy to save a session for later use. This is done with the
    following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存会话**：我们可能希望能够返回到我们的实验。 在 IPython 中，很容易保存会话以供以后使用。 这是通过以下命令完成的：'
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Logging can be switched off using this command:'
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令关闭日志记录：
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Executing a system shell command**: You can execute a system shell command
    in the default IPython profile by prefixing the command with the `!` symbol. For
    instance, the following input will get the current date:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行系统外壳命令**：您可以在默认的 IPython 配置文件中通过在命令前面加上`!`符号来执行系统外壳命令。 例如，以下输入将获取当前日期：'
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In fact, any line prefixed with `!` is sent to the system shell. We can also
    store the command output, as shown here:'
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，任何以`!`为前缀的行都将发送到系统外壳。 我们还可以存储命令输出，如下所示：
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**Displaying history**: We can show the history of commands with the `%hist`
    command, like this:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示历史记录**：我们可以使用`%hist`命令显示命令的历史记录，如下所示：'
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This is a common feature in **Command-line Interface** (**CLI**) environments.
    We can also look up the history with the `-g` switch:'
  prefs: []
  type: TYPE_NORMAL
  zh: 这是**命令行界面**（**CLI**）环境中的常见功能。 我们还可以使用`-g`开关查询历史记录：
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ''
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
  zh: ''
- en: You can download the example code files for all Packt Publishing books you have
    purchased from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to get the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
  zh: ''
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: We saw a number of so-called magic functions in action. These functions start
    with the `%` character. If a magic function is used in a line by itself, the `%`
    prefix is optional.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了许多所谓的魔术功能在起作用。 这些功能以`%`字符开头。 如果单独在行中使用魔术函数，则`%`前缀是可选的。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: '*IPython as a system shell* from the official IPython website at [http://ipython.org/ipython-doc/dev/interactive/shell.html](http://ipython.org/ipython-doc/dev/interactive/shell.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '《IPython 作为系统外壳》，来自 IPython 官方网站，位于[`ipython.org/ipython-doc/dev/interactive/shell.html`](http://ipython.org/ipython-doc/dev/interactive/shell.html)。'
- en: Reading manual pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读手册页
- en: We can open the documentation for NumPy functions with the `help` command. It
    is not necessary to know the name of a function. We can type a few characters
    and then let tab completion do its work. For instance, let's browse the available
    information for the `arange()` function.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`help`命令打开有关 NumPy 函数的文档。 不必知道函数的名称。 我们可以输入几个字符，然后让制表符完成工作。 例如，让我们浏览`arange()`函数的可用信息。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'We can browse the available information in either of the following ways:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下两种方式之一浏览可用信息：
- en: '**Calling the help function**: Call the `help` command. Type a few characters
    of the function and then press the *Tab* key (see the following screenshot):![How
    to do it...](img/0945OS_01_01.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调用帮助功能**：调用`help`命令。 输入该功能的几个字符，然后按`Tab`键（请参见以下屏幕截图）：![操作步骤](img/0945OS_01_01.jpg)'
- en: '**Querying with a question mark**: Another option is to put a question mark
    behind the function name. You will then, of course, need to know the function
    name, but you don''t have to type the `help` command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**带问号的查询**：另一个选择是在函数名称后添加问号。 然后，您当然需要知道函数名称，但是不必键入`help`命令：'
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: Tab completion is dependent on `readline`, so you need to make sure it is installed.
    The question mark gives you information from `docstrings`.
  prefs: []
  type: TYPE_NORMAL
  zh: 制表符的完成取决于`readline`，因此您需要确保已安装它。 问号为您提供`docstrings`中的信息。
- en: Installing matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Matplotlib
- en: matplotlib (all lowercase by convention) is a very useful Python plotting library,
    and we will need it for the following recipes as well as more later on. It depends
    on NumPy, but in all likelihood, you already have NumPy installed.
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib（按惯例小写所有字母）是一个非常有用的 Python 绘图库，对于以下秘籍以及以后的内容，我们将需要它  。 它取决于 NumPy，但很可能已经安装了
    NumPy。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'We will see how matplotlib can be installed on Windows, Linux, and Mac OS X,
    and also how to install it from source:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到如何在 Windows，Linux 和 MacOSX 上安装 Matplotlib，以及如何从源代码安装它：
- en: '**Installing matplotlib on Windows**: You can install this with the Enthought
    distribution, also known as Canopy ([http://www.enthought.com/products/epd.php](http://www.enthought.com/products/epd.php)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 Windows 上安装 Matplotlib**：您可以使用 Enthought 发行版，也称为 Canopy（[`www.enthought.com/products/epd.php`](http://www.enthought.com/products/epd.php)）。'
- en: It might be necessary to put the `msvcp71.dll` file in your `C:\Windows\system32`
    directory. You can get it from [http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71](http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71).
  prefs: []
  type: TYPE_NORMAL
  zh: 可能需要将`msvcp71.dll`文件放在您的`C:\Windows\system32`目录中。 您可以从[`www.dll-files.com/dllindex/dll-files.shtml?msvcp71`](http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71)获取。
- en: '**Installing matplotlib on Linux**: Let''s see how matplotlib can be installed
    in the various distributions of Linux:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 Linux 上安装 Matplotlib**：让我们看看如何在 Linux 的各种发行版中安装 Matplotlib：'
- en: 'Here is the install command on Debian and Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Debian 和 Ubuntu 上的安装命令：
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The install command on Fedora/Redhat is as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Fedora/Redhat 上的安装命令如下：
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Installing from source**: You can download the latest source from the `tar.gz`
    release at Sourceforge ([http://sourceforge.net/projects/matplotlib/files/](http://sourceforge.net/projects/matplotlib/files/)),
    or from the Git repository using the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源代码安装**：您可以下载 Sourceforge（ [`sourceforge.net/projects/matplotlib/files`](http://sourceforge.net/projects/matplotlib/files/)）的`tar.gz`版本或从 Git 仓库下载最新的源代码：'
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Once it has been downloaded, build and install matplotlib as usual with the
    following commands:'
  prefs: []
  type: TYPE_NORMAL
  zh: 下载后，请使用以下命令照常构建和安装 Matplotlib：
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**Installing matplotlib on Mac OS X**: Get the latest DMG file from [http://sourceforge.net/projects/matplotlib/files/matplotlib/](http://sourceforge.net/projects/matplotlib/files/matplotlib/)
    and install it. You can also use the Mac Ports, Fink, or Homebrew package managers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 MacOSX 上安装 Matplotlib**：从[`sourceforge.net/projects/matplotlib/files/matplotlib`](http://sourceforge.net/projects/matplotlib/files/matplotlib/)获取最新的
    DMG 文件 。 您还可以使用 Mac Ports，Fink 或  Homebrew 包管理器。'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Instructions from the official matplotlib documentation are given at [http://matplotlib.org/users/installing.html](http://matplotlib.org/users/installing.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Matplotlib 官方文档中的说明位于[`matplotlib.org/users/installing.html`](http://matplotlib.org/users/installing.html)'
- en: Installing the SciPy stack is explained at [http://www.scipy.org/install.html](http://www.scipy.org/install.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`www.scipy.org/install.html`](http://www.scipy.org/install.html)中说明了如何在 SciPy 栈中安装。
- en: Running an IPython notebook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 IPython 笔记本
- en: 'IPython has an exciting feature—the web notebook. A so-called **notebook server**
    can serve notebooks over the Web. We can now start a notebook server and get a
    web-based IPython environment. This environment has most of the features that
    the regular IPython environment has. The IPython notebook''s features include
    the following:'
  prefs: []
  type: TYPE_NORMAL
  zh: IPython 具有一项令人兴奋的功能——网络笔记本。 所谓的**笔记本服务器**可以通过 Web 服务笔记本电脑。 现在，我们可以启动笔记本服务器并获得基于
    Web 的 IPython 环境。 该环境具有常规 IPython 环境具有的大多数功能。 IPython 笔记本的功能包括：
- en: Displaying images and inline plots
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示图像和内嵌图
- en: Using HTML and **Markdown** (this is a simplified HTML-like language see [https://en.wikipedia.org/wiki/Markdown](https://en.wikipedia.org/wiki/Markdown))
    in text cells
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在文本单元格中使用 HTML 和 **Markdown**（这是一种简化的类似 HTML 的语言，请参见[`en.wikipedia.org/wiki/Markdown`](https://en.wikipedia.org/wiki/Markdown)）
- en: Importing and exporting of notebooks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本的导入导出
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: Before we start, we should make sure that all of the required software is installed.
    There is a dependency on `tornado` and `zmq`. See the *Installing IPython* recipe
    in this chapter for more information.
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们应确保已安装所有必需的软件。 依赖于`tornado`和`zmq`。 有关更多信息，请参见本章中的“安装 IPython”秘籍。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: '**Running a notebook**: We can start a notebook with the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行笔记本**：我们可以使用以下命令启动笔记本：'
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'As you can see, we are using the default profile. A server started on the local
    machine at port 8888\. You will learn how to configure these settings later on
    in this chapter. The notebook is opened in your default browser; this is configurable
    as well (see the following screenshot):'
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们正在使用默认配置文件。 服务器在本地计算机上的端口 8888 上启动。稍后，您将在本章中学习如何配置这些设置。 笔记本在默认浏览器中打开；
    这也是可配置的（请参见以下屏幕截图）：
- en: '![How to do it...](img/0945OS_01_02.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_01_02.jpg)'
- en: IPython lists all the notebooks in the directory where you started the notebook.
    In this example, no notebooks were found. The server can be stopped by pressing
    *Ctrl* + *C*.
  prefs: []
  type: TYPE_NORMAL
  zh: IPython 在启动笔记本的目录中列出了所有笔记本。 在本示例中，未找到笔记本。 可以通过按`Ctrl + C`停止服务器。
- en: '**Running a notebook in the pylab mode**: Run a web notebook in the pylab mode
    with the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以`pylab`模式运行笔记本**：使用以下命令以`pylab`模式运行网络笔记本：'
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This loads the `SciPy`, `NumPy`, and `matplotlib` modules.
  prefs: []
  type: TYPE_NORMAL
  zh: 这将加载`SciPy`，`NumPy`和`matplotlib`模块。
- en: '**Running a notebook with inline figures**: We can display inline matplotlib
    plots with the `inline` directive using the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行带有内联图形的笔记本**：我们可以使用以下命令，通过`inline`指令显示内联 Matplotlib 绘图：'
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The following steps demonstrate the IPython notebook functionality:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤演示了 IPython 笔记本的功能：
- en: Click on the **New Notebook** button to create a new notebook.![How to do it...](img/0945OS_01_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**新笔记本**按钮来创建新笔记本。![操作步骤](img/0945OS_01_03.jpg)
- en: Create an array with the `arange()` function. Type the command shown in the
    following screenshot and click on **Cell**/**Run**:![How to do it...](img/0945OS_01_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`arange()`函数创建一个数组。 输入以下屏幕快照中所示的命令，然后单击**单元格 / 运行**：![操作步骤](img/0945OS_01_04.jpg)
- en: Next enter the following command and press *Enter*. You will see the output
    in **Out [2]**, as shown in the following screenshot:![How to do it...](img/0945OS_01_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来输入以下命令，然后按`Enter`。 您将在`Out [2]`中看到输出，如以下屏幕截图所示：![操作步骤](img/0945OS_01_05.jpg)
- en: 'Apply the `sinc()` function to the array and plot the result, as shown in this
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将  `sinc()`函数应用于数组并绘制结果，如以下屏幕快照所示：
- en: '![How to do it...](img/0945OS_01_06.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_01_06.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The inline option lets you display inline matplotlib plots. When combined with
    the `pylab` mode, you don't need to import the NumPy, SciPy, and matplotlib packages.
  prefs: []
  type: TYPE_NORMAL
  zh: 内联选项使可以显示内联 Matplotlib 绘图。 与`pylab`模式结合使用时，无需导入 NumPy，SciPy 和 Matplotlib 包。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Installing IPython* recipe found in this chapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的“安装 IPython”秘籍
- en: Example notebooks at [http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/Index.ipynb](http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/Index.ipynb)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '示例笔记本位于[`nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/Index.ipynb`](http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/Index.ipynb)'
- en: Documentation for the `sinc()` function at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.sinc.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.sinc.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sinc()`函数的文档位于[`docs.scipy.org/doc/numpy/reference/generated/numpy.sinc.html`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.sinc.html)'
- en: Documentation for the `plot()` function at [http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot()`函数的文档位于[`matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot`](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot)'
- en: Exporting an IPython notebook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出 IPython 笔记本
- en: Sometimes, you would want to exchange notebooks with friends or colleagues.
    The web notebook provides several methods to export your data.
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您想与朋友或同事交换笔记本。 网络笔记本提供了几种导出数据的方法。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'A web notebook can be exported using the following options:'
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下选项导出 Web 笔记本：
- en: '**The Print option**: The **Print** button doesn''t actually print the notebook,
    but allows you to export the notebook as a PDF or HTML document.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打印选项**：**打印**按钮实际上并未打印笔记本，但允许您将笔记本导出为 PDF 或 HTML 文档。'
- en: '**Downloading the notebook**: Download your notebook to a location chosen by
    you, using the **Download** button. We can specify whether we want to download
    the notebook as a `.py` file, which is just a normal Python program, or in the
    JSON format as a `.ipynb` file. The notebook we created in the previous recipe
    looks like the following after exporting:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下载笔记本**：使用“下载”按钮将笔记本下载到您选择的位置。 我们可以指定将笔记本下载为`.py`文件（只是普通的 Python 程序），还是下载为
    JSON 格式的`.ipynb`文件。 导出后，我们在前一个秘籍中创建的笔记本如下所示：'
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Some of the text has been omitted for brevity. This file is not intended for
    editing or even reading, but it is pretty readable if you ignore the image representation
    part. For more information about JSON, see [https://en.wikipedia.org/wiki/JSON](https://en.wikipedia.org/wiki/JSON).
  prefs: []
  type: TYPE_NORMAL
  zh: 为简洁起见，一些文本已被省略。 该文件不适合编辑甚至阅读，但如果忽略图像表示部分，则可读性很强。 有关 JSON 的更多信息，请参见[`en.wikipedia.org/wiki/JSON`](https://en.wikipedia.org/wiki/JSON)。
- en: '**Saving the notebook**: Save the notebook using the **Save** button. This
    will automatically export a notebook in the native JSON format, `.ipynb`. The
    file will be stored in the directory where you started IPython initially.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存笔记本**：使用**保存**按钮保存笔记本。 这会自动以本地 JSON 格式`.ipynb`导出笔记本。 该文件将存储在最初启动 IPython
    的目录中。'
- en: Importing a web notebook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入网络笔记本
- en: Python scripts can be imported as a web notebook. Obviously, we can also import
    previously exported notebooks.
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将 Python 脚本作为 Web 笔记本导入。 显然，我们也可以导入以前导出的笔记本。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: This recipe shows you how a Python script can be imported as a web notebook.
  prefs: []
  type: TYPE_NORMAL
  zh: 此秘籍向您展示如何将 Python 脚本作为 Web 笔记本导入。
- en: 'Load a Python script with this command:'
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令加载 Python 脚本：
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The following screenshot shows an example of what we see after loading `vectorsum.py`
    from *NumPy Beginner''s Guide* into the notebook page:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了从“NumPy 入门指南”加载`vectorsum.py`后进入笔记本页面的示例：
- en: '![How to do it...](img/0945OS_01_07.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_01_07.jpg)'
- en: Configuring a notebook server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置笔记本服务器
- en: A public notebook server needs to be secure. You should set a password and use
    an SSL certificate to connect to it. We need the certificate to provide secure
    communication over HTTPS (for more information, see [https://en.wikipedia.org/wiki/Transport_Layer_Security](https://en.wikipedia.org/wiki/Transport_Layer_Security)).
    HTTPS adds a secure layer on top of the standard HTTP protocol widely used on
    the Internet. HTTPS also encrypts data sent from the client to the server and
    back. A **certificate authority** is often a commercial organization that issues
    certificates for websites. Web browsers have knowledge of certificate authorities
    and can recognize certificates. A website administrator needs to create a certificate
    and get it signed by a certificate authority.
  prefs: []
  type: TYPE_NORMAL
  zh: 公共笔记本服务器需要安全。 您应该设置一个密码并使用 SSL 证书来连接它。 我们需要证书来通过 HTTPS 提供安全的通信（有关更多信息，请参见[`en.wikipedia.org/wiki/Transport_Layer_Security`](https://en.wikipedia.org/wiki/Transport_Layer_Security)）。
    HTTPS 在互联网上广泛使用的标准 HTTP 协议之上添加了一个安全层。 HTTPS 还对从客户端发送到服务器并返回的数据进行加密。**证书颁发机构**通常是为网站颁发证书的商业组织。
    Web 浏览器具有证书颁发机构的知识，并且可以识别证书。 网站管理员需要创建证书并由证书颁发机构签名。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'The following steps describe how to configure a secure notebook server:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤描述了如何配置安全的笔记本服务器：
- en: 'We can generate a password from IPython. Start a new IPython session and type
    in the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以从 IPython 生成密码。 启动一个新的 IPython 会话并输入以下命令：
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: At the second input line, you will be prompted for a password. You need to remember
    this password. A long string is generated. Copy this string because you will need
    it later on.
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个输入行，将提示您输入密码。 您需要记住该密码。 生成一个长字符串。 复制此字符串，因为稍后将需要它。
- en: To create a SSL certificate, you will need the `openssl` command in your path.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建 SSL 证书，您需要在路径中使用`openssl`命令。
- en: Setting up the `openssl` command is not rocket science, but it can be tricky.
    Unfortunately, it is outside the scope of this book. On the brighter side, there
    are plenty of tutorials available online to help you further.
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`openssl`命令不是火箭科学，但这可能很棘手。 不幸的是，这超出了本书的范围。 好的一面是，在线上有很多教程可以帮助您进一步发展。
- en: 'Execute the following command to create a certificate with `mycert.pem` as
    the name:'
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令，以`mycert.pem`为名称创建证书：
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The `openssl` utility prompts you to fill in some fields. For more information,
    check out the relevant man page (short for manual page) as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: '`openssl`工具提示您填写一些字段。 有关更多信息，请查看相关的手册页（手册页的缩写），如下所示：'
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Create a special profile for the server using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令为服务器创建特殊的配置文件：
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Edit the configuration file. In this example, it can be found in `~/.ipython/profile_nbserver/ipython_notebook_config.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑配置文件。 在此示例中，可以在`~/.ipython/profile_nbserver/ipython_notebook_config.py`中找到。
- en: 'The configuration file is pretty large, so we will omit most of the lines in
    it. The lines that we need to change at minimum are as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件很大，因此我们将省略其中的大多数行。 我们至少需要更改的行如下：
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Notice that we are pointing to the SSL certificate we created. We set a password
    and changed the port to 9999.
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们指向的是我们创建的 SSL 证书。 我们设置了密码，并将端口更改为 9999。
- en: 'Using the following command, start the server to check whether the changes
    worked:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令，启动服务器以检查更改是否有效：
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The server is running on port 9999, and you need to connect to it via https.
    If everything goes well, you should see a login page. Also, you will probably
    need to accept a security exception in your browser.
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器在端口 9999 上运行，您需要通过 HTTPS 连接到它。 如果一切顺利，您应该会看到一个登录页面。 另外，您可能需要在浏览器中接受安全例外。
- en: '![How to do it...](img/0945OS_01_08.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_01_08.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: 'We created a special profile for our public server. There are some sample profiles
    that are already present, such as the default profile. Creating a profile adds
    a `profile_<profilename>` folder to the `.ipython` directory with a configuration
    file, among others. The profile can then be loaded with the `--profile=<profile_name>`
    command-line option. We can list the profiles with the following command:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为公共服务器创建了一个特殊的配置文件。 已经有一些样本概要文件，例如默认概要文件。 创建配置文件后，将使用配置文件将`profile_<profilename>`文件夹添加到`.ipython`目录。
    然后可以使用`--profile=<profile_name>`命令行选项加载配置文件  。 我们可以使用以下命令列出配置文件：
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: IPython documentation for the `passwd()` function at [http://ipython.org/ipython-doc/2/api/generated/IPython.lib.security.html](http://ipython.org/ipython-doc/2/api/generated/IPython.lib.security.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'IPython `passwd()`函数的文档位于[`ipython.org/ipython-doc/2/api/generated/IPython.lib.security.html`](http://ipython.org/ipython-doc/2/api/generated/IPython.lib.security.html)'
- en: OpenSSL documentation at [https://www.openssl.org/docs/apps/openssl.html](https://www.openssl.org/docs/apps/openssl.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'OpenSSL 的文档位于[`www.openssl.org/docs/apps/openssl.html`](https://www.openssl.org/docs/apps/openssl.html)'
- en: Exploring the SymPy profile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 SymPy 配置文件
- en: IPython has a sample SymPy profile. SymPy is a Python-symbolic mathematics library.
    We can simplify algebraic expressions or differentiate functions, similar to Mathematica
    and Maple. SymPy is obviously a fun piece of software, but is not necessary for
    our journey through the NumPy landscape. Consider this as an optional or bonus
    recipe. Like a dessert, feel free to skip it, although you might miss out on the
    sweetest piece of this chapter.
  prefs: []
  type: TYPE_NORMAL
  zh: IPython 有一个示例 SymPy 配置文件。 SymPy 是一个 Python 符号数学库。 我们可以简化代数表达式或区分函数，类似于 Mathematica
    和 Maple。 显然，SymPy 是一款有趣的软件，但对于我们穿越 NumPy 的过程而言并不是必需的。 将此视为可选或额外的秘籍。 就像甜点一样，可以随意跳过它，尽管您可能会错过本章中最甜的部分。
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: 'Install SymPy using either `easy_install` or `pip`:'
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`easy_install`或`pip`安装 SymPy：
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'The following steps will help you explore the SymPy profile:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助您探索 SymPy 配置文件：
- en: 'Look at the configuration file, which can be found at `~/.ipython/profile_sympy/ipython_config.py`.
    The content is as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看配置文件，该文件位于`~/.ipython/profile_sympy/ipython_config.py`。内容如下：
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'This code accomplishes the following:'
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码完成以下任务：
- en: Loads the default profile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载默认配置文件
- en: Imports the SymPy packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 SymPy 包
- en: Defines symbols
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义符号
- en: 'Start IPython with the SymPy profile using this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令以 SymPy 配置文件启动 IPython：
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Expand an algebraic expression using the command shown in the following screenshot:![How
    to do it...](img/0945OS_01_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下屏幕快照中所示的命令扩展代数表达式：![操作步骤](img/0945OS_01_09.jpg)
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The SymPy homepage at [http://sympy.org/en/index.html](http://sympy.org/en/index.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'SymPy 主页位于[`sympy.org/en/index.html`](http://sympy.org/en/index.html)'
