["```js\nwindow.navigator.getUserMedia()\n```", "```js\nnavigator.getUserMedia();\n```", "```js\n<video></video>\n<script>\nconst $video = document.querySelector('video');\nif (navigator.getUserMedia) {\n  navigator.getUserMedia(\n    {audio: true, video: true},\n    stream => {\n      $video.srcObject = stream;\n      $video.muted = true; // Video muted to avoid feedback\n      $video.onloadedmetadata = () => {\n        $video.play();\n      };\n    },\n    error => console.error(error)\n  );\n}\n</script>\n```", "```js\n<video></video>\n<script>\nconst $video = document.querySelector('video');\nnavigator.mediaDevices.getUserMedia({audio: true, video: true})\n.then(stream => {\n  $video.srcObject = stream;\n  $video.muted = true;\n  $video.onloadedmetadata = function(e) {\n    $video.play();\n  };\n})\n.catch(console.error);\n</script>\n```", "```js\nbody {\n  padding-top: 65px;\n}\n```", "```js\n.room-text {\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center;\n}\n.room-url {\n  padding: 10px;\n}\n.copy {\n  margin-left: 10px;\n}\n.copied {\n  margin-left: 10px;\n}\n```", "```js\n@media only screen and (max-width: 736px) {\n  .video-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n}\n@media only screen and (min-width: 736px) {\n  .video-area {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n}\n.video-player {\n  max-height: 25vh;\n  max-width: 25vh;\n  margin: 20px;\n}\n```", "```js\nclass Home {\n  constructor() {\n\n  }\n}\n```", "```js\nconst home = new Home();\n```", "```js\nnpm install -S simplewebrtc\n```", "```js\nimport SimpleWebRTC from 'simplewebrtc';\n```", "```js\nconst webrtc = new SimpleWebRTC({\n  localVideoEl: 'localVideo',\n  remoteVideosEl: '',\n  autoRequestMedia: true,\n  debug: false,\n});\n```", "```js\nconstructor() {\n  this.roomName = '';\n\n  this.$createRoomSection = document.querySelector('#createRoomSection');\n  this.$createRoomButton = document.querySelector('#createRoom');\n  this.$roomNameInput = document.querySelector('#roomNameInput');\n\n  this.$infoSection = document.querySelector('#infoSection');\n  this.$roomName = document.querySelector('#roomNameText');\n  this.$roomUrl = document.querySelector('#roomUrl');\n  this.$buttonArea = document.querySelector('.room-text');\n  this.$copy = document.querySelector('.copy');\n  this.$copied = document.querySelector('.copied');\n\n  this.$remotes = document.querySelector('.video-area');\n  this.$localVideo = document.querySelector('#localVideo');\n}\n```", "```js\nthis.$createRoomButton.onclick  = () => { }\n```", "```js\nregisterClicks() {\n}\n```", "```js\nconstructor() {\n  ...\n  this.registerClicks();\n}\n```", "```js\nthis.$createRoomButton.onclick  = () => { }\n```", "```js\nthis.roomName  =  this.$roomNameInput.value.toLowerCase().replace(/\\s/g, '-').replace(/[^A-Za-z0-9_\\-]/g, '');\n```", "```js\nif(this.roomName) {  webrtc.createRoom(this.roomName, (err, name) => {\n    if(!err) {\n      // room created\n    } else {\n      // unable to create room\n      console.error(err);\n    }\n  });\n}\n```", "```js\nconst  newUrl  =  location.pathname  +  '?'  +  name; history.replaceState({}, '', newUrl);\nthis.roomName = name; this.roomCreated();\n```", "```js\nhistory.back();\n```", "```js\nhistory.forward();\n```", "```js\nroomCreated() {\n  this.$infoSection.classList.remove('hidden');\n  this.$createRoomSection.classList.add('hidden');\n  this.$roomName.textContent = `Room Name: ${this.roomName}`;\n  this.$roomUrl.textContent = window.location.href;\n}\n```", "```js\nclass Home {\n  constructor() {\n    ...\n    this.addEventListeners();\n  }\n\n  addEventListeners() {\n  }\n}\n```", "```js\nthis.$buttonArea.addEventListener('mouseenter', () => {\n  this.$copy.classList.remove('hidden');\n});\n```", "```js\nthis.$buttonArea.addEventListener('mouseout', event => {\n  this.$copy.classList.add('hidden');\n  this.$copied.classList.add('hidden');\n});\n```", "```js\nthis.$buttonArea.addEventListener('mouseout', event => {\n  const e = event.toElement || event.relatedTarget;\n  if(e) {\n    if (e.parentNode == this.$buttonArea || e == this.$buttonArea) {\n      return;\n    }\n  }\n  this.$copy.classList.add('hidden');\n  this.$copied.classList.add('hidden');\n});\n```", "```js\nconst e = event.toElement || event.relatedTarget;\n```", "```js\nconst fun = false || '' || true || 'test';\n```", "```js\nregisterClicks() {\n  ...\n  this.$copy.onclick = () => {\n    this.copyUrl();\n  };\n  this.$copied.onclick = () => {\n    this.copyUrl();\n  };\n}\n\ncopyUrl() {\n\n}\n```", "```js\nconst range = document.createRange();\nrange.selectNode(this.$roomUrl);\n```", "```js\nwindow.getSelection().removeAllRanges();\nwindow.getSelection().addRange(range);\n```", "```js\ntry {\n  const successful = document.execCommand('copy');\n  const msg = successful ? 'successful' : 'unsuccessful';\n  console.log('Copying text command was ' + msg);\n  this.$copy.classList.add('hidden');\n  this.$copied.classList.remove('hidden');\n} catch(err) {\n  console.error(err);\n}\n```", "```js\nwindow.getSelection().removeAllRanges();\n```", "```js\nwebrtc.on('readyToCall', () => {\n  if(location.search) {\n    const locationArray = location.search.split('?');\n    const room = locationArray[1];\n  }\n});\n```", "```js\nhttp://localhost:8080/?myRoom\n```", "```js\n'?myRoom'\n```", "```js\n[ '', 'myRoom']\n```", "```js\nwebrtc.on('readyToCall', () => {\n  const room = location.search && location.search.split('?')[1];\n});\n```", "```js\nwebrtc.joinRoom(room);\n```", "```js\nconst inputValue = this.$roomNameInput.value\n```", "```js\n$roomNameInput.value = 'New Room Name'\n```", "```js\nset room(room) {\n  webrtc.joinRoom(room);\n  this.roomName = room;\n  this.roomCreated();\n}\n```", "```js\nconst home = new Home();\n\nwebrtc.on('readyToCall', () => {\n  const room = location.search && location.search.split('?')[1];\n  if(room) home.room = room;\n});\n```", "```js\nget room() {\n  return this.roomName;\n}\n```", "```js\nclass Home {\n  ...\n  addRemoteVideo($video, peer) {\n  }\n}\n```", "```js\nwebrtc.on('videoAdded', ($video, peer) =>  home.addRemoteVideo($video, peer)); \n```", "```js\n<div class=\"video-container\" id=\"container_peerid\">\n  <video class=\"video-player\"></video>\n</div>\n```", "```js\naddRemoteVideo($video, peer) {\n  const $container = document.createElement('div');\n  $container.className = 'video-container';\n  $container.id = 'container_' + webrtc.getDomId(peer);\n\n  $video.className = 'video-player';\n\n  $container.appendChild($video);\n\n  this.$remotes.appendChild($container);\n}\n```", "```js\nclass Home {\n  ...\n\n  removeRemoteVideo(peer) {\n    const $removedVideo = document.getElementById(peer ? 'container_' + webrtc.getDomId(peer) : 'no-video-found');\n    if ($removedVideo) {\n      this.$remotes.removeChild($removedVideo);\n    }\n  }\n\n}\n...\n\nwebrtc.on('videoRemoved', ($video, peer) => home.removeRemoteVideo(peer));\n```", "```js\n@media only screen and (max-width: 736px) {\n  .video-selected {\n    max-height: 70vw;\n    max-width: 70vw;\n  }\n}\n@media only screen and (min-width: 736px) {\n  .video-selected {\n    max-height: 50vh;\n    max-width: 50vh;\n  }\n  .container-selected {\n    order: -1;\n  }\n}\n```", "```js\nclearSelected() {\n  let $selectedVideo = document.querySelector('.video-selected');\n  if($selectedVideo) {\n    $selectedVideo.classList.remove('video-selected');\n    $selectedVideo.parentElement.classList.remove('container-selected');\n  }\n}\n```", "```js\nthis.$localVideo.onclick = () => {\n  this.clearSelected();\n  this.$localVideo.parentElement.classList.add('container-selected');\n  this.$localVideo.classList.add('video-selected');\n};\n```", "```js\n$video.onclick = () => {\n  this.clearSelected();\n  $container.classList.add('container-selected');\n  $video.classList.add('video-selected');\n};\n```", "```js\nnpm install -g local-ssl-proxy\n```", "```js\nhttp://192.168.1.8:8080\n```", "```js\nlocal-ssl-proxy --source 8081 --target 8080\n```", "```js\nhttps://192.168.1.8:8081\n```"]