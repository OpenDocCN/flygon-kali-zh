- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Charles Cézanne famously said about the impressionist painter Claude Monet,
    "Monet is only an eye, but what an eye!" Today, we can similarly say, "ReactJS
    [or if you prefer, "ReactJS is only a view, but what a view!"
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 印象派画家克劳德·莫奈曾经著名地说过：“莫奈只是一双眼睛，但是多么美的一双眼睛！”今天，我们可以类似地说：“ReactJS [或者如果你愿意，"ReactJS只是一个视图，但是多么美的一个视图！"
- en: ReactJS has neither the intention nor the ambition to be a complete, general-purpose
    web framework. It doesn't even include tooling for Ajax calls! Rather, the intent
    is that you will use technologies that make sense for different concerns in your
    application, and use ReactJS's power tools for views and user interface development.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: ReactJS既没有意图也没有野心成为一个完整的通用Web框架。它甚至不包括用于Ajax调用的工具！相反，意图是您将使用适合应用程序不同方面的技术，并使用ReactJS的强大工具来进行视图和用户界面开发。
- en: Functional reactive programming has been an extremely high-hanging fruit, with
    a prohibitive barrier to entry in terms of sheer mathematical expectations assumed
    in order to work with it. No longer with ReactJS! A veteran C++ programmer with
    no particularly deep math background—I said this to pick a profile of programmers
    who keep on saying on Stack Overflow that they don't get functional reactive programming—is
    a veteran programmer who stands a fair chance of getting real work done using
    ReactJS.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式反应式编程一直是一个极其高不可攀的果实，其纯数学期望对于工作来说是一个禁区。但是现在有了ReactJS！一个没有特别深厚数学背景的资深C++程序员——我说这话是为了挑选一类程序员的形象，他们在Stack
    Overflow上一直说他们不懂函数式反应式编程——是一个有很大机会使用ReactJS完成真正工作的程序员。
- en: This book is about ReactJS, a simple and small technology that nonetheless lets
    huge teams work together on different components of a web page without stepping
    on each others' feet, but without a hint of bureaucratic measures. And add some
    liberal help of pixie dust.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是关于ReactJS的，这是一个简单而小巧的技术，尽管如此，它让庞大的团队在网页的不同组件上合作而不会互相干扰，但又没有一丝官僚主义的痕迹。再加上一些自由的仙女粉。
- en: What this book covers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Introduction and Installation"), *Introduction
    and Installation*, provides a 10,000-foot overview of different programming paradigms,
    each of which has its strengths, and an introduction to the trio of functional
    programming, reactive programming, and functional reactive programming.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章. 介绍和安装"), *介绍和安装*，提供了对不同编程范式的一览，每种范式都有其优势，并介绍了函数式编程、反应式编程和函数式反应式编程的三位一体。'
- en: '[Chapter 2](ch02.html "Chapter 2. Core JavaScript"), *Core JavaScript*, covers
    some of JavaScript''s better neighborhoods and omits the minefields, with a debt
    to Douglas Crockford, if not a complete agreement. In terms of the parts of JavaScript
    that you use, you should be doing most of your work within this core.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章. 核心JavaScript"), *核心JavaScript*，涵盖了JavaScript的一些更好的领域，并省略了雷区，这要感谢Douglas
    Crockford，即使不完全同意。就你使用的JavaScript部分而言，你应该在这个核心内完成大部分工作。'
- en: '[Chapter 3](ch03.html "Chapter 3. Reactive Programming – The Basic Theory"),
    *Reactive Programming – The Basic Theory*, is a basic exploration of reactive
    theory, or reactive programming, specifically in relation to Facebook''s ReactJS
    user interface framework.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章. 反应式编程-基本理论"), *反应式编程-基本理论*，是对反应式理论或反应式编程的基本探索，特别是与Facebook的ReactJS用户界面框架相关。'
- en: '[Chapter 4](ch04.html "Chapter 4. Demonstrating Nonfunctional Reactive Programming
    – A Live Example"), *Demonstrating Nonfunctional Reactive Programming – A Live
    Example*, proves that not all development is from scratch. Most professional work
    is not greenfield. This will offer a live example of retrofitting a simple video
    game, the most recent implementation using jQuery, to take advantage of ReactJS
    (if you are using ReactJS, you will probably be doing other conversions from jQuery
    to ReactJS).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章. 演示非功能性反应式编程-实时示例"), *演示非功能性反应式编程-实时示例*，证明并非所有开发都是从零开始的。大多数专业工作并非绿地。这将提供一个实时示例，将一个简单的视频游戏（最近使用jQuery实现）改装以利用ReactJS（如果您正在使用ReactJS，您可能会进行其他从jQuery到ReactJS的转换）。'
- en: '[Chapter 5](ch05.html "Chapter 5. Learning Functional Programming – The Basics"),
    *Learning Functional Programming – The Basics*, helps you if you want to understand
    functional programming but have no idea where to start. Here''s one place to start!
    Map, reduce, and filter are introduced as an inexhaustible bag of tricks.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章. 学习函数式编程-基础知识"), *学习函数式编程-基础知识*，如果你想了解函数式编程但不知道从哪里开始，这里是一个开始的地方！介绍了map、reduce和filter作为一个用不完的技巧袋。'
- en: '[Chapter 6](ch06.html "Chapter 6. Functional Reactive Programming – The Basics"),
    *Functional Reactive Programming – The Basics*, covers what has been said about
    functional programming and reactive programming. It will be put together with
    some sage advice, and the last bit of foundation will be laid for the remaining
    hands-on work in this book.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章. 函数式反应式编程-基础知识"), *函数式反应式编程-基础知识*，涵盖了关于函数式编程和反应式编程的内容。它将与一些明智的建议结合在一起，并为本书中剩下的实际操作工作奠定最后的基础。'
- en: '[Chapter 7](ch07.html "Chapter 7. Not Reinventing the Wheel – Tools for Functional
    Reactive Programming"), *Not Reinventing the Wheel – Tools for Functional Reactive
    Programming*, contains a lot to cover in one book, let alone one chapter. But
    there is meant to be an interesting sampling of a space where a lot of interesting
    options are made available, including writing ReactJS code from a language other
    than JavaScript.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章. 不重复造轮子-功能性反应式编程工具"), *不重复造轮子-功能性反应式编程工具*，包含了很多内容，甚至在一本书中，更不用说一个章节了。但这意味着有一个有趣的样本空间，其中提供了许多有趣的选择，包括从其他语言编写ReactJS代码而不是JavaScript。'
- en: '[Chapter 8](ch08.html "Chapter 8. Demonstrating Functional Reactive Programming
    in JavaScript – A Live Example, Part I"), *Demonstrating Functional Reactive Programming
    in JavaScript – A Live Example, Part I*, is where we see an application housing
    a whimsical ReactJS component written in ReactJS from scratch, and showcasing
    the sweet JSX syntactic sugar that is not required but is still made available
    for ReactJS development.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。使用实例演示JavaScript中的函数式响应式编程 - 实例演示第I部分")，“使用实例演示JavaScript中的函数式响应式编程
    - 实例演示第I部分”，我们看到了一个应用程序，其中包含一个用ReactJS从头编写的诙谐ReactJS组件，并展示了甜蜜的JSX语法糖，虽然不是必需的，但仍然可用于ReactJS开发。'
- en: '[Chapter 9](ch09.html "Chapter 9. Demonstrating Functional Reactive Programming
    in JavaScript with a Live Example Part II – A To-do List"), *Demonstrating Functional
    Reactive Programming in JavaScript with a Live Example Part II – A To-do List*,
    leads us to our first real component, designed to be used rather than just amuse.
    We implement a to-do list, and it has several markers other than just "done" to
    indicate what state, priority, and other things a task has.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。使用实例演示JavaScript中的函数式响应式编程第II部分 - 待办事项列表")，“使用实例演示JavaScript中的函数式响应式编程第II部分
    - 待办事项列表”，带我们进入了第一个真正的组件，旨在被使用而不仅仅是娱乐。我们实现了一个待办事项列表，除了“完成”之外，它还有几个标记，用于指示任务的状态、优先级和其他信息。'
- en: '[Chapter 10](ch10.html "Chapter 10. Demonstrating Functional Reactive Programming
    in JavaScript: A Live Example Part III – A Calendar"), *Demonstrating Functional
    Reactive Programming in JavaScript: A Live Example Part III – A Calendar*, is
    where we build a calendar. It is intended to gracefully support not only one-time
    events but also many kinds of repeating events with all kinds of rules that people
    offer.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章。使用实例演示JavaScript中的函数式响应式编程：实例演示第III部分 - 日历")，“使用实例演示JavaScript中的函数式响应式编程：实例演示第III部分
    - 日历”，我们将构建一个日历。它旨在优雅地支持不仅是一次性事件，还有各种规则的多种重复事件。'
- en: '[Chapter 11](ch11.html "Chapter 11. Demonstrating Functional Reactive Programming
    in JavaScript with a Live Example Part IV – Adding a Scratchpad and Putting It
    All Together"), *Demonstrating Functional Reactive Programming in JavaScript with
    a Live Example Part IV – Adding a Scratchpad and Putting It All Together*, provides
    a rich-text scratchpad with CKeditor. This shows how we might interoperate with
    other user interface tools. Then we wind up by bringing the four components together
    into one combined page and adding persistence functionality so that our user interface
    doesn''t forget what it is told.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](ch11.html "第11章。使用实例演示JavaScript中的函数式响应式编程第IV部分 - 添加一个草稿本并将其整合在一起")，“使用实例演示JavaScript中的函数式响应式编程第IV部分
    - 添加一个草稿本并将其整合在一起”，提供了一个带有CKeditor的富文本草稿本。这展示了我们如何与其他用户界面工具进行交互。然后，我们将四个组件合并到一个组合页面中，并添加持久性功能，以便我们的用户界面不会忘记它所告诉的事情。'
- en: '[Chapter 12](ch12.html "Chapter 12. How It All Fits Together"), *How It All
    Fits Together*, reviews what we covered in this book, and we look at the next
    steps in a world to explore.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](ch12.html "第12章。一切如何契合")，“一切如何契合”，回顾了本书中涵盖的内容，并探讨了在探索世界中的下一步。'
- en: '[Appendix](apa.html "Appendix A. A Node.js Kick start"), *A Node.js Kick start*,
    looks at some of the good, the bad, and the ugly of a "Wild, Wild West" technology
    that everybody seems to want in on.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录](apa.html "附录A。Node.js快速入门")，“Node.js快速入门”，探讨了“狂野西部”技术的一些优点、缺点和丑闻，似乎每个人都想参与其中。'
- en: What you need for this book
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书需要什么
- en: There is a bit of software to download, and you will need a web server that
    can at least serve static content. [Appendix](apa.html "Appendix A. A Node.js
    Kick start"), *Node.js*, covers building a web server for the larger project in
    Node.js, but all the chapters can work with just a web server that will serve
    static content in the most basic fashion. You'll need a desktop computer, which
    can be almost anything that can run Node.js (if you choose to work through the
    appendix). The text will work well enough with Unix, Linux, Mac, Windows, Cygwin,
    and so on. If you want to run it from a mobile device, that may be a praiseworthy
    approach, but please work from a device (desktop or otherwise) using some standard
    server or desktop operating system.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 需要下载一些软件，并且您需要一个至少能够提供静态内容的Web服务器。[附录](apa.html "附录A。Node.js快速入门")，“Node.js”，介绍了如何在Node.js中构建一个用于更大项目的Web服务器，但所有章节都可以使用最基本的方式提供静态内容的Web服务器。您需要一台台式电脑，几乎可以是任何可以运行Node.js的设备（如果您选择通过附录进行操作）。文本将在Unix、Linux、Mac、Windows、Cygwin等系统上运行得足够好。如果您想从移动设备上运行它，这可能是一个值得称赞的方法，但请使用标准的服务器或台式机操作系统。
- en: However, all that you really need is a server or desktop, a browser such as
    Chrome, a web server, and a willingness to dive into something new. Everything
    else is provided in the text.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你真正需要的只是一个服务器或台式机、一个像Chrome这样的浏览器、一个Web服务器，以及愿意尝试新事物的心态。其他一切都在文本中提供。
- en: Who this book is for
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is intended for programmers who want to dive into functional reactive
    programming and Facebook's ReactJS. There is an expectation of some general programming
    maturity, some knowledge of JavaScript, and some knowledge of producing user interfaces.
    Familiarity with functional programming is also one of the several things that
    would help, but the hope, whether realized or not, is to create a book using which
    a veteran programmer in any general-purpose language with some (perhaps light)
    knowledge of JavaScript and web development would be able to get things to work.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在面向希望深入了解函数式响应式编程和Facebook的ReactJS的程序员。我们期望读者具有一定的编程素养，了解JavaScript，并且对用户界面的制作有一定的了解。熟悉函数式编程也是有帮助的，但我们希望能够创建一本书，即使是在任何通用语言中具有一定（也许是轻微的）JavaScript和Web开发知识的资深程序员也能够使事情顺利进行。
- en: People who do have a solid background in frontend web development and JavaScript's
    functional core may be surprised how easy it is to work with ReactJS, and may
    find it like slicing a hot knife through butter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些在前端网页开发和JavaScript的功能核心方面有扎实背景的人来说，他们可能会惊讶地发现使用ReactJS是多么容易，就像切黄油一样容易。
- en: Conventions
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现一些区分不同信息类型的文本样式。以下是一些示例以及它们的含义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `typeof` function returns a string containing a description of a type; thus, `typeof`
    can offer an extended type."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名会显示如下："`typeof`函数返回一个包含类型描述的字符串；因此，`typeof`可以提供扩展类型。"
- en: 'A block of code is set as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一块代码设置如下：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "When the installer starts, click on **Next**, as follows:"'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会以这样的方式出现在文本中："当安装程序启动时，点击**下一步**，如下所示："'
- en: Note
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会以这样的框出现。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这样的方式出现。
