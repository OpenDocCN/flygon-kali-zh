["```kt\n    <string name=\"title_section_daily_notes\">Daily  \n     thoughts</string><string name=\"title_section_note_list\">Thoughts \n     list</string>\n    <string name=\"action_add\">Add thought</string>\n    ```", "```kt\n    mDrawerListView.setAdapter(new ArrayAdapter<String>(\n            getActionBar().getThemedContext(),\n            android.R.layout.simple_list_item_activated_1,\n            android.R.id.text1,\n            new String[]{\n                    getString(R.string.title_section_daily_notes),\n                    getString(R.string.title_section_note_list)\n            }));\n    ```", "```kt\n    <menu xmlns:android= \n     \"http://schemas.android.com/apk/res/android\"  \n       tools:context=\".MainActivity\">\n    <item android:id=\"@+id/action_add\"  \n     android:title=\"@string/action_add\"android:icon=\"@android:drawable/ic_input_add\"android:showAsAction=\"withText|ifRoom\" />\n    </menu>\n    ```", "```kt\n    public void onSectionAttached(int number) {\n        switch (number) {\n            case 0:\n                mTitle = getString(  \n                 R.string.title_section_daily_notes);\n                break;\n            case 1:\n                mTitle = getString( \n                 R.string.title_section_note_list);\n                 break;\n        }\n    }\n    ```", "```kt\n    public class DatabaseHelper extends SQLiteOpenHelper {\n        public static final String DATABASE_NAME = \n         \"DAILY_THOUGHTS\";\n        public static final String THOUGHTS_TABLE_NAME =   \n         \"thoughts\";\n        static final int DATABASE_VERSION = 1;\n        static final String CREATE_DB_TABLE =\n          \" CREATE TABLE \" + THOUGHTS_TABLE_NAME +\n          \" (_id INTEGER PRIMARY KEY AUTOINCREMENT, \" +\" name TEXT NOT NULL, \" +\" happiness INT NOT NULL);\";public DatabaseHelper(Context context){\n            super(context, DATABASE_NAME, null, \n             DATABASE_VERSION);}\n        @Override\n        public void onCreate(SQLiteDatabase db)\n        {\n            db.execSQL(CREATE_DB_TABLE);\n        }\n        @Override \n    \t public void onUpgrade(SQLiteDatabase db, int \n         oldVersion, int newVersion) {\n            db.execSQL(\"DROP TABLE IF EXISTS \" +  \n             THOUGHTS_TABLE_NAME);\n            onCreate(db);}\n    }\n    ```", "```kt\n    static final String PROVIDER_NAME =  \n     \"com.packt.dailythoughts\";\n    static final String URL = \"content://\" + PROVIDER_NAME +  \n     \"/thoughts\";\n    public static final Uri CONTENT_URI = Uri.parse(URL);\n    public static final String THOUGHTS_ID = \"_id\";\n    public static final String THOUGHTS_NAME = \"name\";\n    public static final String THOUGHTS_HAPPINESS = \n     \"happiness\";\n    static final int THOUGHTS = 1;\n    static final int THOUGHT_ID = 2;\n    static final UriMatcher uriMatcher;\n    static{\n        uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);\n        uriMatcher.addURI(PROVIDER_NAME, \"thoughts\", \n         THOUGHTS);\n        uriMatcher.addURI(PROVIDER_NAME, \"thoughts/#\",   \n         THOUGHT_ID);\n    }\n    ```", "```kt\n    private SQLiteDatabase db;\n    @Override \n       public boolean onCreate() {\n        Context context = getContext();\n        DatabaseHelper dbHelper = new DatabaseHelper(context);\n        db = dbHelper.getWritableDatabase();\n        return (db == null)? false:true;\n    }\n    ```", "```kt\nprivate static HashMap<String, String> \n THOUGHTS_PROJECTION; \n@Override \npublic Cursor query(Uri uri, String[] projection, \n String selection, String[] selectionArgs, String \n  sortOrder) {\n   SQLiteQueryBuilder builder = new SQLiteQueryBuilder();\n   builder.setTables( \n    DatabaseHelper.THOUGHTS_TABLE_NAME);\n   switch (uriMatcher.match(uri)) {\n      case THOUGHTS:\n        builder.setProjectionMap(\n         THOUGHTS_PROJECTION);\n         break;\n      case THOUGHT_ID:\n        builder.appendWhere( THOUGHTS_ID + \"=\" + uri.getPathSegments().get(1));\n        break;\n      default:\n        throw new IllegalArgumentException(\n         \"Unknown URI: \" + uri);\n    }\n    if (sortOrder == null || sortOrder == \"\"){\n        sortOrder = THOUGHTS_NAME;\n    }\n    Cursor c = builder.query(db, projection,selection, selectionArgs,null, null, sortOrder);\n    c.setNotificationUri(    \n     getContext().getContentResolver(), uri);\n    return c;\n}\n```", "```kt\n    @Override \n    public String getType(Uri uri) {\n        switch (uriMatcher.match(uri)){\n          case THOUGHTS:\n            return \"vnd.android.cursor.dir/vnd.df.thoughts\";\n         case THOUGHT_ID:\n           return \"vnd.android.cursor.item/vnd.df.thoughts\";\n         default:\n           throw new IllegalArgumentException(\n            \"Unsupported URI: \" + uri);\n        }\n    }\n    ```", "```kt\n    @Override\n    public Uri insert(Uri uri, ContentValues values) {\n       long rowID = db.insert(  \n        DatabaseHelper.THOUGHTS_TABLE_NAME , \"\", values);\n       if (rowID > 0)\n       {\n          Uri _uri = ContentUris.withAppendedId(CONTENT_URI, \n           rowID);\n          getContext().getContentResolver().notifyChange( _uri, \n           null);\n          return _uri;\n        }\n        throw new SQLException(\"Failed to add record: \" + uri);\n    }\n    ```", "```kt\n    <providerandroid:name=\".providers.ThoughtsProvider\"android:authorities=\"com.packt.dailythoughts\"android:readPermission=  \n         \"com.packt.dailythoughts.READ_DATABASE\"android:exported=\"true\" />\n    ```", "```kt\n    <permission   \n     android:name=\"com.packt.dailythoughts.READ_DATABASE\"android:protectionLevel=\"normal\"/>\n    ```", "```kt\n    <string name=\"my_thoughts\">My thoughts</string>\n    <string name=\"save\">Save</string>\n    <string name=\"average_happiness\">Average \n      happiness</string>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout xmlns:android= \n     \"http://schemas.android.com/apk/res/android\"\n       android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\" >\n        <ListView\n            android:id=\"@+id/thoughts_list\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" ></ListView>\n    </LinearLayout> \n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout xmlns:android=\n      \"http://schemas.android.com/apk/res/android\"android:orientation=\"vertical\"android:layout_gravity=\"center\"android:layout_margin=\"32dp\"android:padding=\"16dp\"android:layout_width=\"match_parent\"android:background=\"@android:color/holo_green_light\"android:layout_height=\"wrap_content\">\n        <TextView\n            android:layout_margin=\"8dp\"android:textSize=\"16sp\"android:text=\"@string/my_thoughts\"\n         android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" />\n        <EditText\n            android:id=\"@+id/thoughts_edit_thoughts\"android:layout_margin=\"8dp\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" />\n        <RatingBar\n            android:id=\"@+id/thoughs_rating_bar_happy\"android:layout_width=\"wrap_content\"android:layout_height=\"wrap_content\"android:layout_gravity=\"center_horizontal\"android:clickable=\"true\"android:numStars=\"5\"android:rating=\"0\" />\n        <Button\n            android:id=\"@+id/thoughts_detail_button\"android:text=\"@string/save\"          \n            android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout xmlns:android=\n      \"http://schemas.android.com/apk/res/android\"\n        android:orientation=\"vertical\"\n        android:layout_gravity=\"center\"\n        android:layout_margin=\"32dp\"\n        android:padding=\"16dp\"\n        android:layout_width=\"match_parent\"\n        android:background=\n         \"@android:color/holo_green_light\"\n        android:layout_height=\"wrap_content\">\n        <TextView\n            android:layout_margin=\"8dp\"\n            android:textSize=\"16sp\"\n            android:text=\"@string/my_thoughts\"\n         android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\" />\n        <EditText\n            android:id=\"@+id/thoughts_edit_thoughts\"\n            android:layout_margin=\"8dp\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n        <RatingBar\n            android:id=\"@+id/thoughs_rating_bar_happy\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:clickable=\"true\"\n            android:numStars=\"5\"\n            android:rating=\"0\" />\n        <Button\n            android:id=\"@+id/thoughts_detail_button\"\n            android:text=\"@string/save\"          \n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n\n    ```", "```kt\n    public class ThoughtsFragment extends Fragment   \n      implementsLoaderManager.LoaderCallbacks<Cursor>{\n    ```", "```kt\n    private ListView mListView;private SimpleCursorAdapter mAdapter;\n    ```", "```kt\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        final View view = inflater.inflate( \n         R.layout.fragment_thoughts, container, false);\n        mListView = (ListView)view.findViewById( \n         R.id.thoughts_list);\n        getData();\n        return view;\n    }\n    ```", "```kt\n    private void getData(){String[] projection = new String[] { \n         ThoughtsProvider.THOUGHTS_ID,   \n         ThoughtsProvider.THOUGHTS_NAME, \n         ThoughtsProvider.THOUGHTS_HAPPINESS};\n        int[] target = new int[] {    \n         R.id.adapter_thought_id,  \n         R.id.adapter_thought_title,  \n         R.id.adapter_thought_rating };\n        getLoaderManager().initLoader(0, null, this);\n        mAdapter = new SimpleCursorAdapter(getActivity(),   \n         R.layout.adapter_thought, null, projection,  \n          target, 0);\n        mListView.setAdapter(mAdapter); \n    }\n    ```", "```kt\n    @Override\n    public Loader<Cursor> onCreateLoader(int id, Bundle args) {\n            String[] projection = new String[] { \n         ThoughtsProvider.THOUGHTS_ID,   \n         ThoughtsProvider.THOUGHTS_NAME, \n         ThoughtsProvider.THOUGHTS_HAPPINESS};\n        String sortBy = \"_id DESC\";CursorLoader cursorLoader = new \n        CursorLoader(getActivity(), \n        ThoughtsProvider.CONTENT_URI, projection, null, \n         null, sortBy);\n        return cursorLoader;\n    }\n    ```", "```kt\n    mAdapter.swapCursor(data);\n    ```", "```kt\n    mAdapter.swapCursor(null);\n    ```", "```kt\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        final View view = inflater.inflate( \n         R.layout.fragment_thoughts_detail, container,  \n          false); \n       view.findViewById( \n        R.id.thoughts_detail_button).setOnClickListener( \n         new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                addThought();\n            }\n        });\n        return view;\n    }\n    ```", "```kt\n    private void addThought(){\n        EditText thoughtsEdit = \n         (EditText)getView().findViewById(    \n          R.id.thoughts_edit_thoughts);\n        RatingBar happinessRatingBar =            \n         (RatingBar)getView().findViewById(\n          R.id.thoughs_rating_bar_happy);\n        ContentValues values = new ContentValues();\n        values.put(ThoughtsProvider.THOUGHTS_NAME, \n         thoughtsEdit.getText().toString());\n        values.put(ThoughtsProvider.THOUGHTS_HAPPINESS,    \n         happinessRatingBar.getRating());\n        getActivity().getContentResolver().insert( \n         ThoughtsProvider.CONTENT_URI, values);\n        thoughtsEdit.setText(\"\");\n        happinessRatingBar.setRating(0);\n    }\n    ```", "```kt\n    private ThoughtsFragment mThoughtsFragment;\n    private ThoughtsDetailFragment mThoughtsDetailFragment;\n    ```", "```kt\n    private ThoughtsFragment getThoughtsFragment(){\n        if (mThoughtsFragment==null) {\n            mThoughtsFragment = new ThoughtsFragment();\n        }\n        return mThoughtsFragment;\n    }\n    private ThoughtsDetailFragment \n    getThoughtDetailFragment() {\n       if (mThoughtsDetailFragment==null){\n        mThoughtsDetailFragment = new ThoughtsDetailFragment();\n        }\n        return mThoughtsDetailFragment;\n    }\n    ```", "```kt\n    @Override\n      public void onNavigationDrawerItemSelected(int  \n      position) {\n       FragmentManager fragmentManager =    \n        getFragmentManager();\n       if (position==1) {\n            fragmentManager.beginTransaction().   \n             replace(R.id.container, \n              getThoughtsFragment()).commit();\n        }\n    }\n    ```", "```kt\n    if (id== R.id.action_add){FragmentManager fragmentManager = \n         getFragmentManager();\n        fragmentManager.beginTransaction().add( \n         R.id.container, getThoughtDetailFragment()  \n          ).commit();\n    }\n    ```", "```kt\n    getActivity().getFragmentManager().beginTransaction().\n     remove(this).commit();\n    ```", "```kt\n    public interface DetailFragmentListener {\n        void onSave();\n    }\n    private DetailFragmentListener \n     mDetailFragmentListener; \n    public void setDetailFragmentListener(  \n     DetailFragmentListener listener){\n        mDetailFragmentListener = listener;\n    }\n    ```", "```kt\n    if (mDetailFragmentListener != null){\n        mDetailFragmentListener.onSave();\n    }\n    ```", "```kt\n    public class MainActivity extends Activityimplements NavigationDrawerFragment. \n       NavigationDrawerCallbacks, \n        ThoughtsDetailFragment.DetailFragmentListener {\n    @Override \n     public void onSave() {      \n      getFragmentManager().beginTransaction().remove(\n       mThoughtsDetailFragment).commit();\n    }\n    ```", "```kt\n    mThoughtsDetailFragment.setDetailFragmentListener(this);\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout xmlns:android=  \n     \"http://schemas.android.com/apk/res/android\"\n      android:orientation=\"vertical\"   \n      android:layout_width=\"match_parent\"\n      android:gravity=\"center_horizontal\"   \n      android:padding=\"16dp\"\n      android:layout_height=\"match_parent\">\n      <TextView\n            android:id=\"@+id/thoughts_kpi_count\"          \n            android:textSize=\"32sp\"\n            android:layout_margin=\"16dp\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\" />\n        <TextView\n            android:id=\"@+id/thoughts_kpi_avg_happiness\"\n            android:text= \"@string/average_happiness\"\n            android:textSize=\"32sp\"\n            android:layout_margin=\"16dp\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\" />\n        <RatingBar\n            android:id=\"@+id/thoughts_rating_bar_happy\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:clickable=\"false\"\n            android:numStars=\"5\"\n            android:rating=\"0\" />\n    </LinearLayout>\n\n    ```", "```kt\n    public class ThoughtsKpiFragment extends Fragment    \n     implements LoaderManager.LoaderCallbacks<Cursor> {\n       @Override\n        public Loader<Cursor> onCreateLoader(int id, Bundle args) {return null;\n        }\n        @Override\n    \tpublic void onLoadFinished(Loader<Cursor> loader, Cursordata) {\n        }\n        @Override\n        public void onLoaderReset(Loader<Cursor> loader) {\n        }\n    }\n    ```", "```kt\n    public static int LOADER_COUNT_THOUGHTS = 1;\n    public static int LOADER_AVG_RATING = 2;\n    ```", "```kt\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        final View view = inflater.inflate( \n         R.layout.fragment_thoughts_kpi, container, false);\n        getKpis();\n        return view;\n    }\n    ```", "```kt\n    private void getKpis(){\n        getLoaderManager().initLoader(LOADER_COUNT_THOUGHTS, null, \n         this);\n        getLoaderManager().initLoader(LOADER_AVG_RATING, null, \n         this); \n    }\n    ```", "```kt\n    @Override \n     public Loader<Cursor> onCreateLoader(int id, Bundle args) {\n        if (id == LOADER_COUNT_THOUGHTS) {\n          String[] projection = new String[] {\"COUNT(*) AS kpi\"};\n          android.content.CursorLoader cursorLoader = new android.content.CursorLoader(getActivity(),  \n            ThoughtsProvider.CONTENT_URI, projection, null, null, \n             null);\n          return cursorLoader;\n        }\n        else {\n          String[] projection = new String[]\n             {\"AVG(happiness) AS kpi\"};\n          android.content.CursorLoader cursorLoader = new \n          android.content.CursorLoader(getActivity(), \n           ThoughtsProvider.CONTENT_URI, projection, null, null, \n            null);\n          return cursorLoader;}\n    }\n    ```", "```kt\n    @Override\n    public void onLoadFinished(Loader<Cursor> loader, Cursor data) {\n        if (data == null || !data.moveToNext()) {\n            return;\n        }\n        if (loader.getId() == LOADER_COUNT_THOUGHTS) {\n            setCountedThoughts(data.getInt(0)); \n        }\n        else{\n            setAvgHappiness(data.getFloat(0));\n        }\n    }\n    ```", "```kt\n    private void setCountedThoughts(final int counted){\n        if (getActivity()==null){\n            return;\n        }\n        getActivity().runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n              TextView countText = (TextView)getView().findViewById(\n                 R.id.thoughts_kpi_count);\n              countText.setText(String.valueOf(counted));\n            }\n        });\n    }\n    private void setAvgHappiness(final float avg){\n        if (getActivity()==null){\n            return;\n        }\n        getActivity().runOnUiThread(new Runnable() {\n            @Override\n    \t\tpublic void run() {\n                RatingBar ratingBar =        \n                 (RatingBar)getView().findViewById(\n                  R.id.thoughts_rating_bar_happy);\n                ratingBar.setRating(avg);}\n        });\n    }\n    ```", "```kt\n    private ThoughtsKpiFragment mThoughtsKpiFragment;\n    ```", "```kt\n    private ThoughtsKpiFragment getKpiFragment(){\n        if (mThoughtsKpiFragment==null){\n            mThoughtsKpiFragment = new ThoughtsKpiFragment();\n        }\n        return mThoughtsKpiFragment;\n    }\n    ```", "```kt\n    \u2026 \n    else if (position==0){ \n        fragmentManager.beginTransaction()\n                .replace(R.id.container, getKpiFragment())\n                .commit();\n    }\n    ```", "```kt\n    <uses-permission android:name=  \n     \"com.packt.dailythoughts.READ_DATABASE\"/>\n    ```", "```kt\n    <TextView\n        android:id=\"@+id/main_kpi_count\"android:text=\"@string/hello_world\"  \n        android:layout_width=\"wrap_content\"android:layout_height=\"wrap_content\" />\n    ```", "```kt\n    public class MainActivity extends Activity  implementsLoaderManager.LoaderCallbacks<Cursor>\n    ```", "```kt\n    getLoaderManager().initLoader(0, null, this);\n    ```", "```kt\n    @Override\n    public Loader<Cursor> onCreateLoader(int id, Bundle args) {\n        Uri uri = Uri.parse(  \n         \"content://com.packt.dailythoughts/thoughts\");\n        String[] projection = new String[] { \"_id\", \"name\", \n         \"happiness\"};\n        String sortBy = \"name\";\n        CursorLoader cursorLoader = new  \n        android.content.CursorLoader(\n         this,uri, projection, null, null, null);\n        return cursorLoader;\n    }\n    ```", "```kt\n    @Override\n    public void onLoadFinished(Loader<Cursor> loader, \n     Cursor data) {\n       final StringBuilder builder = new StringBuilder();\n        builder.append(\n         \"I know what you are thinking of... \\n\\n\");\n       while ( (data.moveToNext())){\n           String onYourMind = data.getString(1);\n           builder.append(\"You think of \"+\n             onYourMind+\". \");\n           if (data.getInt(2) <= 2){\n               builder.append(\n                \"You are sad about this...\");\n            }\n            if (data.getInt(2) >= 4) {\n               builder.append(\"That makes you happy!\");\n            }\n            builder.append(\"\\n\");\n        }\n        builder.append(\"\\n Well, am I close? ;-)\");\n        runOnUiThread(new Runnable() {\n            @Override\n    \t\tpublic void run() {TextView countText = (TextView) \n               findViewById(R.id.main_kpi_count);\n              countText.setText(String.valueOf(\n               builder.toString()));}});}\n    ```"]