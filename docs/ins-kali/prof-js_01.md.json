["```js\n<html>\n\u00a0\u00a0<head>\n\u00a0\u00a0\u00a0\u00a0<title>Sample Page</title>\n\u00a0\u00a0</head>\n\u00a0\u00a0<body>\n\u00a0\u00a0\u00a0\u00a0<p>This is a paragraph.</p>\n\u00a0\u00a0\u00a0\u00a0<div>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<p>This is a paragraph inside a div.</p>\n\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0\u00a0\u00a0<button>Click me!</button>\n\u00a0\u00a0</body>\n</html>\n```", "```js\n    <html>\n    \u00a0\u00a0<head>\n    \u00a0\u00a0\u00a0\u00a0<title>Sample Page</title>\n    \u00a0\u00a0</head>\n    \u00a0\u00a0<body>\n    \u00a0\u00a0\u00a0\u00a0<p>This is a paragraph.</p>\n    \u00a0\u00a0\u00a0\u00a0<div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<p>This is a paragraph inside a div.</p>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<button>Click me!</button>\n    \u00a0\u00a0</body>\n    </html>\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<button>Click me!</button>\n    \u00a0\u00a0\u00a0\u00a0<script>\n    \u00a0\u00a0\u00a0\u00a0</script>\n    \u00a0\u00a0</body>\n    </html>\n    ```", "```js\n    document.getElementsByTagName('button')[0].addEventListener('click', () => {});\n    ```", "```js\n    const allParagraphs = document.getElementsByTagName('p');\n    ```", "```js\n    let allContent = \"\";\n    let count = 0;\n    ```", "```js\n    for (let i = 0; i < allParagraphs.length; i++) {\u00a0\u00a0const node = allParagraphs[i];\n    \u00a0\u00a0count++;\n    \u00a0\u00a0allContent += `${count} - ${node.textContent}\\n`;\n    }\n    ```", "```js\n    alert(`Found ${count} paragraphs. Their content:\\n${allContent}`);\n    ```", "```js\ndocument.getElementsByClassName('item')\n```", "```js\ndocument.getElementsByClassName('item')[0]\n```", "```js\ndocument.getElementsByClassName('item')[0]\n\u00a0\u00a0.getElementsByTagName('span')[0].textContent\n```", "```js\nname,price,unit\nApples,$3.99,lb\nAvocados,$4.99,lb\nBlueberry Muffin,$2.50,each\nButter,$1.39,lb\n...\n```", "```js\n    function printNodes(node, level) {\n    }\n    ```", "```js\n    let message = `${\"-\".repeat(4 * level)}Node: ${node.nodeName}`;\n    ```", "```js\n    if (node.nodeValue) {\n    \u00a0\u00a0message += `, content: '${node.nodeValue.trim()}'`;\n    }\n    console.log(message);\n    ```", "```js\n    var children = node.childNodes || [];\n    ```", "```js\n    for (var i = 0; i < children.length; i++) {\n    \u00a0\u00a0printNodes(children[i], level + 1);\n    }\n    ```", "```js\n    if (children.length > 0) {\n    \u00a0\u00a0console.log(`${\"-\".repeat(4 * level)}End of:${node.nodeName}`);}\n    ```", "```js\n    printNodes(document, 0);\n    ```", "```js\n    function containLabels(element, ...labelsToCheck) {\n    }\n    ```", "```js\n    const intersection = Array.from(element.querySelectorAll('.label'))\n    \u00a0\u00a0.map(e => e.innerHTML)\n    \u00a0\u00a0.filter(l => labelsToCheck.includes(l));\n    ```", "```js\n    return intersection.length == labelsToCheck.length;\n    ```", "```js\n    //Start from the product root element\n    Array.from(document.querySelectorAll('.item'))\n    //Filter the list to only include the ones with both labels\n    .filter(e => containLabels(e, 'organic', 'fruit'))\n    //Find the product name\n    .map(p => p.querySelector('.content a.header'))\n    .map(a => a.innerHTML)\n    //Print to the console\n    .forEach(console.log);\n    ```", "```js\n    function getAllSiblings(element) {\n    \u00a0\u00a0const siblings = [];\n    \u00a0\u00a0// rest of the code goes here\n    \u00a0\u00a0return siblings;\n    }\n    ```", "```js\n    let previous = element.previousElementSibling;\n    while (previous) {\n    \u00a0\u00a0siblings.push(previous);\n    \u00a0\u00a0previous = previous.previousElementSibling;\n    }\n    ```", "```js\n    let next = element.nextElementSibling;\n    while (next) {\n    \u00a0\u00a0siblings.push(next);\n    \u00a0\u00a0next = next.nextElementSibling;\n    }\n    ```", "```js\n    //Start by finding all the labels with content 'organic'\n    Array.from(document.querySelectorAll('.label'))\n    .filter(e => e.innerHTML === 'organic')\n    //Filter the ones that don't have a sibling label 'fruit'\n    .filter(e => getAllSiblings(e).filter(s => s.innerHTML === 'fruit').length > 0)\n    //Find root product element\n    .map(e => e.closest('.item'))\n    //Find product name\n    .map(p => p.querySelector('.content a.header').innerHTML)\n    //Print to the console\n    .forEach(console.log);\n    ```", "```js\nconst root = document.createElement('div');\n```", "```js\nroot.className = 'item';\n```", "```js\n<div class=\"ui items\"></div>\n```", "```js\nconst itemsEl = document.querySelector('.items');\nproducts.forEach((product) => {\n\u00a0\u00a0itemsEl.appendChild(createProductItem(product));\n});\n```", "```js\n{\n\u00a0\u00a0\"price\": 3.99,\n\u00a0\u00a0\"unit\": \"lb\",\n\u00a0\u00a0\"name\": \"Apples\",\n\u00a0\u00a0\"description\": \"Lorem ipsum dolor sit amet, ...\",\n\u00a0\u00a0\"image\": \"../images/products/apples.jpg\",\n\u00a0\u00a0\"tags\": [ \"fruit\", \"organic\" ]\n}\n```", "```js\nfunction createProductItem(product) {\n\u00a0\u00a0const root = document.createElement('div');\n\u00a0\u00a0root.className = 'item';\n\u00a0\u00a0root.appendChild(createProductImage(product.image));\n\u00a0\u00a0root.appendChild(createContent(product));\n\u00a0\u00a0return root;\n}\n```", "```js\nroot.appendChild(createProductImage(product.image));\nroot.appendChild(createContent(product));\n```", "```js\nfunction createProductImage(imageSrc) {\n\u00a0\u00a0const imageContainer = document.createElement('div');\n\u00a0\u00a0imageContainer.className = 'image';\n\u00a0\u00a0const image = document.createElement('img');\n\u00a0\u00a0image.setAttribute('src', imageSrc);\n\u00a0\u00a0imageContainer.appendChild(image);\n\u00a0\u00a0return imageContainer;\n}\n```", "```js\nfunction createContent(product) {\n\u00a0\u00a0const content = document.createElement('div');\n\u00a0\u00a0content.className = 'content';\n```", "```js\n const tagsHTML = product.tags.map(createTagElement)\n\u00a0\u00a0\u00a0\u00a0.map(el => el.outerHTML)\n\u00a0\u00a0\u00a0\u00a0.join('');\n```", "```js\n\u00a0\u00a0content.innerHTML = `\n\u00a0\u00a0\u00a0\u00a0<a class=\"header\">${product.name}</a>\n\u00a0\u00a0\u00a0\u00a0<div class=\"meta\"><span>$${product.price} / ${product.unit}</span></div>\n\u00a0\u00a0\u00a0\u00a0<div class=\"description\">${product.description}</div>\n\u00a0\u00a0\u00a0\u00a0<div class=\"extra\">${tagsHTML}</div>\n\u00a0\u00a0`;\n\u00a0\u00a0return content;\n}\n```", "```js\n    <html>\n    \u00a0\u00a0<head>\n    \u00a0\u00a0\u00a0\u00a0<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/semantic.min.css\" />\n    \u00a0\u00a0\u00a0\u00a0<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/store_with_header.css\" />\n    \u00a0\u00a0</head>\n    \u00a0\u00a0<body>\n    \u00a0\u00a0\u00a0\u00a0<div id=\"content\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<section class=\"header\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<h1 class=\"title\">Welcome to Fresh Products Store!</h1>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"ui menu\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"right item\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"ui icon input\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"text\" placeholder=\"Search...\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<i class=\"search icon\"></i>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</section>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div class=\"ui items\"></div>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0\u00a0\u00a0<script src=\"../data/products.js\"></script>\n    \u00a0\u00a0\u00a0\u00a0<script src=\"../sample_003/create_elements.js\"></script>\n    \u00a0\u00a0\u00a0\u00a0<script src=\"filter_and_search.js\"></script>\n    \u00a0\u00a0</body>\n    </html>\n    ```", "```js\n    const tagsToFilterBy = [];\n    let textToSearch = '';\n    ```", "```js\n    function addTagFilter() {\n    \u00a0\u00a0Array.from(document.querySelectorAll('.extra .label')).forEach(tagEl => {\n    \u00a0\u00a0\u00a0\u00a0tagEl.addEventListener('click', () => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// code for next step goes here\n    \u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0});\n    }\n    ```", "```js\n    if (!tagsToFilterBy.includes(tagEl.innerHTML)) {\n    \u00a0\u00a0tagsToFilterBy.push(tagEl.innerHTML);\n    \u00a0\u00a0applyFilters();\n    }\n    ```", "```js\n    function applyFilters() {\n    \u00a0\u00a0createListForProducts(filterByText(filterByTags(products)));\n    \u00a0\u00a0addTagFilter();\n    \u00a0\u00a0updateTagFilterList();\n    }\n    ```", "```js\n    function addTextSearchFilter() {\n    \u00a0\u00a0document.querySelector('.menu .right input'\n    .addEventListener('keyup', (e) => {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0textToSearch = e.target.value;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applyFilters();\n    \u00a0\u00a0\u00a0\u00a0});\n    }\n    ```", "```js\n    function filterByTags() {\n    \u00a0\u00a0let filtered = products;\n    \u00a0\u00a0tagsToFilterBy\n    \u00a0\u00a0\u00a0\u00a0.forEach((t) => filtered = filtered.filter(p => p.tags.includes(t)));\n    \u00a0\u00a0return filtered;\n    }\n    ```", "```js\n    function filterByText(products) {\n    \u00a0\u00a0const txt = (textToSearch || '').toLowerCase();\n    \u00a0\u00a0return products.filter((p) => {\n    \u00a0\u00a0\u00a0\u00a0return p.name.toLowerCase().includes(txt)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|| p.description.toLowerCase().includes(txt);\n    \u00a0\u00a0});\n    }\n    ```", "```js\n    function applyFilters() {\n    \u00a0\u00a0createListForProducts(filterByText(filterByTags(products)));\n    \u00a0\u00a0addTagFilter();\n    \u00a0\u00a0updateTagFilterList();\n    }\n    ```", "```js\n    function updateTagFilterList() {\n    \u00a0\u00a0const tagHolder = document.querySelector('.item span.tags');\n    \u00a0\u00a0if (tagsToFilterBy.length == 0) {\n    \u00a0\u00a0\u00a0\u00a0tagHolder.innerHTML = 'No filters';\n    \u00a0\u00a0} else {\n    \u00a0\u00a0\u00a0\u00a0tagHolder.innerHTML = '';\n    \u00a0\u00a0\u00a0\u00a0tagsToFilterBy.sort();\n    \u00a0\u00a0\u00a0\u00a0tagsToFilterBy.map(createTagFilterLabel)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.forEach((tEl) => tagHolder.appendChild(tEl));\n    \u00a0\u00a0}\n    }\n    ```", "```js\n    function createTagFilterLabel(tag) {\n    \u00a0\u00a0const el = document.createElement('span');\n    \u00a0\u00a0el.className = 'ui label orange';\n    \u00a0\u00a0el.innerText = tag;\n    \u00a0\u00a0el.addEventListener('click', () => {\n    \u00a0\u00a0\u00a0\u00a0const index = tagsToFilterBy.indexOf(tag);\n    \u00a0\u00a0\u00a0\u00a0tagsToFilterBy.splice(index, 1);\n    \u00a0\u00a0\u00a0\u00a0applyTagFilter();\n    \u00a0\u00a0});\n\n    \u00a0\u00a0return el;\n    }\n    ```", "```js\n    addTextSearchFilter();\n    applyFilters();\n    ```", "```js\n<style>\n\u00a0\u00a0p {\n\u00a0\u00a0\u00a0\u00a0background: #ccc;\n\u00a0\u00a0\u00a0\u00a0color: #003366;\n\u00a0\u00a0}\n</style>\n```", "```js\n<div><p>I'm in a Shadow DOM tree.</p></div>\n```", "```js\nconst shadowHost = document.querySelector('div');\nconst shadowRoot = shadowHost.attachShadow({ mode: 'open' });\n```", "```js\nshadowRoot.innerHTML = shadowHost.innerHTML;\n```", "```js\ncustomElements.define('counter-component', Counter);\n```", "```js\nclass Counter extends HTMLElement {\n}\n```", "```js\nconstructor() {\n\u00a0\u00a0super(); // always call super first\n\u00a0\u00a0// Creates the shadow DOM to attach the parts of this component\n\u00a0\u00a0this.attachShadow({mode: 'open'});\n\u00a0\u00a0// ... more code here\n}\n```", "```js\nthis.value = parseInt(this.getAttribute('value') || 0);\nthis.increment = parseInt(this.getAttribute('increment') || 1);\n```", "```js\n// Create and attach the parts of this component\nthis.addStyles();\nthis.createButton('-', () => this.decrementValue());\nthis.createValueSpan();\nthis.createButton('+', () => this.incrementValue());\n```", "```js\nincrementValue() {\n\u00a0\u00a0this.value += this.increment;\n\u00a0\u00a0this.triggerValueChangedEvent();\n\u00a0\u00a0this.updateState();\n}\nupdateState() {\n\u00a0\u00a0this.span.innerText = `Value is: ${this.value}`;\n}\n```", "```js\n<counter-component></counter-component>\n<counter-component value=\"7\" increment=\"3\"></counter-component>\n```", "```js\nconst newCounter = document.createElement('counter-component');\nnewCounter.setAttribute('increment', '2');\nnewCounter.setAttribute('value', '3');\ndocument.querySelector('div').appendChild(newCounter);\n```", "```js\nconnectedCallback() {\n\u00a0\u00a0console.log(\"I'm connected to the DOM!\");\n}\n```", "```js\nstatic get observedAttributes() {\n\u00a0\u00a0return ['value', 'increment'];\n}\n```", "```js\nattributeChangedCallback(attribute, _, newValue) {\n\u00a0\u00a0switch(attribute) {\n\u00a0\u00a0\u00a0\u00a0case 'increment':\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.increment = parseInt(newValue);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0\u00a0\u00a0case 'value':\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.value = parseInt(newValue);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0}\n\u00a0\u00a0this.updateState();\n}\n```", "```js\ntriggerValueChangedEvent() {\n\u00a0\u00a0const event = new CustomEvent('value-changed', { \n\u00a0\u00a0\u00a0\u00a0bubbles: true,\n\u00a0\u00a0\u00a0\u00a0detail: { value: this.value },\n\u00a0\u00a0});\n\u00a0\u00a0this.dispatchEvent(event);\n}\n```", "```js\nconst output = document.getElementById('output');\nArray.from(document.querySelectorAll('counter-component'))\n\u00a0\u00a0.forEach((el, index) => {\n\u00a0\u00a0\u00a0\u00a0el.addEventListener('value-changed', (e) => {\n\u00a0\u00a0\u00a0\u00a0output.innerHTML += '<p>Counter ${index} value is now ${e.detail.value}</p>';\n\u00a0\u00a0});\n});\n```", "```js\n    class SearchBox extends HTMLElement {\n    }\n    customElements.define('search-box', SearchBox);\n    ```", "```js\n    constructor() {\n    \u00a0\u00a0super();\n    \u00a0\u00a0this.attachShadow({ mode: 'open' });\n    \u00a0\u00a0this._searchText = '';\n    }\n    ```", "```js\n    get searchText() {\n    \u00a0\u00a0return this._searchText;\n    ```", "```js\n    render() {\n    \u00a0\u00a0this.shadowRoot.innerHTML = '\n    \u00a0\u00a0\u00a0\u00a0<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/semantic.min.css\" />\n    \u00a0\u00a0\u00a0\u00a0<div class=\"ui icon input\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"text\" placeholder=\"Search...\" />\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<i class=\"search icon\"></i>\n    \u00a0\u00a0\u00a0\u00a0</div>\n    \u00a0\u00a0';\n    }\n    ```", "```js\n    triggerTextChanged(text) {\n    \u00a0\u00a0const event = new CustomEvent('changed', {\n    \u00a0\u00a0\u00a0\u00a0bubbles: true,\n    \u00a0\u00a0\u00a0\u00a0detail: { text },\n    \u00a0\u00a0});\n    \u00a0\u00a0this.dispatchEvent(event);\n    }\n    ```", "```js\n    constructor() {\n    \u00a0\u00a0super();\n    \u00a0\u00a0this.attachShadow({ mode: 'open' });\n    \u00a0\u00a0this._searchText = '';\n    \u00a0\u00a0this.render();\n    \u00a0\u00a0this.shadowRoot.querySelector('input').addEventListener('keyup', (e) => {\n    \u00a0\u00a0\u00a0\u00a0this._searchText = e.target.value;\n    \u00a0\u00a0\u00a0\u00a0this.triggerTextChanged(this._searchText);\n    \u00a0\u00a0});\n    }\n    ```", "```js\n    const searchBoxElement = document.querySelector('search-box');\n    ```", "```js\n    searchBoxElement.addEventListener('changed', (e) => applyFilters());\n    ```"]