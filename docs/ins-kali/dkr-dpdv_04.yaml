- en: '3: Installing Docker'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3：安装Docker
- en: There are loads of ways and places to install Docker. There’s Windows, there’s
    Mac, and there’s obviously Linux. But there’s also in the cloud, on premises,
    on your laptop, and more… On top of those, we’ve got manual installs, scripted
    installs, wizard-based installs… There literally are loads of ways and places
    to install Docker!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多种方式和地方可以安装Docker。有Windows，有Mac，显然还有Linux。但也有云端，本地，笔记本电脑等等...除此之外，我们还有手动安装，脚本安装，基于向导的安装...实际上有很多种方式和地方可以安装Docker！
- en: But don’t let that scare you! They’re all easy.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 但不要让这吓到你！它们都很容易。
- en: 'In this chapter we’ll cover some of the most important installs:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖一些最重要的安装：
- en: Desktop installs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桌面安装
- en: Docker for Windows
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker for Windows
- en: Docker for Mac
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker for Mac
- en: Server installs
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器安装
- en: Linux
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux
- en: Windows Server 2016
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2016
- en: Upgrading Docker
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级Docker
- en: Storage driver considerations
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储驱动器考虑
- en: We’ll also look at upgrading the Docker Engine and selecting an appropriate
    storage driver.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将看看如何升级Docker引擎并选择适当的存储驱动程序。
- en: Docker for Windows (DfW)
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows的Docker（DfW）
- en: The first thing to note is that *Docker for Windows* is a “packaged” product
    from Docker, Inc. This means it’s easy to download and has a slick installer.
    It spins up a single-engine Docker environment on a 64-bit Windows 10 desktop
    or laptop.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要注意的是*Docker for Windows*是Docker，Inc.的“打包”产品。这意味着它很容易下载，并且有一个漂亮的安装程序。它在64位Windows
    10台式机或笔记本上启动一个单引擎Docker环境。
- en: The second thing to note is that it is a Community Edition (CE) app. So it’s
    not intended for production.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第二件要注意的事情是它是一个社区版（CE）应用。因此不适用于生产。
- en: The third thing of note is that it might suffer some feature-lag. This is because
    Docker, Inc. are taking a *stability first, features second* approach with the
    product.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第三件值得注意的事情是它可能会遇到一些功能滞后。这是因为Docker，Inc.正在采取“稳定性第一，功能第二”的方法来处理产品。
- en: All three points add up to a quick and easy installation, but one that is **not**
    intended for production.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这三点加起来就是一个快速简单的安装，但不适用于生产。
- en: Enough waffle. Let’s see how to install *Docker for Windows*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 废话够多了。让我们看看如何安装*Docker for Windows*。
- en: 'First up, pre-requisites. *Docker for Windows* requires:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，先决条件。*Docker for Windows*需要：
- en: Windows 10 Pro | Enterprise | Education (1607 Anniversary Update, Build 14393
    or newer)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10专业版|企业版|教育版（1607周年更新，版本14393或更新版本）
- en: Must be 64-bit Windows 10
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须是64位Windows 10
- en: The *Hyper-V* and *Containers* features must be enabled in Windows
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Hyper-V*和*容器*功能必须在Windows中启用'
- en: Hardware virtualization support must be enabled in your system’s BIOS
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须在系统的BIOS中启用硬件虚拟化支持
- en: The following will assume that hardware virtualization support is already enabled
    in your system’s BIOS. If it is not, you should carefully follow the procedure
    for your particular machine.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下将假定硬件虚拟化支持已在系统的BIOS中启用。如果没有，您应该仔细遵循您特定机器的程序。
- en: The first thing to do in Windows 10, is make sure the **Hyper-V** and **Containers**
    features are installed and enabled.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows 10中要做的第一件事是确保**Hyper-V**和**容器**功能已安装并启用。
- en: Right-click the Windows Start button and choose `Apps and Features`.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击Windows开始按钮，然后选择“应用和功能”。
- en: Click the `Programs and Features` link (a small link on the right).
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“程序和功能”链接（右侧的一个小链接）。
- en: Click `Turn Windows features on or off`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“打开或关闭Windows功能”。
- en: Check the `Hyper-V` and `Containers` checkboxes and click `OK`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选“Hyper-V”和“容器”复选框，然后点击“确定”。
- en: This will install and enable the Hyper-V and Containers features. Your system
    may require a restart.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这将安装并启用Hyper-V和容器功能。您的系统可能需要重新启动。
- en: '![Figure 3.1](images/Figure3-1.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1](images/Figure3-1.png)'
- en: Figure 3.1
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1
- en: The *Containers* feature is only available if you are running the summer 2016
    Windows 10 Anniversary Update (build 14393) or later.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*Containers*功能仅在运行2016年夏季的Windows 10周年更新（版本14393）或更高版本时可用。'
- en: Once you’ve installed the `Hyper-V` and `Containers` features, and restarted
    your machine, it’s time to install *Docker for Windows*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了`Hyper-V`和`Containers`功能并重新启动计算机后，现在是安装*Docker for Windows*的时候了。
- en: Head over to https://www.docker.com/get-docker and click the `GET DOCKER COMMUNITY
    EDITION` link.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往https://www.docker.com/get-docker并单击`GET DOCKER COMMUNITY EDITION`链接。
- en: Click the `Download from Docker Store` link beneath the `DOCKER CE FOR WINDOWS`
    section. This will take you to the Docker Store and you may need to login with
    your Docker ID.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`DOCKER CE FOR WINDOWS`部分下方的`Download from Docker Store`链接。这将带您到Docker Store，您可能需要使用Docker
    ID登录。
- en: Click one of the `Get Docker` download links.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击一个`Get Docker`下载链接。
- en: Docker for Windows has a *stable* and *edge* channel. The edge channel contains
    newer features but may not be as stable.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Docker for Windows有一个*stable*和*edge*通道。Edge通道包含更新的功能，但可能不太稳定。
- en: An installer package called `Docker for Windows Installer.exe` will be downloaded
    to your default downloads directory.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为`Docker for Windows Installer.exe`的安装程序包将被下载到默认的下载目录。
- en: Locate and launch the installer package downloaded in the previous step.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到并启动在上一步中下载的安装程序包。
- en: Step through the installation wizard and provide local administrator credentials
    to complete the installation. Docker will automatically start, as a system service,
    and a Moby Dock whale icon will appear in the Windows notifications tray.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 按照安装向导的步骤，并提供本地管理员凭据以完成安装。Docker将自动启动为系统服务，并且Moby Dock鲸鱼图标将出现在Windows通知区域中。
- en: Congratulations! You have installed *Docker for Windows*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经安装了*Docker for Windows*。
- en: 'Open a command prompt or PowerShell terminal and try the following commands:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 打开命令提示符或PowerShell终端，尝试以下命令：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Client:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端：
- en: 'Version:       18.01.0-ce'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 版本：18.01.0-ce
- en: 'API version:   1.35'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: API版本：1.35
- en: 'Go version:    go1.9.2'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Go版本：go1.9.2
- en: 'Git commit:    03596f5'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Git提交：03596f5
- en: 'Built: Wed Jan 10 20:05:55 2018'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 构建时间：2018年1月10日星期三20:05:55
- en: 'OS/Arch:       windows/amd64'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: OS/Arch：windows/amd64
- en: 'Experimental:  false'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性：false
- en: 'Orchestrator:  swarm'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 编排器：swarm
- en: 'Server:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器：
- en: 'Engine:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 引擎：
- en: 'Version:      18.01.0-ce'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 版本：18.01.0-ce
- en: 'API version:  1.35 (minimum version 1.12)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: API版本：1.35（最低版本1.12）
- en: 'Go version:   go1.9.2'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Go版本：go1.9.2
- en: 'Git commit:   03596f5'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Git提交：03596f5
- en: 'Built:        Wed Jan 10 20:13:12 2018'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 构建时间：2018年1月10日星期三20:13:12
- en: 'OS/Arch:      linux/amd64'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: OS/Arch：linux/amd64
- en: 'Experimental: false'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性：false
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`Notice that the output is showing `OS/Arch: linux/amd64` for the **Server**
    component. This is because the default installation currently installs the Docker
    daemon inside of a lightweight Linux Hyper-V VM. In this scenario, you will only
    be able to run Linux containers on your *Docker for Windows* install.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '注意，输出显示`OS/Arch: linux/amd64`是因为默认安装目前会在轻量级的Linux Hyper-V虚拟机中安装Docker守护程序。在这种情况下，您只能在*Docker
    for Windows*上运行Linux容器。'
- en: 'If you want to run *native Windows containers*, you can right click the Docker
    whale icon in the Windows notifications tray and select `Switch to Windows containers...`.
    You can achieve the same thing from the command line with the following command
    (located in the `\Program Files\Docker\Docker` directory):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想运行*本机Windows容器*，可以右键单击Windows通知区域中的Docker鲸鱼图标，然后选择`Switch to Windows containers...`。您也可以在命令行中使用以下命令（位于`\Program
    Files\Docker\Docker`目录中）来实现相同的功能：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`You will get the following alert if you have not enabled the `Windows Containers`
    feature.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有启用`Windows Containers`功能，您将收到以下警报。
- en: '![Figure 3.2](images/figure3-2.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2](images/figure3-2.png)'
- en: Figure 3.2
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2
- en: If you already have the Windows Containers feature enabled, it will only take
    a few seconds to make the switch. Once the switch has been made, the output to
    the `docker version` command will look like this.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经启用了Windows容器功能，切换只需要几秒钟。切换完成后，`docker version`命令的输出将如下所示。
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`Notice that the Server version is now showing as `windows/amd64`. This means
    the daemon is running natively on the Windows kernel and will only run Windows
    containers.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`请注意，服务器版本现在显示为`windows/amd64`。这意味着守护程序在Windows内核上本地运行，并且只能运行Windows容器。'
- en: 'Also note that the system is now running the *experimental* version of Docker
    (`Experimental: true`). As previously mentioned, *Docker for Windows* has a stable
    and an edge channel. At the time of writing, Windows Containers is an experimental
    feature of the edge channel.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，系统现在正在运行Docker的*实验*版本（`实验性：true`）。如前所述，*Docker for Windows*有一个稳定的通道和一个边缘通道。在撰写本文时，Windows容器是边缘通道的实验功能。
- en: You can check which channel you are running with the `dockercli -Version` command.
    The `dockercli` command is located in `C:\Program Files\Docker\Docker`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`dockercli -Version`命令检查您正在运行的通道。 `dockercli`命令位于`C:\Program Files\Docker\Docker`中。
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`The following listing shows that regular Docker commands work as normal.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表显示了常规Docker命令的正常工作。
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`Docker for Windows includes the Docker Engine (client and daemon), Docker
    Compose, Docker Machine, and the Docker Notary command line. Use the following
    commands to verify that each was successfully installed:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Windows的Docker包括Docker Engine（客户端和守护程序）、Docker Compose、Docker Machine和Docker
    Notary命令行。使用以下命令验证每个是否成功安装：
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: C:\> docker-machine --version
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: C:\> docker-machine --version
- en: docker-machine.exe version 0.13.0, build 9ba6da9
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: docker-machine.exe版本0.13.0，构建9ba6da9
- en: '[PRE8]`'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]`'
- en: C:\> notary version
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: C:\> notary version
- en: notary
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 公证
- en: 'Version:    0.4.3'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 版本：0.4.3
- en: 'Git commit: 9211198'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Git提交：9211198
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: $ docker version
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker version
- en: 'Client:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端：
- en: 'Version:      `17`.05.0-ce'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 版本：17.05.0-ce
- en: 'API version:  `1`.29'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: API版本：1.29
- en: 'Go version:   go1.7.5'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Go版本：go1.7.5
- en: 'Git commit:   89658be'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Git提交：89658be
- en: 'Built:        Thu May `4` `21`:43:09 `2017`'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 构建日期：星期四，2017年5月4日21:43:09
- en: 'OS/Arch:      darwin/amd64'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: OS/Arch：darwin/amd64
- en: 'Server:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器：
- en: 'Version:      `17`.05.0-ce'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 版本：17.05.0-ce
- en: 'API version:  `1`.29 `(`minimum version `1`.12`)`'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: API版本：1.29（最低版本1.12）
- en: 'Go version:   go1.7.5'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Go版本：go1.7.5
- en: 'Git commit:   89658be'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Git提交：89658be
- en: 'Built:        Thu May `4` `21`:43:09 `2017`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 构建日期：星期四，2017年5月4日21:43:09
- en: 'OS/Arch:      linux/amd64'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: OS/Arch：linux/amd64
- en: 'Experimental: `true`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性：true
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: $ docker --version
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker --version
- en: Docker version `17`.05.0-ce, build 89658be
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Docker版本17.05.0-ce，构建89658be
- en: $ docker image ls
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker image ls
- en: REPOSITORY    TAG      IMAGE ID      CREATED       SIZE
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 存储库    标签    映像ID    创建时间    大小
- en: $ docker container ls
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker container ls
- en: CONTAINER ID   IMAGE   COMMAND   CREATED    STATUS    PORTS    NAMES
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 容器ID   映像   命令   创建时间   状态   端口   名称
- en: '[PRE11]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: $  docker --version
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker --version
- en: Docker version `17`.05.0-ce, build 89658be
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Docker版本17.05.0-ce，构建89658be
- en: '[PRE12]`'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE12]`'
- en: $  docker-compose --version
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker-compose --version
- en: docker-compose version `1`.13.0, build 1719ceb
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: docker-compose版本1.13.0，构建1719ceb
- en: '[PRE13]`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE13]`'
- en: $  docker-machine --version
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker-machine --version
- en: docker-machine version `0`.11.0, build 5b27455
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: docker-machine版本0.11.0，构建5b27455
- en: '[PRE14]`'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]`'
- en: $ notary version
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: $ notary version
- en: notary
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 公证
- en: 'Version:    `0`.4.3'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 版本：0.4.3
- en: 'Git commit: `9211198`'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Git提交：9211198
- en: '[PRE15]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: $ wget -qO- https://get.docker.com/ `|` sh
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: $ wget -qO- https://get.docker.com/ `|` sh
- en: 'modprobe: FATAL: Module aufs not found /lib/modules/4.4.0-36-generic'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: modprobe：致命：未找到模块aufs/lib/modules/4.4.0-36-generic
- en: + sh -c `'sleep 3; yum -y -q install docker-engine'`
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: + sh -c 'sleep 3; yum -y -q install docker-engine'
- en: <Snip>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: <剪辑>
- en: If you would like to use Docker as a non-root user, you should
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想以非root用户身份使用Docker，您应该
- en: now consider adding your user to the `"docker"` group with
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在考虑将您的用户添加到“docker”组中
- en: 'something like:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于：
- en: sudo usermod -aG docker your-user
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: sudo usermod -aG docker your-user
- en: Remember that you will have to log out and back in...
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，您将不得不注销并重新登录...
- en: '[PRE16]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: $ sudo usermod -aG docker npoulton
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: $ sudo usermod -aG docker npoulton
- en: $ cat /etc/group `|` grep docker
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: $ cat /etc/group `|` grep docker
- en: docker:x:999:npoulton
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: docker:x:999:npoulton
- en: '[PRE17]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: $ docker --version
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker --version
- en: Docker version `18`.01.0-ce, build 03596f5
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Docker版本`18`.01.0-ce，构建03596f5
- en: $ docker system info
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker system info
- en: 'Containers: `0`'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 容器：`0`
- en: 'Running: `0`'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 运行中：`0`
- en: 'Paused: `0`'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 已暂停：`0`
- en: 'Stopped: `0`'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 已停止：`0`
- en: 'Images: `0`'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 镜像：`0`
- en: 'Server Version: `18`.01.0-ce'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器版本：`18`.01.0-ce
- en: 'Storage Driver: overlay2'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 存储驱动程序：overlay2
- en: 'Backing Filesystem: extfs'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 后备文件系统：extfs
- en: <Snip>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <Snip>
- en: '[PRE18]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Install-Module DockerProvider -Force
  id: totrans-154
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Install-Module DockerProvider -Force
- en: '[PRE19]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Install-Package Docker -ProviderName DockerProvider -Force
  id: totrans-156
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Install-Package Docker -ProviderName DockerProvider -Force
- en: '[PRE20]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Name      Version         Source     Summary
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 名称 版本 来源 摘要
- en: '----      -------         ------     -------'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '---- ------- ------ -------'
- en: Docker    17.06.2-ee-6    Docker     Docker for Windows Server 2016
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 17.06.2-ee-6 Docker Docker for Windows Server 2016
- en: '[PRE21]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: docker --version
  id: totrans-163
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: docker --version
- en: Docker version 17.06.2-ee-6, build e75fdb8
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Docker版本17.06.2-ee-6，构建e75fdb8
- en: docker system info
  id: totrans-165
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: docker system info
- en: 'Containers: 0'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 容器：0
- en: 'Running: 0'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 运行中：0
- en: 'Paused: 0'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 已暂停：0
- en: 'Stopped: 0'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 已停止：0
- en: 'Images: 0'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 镜像：0
- en: 'Server Version: 17.06.2-ee-6'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器版本：17.06.2-ee-6
- en: 'Storage Driver: windowsfilter'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 存储驱动程序：windowsfilter
- en: <Snip>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <Snip>
- en: '[PRE23]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: $ apt-get update
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: $ apt-get update
- en: '[PRE24]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: $ apt-get remove docker docker-engine docker-ce docker.io -y
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: $ apt-get remove docker docker-engine docker-ce docker.io -y
- en: '[PRE25]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: $ wget -qO- https://get.docker.com/ | sh
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: $ wget -qO- https://get.docker.com/ | sh
- en: '[PRE26]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: $ systemctl enable docker
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: $ systemctl enable docker
- en: Synchronizing state of docker.service...
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 同步docker.service的状态...
- en: Executing /lib/systemd/systemd-sysv-install enable docker
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 执行/lib/systemd/systemd-sysv-install enable docker
- en: $ systemctl is-enabled docker
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: $ systemctl is-enabled docker
- en: enabled
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 已启用
- en: '[PRE27]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: $ docker container ls
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker container ls
- en: CONTAINER ID    IMAGE      COMMAND       CREATED             STATUS        \
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 容器ID 图像 命令 创建状态 \
- en: NAMES
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 名称
- en: 97e599aca9f5    alpine     "sleep 1d"    14 minutes ago      Up 1 minute
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 97e599aca9f5 alpine "sleep 1d" 14分钟前 上线1分钟
- en: $ docker service ls
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: $ docker service ls
- en: ID              NAME           MODE          REPLICAS      IMAGE
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: ID 名称 模式 副本 图像
- en: ibyotlt1ehjy    prod-equus1    replicated    1/1           alpine:latest
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: ibyotlt1ehjy prod-equus1 复制 1/1 alpine:latest
- en: '[PRE28][PRE29]`'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE28][PRE29]`'
