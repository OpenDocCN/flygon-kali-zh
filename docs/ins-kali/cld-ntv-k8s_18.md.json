["```\n\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0- name: myapp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ravirdv/http-responder:latest\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0imagePullPolicy: IfNotPresent\n\u00a0\u00a0\u00a0\u00a0\u00a0- name: nginx-sidecar\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0imagePullPolicy: IfNotPresent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: secrets\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /app/cert\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: config\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /etc/nginx/nginx.conf\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subPath: nginx.conf\n```", "```\n\u00a0\u00a0\u00a0\u00a0volumes:\n\u00a0\u00a0\u00a0\u00a0\u00a0- name: secrets\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0secret:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0secretName: nginx-certificates\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0items:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- key: server-cert\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: server.pem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- key: server-key\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: server-key.pem\n\u00a0\u00a0\u00a0\u00a0\u00a0- name: config\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0configMap:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: nginx-configuration\n```", "```\nhttp {\n\u00a0\u00a0\u00a0\u00a0sendfile\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0on;\n\u00a0\u00a0\u00a0\u00a0include\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mime.types;\n\u00a0\u00a0\u00a0\u00a0default_type\u00a0\u00a0application/octet-stream;\n\u00a0\u00a0\u00a0\u00a0keepalive_timeout\u00a0\u00a080;\n\u00a0\u00a0\u00a0\u00a0server {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ssl_certificate\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/app/cert/server.pem;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ssl_certificate_key\u00a0\u00a0/app/cert/server-key.pem;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ssl_protocols TLSv1.2;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:!EECDH+3DES:!RSA+3DES:!MD5;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ssl_prefer_server_ciphers on;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0listen\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0443 ssl;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0server_name\u00a0\u00a0localhost;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0location / {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_set_header Host $http_host;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proxy_pass http://127.0.0.1:5000/;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\nworker_processes\u00a0\u00a01;\nevents {\n\u00a0\u00a0\u00a0\u00a0worker_connections\u00a0\u00a01024;\n}\n```", "```\nkubectl create cm nginx-configuration --from-file=nginx.conf=./nginx.conf\n```", "```\nConfigmap \"nginx-configuration\" created\n```", "```\n{\n\u00a0\u00a0\u00a0\"CN\": \"mydomain.com\",\n\u00a0\u00a0\u00a0\"hosts\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"mydomain.com\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"www.mydomain.com\"\n\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\"key\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"algo\": \"rsa\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"size\": 2048\n\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\"names\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"C\": \"US\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ST\": \"MD\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"L\": \"United States\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0]\n}\n```", "```\ncfssl gencert -initca nginxca.json | cfssljson -bare nginxca\n```", "```\n{\n\u00a0\u00a0\"signing\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"default\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"expiry\": \"20000h\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"profiles\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"client\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"expiry\": \"43800h\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"usages\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"signing\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"key encipherment\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"client auth\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"server\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"expiry\": \"20000h\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"usages\": [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"signing\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"key encipherment\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"server auth\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"client auth\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0}\n}\n```", "```\n{\n\u00a0\u00a0\"CN\": \"server\",\n\u00a0\u00a0\"hosts\": [\n\u00a0\u00a0\u00a0\u00a0\"\"\n\u00a0\u00a0],\n\u00a0\u00a0\"key\": {\n\u00a0\u00a0\u00a0\u00a0\"algo\": \"rsa\",\n\u00a0\u00a0\u00a0\u00a0\"size\": 2048\n\u00a0\u00a0}\n}\n```", "```\ncfssl gencert -ca=nginxca.pem -ca-key=nginxca-key.pem -config=nginxca-config.json -profile=server -hostname=\"127.0.0.1\" nginxcarequest.json | cfssljson -bare server\n```", "```\nkubectl create secret generic nginx-certs --from-file=server-cert=./server.pem --from-file=server-key=./server-key.pem\n```", "```\nkubectl apply -f nginx-sidecar.yaml \n```", "```\ndeployment \"myapp\" created\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n name:myapp\n labels:\n\u00a0\u00a0\u00a0app: myapp\nspec:\n selector:\n\u00a0\u00a0\u00a0app: myapp\n type: NodePort\n ports:\n - port: 443\n\u00a0\u00a0\u00a0targetPort: 443\n\u00a0\u00a0\u00a0protocol: TCP\n\u00a0\u00a0\u00a0name: https\n```", "```\nadmin:\n\u00a0\u00a0access_log_path: \"/dev/null\"\n\u00a0\u00a0address:\n\u00a0\u00a0\u00a0\u00a0socket_address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address: 0.0.0.0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port_value: 8001\n```", "```\nstatic_resources:\n\u00a0\u00a0listeners:\n\u00a0\u00a0\u00a0- address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0socket_address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address: 0.0.0.0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port_value: 8443\n\u00a0\u00a0\u00a0\u00a0filter_chains:\n\u00a0\u00a0\u00a0\u00a0- filters:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy.filters.network.http_connection_manager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0typed_config:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0stat_prefix: ingress_https\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0codec_type: auto\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0route_config:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: local_route\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual_hosts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: backend\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0domains:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- \"*\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0routes:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- match:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prefix: \"/service/1\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0route:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster: service1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- match:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prefix: \"/service/2\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0route:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster: service2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0http_filters:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy.filters.http.router\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0typed_config: {}\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transport_socket:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: envoy.transport_sockets.tls\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0typed_config:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"@type\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0common_tls_context:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tls_certificates:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0certificate_chain:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline_string: |\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<INLINE CERT FILE>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private_key:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline_string: |\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<INLINE PRIVATE KEY FILE>\n```", "```\n\u00a0\u00a0- address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0socket_address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address: 0.0.0.0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port_value: 8080\n\u00a0\u00a0\u00a0\u00a0filter_chains:\n\u00a0\u00a0\u00a0\u00a0- filters:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy.filters.network.http_connection_manager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0typed_config:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0codec_type: auto\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0stat_prefix: ingress_http\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0route_config:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: local_route\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual_hosts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: backend\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0domains:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- \"*\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0routes:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- match:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prefix: \"/service1\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0route:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster: service1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- match:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prefix: \"/service2\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0route:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster: service2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0http_filters:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy.filters.http.router\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0typed_config: {}\n```", "```\n\u00a0\u00a0clusters:\n\u00a0\u00a0- name: service1\n\u00a0\u00a0\u00a0\u00a0connect_timeout: 0.25s\n\u00a0\u00a0\u00a0\u00a0type: strict_dns\n\u00a0\u00a0\u00a0\u00a0lb_policy: round_robin\n\u00a0\u00a0\u00a0\u00a0http2_protocol_options: {}\n\u00a0\u00a0\u00a0\u00a0load_assignment:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster_name: service1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0endpoints:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- lb_endpoints:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- endpoint:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0socket_address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address: service1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port_value: 5000\n```", "```\n\u00a0\u00a0- name: service2\n\u00a0\u00a0\u00a0\u00a0connect_timeout: 0.25s\n\u00a0\u00a0\u00a0\u00a0type: strict_dns\n\u00a0\u00a0\u00a0\u00a0lb_policy: round_robin\n\u00a0\u00a0\u00a0\u00a0http2_protocol_options: {}\n\u00a0\u00a0\u00a0\u00a0load_assignment:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cluster_name: service2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0endpoints:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- lb_endpoints:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- endpoint:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0socket_address:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0address: service2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port_value: 5000\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n\u00a0\u00a0name: my-service\nspec:\n\u00a0\u00a0replicas: 1\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: my-service\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: envoyproxy/envoy:latest\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 9901\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protocol: TCP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: envoy-admin\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8786\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protocol: TCP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: envoy-web\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy-config-volume\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /etc/envoy-config/\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [\"/usr/local/bin/envoy\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0args: [\"-c\", \"/etc/envoy-config/config.yaml\", \"--v2-config-only\", \"-l\", \"info\",\"--service-cluster\",\"myservice\",\"--service-node\",\"myservice\", \"--log-format\", \"[METADATA][%Y-%m-%d %T.%e][%t][%l][%n] %v\"]\n```", "```\n- name: my-service\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ravirdv/http-responder:latest\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 5000\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: svc-port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protocol: TCP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumes:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: envoy-config-volume\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0configMap:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: envoy-config\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0items:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- key: envoy-config\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: config.yaml\n```", "```\nkubectl create cm envoy-config \n--from-file=config.yaml=./envoy-config.yaml\n```", "```\nConfigmap \"envoy-config\" created\n```", "```\nkubectl apply -f deployment.yaml\n```", "```\nDeployment \"my-service\" created\n```", "```\nkubectl create -f service1-deployment.yaml\nkubectl create -f service1-service.yaml\nkubectl create -f service2-deployment.yaml\nkubectl create -f service2-service.yaml\n```", "```\nKubectl exec <my-service-pod-name> -it -- curl localhost:8080/service1\n```", "```\nService 1 Reached!\n```", "```\n    curl -L https://istio.io/downloadIstio | sh -\n    ```", "```\n    cd istio-<VERSION>\n    export PATH=$PWD/bin:$PATH\n    ```", "```\n    istioctl install --set profile=demo\n    ```", "```\n    kubectl label namespace my-namespace istio-injection=enabled\n    ```", "```\n    istioctl x uninstall --purge\n    ```", "```\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n    \u00a0\u00a0name: service-frontend\n    spec:\n    \u00a0\u00a0replicas: 1\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: service-frontend\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version: v2\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: service-frontend\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ravirdv/http-responder:latest\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 5000\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: svc-port\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protocol: TCP\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n    \u00a0\u00a0name: service-frontend\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0name: service-frontend\n    \u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0- protocol: TCP\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 80\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 5000\n    ```", "```\n    apiVersion: networking.istio.io/v1alpha3\n    kind: Gateway\n    metadata:\n    \u00a0\u00a0name: myapplication-gateway\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0istio: ingressgateway\n    \u00a0\u00a0servers:\n    \u00a0\u00a0- port:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number: 80\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: http\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protocol: HTTP\n    \u00a0\u00a0\u00a0\u00a0hosts:\n    \u00a0\u00a0\u00a0\u00a0- \"*\"\n    ```", "```\n    apiVersion: networking.istio.io/v1alpha3\n    kind: VirtualService\n    metadata:\n    \u00a0\u00a0name: myapplication\n    spec:\n    \u00a0\u00a0hosts:\n    \u00a0\u00a0- \"*\"\n    \u00a0\u00a0gateways:\n    \u00a0\u00a0- myapplication-gateway\n    \u00a0\u00a0http:\n    \u00a0\u00a0- match:\n    \u00a0\u00a0\u00a0\u00a0- uri:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prefix: /app\n    \u00a0\u00a0\u00a0\u00a0- uri:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prefix: /frontend\n    \u00a0\u00a0\u00a0\u00a0route:\n    \u00a0\u00a0\u00a0\u00a0- destination:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host: service-frontend\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subset: v1\n    ```", "```\n    apiVersion: networking.istio.io/v1alpha3\n    kind: DestinationRule\n    metadata:\n    \u00a0\u00a0name: service-frontend\n    spec:\n    \u00a0\u00a0host: service-frontend\n    \u00a0\u00a0subsets:\n    \u00a0\u00a0- name: v1\n    \u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version: v1\n    \u00a0\u00a0- name: v2\n    \u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version: v2\n    ```", "```\n    apiVersion: networking.istio.io/v1alpha3\n    kind: VirtualService\n    metadata:\n    \u00a0\u00a0name: myapplication-a\n    spec:\n    \u00a0\u00a0hosts:\n    \u00a0\u00a0- service-a\n    \u00a0\u00a0http:\n    \u00a0\u00a0\u00a0\u00a0route:\n    \u00a0\u00a0\u00a0\u00a0- destination:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host: service-backend-a\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subset: v1\n    ```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n\u00a0\u00a0name: service-backend-a\nspec:\n\u00a0\u00a0host: service-backend-a\n\u00a0\u00a0trafficPolicy:\n\u00a0\u00a0\u00a0\u00a0tls:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mode: ISTIO_MUTUAL\n\u00a0\u00a0subsets:\n\u00a0\u00a0- name: v1\n\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version: v1\n```", "```\n    kubectl apply --filename https://github.com/knative/serving/releases/download/v0.18.0/serving-crds.yaml\n    ```", "```\n    kubectl apply --filename https://github.com/knative/serving/releases/download/v0.18.0/serving-core.yaml\n    ```", "```\n    kubectl apply --filename https://github.com/knative/net-istio/releases/download/v0.18.0/release.yaml\n    ```", "```\n    Kubectl get service -n istio-system istio-ingressgateway\n    ```", "```\n    kubectl apply --filename https://github.com/knative/serving/releases/download/v0.18.0/serving-default-domain.yaml\n    ```", "```\n    kubectl apply --filename https://github.com/knative/eventing/releases/download/v0.18.0/eventing-crds.yaml\n    ```", "```\n    kubectl apply --filename https://github.com/knative/eventing/releases/download/v0.18.0/eventing-core.yaml\n    ```", "```\n    kubectl apply --filename https://github.com/knative/eventing/releases/download/v0.18.0/in-memory-channel.yaml\n    ```", "```\n    kubectl apply --filename https://github.com/knative/eventing/releases/download/v0.18.0/mt-channel-broker.yaml\n    ```", "```\napiVersion: eventing.knative.dev/v1\nkind: broker\nmetadata:\n name: my-broker\n namespace: default\n```", "```\napiVersion: eventing.knative.dev/v1\nkind: Trigger\nmetadata:\n\u00a0\u00a0name: my-trigger\nspec:\n\u00a0\u00a0broker: my-broker\n\u00a0\u00a0filter:\n\u00a0\u00a0\u00a0\u00a0attributes:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type: myeventtype\n\u00a0\u00a0subscriber:\n\u00a0\u00a0\u00a0\u00a0ref:\n\u00a0\u00a0\u00a0\u00a0\u00a0apiVersion: v1\n\u00a0\u00a0\u00a0\u00a0\u00a0kind: Service\n\u00a0\u00a0\u00a0\u00a0\u00a0name: service-consumer\n```", "```\nkubectl get broker\n```", "```\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0READY\u00a0\u00a0 REASON\u00a0\u00a0 URL\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 AGE\nmy-broker\u00a0\u00a0 True\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 http://broker-ingress.knative-eventing.svc.cluster.local/default/my-broker\u00a0\u00a0\u00a0\u00a0 1m\n```", "```\nkubectl run -i --tty --rm debug --image=radial/busyboxplus:curl --restart=Never -- sh\n```", "```\ncurl -v \"http://broker-ingress.knative-eventing.svc.cluster.local/default/my-broker\" \\\n\u00a0\u00a0-X POST \\\n\u00a0\u00a0-H \"Ce-Id: anyid\" \\\n\u00a0\u00a0-H \"Ce-Specversion: 1.0\" \\\n\u00a0\u00a0-H \"Ce-Type: myeventtype\" \\\n\u00a0\u00a0-H \"Ce-Source: any\" \\\n\u00a0\u00a0-H \"Content-Type: application/json\" \\\n\u00a0\u00a0-d '{\"payload\":\"Does this work?\"}'\n```", "```\n> HTTP/1.1 200 OK\n> Content-Type: application/json\n{\n\u00a0\u00a0\"Output\": \"Does this work?\"\n}\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml\n```", "```\nhelm repo add openfaas https://openfaas.github.io/faas-netes/\nhelm repo update\n```", "```\nhelm install openfaas openfaas/openfaas \\\n\u00a0\u00a0\u00a0\u00a0--namespace openfaas\u00a0\u00a0\\\n\u00a0\u00a0\u00a0\u00a0--set functionNamespace=openfaas-fn \\\n\u00a0\u00a0\u00a0\u00a0--set ingress.enabled=true \\\n\u00a0\u00a0\u00a0\u00a0--set generateBasicAuth=true \n```", "```\nOPENFAASPWD=$(kubectl get secret basic-auth -n openfaas -o jsonpath=\"{.data.basic-auth-password}\" | base64 --decode)\n```", "```\ncurl -sL https://cli.openfaas.com | sudo sh\n```", "```\nfaas-cli new my-function \u2013lang node\n```", "```\nFolder: my-function created.\nFunction created in folder: my-function\nStack file written: my-function.yml\n```", "```\nprovider:\n\u00a0\u00a0name: openfaas\n\u00a0\u00a0gateway: http://localhost:8080\nfunctions:\n\u00a0\u00a0my-function:\n\u00a0\u00a0\u00a0\u00a0lang: node\n\u00a0\u00a0\u00a0\u00a0handler: ./my-function\n\u00a0\u00a0\u00a0\u00a0image: my-function\n```", "```\n\"use strict\"\nmodule.exports = (context, callback) => {\n\u00a0\u00a0\u00a0\u00a0callback(undefined, {output: \"my function succeeded!\"});\n}\n```", "```\nfaas-cli build -f /path/to/my-function.yml \n```", "```\nfaas-cli push -f my-function.yml \n```", "```\nfaas-cli deploy -f my-function.yml\n```", "```\nexport OPENFAAS_URL=http://127.0.0.1:8080\nkubectl port-forward -n openfaas svc/gateway 8080:8080\n```", "```\necho -n $OPENFAASPWD | faas-cli login -g $OPENFAAS_URL -u admin --password-stdin\n```", "```\nfaas-cli invoke -f my-function.yml my-function\n```", "```\nReading from STDIN - hit (Control + D) to stop.\nThis is my message\n{ output: \"my function succeeded!\"});}\n```", "```\nfaas-cli rm -f my-function.yml \n```"]