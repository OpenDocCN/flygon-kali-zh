["```java\npublic class AmericanQuarterHorse extends VirtualHorse {\n    public AmericanQuarterHorse(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"AmericanQuarterHorse created.\");\n    }\n\n    public AmericanQuarterHorse(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n    public String getBaby() {\n        return \"AQH baby \";\n    }\n\n    public String getBreed() {\n        return \"American Quarter Horse\";\n    }\n\n    public String getAsciiArt() {\n        return\n            \"     >>\\\\.\\n\" +\n            \"    /*  )`.\\n\" + \n            \"   // _)`^)`.   _.---. _\\n\" +\n            \"  (_,' \\\\  `^-)''      `.\\\\\\n\" +\n            \"        |              | \\\\\\n\" +\n            \"        \\\\              / |\\n\" +\n            \"       / \\\\  /.___.'\\\\  (\\\\ (_\\n\" +\n            \"      < ,'||     \\\\ |`. \\\\`-'\\n\" +\n            \"       \\\\\\\\ ()      )|  )/\\n\" +\n            \"       |_>|>     /_] //\\n\" +\n            \"         /_]        /_]\\n\";\n    }\n}\n```", "```java\npublic class ShireHorse extends VirtualHorse {\n    public ShireHorse(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"ShireHorse created.\");\n    }\n\n    public ShireHorse(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n    public String getBaby() {\n        return \"ShireHorse baby \";\n    }\n\n    public String getBreed() {\n        return \"Shire Horse\";\n    }\n\n    public String getAsciiArt() {\n        return\n            \"                        ;;\\n\" + \n            \"                      .;;'*\\\\\\n\" + \n            \"           __       .;;' ' \\\\\\n\" +\n            \"         /'  '\\\\.~~.~' \\\\ /'\\\\.)\\n\" +\n            \"      ,;(      )    /  |\\n\" + \n            \"     ,;' \\\\    /-.,,(   )\\n\" +\n            \"          ) /|      ) /|\\n\" +    \n            \"          ||(_\\\\     ||(_\\\\\\n\" +    \n            \"          (_\\\\       (_\\\\\\n\";\n    }\n}\n```", "```java\npublic class Thoroughbred extends VirtualHorse {\n    public Thoroughbred(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"Thoroughbred created.\");\n    }\n\n    public Thoroughbred(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n    public String getBaby() {\n        return \"Thoroughbred baby \";\n    }\n\n    public String getBreed() {\n        return \"Thoroughbred\";\n    }\n\n    public String getAsciiArt() {\n        return\n            \"             })\\\\-=--.\\n\" +  \n            \"            // *._.-'\\n\" +\n            \"   _.-=-...-'  /\\n\" +\n            \" {{|   ,       |\\n\" +\n            \" {{\\\\    |  \\\\  /_\\n\" +\n            \" }} \\\\ ,'---'\\\\___\\\\\\n\" +\n            \" /  )/\\\\\\\\     \\\\\\\\ >\\\\\\n\" +\n            \"   //  >\\\\     >\\\\`-\\n\" +\n            \"  `-   `-     `-\\n\";\n    }\n}\n```", "```java\nAmericanQuarterHorse american = \n    new AmericanQuarterHorse(\n        8, \"American\", \"Equi-Spirit Ball\");\namerican.printBreed();\n```", "```java\nVirtualAnimal created.\nVirtualMammal created.\nVirtualDomesticMammal created.\nVirtualHorse created.\nAmericanQuarterHorse created.\n\n```", "```java\nSystem.out.println(american instanceof VirtualAnimal);\nSystem.out.println(american instanceof VirtualMammal);\nSystem.out.println(american instanceof VirtualDomesticMammal);\nSystem.out.println(american instanceof VirtualHorse);\nSystem.out.println(american instanceof AmericanQuarterHorse);\n```", "```java\npublic void printBreed() {\n    System.out.println(getBreed());\n}\n```", "```java\nShireHorse zelda =\n    new ShireHorse(9, true, \n        \"Zelda\", \"Tennis Ball\");\n```", "```java\namerican.printAverageNumberOfBabies();\namerican.printAsciiArt();\nzelda.printAverageNumberOfBabies();\nzelda.printAsciiArt();\n```", "```java\nThoroughbred willow = \n    new Thoroughbred(5,\n        \"Willow\", \"Jolly Ball\");\nwillow.printAsciiArt();\n```", "```java\nwillow.neigh();\nwillow.neigh(2);\nwillow.neigh(2, american);\nwillow.neigh(3, zelda, true);\namerican.nicker();\namerican.nicker(2);\namerican.nicker(2, willow);\namerican.nicker(3, willow, true);\n```", "```java\npublic abstract class VirtualDomesticMammal extends VirtualMammal {\n    public final String name;\n    public String favoriteToy;\n\n    public VirtualDomesticMammal(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant);\n        this.name = name;\n        this.favoriteToy = favoriteToy;\n        System.out.println(\"VirtualDomesticMammal created.\");\n    }\n\n    public VirtualDomesticMammal(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n protected final void printSoundInWords(\n String soundInWords, \n int times, \n VirtualDomesticMammal otherDomesticMammal,\n boolean isAngry) {\n        String message = String.format(\"%s%s: %s%s\",\n            name,\n            otherDomesticMammal == null ? \n                \"\" : String.format(\" to %s \", otherDomesticMammal.name),\n            isAngry ?\n                \"Angry \" : \"\",\n            new String(new char[times]).replace(\"\\0\", soundInWords));\n        System.out.println(message);\n    }\n\n    public void talk() {\n        System.out.println(\n            String.format(\"%s: says something\", name));\n    }\n}\n```", "```java\n|    update replaced class VirtualHorse which cannot be referenced until this error is corrected:\n|      printSoundInWords(java.lang.String,int,VirtualDomesticMammal,boolean) in VirtualHorse cannot override printSoundInWords(java.lang.String,int,VirtualDomesticMammal,boolean) in VirtualDomesticMammal\n|        overridden method is final\n|          protected void printSoundInWords(String soundInWords, int times,\n|          ^---------------------------------------------------------------...\n|    update replaced class AmericanQuarterHorse which cannot be referenced until class VirtualHorse is declared\n|    update replaced class ShireHorse which cannot be referenced until class VirtualHorse is declared\n|    update replaced class Thoroughbred which cannot be referenced until class VirtualHorse is declared\n|    update replaced variable american which cannot be referenced until class AmericanQuarterHorse is declared\n|    update replaced variable zelda which cannot be referenced until class ShireHorse is declared\n|    update replaced variable willow which cannot be referenced until class Thoroughbred is declared\n|    update overwrote class VirtualDomesticMammal\n\n```", "```java\npublic abstract class VirtualHorse extends VirtualDomesticMammal {\n    public VirtualHorse(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"VirtualHorse created.\");        \n    }\n\n    public VirtualHorse(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n public final boolean isAbleToFly() {\n        return false;\n    }\n\n public final boolean isRideable() {\n        return true;\n    }\n\n public final boolean isHerbivore() {\n        return true;\n    }\n\n public final boolean isCarnivore() {\n        return false;\n    }\n\n    public int getAverageNumberOfBabies() {\n        return 1;\n    }\n\n    public abstract String getBreed();\n\n public final void printBreed() {\n        System.out.println(getBreed());\n    }\n\n public final void printNeigh(\n int times, \n VirtualDomesticMammal otherDomesticMammal,\n boolean isAngry) {\n        printSoundInWords(\"Neigh \", times, otherDomesticMammal, isAngry);\n    }\n\n public final void neigh() {\n        printNeigh(1, null, false);\n    }\n\n public final void neigh(int times) {\n        printNeigh(times, null, false);\n    }\n\n public final void neigh(int times, \n VirtualDomesticMammal otherDomesticMammal) {\n        printNeigh(times, otherDomesticMammal, false);\n    }\n\n public final void neigh(int times, \n VirtualDomesticMammal otherDomesticMammal, \n boolean isAngry) {\n        printNeigh(times, otherDomesticMammal, isAngry);\n    }\n\n public final void printNicker(int times, \n VirtualDomesticMammal otherDomesticMammal,\n boolean isAngry) {\n        printSoundInWords(\"Nicker \", times, otherDomesticMammal, isAngry);\n    }\n\n public final void nicker() {\n        printNicker(1, null, false);\n    }\n\n public final void nicker(int times) {\n        printNicker(times, null, false);\n    }\n\n public final void nicker(int times, \n VirtualDomesticMammal otherDomesticMammal) {\n        printNicker(times, otherDomesticMammal, false);\n    }\n\n public final void nicker(int times, \n VirtualDomesticMammal otherDomesticMammal, \n boolean isAngry) {\n        printNicker(times, otherDomesticMammal, isAngry);\n    }\n\n @Override\n public final void talk() {\n        nicker();\n    }\n}\n```", "```java\n|    update replaced class AmericanQuarterHorse\n|    update replaced class ShireHorse\n|    update replaced class Thoroughbred\n|    update replaced variable american, reset to null\n|    update replaced variable zelda, reset to null\n|    update replaced variable willow, reset to null\n|    update overwrote class VirtualHorse\n\n```", "```java\npublic abstract class VirtualDomesticCat extends VirtualDomesticMammal {\n    public VirtualDomesticCat(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"VirtualDomesticCat created.\");        \n    }\n\n    public VirtualDomesticCat(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n    public final boolean isAbleToFly() {\n        return false;\n    }\n\n    public final boolean isRideable() {\n        return false;\n    }\n\n    public final boolean isHerbivore() {\n        return false;\n    }\n\n    public final boolean isCarnivore() {\n        return true;\n    }\n\n    public int getAverageNumberOfBabies() {\n        return 5;\n    }\n\n    public final void printMeow(int times) {\n        printSoundInWords(\"Meow \", times, null, false);\n    }\n\n    @Override\n    public final void talk() {\n        printMeow(1);\n    }\n}\n```", "```java\npublic final class MaineCoon extends VirtualDomesticCat {\n    public MaineCoon(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"MaineCoon created.\");        \n    }\n\n    public MaineCoon(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n    public String getBaby() {\n        return \"Maine Coon baby \";\n    }\n\n    @Override\n    public int getAverageNumberOfBabies() {\n        return 6;\n    }\n\n    public String getAsciiArt() {\n        return\n            \"  ^_^\\n\" + \n            \" (*.*)\\n\" +\n            \"  |-|\\n\" +\n            \" /   \\\\\\n\";\n    }\n}\n```", "```java\npublic abstract class VirtualBird extends VirtualAnimal {\n    public String feathersColor;\n\n    public VirtualBird(int age, String feathersColor) {\n        super(age);\n        this.feathersColor = feathersColor;\n        System.out.println(\"VirtualBird created.\");\n    }\n\n    public final boolean isAbleToFly() {\n        // Not all birds are able to fly in real-life\n        // However, all our virtual birds are able to fly\n        return true;\n    }\n\n}\n```", "```java\npublic abstract class VirtualDomesticBird extends VirtualBird {\n    public final String name;\n\n    public VirtualDomesticBird(int age, \n        String feathersColor, \n        String name) {\n        super(age, feathersColor);\n        this.name = name;\n        System.out.println(\"VirtualDomesticBird created.\");\n    }\n}\n```", "```java\npublic final class Cockatiel extends VirtualDomesticBird {\n    public Cockatiel(int age, \n        String feathersColor, String name) {\n        super(age, feathersColor, name);\n        System.out.println(\"Cockatiel created.\");\n    }\n\n    public boolean isRideable() {\n        return true;\n    }\n\n    public boolean isHerbivore() {\n        return true;\n    }\n\n    public boolean isCarnivore() {\n        return true;\n    }\n\n    public int getAverageNumberOfBabies() {\n        return 4;\n    }\n\n    public String getBaby() {\n        return \"Cockatiel baby \";\n    }\n\n    public String getAsciiArt() {\n        return\n            \"     ///\\n\" +\n            \"      .////.\\n\" +\n            \"      //   //\\n\" +\n            \"      \\\\ (*)\\\\\\n\" +\n            \"      (/    \\\\\\n\" +\n            \"       /\\\\    \\\\\\n\" +\n            \"      ///     \\\\\\\\\\n\" +\n            \"     ///|     |\\n\" +\n            \"    ////|     |\\n\" +\n            \"   //////    /\\n\" +\n            \"  ////  \\\\   \\\\\\n\" +\n            \"  \\\\\\\\    ^    ^\\n\" +\n            \"   \\\\\\n\" +\n            \"    \\\\\\n\";\n    }\n}\n```", "```java\npublic final class VirtualDomesticRabbit extends VirtualDomesticMammal {\n    public VirtualDomesticRabbit(\n        int age, \n        boolean isPregnant, \n        String name, \n        String favoriteToy) {\n        super(age, isPregnant, name, favoriteToy);\n        System.out.println(\"VirtualDomesticRabbit created.\");        \n    }\n\n    public VirtualDomesticRabbit(\n        int age, String name, String favoriteToy) {\n        this(age, false, name, favoriteToy);\n    }\n\n    public final boolean isAbleToFly() {\n        return false;\n    }\n\n    public final boolean isRideable() {\n        return false;\n    }\n\n    public final boolean isHerbivore() {\n        return true;\n    }\n\n    public final boolean isCarnivore() {\n        return false;\n    }\n\n    public int getAverageNumberOfBabies() {\n        return 6;\n    }\n\n    public String getBaby() {\n        return \"Rabbit baby \";\n    }\n\n    public String getAsciiArt() {\n        return\n            \"   /\\\\ /\\\\\\n\" + \n            \"   \\\\ V /\\n\" + \n            \"   | **)\\n\" + \n            \"   /  /\\n\" + \n            \"  /  \\\\_\\\\_\\n\" + \n            \"*(__\\\\_\\\\\\n\";\n    }\n}\n```", "```java\nvoid printBabies(VirtualAnimal animal) {\n    animal.printAverageNumberOfBabies();\n}\n\nvoid printAsciiArt(VirtualAnimal animal) {\n    animal.printAsciiArt();\n}\n```", "```java\nCockatiel tweety = \n    new Cockatiel(3, \"White\", \"Tweety\");\nVirtualDomesticRabbit bunny = \n    new VirtualDomesticRabbit(2, \"Bunny\", \"Sneakers\");\nMaineCoon garfield = \n    new MaineCoon(3, \"Garfield\", \"Lassagna\");\n```", "```java\nSystem.out.println(tweety.name);\nprintBabies(tweety);\nprintAsciiArt(tweety);\n\nSystem.out.println(bunny.name);\nprintBabies(bunny);\nprintAsciiArt(bunny);\n\nSystem.out.println(garfield.name);\nprintBabies(garfield);\nprintAsciiArt(garfield);\n```", "```java\nvoid makeItTalk(VirtualDomesticMammal domestic) {\n    domestic.talk();\n}\n```", "```java\nmakeItTalk(bunny);\nmakeItTalk(garfield);\n```", "```java\ntweety.printAge();\nbunny.printAge();\ngarfield.printAge();\ntweety.isOlderThan(bunny);\ngarfield.isYoungerThan(tweety);\nbunny.isYoungerThan(garfield);\n```"]