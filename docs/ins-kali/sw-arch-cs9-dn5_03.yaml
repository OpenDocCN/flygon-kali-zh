- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Documenting Requirements with Azure DevOps
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure DevOps记录需求
- en: Azure DevOps is an evolution of Visual Studio Team Services, and it offers a
    variety of new features that can help developers to document and organize their
    software. The purpose of this chapter is to present an overview of this tool provided
    by Microsoft.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps是Visual Studio Team Services的演进，它提供了各种新功能，可以帮助开发人员记录和组织他们的软件。本章的目的是介绍Microsoft提供的这个工具的概述。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Creating an Azure DevOps project using your Azure account
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用您的Azure帐户创建Azure DevOps项目
- en: Understanding the functionalities offered by Azure DevOps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Azure DevOps提供的功能
- en: Organizing and managing requirements using Azure DevOps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure DevOps组织和管理需求
- en: Presenting use cases in Azure DevOps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Azure DevOps中提出用例
- en: The first two sections of this chapter summarize all the functionalities offered
    by Azure DevOps, while the remaining sections focus specifically on the tools
    for documenting requirements and supporting the overall development process. Most
    of the functionality introduced in the first two sections will be analyzed in
    more detail in other chapters.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的前两节总结了Azure DevOps提供的所有功能，而其余部分专注于文档需求和支持整个开发过程的工具。在其他章节中，将更详细地分析在前两节中介绍的大部分功能。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter requires you to create a new free Azure account or use an existing
    one. The *Creating an Azure account* section of *Chapter 1*, *Understanding the
    Importance of Software Architecture*, explains how to create one. The *Azure DevOps
    repository* subsection also requires Visual Studio 2019 Community Edition (free)
    or better.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您创建一个新的免费Azure帐户或使用现有的帐户。*第1章*的*了解软件架构的重要性*部分解释了如何创建一个。*Azure DevOps存储库*子部分还需要Visual
    Studio 2019社区版（免费）或更高版本。
- en: Introducing Azure DevOps
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Azure DevOps
- en: Azure DevOps is a Microsoft **Software-as-a-Service** (**SaaS**) platform that
    enables you to deliver continuous value to your customers. By creating an account
    there, you will be able to easily plan your project, store your code safely, test
    it, publish the solution to a staging environment, and then publish the solution
    to the actual production infrastructure.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps是Microsoft的**软件即服务**（**SaaS**）平台，使您能够为客户持续提供价值。通过在那里创建一个帐户，您将能够轻松规划项目，安全存储代码，测试代码，将解决方案发布到暂存环境，然后将解决方案发布到实际的生产基础设施。
- en: Of course, Azure DevOps is a complete framework and the ecosystem that it provides
    for software development is currently available. The automation of all the steps
    involved in software production ensures the continuous enhancement and improvement
    of an existing solution in order to adapt it to market needs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，Azure DevOps是一个完整的框架，它提供了当前可用的软件开发生态系统。自动化软件生产中涉及的所有步骤确保不断改进和改善现有解决方案，以使其适应市场需求。
- en: 'You can start the process moving in your Azure portal. If you don''t know how
    to create an Azure portal account, then please check *Chapter 1*, *Understanding
    the Importance of Software Architecture*. The steps to create an Azure DevOps
    account are quite simple:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Azure门户中开始该过程。如果您不知道如何创建Azure门户帐户，请查看*第1章*的*了解软件架构的重要性*。创建Azure DevOps帐户的步骤非常简单：
- en: Select **Create a resource** and then **DevOps Starter**:![](img/B16756_03_01.png)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建资源**，然后选择**DevOps Starter**：![](img/B16756_03_01.png)
- en: 'Figure 3.1: DevOps starter page'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1：DevOps起始页
- en: As soon as you start the wizard for creating the project, you can choose from
    several different platforms how you want to deliver your system. This is one of
    the greatest advantages of Azure DevOps, as you are not limited to Microsoft tools
    and products, but can rather choose from all common platforms, tools, and products
    available on the market:![](img/B16756_03_02.png)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦开始创建项目的向导，您可以从几种不同的平台中选择如何交付您的系统。这是Azure DevOps的最大优势之一，因为您不仅限于Microsoft工具和产品，而是可以从市场上所有常见的平台、工具和产品中进行选择：![](img/B16756_03_02.png)
- en: 'Figure 3.2: DevOps technology selection'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2：DevOps技术选择
- en: The options available will depend on the platform chosen in the first step.
    In some cases, you can choose from several deployment options, as you can see
    in the following screenshot, which appears if you select the .NET platform:![](img/B16756_03_03.png)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可用的选项将取决于第一步选择的平台。在某些情况下，您可以从几种部署选项中进行选择，如下面的屏幕截图所示，如果您选择.NET平台：![](img/B16756_03_03.png)
- en: 'Figure 3.3: DevOps technology selection, more details'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3：DevOps技术选择，更多细节
- en: '![](img/B16756_03_04.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_04.png)'
- en: 'Figure 3.4: DevOps deployment options'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4：DevOps部署选项
- en: Once the setup is complete, you will be able to manage the project using the
    project portal according to the information you provided. It is worth mentioning
    that this wizard will create an Azure DevOps Service if you do not have one. Moreover,
    the resource selected for deployment is also automatically created, so for instance
    if you select **Windows Web App**, a web app will be created, and if you select
    **Virtual Machine**, a virtual machine will be created. The Azure DevOps organization
    is where you can organize all of your Azure DevOps projects. The whole process
    takes less than 20 minutes:![](img/B16756_03_05.png)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置完成后，您将能够根据您提供的信息使用项目门户管理项目。值得一提的是，如果您没有Azure DevOps服务，此向导将创建一个。此外，还会自动创建所选的部署资源，例如，如果您选择**Windows
    Web App**，将创建一个Web应用程序，如果您选择**虚拟机**，将创建一个虚拟机。Azure DevOps组织是您可以组织所有Azure DevOps项目的地方。整个过程不到20分钟：![](img/B16756_03_05.png)
- en: 'Figure 3.5: DevOps with Web App project details'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5：Web应用程序项目的DevOps详细信息
- en: '![](img/B16756_03_06.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_06.png)'
- en: 'Figure 3.6: DevOps with virtual machine project details'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6：虚拟机项目的DevOps详细信息
- en: After that, you will be able to start planning your project. The following screenshot
    shows the page that appears once the Azure DevOps project creation is complete.
    In the remainder of this book, we will come back to this page several times to
    introduce and describe various useful features that ensure a faster and more efficacious
    deployment:![](img/B16756_03_07.png)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您将能够开始规划您的项目。以下屏幕截图显示了Azure DevOps项目创建完成后出现的页面。在本书的其余部分，我们将多次回到这个页面，以介绍和描述各种有用的功能，以确保更快速和更有效的部署：![](img/B16756_03_07.png)
- en: 'Figure 3.7: DevOps project page'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7：DevOps项目页面
- en: As you can see from the preceding screenshot, the process for creating an Azure
    DevOps account and starting to develop the best-in-class DevOps tool is quite
    simple. It is worth mentioning that you can start using this fantastic tool at
    no cost, as long as you have no more than five developers on your team, plus any
    number of stakeholders.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您从前面的屏幕截图中所看到的，创建Azure DevOps帐户并开始开发最佳的DevOps工具的过程非常简单。值得一提的是，只要您的团队中没有超过五名开发人员，加上任意数量的利益相关者，您就可以免费使用这个出色的工具。
- en: It is worth mentioning that there is no limit on the number of stakeholders
    because the functionalities available to them are very limited. Essentially, they
    have read-only privileges on boards and work items, and very limited possibilities
    to modify them. More specifically, they can add new work items and existing tags
    to work items, and they can provide feedback. Concerning builds and releases,
    they can just approve releases (some other limited functionalities are in preview
    at the time of writing this book).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，利益相关者的数量没有限制，因为他们可以使用的功能非常有限。基本上，他们对面板和工作项具有只读权限，并且几乎没有修改它们的可能性。具体来说，他们可以添加新的工作项和现有标签到工作项，并且可以提供反馈。关于构建和发布，他们只能批准发布（在撰写本书时，还有一些其他有限的功能处于预览状态）。
- en: Organizing your work using Azure DevOps
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure DevOps组织您的工作
- en: DevOps will be discussed in detail in *Chapter 20*, *Understanding DevOps Principles*,
    but you need to understand it as a philosophy that is focused in delivering value
    to customers. It is the union of people, process, and products, where **Continuous
    Integration and Continuous Deployment** (**CI/CD**) methodology is used to apply
    continuous improvements to a software application delivered to the production
    environment. Azure DevOps is a powerful tool whose range of applications encompasses
    all the steps involved in both the initial development of an application and in
    its subsequent CI/CD process.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps将在*第20章*中进行详细讨论，*理解DevOps原则*，但您需要将其理解为一种专注于为客户提供价值的哲学。它是人、流程和产品的结合，使用**持续集成和持续部署**（**CI/CD**）方法来对交付给生产环境的软件应用程序进行持续改进。Azure
    DevOps是一个强大的工具，其应用范围涵盖了应用程序的初始开发和随后的CI/CD过程中涉及的所有步骤。
- en: 'Azure DevOps contains tools for collecting requirements and for organizing
    the whole development process. They can be accessed by clicking the **Boards**
    menu on the Azure DevOps page and will be described in more detail in the next
    two sections:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps包含用于收集需求和组织整个开发过程的工具。它们可以通过单击Azure DevOps页面上的**面板**菜单来访问，并将在接下来的两个小节中进行更详细的描述：
- en: '![](img/B16756_03_08.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_08.png)'
- en: 'Figure 3.8: Boards menu'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8：面板菜单
- en: All other functionalities available in Azure DevOps are briefly reviewed in
    the following subsections. They will be discussed in detail in other chapters.
    More specifically, CI and build/test pipelines are discussed in *Chapter 18*,
    *Testing Your Code with Unit Test Cases and TDD*, and *Chapter 21*, *Challenges
    of Applying CI Scenarios*, while DevOps principles and release pipelines are discussed
    in *Chapter 20*, *Understanding DevOps Principles*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps中的所有其他功能在以下小节中进行了简要回顾。它们将在其他章节中进行详细讨论。具体来说，CI和构建/测试管道在*第18章*中讨论，*使用单元测试用例和TDD测试您的代码*，以及*第21章*，*应用CI场景的挑战*，而DevOps原则和发布管道在*第20章*中讨论，*理解DevOps原则*。
- en: Azure DevOps repository
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure DevOps存储库
- en: 'The **Repos** menu item gives you access to a default Git repository where
    you can place your project''s code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**存储库**菜单项让您访问默认的Git存储库，您可以在其中放置项目的代码：'
- en: '![](img/B16756_03_09.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_09.png)'
- en: 'Figure 3.9: Repos menu'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9：存储库菜单
- en: Clicking the **Files** item, you enter the default repository initial page.
    It is empty and contains instructions on how to connect to this default repository.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**文件**项目，您将进入默认存储库的初始页面。它是空的，并包含有关如何连接到此默认存储库的说明。
- en: 'You can add further repositories through the drop-down menu at the top of the
    page:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过页面顶部的下拉菜单添加更多的存储库：
- en: '![](img/B16756_03_10.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_10.png)'
- en: 'Figure 3.10: Adding a new repository'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10：添加新存储库
- en: All created repositories are accessible through the same drop-down menu.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所有创建的存储库都可以通过同一个下拉菜单访问。
- en: 'As shown in the preceding screenshot, each repository''s initial page contains
    the repository address and a button to generate repository-specific credentials,
    so you can connect to your DevOps repositories with your favorite Git tools. However,
    you can also connect from inside Visual Studio in a very simple way:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，每个存储库的初始页面包含存储库地址和一个按钮，用于生成特定于存储库的凭据，因此您可以使用您喜欢的Git工具连接到您的DevOps存储库。但是，您也可以从Visual
    Studio内部以非常简单的方式连接：
- en: Start Visual Studio and ensure you are logged in to it with the same Microsoft
    account used to define your DevOps project (or that was used to add you as a team
    member).
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Visual Studio，并确保您已登录到与定义DevOps项目相同的Microsoft帐户（或用于将您添加为团队成员的帐户）。
- en: Select the **Team Explorer** tab and then click the connection button:![](img/B16756_03_11.png)
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**团队资源管理器**选项卡，然后单击连接按钮：![](img/B16756_03_11.png)
- en: 'Figure 3.11: Adding a new repository'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11：添加新存储库
- en: Clicking the **Connect...** link for Azure DevOps, you will be walked through
    setting up a connection with one of your Azure DevOps projects.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击Azure DevOps的**连接...**链接，您将被引导设置与您的Azure DevOps项目之一的连接。
- en: 'Once connected to your DevOps remote repository, you can use Visual Studio
    Git tools, and can interact also with other DevOps functionalities from within
    Visual Studio. At the time of writing this book, the kind of interaction depends
    on the **New Git user experience** checkbox setting in the Visual Studio options:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦连接到您的DevOps远程存储库，您可以使用Visual Studio Git工具，并且还可以从Visual Studio内部与其他DevOps功能进行交互。在撰写本书时，交互的类型取决于Visual
    Studio选项中的**新Git用户体验**复选框设置：
- en: '![](img/B16756_03_12.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_12.png)'
- en: 'Figure 3.12: New Git user experience checkbox'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12：新的Git用户体验复选框
- en: 'If it is not checked, you will have the "classic" Visual Studio experience
    where you use Team Explorer for accessing both Git and other DevOps functionalities:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未经检查，您将拥有“经典”的Visual Studio体验，其中您可以使用Team Explorer访问Git和其他DevOps功能：
- en: Click the Team Explorer **Home** button. Now, you will see commands for performing
    Git operations and for interaction with other Azure DevOps areas:![](img/B16756_03_13.png)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击Team Explorer的**主页**按钮。现在，您将看到执行Git操作和与其他Azure DevOps区域进行交互的命令：![](img/B16756_03_13.png)
- en: 'Figure 3.13: Team Explorer options'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13：Team Explorer选项
- en: If you are the one designated to initialize the DevOps repository, create a
    start solution and commit your code by clicking the **Changes** button and then
    following the subsequent instructions.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您被指定为初始化DevOps存储库的人，请创建一个起始解决方案，并通过单击**更改**按钮并按照随后的说明提交您的代码。
- en: Click the **Sync** button to synchronize your local repository with the remote
    Azure DevOps repository.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**同步**按钮，将本地存储库与远程Azure DevOps存储库同步。
- en: Once all team members have initialized both their local machine repositories
    and the Azure DevOps repository with the preceding steps, you can now open Visual
    Studio. The solution created in your local repository will appear in the bottom
    area of the **Team Explorer** window.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有团队成员都使用上述步骤初始化了他们的本地机器存储库和Azure DevOps存储库，现在可以打开Visual Studio。在**Team Explorer**窗口的底部区域中将显示在本地存储库中创建的解决方案。
- en: Click the window to open the solution on your local machine. Then, synchronize
    with the remote repository to ensure the code you are modifying is up to date.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击窗口以在本地计算机上打开解决方案。然后，与远程存储库同步，以确保您正在修改的代码是最新的。
- en: 'If, instead, the **New Git user experience** checkbox is checked, the **Team
    Explorer** window has commands just for non-Git DevOps operations and an **Open
    Git Changes** link for opening a new window dedicated to Git operations:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，如果**新Git用户体验**复选框被选中，则**Team Explorer**窗口只有用于非Git DevOps操作的命令，以及用于打开专门用于Git操作的新窗口的**打开Git更改**链接：
- en: '![](img/B16756_03_14.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_14.png)'
- en: 'Figure 3.14: New Team Explorer window'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14：新Team Explorer窗口
- en: 'As soon as you go to this window, you are asked to clone or create a new repository.
    In both cases, you will be prompted to provide the address of the remote DevOps
    repository. Once you have created a local repository connected to the remote DevOps
    repository, you can start using the new Git window that offers more options than
    the ones offered by the classic Team Explorer window, and, in general, a more
    complete user experience:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入此窗口，您将被要求克隆或创建一个新的存储库。在两种情况下，您将被提示提供远程DevOps存储库的地址。一旦您创建了连接到远程DevOps存储库的本地存储库，您可以开始使用新的Git窗口，该窗口提供的选项比经典的Team
    Explorer窗口提供的选项更多，总体上提供了更完整的用户体验：
- en: '![](img/B16756_03_15.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_15.png)'
- en: 'Figure 3.15: Git changes window'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15：Git更改窗口
- en: 'When you have changes to commit, you can insert a message in the textbox at
    the top of the window and commit them locally by clicking the **Commit All** button,
    or you can click the dropdown next to this button to access more options:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当您有要提交的更改时，您可以在窗口顶部的文本框中插入消息，并通过单击**提交所有**按钮在本地提交，或者您可以单击此按钮旁边的下拉菜单以访问更多选项：
- en: '![](img/B16756_03_16.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_16.png)'
- en: 'Figure 3.16: Commit options'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16：提交选项
- en: 'You can commit and push or commit and sync, but you can also stage your changes.
    The three arrows in the top right of the Git Changes window trigger a fetch, pull,
    and push, respectively. Meanwhile, the dropdown at the top of the window takes
    care of operations on branches:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以提交和推送，或者提交和同步，但也可以暂存您的更改。Git更改窗口右上角的三个箭头分别触发获取、拉取和推送。与此同时，窗口顶部的下拉菜单负责分支操作：
- en: '![](img/B16756_03_17.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_17.png)'
- en: 'Figure 3.17: Branches operations'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17：分支操作
- en: Package feeds
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件包源
- en: The **Artifacts** menu handles the software packages used or created by the
    project. There, you can define feeds for basically all types of packages including
    NuGet, Node.js, and Python. Private feeds are needed since commercial projects
    use also private packages, so you need a place to put them. Moreover, packages
    produced during builds are placed in these feeds, so other modules having them
    as dependencies can immediately use them.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**Artifacts**菜单处理项目使用或创建的软件包。在那里，您可以为基本上所有类型的软件包定义feeds，包括NuGet、Node.js和Python。由于商业项目也使用私有软件包，因此需要私有feeds，因此您需要一个放置它们的地方。此外，构建过程中生成的软件包也放置在这些feeds中，因此具有这些软件包作为依赖项的其他模块可以立即使用它们。'
- en: 'Once in the **Artifacts** area, you can create several feeds by clicking the
    **+ Create Feed** button, where each feed can handle several kinds of packages,
    as shown in *Figure 3.18*:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入**Artifacts**区域，您可以通过单击**+创建Feed**按钮创建多个feeds，每个feed可以处理多种类型的软件包，如*图3.18*所示：
- en: '![](img/B16756_03_18.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_18.png)'
- en: 'Figure 3.18: Feed creation'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18：Feed创建
- en: 'If you select the option to connect to packages from public sources, by default,
    the feed connects to `npmjs`, `nuget.org`, and `pypi.org`. However, you can go
    to the upstream sources tab in the **Feed** settings page and remove/add package
    sources. The settings page can be reached by clicking the settings icon in the
    upper-right corner of the feed page. A screenshot of the page of the newly created
    feed follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择连接到公共来源的软件包选项，默认情况下，feed会连接到`npmjs`、`nuget.org`和`pypi.org`。但是，您可以转到**Feed**设置页面中的上游来源选项卡，删除/添加软件包来源。通过单击feed页面右上角的设置图标可以进入设置页面。以下是新创建的feed页面的截图：
- en: '![](img/B16756_03_19.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_19.png)'
- en: 'Figure 3.19: Feed page'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19：Feed页面
- en: 'The **Connect to feed** button for each feed shows a window that explains,
    for each package type, how to connect to the feed. In particular, for NuGet packages
    you should add all project feeds to your Visual Studio projects''/solutions''
    `nuget.config` file so that local machines can also use them, otherwise, your
    local build would fail:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 每个feed的**连接到feed**按钮显示一个窗口，解释了如何连接到feed的每种软件包类型。特别是对于NuGet软件包，您应该将所有项目feed添加到您的Visual
    Studio项目/解决方案的`nuget.config`文件中，以便本地机器也可以使用它们，否则，您的本地构建将失败：
- en: '![](img/B16756_03_20.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_20.png)'
- en: 'Figure 3.20: Feed connection information'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.20：Feed连接信息
- en: Test plans
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试计划
- en: 'The **Test Plans** section allows you to define the test plans you want to
    use and their settings. Tests are discussed in detail in *Chapter 18*, *Testing
    Your Code with Unit Test Cases and TDD*, and *Chapter 22*, *Automation for Functional
    Tests*, but here we would like to summarize the opportunities offered by Azure
    DevOps. Test-related operations and settings can be accessed through the **Test
    Plans** menu item:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试计划**部分允许您定义要使用的测试计划及其设置。测试在*第18章*“使用单元测试用例和TDD测试代码”和*第22章*“功能测试自动化”中有详细讨论，但在这里，我们想总结一下Azure
    DevOps提供的机会。测试相关的操作和设置可以通过**测试计划**菜单项访问：'
- en: '![](img/B16756_03_21.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_21.png)'
- en: 'Figure 3.21: Feed Test Plans menu'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.21：Feed测试计划菜单
- en: 'Here, you may define, execute, and track test plans made up of the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以定义、执行和跟踪由以下内容组成的测试计划：
- en: Manual acceptance tests
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动验收测试
- en: Automatic unit tests
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动单元测试
- en: Load tests
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负载测试
- en: 'Automatic unit tests must be defined in test projects contained in the Visual
    Studio solution and based on a framework such as NUnit, xUnit, and MSTest (Visual
    Studio has project templates for all of them). Test Plans gives you the opportunity
    to execute these tests on Azure and to define the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 自动单元测试必须在Visual Studio解决方案中包含的测试项目中定义，并基于诸如NUnit、xUnit和MSTest之类的框架（Visual Studio为所有这些都有项目模板）。测试计划让您有机会在Azure上执行这些测试，并定义以下内容：
- en: A number of configuration settings
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些配置设置
- en: When to execute them
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时执行它们
- en: How to track them and where to report their results in the overall project documentation
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何跟踪它们以及在整个项目文档中报告它们的结果
- en: For manual tests, you may define complete instructions for the operator in the
    project documentation, covering the environment in which to execute them (for
    example, an operating system), and where to report their results. You can also
    define how to execute load tests and how to measure results.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对于手动测试，您可以在项目文档中为操作员定义完整的指令，涵盖执行它们的环境（例如操作系统）以及报告结果的位置。您还可以定义如何执行负载测试以及如何测量结果。
- en: Pipelines
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管道
- en: 'Pipelines are automatic action plans that specify all steps from the code build
    until the software deployment is in production. They can be defined in the **Pipelines**
    area, which is accessible through the **Pipelines** menu item:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 管道是自动操作计划，指定从代码构建到软件部署到生产环境的所有步骤。它们可以在**管道**区域中定义，通过**管道**菜单项访问：
- en: '![](img/B16756_03_22.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_22.png)'
- en: 'Figure 3.22: Pipelines menu'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.22：管道菜单
- en: There, you can define a complete pipeline of tasks to be executed alongside
    their triggering events, which encompass steps such as code building, launching
    test plans, and what to do after the tests are passed.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里，您可以定义一系列任务的完整管道，以及它们的触发事件，其中包括代码构建、启动测试计划以及测试通过后的操作。
- en: 'Typically, after the tests are passed, the application is automatically deployed
    in a staging area where it can be beta-tested. You can also define the criteria
    for automatic deployment to production. Such criteria include, but are not limited
    to, the following:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在测试通过后，应用程序会自动部署到一个暂存区，在那里可以进行Beta测试。您还可以定义自动部署到生产环境的标准。这些标准包括但不限于以下内容：
- en: The number of days the application was beta-tested
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序进行Beta测试的天数
- en: The number of bugs found during beta-testing and/or removed by the last code
    change
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Beta测试期间发现的错误数量和/或最后一次代码更改删除的错误数量
- en: Manual approval by one or more managers/team members
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个或多个经理/团队成员的手动批准
- en: The criteria decision will depend on the way the company wants to manage the
    product that is being developed. You, as a software architect, have to understand
    that when it comes to moving code to production, the safer, the better.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 决策标准将取决于公司希望管理正在开发的产品的方式。作为软件架构师，您必须了解，当涉及将代码移至生产环境时，越安全越好。
- en: Managing system requirements in Azure DevOps
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Azure DevOps中管理系统需求
- en: Azure DevOps enables you to document system requirements using work items. Work
    items are stored in your project as chunks of information that can be assigned
    to a person. They are classified into various types and may contain a measure
    of the development effort required, a status, and the development stage (iteration)
    they belong to.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps使您能够使用工作项记录系统需求。工作项存储在项目中，可以分配给某人。它们被分类为各种类型，可能包含所需的开发工作量、状态和它们所属的开发阶段（迭代）的度量。
- en: DevOps is usually combined with agile methodologies, so Azure DevOps uses iterations,
    and the whole development process is organized as a set of sprints. The work items
    available depends on the *Work Item Process* you select while creating the Azure
    DevOps project. The following subsections contain a description of the most common
    work item types that appears when an **Agile** or **Scrum** *Work Item Process*
    is selected (the default is **Agile**).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps通常与敏捷方法相结合，因此Azure DevOps使用迭代，并且整个开发过程组织为一组冲刺。可用的工作项取决于您在创建Azure DevOps项目时选择的*工作项流程*。以下各小节包含在选择**敏捷**或**Scrum**
    *工作项流程*时出现的最常见工作项类型的描述（默认为**敏捷**）。
- en: Epic work items
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 史诗级工作项
- en: Imagine you are developing a system made of various subsystems. You are probably
    not going to conclude the whole system in a single iteration. Therefore, we need
    an umbrella spanning several iterations to encapsulate all features of each subsystem.
    Each Epic work item represents one of these umbrellas that can contain several
    features to be implemented in various development iterations.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，您正在开发由各种子系统组成的系统。您可能不会在单个迭代中完成整个系统。因此，我们需要一个跨越多个迭代的大伞来包含每个子系统的所有特性。每个史诗级工作项代表这些大伞中的一个，可以包含在各种开发迭代中实现的多个特性。
- en: In the Epic work item, you can define the state and acceptance criteria as well
    as the start date and target date. Besides this, you can also provide a priority
    and an effort estimate. All of this detailed information helps the stakeholders
    to follow the development process. This is really useful as a macro view of the
    project.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在史诗级工作项中，您可以定义状态和验收标准，以及开始日期和目标日期。此外，您还可以提供优先级和工作量估计。所有这些详细信息都有助于利益相关者跟踪开发过程。这对于项目的宏观视图非常有用。
- en: Feature work items
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特性工作项
- en: All of the information that you provide in an Epic work item can also be placed
    in a Feature work item. So, the difference between these two types of work items
    is not related to the kind of information they contain, but to their roles and
    the goals that your team will reach to conclude them. Epics may span several iterations
    and are hierarchically above Features, that is, each Epic work item is linked
    to several children Features, while each Feature work item is usually implemented
    in a few sprints and is part of a single Epic work item.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 您在史诗级工作项中提供的所有信息也可以放在特性工作项中。因此，这两种类型的工作项之间的区别不是与它们包含的信息类型有关，而是与它们的角色和您的团队将达到的目标有关。史诗可能跨越多个迭代，并且在特性之上具有层次结构，也就是说，每个史诗级工作项与多个子特性相关联，而每个特性工作项通常在几个迭代中实现，并且是单个史诗级工作项的一部分。
- en: It is worth mentioning that all work items have sections for team discussions.
    There, you will be able to find a team member in the discussion area by typing
    the `@` character (like in many forums/social media applications). Inside each
    work item, you can link and attach various information. You may also check the
    history of the current work item in a specific section.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，所有工作项都有团队讨论的部分。在那里，您可以通过输入`@`字符（就像在许多论坛/社交媒体应用程序中一样）找到讨论区域的团队成员。在每个工作项内，您可以链接和附加各种信息。您还可以在特定部分检查当前工作项的历史记录。
- en: Feature work items are the places to start recording user requirements. For
    instance, you can write a Feature work item called **Access Control** to define
    the complete functionally needed to implement the system access control.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 特性工作项是记录用户需求的起点。例如，您可以编写一个名为**访问控制**的特性工作项，以定义实现系统访问控制所需的完整功能。
- en: Product Backlog items/User Story work items
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 产品积压项/用户故事工作项
- en: 'Which of these work items is available depends on the selected *Working Item
    Process*. There are minor differences between them, but their purpose is substantially
    the same. They contain detailed requirements for the Features, described by the
    Features work items they are connected to. More specifically, each Product Backlog/User
    Story work item specifies the requirements of a single functionality that is a
    part of the behavior described in its father Features work item. For instance,
    in a Features work item for system access control, the maintenance of the users
    and the login interface should be two different User Stories/Product Backlog items.
    These requirements will guide the creation of other children work items:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工作项中的哪些是可用的取决于所选的*工作项流程*。它们之间存在细微差异，但它们的目的基本相同。它们包含了与它们连接的特性工作项描述的功能的详细要求。更具体地说，每个产品积压/用户故事工作项都指定了作为其父特性工作项描述的行为的一部分的单个功能的要求。例如，在用于系统访问控制的特性工作项中，用户的维护和登录界面应该是两个不同的用户故事/产品积压项。这些要求将指导其他子工作项的创建：
- en: '**Tasks**: These are important work items that describe the job that needs
    to be done to meet the requirements stated in the father Product Backlog items/User
    Story work item. Task work items can contain time estimates that help team capacity
    management and overall scheduling.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务**：这些是描述需要完成的工作的重要工作项，以满足父产品积压项/用户故事工作项中规定的要求。任务工作项可以包含有助于团队容量管理和整体安排的时间估计。'
- en: '**Test cases**: These items describe how to test the functionality described
    by the requirements.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试用例**：这些项目描述了如何测试由需求描述的功能。'
- en: The number of tasks and test cases you will create for each Product Backlog/User
    Story work item will vary according to the development and testing scenario you
    use.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您将为每个产品积压项/用户故事工作项创建的任务和测试用例的数量将根据您使用的开发和测试场景而变化。
- en: Use case – presenting use cases in Azure DevOps
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例 - 在Azure DevOps中呈现用例
- en: 'This section clarifies the concepts outlined in the previous section with the
    practical example of WWTravelClub. Considering the scenario described in *Chapter
    1*, *Understanding the Importance of Software Architecture*, we decided to define
    three Epic work items, as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 本节通过WWTravelClub的实际示例澄清了前一节中概念。考虑到*第1章*中描述的场景，*理解软件架构的重要性*，我们决定定义三个史诗级工作项，如下所示：
- en: '![](img/B16756_03_23.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_23.png)'
- en: 'Figure 3.23: User case Epics'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.23：用户案例史诗
- en: 'The creation of these work items is quite simple:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 创建这些工作项非常简单：
- en: Inside each work item, we link the different types of work items, as you can
    see in *Figure 3.24*.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每个工作项内部，我们链接不同类型的工作项，就像您在*图3.24*中看到的那样。
- en: It is really important to know that the connections between work items are really
    useful during software development. Hence, as a software architect, you have to
    provide this knowledge to your team and, more than that, you have to incentivize
    them to make these connections:![](img/B16756_03_24.png)
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 了解工作项之间的连接在软件开发过程中非常重要。因此，作为软件架构师，您必须向团队提供这些知识，而且更重要的是，您必须激励他们建立这些连接！[](img/B16756_03_24.png)
- en: 'Figure 3.24: Defining a link'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.24：定义链接
- en: As soon as you create a Feature work item, you will be able to connect it to
    several Product Backlog work items that detail its specifications. The following
    screenshot shows the details of a Product Backlog work item:![](img/B16756_03_25.png)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您创建了一个特性工作项，您将能够将其连接到几个详细说明其规格的产品积压工作项。以下截图显示了产品积压工作项的详细信息！[](img/B16756_03_25.png)
- en: 'Figure 3.25: Product Backlog work item'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.25：产品积压工作项
- en: After that, Task and Test Case work items can be created for each Product Backlog
    work item. The user interface provided by Azure DevOps is really efficacious because
    it enables you to track the chain of functionalities and the relationships between
    them:![](img/B16756_03_26.png)
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，可以为每个产品积压工作项创建任务和测试用例工作项。Azure DevOps提供的用户界面非常有效，因为它使您能够跟踪功能链和它们之间的关系！[](img/B16756_03_26.png)
- en: 'Figure 3.26: Board view'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.26：看板视图
- en: As soon as you complete the input for the Product Backlog and Tasks work items,
    you will be able to plan the project sprints together with your team. The plan
    view enables you to drag and drop Product Backlog work items to each planned sprint:![](img/B16756_03_27.png)
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您完成了产品积压和任务工作项的输入，您将能够与团队一起规划项目冲刺。计划视图使您能够将产品积压工作项拖放到每个计划的冲刺中！[](img/B16756_03_27.png)
- en: 'Figure 3.27: Backlog view'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.27：积压视图
- en: 'By clicking a specific sprint on the right, you will see just the work items
    assigned to that sprint. Each sprint page is quite similar to the backlog page,
    but contains more tabs:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在右侧点击特定的冲刺，您将只看到分配给该冲刺的工作项。每个冲刺页面与积压页面非常相似，但包含更多选项卡：
- en: '![](img/B16756_03_28.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_03_28.png)'
- en: 'Figure 3.28: User case Epics'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.28：用户案例史诗
- en: Also useful is the sprints menu on the left that enables each user to jump immediately
    to the current sprints of all projects they are engaged in.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧的冲刺菜单也非常有用，它使每个用户能够立即跳转到他们参与的所有项目的当前冲刺。
- en: This is how these work items are created. Once you understand this mechanism,
    you will be able to create and plan any software project. It is worth mentioning
    that the tool itself will not solve problems related to team management. However,
    the tool is a great way to incentivize the team to update the project status,
    so you can maintain a clear perspective of how the project is evolving.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是这些工作项是如何创建的。一旦您了解了这个机制，您就能够创建和规划任何软件项目。值得一提的是，工具本身不会解决与团队管理相关的问题。然而，该工具是激励团队更新项目状态的一个很好的方式，这样您就可以保持对项目进展的清晰视角。
- en: Summary
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter covered how you can create an Azure DevOps account for a software
    development project, and how to start managing your projects with Azure DevOps. It
    also gave a short review of all Azure DevOps functionalities, explaining how to
    access them through the Azure DevOps main menu. This chapter described in more
    detail how to manage system requirements and how to organize the necessary work
    with various kinds of work items, along with how to plan and organize sprints
    that will deliver epic solutions with many features.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何为软件开发项目创建Azure DevOps帐户，以及如何开始使用Azure DevOps管理您的项目。它还简要回顾了所有Azure DevOps功能，并解释了如何通过Azure
    DevOps主菜单访问它们。本章更详细地描述了如何管理系统需求，以及如何使用各种工作项规划和组织可以提供史诗解决方案和许多特性的冲刺。
- en: The next chapter discusses the different models of software architecture. We
    will also learn about the fundamental hints and criteria for choosing from among
    the options offered by a sophisticated cloud platform such as Azure while developing
    the infrastructure of your solution.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将讨论软件架构的不同模型。我们还将了解在开发解决方案基础架构时，如何从Azure等复杂云平台提供的选项中选择基本提示和标准。
- en: Questions
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Is Azure DevOps available only for .NET projects?
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps仅适用于.NET项目吗？
- en: What kind of test plans are available in Azure DevOps?
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps中有哪些测试计划可用？
- en: Can DevOps projects use private NuGet packages?
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevOps项目可以使用私有NuGet包吗？
- en: Why do we use work items?
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为什么使用工作项？
- en: What is the difference between Epics and Features work items?
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 史诗和特性工作项之间有什么区别？
- en: What kind of relationship exists between Tasks and Product Backlog items/User
    Story work items?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务和产品积压项/用户故事工作项之间存在什么样的关系？
- en: Further reading
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Here are some books and links you may consider reading with a view to gathering
    more information about this chapter:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些您可能考虑阅读的书籍和链接，以获取有关本章的更多信息：
- en: '[https://go.microsoft.com/fwlink/?LinkID=825688](https://go.microsoft.com/fwlink/?LinkID=825688)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://go.microsoft.com/fwlink/?LinkID=825688](https://go.microsoft.com/fwlink/?LinkID=825688)'
- en: '[https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video](https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video](https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video)'
- en: '[https://www.packtpub.com/application-development/mastering-non-functional-requirements](https://www.packtpub.com/application-development/mastering-non-functional-requirements)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/application-development/mastering-non-functional-requirements](https://www.packtpub.com/application-development/mastering-non-functional-requirements)'
