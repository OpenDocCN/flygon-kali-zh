["```\n//specify CIDR block as 10.0.0.0/16\n//the result, it returns VPC ID as \"vpc-66eda61f\"\n$ aws ec2 create-vpc --cidr-block 10.0.0.0/16\n{\n \"Vpc\": {\n \"VpcId\": \"vpc-66eda61f\", \n   \"InstanceTenancy\": \"default\", \n   \"Tags\": [], \n   \"State\": \"pending\", \n   \"DhcpOptionsId\": \"dopt-3d901958\", \n   \"CidrBlock\": \"10.0.0.0/16\"\n  }\n}\n```", "```\n//1^(st) subnet 10.0.\"1\".0/24 on us-east-1\"a\" availability zone\n$ aws ec2 create-subnet --vpc-id vpc-66eda61f --cidr-block 10.0.1.0/24 --availability-zone us-east-1a\n{\n \"Subnet\": {\n    \"VpcId\": \"vpc-66eda61f\", \n    \"CidrBlock\": \"10.0.1.0/24\", \n    \"State\": \"pending\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"SubnetId\": \"subnet-d83a4b82\", \n    \"AvailableIpAddressCount\": 251\n  }\n} \n\n//2^(nd) subnet 10.0.\"2\".0/24 on us-east-1\"b\"\n$ aws ec2 create-subnet --vpc-id vpc-66eda61f --cidr-block 10.0.2.0/24 --availability-zone us-east-1b\n{\n   \"Subnet\": {\n    \"VpcId\": \"vpc-66eda61f\", \n    \"CidrBlock\": \"10.0.2.0/24\", \n    \"State\": \"pending\", \n    \"AvailabilityZone\": \"us-east-1b\", \n    \"SubnetId\": \"subnet-62758c06\", \n    \"AvailableIpAddressCount\": 251\n   }\n}\n```", "```\n//create IGW, it returns IGW id as igw-c3a695a5\n$ aws ec2 create-internet-gateway \n{\n   \"InternetGateway\": {\n      \"Tags\": [], \n      \"InternetGatewayId\": \"igw-c3a695a5\", \n      \"Attachments\": []\n   }\n}\n\n//attach igw-c3a695a5 to vpc-66eda61f\n$ aws ec2 attach-internet-gateway --vpc-id vpc-66eda61f --internet-gateway-id igw-c3a695a5  \n```", "```\n//create route table within vpc-66eda61f\n//it returns route table id as rtb-fb41a280\n$ aws ec2 create-route-table --vpc-id vpc-66eda61f\n{\n \"RouteTable\": {\n \"Associations\": [], \n \"RouteTableId\": \"rtb-fb41a280\", \n \"VpcId\": \"vpc-66eda61f\", \n \"PropagatingVgws\": [], \n \"Tags\": [], \n \"Routes\": [\n {\n \"GatewayId\": \"local\", \n \"DestinationCidrBlock\": \"10.0.0.0/16\", \n \"State\": \"active\", \n \"Origin\": \"CreateRouteTable\"\n }\n ]\n }\n}\n\n//then set default route (0.0.0.0/0) as igw-c3a695a5\n$ aws ec2 create-route --route-table-id rtb-fb41a280 --gateway-id igw-c3a695a5 --destination-cidr-block 0.0.0.0/0\n{\n \"Return\": true\n}\n\n//finally, update 1^(st) subnet (subnet-d83a4b82) to use this route table\n$ aws ec2 associate-route-table --route-table-id rtb-fb41a280 --subnet-id subnet-d83a4b82\n{\n \"AssociationId\": \"rtbassoc-bf832dc5\"\n}\n\n//because 1^(st) subnet is public, assign public IP when launch EC2\n$ aws ec2 modify-subnet-attribute --subnet-id subnet-d83a4b82 --map-public-ip-on-launch  \n```", "```\n//allocate EIP, it returns allocation id as eipalloc-56683465\n$ aws ec2 allocate-address \n{\n \"PublicIp\": \"34.233.6.60\", \n \"Domain\": \"vpc\", \n \"AllocationId\": \"eipalloc-56683465\"\n}\n\n//create NAT-GW on 1^(st) public subnet (subnet-d83a4b82\n//also assign EIP eipalloc-56683465\n$ aws ec2 create-nat-gateway --subnet-id subnet-d83a4b82 --allocation-id eipalloc-56683465\n{\n \"NatGateway\": {\n \"NatGatewayAddresses\": [\n {\n \"AllocationId\": \"eipalloc-56683465\"\n }\n ], \n \"VpcId\": \"vpc-66eda61f\", \n \"State\": \"pending\", \n \"NatGatewayId\": \"nat-084ff8ba1edd54bf4\", \n \"SubnetId\": \"subnet-d83a4b82\", \n \"CreateTime\": \"2017-08-13T21:07:34.000Z\"\n }\n}  \n```", "```\n//as same as public route, need to create a route table first\n$ aws ec2 create-route-table --vpc-id vpc-66eda61f\n{\n \"RouteTable\": {\n \"Associations\": [], \n \"RouteTableId\": \"rtb-cc4cafb7\", \n \"VpcId\": \"vpc-66eda61f\", \n \"PropagatingVgws\": [], \n \"Tags\": [], \n \"Routes\": [\n {\n \"GatewayId\": \"local\", \n \"DestinationCidrBlock\": \"10.0.0.0/16\", \n \"State\": \"active\", \n \"Origin\": \"CreateRouteTable\"\n }\n ]\n }\n}\n\n//then assign default gateway as NAT-GW\n$ aws ec2 create-route --route-table-id rtb-cc4cafb7 --nat-gateway-id nat-084ff8ba1edd54bf4 --destination-cidr-block 0.0.0.0/0\n{\n \"Return\": true\n}\n\n//finally update 2^(nd) subnet that use this routing table\n$ aws ec2 associate-route-table --route-table-id rtb-cc4cafb7 --subnet-id subnet-62758c06\n{\n \"AssociationId\": \"rtbassoc-2760ce5d\"\n}\n```", "```\n\n//create one security group for public subnet host on vpc-66eda61f\n$ aws ec2 create-security-group --vpc-id vpc-66eda61f --group-name public --description \"public facing host\"\n{\n \"GroupId\": \"sg-7d429f0d\"\n}\n\n//check your machine's public IP (if not sure, use 0.0.0.0/0 as temporary)\n$ curl ifconfig.co\n107.196.102.199\n\n//public facing machine allows ssh only from your machine\n$ aws ec2 authorize-security-group-ingress --group-id sg-7d429f0d --protocol tcp --port 22 --cidr 107.196.102.199/32\n\n//public facing machine allow HTTP access from any host (0.0.0.0/0)\n$ aws ec2 authorize-security-group-ingress --group-id sg-d173aea1 --protocol tcp --port 80 --cidr 0.0.0.0/0  \n```", "```\n//create security group for private subnet\n$ aws ec2 create-security-group --vpc-id vpc-66eda61f --group-name private --description \"private subnet host\"\n{\n \"GroupId\": \"sg-d173aea1\"\n}\n\n//private subnet allows ssh only from ssh bastion host security group\n//it also allows HTTP (80/TCP) from public subnet security group\n$ aws ec2 authorize-security-group-ingress --group-id sg-d173aea1 --protocol tcp --port 22 --source-group sg-7d429f0d\n\n//private subnet allows HTTP access from public subnet security group too\n$ aws ec2 authorize-security-group-ingress --group-id sg-d173aea1 --protocol tcp --port 80 --source-group sg-7d429f0d\n```", "```\n//create keypair (internal_rsa, internal_rsa.pub)\n$ ssh-keygen \nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/saito/.ssh/id_rsa): /tmp/internal_rsa\nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /tmp/internal_rsa.\nYour public key has been saved in /tmp/internal_rsa.pub.\n\n//register internal_rsa.pub key to AWS\n$ aws ec2 import-key-pair --key-name=internal --public-key-material \"`cat /tmp/internal_rsa.pub`\"\n{\n \"KeyName\": \"internal\", \n   \"KeyFingerprint\":  \n \"18:e7:86:d7:89:15:5d:3b:bc:bd:5f:b4:d5:1c:83:81\"\n} \n\n//launch public facing host, using Amazon Linux on us-east-1 (ami-a4c7edb2)\n$ aws ec2 run-instances --image-id ami-a4c7edb2 --instance-type t2.nano --key-name internal --security-group-ids sg-7d429f0d --subnet-id subnet-d83a4b82\n\n//launch private subnet host\n$ aws ec2 run-instances --image-id ami-a4c7edb2 --instance-type t2.nano --key-name internal --security-group-ids sg-d173aea1 --subnet-id subnet-62758c06  \n```", "```\n//add private keys to ssh-agent\n$ ssh-add -K /tmp/internal_rsa\nIdentity added: /tmp/internal_rsa (/tmp/internal_rsa)\n$ ssh-add -l\n2048 SHA256:AMkdBxkVZxPz0gBTzLPCwEtaDqou4XyiRzTTG4vtqTo /tmp/internal_rsa (RSA)\n\n//ssh to the public subnet host with -A (forward ssh-agent) option\n$ ssh -A ec2-user@54.227.197.56\nThe authenticity of host '54.227.197.56 (54.227.197.56)' can't be established.\nECDSA key fingerprint is SHA256:ocI7Q60RB+k2qbU90H09Or0FhvBEydVI2wXIDzOacaE.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '54.227.197.56' (ECDSA) to the list of known hosts.\n\n           __|  __|_  )\n           _|  (     /   Amazon Linux AMI\n          ___|\\___|___|\n\n    https://aws.amazon.com/amazon-linux-ami/2017.03-release-notes/\n    2 package(s) needed for security, out of 6 available\n    Run \"sudo yum update\" to apply all updates.\n```", "```\n$ ifconfig eth0\neth0      Link encap:Ethernet  HWaddr 0E:8D:38:BE:52:34 \n          inet addr:10.0.1.24  Bcast:10.0.1.255      \n          Mask:255.255.255.0\n```", "```\n$ sudo yum -y -q install nginx\n$ sudo /etc/init.d/nginx start\nStarting nginx:                                            [  OK  ]\n```", "```\n$ exit\nlogout\nConnection to 52.227.197.56 closed.\n\n//from your machine, access to nginx\n$ curl -I 54.227.197.56\nHTTP/1.1 200 OK\nServer: nginx/1.10.3\n...\nAccept-Ranges: bytes  \n```", "```\n[ec2-user@ip-10-0-1-24 ~]$ ssh 10.0.2.98\nThe authenticity of host '10.0.2.98 (10.0.2.98)' can't be established.\nECDSA key fingerprint is 1a:37:c3:c1:e3:8f:24:56:6f:90:8f:4a:ff:5e:79:0b.\nAre you sure you want to continue connecting (yes/no)? yes\n    Warning: Permanently added '10.0.2.98' (ECDSA) to the list of known hosts.\n\n           __|  __|_  )\n           _|  (     /   Amazon Linux AMI\n          ___|\\___|___|\n\nhttps://aws.amazon.com/amazon-linux-ami/2017.03-release-notes/\n2 package(s) needed for security, out of 6 available\nRun \"sudo yum update\" to apply all updates.\n[ec2-user@ip-10-0-2-98 ~]$ \n```", "```\n//create 40GB disk at us-east-1a (as same as EC2 host instance)\n$ aws ec2 create-volume --availability-zone us-east-1a --size 40 --volume-type standard\n{\n    \"AvailabilityZone\": \"us-east-1a\", \n    \"Encrypted\": false, \n    \"VolumeType\": \"standard\", \n    \"VolumeId\": \"vol-005032342495918d6\", \n    \"State\": \"creating\", \n    \"SnapshotId\": \"\", \n    \"CreateTime\": \"2017-08-16T05:41:53.271Z\", \n    \"Size\": 40\n}\n\n//attach to public subnet host as /dev/xvdh\n$ aws ec2 attach-volume --device xvdh --instance-id i-0db344916c90fae61 --volume-id vol-005032342495918d6\n{\n    \"AttachTime\": \"2017-08-16T05:47:07.598Z\", \n    \"InstanceId\": \"i-0db344916c90fae61\", \n    \"VolumeId\": \"vol-005032342495918d6\", \n    \"State\": \"attaching\", \n    \"Device\": \"xvdh\"\n}\n```", "```\n//detach volume\n$ aws ec2 detach-volume --volume-id vol-005032342495918d6\n{\n    \"AttachTime\": \"2017-08-16T06:03:45.000Z\", \n    \"InstanceId\": \"i-0db344916c90fae61\", \n    \"VolumeId\": \"vol-005032342495918d6\", \n    \"State\": \"detaching\", \n    \"Device\": \"xvdh\"\n}\n```", "```\n$ aws route53 list-hosted-zones | grep Id\n\"Id\": \"/hostedzone/Z1CTVYM9SLEAN8\",   \n```", "```\n//create JSON file\n$ cat /tmp/add-record.json \n{\n \"Comment\": \"add public subnet host\",\n  \"Changes\": [\n   {\n     \"Action\": \"UPSERT\",\n     \"ResourceRecordSet\": {\n       \"Name\": \"public.k8s-devops.net\",\n       \"Type\": \"A\",\n       \"TTL\": 300,\n       \"ResourceRecords\": [\n         {\n          \"Value\": \"54.227.197.56\"\n         }\n       ]\n     }\n   }\n  ]\n}\n\n//submit to Route53\n$ aws route53 change-resource-record-sets --hosted-zone-id /hostedzone/Z1CTVYM9SLEAN8 --change-batch file:///tmp/add-record.json \n\n//a few minutes later, check whether A record is created or not\n$ dig public.k8s-devops.net\n\n; <<>> DiG 9.8.3-P1 <<>> public.k8s-devops.net\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 18609\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;public.k8s-devops.net.       IN    A\n\n;; ANSWER SECTION:\npublic.k8s-devops.net.  300   IN    A     54.227.197.56  \n```", "```\n$ curl -I public.k8s-devops.net\nHTTP/1.1 200 OK\nServer: nginx/1.10.3\n...  \n```", "```\n$ aws ec2 create-security-group --vpc-id vpc-66eda61f --group-name elb --description \"elb sg\"\n{\n  \"GroupId\": \"sg-51d77921\"\n} \n$ aws ec2 authorize-security-group-ingress --group-id sg-51d77921 --protocol tcp --port 80 --cidr 0.0.0.0/0\n\n$ aws elb create-load-balancer --load-balancer-name public-elb --listeners Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80 --subnets subnet-d83a4b82 --security-groups sg-51d77921\n{\n   \"DNSName\": \"public-elb-1779693260.us-east- \n    1.elb.amazonaws.com\"\n}\n\n$ aws elb register-instances-with-load-balancer --load-balancer-name public-elb --instances i-0db344916c90fae61\n\n$ curl -I public-elb-1779693260.us-east-1.elb.amazonaws.com\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nContent-Length: 3770\nContent-Type: text/html\n...  \n```", "```\n$ cat change-to-elb.json \n{\n \"Comment\": \"use CNAME to pointing to ELB\",\n  \"Changes\": [\n    {\n      \"Action\": \"DELETE\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"public.k8s-devops.net\",\n        \"Type\": \"A\",\n        \"TTL\": 300,\n        \"ResourceRecords\": [\n          {\n           \"Value\": \"52.86.166.223\"\n          }\n        ]\n      }\n    },\n    {\n      \"Action\": \"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"public.k8s-devops.net\",\n        \"Type\": \"CNAME\",\n        \"TTL\": 300,\n        \"ResourceRecords\": [\n          {\n           \"Value\": \"public-elb-1779693260.us-east-           \n1.elb.amazonaws.com\"\n          }\n        ]\n      }\n }\n ]\n}\n\n$ dig public.k8s-devops.net\n\n; <<>> DiG 9.8.3-P1 <<>> public.k8s-devops.net\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 10278\n;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;public.k8s-devops.net.       IN    A\n\n;; ANSWER SECTION:\npublic.k8s-devops.net.  300   IN    CNAME public-elb-1779693260.us-east-1.elb.amazonaws.com.\npublic-elb-1779693260.us-east-1.elb.amazonaws.com. 60 IN A 52.200.46.81\npublic-elb-1779693260.us-east-1.elb.amazonaws.com. 60 IN A 52.73.172.171\n\n;; Query time: 77 msec\n;; SERVER: 10.0.0.1#53(10.0.0.1)\n;; WHEN: Wed Aug 16 22:21:33 2017\n;; MSG SIZE  rcvd: 134\n\n$ curl -I public.k8s-devops.net\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nContent-Length: 3770\nContent-Type: text/html\n...  \n```", "```\n//create S3 bucket \"k8s-devops\"\n$ aws s3 mb s3://k8s-devops\nmake_bucket: k8s-devops\n\n//copy files to S3 bucket\n$ aws s3 cp add-record.json s3://k8s-devops/\nupload: ./add-record.json to s3://k8s-devops/add-record.json \n$ aws s3 cp change-to-elb.json s3://k8s-devops/\nupload: ./change-to-elb.json to s3://k8s-devops/change-to-elb.json \n\n//check files on S3 bucket\n$ aws s3 ls s3://k8s-devops/\n2017-08-17 20:00:21        319 add-record.json\n2017-08-17 20:00:28        623 change-to-elb.json  \n```", "```\n$ kops create cluster --name my-cluster.k8s-devops.net --state=s3://k8s-devops --zones us-east-1a --cloud aws --network-cidr 10.0.0.0/16 --master-size t2.large --node-size t2.medium --node-count 2 --networking calico --topology private --ssh-public-key /tmp/internal_rsa.pub --bastion --yes\n\nI0818 20:43:15.022735   11372 create_cluster.go:845] Using SSH public key: /tmp/internal_rsa.pub\n...\nI0818 20:45:32.585246   11372 executor.go:91] Tasks: 78 done / 78 total; 0 can run\nI0818 20:45:32.587067   11372 dns.go:152] Pre-creating DNS records\nI0818 20:45:35.266425   11372 update_cluster.go:247] Exporting kubecfg for cluster\nKops has set your kubectl context to my-cluster.k8s-devops.net\n\nCluster is starting.  It should be ready in a few minutes.  \n```", "```\n$ kubectl get nodes\nNAME                          STATUS         AGE       VERSION\nip-10-0-36-157.ec2.internal   Ready,master   8m        v1.7.0\nip-10-0-42-97.ec2.internal    Ready,node     6m        v1.7.0\nip-10-0-42-170.ec2.internal   Ready,node     6m        v1.7.0\n\n```", "```\n$ cat grafana.yml \napiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n name: grafana\nspec:\n replicas: 1\n template:\n metadata:\n labels:\n run: grafana\n spec:\n containers:\n - image: grafana/grafana\n name: grafana\n ports:\n - containerPort: 3000\n---\napiVersion: v1\nkind: Service\nmetadata:\n name: grafana\nspec:\n ports:\n - port: 80\n targetPort: 3000\n type: LoadBalancer\n selector:\n run: grafana\n\n$ kubectl create -f grafana.yml \ndeployment \"grafana\" created\nservice \"grafana\" created\n\n$ kubectl get service\nNAME         CLUSTER-IP       EXTERNAL-IP        PORT(S)        AGE\ngrafana      100.65.232.120   a5d97c8ef8575...   80:32111/TCP   11s\nkubernetes   100.64.0.1       <none>             443/TCP        13m\n\n$ aws elb describe-load-balancers | grep a5d97c8ef8575 | grep DNSName\n \"DNSName\": \"a5d97c8ef857511e7a6100edf846f38a-1490901085.us-east-1.elb.amazonaws.com\",  \n```", "```\n$ kubectl create -f https://raw.githubusercontent.com/kubernetes/kops/master/addons/ingress-nginx/v1.6.0.yaml\nnamespace \"kube-ingress\" created\nserviceaccount \"nginx-ingress-controller\" created\nclusterrole \"nginx-ingress-controller\" created\nrole \"nginx-ingress-controller\" created\nclusterrolebinding \"nginx-ingress-controller\" created\nrolebinding \"nginx-ingress-controller\" created\nservice \"nginx-default-backend\" created\ndeployment \"nginx-default-backend\" created\nconfigmap \"ingress-nginx\" created\nservice \"ingress-nginx\" created\ndeployment \"ingress-nginx\" created\n```", "```\n$ kubectl run nginx --image=nginx --port=80\ndeployment \"nginx\" created\n$ \n$ kubectl expose deployment nginx --target-port=80 --type=NodePort\nservice \"nginx\" exposed\n$ \n$ kubectl run echoserver --image=gcr.io/google_containers/echoserver:1.4 --port=8080\ndeployment \"echoserver\" created\n$ \n$ kubectl expose deployment echoserver --target-port=8080 --type=NodePort\nservice \"echoserver\" exposed\n\n// URL \"/\" point to nginx, \"/echo\" to echoserver\n$ cat nginx-echoserver-ingress.yaml \napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n name: nginx-echoserver-ingress\nspec:\n rules:\n - http:\n paths:\n - path: /\n backend:\n serviceName: nginx\n servicePort: 80\n - path: /echo\n backend:\n serviceName: echoserver\n servicePort: 8080\n\n//check ingress\n$ kubectl get ing -o wide\nNAME                       HOSTS     ADDRESS                                                                 PORTS     AGE\nnginx-echoserver-ingress   *         a1705ab488dfa11e7a89e0eb0952587e-28724883.us-east-1.elb.amazonaws.com   80        1m \n```", "```\n$ kubectl get storageclass\nNAME            TYPE\ndefault         kubernetes.io/aws-ebs \ngp2 (default)   kubernetes.io/aws-ebs \n\n$ cat pvc-aws.yml \napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n name: pvc-aws-1\nspec:\n storageClassName: \"default\"\n accessModes:\n - ReadWriteOnce\n resources:\n requests:\n storage: 10Gi\n\n$ kubectl create -f pvc-aws.yml \npersistentvolumeclaim \"pvc-aws-1\" created\n\n$ kubectl get pv\nNAME                                       CAPACITY   ACCESSMODES   RECLAIMPOLICY   STATUS    CLAIM               STORAGECLASS   REASON    AGE\npvc-94957090-84a8-11e7-9974-0ea8dc53a244   10Gi       RWO           Delete          Bound     default/pvc-aws-1   default                  3s  \n```", "```\n$ aws ec2 describe-volumes --filter Name=tag-value,Values=\"pvc-51cdf520-8576-11e7-a610-0edf846f38a6\"\n{\n \"Volumes\": [\n    {\n      \"AvailabilityZone\": \"us-east-1a\", \n    \"Attachments\": [], \n      \"Tags\": [\n       {\n...\n     ], \n    \"Encrypted\": false, \n    \"VolumeType\": \"gp2\", \n    \"VolumeId\": \"vol-052621c39546f8096\", \n    \"State\": \"available\", \n    \"Iops\": 100, \n    \"SnapshotId\": \"\", \n    \"CreateTime\": \"2017-08-20T07:08:08.773Z\", \n       \"Size\": 10\n       }\n     ]\n   }\n```", "```\n$ kops edit ig nodes --name my-cluster.k8s-devops.net --state=s3://k8s-devops   \n```", "```\napiVersion: kops/v1alpha2\nkind: InstanceGroup\nmetadata:\n creationTimestamp: 2017-08-20T06:43:45Z\n labels:\n kops.k8s.io/cluster: my-cluster.k8s-devops.net\n name: nodes\nspec:\n image: kope.io/k8s-1.6-debian-jessie-amd64-hvm-ebs-2017- \n 05-02\n machineType: t2.medium\n maxSize: 2\n minSize: 2\n role: Node\n subnets:\n - us-east-1a  \n```", "```\n$ kops update cluster --name my-cluster.k8s-devops.net --state=s3://k8s-devops --yes \n\nI0820 00:57:17.900874    2837 executor.go:91] Tasks: 0 done / 94 total; 38 can run\nI0820 00:57:19.064626    2837 executor.go:91] Tasks: 38 done / 94 total; 20 can run\n...\nKops has set your kubectl context to my-cluster.k8s-devops.net\nCluster changes have been applied to the cloud.\n\nChanges may require instances to restart: kops rolling-update cluster  \n```", "```\n$ kops rolling-update cluster --name my-cluster.k8s-devops.net --state=s3://k8s-devops --yes\nNAME              STATUS     NEEDUPDATE  READY MIN   MAX   NODES\nbastions          Ready       0           1     1     1     0\nmaster-us-east-1a Ready       0           1     1     1     1\nnodes             NeedsUpdate 1           0     1     1     1\nI0820 01:00:01.086564    2844 instancegroups.go:350] Stopping instance \"i-07e55394ef3a09064\", node \"ip-10-0-40-170.ec2.internal\", in AWS ASG \"nodes.my-cluster.k8s-devops.net\".  \n```", "```\n$ kubectl get nodes\nNAME                          STATUS         AGE       VERSION\nip-10-0-36-157.ec2.internal   Ready,master   1h        v1.7.0\nip-10-0-58-135.ec2.internal   Ready,node     34s       v1.7.0  \n```"]