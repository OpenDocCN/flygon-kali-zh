["```kt\n    val prefs = ctx.getSharedPreferences(key, mode) \n```", "```kt\n    val value = prefs.getString(\"key\", \"default value\")  \n```", "```kt\n    preferences.edit().putString(\"key\", \"balue\").commit() \n```", "```kt\n    prefs.edit().remove(\"key\").commit() \n```", "```kt\n         package com.journaler.perferences \n\n         import android.content.Context \n         import android.content.SharedPreferences \n\n         abstract class PreferencesProviderAbstract { \n           abstract fun obtain(configuration: PreferencesConfiguration,\n           ctx: Context): SharedPreferences \n         } \n```", "```kt\n         package com.journaler.perferences \n         data class PreferencesConfiguration\n         (val key: String, val mode: Int) \n```", "```kt\n        package com.journaler.perferences \n\n        import android.content.Context \n        import android.content.SharedPreferences \n\n        class PreferencesProvider : PreferencesProviderAbstract() { \n          override fun obtain(configuration: PreferencesConfiguration,\n          ctx: Context): SharedPreferences { \n            return ctx.getSharedPreferences(configuration.key,\n            configuration.mode) \n          } \n        } \n```", "```kt\n     class MainActivity : BaseActivity() { \n       ... \n       private val keyPagePosition = \"keyPagePosition\" \n       ... \n\n       override fun onCreate(savedInstanceState: Bundle?) { \n         super.onCreate(savedInstanceState) \n\n         val provider = PreferencesProvider() \n         val config = PreferencesConfiguration(\"journaler_prefs\",\n         Context.MODE_PRIVATE) \n         val preferences = provider.obtain(config, this) \n\n         pager.adapter = ViewPagerAdapter(supportFragmentManager) \n         pager.addOnPageChangeListener(object :\n         ViewPager.OnPageChangeListener { \n            override fun onPageScrollStateChanged(state: Int) { \n                // Ignore \n         } \n\n         override fun onPageScrolled(position: Int, positionOffset:\n         Float, positionOffsetPixels: Int) { \n                // Ignore \n         } \n\n         override fun onPageSelected(position: Int) { \n           Log.v(tag, \"Page [ $position ]\") \n           preferences.edit().putInt(keyPagePosition, position).apply() \n         } \n       }) \n\n       val pagerPosition = preferences.getInt(keyPagePosition, 0) \n       pager.setCurrentItem(pagerPosition, true) \n       ... \n      } \n      ... \n     } \n```", "```kt\n     V/Main activity: Page [ 1 ] \n     V/Main activity: Page [ 2 ] \n     V/Main activity: Page [ 3 ] \n     After we restarted the application: \n     V/Main activity: Page [ 3 ] \n     V/Main activity: Page [ 2 ] \n     V/Main activity: Page [ 1 ] \n     V/Main activity: Page [ 0 ] \n```"]