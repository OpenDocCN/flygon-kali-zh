["```\n$ docker swarm init\nSwarm initialized: current node `(`7xam...662z`)` is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token `\\`\n     SWMTKN-1-1dmtwu...r17stb-ehp8g...hw738q `172`.31.5.251:2377\n\nTo add a manager to this swarm, run `'docker swarm join-token manager'`\nand follow the instructions. \n```", "```\n$ docker swarm join-token manager\nTo add a manager to this swarm, run the following command:\n\n    docker swarm join --token `\\`\n    SWMTKN-1-1dmtwu...r17stb-2axi5...8p7glz `\\`\n    `172`.31.5.251:2377 \n```", "```\n$ docker swarm join --token SWMTKN-1-1dmtwu...r17stb-2axi5...8p7glz `\\`\n> `172`.31.5.251:2377\n\nThis node joined a swarm as a manager. \n```", "```\n$ docker node ls\nID                HOSTNAME   STATUS    AVAILABILITY    MANAGER STATUS\n7xamk...ge662z    mgr1       Ready     Active          Leader\ni0ue4...zcjm7f *  mgr2       Ready     Active          Reachable \n```", "```\n$ docker swarm join-token worker\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token `\\`\n    SWMTKN-1-1dmtw...17stb-ehp8g...w738q `\\`\n    `172`.31.5.251:2377 \n```", "```\n$ docker swarm join --token SWMTKN-1-1dmtw...17stb-ehp8g...w738q `\\`\n> `172`.31.5.251:2377\n\nThis node joined a swarm as a worker. \n```", "```\n$ docker node ls\nID                 HOSTNAME     STATUS     AVAILABILITY   MANAGER STATUS\n7xamk...ge662z *   mgr1         Ready      Active         Leader\nailrd...ofzv1u     wrk1         Ready      Active\ni0ue4...zcjm7f     mgr2         Ready      Active         Reachable \n```", "```\n$ docker swarm join-token --rotate manager\n\nSuccessfully rotated manager join token.\n\nTo add a manager to this swarm, run the following command:\n\n    docker swarm join --token `\\`\n     SWMTKN-1-1dmtwu...r17stb-1i7txlh6k3hb921z3yjtcjrc7 `\\`\n     `172`.31.5.251:2377 \n```", "```\n$ sudo openssl x509 `\\`\n  -in /var/lib/docker/swarm/certificates/swarm-node.crt `\\`\n  -text\n\n  Certificate:\n      Data:\n          Version: `3` `(`0x2`)`\n          Serial Number:\n              `80`:2c:a7:b1:28...a8:af:89:a1:2a:51:89\n      Signature Algorithm: ecdsa-with-SHA256\n          Issuer: `CN``=`swarm-ca\n          Validity\n              Not Before: Jul `19` `07`:56:00 `2017` GMT\n              Not After : Oct `17` `08`:56:00 `2017` GMT\n          Subject: `O``=`mfbkgjm2tlametbnfqt2zid8x, `OU``=`swarm-manager,\n          `CN``=`7xamk8w3hz9q5kgr7xyge662z\n          Subject Public Key Info:\n<SNIP> \n```", "```\n$ docker system info\n<SNIP>\nSwarm: active\n NodeID: 7xamk8w3hz9q5kgr7xyge662z    `# Relates to the CN field`\n Is Manager: `true`                     `# Relates to the OU field`\n ClusterID: mfbkgjm2tlametbnfqt2zid8x `# Relates to the O field`\n ...\n <SNIP>\n ...\n CA Configuration:\n  Expiry Duration: `3` months           `# Relates to Validity field`\n  Force Rotate: `0`\n Root Rotation In Progress: `false`\n <SNIP> \n```", "```\n$ docker swarm update --cert-expiry 720h \n```", "```\n$ docker swarm ca --help\n\nUsage:  docker swarm ca `[`OPTIONS`]`\n\nManage root CA\n\nOptions:\n      --ca-cert pem-file          Path to the PEM-formatted root CA\n                                  certificate to use `for` the new cluster\n      --ca-key pem-file           Path to the PEM-formatted root CA\n                                  key to use `for` the new cluster\n      --cert-expiry duration      Validity period `for` node certificates\n                                  `(`ns`|`us`|`ms`|`s`|`m`|`h`)` `(`default 2160h0m0s`)`\n  -d, --detach                    Exit immediately instead of waiting `for`\n                                  the root rotation to converge\n      --external-ca external-ca   Specifications of one or more certificate\n                                  signing endpoints\n      --help                      Print usage\n  -q, --quiet                     Suppress progress output\n      --rotate                    Rotate the swarm CA - `if` no certificate\n                                  or key are provided, new ones will be gene`\\`\nrated \n```", "```\n$ `export` `DOCKER_CONTENT_TRUST``=``1` \n```", "`````````````"]