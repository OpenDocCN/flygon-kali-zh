["```js\nvar Westeros;\n(function (Westeros) {\n  (function (Religion) {\n      \u2026\n  })(Westeros.Religion || (Westeros.Religion = {}));\n  var Religion = Westeros.Religion;\n})(Westeros || (Westeros = {}));\n(function (Westeros) {\n  var Tournament = (function () {\n    function Tournament() {\n  }\n  return Tournament;\n})();\nWesteros.Tournament = Tournament;\n\u2026\n})();\nWesteros.Attendee = Attendee;\n})(Westeros || (Westeros = {}));\n```", "```js\nvar Westros;(function(Westros){(function(Food){var SimpleIngredient=(function(){function SimpleIngredient(name,calories,ironContent,vitaminCContent){this.name=name;this.calories=calories;this.ironContent=ironContent;this.vitaminCContent=vitaminCContent}SimpleIngredient.prototype.GetName=function(){return this.name};SimpleIngredient.prototype.GetCalories=function(){return this.calories};SimpleIngredient.prototype.GetIronContent=function(){return this.ironContent};SimpleIngredient.prototype.GetVitaminCContent=function(){return this.vitaminCContent};return SimpleIngredient})();Food.SimpleIngredient=SimpleIngredient;var CompoundIngredient=(function(){function CompoundIngredient(name){this.name=name;this.ingredients=new Array()}CompoundIngredient.prototype.AddIngredient=function(ingredient){this.ingredients.push(ingredient)};CompoundIngredient.prototype.GetName=function(){return this.name};CompoundIngredient.prototype.GetCalories=function(){var total=0;for(var i=0;i<this.ingredients.length;i++){total+=this.ingredients[i].GetCalories()}return total};CompoundIngredient.prototype.GetIronContent=function(){var total=0;for(var i=0;i<this.ingredients.length;i++){total+=this.ingredients[i].GetIronContent()}return total};CompoundIngredient.prototype.GetVitaminCContent=function(){var total=0;for(var i=0;i<this.ingredients.length;i++){total+=this.ingredients[i].GetVitaminCContent()}return total};return CompoundIngredient})();Food.CompoundIngredient=CompoundIngredient})(Westros.Food||(Westros.Food={}));var Food=Westros.Food})(Westros||(Westros={}));\n```", "```js\n$(\":input\").css(\"background-color\", \"blue\");\n```", "```js\n$($(\":input\")[2]).css(\"background-color\", \"blue\");\n```", "```js\n$.fn.yeller = function(){\n  this.each(function(_, item){\n    $(item).val($(item).val().toUpperCase());\n    return this;\n  });\n};\n```", "```js\n$(function(){$(\"input\").yeller();});\n```", "```js\n(function($){\n  $.fn.yeller2 = function(){\n    this.each(function(_, item){\n      $(item).val($(item).val().toUpperCase());\n      return this;\n    });\n  };\n})(jQuery);\n```", "```js\n$(\u00ab.dialog\u00bb).dialog(\u00abopen\u00bb);\n$(\u00ab.dialog\u00bb).dialog(\u00abclose\u00bb);\n```", "```js\n$(\u00ab.dialog\u00bb).dialog().open();\n$(\u00ab.dialog\u00bb).dialog().close();\n```", "```js\ncreates a column chart. You can see that all the attributes are being set through chaining:\n```", "```js\nvar svg = d3.select(containerId).append(\"svg\")\nvar bar = svg.selectAll(\"g\").data(data).enter().append(\"g\");\nbar.append(\"rect\")\n.attr(\"height\", yScale.rangeBand()).attr(\"fill\", function (d, _) {\n  return colorScale.getColor(d);\n})\n.attr(\"stroke\", function (d, _) {\n  return colorScale.getColor(d);\n})\n.attr(\"y\", function (d, i) {\n  return yScale(d.Id) + margins.height;\n})\n```", "```js\nd3.scale.groupedColorScale = function () {\n  var domain, range;\n\n  function scale(x) {\n    var rangeIndex = 0;\n    domain.forEach(function (item, index) {\n      if (item.indexOf(x) > 0)\n        rangeIndex = index;\n    });\n    return range[rangeIndex];\n  }\n\n  scale.domain = function (x) {\n    if (!arguments.length)\n      return domain;\n    domain = x;\n    return scale;\n  };\n\n  scale.range = function (x) {\n    if (!arguments.length)\n      return range;\n    range = x;\n    return scale;\n  };\n  return scale;\n};\n```", "```js\nvar s = d3.scale.groupedColorScale().domain([[1, 2, 3], [4, 5]]).range([\"#111111\", \"#222222\"]);\ns(3); //#111111\ns(4); //#222222\n```", "```js\nself.addEventListener('message', function(e) {\n  var data = e.data;\n  if(data.cmd == 'startCalculation'){\n    self.postMessage({event: 'calculationStarted'});\n    var result = fib(data.parameters.number);\n    self.postMessage({event: 'calculationComplete', result: result});\n  };\n}, false);\n```", "```js\nfunction startThread(){\n  worker =  new Worker(\"worker.js\");\n  worker.addEventListener('message', function(message) {\n    logEvent(message.data.event);\n    if(message.data.event == \"calculationComplete\"){\n      writeResult(message.data.result);\n    }\n    if(message.data.event == \"calculationStarted\"){\n      document.getElementById(\"result\").innerHTML = \"working\";\n    }\n  });\n};\n```", "```js\nworker.postMessage({cmd: 'startCalculation', parameters: { number: 40}});\n```", "```js\n$.ajax({\n  url : 'someurl',\n  type : 'POST',\n  data :  ....,\n  tryCount : 0,\n  retryLimit : 3,\n  success : function(json) {\n    //do something\n  },\n  error : function(xhr, textStatus, errorThrown ) {\n    if (textStatus == 'timeout') {\n      this.tryCount++;\n      if (this.tryCount <= this.retryLimit) {\n //try again\n $.ajax(this);\n return;\n      }\n      return;\n    }\n    if (xhr.status == 500) {\n      //handle error\n    } else {\n      //handle error\n    }\n  }\n});\n```", "```js\nvar xmlhttp = new XMLHttpRequest(); \nxmlhttp.onreadystatechange = function() { \n  if (xmlhttp.readyState === 4){ \n    alert(xmlhttp.readyState); \n  }\n;};\n```", "```js\n$.ajax(\"/some/url\",\n{ success: function(data, status){},\n  error: function(jqXHR, status){}\n});\n```", "```js\n$.ajax(\"/some/url\").then(successFunction, errorFunction);\n```", "```js\n$.ajax(\"/some/url\").then(\n  function(data, status){},\n  function(jqXHR, status){\n    //handle the error here and return a new promise\n  }\n).then(/*continue*/);\n```", "```js\n$.ajax(\"/some/url\").then(function(data, status){})\n.catch(function(jqXHR, status){\n  //handle the error here and return a new promise\n})\n.then(/*continue*/);\n```", "```js\nwhen(function(){return 2+2;})\n.delay(1000)\n.then(function(promise){ console.log(promise());})\n```"]