["```js\n<html lang=\"en-US\">\n```", "```js\n<meta charset=\"UTF-8\">\n```", "```js\n<title>This is the page title</title>\n\n<meta name=\"description\" content=\"This is an example description.\">\n```", "```js\n<base href=\"http://www.mywebsite.com\" />\n...\n...\n<img src=\"/cats.png\" /> // relative to base \n```", "```js\n<link rel=\"stylesheet\" href=\"somestyles.css\" type=\"text/css\" />\n```", "```js\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n```", "```js\n<div id=\"elem\" aria-live=\"assertive\" role=\"alert\" aria-hidden=\"false\"> An error occurred </div>\n```", "```js\n.my-class {\n    background-image: url('some-image.jpg');\n background-position: 0 100px;\n background-repeat: no-repeat;\n    height: 500px;\n    width: 500px;\n    ...\n    ...\n    margin: 20px;\n    padding: 10px;\n background: red;\n}\n```", "```js\n...\n\nMobile specific styles\n\n...  // if screen size is greater than a small mobile phone\n@media only screen and (min-width : 320px)  { // overrides which apply }   // if screen size is greater than a small mobile phone in portrait mode // or if screen size is that of a tablet @media only screen and (min-width : 480px)  { // overrides that apply }  // if screen size is greater than a tablet  @media only screen and (min-width : 768px)  { \n    // overrides that apply }   // large screens @media only screen and (min-width : 992px)  { ... }   // extra large screens and everything above it @media only screen and (min-width : 1200px)  { ... }\n```", "```js\nif(cond1) {\n    var1 = val1;\n} else {\n    var1 = val2\n}\n\nif(cond2) {\n    var2 = val3;\n} else {\n    var2 = val4\n}\n```", "```js\nvar1 = cond1 ? val1 : val2;\nvar2 = cond2 ? val3 : val4;\n```", "```js\nvar1 = ifThisVarIsFalsy || setThisValue;\nvar2 = ifThisVarIsTruthy && setThisValue;\n```", "```js\npromise1()\n    .then((resp) => {\n        promise2(resp)\n            .then((resp2) => {\n                promise3(resp2)\n                    .then((resp3) => {\n                        if(resp3.something) {\n                            // do something\n                        } else {\n                            // do something else\n                        }\n                    });\n            });\n    });\n```", "```js\npromise1()\n    .then((resp) => {\n        return promise2(resp);\n    })\n   .then((resp2) => {\n        return promise3(resp2);\n    })                \n    .then((resp3) => {\n        if(resp3.something) {\n            // do something\n        } else {\n            // do something else\n        }\n    })\n\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <!-- a very large image -->\n  <link rel=\"prefetch\" href=\"http://gfsnt.no/oen/foto/Haegefjell_Jan_2013_Large.jpg\">\n</head>\n\n<body>\n    <script>\n        window.onload = function() {\n            setTimeout(function() {\n                var x = document.createElement(\"IMG\");\n                x.setAttribute(\"src\",\n             \"http://gfsnt.no/oen/foto/Haegefjell_Jan_2013_Large.jpg\");\n                document.body.appendChild(x);\n            }, 5000);\n        }\n    </script>\n</body>\n</html>\n```", "```js\n<link rel=\"preload\" href=\"http://gfsnt.no/oen/foto/Haegefjell_Jan_2013_Large.jpg\" as=\"image\">\n```", "```js\n<!DOCTYPE html>\n<html>\n    <head></head>\n\n    <body>\n        <div>test</div>\n    </body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html>\n    <head>\n\n        <style>\n            .parent {\n                border: 1px solid black;\n                padding: 10px;\n            }\n\n            .child {\n                height: 20px;\n                border: 1px solid red;\n                padding: 5px;\n            }\n        </style>\n\n    </head>\n\n    <body>\n        <div class=\"parent\">\n            <div class=\"child\">\n                child 1\n            </div>\n            <div class=\"child\">\n                child 2\n            </div>\n            <div class=\"child\">\n                child 3\n            </div>\n            <div class=\"child\">\n                child 4\n            </div>\n        </div>\n\n        <button onclick=\"updateHeight();\">update height</button>\n\n        <script>\n            function updateHeight() {\n                var allEl = document.getElementsByTagName('div');\n                var allElemLength = allEl.length;\n\n                for(var i = 0; i < allElemLength; i++) {\n                    allEl[i].style.height = '100px';\n                }\n\n            }\n        </script>\n    </body>\n</html>\n```", "```js\nfunction updateHeight() {\n var allEl = document.getElementsByTagName('div');    \n allEl[1].style.height = '100px';  }\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n\n</head>\n\n<body>\n    <div>\n        Default Layer\n    </div>\n</body>\n</html>\n```", "```js\n.class-name {\n    will-change: transform:\n    // OR\n    transform: translateZ(0); <- does nothing except loading to a new Layer\n}\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        div {\n            width: 100px;\n            height: 100px;\n            margin: 200px;\n            border: 1px solid black;\n            animation: spin 1s infinite;\n            transition: all 0.35s ease;\n        }\n\n        @keyframes spin {\n            from {\n                transform: rotate(0deg);\n            }\n\n            to {\n                transform: rotate(360deg);\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <div></div>\n</body>\n</html>\n```", "```js\n.okay {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n} // 114 characters including spaces\n\n.better {\n    border: 1px solid black;\n    border-top: 0;\n} // 59 characters including spaces\n```", "```js\n.my-class > div > ul.other-class .item:nth-child(3) {\n```", "```js\n.my-class-child {\n```", "```js\n<div class=\"nav\">\n <a href=\"#\" class=\"nav__trigger\">hamburger_icon</a>   <ul class=\"nav__items\"> <li class=\"nav__item\"> <a href=\"#\" class=\"nav__link\">About</a> </li>   <li class=\"nav__item\"> <a href=\"#\" class=\"nav__link\">Blog</a> </li>   <li class=\"nav__item\"> <a href=\"#\" class=\"nav__link\">Contact</a> </li> </ul> </div>\n```", "```js\n.nav {\n    /* styles */ }\n\n.nav__items {\n    /* styles */ }\n\n.nav__item {\n    /* styles */ }\n\n.nav__link {\n    /* styles */ }\n\n.nav__link--active {\n    /* styles */ }\n```", "```js\n.nav__item--last-child--active {\n    /* styles */ }\n```", "```js\n<html>\n<head>\n    <title>CRP Blank</title>\n</head>\n<body>\n    <div>Blank</div>\n</body>\n</html>\n```", "```js\n<html>\n<head>\n    <title>CRP Blank</title>\n    <link rel=\"stylesheet\" href=\"blank.css\">\n</head>\n<body>\n    <div>Blank</div>\n\n    <script async src=\"blank.js\"></script>\n</body>\n</html>\n```", "```js\nif(objOrNumber) {\n    // do something\n}\n```", "```js\nfor(var i = 0; i < arr.length; i++) {\n    // logic\n}\n```", "```js\nvar len = arr.length;\n\nfor(var i = 0; i < len; i++) {\n    // logic\n}\n```", "```js\nvar len = arr.length;\n\nfor(var i = len; i >= 0; i--) {\n    // logic\n}\n```", "```js\nfunction someUserAction() {\n\n    // logic\n\n    if (analyticsEnabled) {\n        trackUserAnalytics();\n    }\n\n}\n\n// in some other class\n\nfunction trackUserAnalytics() {\n\n    // save analytics\n\n}\n```", "```js\nfunction someUserAction() {\n\n    // logic\n\n   trackUserAnalytics();\n}\n\n// in some other class\n\nfunction toggleUserAnalytics() {\n\n    if(enabled) {\n        trackUserAnalytics =  userAnalyticsMethod;\n    } else {\n        trackUserAnalytics = noOp;\n    }\n}\n\nfunction userAnalyticsMethod() {\n\n    // save analytics\n\n}\n\n// empty function\nfunction noOp  {}\n```", "```js\n<link rel=\"preload\" href=\"fonts/my-font.woff2\" as=\"font\">\n```", "```js\n@font-face(\n    ...\n    unicode-range: U+000-5FF; // latin\n    ...\n)\n```", "```js\nvar font = new FontFace(\"myFont\", \"url(/my-fonts/my-font.woff2)\", {\n    unicodeRange: 'U+000-5FF'  });\n\n// initiate a fetch without Render Tree font.load().then(function() {\n   // apply the font \n  document.fonts.add(font);\n\n   document.body.style.fontFamily = \"myFont\";  });\n```", "```js\nvar a = 10; // we assign a number to a memory location referenced by variable a\n```", "```js\na += 3; // we read the memory location referenced by a and write a new value to it\n```", "```js\nfunction test() {\n    var a = 10;\n    a += 3;\n    return a;\n}\n```", "```js\nfunction test() {\n    var a = 10;\n    a += 3;\n    return a;\n}\n```", "```js\nfunction test() {\n    a = 10; // created on window object\n    a += 3;\n    return a;\n}\n```", "```js\nvar cache = {row: document.getElementById('row') };\n\nfunction removeTable() {\n document.body.removeChild(document.getElementById('row'));\n}\n```", "```js\nfunction myGoodFunc() {\n var a = new Array(10000000).join('*'); \n    // something big enough to cause a spike in memory usage   function myGoodClosure() {\n        return a + ' added from closure';\n    }\n\n myGoodClosure();\n}\n\nsetInterval(myGoodFunc, 1000);\n```", "```js\nfunction myComplexFunc() {\n   var a = new Array(1000000).join('*');\n   // something big enough to cause a spike in memory usage    function closure1() {\n      return a + ' added from closure';\n   }\n\n   closure1();\n\n   function closure2() {\n      console.log('closure2 called')\n   }\n\n   setInterval(closure2, 100);\n}\n\nsetInterval(myComplexFunc, 1000);\n```", "```js\nvar something = null;\n\nfunction replaceValue () {\n   var previousValue = something;\n\n   // `unused` method loads the `previousValue` into closure scope\n  function </span>unused() {\n      if (previousValue)\n         console.log(\"hi\");\n   }\n\n   // update something    something = {\n      str: new Array(1000000).join('*'),\n\n      // all closures within replaceValue share the same\n // closure scope hence someMethod would have access // to previousValue which is nothing but its parent // object (`something`)     // since `someMethod` has access to its parent // object, even when it is replaced by a new (identical) // object in the next setInterval iteration, the previous // value does not get garbage collected because the someMethod // on previous value still maintains reference to previousValue // and so on.    someMethod: function () {}\n   };\n}\n\nsetInterval(replaceValue, 1000);\n```"]