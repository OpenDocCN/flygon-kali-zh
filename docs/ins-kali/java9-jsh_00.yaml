- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Java is definitely one of the most popular programming languages of this century.
    However, whenever we had to quickly explore new algorithms or new application
    domains, Java didn't provide us with a simple way of executing code snippets and
    print the results. As a result of this limitation, many developers started working
    with other programming languages that offered a REPL (Read-Evaluate-Print-Loop)
    utility, such as Scala and Python. However, many times, it was necessary to go
    back to Java after the exploratory phase finished and the requirements and the
    algorithms were clear.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Java绝对是本世纪最流行的编程语言之一。然而，每当我们需要快速探索新的算法或新的应用领域时，Java并没有为我们提供一种简单的执行代码片段并打印结果的方式。由于这种限制，许多开发人员开始使用其他提供REPL（读取-求值-打印-循环）实用程序的编程语言，如Scala和Python。然而，许多时候，在探索阶段结束并且需求和算法清晰之后，需要回到Java。
- en: Java 9 introduces JShell, a new utility that allows us to easily run Java 9
    code snippets and print the results. This utility is a REPL, and makes it easy
    for us to work with Java as developers do with Scala and Python. JShell makes
    it easier to learn Java 9 and its most important features.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Java 9引入了JShell，一个新的实用程序，允许我们轻松运行Java 9代码片段并打印结果。这个实用程序是一个REPL，使我们能够像开发者在Scala和Python中那样轻松地使用Java。JShell使学习Java
    9及其最重要的特性变得更容易。
- en: Object-oriented programming, also known as OOP, is a required skill in absolutely
    every modern software developer job. It makes a lot of sense because OOP allows
    you to maximize code reuse and minimize maintenance costs. However, learning object-oriented
    programming is challenging because it includes too many abstract concepts that
    require real-life examples to be easy to understand. In addition, object-oriented
    code that doesn't follow best practices can easily become a maintenance nightmare.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 面向对象编程，也称为OOP，是每个现代软件开发人员工作中必备的技能。这是非常有道理的，因为OOP允许您最大化代码重用并最小化维护成本。然而，学习面向对象编程是具有挑战性的，因为它包含太多抽象概念，需要现实生活的例子才能容易理解。此外，不遵循最佳实践的面向对象代码很容易变成维护的噩梦。
- en: Java is a multi-paradigm programming language, and one of its most important
    paradigms is OOP. If you want to work with Java 9, you need to master OOP in Java.
    In addition, as Java 9 also grabs nice features found in functional programming
    languages, it is convenient to know how to mix OOP code with functional programing
    code.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Java是一种多范式编程语言，其中最重要的范式之一是面向对象编程。如果你想要使用Java 9，你需要掌握Java中的面向对象编程。此外，由于Java 9还吸收了函数式编程语言中的一些优秀特性，因此了解如何将面向对象编程代码与函数式编程代码相结合是很方便的。
- en: This book will allow you to develop high-quality reusable object-oriented code
    in Java 9 with JShell. You will learn the object-oriented programming principles
    and how Java 9 implements them, combined with modern functional programming techniques.
    You will learn how to capture objects from real-world elements and create object-oriented
    code that represents them. You will understand Java's approach towards object-oriented
    code. You will maximize code reuse and reduce maintenance costs. Your code will
    be easy to understand and it will work with representations of real-life elements.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将使您能够使用JShell在Java 9中开发高质量可重用的面向对象代码。您将学习面向对象编程原则以及Java 9如何实现它们，结合现代函数式编程技术。您将学习如何从现实世界元素中捕捉对象并创建代表它们的面向对象代码。您将了解Java对面向对象代码的处理方式。您将最大化代码重用并减少维护成本。您的代码将易于理解，并且将与现实生活元素的表示一起工作。
- en: In addition, you will learn how to organize code using the new modularity feature
    introduced in Java 9, and you will be ready to create complex applications.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你将学习如何使用Java 9引入的新模块化功能组织代码，并准备创建复杂的应用程序。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容包括
- en: '[Chapter 1](part0016_split_000.html#F8901-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 1. JShell – A Read-Evaluate-Print-Loop for Java 9"), *JShell – A Read-Evaluate-Print-Loop
    for Java 9*, starts our journey towards object-oriented programming with Java
    9\. We will learn how to launch and work with a new utility introduced with Java
    9 that will allow us to easily run Java 9 code snippets and print its results:
    JShell. This utility will make it easy for us to learn object-oriented programming.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 《第1章》*JShell – A Read-Evaluate-Print-Loop for Java 9*，开始我们的Java 9面向对象编程之旅。我们将学习如何启动并使用Java
    9中引入的新实用程序：JShell，它将允许我们轻松运行Java 9代码片段并打印其结果。这个实用程序将使我们更容易学习面向对象编程。
- en: '[Chapter 2](part0024_split_000.html#MSDG2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 2. Real-World Objects to UML Diagrams and Java 9 via JShell"), *Real-World
    Objects to UML Diagrams and Java 9 via JShell*, teaches how to recognize objects
    from real-life situations. We will understand that working with objects makes
    it easier to write code that is easier to understand and reuse. We will learn
    how to recognize real-world elements and translate them into the different components
    of the object-oriented paradigm supported in Java. We will start organizing classes
    with UML (Unified Modeling Language) diagrams.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 《第2章》*Real-World Objects to UML Diagrams and Java 9 via JShell*，教我们如何从现实生活中识别对象。我们将了解使用对象编程更容易编写易于理解和重用的代码。我们将学习如何识别现实世界的元素，并将它们转化为Java支持的面向对象范式的不同组件。我们将开始使用UML（统一建模语言）图表组织类。
- en: '[Chapter 3](part0033_split_000.html#VF2I1-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 3. Classes and Instances"), *Classes and Instances*, shows that classes
    represent blueprints or templates to generate the objects, which are also known
    as instances. We will design a few classes that represent blueprints of real-life
    objects. We will learn about an object''s life cycle. We will work with many examples
    to understand how initialization works. We will declare our first class to generate
    a blueprint for objects. We will customize its initialization and test its personalized
    behavior in action with live examples in the JShell. We will understand how the
    garbage collection works.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“类和实例”，展示了类代表生成对象的蓝图或模板，这些对象也被称为实例。我们将设计一些代表现实对象蓝图的类。我们将学习对象的生命周期。我们将使用许多示例来理解初始化的工作原理。我们将声明我们的第一个类来生成对象的蓝图。我们将定制其初始化并在JShell中的实时示例中测试其个性化行为。我们将了解垃圾回收的工作原理。
- en: '[Chapter 4](part0043_split_000.html#190861-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 4. Encapsulation of Data"), *Encapsulation of Data*, teaches you the
    different members of a class in Java 9 and how they are reflected in members of
    the instances generated from a class. We will work with instance fields, class
    fields, setters, getters, instance methods, and class methods. We will generate
    computed properties with setters and getters. We will take advantage of access
    modifiers to hide data. We will use static fields to create values shared by all
    the instances of a class.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“数据的封装”，教会你Java 9中类的不同成员以及它们如何反映在从类生成的实例的成员中。我们将使用实例字段、类字段、设置器、获取器、实例方法和类方法。我们将使用设置器和获取器生成计算属性。我们将利用访问修饰符隐藏数据。我们将使用静态字段创建所有类实例共享的值。
- en: '[Chapter 5](part0052_split_000.html#1HIT81-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 5. Mutable and Immutable Classes"), *Mutable and Immutable Classes*,
    introduces the differences between mutating and non-mutating objects. First, we
    will create a mutable class, and then we will build an immutable version of this
    class. We will learn the advantages of non-mutating objects when writing concurrent
    code.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“可变和不可变类”，介绍了可变对象和不可变对象之间的区别。首先，我们将创建一个可变类，然后我们将构建这个类的不可变版本。我们将学习在编写并发代码时不可变对象的优势。
- en: '[Chapter 6](part0062_split_000.html#1R42S2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 6. Inheritance, Abstraction, Extension, and Specialization"), *Inheritance,
    Abstraction, Extension, and Specialization*, discusses how to take advantage of
    simple inheritance to specialize or extend a base class. We will design many classes
    from top to bottom and we will use chained constructors. We will use UML diagrams
    to design classes that inherit from another class. We will code the classes in
    the interactive JShell. We will override and overload methods. We will run code
    to understand how all the things we code work.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“继承、抽象、扩展和特化”，讨论了如何利用简单继承来专门化或扩展基类。我们将从上到下设计许多类，并使用链式构造函数。我们将使用UML图设计从另一个类继承的类。我们将在交互式JShell中编写类。我们将重写和重载方法。我们将运行代码以了解我们编写的所有东西是如何工作的。
- en: '[Chapter 7](part0069_split_000.html#21PMQ2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 7. Members Inheritance and Polymorphism"), *Members Inheritance and Polymorphism*,
    teaches you how to control whether subclasses can or cannot override members.
    We will take advantage of one of the most exciting object-oriented features: polymorphism.
    We will take advantage of JShell to easily understand typecasting. We will declare
    methods that perform operations with instances of classes.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“成员继承和多态”，教你如何控制子类是否可以覆盖成员。我们将利用最激动人心的面向对象特性之一：多态性。我们将利用JShell轻松理解类型转换。我们将声明执行与类实例操作的方法。
- en: '[Chapter 8](part0076_split_000.html#28FAO2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 8. Contract Programming with Interfaces"), *Contract Programming with
    Interfaces*, introduces how interfaces work in combination with classes in Java
    9\. The only way to have multiple inheritance in Java 9 is through the usage of
    interfaces. We will learn about the declaration and combination of multiple blueprints
    to generate a single instance. We will declare interfaces with different types
    of requirements. Then, we will declare many classes that implement the created
    interfaces. We will combine interfaces with classes to take advantage of multiple
    inheritance in Java 9\. We will combine inheritance for interfaces and inheritance
    for classes.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“接口的契约编程”，介绍了接口在Java 9中与类结合的工作原理。在Java 9中实现多重继承的唯一方法是通过接口的使用。我们将学习声明和组合多个蓝图以生成单个实例。我们将声明具有不同类型要求的接口。然后，我们将声明许多实现创建的接口的类。我们将结合接口和类以利用Java
    9中的多重继承。我们将结合接口的继承和类的继承。
- en: '[Chapter 9](part0083_split_000.html#2F4UM2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 9. Advanced Contract Programming with Interfaces"), *Advanced Contract
    Programming with Interfaces*, dives deeper in to contract programming with interfaces.
    We will work with methods that receive interfaces as arguments. We will understand
    how downcasting works with interfaces and classes and we will treat instances
    of an interface type as a different subclass. JShell will allow us to easily understand
    the complexities of typecasting and downcasting. We will work with more complex
    scenarios in which we will combine class inheritance with interface inheritance.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](part0083_split_000.html#2F4UM2-bc1530b4c4784270ae8a31a7038f8341 "第9章。接口的高级契约编程")，“接口的高级契约编程”，深入探讨了接口的契约编程。我们将使用接口作为参数的方法。我们将理解接口和类的向下转型，并将接口类型的实例视为不同的子类。JShell将帮助我们轻松理解类型转换和向下转型的复杂性。我们将处理更复杂的场景，将类继承与接口继承相结合。'
- en: '[Chapter 10](part0089_split_000.html#2KS221-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 10. Maximization of Code Reuse with Generics"), *Maximization of Code
    Reuse with Generics*, introduces you to working with parametric polymorphism.
    We will learn how to maximize code reuse by writing code capable of working with
    objects of different types, that is, instances of classes that implement specific
    interfaces or whose class hierarchy includes specific superclasses. We will work
    with interfaces and generics. We will create a class that works with a constrained
    generic type. We will use a generic class for multiple types, thanks to generics.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](part0089_split_000.html#2KS221-bc1530b4c4784270ae8a31a7038f8341 "第10章。泛型的代码重用最大化")，“泛型的代码重用最大化”，介绍了如何使用参数多态性。我们将学习如何通过编写能够处理不同类型对象的代码来最大化代码重用，即能够处理实现特定接口的类的实例或者其类层次结构包括特定超类的实例。我们将使用接口和泛型。我们将创建一个可以处理受限泛型类型的类。我们将利用泛型为多种类型创建一个泛型类。'
- en: '[Chapter 11](part0098_split_000.html#2TEN41-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 11. Advanced Generics"), *Advanced Generics*, dives deeper in parametric
    polymorphism. We will declare a class that works with two constrained generic
    types. We will use a generic class with two generic type parameters in JShell.
    We will generalize existing classes by taking advantage of generics in Java 9.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](part0098_split_000.html#2TEN41-bc1530b4c4784270ae8a31a7038f8341 "第11章。高级泛型")，“高级泛型”，深入探讨了参数多态性。我们将声明一个可以使用两个受限泛型类型的类。我们将在JShell中使用具有两个泛型类型参数的泛型类。我们将利用Java
    9中的泛型来泛化现有的类。'
- en: '[Chapter 12](part0104_split_000.html#335QG2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 12. Object-Oriented, Functional Programming, and Lambda Expressions"),
    *Object-Oriented, Functional Programming, and Lambda Expressions*, discusses that
    functions are first-class citizens in Java 9\. We will work with functional interfaces
    within classes. We will use many functional programming features included in Java
    9 and combine them with everything we learned in the previous chapters about object-oriented
    programming. This way, we will be able to use the best of both worlds. We will
    analyze the differences between the imperative and functional programming approach
    for many algorithms. We will take advantage of lambda expressions and combine
    map operations with reduce.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](part0104_split_000.html#335QG2-bc1530b4c4784270ae8a31a7038f8341 "第12章。面向对象，函数式编程和Lambda表达式")，“面向对象，函数式编程和Lambda表达式”，讨论了函数在Java
    9中是一等公民。我们将在类中使用函数接口。我们将使用Java 9中包含的许多函数式编程特性，并将它们与我们在前几章中学到的关于面向对象编程的知识相结合。这样，我们将能够兼顾两者的优势。我们将分析许多算法的命令式和函数式编程方法之间的差异。我们将利用lambda表达式，并将map操作与reduce结合起来。'
- en: '[Chapter 13](part0115_split_000.html#3DLGM2-bc1530b4c4784270ae8a31a7038f8341
    "Chapter 13. Modularity in Java 9"), *Modularity in Java 9*, puts together all
    the pieces of the object-oriented puzzle. We will refactor existing code to take
    advantage of object-oriented programming. We will understand the usage of modular
    source code in Java 9\. We will work with modules to create a new Java 9 solution,
    organize object-oriented code with the new modularity in Java 9, and learn many
    techniques of debuggingobject-oriented code.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](part0115_split_000.html#3DLGM2-bc1530b4c4784270ae8a31a7038f8341 "第13章。Java
    9中的模块化")，“Java 9中的模块化”，将所有面向对象的拼图拼在一起。我们将重构现有代码以利用面向对象编程。我们将理解Java 9中模块化源代码的用法。我们将使用模块创建一个新的Java
    9解决方案，使用Java 9中的新模块化组织面向对象的代码，并学习许多调试面向对象代码的技巧。'
- en: What you need for this book
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你需要为这本书做什么
- en: You will need a computer with a dual-core CPU and at least 4 GB RAM, capable
    of running JDK 9 Windows Vista SP2, Windows 7, Windows 8.x, Windows 10 or higher,
    or macOS 10.9 or higher, and any Linux distribution supported by JDK 9\. Any IoT
    device capable of running JDK 9 will also be useful.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一台双核CPU和至少4GB RAM的计算机，能够运行JDK 9 Windows Vista SP2，Windows 7，Windows 8.x，Windows
    10或更高版本，或者macOS 10.9或更高版本，以及JDK 9支持的任何Linux发行版。任何能够运行JDK 9的IoT设备也将很有用。
- en: Who this book is for
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁准备的
- en: This book can be understood by anyone who is a graduate of computer science
    or someone who has just begun working as a software engineer. Basically, an understanding
    of an object-oriented programming language such as Python, C++, or indeed, an
    earlier Java version, is sufficient. It would be helpful to have participated
    in the full product cycle of a software engineering project.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书可以被任何计算机科学专业的毕业生或刚开始从事软件工程师工作的人理解。基本上，对于像Python、C++或者早期的Java版本这样的面向对象编程语言的理解就足够了。参与过完整的软件工程项目周期将是有帮助的。
- en: Conventions
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，你会发现一些文本样式，用来区分不同类型的信息。以下是一些样式的例子，以及它们的含义。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: Code
    words in text are shown as follows: "JShell allows us to call the `System.out.printf`
    method to easily format output we want to print."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：文本中的代码单词显示如下：“JShell允许我们调用`System.out.printf`方法轻松格式化我们要打印的输出。”
- en: 'A block of code is set as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目以粗体显示：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式编写：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Click on **Accept** and then click on **Exit**."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。例如，屏幕上看到的单词，菜单或对话框中的单词会以这样的形式出现在文本中：“单击**接受**，然后单击**退出**。”'
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会以这样的形式出现在框中。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这样的形式出现。
- en: Reader feedback
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。让我们知道您对本书的看法——您喜欢或不喜欢的地方。读者的反馈对我们开发您真正受益的标题非常重要。
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要向我们发送一般反馈，只需发送电子邮件至`<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`，并在消息主题中提及书名。
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在某个专题上有专业知识，并且有兴趣撰写或为书籍做出贡献，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您是Packt书籍的自豪所有者，我们有一些事情可以帮助您充分利用您的购买。
- en: Downloading the example code
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册以直接将文件发送到您的电子邮件。
- en: 'You can download the code files by following these steps:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册到我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**选项卡上。
- en: Click on **Code Downloads & Errata**.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**代码下载和勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书名。
- en: Select the book for which you're looking to download the code files.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买本书的地方。
- en: Click on **Code Download**.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**代码下载**。
- en: You can also download the code files by clicking on the **Code Files** button
    on the book's webpage at the Packt Publishing website. This page can be accessed
    by entering the book's name in the **Search** box. Please note that you need to
    be logged in to your Packt account.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过单击Packt Publishing网站上书籍页面上的**代码文件**按钮来下载代码文件。可以通过在**搜索**框中输入书名来访问该页面。请注意，您需要登录您的Packt帐户。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用最新版本的解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR / 7-Zip for Windows
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg / iZip / UnRarX for Mac
- en: 7-Zip / PeaZip for Linux
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip / PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Java-9-with-JShell](https://github.com/PacktPublishing/Java-9-with-JShell).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上[https://github.com/PacktPublishing/Java-9-with-JShell](https://github.com/PacktPublishing/Java-9-with-JShell)。我们还有其他代码包来自我们丰富的图书和视频目录，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。去看看吧！
- en: Downloading the color images of this book
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载本书的彩色图片
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/Java9withJShell_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/Java9withJShell_ColorImages.pdf).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为您提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图片。彩色图片将帮助您更好地理解输出中的变化。您可以从[https://www.packtpub.com/sites/default/files/downloads/Java9withJShell_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/Java9withJShell_ColorImages.pdf)下载此文件。
- en: Errata
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽最大努力确保内容的准确性，但错误还是会发生。如果您在我们的书籍中发现错误——可能是文本或代码中的错误——我们将不胜感激，如果您能向我们报告。通过这样做，您可以帮助其他读者避免挫折，并帮助我们改进本书的后续版本。如果您发现任何勘误，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表**链接，并输入您的勘误详情。一旦您的勘误经过验证，您的提交将被接受，并且勘误将被上传到我们的网站或添加到该书籍的勘误列表中的**勘误**部分。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看先前提交的勘误表，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索框中输入书名。所需信息将显示在**勘误表**部分下。
- en: Piracy
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上盗版受版权保护的材料是一个持续存在的问题，涉及各种媒体。在Packt，我们非常重视版权和许可的保护。如果您在互联网上发现我们作品的任何非法副本，请立即向我们提供位置地址或网站名称，以便我们采取补救措施。
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过`<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`与我们联系，并附上涉嫌盗版材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您帮助保护我们的作者和我们为您提供有价值内容的能力。
- en: Questions
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，可以通过`<[questions@packtpub.com](mailto:questions@packtpub.com)>`与我们联系，我们将尽力解决问题。
