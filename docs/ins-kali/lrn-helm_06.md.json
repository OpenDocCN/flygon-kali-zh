["```\nname: LearnHelm\n```", "```\nname:LearnHelm\n```", "```\nresources:\n\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0cpu: 100m\n\u00a0\u00a0\u00a0\u00a0memory: 512Mi\n```", "```\nconfiguration: |\n\u00a0\u00a0server.port=8443\n\u00a0\u00a0logging.file.path=/var/log\n```", "```\nreplicas: 1\n```", "```\nreplicas: '1'\n```", "```\ningress:\n\u00a0\u00a0enable: true\n```", "```\nservicePorts:\n\u00a0\u00a0- 8080\n\u00a0\u00a0- 8443\n```", "```\ndeployment:\n\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0- name: MY_VAR\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: MY_VALUE\n\u00a0\u00a0\u00a0\u00a0- name: SERVICE_NAME\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: MY_SERVICE\n```", "```\n{\n\u00a0\u00a0'deployment': {\n\u00a0\u00a0\u00a0\u00a0'env': [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name': 'MY_VAR',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'value': 'MY_VALUE'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name': 'SERVICE_NAME',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'value': 'MY_SERVICE'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n```", "```\nmy-chart/\n\u00a0\u00a0# chart files and directories\n```", "```\ntemplates/\n\u00a0\u00a0configmap.yaml\n\u00a0\u00a0deployment.yaml\n\u00a0\u00a0service.yaml\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n\u00a0\u00a0name: {{ .Release.Name }}\ndata:\n\u00a0\u00a0configuration.txt: |-\n\u00a0\u00a0\u00a0\u00a0{{ .Values.configurationData }}\n```", "```\n## chapterNumber lists the current chapter number\nchapterNumber: 4\n## chapterName gives a description of the current chapter\nchapterName: Understanding Helm Charts\n```", "```\nenv:\n\u00a0\u00a0- name: CHAPTER_NUMBER\n\u00a0\u00a0\u00a0\u00a0value: {{ .Values.chapterNumber }}\n\u00a0\u00a0- name: CHAPTER_NAME\n\u00a0\u00a0\u00a0\u00a0values: {{ .Values.chapterName }}\n```", "```\nenv:\n\u00a0\u00a0- name: CHAPTER_NUMBER\n\u00a0\u00a0\u00a0\u00a0value: 4\n\u00a0\u00a0- name: CHAPTER_NAME\n\u00a0\u00a0\u00a0\u00a0values: Understanding Helm Charts\n```", "```\n{\n\u00a0\u00a0'$schema': 'https://json-schema.org/draft-07/schema#',\n\u00a0\u00a0'properties': {\n\u00a0\u00a0\u00a0\u00a0'replicas': {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'description': 'number of application instances to deploy',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'minimum': 0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'type' 'integer'\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0. . .\n\u00a0\u00a0'title': 'values',\n\u00a0\u00a0'type': 'object'\n}\n```", "```\nreadinessProbe:\n{{- if .Values.probeType.httpGet }}\n\u00a0\u00a0httpGet:\n\u00a0\u00a0\u00a0\u00a0path: /healthz\n\u00a0\u00a0\u00a0\u00a0port: 8080\n\u00a0\u00a0\u00a0\u00a0scheme: HTTP\n{{- else }}\n\u00a0\u00a0tcpSocket:\n\u00a0\u00a0\u00a0\u00a0port: 8080\n{{- end }}\n\u00a0\u00a0initialDelaySeconds: 30\n\u00a0\u00a0periodSeconds: 10\n```", "```\napplication:\n\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0limits:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 100m\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 512Mi\n```", "```\ncpu: {{ .Values.application.resources.limits.cpu }}\nmemory: {{ .Values.application.resources.limits.memory }}\n```", "```\n{{- with .Values.application.resources.limits }}\ncpu: {{ .cpu }}\nmemory: {{ .memory }}\n{{- end }}\n```", "```\nservicePorts:\n\u00a0\u00a0- name: http\n\u00a0\u00a0\u00a0\u00a0port: 8080\n\u00a0\u00a0- name: https\n\u00a0\u00a0\u00a0\u00a0port: 8443\n\u00a0\u00a0- name: jolokia\n\u00a0\u00a0\u00a0\u00a0port: 8778\n```", "```\nspec:\n\u00a0\u00a0ports:\n{{- range .Values.servicePorts }}\n\u00a0\u00a0- name: {{ - name }}\n\u00a0\u00a0port: {{ .port }}\n{{- end }}\n```", "```\n{{- range .Values.servicePorts }}\n\u00a0\u00a0- name: {{ $.Release.Name }}-{{ .name }}\n\u00a0\u00a0port: {{ .port }}\n{{- end }}\n```", "```\n{{ $myvar := 'Hello World!' }}\n```", "```\n{{ $myvar := .Values.greeting }}\n```", "```\ndata:\n\u00a0\u00a0greeting.txt: |\n\u00a0\u00a0\u00a0\u00a0{{ $myvar }}\n```", "```\ndata:\n\u00a0\u00a0greetings.txt: |\n{{- range $index, $value := .Values.greetings }}\n\u00a0\u00a0\u00a0\u00a0Greeting {{ $index }}: {{ $value }}\n{{- end }}\n```", "```\ndata:\n\u00a0\u00a0greetings.txt: |\n\u00a0\u00a0\u00a0\u00a0Greeting 0: Hello\n\u00a0\u00a0\u00a0\u00a0Greeting 1: Hola\n\u00a0\u00a0\u00a0\u00a0Greeting 2: Hallo\n```", "```\ndata:\n\u00a0\u00a0greetings.txt: |\n{{- range $key, $val := .Values.greetings }}\n\u00a0\u00a0\u00a0\u00a0Greeting in {{ $key }}: {{ $val }}\n{{- end }}\n```", "```\ndata:\n\u00a0\u00a0greetings.txt: |\n\u00a0\u00a0\u00a0\u00a0Greeting in English: Hello\n\u00a0\u00a0\u00a0\u00a0Greeting in Spanish: Hola\n\u00a0\u00a0\u00a0\u00a0Greeting in German: Hallo\n```", "```\n{{- with .Values.application.configuration }}\nMy application is called {{ .Release.Name }}\n{{- end }}\n```", "```\n{{ $appName := .Release.Name }}\n{{- with .Values.application.configuration }}\nMy application is called {{ $appName }}\n{{- end }}\n```", "```\nfunctionName arg1 arg2 . . .\n```", "```\ndata:\n\u00a0\u00a0application-config: |-\n{{ indent 4 .Values.config }}\n```", "```\ncat file.txt | grep helm\n```", "```\ndata:\n\u00a0\u00a0application-config: |-\n{{ .Values.config | indent 4 }}\n```", "```\ndata:\n\u00a0\u00a0application-config: |-\n{{ .Values.config | indent 4 | quote }}\n```", "```\nlabels:\n\u00a0\u00a0'app.kubernetes.io/instance': {{ .Release.Name }}\n\u00a0\u00a0'app.kubernetes.io/managed-by': {{ .Release.Service }}\n```", "```\n{{- define 'mychart.labels' }}\nlabels:\n\u00a0\u00a0'app.kubernetes.io/instance': {{ .Release.Name }}\n\u00a0\u00a0'app.kubernetes.io/managed-by': {{ .Release.Service }}\n{{- end }}\n```", "```\ninclude [TEMPLATE_NAME] [SCOPE]\n```", "```\nmetadata:\n\u00a0\u00a0name: {{ .Release.Name }}\n{{- include 'mychart.labels' . | indent 2 }}\n```", "```\nmetadata:\n\u00a0\u00a0name: template-demonstration\n\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0'app.kubernetes.io/instance': template-demonstration\n\u00a0\u00a0\u00a0\u00a0'app.kubernetes.io/managed-by': Helm\n```", "```\ncrds/\n\u00a0\u00a0my-custom-resource-crd.yaml\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n\u00a0\u00a0name: my-custom-resources.learnhelm.io\nspec:\n\u00a0\u00a0group: learnhelm.io\n\u00a0\u00a0names:\n\u00a0\u00a0\u00a0\u00a0kind: MyCustomResource\n\u00a0\u00a0\u00a0\u00a0listKind: MyCustomResourceList\n\u00a0\u00a0\u00a0\u00a0plural: MyCustomResources\n\u00a0\u00a0\u00a0\u00a0singular: MyCustomResource\n\u00a0\u00a0\u00a0\u00a0scope: Namespaced\n\u00a0\u00a0\u00a0\u00a0version: v1\n```", "```\ntemplates/\n\u00a0\u00a0my-custom-resource.yaml\n```", "```\nError: validation: chart.metadata is required\n```", "```\n$ helm show chart bitnami/wordpress --version 8.1.0\n```", "```\n$ helm dependency update $CHART_PATH\n```", "```\n$ helm dependency build $CHART_PATH\n```", "```\n$ helm dependency list $CHART_NAME\n```", "```\ndependencies:\n\u00a0\u00a0- name: dependency1\n\u00a0\u00a0\u00a0\u00a0repository: https://example.com\n\u00a0\u00a0\u00a0\u00a0version: 1.x.x\n\u00a0\u00a0\u00a0\u00a0condition: dependency1.enabled\n\u00a0\u00a0\u00a0\u00a0tags:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- monitoring\n\u00a0\u00a0- name: dependency2\n\u00a0\u00a0\u00a0\u00a0repository: https://example.com\n\u00a0\u00a0\u00a0\u00a0version: 2.x.x\n\u00a0\u00a0\u00a0\u00a0condition: dependency2.enabled\n\u00a0\u00a0\u00a0\u00a0tags:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- monitoring\n```", "```\ncondition: dependency1.enabled, global.dependency1.enabled\n```", "```\ntags:\n\u00a0\u00a0monitoring: true\n```", "```\nreplicas: 1\nservicePorts:\n\u00a0\u00a0- 8080\n\u00a0\u00a0- 8443\n```", "```\nmy-dep:\n\u00a0\u00a0replicas: 3\n\u00a0\u00a0servicePorts:\n\u00a0\u00a0\u00a0\u00a0- 8080\n\u00a0\u00a0\u00a0\u00a0- 8443\n\u00a0\u00a0\u00a0\u00a0- 8778\n```", "```\nexports:\n\u00a0\u00a0image:\n\u00a0\u00a0\u00a0\u00a0registry: 'my-registry.io'\n\u00a0\u00a0\u00a0\u00a0name: learnhelm/my-image\n\u00a0\u00a0\u00a0\u00a0tag: latest\n```", "```\ndependencies:\n\u00a0\u00a0- name: mariadb\n\u00a0\u00a0\u00a0\u00a0repository: https://charts.bitnami.com\n\u00a0\u00a0\u00a0\u00a0version: 7.x.x\n\u00a0\u00a0\u00a0\u00a0import-values:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- image\n```", "```\nregistry: 'my-registry.io'\nname: learnhelm/my-image\ntag: latest\n```", "```\ndependencies:\n\u00a0\u00a0- name: mariadb\n\u00a0\u00a0\u00a0\u00a0repository: https://charts.bitnami.com\n\u00a0\u00a0\u00a0\u00a0version: 7.x.x\n\u00a0\u00a0\u00a0\u00a0import-values:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- child: image\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent: image\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n\u00a0\u00a0name: helm-auditing\n\u00a0\u00a0annotations:\n\u00a0\u00a0\u00a0\u00a0'helm.sh/hook': pre-install,post-install\nspec:\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: helm-auditing\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0restartPolicy: Never\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: helm-auditing\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [\"/bin/sh\", \"-c\", \"echo Hook Executed at $(date)\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: alpine\n```", "```\nannotations:\n\u00a0\u00a0'helm.sh/hook': pre-install,post-install\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n\u00a0\u00a0name: ttl-job\n\u00a0\u00a0annotations:\n\u00a0\u00a0\u00a0\u00a0'helm.sh/hook': post-install\nspec:\n\u00a0\u00a0ttlSecondsAfterFinished: 60\n```", "```\n'helm.sh/resource-policy': keep\n```", "```\n## serviceType can be set to NodePort or LoadBalancer\nserviceType: NodePort\n```", "```\nFollow these instructions to access your application.\n{{- if eq .Values.serviceType 'NodePort' }}\nexport NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath='{.spec.ports[0].nodePort}' services {{.Release.Name }})\nexport NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath='{.items[0].status.addresses[0].address}')\necho \"URL: http://$NODE_IP:$NODE_PORT\"\n{{- else }}\nexport SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Name }} wordpress --template '{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}')\necho \"URL: http://$SERVICE_IP\"\n{{- end }}\n```", "```\n$ helm package [CHART_NAME] [...] [flags]\n```", "```\n$CHART_NAME-$CHART_VERSION.tgz\n```", "```\n# Ignore git directories and files\n.git/\n.gitignore\n```"]