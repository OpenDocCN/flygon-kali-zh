["```\n**$ curl -L \nhttps://github.com/docker/machine/releases/download/v0.8.1/docker-\nmachine-uname -s-uname -m > /usr/local/bin/docker-machine**\n**$ chmod +x /usr/local/bin/docker-machine`**\n\n```", "```\n**$ docker-machine --version**\n**docker-machine version 0.8.1, build 41b3b25**\n\n```", "```\n**$ docker-machine ls**\n\n```", "```\n**$ docker-machine create --driver virtualbox node0**\n\n```", "```\n**$ docker-machine env node0**\n\n```", "```\n**$ docker-machine active**\n\n```", "```\n**$ docker-machine ssh node0 ps aux | grep docker**\n**1320 root  /usr/local/bin/docker daemon -D -g /var/lib/docker -H \n    unix:// -H tcp://0.0.0.0:2376 --label provider=virtualbox --\n    tlsverify --tlscacert=/var/lib/boot2docker/ca.pem -- \n    tlscert=/var/lib/boot2docker/server.pem -- \n    tlskey=/var/lib/boot2docker/server-key.pem -s aufs**\n\n```", "```\n**$ docker-machine create --driver virtualbox node1**\n**$ docker-machine create --driver virtualbox node2**\n**$ docker-machine create --driver virtualbox node3**\n\n```", "```\n**$ docker-machine ssh node0**\n\n```", "```\n**$ sudo su -**\n\n```", "```\n**# cp /var/lib/boot2docker/profile /var/lib/boot2docker/profile-bak**\n**# vi /var/lib/boot2docker/profile**\n\n```", "```\n**$ docker-machine restart node0**\n\n```", "```\n**$ docker-machine ssh node0 ps aux | grep docker**\n **1127 root  /usr/local/bin/docker daemon -D -g /var/lib/docker -H \n     unix:// -H tcp://0.0.0.0:2375 --label provider=virtualbox -s aufs**\n\n```", "```\n**$ unset DOCKER_TLS_VERIFY**\n**$ export DOCKER_HOST=\"tcp://192.168.99.103:2375\"** \n\n```", "```\n**$ docker pull swarm**\n\n```", "```\n**nodes://192.168.99.101:2375,192.168.99.102:2375,192.168.99.103:2375,192.168.99.107:2375**\n\n```", "```\n**$ docker run swarm --help**\n\n```", "```\n**$ docker run \\**\n**-d \\**\n**-p 3376:2375 \\**\n**swarm manage \\** \n **nodes://192.168.99.101:2375,192.168.99.102:2375,\n    192.168.99.103:2375,192.168.99.107:2375**\n\n```", "```\n**$ docker-machine env node0**\n\n```", "```\n**$ export | grep DOCKER_**\n\n```", "```\n**Strategy: spread**\n**Filters: health, port, containerslots, dependency, affinity, \n    constraint**\n\n```", "```\n**$ docker run -d -p 80:80 nginx**\n**2c049db55f9b093d19d575704c28ff57c4a7a1fb1937bd1c20a40cb538d7b75c**\n\n```", "```\n**$ docker run -d -p 80:80 nginx**\n**577b06d592196c34ebff76072642135266f773010402ad3c1c724a0908a6997f**\n**$ docker run -d -p 80:80 nginx**\n**9fabe94b05f59d01dd1b6b417f48155fc2aab66d278a722855d3facc5fd7f831**\n**$ docker run -d -p 80:80 nginx**\n**38b44d8df70f4375eb6b76a37096f207986f325cc7a4577109ed59a771e6a66d**\n\n```", "```\n**$ docker run -d -p 80:80 nginx**\n**docker: Error response from daemon: Unable to find a node that \n    satisfies the following conditions**\n**[port 80 (Bridge mode)].**\n**See 'docker run --help'.**\n\n```", "```\n**$ cat .belt.yaml**\n**---**\n**digitalocean:**\n **region: sgp1**\n **image: 18153887**\n **ssh_user: root**\n **ssh_key_fingerprint: 816630**\n\n```", "```\n**$ export DIGITALOCEAN_ACCESS_TOKEN=1b207 .. snip .. b6581c**\n\n```", "```\n**$ belt create 512mb node[1:4]**\n**ID              Name    Public IPv4     Memory  VCPUs   Disk**\n**18511682        node1                   512     1       20** \n**18511683        node4                   512     1       20** \n**18511684        node3                   512     1       20** \n**18511681        node2                   512     1       20** \n\n```", "```\n**$ belt ls**\n**ID              Name    Public IPv4       Status  Tags**\n**18511681        node2   128.199.105.119   active**\n**18511682        node1   188.166.183.86    active**\n**18511683        node4   188.166.183.103   active**\n**18511684        node3   188.166.183.157   active**\n\n```", "```\n**$ belt active node1**\n**node1**\n**$ belt docker version**\n**Client:**\n **Version:      1.12.0-rc2**\n **API version:  1.24**\n **Go version:   go1.6.2**\n **Git commit:   906eacd**\n **Built:        Fri Jun 17 21:02:41 2016**\n **OS/Arch:      linux/amd64**\n **Experimental: true**\n**Server:**\n **Version:      1.12.0-rc2**\n **API version:  1.24**\n **Go version:   go1.6.2**\n **Git commit:   906eacd**\n **Built:        Fri Jun 17 21:02:41 2016**\n **OS/Arch:      linux/amd64**\n **Experimental: true**\n\n```", "```\n**$ belt docker swarm init**\n**Swarm initialized: current node (c0llmsc5t1tsbtcblrx6ji1ty) is now \n    a manager.**\n\n```", "```\n**$ belt swarm join node1 node[2:4]**\n**node3: This node joined a Swarm as a worker.**\n**node2: This node joined a Swarm as a worker.**\n**node4: This node joined a Swarm as a worker.**\n\n```", "```\n**$ belt docker node ls**\n**ID          NAME   MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS**\n**4m5479vud9qc6qs7wuy3krr4u    node2  Accepted    Ready   Active**\n**4mkw7ccwep8pez1jfeok6su2o    node4  Accepted    Ready   Active**\n**a395rnht2p754w1beh74bf7fl    node3  Accepted    Ready   Active**\n**c0llmsc5t1tsbtcblrx6ji1ty *  node1  Accepted    Ready   Active        Leader**\n\n```", "```\n**$ belt docker service create --name nginx --replicas 2 -p 80:80 \n    nginx**\n**d5qmntf1tvvztw9r9bhx1hokd**\n\n```", "```\n**$ belt docker service ls**\n**ID            NAME   REPLICAS  IMAGE  COMMAND**\n**d5qmntf1tvvz  nginx  2/2       nginx**\n\n```", "```\n**$ belt docker service scale nginx=4**\n**nginx scaled to 4**\n**$ belt docker service ls**\n**ID            NAME   REPLICAS  IMAGE  COMMAND**\n**d5qmntf1tvvz  nginx  4/4       nginx**\n\n```", "```\n**$ belt ip node2**\n**128.199.105.119**\n\n```"]