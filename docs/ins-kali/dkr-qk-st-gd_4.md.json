["```\n# Docker volume managment command\ndocker volume\n```", "```\n# Docker volume management subcommands\ndocker volume create # Create a volume\ndocker volume inspect # Display information on one or more volumes\ndocker volume ls # List volumes\ndocker volume rm # Remove one or more volumes\ndocker volume prune          # Remove all unused local volumes\n```", "```\n# Syntax for the volume create command\nUsage:  docker volume create [OPTIONS] [VOLUME]\n```", "```\n# The options available to the volume create command:\n-d, --driver string         # Specify volume driver name (default \"local\")\n--label list                # Set metadata for a volume\n-o, --opt map               # Set driver specific options (default map[])\n```", "```\n# Using the volume create command with no optional parameters\ndocker volume create\n```", "```\n# Create a volume with a fancy name\ndocker volume create my-vol-02\n```", "```\n# The Magic Screen command\nscreen ~/Library/Containers/com.docker.docker/Data\n/com.docker.driver.amd64-linux/tty\n# or if you are using Mac OS High Sierra\nscreen ~/Library/Containers/com.docker.docker/Data/vms/0/tty\n```", "```\n# Start by creating a new volume\ndocker volume create my-osx-volume\n# Now find the Mountpoint\ndocker volume inspect my-osx-volume -f \"{{json .Mountpoint}}\"\n# Try to view the contents of the Mountpoint's folder\nsudo ls -l /var/lib/docker/volumes/my-osx-volume\n# \"No such file or directory\" because the directory does not exist on the OS X host\n```", "```\n# Now issue the Magic Screen command and hit <enter> to get a prompt\nscreen ~/Library/Containers/com.docker.docker/Data/vms/0/tty\n# You are now root in the VM, and can issue the following command\nls -l /var/lib/docker/volumes/my-osx**-volume** # The directory exists and you will see the actual Mountpoint sub folder \"_data\"\n# Now hit control-a followed by lower case k to kill the screen session\n<CTRL-a>k \n```", "```\n# mount a pre-created volume with --mount parameter\ndocker container run --rm -d \\\n--mount source=my-vol-02,target=/myvol \\\n--name vol-demo2 \\\nvolume-demo2:1.0 tail -f /dev/null\n```", "```\n# VOLUME instruction Dockerfile for Docker Quick Start\nFROM alpine\nRUN mkdir /myvol\nRUN echo \"Data from image\" > /myvol/both-places.txt\nCMD [\"sh\"]\n```", "```\n# Map a single file from the host to a container\necho \"important data\" > /tmp/data-file.txt\ndocker container run --rm -d \\\n -v /tmp/data-file.txt:/myvol/data-file.txt \\\n --name vol-demo \\\n volume-demo2:1.0 tail -f /dev/null\n# Prove it\ndocker exec vol-demo cat /myvol/data-file.txt\n```", "```\n# Using --mount with source and target\ndocker container run --rm -d \\\n --mount source=my-volume,target=/myvol,readonly \\\n --name vol-demo1 \\\n volume-demo:latest tail -f /dev/null\n # Using --mount with source and destination\n**docker container run --rm -d \\**\n --mount source=my-volume,destination=/myvol,readonly \\\n --name vol-demo2 \\\n volume-demo:latest tail -f /dev/null\n # Using -v \n**docker container run --rm -d \\**\n -v my-volume:/myvol:ro \\\n --name vol-demo3 \\\n volume-demo:latest tail -f /dev/null\n```", "```\n# Check which container have mounted a volume by name\ndocker ps -a --filter volume=in-use-volume\n```", "```\n# Remove volumes command syntax\nUsage: docker volume rm [OPTIONS] VOLUME [VOLUME...]\n# Prune volumes command syntax\nUsage: docker volume prune [OPTIONS]\n```", "```\n# Using a filter on the volume ls command\ndocker volume ls --filter dangling=true\n```", "```\n# Step 1\ndocker container run \\\n --rm -d \\\n -v data-vol-01:/data/vol1 -v data-vol-02:/data/vol2 \\\n --name data-container \\\n vol-demo2:1.0 tail -f /dev/null\n# Step 2\ndocker container run \\\n --rm -d \\\n --volumes-from data-container \\\n --name app-container \\\n vol-demo2:1.0 tail -f /dev/null\n# Prove it\ndocker container exec app-container ls -l /data\n# Prove it more\ndocker container inspect -f '{{ range .Mounts }}{{ .Name }} {{ end }}' app-container\n```"]