["```kt\n<alpha\n   android:fromAlpha = \"0.0\"\n   android:toAlpha = \"1.0\" />\n```", "```kt\n<translate     \nandroid:fromXDelta = \"-100%\"\nandroid:toXDelta = \"0%\"/>\n```", "```kt\n<scale\nandroid:fromXScale = \"1.0\"\nandroid:fromYScale = \"0.0\"/>\n```", "```kt\nandroid:duration = \"666\"\nandroid:startOffset = \"333\"\n```", "```kt\n<rotate android:fromDegrees = \"360\"\n        android:toDegrees = \"0\"\n/>\n```", "```kt\nandroid:repeatMode = \"reverse\"\nandroid:repeatCount = \"10\"\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set \n     ...All our animations go here\n</set>\n```", "```kt\n// Declare an Animation object\nvar animFadeOut: Animation? = null\n\n// Initialize it \nanimFadeIn = AnimationUtils.loadAnimation(\n                this, R.anim.fade_in)\n\n// Start the animation on the ImageView\n// with an id property set to imageView\nimageView.startAnimation(animFadeIn)\n```", "```kt\noverride fun onAnimationEnd(animation: Animation) {   \n   // Take some action here\n\n}\n\noverride fun onAnimationStart(animation: Animation) {\n\n   // Take some action here\n\n}\n\noverride fun onAnimationRepeat(animation: Animation){\n\n   // Take some action here\n\n}\n```", "```kt\nandroid:interpolator=\"@android:anim/accelerate_interpolator\"\nandroid:interpolator=\"@android:anim/cycle_interpolator\"/>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set \n   android:fillAfter=\"true\" >\n\n   <alpha\n   android:fromAlpha = \"0.0\"\n   android:interpolator = \n              \"@android:anim/accelerate_interpolator\"\n\n   android:toAlpha=\"1.0\" />\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set \n   android:fillAfter = \"true\" >\n\n   <alpha  \n         android:fromAlpha = \"1.0\"\n         android:interpolator = \n              \"@android:anim/accelerate_interpolator\"\n\n   android:toAlpha = \"0.0\" />\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set \n    android:fillAfter = \"true\" >\n\n    <alpha\n          android:fromAlpha=\"0.0\"\n          android:interpolator = \n          \"@android:anim/accelerate_interpolator\"\n\n          android:toAlpha = \"1.0\" />\n\n    <alpha\n       android:fromAlpha = \"1.0\"\n          android:interpolator = \n         \"@android:anim/accelerate_interpolator\"\n\n         android:toAlpha = \"0.0\" />\n</set>\n```", "```kt\n<set \n    android:fillAfter = \"true\" >\n\n    <scale\n        android:fromXScale = \"1\"\n        android:fromYScale = \"1\"\n        android:pivotX = \"50%\"\n        android:pivotY = \"50%\"\n        android:toXScale = \"6\"\n        android:toYScale = \"6\" >\n    </scale>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <scale\n        android:fromXScale = \"6\"\n        android:fromYScale = \"6\"\n        android:pivotX = \"50%\"\n        android:pivotY = \"50%\"\n        android:toXScale = \"1\"\n        android:toYScale = \"1\" >\n    </scale>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <translate     \n\n        android:fromXDelta = \"-500%\"\n        android:toXDelta = \"0%\"/>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <translate \n        android:fillAfter = \"false\"\n        android:fromXDelta = \"500%\"\n        android:toXDelta = \"0%\"/>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <translate \n        android:fillAfter = \"false\"\n        android:fromYDelta = \"-100%\"\n        android:toYDelta = \"0%\"/>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <alpha android:fromAlpha = \"0.0\"\n        android:toAlpha = \"1.0\"\n        android:interpolator = \n           \"@android:anim/accelerate_interpolator\"\n\n        android:repeatMode = \"reverse\"\n        android:repeatCount = \"10\"/>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set \n    android:fillAfter = \"true\"\n    android:interpolator = \n         \"@android:anim/bounce_interpolator\">\n\n    <scale\n        android:fromXScale = \"1.0\"\n        android:fromYScale = \"0.0\"\n        android:toXScale = \"1.0\"\n        android:toYScale = \"1.0\" />\n\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <rotate android:fromDegrees = \"360\"\n        android:toDegrees = \"0\"\n        android:pivotX = \"50%\"\n        android:pivotY = \"50%\"\n        android:interpolator = \n           \"@android:anim/cycle_interpolator\"/>\n</set>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <rotate android:fromDegrees = \"0\"\n        android:toDegrees = \"360\"\n        android:pivotX = \"50%\"\n        android:pivotY = \"50%\"\n        android:interpolator =\n             \"@android:anim/cycle_interpolator\"/>\n\n</set>\n```", "```kt\nvar seekSpeedProgress: Int = 0\n\nprivate lateinit var animFadeIn: Animation\nprivate lateinit var animFadeOut: Animation\nprivate lateinit var animFadeInOut: Animation\n\nprivate lateinit var animZoomIn: Animation\nprivate lateinit var animZoomOut: Animation\n\nprivate lateinit var animLeftRight: Animation\nprivate lateinit var animRightLeft: Animation\nprivate lateinit var animTopBottom: Animation\n\nprivate lateinit var animBounce: Animation\nprivate lateinit var animFlash: Animation \n\nprivate lateinit var animRotateLeft: Animation\nprivate lateinit var animRotateRight: Animation\n```", "```kt\nimport android.view.animation.Animation;\n```", "```kt\noverride fun onCreate(savedInstanceState: Bundle?) {\n   super.onCreate(savedInstanceState)\n   setContentView(R.layout.activity_main)\n\n loadAnimations()\n}\n```", "```kt\nprivate fun loadAnimations() {\n\n   animFadeIn = AnimationUtils.loadAnimation(\n                this, R.anim.fade_in)\n   animFadeIn.setAnimationListener(this)\n   animFadeOut = AnimationUtils.loadAnimation(\n                this, R.anim.fade_out)\n   animFadeInOut = AnimationUtils.loadAnimation(\n                this, R.anim.fade_in_out)\n\n   animZoomIn = AnimationUtils.loadAnimation(\n                this, R.anim.zoom_in)\n   animZoomOut = AnimationUtils.loadAnimation(\n                this, R.anim.zoom_out)\n\n   animLeftRight = AnimationUtils.loadAnimation(\n                 this, R.anim.left_right)\n   animRightLeft = AnimationUtils.loadAnimation(\n                 this, R.anim.right_left)\n   animTopBottom = AnimationUtils.loadAnimation(\n                 this, R.anim.top_bot)\n\n   animBounce = AnimationUtils.loadAnimation(\n                 this, R.anim.bounce)\n   animFlash = AnimationUtils.loadAnimation(\n                 this, R.anim.flash)\n\n   animRotateLeft = AnimationUtils.loadAnimation(\n                 this, R.anim.rotate_left)\n   animRotateRight = AnimationUtils.loadAnimation(\n                 this, R.anim.rotate_right)\n}\n```", "```kt\nimport android.view.animation.AnimationUtils\n```", "```kt\nbtnFadeIn.setOnClickListener(this)\nbtnFadeOut.setOnClickListener(this)\nbtnFadeInOut.setOnClickListener(this)\nbtnZoomIn.setOnClickListener(this)\nbtnZoomOut.setOnClickListener(this)\nbtnLeftRight.setOnClickListener(this)\nbtnRightLeft.setOnClickListener(this)\nbtnTopBottom.setOnClickListener(this)\nbtnBounce.setOnClickListener(this)\nbtnFlash.setOnClickListener(this)\nbtnRotateLeft.setOnClickListener(this)\nbtnRotateRight.setOnClickListener(this)\n```", "```kt\nseekBarSpeed.setOnSeekBarChangeListener(\n         object : SeekBar.OnSeekBarChangeListener {\n\n   override fun onProgressChanged(\n                seekBar: SeekBar, value: Int, \n                fromUser: Boolean) {\n\n         seekSpeedProgress = value\n         textSeekerSpeed.text =\n               \"$seekSpeedProgress of $seekBarSpeed.max\"\n  }\n\n  override fun onStartTrackingTouch(seekBar: SeekBar) {}\n\n  override fun onStopTrackingTouch(seekBar: SeekBar) {}\n})\n```", "```kt\nclass MainActivity : AppCompatActivity(),\n        View.OnClickListener,\n Animation.AnimationListener {\n```", "```kt\noverride fun onAnimationEnd(animation: Animation) {\n   textStatus.text = \"STOPPED\"\n}\n\noverride fun onAnimationRepeat(animation: Animation) {\n}\n\noverride fun onAnimationStart(animation: Animation) {\n   textStatus.text = \"RUNNING\"\n}\n```", "```kt\nimport android.view.View;\n\n```", "```kt\noverride fun onClick(v: View) {\nwhen (v.id) {\n  R.id.btnFadeIn -> {\n        animFadeIn.duration = seekSpeedProgress.toLong()\n        animFadeIn.setAnimationListener(this)\n        imageView.startAnimation(animFadeIn)\n  }\n\n  R.id.btnFadeOut -> {\n        animFadeOut.duration = seekSpeedProgress.toLong()\n        animFadeOut.setAnimationListener(this)\n        imageView.startAnimation(animFadeOut)\n  }\n\n  R.id.btnFadeInOut -> {\n\n        animFadeInOut.duration = seekSpeedProgress.toLong()\n        animFadeInOut.setAnimationListener(this)\n        imageView.startAnimation(animFadeInOut)\n  }\n\n  R.id.btnZoomIn -> {\n        animZoomIn.duration = seekSpeedProgress.toLong()\n        animZoomIn.setAnimationListener(this)\n        imageView.startAnimation(animZoomIn)\n  }\n\n  R.id.btnZoomOut -> {\n        animZoomOut.duration = seekSpeedProgress.toLong()\n        animZoomOut.setAnimationListener(this)\n        imageView.startAnimation(animZoomOut)\n  }\n\n  R.id.btnLeftRight -> {\n        animLeftRight.duration = seekSpeedProgress.toLong()\n        animLeftRight.setAnimationListener(this)\n        imageView.startAnimation(animLeftRight)\n  }\n\n  R.id.btnRightLeft -> {\n        animRightLeft.duration = seekSpeedProgress.toLong()\n        animRightLeft.setAnimationListener(this)\n        imageView.startAnimation(animRightLeft)\n  }\n\n  R.id.btnTopBottom -> {\n        animTopBottom.duration = seekSpeedProgress.toLong()\n        animTopBottom.setAnimationListener(this)\n        imageView.startAnimation(animTopBottom)\n  }\n\n  R.id.btnBounce -> {\n        /*\n        Divide seekSpeedProgress by 10 because with\n        the seekbar having a max value of 5000 it\n        will make the animations range between\n        almost instant and half a second\n        5000 / 10 = 500 milliseconds\n        */\n        animBounce.duration = \n              (seekSpeedProgress / 10).toLong()\n        animBounce.setAnimationListener(this)\n        imageView.startAnimation(animBounce)\n  }\n\n  R.id.btnFlash -> {\n        animFlash.duration = (seekSpeedProgress / 10).toLong()\n        animFlash.setAnimationListener(this)\n        imageView.startAnimation(animFlash)\n  }\n\n  R.id.btnRotateLeft -> {\n        animRotateLeft.duration = seekSpeedProgress.toLong()\n        animRotateLeft.setAnimationListener(this)\n        imageView.startAnimation(animRotateLeft)\n  }\n\n  R.id.btnRotateRight -> {\n        animRotateRight.duration = seekSpeedProgress.toLong()\n        animRotateRight.setAnimationListener(this)\n        imageView.startAnimation(animRotateRight)\n  }\n}\n\n}\n```"]