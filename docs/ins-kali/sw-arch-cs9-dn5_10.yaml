- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Working with Azure Functions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure Functions
- en: As we mentioned in *Chapter 4*, *Deciding the Best Cloud-Based Solution*, the
    serverless architecture is one of the newest ways to provide flexible software
    solutions. To do so, Microsoft Azure provides Azure Functions, an event-driven,
    serverless, and scalable technology that accelerates your project development.
    The main goal of this chapter is to get you familiar with Azure Functions and
    the best practices you can implement while using it. It is worth mentioning that
    the use of Azure Functions is a great alternative for having a serverless implementation
    that can accelerate your development. With them, you can deploy APIs faster, enable
    services triggered by timers, and even trigger processes by receiving events from
    storage.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在*第4章*中提到的，无服务器架构是提供灵活软件解决方案的最新方式之一。为此，Microsoft Azure提供了Azure Functions，这是一种事件驱动、无服务器且可扩展的技术，可以加速您的项目开发。本章的主要目标是让您熟悉Azure
    Functions以及在使用它时可以实施的最佳实践。值得一提的是，使用Azure Functions是一个很好的选择，可以加速您的开发，为您提供无服务器实现的替代方案。借助它们，您可以更快地部署API，启用由定时器触发的服务，甚至通过接收存储事件来触发流程。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Understanding the Azure Functions app
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Azure Functions应用程序
- en: Programming Azure Functions using C#
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用C#编程Azure Functions
- en: Maintaining Azure Functions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护Azure Functions
- en: Use case – implementing Azure Functions to send emails
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用例-实现Azure Functions发送电子邮件
- en: By the end of this chapter, you will understand how to use Azure Functions in
    C# to speed up your development cycle.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章结束时，您将了解如何使用C#中的Azure Functions来加快开发周期。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires that you have the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您具备以下条件：
- en: Visual Studio 2019 free Community Edition or better with all the Azure tools
    installed.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio 2019免费社区版或更高版本，所有Azure工具都已安装。
- en: A free Azure account. The *Creating an Azure account* section of *Chapter 1*,
    *Understanding the Importance of Software Architecture*, explains how to create
    one.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个免费的Azure账户。*第1章*的*创建Azure账户*部分解释了如何创建。
- en: You can find the sample code for this chapter at [https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5/tree/master/ch10](https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5/tree/master/ch10).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5/tree/master/ch10](https://github.com/PacktPublishing/Software-Architecture-with-C-9-and-.NET-5/tree/master/ch10)找到本章的示例代码。
- en: Understanding the Azure Functions app
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Azure Functions应用程序
- en: The Azure Functions app is an Azure PaaS where you can build pieces of code
    (functions) and connect them to your application and use triggers to start them.
    The concept is quite simple – you build a function in the language you prefer
    and decide on the trigger that will start it. You can write as many functions
    as you want in your system. There are cases where the system is written entirely
    with functions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Functions应用程序是Azure PaaS，您可以在其中构建代码片段（函数），并将它们连接到您的应用程序，并使用触发器启动它们。这个概念非常简单-您可以用您喜欢的语言编写函数，并决定启动它的触发器。您可以在系统中编写尽可能多的函数。有些情况下，整个系统都是用函数编写的。
- en: 'The steps for creating the necessary environment are as simple as the ones
    we need to follow to create the function itself. The following screenshot shows
    the parameters that you must decide on when you create the environment. After
    you select **Create a resource** in Azure and filter by **Function App**, clicking
    the **Create** button, you will see the following screen:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 创建必要环境的步骤与创建函数本身的步骤一样简单。以下屏幕截图显示了创建环境时必须决定的参数。在Azure中选择**创建资源**并按**Function
    App**进行筛选，然后单击**创建**按钮，您将看到以下屏幕：
- en: '![](img/B16756_10_01.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_01.png)'
- en: 'Figure 10.1: Creating an Azure function'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1：创建Azure函数
- en: 'There are a couple of key points that you should consider while creating your
    Azure Functions environment. The possibilities given for running functions increase
    from time to time, as do the programming language options and publishing styles.
    One of the most important configurations we have is the hosting plan, which is
    where you will run your functions. There are three options for the hosting plan:
    a Consumption (Serverless), Premium, and App Service plan. Let''s talk about these
    now.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建Azure Functions环境时，有几个关键点需要考虑。随着时间的推移，运行函数的可能性不断增加，编程语言选项和发布样式也在不断增加。我们最重要的配置之一是托管计划，这是您运行函数的地方。托管计划有三个选项：消耗（无服务器）、高级和应用服务计划。现在让我们来谈谈这些。
- en: Consumption plan
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消耗计划
- en: If you choose a Consumption plan, your functions will only consume resources
    when they are executed. This means that you will only be charged while your functions
    are running. Scalability and memory resources will be automatically managed by
    Azure. This is truly what we call serverless.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择消耗计划，您的函数只会在执行时消耗资源。这意味着只有在函数运行时才会收费。可扩展性和内存资源将由Azure自动管理。这确实是我们所说的无服务器。
- en: Something we need to take note of while writing functions in this plan is the
    timeout. By default, after 5 minutes, the function will timeout. You can change
    the timeout value using the `functionTimeout` parameter in the `host.json` file.
    The maximum value is 10 minutes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写此计划中的函数时，我们需要注意超时。默认情况下，函数将在5分钟后超时。您可以使用`host.json`文件中的`functionTimeout`参数更改超时值。最大值为10分钟。
- en: When you choose the Consumption plan, the way in which you will be charged will
    depend on what you are executing, execution time, and memory usage. More information
    on this can be found at [https://azure.microsoft.com/en-us/pricing/details/functions/](https://azure.microsoft.com/en-us/pricing/details/functions/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当您选择消耗计划时，您将被收取费用的方式取决于您执行的内容、执行时间和内存使用情况。有关更多信息，请访问[https://azure.microsoft.com/en-us/pricing/details/functions/](https://azure.microsoft.com/en-us/pricing/details/functions/)。
- en: Note that this can be a good option when you do not have App Services in your
    environment, and you are running functions with low periodicity. On the other
    hand, if you need continuous processing, you may want to consider the App Service
    plan.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当您的环境中没有应用服务，并且您正在运行低周期性的函数时，这可能是一个不错的选择。另一方面，如果您需要持续处理，您可能需要考虑应用服务计划。
- en: Premium plan
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级计划
- en: Depending on what you use your functions for, especially if they need to run
    continuously or almost continuously, or if some function executions take longer
    than 10 minutes, you may want to consider a Premium plan. Besides, you may need
    to connect your function to a VNET/VPN environment, and in this case, you will
    be forced to run in this plan.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您使用函数的方式，特别是如果它们需要持续运行或几乎持续运行，或者如果某些函数执行时间超过10分钟，您可能需要考虑使用高级计划。此外，您可能需要将函数连接到VNET/VPN环境，在这种情况下，您将被迫在此计划中运行。
- en: You may also need more CPU or memory options than what is provided with the
    Consumption plan. The Premium plan gives you one core, two core, and four core
    instance options.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还需要比消耗计划提供的更多CPU或内存选项。高级计划为您提供了一个核心、两个核心和四个核心的实例选项。
- en: It is worth mentioning that even with unlimited time to run your function, if
    you decide to use an HTTP trigger function, 230 seconds is the maximum allowed
    for responding to a request. The reason why this is a limit is related to Azure
    Load Balancer. You may have to redesign your solution in such situations to adhere
    to the best practices set by Microsoft ([https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices](https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices)).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，即使您有无限的时间来运行函数，如果您决定使用HTTP触发函数，响应请求的最大允许时间为230秒。这个限制的原因与Azure负载均衡器有关。在这种情况下，您可能需要重新设计您的解决方案，以符合Microsoft设置的最佳实践（[https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices](https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices)）。
- en: App Service plan
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用服务计划
- en: 'The App Service plan is one of the options you can choose when you want to
    create an Azure Functions app. The following is a list of reasons (suggested by
    Microsoft) as to why you should use the App Service plan instead of the Consumption
    plan to maintain your functions:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务计划是您在创建Azure函数应用时可以选择的选项之一。以下是一些（由Microsoft建议的）您应该使用应用服务计划而不是消耗计划来维护函数的原因列表：
- en: You can use underutilized existing App Service instances.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用未充分利用的现有应用服务实例。
- en: You want to run your function app on a custom image.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您想在自定义镜像上运行函数应用。
- en: In the App Service plan scenario, the `functionTimeout` value varies according
    to the Azure Function runtime version. However, the value is at least 30 minutes.
    You may find a tabled comparison between the timeouts in each consumption plan
    at [https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用服务计划方案中，`functionTimeout`值根据Azure函数运行时版本而变化。但是，该值至少为30分钟。您可以在[https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout)找到每个消耗计划中超时的表格比较。
- en: Programming Azure functions using C#
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用C#编程Azure函数
- en: In this section, you will learn how to create Azure functions. It is worth mentioning
    that there are several ways to create them using C#. The first one is by creating
    the functions and developing them in the Azure portal itself. To do this, let
    us consider that you have created an Azure Functions app with similar configurations
    to the ones from the screenshot at the beginning of the chapter.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何创建Azure函数。值得一提的是，有几种使用C#创建函数的方法。第一种方法是在Azure门户中创建函数并在其中开发它们。为此，让我们假设您已经创建了一个Azure函数应用，并且配置与本章开头的屏幕截图类似。
- en: 'By selecting the resource created and navigating to the **Functions** menu,
    you will be able to **Add** new functions to this environment, as you can see
    in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择创建的资源并导航到**函数**菜单，您将能够在此环境中**添加**新的函数，如下面的屏幕截图所示：
- en: '![](img/B16756_10_02.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_02.png)'
- en: 'Figure 10.2: Adding a function'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2：添加函数
- en: Here, you will need to decide the kind of trigger that you want to use to start
    the execution. The most frequently used ones are **HTTP trigger** and **Timer
    trigger**. The first enables the creation of an HTTP API that will trigger the
    function. The second means functions will be triggered by a timer set according
    to your decision.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您需要决定要使用的触发器类型来启动执行。最常用的是**HTTP触发器**和**定时器触发器**。第一个可以创建一个将触发函数的HTTP API。第二个意味着函数将由根据您的决定设置的定时器触发。
- en: 'When you decide on the trigger you want to use, you must name the function.
    Depending on the trigger you decide on, you will have to set up some parameters.
    For instance, HTTP trigger requires that you set up an authorization level. Three
    options are available, that is, **Function**, **Anonymous**, and **Admin**:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当您决定要使用的触发器时，您必须为函数命名。根据您决定的触发器，您将不得不设置一些参数。例如，HTTP触发器要求您设置授权级别。有三个选项可用，即**函数**、**匿名**和**管理员**：
- en: '![](img/B16756_10_03.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_03.png)'
- en: 'Figure 10.3: Configuring an HTTP function'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3：配置HTTP函数
- en: It is worth mentioning that this book does not cover all the options that are
    available when it comes to building functions. As a software architect, you should
    understand that Azure provides a good service for serverless architectures in
    terms of functions. This can be useful in several situations. This was discussed
    in more detail in *Chapter 4*, *Deciding the Best Cloud-Based Solution*.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，本书并未涵盖在构建函数时可用的所有选项。作为软件架构师，您应该了解Azure在函数方面提供了良好的无服务器架构服务。这在几种情况下都可能很有用。这在*第4章*，*决定最佳基于云的解决方案*中有更详细的讨论。
- en: 'The result of this is as follows. Notice that Azure provides an editor that
    allows us to run the code, check logs, and test the function that we have created.
    This is a good interface for testing and coding basic functions:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 其结果如下。请注意，Azure提供了一个编辑器，允许我们运行代码，检查日志，并测试我们创建的函数。这是一个用于测试和编写基本函数的良好界面：
- en: '![](img/B16756_10_04.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_04.png)'
- en: 'Figure 10.4: HTTP function environment'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4：HTTP函数环境
- en: However, if you want to create more sophisticated functions, you may need a
    more sophisticated environment so that you can code and debug them more efficaciously.
    This is where the Visual Studio Azure Functions project can help you. Besides,
    using Visual Studio to execute the development of the function moves you in the
    direction of using source control and CI/CD for your functions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果您想创建更复杂的函数，您可能需要一个更复杂的环境，以便您可以更有效地编写和调试它们。这就是Visual Studio Azure函数项目可以帮助您的地方。此外，使用Visual
    Studio执行函数的开发将使您朝着为函数使用源代码控制和CI/CD的方向迈进。
- en: 'In Visual Studio, you can create a project dedicated to Azure Functions by
    going to **Create a new project**:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在Visual Studio中，您可以通过转到**创建新项目**来创建一个专用于Azure函数的项目：
- en: '![](img/B16756_10_05.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_05.png)'
- en: 'Figure 10.5: Creating an Azure Functions project in Visual Studio 2019'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5：在Visual Studio 2019中创建Azure函数项目
- en: 'Once you have submitted your project, Visual Studio will ask you for the type
    of trigger you are using and for the Azure version that your function will run
    on:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 提交项目后，Visual Studio将询问您正在使用的触发器类型以及您的函数将在哪个Azure版本上运行：
- en: '![](img/B16756_10_06.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_06.png)'
- en: 'Figure 10.6: Creating a new Azure Functions application'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6：创建新的Azure函数应用程序
- en: It is worth mentioning that Azure Functions supports different platforms and
    programming languages. At the time of writing, there are three runtime versions
    of Azure Functions, and C# can run in all of them. The first version is compatible
    with .NET Framework 4.7\. In the second one, you can create functions that run
    on .NET Core 2.2\. In the third one, you will be able to run .NET Core 3.1 and
    .NET 5.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，Azure函数支持不同的平台和编程语言。在撰写本文时，Azure函数有三个运行时版本，C#可以在所有这些版本中运行。第一个版本兼容.NET
    Framework 4.7。在第二个版本中，您可以创建在.NET Core 2.2上运行的函数。在第三个版本中，您将能够运行.NET Core 3.1和.NET
    5。
- en: As a software architect, you must keep code reusability in mind. In this case,
    you should pay attention to which version of Azure Functions Project you will
    decide to build your functions in. However, it is always recommended that you
    use the latest version of the runtime, as soon as it acquires general availability
    status.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件架构师，您必须牢记代码的可重用性。在这种情况下，您应该注意选择在哪个版本的Azure函数项目中构建您的函数。然而，建议您始终使用最新版本的运行时，一旦它获得一般可用性状态。
- en: 'By default, the code that is generated is like that generated when you create
    Azure functions in the Azure portal:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，生成的代码与在Azure门户中创建Azure函数时生成的代码相似：
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The publish method follows the same steps as the publish procedure for web apps
    that we described in *Chapter 1*, *Understanding the Importance of Software Architecture*.
    However, it is always recommended to use a CI/CD pipeline, as we are going to
    describe in *Chapter 20*, *Understanding DevOps Principles*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 发布方法遵循与我们在《第1章》*理解软件架构的重要性*中描述的Web应用程序的发布过程相同的步骤。然而，建议始终使用CI/CD管道，正如我们将在《第20章》*理解DevOps原则*中描述的那样。
- en: Listing Azure Functions templates
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出Azure函数模板
- en: 'There are several templates in the Azure portal that you can use in order to
    create Azure functions. The number of templates that you can choose from is updated
    continuously. The following are just a few of them:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Azure门户中有几个模板可供您使用以创建Azure函数。您可以不断更新可选择的模板数量。以下只是其中的一些：
- en: '**Blob Trigger**: You may want to process something for a file as soon as this
    file is uploaded to your blob storage. This can be a good use case for Azure Functions.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Blob触发器：您可能希望在文件上传到blob存储时立即处理某些内容。这可以是Azure函数的一个很好的用例。
- en: '**Cosmos DB Trigger**: You may want to synchronize data that arrives in a Cosmos
    DB database with a processing method. Cosmos DB was discussed in detail in *Chapter
    9*, *How to Choose Your Data Storage in the Cloud*.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cosmos DB触发器：您可能希望将到达Cosmos DB数据库的数据与处理方法同步。Cosmos DB在《第9章》*如何选择云中的数据存储*中有详细讨论。
- en: '**Event Grid Trigger**: This is a good way to manage Azure events. Functions
    can be triggered so that they manage each event.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件网格触发器：这是管理Azure事件的一种好方法。函数可以被触发以便它们管理每个事件。
- en: '**Event Hub Trigger**: With this trigger, you can build functions that are
    linked to any system that sends data to Azure Event Hub.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件中心触发器：使用此触发器，您可以构建与将数据发送到Azure事件中心的任何系统相关联的函数。
- en: '**HTTP Trigger**: This trigger is useful for building serverless APIs and web
    app events.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP触发器：此触发器对于构建无服务器API和Web应用程序事件非常有用。
- en: '**IoT Hub Trigger**: When your application is connected to devices through
    the use of IoT Hub, you can use this trigger whenever a new event is received
    by one of the devices.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IoT Hub触发器：当您的应用程序通过IoT Hub与设备连接时，您可以在设备中收到新事件时使用此触发器。
- en: '**Queue Trigger**: You can handle queue processing using a function as a service
    solution.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队列触发器：您可以使用函数作为服务解决方案来处理队列处理。
- en: '**Service Bus Queue Trigger**: This is another messaging service that can be
    a trigger for functions. Azure Service Bus will be covered in more detail in *Chapter
    11*, *Design Patterns and .NET 5 Implementation*.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务总线队列触发器：这是另一个可以成为函数触发器的消息传递服务。Azure服务总线将在《第11章》*设计模式和.NET 5实现*中进行更详细的介绍。
- en: '**Timer Trigger**: This is commonly used with functions and is where you specify
    time triggers so that you can continuously process data from your system.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定时器触发器：这通常与函数一起使用，您可以在其中指定时间触发器，以便可以持续处理来自系统的数据。
- en: Maintaining Azure functions
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护Azure函数
- en: Once you have created and programmed your function, you need to monitor and
    maintain it. To do this, you can use a variety of tools, all of which you can
    find in the Azure portal. These tools will help you solve problems due to the
    amount of information you will be able to collect with them.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建和编程函数后，您需要监视和维护它。为此，您可以使用各种工具，所有这些工具都可以在Azure门户中找到。这些工具将帮助您解决问题，因为您将能够收集大量信息。
- en: 'The first option when it comes to monitoring your function is using the **Monitor**
    menu inside the Azure Functions interface in the Azure portal. There, you will
    be able to check all your function executions, including successful results and
    failures:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在监视函数时的第一个选项是在Azure门户中的Azure函数界面内使用“监视”菜单。在那里，您将能够检查所有函数执行，包括成功的结果和失败的结果：
- en: '![](img/B16756_10_07.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_07.png)'
- en: 'Figure 10.7: Monitoring a function'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7：监控函数
- en: It will take about 5 minutes for any results to be available. The date shown
    in the grid is in UTC time.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 任何结果可用需要大约5分钟。网格中显示的日期是UTC时间。
- en: 'By clicking on **Run query in Application Insights**, the same interface allows
    you to connect to this tool. This will take you to a world of almost infinite
    options that you can use to analyze your function data. Application Insights is
    one of the best **Application Performance Management** (**APM**) systems available
    nowadays:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过单击“在Application Insights中运行查询”，相同的界面允许您连接到此工具。这将带您进入一个几乎无限的选项世界，您可以使用它来分析您的函数数据。Application
    Insights是当今最好的“应用程序性能管理”（APM）系统之一：
- en: '![](img/B16756_10_08.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_08.png)'
- en: 'Figure 10.8: Monitoring using Application Insights'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8：使用Application Insights进行监控
- en: 'Beyond the query interface, you can also check all the performance issues of
    your function using the Insights interface in the Azure portal. There, you can
    analyze and filter all the requests that have been received by your solution and
    check their performance and dependencies. You can also trigger alerts when something
    abnormal happens to one of your endpoints:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查询界面，您还可以使用Azure门户中的Insights界面检查函数的所有性能问题。在那里，您可以分析和过滤已收到的所有请求，并检查它们的性能和依赖关系。当您的一个端点发生异常时，您还可以触发警报：
- en: '![](img/B16756_10_09.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_09.png)'
- en: 'Figure 10.9: Monitoring using Application Insights Live Metrics'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9：使用Application Insights实时指标监控
- en: As a software architect, you will find a good daily helper for your projects
    in this tool. It is worth mentioning that Application Insights works on several
    other Azure services, such as web apps and virtual machines. This means that you
    can monitor the health of your system and maintain it using the wonderful features
    provided by Azure.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件架构师，您会发现这个工具对您的项目是一个很好的日常助手。值得一提的是，Application Insights还适用于其他几个Azure服务，例如Web应用程序和虚拟机。这意味着您可以使用Azure提供的出色功能来监视系统的健康状况并进行维护。
- en: Use case – Implementing Azure Functions to send emails
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例 - 实现Azure函数发送电子邮件
- en: Here, we will use a subset of the Azure components we described previously.
    The use case from WWTravelClub proposes a worldwide implementation of the service,
    and there is a chance that this service will need different architecture designs
    to face all the performance key points that we described in *Chapter 1*, *Understanding
    the Importance of Software Architecture*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用我们之前描述的Azure组件的子集。WWTravelClub的用例提出了该服务的全球实施，并且有可能该服务将需要不同的架构设计来应对我们在*第1章*“理解软件架构的重要性”中描述的所有性能关键点。
- en: If you go back to the user stories that were described in *Chapter 1*, *Understanding
    the Importance of Software Architecture*, you will find that many needs are related
    to communication. Because of this, it is common to have some alerts be provided
    by emails in the solution. The use case of this chapter will focus on how to send
    emails. The architecture will be totally serverless.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您回顾一下在*第1章*“理解软件架构的重要性”中描述的用户故事，您会发现许多需求与通信有关。因此，在解决方案中通常会通过电子邮件提供一些警报。本章的用例将重点介绍如何发送电子邮件。该架构将完全无服务器。
- en: 'The following diagram shows the basic structure of the architecture. To give
    users a great experience, all the emails that are sent by the application will
    be queued asynchronously, thereby preventing significant delays in the system''s
    responses:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了架构的基本结构。为了给用户带来良好的体验，应用程序发送的所有电子邮件都将以异步方式排队，从而防止系统响应出现显着延迟：
- en: '![](img/B16756_10_10.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_10.png)'
- en: 'Figure 10.10: Architectural design for sending emails'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10：发送电子邮件的架构设计
- en: Note that there are no servers that manage Azure functions for enqueuing or
    dequeuing messages from Azure Queue Storage. This is exactly what we call serverless.
    It is worth mentioning that this architecture is not restricted to only sending
    emails – it can also be used to process any HTTP `POST` request.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，没有服务器管理Azure函数来对Azure队列存储中的消息进行入队或出队操作。这正是我们所说的无服务器。值得一提的是，这种架构不仅限于发送电子邮件
    - 它也可以用于处理任何HTTP“POST”请求。
- en: Now, we will learn how to set up security in the API so that only authorized
    applications can use the given solution.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将学习如何在API中设置安全性，以便只有经过授权的应用程序可以使用给定的解决方案。
- en: First step – Creating Azure Queue storage
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步 - 创建Azure队列存储
- en: 'It is quite simple to create storage in the Azure portal. Let us learn how.
    First, you will need to create a storage account by clicking on **Create a resource**
    in the main page of the Azure portal and searching for **Storage account**. Then,
    you will be able to set up its basic information, such as **Storage account name**
    and **Location**. Information about **Networking**, and **Data protection**, as
    shown in the following screenshot, can be checked in this wizard too. There are
    default values for these settings that will cover the demo:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure门户中创建存储非常简单。让我们来学习如何操作。首先，您需要通过单击Azure门户主页上的**创建资源**来创建一个存储账户，并搜索**存储账户**。然后，您可以设置其基本信息，如**存储账户名称**和**位置**。此向导还可以检查有关**网络**和**数据保护**的信息，如下图所示。这些设置有默认值，将覆盖演示：
- en: '![](img/B16756_10_11.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_11.png)'
- en: 'Figure 10.11: Creating an Azure storage account'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11：创建Azure存储账户
- en: 'Once you have the storage account in place, you will be able to set up a queue.
    You will find this option by clicking on the **Overview** link in the storage
    account and selecting the **Queues** option, or by selecting **Queues** via the
    storage account menu. Then, you will find an option to add the queue (**+ Queue**),
    where you just need to provide its name:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您设置好存储账户，您就可以设置一个队列。您可以通过单击存储账户中的**概述**链接并选择**队列**选项，或者通过存储账户菜单选择**队列**来找到此选项。然后，您将找到一个添加队列的选项（**+队列**），您只需要提供其名称即可：
- en: '![](img/B16756_10_12.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_12.png)'
- en: 'Figure 10.12: Defining a queue to monitor emails'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12：定义监视电子邮件的队列
- en: 'The created queue will give you an overview of the Azure portal. There, you
    will find your queue''s URL and use Storage Explorer:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的队列将在Azure门户中为您提供概览。在那里，您将找到您的队列的URL并使用Storage Explorer：
- en: '![](img/B16756_10_13.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_13.png)'
- en: 'Figure 10.13: Queue created'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.13：创建的队列
- en: 'Note that you will also be able to connect to this storage using Microsoft
    Azure Storage Explorer ([https://azure.microsoft.com/en-us/features/storage-explorer/](https://azure.microsoft.com/en-us/features/storage-explorer/)):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您还可以使用Microsoft Azure Storage Explorer连接到此存储（[https://azure.microsoft.com/en-us/features/storage-explorer/](https://azure.microsoft.com/en-us/features/storage-explorer/)）：
- en: '![](img/B16756_10_14.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_14.png)'
- en: 'Figure 10.14: Monitoring the queue using Microsoft Azure Storage Explorer'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.14：使用Microsoft Azure Storage Explorer监视队列
- en: This tool is especially useful if you are not connected to the Azure portal.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有连接到Azure门户，此工具尤其有用。
- en: Second step – Creating the function to send emails
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二步 - 创建发送电子邮件的函数
- en: 'Now, you can start programming in earnest, informing the queue that an email
    is waiting to be sent. Here, we need to use an HTTP trigger. Note that the function
    is a static class that runs asynchronously. The following code is gathering the
    request data coming from the HTTP trigger and inserting the data into a queue
    that will be treated later:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以认真开始编程，通知队列等待发送电子邮件。在这里，我们需要使用HTTP触发器。请注意，该函数是一个静态类，可以异步运行。以下代码正在收集来自HTTP触发器的请求数据，并将数据插入稍后将处理的队列中：
- en: '[PRE1]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In some scenarios, you may try to avoid the queue setup indicated in the preceding
    code by using a queue output binding. Check the details at [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-output?tabs=csharp](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-output?tabs=).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可以尝试避免使用前面代码中指示的队列设置，而是使用队列输出绑定。在[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-output?tabs=csharp](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-output?tabs=)上查看详细信息。
- en: 'You can use a tool such as Postman to test your function by running the Azure
    Functions Emulator:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用诸如Postman之类的工具通过运行Azure Functions模拟器来测试函数：
- en: '![](img/B16756_10_15.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_15.png)'
- en: 'Figure 10.15: Postman function test'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.15：Postman函数测试
- en: 'The result will appear in Microsoft Azure Storage Explorer and the Azure portal.
    In the Azure portal, you can manage each message and dequeue each of them or even
    clear the queue storage:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将出现在Microsoft Azure Storage Explorer和Azure门户中。在Azure门户中，您可以管理每条消息并出列每条消息，甚至清除队列存储：
- en: '![](img/B16756_10_16.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_16.png)'
- en: 'Figure 10.16: HTTP trigger and queue storage test'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.16：HTTP触发器和队列存储测试
- en: Third step – Creating the queue trigger function
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三步 - 创建队列触发函数
- en: 'After this, you can create a second function. This one will be triggered by
    data entering your queue. It is worth mentioning that, for Azure Functions v3,
    you will have the `Microsoft.Azure.WebJobs.Extensions.Storage` library added as
    a NuGet reference automatically:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您可以创建第二个函数。这个函数将由进入队列的数据触发。值得一提的是，对于Azure Functions v3，您将自动将`Microsoft.Azure.WebJobs.Extensions.Storage`库添加为NuGet引用：
- en: '![](img/B16756_10_17.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_17.png)'
- en: 'Figure 10.17: Creating a queue trigger'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.17：创建队列触发
- en: 'Once you have set the connection string inside `local.settings.json`, you will
    be able to run both functions and test them with Postman. The difference is that,
    with the second function running, if you set a breakpoint at the start of it,
    you will check whether the message has been sent:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在`local.settings.json`中设置了连接字符串，您就可以运行这两个函数并使用Postman进行测试。不同之处在于，如果第二个函数正在运行，如果您在其开头设置断点，您将检查消息是否已发送：
- en: '![](img/B16756_10_18.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16756_10_18.png)'
- en: 'Figure 10.18: Queue triggered in Visual Studio 2019'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18：在Visual Studio 2019中触发队列
- en: From this point, the way to send emails will depend on the mail options you
    have. You may decide to use a proxy or connect directly to your email server.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 从这一点开始，发送电子邮件的方式将取决于您拥有的邮件选项。您可以决定使用代理或直接连接到您的电子邮件服务器。
- en: 'There are several advantages to creating an email service this way:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式创建电子邮件服务有几个优势：
- en: Once your service has been coded and tested, you can use it to send emails from
    any of your applications. This means that your code can always be reused.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦您的服务已编码并经过测试，您就可以使用它从任何应用程序发送电子邮件。这意味着您的代码可以始终被重用。
- en: Apps that use this service will not be stopped from sending emails due to the
    asynchronous advantages of posting in an HTTP service.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用此服务的应用程序不会因为在HTTP服务中发布异步优势而停止发送电子邮件。
- en: You do not need to pool the queue to check whether data is ready for processing.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要池化队列来检查数据是否准备好进行处理。
- en: Finally, the queue process runs concurrently, which delivers a better experience
    in most cases. It is possible to turn it off by setting some properties in `host.json`.
    All the options for this can be found in the *Further reading* section at the
    end of this chapter.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，队列进程并发运行，这在大多数情况下提供了更好的体验。可以通过在`host.json`中设置一些属性来关闭它。所有这些选项都可以在本章末尾的*进一步阅读*部分找到。
- en: Summary
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at some of the advantages of developing functionality
    with serverless Azure functions. You can use it as a guideline for checking the
    different types of triggers that are available in Azure Functions and for planning
    how to monitor them. We also saw how to program and maintain Azure functions.
    Finally, we looked at an example of an architecture where you connect multiple
    functions to avoid pooling data and to enable concurrent processing.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一些使用无服务器Azure函数开发功能的优势。您可以将其用作检查Azure Functions中可用的不同类型触发器和计划如何监视它们的指南。我们还看到了如何编程和维护Azure函数。最后，我们看了一个架构示例，其中您可以连接多个函数以避免池化数据并实现并发处理。
- en: In the next chapter, we will analyze the concept of design patterns, learn why
    they are so useful, and learn about some of the common patterns.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将分析设计模式的概念，了解它们为什么如此有用，并了解一些常见模式。
- en: Questions
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are Azure functions?
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure函数是什么？
- en: What are the programming options for Azure functions?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure函数的编程选项是什么？
- en: What are the plans that can be used with Azure functions?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以与Azure函数一起使用的计划是什么？
- en: How can you deploy Azure functions with Visual Studio?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用Visual Studio部署Azure函数？
- en: What triggers can you use to develop Azure functions?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用哪些触发器来开发Azure函数？
- en: What is the difference between Azure Functions v1, v2, and v3?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions v1、v2和v3有什么区别？
- en: How does Application Insights help us to maintain and monitor Azure functions?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序洞察如何帮助我们维护和监视Azure函数？
- en: Further reading
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'If you want to learn more when it comes to creating Azure functions, check
    out the following links:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解有关创建Azure函数的更多信息，请查看以下链接：
- en: 'Azure Functions scale and hosting: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure函数的规模和托管：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale)
- en: '*Azure Functions – Essentials [Video]*, by Praveen Kumar Sreeram: [https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video](https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure Functions – Essentials [Video]*，作者Praveen Kumar Sreeram：[https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video](https://www.packtpub.com/virtualization-and-cloud/azure-functions-essentials-video)'
- en: 'Azure Functions runtime overview: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions
    )'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions运行时概述：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions)
- en: 'An overview of Azure Event Grid: [https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/](https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure事件网格概述：[https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/](https://azure.microsoft.com/en-us/resources/videos/an-overview-of-azure-event-grid/)
- en: 'Timer trigger for Azure Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions的定时器触发器：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)
- en: 'The Application Insights section from the book, *Azure for Architects*, by
    Ritesh Modi: [https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/appli)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍*Azure for Architects*中的应用程序洞察部分，作者Ritesh Modi：[https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/appli)
- en: 'Monitoring Azure Functions using the Application Insights section from the
    book, *Azure Serverless Computing Cookbook*, by Praveen Kumar Sreeram: [https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitori)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用书籍*Azure Serverless Computing Cookbook*中的应用程序洞察部分监视Azure函数，作者Praveen Kumar
    Sreeram：[https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitori)
- en: 'Get started with Azure Queue storage using .NET: [https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues](https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用.NET开始使用Azure队列存储：[https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues](https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues)
- en: 'Azure Functions triggers and bindings concepts: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions触发器和绑定概念：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)
- en: 'Azure Queue storage bindings for Azure Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure函数的Azure队列存储绑定：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue)
