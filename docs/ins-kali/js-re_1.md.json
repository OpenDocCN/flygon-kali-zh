["```js\n123-123-1234\n```", "```js\n123-123-1234\n(123)-123-1234\n1231231234\n```", "```js\n[info] \u2013 App Started\n[warning] \u2013 Job Queue Full\n[info] \u2013 Client Connected\n[error] \u2013 Error Parsing Input\n[info] \u2013 Application Exited Successfully\n```", "```js\n<title>Demo</title>\n<size>45MB</size>\n<date>24 Dec, 2013</date>\n```", "```js\nvar rgx1 = new RegExp(\"hello\");\nvar rgx2 = /hello/;\n```", "```js\nvar rgx1 = new RegExp(\"hello\", \"gi\");\nvar rgx2 = /hello/gi;\n```", "```js\n> var rgx = /hello/;\nundefined\n> rgx.test(\"hello\");\ntrue\n> rgx.test(\"world\");\nfalse\n> rgx.test(\"hello world\");\ntrue\n```", "```js\n> var rgx = /world/;\nundefined\n> rgx.exec(\"world !!\");\n[ 'world' ]\n> rgx.exec(\"hello world\");\n[ 'world' ]\n> rgx.exec(\"hello\");\nnull\n```", "```js\n> str = \"hello world\";\n\"hello world\"\n> str.search(/world/);\n6\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Regex Tester</title>\n    <link rel=\"stylesheet\" href=\"http://netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css\">\n    <script src=\"img/jquery.min.js\"></script>\n    <style>\n      body{\n        margin-top: 30px;\n      }\n      .label {\n         margin: 0px 3px;\n      }\n    </style>\n  </head>\n```", "```js\n<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class=\"alert alert-danger hide\" id=\"alert-box\"></div>\n          <div class=\"form-group\">\n            <label for=\"input-text\">Text</label>\n            <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    id=\"input-text\" \n                    placeholder=\"Text\"\n            >\n          </div>\n          <label for=\"inputRegex\">Regex</label>\n          <div class=\"input-group\">\n            <input \n                   type=\"text\" \n                   class=\"form-control\" \n                   id=\"input-regex\" \n                   placeholder=\"Regex\"\n            >\n            <span class=\"input-group-btn\">\n              <button \n                      class=\"btn btn-default\" \n                      id=\"test-button\" \n                      type=\"button\">\n                             Test!\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <h3>Results</h3>\n        <div class=\"col-sm-12\">\n          <div class=\"well well-lg\" id=\"results-box\"></div>\n        </div>\n      </div>\n    </div>\n    <script>\n      //JS code goes here\n    </script>\n  </body>\n</html>\n```", "```js\nvar textbox = $(\"#input-text\");\nvar regexbox = $(\"#input-regex\");\nvar alertbox = $(\"#alert-box\");\nvar resultsbox = $(\"#results-box\");\n\n$(\"#test-button\").click(function(){\n  //clear page from previous run\n  clearResultsAndErrors()\n\n  //get current values\n  var text = textbox.val();\n  var regex = regexbox.val();\n\n  //handle empty values\n  if (text == \"\") {\n    err(\"Please enter some text to test.\");\n  } else if (regex == \"\") {\n    err(\"Please enter a regular expression.\");\n  } else {\n    regex = createRegex(regex);\n\n    if (!regex) {\n      return;\n    }\n\n    //get matches\n    var results = getMatches(regex, text);\n\n    if (results.length > 0 && results[0] !== null) {\n      var html = getMatchesCountString(results);\n      html += getResultsString(results, text);\n      resultsbox.html(html);\n    } else {\n      resultsbox.text(\"There were no matches.\");\n    }\n  }\n});\n```", "```js\nfunction clearResultsAndErrors() {\n  resultsbox.text(\"\");\n  alertbox.addClass(\"hide\").text(\"\");\n}\n\nfunction err(str) {\n  alertbox.removeClass(\"hide\").text(str);\n}\n```", "```js\nfunction createRegex(regex) {\n  try {\n    if (regex.charAt(0) == \"/\") {\n      regex = regex.split(\"/\");\n      regex.shift();\n\n      var flags = regex.pop();\n      regex = regex.join(\"/\");\n\n      regex = new RegExp(regex, flags);\n    } else {\n      regex = new RegExp(regex, \"g\");\n    }\n    return regex;\n  } catch (e) {\n    err(\"The Regular Expression is invalid.\");\n    return false;\n  }\n}\n```", "```js\nfunction getMatches(regex, text) {\n  var results = [];\n  var result;\n\n  if (regex.global) {\n    while((result = regex.exec(text)) !== null) {\n      results.push(result);\n    }\n  } else {\n    results.push(regex.exec(text));\n  }\n\n  return results;\n}\n```", "```js\nfunction getMatchesCountString(results) {\n  if (results.length === 1) {\n    return \"<p>There was one match.</p>\";\n  } else {\n    return \"<p>There are \" + results.length + \" matches.</p>\";\n  }\n}\n```", "```js\nfunction getResultsString(results, text) {\n  for (var i = results.length - 1; i >= 0; i--) {\n    var result = results[i];\n    var match  = result.toString();\n    var prefix = text.substr(0, result.index);\n    var suffix = text.substr(result.index + match.length);\n    text = prefix \n      + '<span class=\"label label-info\">' \n      + match \n      + '</span>' \n      + suffix;\n  }\n  return \"<h4>\" + text + \"</h4>\";\n}\n```"]