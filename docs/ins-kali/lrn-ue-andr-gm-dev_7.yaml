- en: Chapter 7. Finishing, Packaging, and Publishing the Game
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。完成、打包和发布游戏
- en: In the last few chapters, we have been building a game bit by bit. We started
    by building the world using BSP brushes, adding lights and static meshes, creating
    materials, and applying them to the meshes. We then added the various classes
    and volumes that were required in order to develop the game and to enhance gameplay.
    After adding all of the actors, we went on to script our game using Blueprints,
    Level Blueprints, and Blueprint Classes. Finally, we made use of Matinee to create
    cut-scenes and animations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的几章中，我们一点一点地构建了一个游戏。我们首先使用BSP刷子构建了世界，添加了灯光和静态网格，创建了材质并将其应用于网格。然后，我们添加了各种类和体积，这些都是开发游戏和增强游戏玩法所需的。在添加了所有角色之后，我们开始使用蓝图、级别蓝图和蓝图类来编写游戏。最后，我们利用Matinee创建了过场动画和动画。
- en: We now have a functioning game. The next step is finalizing the game, packaging
    it into an `.apk` file, and publishing it to the Google Play Store.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个运行良好的游戏。下一步是完成游戏，将其打包成`.apk`文件，并将其发布到Google Play商店。
- en: Adding the main menu using Unreal Motion Graphics
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用虚幻动态图形添加主菜单
- en: If you have played any sort of game, you will find that all of them have a main
    menu. Let's add one to our game as well. Our main menu will be fairly simple.
    We will have the name of the game in the center. The game will load when the player
    taps below the name. The game's menus, UI, **heads-up display** (**HUD**), and
    so on—along with their functionalities—can be easily created using **Unreal Motion
    Graphics** (**UMG**). UMG is an easy-to-use tool with a simple and intuitive editor,
    which you can quickly learn to make your game's menus and such.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您玩过任何类型的游戏，您会发现它们都有一个主菜单。让我们也为我们的游戏添加一个。我们的主菜单将非常简单。我们将在中心放置游戏的名称。当玩家点击名称下方时，游戏将加载。游戏的菜单、UI、**抬头显示**（**HUD**）等及其功能可以使用**虚幻动态图形**（**UMG**）轻松创建。UMG是一个易于使用的工具，具有简单直观的编辑器，您可以快速学会使用它来制作游戏的菜单等。
- en: UMG Editor
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UMG编辑器
- en: To access the UMG Editor and make your user interface, you first need to create
    a `Widget Blueprint` class. Right-click in the **Content Browser**, and under
    **User Interface**, select **Widget Blueprint**. Name it `Main_Menu`, and double-click
    on it to open the **UMG Editor**.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问UMG编辑器并制作用户界面，您首先需要创建一个`Widget Blueprint`类。在**内容浏览器**中右键单击，在**用户界面**下选择**Widget
    Blueprint**。将其命名为`Main_Menu`，然后双击它以打开**UMG编辑器**。
- en: '![UMG Editor](img/image00394.jpeg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: UMG编辑器
- en: The tab and menu bar
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标签和菜单栏
- en: The tab bar shows the currently open tabs. You can switch, close, rearrange,
    and move any tab from here.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 选项卡栏显示当前打开的选项卡。您可以从这里切换、关闭、重新排列和移动任何选项卡。
- en: '![The tab and menu bar](img/image00395.jpeg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![选项卡和菜单栏](img/image00395.jpeg)'
- en: 'The menu bar is where you can find the actions you would use:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单栏是您可以找到您将使用的操作的地方：
- en: '**File**: From here, you can save your widget blueprint, compile the blueprint
    you created, open a selected asset, and so on.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件**：从这里，您可以保存您的小部件蓝图，编译您创建的蓝图，打开所选资产等等。'
- en: '**Edit**: Here, you can undo or redo the last action and open the **Editor**
    and **Project Preferences**.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑：在这里，您可以撤消或重做上次的操作，并打开编辑器和项目首选项。
- en: '**Asset**: From here, you can find any asset you have selected in the **Content
    Browser** as well as find said asset''s references in the widget.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资产**：从这里，您可以找到在**内容浏览器**中选择的任何资产，以及查找所选资产的引用。'
- en: '**View**: Here, you can choose to hide/unhide any unused pins that are present
    in the blueprint.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图：在这里，您可以选择隐藏/显示蓝图中存在的任何未使用的引脚。
- en: '**Debug**: If you have created breakpoints in your blueprint (to debug errors),
    then you can enable/disable them and remove all of them from here.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调试**：如果您在蓝图中创建了断点（用于调试错误），则可以在此启用/禁用它们并全部删除它们。'
- en: '**Window**: From here, you can choose which panel or window you wish to see
    and which you do not.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**窗口**：从这里，您可以选择要查看的面板或窗口以及不需要查看的面板或窗口。'
- en: '**Help**: Finally, should you need any tutorials or documentation regarding
    widgets, you can access them from here.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**帮助**：最后，如果您需要有关小部件的任何教程或文档，可以从这里访问它们。'
- en: The toolbar
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具栏
- en: Below the menu bar is the toolbar. Here, all of the most commonly used actions
    are listed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在菜单栏下方是工具栏。这里列出了所有最常用的操作。
- en: '![The toolbar](img/image00396.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![工具栏](img/image00396.jpeg)'
- en: '**Compile**: Clicking on this option compiles the class and notifies the user
    of any errors and/or warnings'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编译**：单击此选项会编译类并通知用户任何错误和/或警告'
- en: '**Save**: This saves all of the modifications you have made to the widget class'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存**：这将保存您对小部件类所做的所有修改。'
- en: '**Find in CB**: This option locates the selected object in the Content Browser'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在CB中查找**：此选项在内容浏览器中定位所选对象'
- en: '**Play**: This plays the game in the Editor Viewport'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**播放**：这将在编辑器视口中播放游戏'
- en: '**Debug Filter**: All of the variables and/or nodes you have set to debug are
    listed here'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调试过滤器**：列出了您设置为调试的所有变量和/或节点'
- en: 'There are two windows in the UMG Editor: **Designer** and **Graph**. The **Designer**
    window is the window you see when you open the widget class. This is where you
    design your user interface. This includes adding the UI elements, arranging them
    in the Graph Editor, setting their properties, and so on. The other window is
    the **Graph** Window, which looks like the **Level Blueprint** window. This is
    where you do all of the visual scripting for the user interface.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: UMG编辑器中有两个窗口：**设计师**和**图形**。**设计师**窗口是您打开小部件类时看到的窗口。这是您设计用户界面的地方。这包括添加UI元素，在图形编辑器中排列它们，设置它们的属性等等。另一个窗口是**图形**窗口，看起来像**级别蓝图**窗口。这是您为用户界面进行所有视觉脚本编写的地方。
- en: '![The toolbar](img/image00397.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![工具栏](img/image00397.jpeg)'
- en: All of the menus have the same actions that you would find in any other Blueprint
    window.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所有菜单都具有与任何其他蓝图窗口中找到的相同操作。
- en: The Graph Editor
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图形编辑器
- en: In the middle of the screen is the Graph Editor. Here, you make and design your
    UI.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕中央是图形编辑器。在这里，您可以制作和设计您的用户界面。
- en: '![The Graph Editor](img/image00398.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图形编辑器](img/image00398.jpeg)'
- en: At the center, you can see a dotted rectangle. This is called the canvas and
    it represents the game screen. All of the UI elements you want in your widget
    go in here. This shows where the elements will be, how they will look on the screen,
    and where they will be arranged on the game screen.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在中心，您可以看到一个虚线矩形。这被称为画布，它代表游戏屏幕。您想要放在小部件中的所有UI元素都在这里。这显示了元素将在哪里，它们将在屏幕上的外观以及它们将在游戏屏幕上排列的位置。
- en: At the bottom-left corner of the Graph Editor, you can see the resolution of
    the screen. At the bottom-right corner of the screen is where the **Dots per inch**
    (**DPI**) scale is displayed. You can change this by clicking the gear icon next
    to it.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在图形编辑器的左下角，您可以看到屏幕的分辨率。在屏幕的右下角是显示**每英寸点数**（DPI）比例的地方。您可以通过单击其旁边的齿轮图标来更改此比例。
- en: 'At the top-left corner, you can see the zoom scale. Finally, at the top-right
    corner are a few buttons. From left to right, they have been enlisted as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在左上角，您可以看到缩放比例。最后，在右上角有一些按钮。从左到右，它们已列出如下：
- en: '**Widget Layout Transformation**: This is used to transform and set the layout
    of the widgets you created for your UI.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小部件布局转换**：这用于转换和设置您为UI创建的小部件的布局。'
- en: '**Widget Render Transformation**: This is to transform the entire UI itself.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小部件渲染转换**：这是用于转换整个UI本身的。'
- en: '**Grid Snapping**: This toggles the grid snapping on/off.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网格捕捉**：这可以切换网格捕捉的开/关状态。'
- en: '**Grid Snap Value**: If enabled, you can set the snap value from here.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网格捕捉值**：如果启用，您可以从这里设置捕捉值。'
- en: '**Zoom to Fit**: This pans and adjusts the Graph Editor to fit the entire canvas
    within the Graph Editor.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩放以适应**：这会移动和调整图形编辑器，以适应图形编辑器中的整个画布。'
- en: '**Preview Size**: Here, you can set and see how the UI would look on different
    devices, each with a different screen size, DPI, and screen resolution. It is
    really handy when you are developing games for different devices.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预览大小**：在这里，您可以设置并查看UI在不同设备上的外观，每个设备具有不同的屏幕大小、DPI和屏幕分辨率。当您为不同设备开发游戏时，这非常方便。'
- en: The Details panel
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 详细面板
- en: The **Details** panel is where you can set the properties of the selected component.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**详细信息**面板是您可以设置所选组件的属性的地方。'
- en: '![The Details panel](img/image00399.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![详细面板](img/image00399.jpeg)'
- en: Here, you can set properties such as transformation and the pivot of the widget,
    add events when the widget is pressed or hovered over, set the visibility, and
    so on.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以设置诸如小部件的转换和枢轴、在按下或悬停在小部件上时添加事件、设置可见性等属性。
- en: The Palette panel
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调色板面板
- en: There are various widget elements that go into making a UI. You can find all
    of them in the **Palette** panel. Just drag and drop what you need from the panel
    to the Graph Editor in order to add that element.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种小部件元素可用于创建UI。您可以在**Palette**面板中找到它们。只需从面板中拖放所需的内容到图形编辑器中以添加该元素。
- en: '![The Palette panel](img/image00400.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![调色板面板](img/image00400.jpeg)'
- en: 'The widget components are categorized into four groups, namely **Common**,
    **Input**, **Panel**, and **Primitive**:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件组件分为四个组，即**常用**、**输入**、**面板**和**基本元素**：
- en: '**Common**: This group contains the most frequently used widgets, such as buttons,
    image box, sliders, progress bar, and so on.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常用**：此组包含最常用的小部件，例如按钮、图像框、滑块、进度条等。'
- en: '**Input**: This group contains elements that can take in input from the player,
    for instance, a text box, spin box, and combo box'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输入**：此组包含可以从玩家那里接收输入的元素，例如文本框、旋转框、组合框等。'
- en: '**Panel**: This group contains elements useful for laying out widgets and for
    controlling when placing widgets.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面板**：此组包含有助于布局小部件和控制放置小部件的元素。'
- en: '**Primitive**: This group contains things such as Trobbers, Editable Texts,
    and so on.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本元素**：此组包含诸如Trobbers、可编辑文本等内容。'
- en: '**User Created**: This section contains any Widget Blueprint that you have
    created or have in your Project file. You can add them from here.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户创建**：此部分包含您创建或在项目文件中拥有的任何小部件蓝图。您可以从这里添加它们。'
- en: The Hierarchy panel
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 层次结构面板
- en: The **Hierarchy** panel shows the hierarchy of all of the components of the
    widgets.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**层次**面板显示了小部件的所有组件的层次结构。'
- en: '![The Hierarchy panel](img/image00401.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![层次结构面板](img/image00401.jpeg)'
- en: At the top is the **CanvasPanel** which acts as the foundation of the UI. Whenever
    you add a component, it is added to the hierarchy as well. If you drag and drop
    a component on a Widget Component in the **Hierarchy** panel, it is added to it
    with the component upon which you dropped the widget component acting as the parent
    and the component you added acting as the child. They also get attached together
    in the Graph Editor.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部是**CanvasPanel**，它充当UI的基础。每当您添加一个组件，它也会被添加到层次结构中。如果您将一个组件拖放到**层次**面板中的小部件组件上，它将作为父级添加到其中，并且您添加的组件将作为子级添加。它们还会在图形编辑器中连接在一起。
- en: The Animations panel
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动画面板
- en: The final component in the UMG's user interface is the **Animations** panel,
    located at the bottom of the window.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: UMG用户界面中的最终组件是位于窗口底部的**动画**面板。
- en: '![The Animations panel](img/image00402.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![动画面板](img/image00402.jpeg)'
- en: UMG allows the user to create animations. You can animate the Widget components
    to suit your preference. The **Animation** panel works almost the same way as
    Unreal Matinee. On the left is the **Tracks** panel. This is where you can add,
    remove, or move animation tracks. To add an animation track, click on the **+
    New** button.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: UMG允许用户创建动画。您可以对小部件组件进行动画处理以满足您的偏好。**动画**面板的工作方式几乎与虚幻Matinee相同。左侧是**轨道**面板。这是您可以添加、删除或移动动画轨道的地方。要添加动画轨道，请单击**+
    新建**按钮。
- en: On the right is the animation timeline. This is where you create your animation
    using key frames. At the top-left corner are some settings, such as enabling/disabling
    grid snapping, the grid snap value, and so on.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 右侧是动画时间轴。这是您使用关键帧创建动画的地方。在左上角有一些设置，例如启用/禁用网格捕捉、网格捕捉值等。
- en: Creating the main menu
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建主菜单
- en: The first step to creating our main menu is to create a new level. In the Editor,
    click on **File** and select **New Level**. When the Level Type window opens,
    select **Empty Level**.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 创建主菜单的第一步是创建一个新的关卡。在编辑器中，单击**文件**，然后选择**新建关卡**。当关卡类型窗口打开时，选择**空关卡**。
- en: '![Creating the main menu](img/image00403.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00403.jpeg)'
- en: 'Name this level as **Main_Menu**. Once created, open the **Main_Menu** widget
    class in the **Content Browser**. In the UMG Editor, add a **Text** widget to
    the canvas. Make the text big. First, increase the size of the text slot panel
    to 1300 x 200\. There are two ways of doing this: the first way is to click on
    the edge and drag it to increase the size. The second way is in the **Details**
    panel, where you can set **Size X** to `1000` and **Size Y** to `250`.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将此关卡命名为**Main_Menu**。创建后，在**内容浏览器**中打开**Main_Menu**小部件类。在UMG编辑器中，向画布添加一个**文本**小部件。使文本变大。首先，将文本槽面板的大小增加到1300
    x 200。有两种方法可以做到这一点：第一种方法是单击边缘并拖动以增加大小。第二种方法是在**详细信息**面板中，您可以将**大小X**设置为`1000`，将**大小Y**设置为`250`。
- en: '![Creating the main menu](img/image00404.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00404.jpeg)'
- en: The text slot is now set. However, the actual size of the text itself is quite
    small. The next thing we need to do is to increase the size of the text. Again
    in the **Details** panel, under the **Appearance** section, you will find the
    **Font** option. At the far right, you can set the value of the font size. By
    default, this value is set as `24`. Increase this to `150`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 文本槽现在已设置。但是，文本本身的实际大小相当小。我们需要做的下一件事是增加文本的大小。同样，在**详细信息**面板下，在**外观**部分，您将找到**字体**选项。在最右边，您可以设置字体大小的值。默认情况下，此值设置为`24`。将其增加到`150`。
- en: '![Creating the main menu](img/image00405.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00405.jpeg)'
- en: 'This is where we will display the name of the game. In the **Content** section,
    you can set what text you want printed on the screen. Whatever you write is displayed
    in the Graph Editor. Remove **Text Block**, and write the name of the game: `Bloques`.
    Finally, adjust the position of the **Text** panel so that the name appears in
    the center of the screen.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将显示游戏名称的地方。在**内容**部分，您可以设置要在屏幕上打印的文本。无论您写什么都会显示在图形编辑器中。删除**文本块**，并写上游戏的名称：`Bloques`。最后，调整**文本**面板的位置，使名称出现在屏幕中央。
- en: '![Creating the main menu](img/image00406.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00406.jpeg)'
- en: The next thing we are going to add is a button which, when the player clicks,
    starts the game. To do this, add a **Button** widget from the **Common** section
    in the **Palette** panel. Place it below the name of the game in the center. Set
    its dimensions as `256 x 64`. We will also need some text to go on the button,
    so drag a **Text** component from the **Palette** panel and drop it over the button.
    The text will get attached to the **Button** widget. You can see in the **Hierarchy**
    panel that the **Text** widget is under the Button widget as a component. Whenever
    you move the Button widget, the Text widget moves along with it. Change the color
    of the font from white to blue so that it is clearly visible.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要添加的下一件事是一个按钮，当玩家点击时，游戏开始。为此，在**调色板**面板的**常用**部分中添加一个**按钮**小部件。将其放置在游戏名称下方的中央位置。将其尺寸设置为`256
    x 64`。我们还需要一些文本放在按钮上，因此从**调色板**面板拖动一个**文本**组件并将其放在按钮上。文本将附加到**按钮**小部件上。您可以在**层次结构**面板中看到**文本**小部件作为组件位于按钮小部件下方。无论您移动按钮小部件，文本小部件都会随之移动。将字体的颜色从白色更改为蓝色，以便清晰可见。
- en: '![Creating the main menu](img/image00407.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00407.jpeg)'
- en: We have our button in place but it does not do anything. We need to script its
    functionality in. With the button selected, go to the **Details** panel and under
    the **Events** section, click on the button next to **OnClicked**. The window
    will switch to the **Graph** window with the **OnClicked** button event node already
    set up.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经放置了按钮，但它什么也没做。我们需要编写其功能。选择按钮后，转到**详细信息**面板，在**事件**部分下，单击**OnClicked**旁边的按钮。窗口将切换到**图形**窗口，**OnClicked**按钮事件节点已经设置好。
- en: '![Creating the main menu](img/image00408.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00408.jpeg)'
- en: To this node, we will attach an **OpenLevel** node. Right-click and search for
    it by typing it in the search bar and attach it to the **OnClicked** node. In
    the **Level Name** input, write in the name of the level you want to open which
    in our case is **Bloques_Game**. Make sure you copy the name of the level properly;
    otherwise, it will not open.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个节点，我们将附加一个**OpenLevel**节点。右键单击并通过在搜索栏中输入来搜索它并将其连接到**OnClicked**节点。在**关卡名称**输入中，写入您想要打开的关卡的名称，我们的情况下是**Bloques_Game**。确保正确复制关卡的名称；否则，它将无法打开。
- en: '![Creating the main menu](img/image00409.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00409.jpeg)'
- en: Finally, we also need to remove the widget; otherwise, it will still be there
    when the level loads. Right-click and select the **Remove from Parent** node and
    connect it to the output pin of the **Open Level** node.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还需要移除小部件；否则，当关卡加载时，它仍然会存在。右键单击并选择**从父级中移除**节点，并将其连接到**打开关卡**节点的输出引脚。
- en: '![Creating the main menu](img/image00410.jpeg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00410.jpeg)'
- en: That is it. It really is that simple to load levels via Blueprints.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。通过蓝图加载关卡真的是如此简单。
- en: We have our Main Menu set up. We have to implement it into our scene. For this,
    open **Level Blueprint**. Before we can display the widget, we first need to create
    it. In the **Event Begin Play** section, right-click and type `create widget`
    to find the Create Widget node and connect them. Next, in the **Class** input,
    click on the dropdown menu and select **Main_Menu.**
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设置好了我们的主菜单。我们需要将其实现到我们的场景中。为此，打开**关卡蓝图**。在我们能够显示小部件之前，我们首先需要创建它。在**事件开始播放**部分，右键单击并输入`create
    widget`以找到创建小部件节点并连接它们。接下来，在**类**输入中，单击下拉菜单并选择**Main_Menu**。
- en: '![Creating the main menu](img/image00411.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00411.jpeg)'
- en: When the level begins, the **Main_Menu** widget will be created. Once created,
    we need to add it to the Viewport so that the player can see it. For this, we
    need an **Add to Viewport** node. Drag the **Return Value** out and release it
    anywhere in the Graph Editor. When the menu opens, type in `Add to Viewport`,
    find it, and add it.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当级别开始时，**Main_Menu** 小部件将被创建。创建后，我们需要将其添加到视口，以便玩家可以看到它。为此，我们需要一个**添加到视口**节点。将**返回值**拖出并释放到图形编辑器的任何位置。当菜单打开时，键入`添加到视口`，找到它，并添加它。
- en: '![Creating the main menu](img/image00412.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00412.jpeg)'
- en: You were to test out the game, you would see that as soon as you run the game,
    the name of the game and the button appear on the screen.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您要测试游戏，您会发现一旦运行游戏，游戏名称和按钮会出现在屏幕上。
- en: '![Creating the main menu](img/image00413.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00413.jpeg)'
- en: However, there are still a few things we can improve. For starters, we can hide
    the virtual joysticks, since they are not required.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有一些事情我们可以改进。首先，我们可以隐藏虚拟摇杆，因为它们不是必需的。
- en: Right-click anywhere in the Graph Editor; turn off **Context Sensitive**; find
    the **Set Virtual Joystick Visibility** node; add it to the Graph Editor; and
    connect it to the **Add to Viewport** node. For the **Target** input, you need
    to create a **Get Player Controller** and attach it to the **Target** input pin.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在图形编辑器的任何位置右键单击；关闭**上下文敏感**；找到**设置虚拟摇杆可见性**节点；将其添加到图形编辑器；并将其连接到**添加到视口**节点。对于**目标**输入，您需要创建一个**获取玩家控制器**并将其附加到**目标**输入引脚。
- en: '![Creating the main menu](img/image00414.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![创建主菜单](img/image00414.jpeg)'
- en: Now run the game. The virtual joysticks will not be visible during runtime.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行游戏。虚拟摇杆在运行时将不可见。
- en: '![Creating the main menu](img/image00415.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: 创建主菜单
- en: If you press on the button, it will load and take you to the game, and as soon
    as the level loads the UI will disappear. This is how you add a main menu to your
    game.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您按下按钮，它将加载并带您进入游戏，一旦级别加载完成，UI 将消失。这就是如何将主菜单添加到您的游戏中。
- en: Installing the Android SDK
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Android SDK
- en: Before we can cook and package our game, we first need to install the Android
    SDK. Luckily, you do not need to find it on the Internet and download it; its
    installation file is available with UE4\. You can find it in **<Location>\ Unreal
    Engine\ 4.7\ Engine\ Extras \ Android**. The file we need is `tadp-2.0r8-windows`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以打包游戏之前，我们首先需要安装 Android SDK。幸运的是，您不需要在互联网上找到并下载它；它的安装文件可以在 UE4\ 的**<位置>\
    Unreal Engine\ 4.7\ Engine\ Extras \ Android** 中找到。我们需要的文件是 `tadp-2.0r8-windows`。
- en: '![Installing the Android SDK](img/image00416.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Android SDK](img/image00416.jpeg)'
- en: Once you find it, double-click on it to run the installation. Once the setup
    opens, all you need to do is to follow the onscreen instructions and let it install.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 找到它后，双击运行安装。一旦设置打开，您只需要按照屏幕上的说明进行操作，让它安装。
- en: Note
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One thing to note is that the setup needs an Internet connection since it downloads
    the build tools; so make sure that you are connected to the Internet when installing
    the SDK tools.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，设置需要互联网连接，因为它会下载构建工具；因此，请确保在安装 SDK 工具时连接到互联网。
- en: Once you have successfully installed the Android SDK files, the next thing you
    need to do is to tell the engine where all the files are (especially if you have
    installed the SDK files in some other location than the default location). To
    do this, you first need to open **Project Settings** (which can be found in the
    Viewport Menu Bar under **Edit**). In the **Project Settings** window under the
    **Platforms** section, select **Android SDK**.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您成功安装了 Android SDK 文件，下一步需要做的是告诉引擎所有文件的位置（特别是如果您将 SDK 文件安装在默认位置之外的其他位置）。为此，您首先需要打开**项目设置**（可以在**编辑**下的视口菜单栏中找到）。在**项目设置**窗口的**平台**部分下，选择**Android
    SDK**。
- en: '![Installing the Android SDK](img/image00417.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Android SDK](img/image00417.jpeg)'
- en: Here, you can tell the engine where all of the folders are located. On the left
    is a list of all the files required to build for Android. On the right, in the
    panel, is where the directory for the corresponding files is set. There are two
    ways to change this. You can either manually type in the location of the folder
    in the panel, or click on the **…** next to the panel. When you click on it, the
    **Browse For Folder** window opens up where you can specify the folder.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以告诉引擎所有文件夹的位置。左侧是构建 Android 所需的所有文件的列表。右侧的面板是设置相应文件目录的地方。有两种方法可以更改这个。您可以在面板中手动输入文件夹的位置，或者单击面板旁边的**…**。单击它时，**浏览文件夹**窗口会打开，您可以在其中指定文件夹。
- en: '![Installing the Android SDK](img/image00418.jpeg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Android SDK](img/image00418.jpeg)'
- en: The first option is for the Android SDK folder. Find the `android-sdk-windows`
    folder and set it.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个选项是针对 Android SDK 文件夹。找到 `android-sdk-windows` 文件夹并设置它。
- en: The second option is for the android NDK files. Find the `android-ndk-r9c` folder
    and set it.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个选项是针对 Android NDK 文件。找到 `android-ndk-r9c` 文件夹并设置它。
- en: The third option is for the ANT files. Find the `apache-ant-1.8.2` folder and
    set it.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个选项是针对 ANT 文件。找到 `apache-ant-1.8.2` 文件夹并设置它。
- en: The fourth option is for the Java files. Find the `jdk1.6.0_45` folder and set
    it. For developers who already have the Java SDK installed, you need to check
    the system environment variables and that the paths are correct.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四个选项是针对 Java 文件。找到 `jdk1.6.0_45` 文件夹并设置它。对于已经安装了 Java SDK 的开发人员，您需要检查系统环境变量和路径是否正确。
- en: You can have different folder names; you just need to make sure that the appropriate
    folder is currently assigned.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以有不同的文件夹名称；您只需要确保当前分配了适当的文件夹。
- en: The next two options are to specify which version of the SDK and NDK tools to
    use. The Android SDK files have now been installed and set up. The next thing
    to do is set up your Android device for testing.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的两个选项是指定要使用的 SDK 和 NDK 工具的版本。Android SDK 文件现在已经安装并设置好了。接下来要做的是为测试设置您的 Android
    设备。
- en: Setting up the Android device
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Android 设备
- en: When developing games, it is natural that you would want to test your game from
    time to time to see whether it is working smoothly and properly on the device.
    Instead of having to first package your game, put it on your device, and then
    test it, you have the option to directly build and run the game on Android devices.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发游戏时，您自然会想要不时地测试游戏，看看它在设备上是否运行顺畅。您可以选择直接在安卓设备上构建和运行游戏，而不是首先打包游戏，将其放在设备上，然后测试它。
- en: To do this, the first thing is to enable the Developer mode on your device.
    This can usually be found in **Settings** | **About phone**. Here, you need to
    find **Build number** and tap on it several times. If done correctly, you will
    get a prompt saying **You are now a developer** (in some devices or versions of
    Android, the **Build number** option is located within **More**). Once that is
    done, a new section called **Developer Options** will be available to you; open
    that and enable **USB debugging**.![Setting up the Android device](img/image00419.jpeg)
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，首先要在您的设备上启用开发者模式。这通常可以在**设置** | **关于手机**中找到。在这里，您需要找到**构建号**并多次点击它。如果操作正确，您将收到一个提示，上面写着**您现在是开发者**（在某些设备或安卓版本中，**构建号**选项位于**更多**中）。完成后，将会有一个名为**开发者选项**的新部分可供您使用；打开它并启用**USB调试**。![设置安卓设备](img/image00419.jpeg)
- en: Once done, connect your device to the system and let it install the drivers.
    Your device is now ready for testing. To check whether it has been properly set
    up, in the **Editor Viewport Toolbar** click on the little arrow next to **Launch**
    and see whether your Android device is listed under **Devices**. If it is, that
    means that it has been properly set up. Some devices do not automatically install
    the driver. In such cases, it is advised that you download the respective driver
    from the company's website.![Setting up the Android device](img/image00420.jpeg)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，将您的设备连接到系统并让其安装驱动程序。您的设备现在已准备好进行测试。要检查是否已正确设置，在**编辑器视口工具栏**中点击**启动**旁边的小箭头，看看您的安卓设备是否列在**设备**下。如果是，那意味着它已经正确设置。一些设备不会自动安装驱动程序。在这种情况下，建议您从公司的网站上下载相应的驱动程序。![设置安卓设备](img/image00420.jpeg)
- en: Once set up, we can now test our game on our Android device. To do so, click
    on the Android device listed under **Devices**. Once clicked, UE4 will start packaging
    the game and deploying it for the device. You can see a pop-up at the bottom-right
    corner of the screen.![Setting up the Android device](img/image00421.jpeg)
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置好后，我们现在可以在我们的安卓设备上测试游戏。要这样做，点击**设备**下列出的安卓设备。一旦点击，UE4将开始打包游戏并为设备部署。您可以在屏幕右下角看到一个弹出窗口。![设置安卓设备](img/image00421.jpeg)
- en: To stop the build process, click on the **Cancel** button. To see the output
    log of the building process, click on **Show Output Log** which opens the log
    window, where you can see what is being executed. You can also see where the error
    has happened if one occurs. Once the build process is over, it will automatically
    start on your device. The `.apk` file will also be installed.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要停止构建过程，请点击**取消**按钮。要查看构建过程的输出日志，请点击**显示输出日志**，这将打开日志窗口，您可以看到正在执行的内容。如果发生错误，您还可以看到错误发生的位置。一旦构建过程结束，它将自动在您的设备上启动。`.apk`文件也将被安装。
- en: Packaging the project
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打包项目
- en: Another way of packaging the game and testing it on your device is to first
    package the game, import it to the device, install it, and then play it. But first,
    we should discuss some settings regarding packaging, and packaging for Android.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种打包游戏并在设备上测试的方法是首先打包游戏，将其导入设备，安装它，然后进行游戏。但首先，我们应该讨论一些关于打包和安卓打包的设置。
- en: The Maps & Modes settings
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地图和模式设置
- en: These settings deal with the maps (scenes) and the game mode of the final game.
    In the Editor, click on **Edit** and select **Project** settings. In the **Project**
    settings, **Project** category, select **Maps & Modes**.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置涉及最终游戏的地图（场景）和游戏模式。在编辑器中，点击**编辑**并选择**项目**设置。在**项目**设置的**项目**类别中，选择**地图和模式**。
- en: '![The Maps & Modes settings](img/image00422.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![地图和模式设置](img/image00422.jpeg)'
- en: 'Let''s go over the various sections:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看各个部分：
- en: '**Default Maps**: Here, you can set which map the Editor should open when you
    open the Project. You can also set which map the game should open when it is run.
    The first thing you need to change is the main menu map we had created. To do
    this, click on the downward arrow next to **Game Default Map** and select **Main_Menu**.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认地图**：在这里，您可以设置编辑器在打开项目时应该打开哪个地图。您还可以设置游戏在运行时应该打开哪个地图。您需要更改的第一件事是我们创建的主菜单地图。要做到这一点，点击**游戏默认地图**旁边的向下箭头，并选择**Main_Menu**。'
- en: '**Local Multiplayer**: If your game has local multiplayer, you can alter a
    few settings regarding whether the game should have a split screen. If so, you
    can set what the layout should be for two and three players.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地多人游戏**：如果您的游戏支持本地多人游戏，您可以修改一些关于游戏是否应该有分屏的设置。如果是，您可以设置两个和三个玩家的布局应该是什么样子。'
- en: '**Default Modes**: In this section, you can set the default game mode the game
    should run with. The game mode includes things such as the **Default Pawn** class,
    **HUD** class, **Controller** class, and the **Game State Class**. For our game,
    we will stick to **MyGame**.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认模式**：在这个部分，您可以设置游戏应该使用的默认游戏模式。游戏模式包括**默认Pawn**类、**HUD**类、**Controller**类和**Game
    State Class**等内容。对于我们的游戏，我们将坚持使用**MyGame**。'
- en: '**Game Instance**: Here, you can set the default **Game Instance Class**.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏实例**：在这里，您可以设置默认的**游戏实例类**。'
- en: The Packaging settings
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打包设置
- en: There are settings you can tweak when packaging your game. To access those settings,
    first go to **Edit** and open the **Project** settings window. Once opened, under
    the **Project** section click on **Packaging**.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在打包游戏时，您可以调整一些设置。要访问这些设置，首先转到**编辑**并打开**项目**设置窗口。一旦打开，在**项目**部分下点击**打包**。
- en: '![The Packaging settings](img/image00423.jpeg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![打包设置](img/image00423.jpeg)'
- en: 'Here, you can view and tweak the general settings related to packaging the
    project file. There are two sections: **Project** and **Packaging**. Under the
    **Project** section, you can set options such as the directory of the packaged
    project, the build configuration to either debug, development, or shipping, whether
    you want UE4 to build the whole project from scratch every time you build, or
    only build the modified files and assets, and so on.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以查看和调整与打包项目文件相关的一般设置。有两个部分：**项目**和**打包**。在**项目**部分，你可以设置选项，比如打包项目的目录、构建配置是调试、开发还是发布，是否希望UE4每次构建时都从头开始构建整个项目，或者只构建修改过的文件和资源等等。
- en: Under the **Packaging** settings, you can set things such as whether you want
    all files to be under one `.pak` file instead of many individual files, whether
    you want those `.pak` files in chunks, and so on. Clicking on the downward arrow
    will open the advanced settings.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在**打包**设置下，你可以设置诸如是否希望所有文件都打包到一个`.pak`文件中而不是许多单独的文件，是否希望这些`.pak`文件分块等等。点击向下的箭头将打开高级设置。
- en: Here, since we are packaging our game for distribution check the **For Distribution**
    checkbox.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，因为我们正在为分发打包游戏，请勾选**用于分发**复选框。
- en: The Android app settings
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安卓应用程序设置
- en: In the preceding section, we talked about the general packaging settings. We
    will now talk about settings specific to Android apps. This can be found in Project
    Settings, under the **Platforms** section. In this section, click on **Android**
    to open the Android app settings.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分，我们谈到了一般的打包设置。现在我们将讨论特定于安卓应用程序的设置。这可以在项目设置中的**平台**部分找到。在这个部分，点击**安卓**以打开安卓应用程序设置。
- en: '![The Android app settings](img/image00424.jpeg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![安卓应用程序设置](img/image00424.jpeg)'
- en: 'Here you will find all the settings and properties you need to package your
    game. At the top the first thing you should do is configure your project for Android.
    If your project is not configured, it will prompt you to do so (since version
    4.7, UE4 automatically creates the `androidmanifest.xml` file for you). Do this
    before you do anything else. Here you have various sections. These are:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里你会找到所有打包游戏所需的设置和属性。首先要做的是配置你的项目以适配安卓。如果你的项目没有配置，它会提示你这样做（自4.7版本以来，UE4会自动为你创建`androidmanifest.xml`文件）。在做其他任何事情之前，请先配置好这个。这里有各种部分。它们是：
- en: '**APKPackaging**: In this section, you can find options such as opening the
    folder where all of the build files are located, setting the package''s name,
    setting the version number, what the default orientation of the game should be,
    and so on.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**APK打包**：在这个部分，你可以找到选项，比如打开包含所有构建文件的文件夹，设置包的名称，设置版本号，游戏的默认方向等等。'
- en: '**Advanced APKPackaging**: This section contains more advanced packaging options,
    such as one to add extra settings to the `.apk` files.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级APK打包**：这个部分包含更高级的打包选项，比如为`.apk`文件添加额外设置。'
- en: '**Build**: To tweak settings in the **Build** section, you first need the source
    code which is available from GitHub. Here, you can set things like whether you
    want the build to support x86, OpenGL ES2, and so on.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建**：要调整**构建**部分的设置，你首先需要从GitHub获取源代码。在这里，你可以设置诸如是否希望构建支持x86、OpenGL ES2等等的选项。'
- en: '**Distribution Signing**: This section deals with signing your app. It is a
    requirement on Android that all apps have a digital signature. This is so that
    Android can identify the developers of the app. You can learn more about digital
    signatures by clicking on the hyperlink at the top of the section. When you generate
    the key for your app, be sure to keep it in a safe and secure place since if you
    lose it you will not be able to modify or update your app on Google Play.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分发签名**：这个部分涉及到给你的应用签名。在安卓上，所有应用都需要数字签名。这是为了让安卓能够识别应用的开发者。你可以点击部分顶部的超链接了解更多关于数字签名的信息。当你为你的应用生成密钥时，一定要把它保存在一个安全的地方，因为如果你丢失了它，你将无法在Google
    Play上修改或更新你的应用。'
- en: '**Google Play Service**: Android apps are downloaded via the Google Play store.
    This section deals with things such as enabling/disabling Google Play support,
    setting your app''s ID, the Google Play license key, and so on.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Play服务**：安卓应用通过Google Play商店下载。这个部分涉及到启用/禁用Google Play支持、设置你的应用ID、Google
    Play许可证密钥等等。'
- en: '**Icons**: In this section, you can set your game''s icons. You can set various
    sizes of icons depending upon the screen density of the device you are aiming
    to develop on. You can get more information about icons by click on the hyperlink
    at the top of the section.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图标**：在这个部分，你可以设置你游戏的图标。你可以根据设备的屏幕密度设置各种尺寸的图标。你可以点击部分顶部的超链接获取更多关于图标的信息。'
- en: '**Data Cooker**: Finally, in this section, you can set how you want the audio
    in the game to be encoded.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据烹饪器**：最后，在这个部分，你可以设置游戏中音频的编码方式。'
- en: For our game, the first thing you need to set is the **Android Package Name**
    which is found in the **APKPackaging** section. The format of the naming is `com.YourCompany.[PROJECT]`.
    Here, replace `YourCompany` with the name of the company and `[PROJECT]` with
    the name of your project.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的游戏，你需要设置的第一件事是**安卓包名**，它在**APK打包**部分找到。命名的格式是`com.YourCompany.[PROJECT]`。在这里，用公司的名字替换`YourCompany`，用你的项目名替换`[PROJECT]`。
- en: '![The Android app settings](img/image00425.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![安卓应用程序设置](img/image00425.jpeg)'
- en: Building a package
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建一个包
- en: To package your project, in the Editor go to **File** | **Package Project**
    | **Android**.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要打包你的项目，在编辑器中转到**文件** | **打包项目** | **安卓**。
- en: '![Building a package](img/image00426.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![构建一个包](img/image00426.jpeg)'
- en: 'You will see different types of formats to package the project in. These are
    as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到不同类型的格式来打包项目。它们如下：
- en: '**ATC**: Use this format if you have a device that has a Qualcomm Snapdragon
    processor.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ATC**：如果你有一个配备高通骁龙处理器的设备，请使用这种格式。'
- en: '**DXT**: Use this format if your device has a Tegra graphical processing unit
    (GPU).'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DXT**：如果你的设备有Tegra图形处理单元（GPU），请使用这种格式。'
- en: '**ETC1**: You can use this for any device. However, this format does not accept
    textures with alpha channels. Those textures will be uncompressed, making your
    game requiring more space.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ETC1**：您可以在任何设备上使用这种格式。但是，此格式不接受带有alpha通道的纹理。这些纹理将不被压缩，使您的游戏需要更多的空间。'
- en: '**ETC2**: Use this format is you have a MALI-based device.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ETC2**：如果您有一台MALI设备，请使用这种格式。'
- en: '**PVRTC**: Use this format if you have a device with a PowerVR GPU.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PVRTC**：如果你有一台搭载PowerVR GPU的设备，请使用这种格式。'
- en: Once you have decided upon which format to use, click on it to begin the packaging
    process. A window will open up asking you to specify which folder you want the
    package to be stored in.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您决定使用哪种格式，点击它开始打包过程。将打开一个窗口，要求您指定要将包存储在哪个文件夹中。
- en: '![Building a package](img/image00427.jpeg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![构建包](img/image00427.jpeg)'
- en: Once you have decided where to store the package file, click **OK** and the
    build process will commence. When started, just like with launching the project,
    a small window will pop up at the bottom-right corner of the screen notifying
    the user that the build process has begun. You can open the output log and cancel
    the build process.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您决定在哪里存储包文件，点击**确定**，构建过程将开始。开始后，就像启动项目一样，屏幕右下角会弹出一个小窗口，通知用户构建过程已经开始。您可以打开输出日志并取消构建过程。
- en: Once the build process is complete, go the folder you set.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 构建过程完成后，转到您设置的文件夹。
- en: '![Building a package](img/image00428.jpeg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![构建包](img/image00428.jpeg)'
- en: You will find a `.bat` file of the game. Providing you have checked the packaged
    game data inside `.apk?` option (which is located in the Project settings in the
    Android category under the **APKPackaging** section), you will also find an `.apk`
    file of the game.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中会找到一个`.bat`文件。假设你已经在Android类别的**APK打包**部分的项目设置中勾选了`.apk?`选项（位于包装游戏数据内），你也会找到游戏的`.apk`文件。
- en: The `.bat` file directly installs the game from the system onto your device.
    To do so, first connect your device to the system. Then double-click on the `.bat`
    file. This will open a command prompt window.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`.bat`文件直接将游戏从系统安装到您的设备上。要这样做，首先将您的设备连接到系统。然后双击`.bat`文件。这将打开一个命令提示符窗口。'
- en: '![Building a package](img/image00429.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![构建包](img/image00429.jpeg)'
- en: Once it has opened, you do not need to do anything. Just wait until the installation
    process finishes. Once the installation is done, the game will be on your device
    ready to be executed.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦打开，您无需做任何操作。只需等待安装过程完成。安装完成后，游戏将在您的设备上准备好执行。
- en: 'To use the `.apk` file, you will have to do things a bit differently. An `.apk`
    file installs the game when it is on the device. For that, you need to perform
    the following steps:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`.apk`文件，您需要以略有不同的方式进行操作。`.apk`文件在设备上安装游戏。为此，您需要执行以下步骤：
- en: Connect the device.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接设备。
- en: Create a copy of the `.apk` file.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`.apk`文件的副本。
- en: Paste it in the device's storage.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其粘贴到设备的存储中。
- en: Execute the `.apk` file from the device.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从设备执行`.apk`文件。
- en: The installation process will begin. Once completed, you can play the game.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程将开始。完成后，您可以玩游戏。
- en: Developer Console
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发者控制台
- en: Before we talk about how to publish the game on the Google Play Store, we first
    need to talk about the **Developer Console** from where you manage your app. This
    includes uploading and removing the app to and from the Play Store, filling in
    the app's description, setting the price of the app, and so on. However, before
    you can access the **Developer Console**, you first need to register. The cost
    to register is $25\. The link to the signup page is [https://play.google.com/apps/publish/signup/](https://play.google.com/apps/publish/signup/).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈论如何在Google Play商店上发布游戏之前，我们首先需要谈论一下**开发者控制台**，从那里您可以管理您的应用程序。这包括将应用程序上传到Play商店和从中删除，填写应用程序描述，设置应用程序价格等。但是，在您可以访问**开发者控制台**之前，您首先需要注册。注册费用为25美元。注册页面的链接是[https://play.google.com/apps/publish/signup/](https://play.google.com/apps/publish/signup/)。
- en: '![Developer Console](img/image00430.jpeg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![开发者控制台](img/image00430.jpeg)'
- en: Once registered, go to the **Developer Console** page.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，转到**开发者控制台**页面。
- en: '![Developer Console](img/image00431.jpeg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![开发者控制台](img/image00431.jpeg)'
- en: Here, click on the **Add new application button** located at the top-right corner.
    When clicked, a window will open where you can set the language and set the name
    of the game as `Bloques`. Once set, click on **Upload APK**. Once clicked, you
    will see several options regarding the app.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，点击位于右上角的**添加新应用程序按钮**。单击后，将打开一个窗口，您可以在其中设置语言并将游戏名称设置为`Bloques`。设置完成后，点击**上传APK**。点击后，您将看到有关应用程序的几个选项。
- en: At the top, you can see the name of the app, Bloques. Below it on the left-hand
    side are several panels. At the center are the available settings or options in
    the corresponding panel.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部，您可以看到应用程序的名称Bloques。在左侧下方是几个面板。在中间是相应面板中可用的设置或选项。
- en: ALL APPLICATIONS
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 所有应用程序
- en: Here is where all the apps and/or games you have published, or are in the process
    of publishing, are displayed.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了您已发布或正在发布的所有应用程序和/或游戏。
- en: '![ALL APPLICATIONS](img/image00432.jpeg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![所有应用程序](img/image00432.jpeg)'
- en: The applications that are not published yet and or in the process of being uploaded
    to the Play Store are saved as Drafts. You can also check things such as how many
    download/installs your app has had, the price, when the app was last updated,
    and so on. Clicking on any of the apps listed will open the app page, wherein
    you can set various properties and options for it.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 尚未发布或正在上传到Play商店的应用程序将被保存为草稿。您还可以检查应用程序的下载/安装次数、价格、最后更新时间等信息。单击列出的任何应用程序将打开应用程序页面，在其中您可以为其设置各种属性和选项。
- en: APK
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: APK
- en: The **APK** panel is opened by default. Here you can choose whether you want
    to publish the game on the Play Store.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**APK**面板默认打开。在这里，您可以选择是否要在Play商店上发布游戏。'
- en: '![APK](img/image00433.jpeg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![APK](img/image00433.jpeg)'
- en: If you are in the process of developing your app or game and want to test your
    product in the market, as well as get some feedback before you publish the final
    product, you can set up a beta test by uploading your app from the **BETA TESTING**
    tab. If you wish to have more controlled testing of your app, for instance only
    being able to download if you have an invite or a key code, then you can set up
    an alpha test by uploading your product from the **ALPHA TESTING** tab.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在开发应用或游戏，并希望在发布最终产品之前在市场上测试您的产品，并获得一些反馈，您可以通过从**BETA测试**选项卡上传您的应用来设置一个测试版。如果您希望对您的应用进行更受控制的测试，例如只能在有邀请或密钥代码的情况下下载，那么您可以通过从**ALPHA测试**选项卡上传您的产品来设置一个内测版。
- en: Store Listing
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 商店列表
- en: The next step panel is the **Store Listing** panel. This panel contains all
    of the options related to how the app is going to be displayed in the Google Play.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是**商店列表**面板。该面板包含了与应用在Google Play中的显示方式相关的所有选项。
- en: '![Store Listing](img/image00434.jpeg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![商店列表](img/image00434.jpeg)'
- en: Here you need to fill out the details regarding your app. These details will
    be displayed in the Play Store when the user clicks on it. There are five sections
    in this panel.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您需要填写关于您的应用的详细信息。当用户点击应用时，这些详细信息将显示在Play商店中。该面板有五个部分。
- en: The first section is **PRODUCT DETAILS**. Here you can set the name of the app,
    a short description about your app (which should be short and interesting enough
    to get the users' attention), and a full description about your app (which contains
    a full description of what the app is, its feature set, and so on).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分是**产品详细信息**。在这里，您可以设置应用的名称，关于您的应用的简短描述（应该足够简短和有趣，以吸引用户的注意力），以及关于您的应用的完整描述（其中包含应用的完整描述、其功能集等）。
- en: The next section is **Graphic Assets**. Here you need to post screenshots of
    your game. Since there are various Android devices, each with different screen
    sizes and screen resolutions, you need to add several screenshots of various resolutions
    so that the screenshots are not stretched or compressed on any device. You need
    to add a minimum of two screenshots; the maximum number of screenshots you can
    add is eight. The required sizes for various devices is given, so you can check
    and set them up accordingly. Apart from adding screenshots, you can also add a
    video which could be a trailer or a gameplay video of your app.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是**图形资产**。在这里，您需要发布游戏的屏幕截图。由于有各种不同屏幕尺寸和分辨率的Android设备，您需要添加多个不同分辨率的屏幕截图，以便在任何设备上不会被拉伸或压缩。您需要至少添加两个屏幕截图；您可以添加的最大屏幕截图数量为八个。给出了各种设备的所需尺寸，因此您可以检查并相应地设置它们。除了添加屏幕截图，您还可以添加一个视频，可以是应用的预告片或游戏过程视频。
- en: Following **Graphic Assets** is the **Categorization** panel. This deals with
    how your app will be categorized in the Play Store. Here you need to specify whether
    your product is an app or a game. After setting that, you will need to specify
    in what category your product lies; if you have picked **Applications**, the options
    you get under category would be **Books and References**, **Education**, **Business**,
    **Finance**, **Lifestyle**, and so on. If you have picked Games, you will have
    to set its genre under Board Game, Puzzle Game, Casual Game, and so on. Finally,
    you also need to set the **Content Rating** for your app.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图形资产**之后是**分类**面板。这涉及到您的应用将在Play商店中如何分类。在这里，您需要指定您的产品是应用还是游戏。设置完后，您需要指定您的产品属于哪个类别；如果您选择了**应用程序**，则在类别下您会得到**图书和参考资料**、**教育**、**商业**、**金融**、**生活方式**等选项。如果您选择了游戏，您将需要在棋盘游戏、益智游戏、休闲游戏等下设置其类型。最后，您还需要为您的应用设置**内容评级**。
- en: Next, we have the **Contact Details** wherein you can post your website or your
    company's website, contact email address, and phone number.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是**联系方式**，您可以在其中发布您的网站或公司的网站、联系电子邮件地址和电话号码。
- en: Finally, in the **Privacy Policy** section you provide a privacy policy for
    your app.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在**隐私政策**部分，您需要为您的应用提供隐私政策。
- en: Content Rating
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内容评级
- en: Content rating is an important aspect of any game or app. Google Play also offers
    its own content rating.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 内容评级是任何游戏或应用的重要方面。Google Play也提供了自己的内容评级。
- en: '![Content Rating](img/image00435.jpeg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![内容评级](img/image00435.jpeg)'
- en: Even though there is a **Content Rating** section in **Store Listing**, this
    is a much more comprehensive and extensive rating system. With the help of a questionnaire
    with various questions regarding the app/game and its content, Google will rate
    your product. But to get the questionnaire you will first have to upload your
    app.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管**商店列表**中有一个**内容评级**部分，但这是一个更全面和广泛的评级系统。通过一个包含有关应用/游戏及其内容的各种问题的问卷调查，Google将对您的产品进行评级。但是要获得问卷调查，您首先需要上传您的应用。
- en: Pricing & Distribution
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定价和分发
- en: This section contains everything related to the cost of your app and where your
    app will be available for download.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 该部分包含了与您的应用成本以及您的应用将在哪里提供下载相关的一切。
- en: '![Pricing & Distribution](img/image00436.jpeg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![定价和分发](img/image00436.jpeg)'
- en: At the top, you can set whether your app is **Free** or **Paid**. If you want
    your app to be paid, you will first have to set up a merchant account.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部，您可以设置您的应用是**免费**还是**付费**。如果您希望您的应用是付费的，您首先需要设置一个商户账户。
- en: Below that is a list of countries. You can choose in which country you want
    your app to be available by clicking on the checkbox. If you want your app to
    be available worldwide, check **SELECT ALL COUNTRIES** and all of the tick boxes
    will be checked.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面是一个国家列表。您可以通过点击复选框选择您希望您的应用在哪个国家可用。如果您希望您的应用在全球范围内可用，请勾选**选择所有国家**，所有复选框都将被选中。
- en: In-app Products
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用内产品
- en: This section contains settings regarding in-app products.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 该部分包含有关应用内产品的设置。
- en: '![In-app Products](img/image00437.jpeg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![应用内产品](img/image00437.jpeg)'
- en: A popular monetization method used by developers is in-app purchases. These
    are virtual goods that can be bought using real currency. Here, you can manage
    your in-app products and set items such as price, what is available to purchase,
    and so on. However, if you want to have in-app purchases in your game or app,
    you will first have to set up a merchant account.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员使用的一种流行的货币化方法是应用内购买。这些是可以用真实货币购买的虚拟商品。在这里，您可以管理您的应用内产品，并设置价格、可购买的物品等。然而，如果您想在您的游戏或应用中进行应用内购买，您首先必须设置一个商户账户。
- en: Services & APIs
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 服务和API
- en: This is where you can see what services offered by Google are currently active
    in your app/game.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您可以看到Google提供的服务在您的应用/游戏中当前是否处于活动状态的地方。
- en: '![Services & APIs](img/image00438.jpeg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![服务和API](img/image00438.jpeg)'
- en: These services include Google Cloud Messaging, which you can use to send information
    and data from the servers to your app or game; licensing, which prevents piracy
    and unauthorized distribution of your product and is used to verify in-app purchases;
    and Google Play services, which includes leaderboards, achievements, push notifications,
    and many more.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务包括Google云消息传递，您可以使用它将信息和数据从服务器发送到您的应用或游戏；许可证，它可以防止盗版和未经授权的产品分发，并用于验证应用内购买；以及Google
    Play服务，其中包括排行榜、成就、推送通知等等。
- en: GAME SERVICES
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏服务
- en: As previously discussed, Google offers various services for app developers.
    This is where you can set what services you want on your app/game.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Google为应用开发人员提供各种服务。这是您可以设置您的应用/游戏上想要的服务的地方。
- en: '![GAME SERVICES](img/image00439.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![游戏服务](img/image00439.jpeg)'
- en: When you go to this panel, you will see a list of apps that you have produced,
    similar to that in the **All Applications** panel. Here, you can view what platforms
    your app or game is on, what achievements you have in your game, your leaderboards,
    and how many unique players have signed in to your game using their Google account.
    As with **All Applications**, clicking on the name of the app will open a page
    wherein you have several options regarding these services.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 当您进入这个面板时，您会看到您制作的应用的列表，类似于**所有应用**面板中的列表。在这里，您可以查看您的应用或游戏在哪些平台上，您的游戏中有哪些成就，您的排行榜，以及有多少独特的玩家使用他们的Google账户登录到您的游戏。与**所有应用**一样，点击应用的名称将打开一个页面，在那里您可以选择关于这些服务的几个选项。
- en: Let's discuss these sections individually.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分别讨论这些部分。
- en: Game details
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 游戏详情
- en: Here you can set the general details regarding your app/game.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以设置有关您的应用/游戏的一般详情。
- en: '![Game details](img/image00440.jpeg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![游戏详情](img/image00440.jpeg)'
- en: These general details include your app's display name, its description, category,
    graphic assets, and so on. You can change the settings for these here as well.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这些一般详情包括您应用的显示名称、描述、类别、图形资产等。您也可以在这里更改这些设置。
- en: Linked apps
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 已链接的应用
- en: To be able to use Google Services, you will first have to link your app.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够使用Google服务，您首先必须链接您的应用。
- en: '![Linked apps](img/image00441.jpeg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![已链接的应用](img/image00441.jpeg)'
- en: Linking your app will generate an OAuth2 key, which you will need to include
    in your app's binary before you can make use of these services. Here you can choose
    different platforms for your app, namely Android, iOS, Web, and others. Clicking
    on any one of them will open a page wherein you have to fill in certain details
    before you can link your app. We will come back to this in the later sections.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 链接您的应用将生成一个OAuth2密钥，您需要在应用的二进制文件中包含它，然后才能使用这些服务。在这里，您可以为您的应用选择不同的平台，即Android、iOS、Web等。点击其中任何一个将打开一个页面，在那里您必须填写某些细节，然后才能链接您的应用。我们将在后面的部分再回到这个问题。
- en: Events
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事件
- en: Getting users to download your app is one thing. To ensure that the users who
    have downloaded your app or game keep using them, in other words user retention,
    is a whole different area of expertise and equally important, if not more. The
    next three panels are for just that. The first is the **Events** panel.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 让用户下载您的应用是一回事。确保已下载您的应用或游戏的用户继续使用它们，换句话说用户留存，是一个完全不同的专业领域，同样重要，甚至更重要。接下来的三个面板就是为此而设的。第一个是**活动**面板。
- en: '![Events](img/image00442.jpeg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![活动](img/image00442.jpeg)'
- en: Once you have a sizable number of users, you can start having periodic events
    and rewards for users who participate in or win this event. Events can include
    weekly contests, discounts on in-game products, and so on. This is a great way
    to keep the users engaged in your game. To add an event, click on **Add Event**
    which will take you to the **Event** page wherein you can fill in the details
    regarding the event.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您拥有了大量用户，您可以开始为参与或赢得活动的用户提供定期活动和奖励。活动可以包括每周比赛、游戏产品折扣等。这是保持用户参与游戏的好方法。要添加一个活动，点击**添加活动**，这将带您到**活动**页面，在那里您可以填写有关活动的详细信息。
- en: Achievements
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 成就
- en: Another way of retaining users is creating achievements. Achievements are goals
    or tasks that the player has to perform in the game in order to unlock the respective
    achievement. This could include things like playing the game *X* number of times,
    killing *Y* number of enemies, and so on. Usually, when the player unlocks an
    achievement, they are rewarded with some in-game currency or something similar.
    Achievements are ideal for retaining perfectionist players who play to finish
    the game completely. This means finishing the game (providing it has an ending),
    unlocking anything and everything that is unlockable, and unlocking every achievement
    in the game. It is also a necessary component of your game since you need at least
    five achievements before you can publish your game.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 保留用户的另一种方法是创建成就。成就是玩家必须在游戏中执行的目标或任务，以解锁相应的成就。这可能包括像玩游戏*X*次数，杀死*Y*个敌人等。通常，当玩家解锁成就时，他们会获得一些游戏内货币或类似的东西作为奖励。成就非常适合保持完美主义者玩家，他们玩游戏以完成游戏。这意味着完成游戏（如果有结局的话），解锁所有可解锁的内容，并解锁游戏中的每个成就。这也是您的游戏的必要组成部分，因为您至少需要五个成就才能发布您的游戏。
- en: '![Achievements](img/image00443.jpeg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![成就](img/image00443.jpeg)'
- en: To add an achievement, click on the **Add achievement** button which will take
    you to the **achievement details** page. Here, you can set all of your achievement
    details, such as the name of the achievement, a description about how it can be
    unlocked, an icon, and so on.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加一个成就，点击**添加成就**按钮，它会带你到**成就详情**页面。在这里，你可以设置所有成就的细节，比如成就的名称、如何解锁的描述、图标等等。
- en: Leaderboards
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 排行榜
- en: Last, but not least, we have **Leaderboards**. Leaderboards are yet another
    way of retaining players, especially competitive players who play to get the highest
    score. A leaderboard is sort of a list where the names of players who have scored
    the highest points in your game are displayed in descending order.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，但同样重要的是**排行榜**。排行榜是另一种留住玩家的方式，尤其是那些为了获得最高分而竞争的玩家。排行榜是一种列表，显示了在你的游戏中得分最高的玩家的名字，按照降序排列。
- en: '![Leaderboards](img/image00444.jpeg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![排行榜](img/image00444.jpeg)'
- en: To add a leaderboard, click on the **Add leaderboard** button, which will take
    you to the **leaderboard details** page. On this page, you can set various options,
    such as the name, the format, the upper and lower limit of the leaderboard, and
    so on.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加一个排行榜，点击**添加排行榜**按钮，它会带你到**排行榜详情**页面。在这个页面上，你可以设置各种选项，比如名称、格式、排行榜的上限和下限等等。
- en: Testing
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试
- en: This section contains various options regarding testing the Google Play services
    on your app/game. Before you publish your game, it is advisable that you first
    test your app to ensure that everything is working properly and if a problem does
    arise, fix it before releasing.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 这个部分包含了关于在你的应用/游戏上测试Google Play服务的各种选项。在发布游戏之前，建议你先测试你的应用，以确保一切正常运行，如果出现问题，及时修复再发布。
- en: '![Testing](img/image00445.jpeg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![测试](img/image00445.jpeg)'
- en: Here, you can see whether the services are ready to test or not. If not, you
    will be told what is required before the testing can begin. You can also invite
    other people to test your app/game by clicking on the **Add testers** button and
    entering in their respective Google account details.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到服务是否准备好测试。如果没有，你将被告知在测试开始之前需要什么。你还可以通过点击**添加测试人员**按钮并输入他们各自的Google账户信息来邀请其他人测试你的应用/游戏。
- en: Publishing
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发布
- en: Finally, there is the **Publishing** section. Once you have filled out all of
    the details, added screenshots, set up the Google Play services, tested them and
    are confident that your product is ready to be published, you can publish it.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有**发布**部分。一旦你填写了所有细节，添加了截图，设置了Google Play服务，测试了它们并且确信你的产品已经准备好发布，你就可以发布它。
- en: '![Publishing](img/image00446.jpeg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![发布](img/image00446.jpeg)'
- en: Here, you can see whether your app/game is ready to be published or not. If
    it is not ready, you can see what is missing and what you need to do before you
    publish. If your game is already published and you want to remove it from the
    Play Store, you can do so by clicking on the **Delete your game** button.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到你的应用/游戏是否准备好发布。如果没有准备好，你可以看到缺少什么，以及在发布之前需要做什么。如果你的游戏已经发布，并且你想要将其从Play商店中移除，你可以通过点击**删除你的游戏**按钮来这样做。
- en: REPORTS
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 报告
- en: In the **REPORTS** panel, you can view things such as reviews, **Crashes & ANRs**,
    **Statistics**, and so on.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在**报告**面板中，你可以查看评论、**崩溃和ANR**、**统计**等内容。
- en: '![REPORTS](img/image00447.jpeg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![报告](img/image00447.jpeg)'
- en: 'Here too are various sections, all containing different reports:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这里也有各种部分，都包含不同的报告：
- en: '**Crashes & ANRs**: In this section, you can view reports related to game crashes
    and ANRs. Game crashes are a frequent occurrence. Even if your game is properly
    optimized, there are still some unforeseen issues that might occur—some minor
    and some major. To retain your users, you will have to fix these crashes; otherwise,
    they will get frustrated and delete your game. Here you can view crash reports
    for all of the games and apps you have published and accordingly work to debug
    them. ANRs appear when your app stops responding on a device similar to the **Not
    Responding** prompt you get in Windows and Mac. This is different from crashes
    since when a game crashes the application stops. When an ANR occurs, the application
    still runs on the device, but does not respond. This is equally important to resolve.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**崩溃和ANR**: 在这个部分，你可以查看与游戏崩溃和ANR相关的报告。游戏崩溃是经常发生的。即使你的游戏经过了良好的优化，仍然可能会出现一些意外问题，有些是小问题，有些是大问题。为了留住你的用户，你必须解决这些崩溃；否则，他们会感到沮丧并删除你的游戏。在这里，你可以查看你发布的所有游戏和应用的崩溃报告，并相应地进行调试。ANR出现在你的应用在类似于Windows和Mac上收到的**未响应**提示的设备上停止响应时。这与崩溃不同，因为当游戏崩溃时，应用程序停止运行。当ANR发生时，应用程序仍在设备上运行，但不响应。解决这个问题同样重要。'
- en: '**Reviews**: A good way to see how well your game or app is doing in the market
    is by reading its reviews. It is also a great way of learning the shortcomings
    of your game or app. You can use this information when creating a sequel or planning
    to develop an update. You can also get information about any bugs that are present
    in the game and use that knowledge to resolve them.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**评论**: 了解你的游戏或应用在市场上的表现如何的一个好方法就是阅读它的评论。这也是了解你的游戏或应用的不足之处的好方法。你可以在创建续集或计划开发更新时使用这些信息。你还可以获取关于游戏中存在的任何错误的信息，并利用这些知识来解决它们。'
- en: '**Statistics**: This section shows you how many people are playing the game,
    how many downloads your game has gotten, where your game is most popular (location),
    how many active users your game has, and so on.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**统计**: 这一部分显示了有多少人在玩游戏，你的游戏下载了多少次，你的游戏在哪里最受欢迎（地点），你的游戏有多少活跃用户等等。'
- en: '**Financial reports**: Finally, there is the **Financial Reports** section
    wherein you can keep track of the revenue your product is generating and use it
    to update your game or app accordingly.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**财务报告**: 最后，还有**财务报告**部分，你可以在其中跟踪你的产品产生的收入，并据此更新你的游戏或应用。'
- en: SETTINGS
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置
- en: Here, you have various options regarding things such as account details, rights
    regarding who can access the developer console, and so on, which you can view
    and set.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以查看和设置有关帐户详细信息、谁可以访问开发者控制台的权限等方面的各种选项。
- en: '![SETTINGS](img/image00448.jpeg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![设置](img/image00448.jpeg)'
- en: 'Here too are various sections, each categorized based on the type of options
    that are as follows:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这里也有各种部分，每个部分都根据选项类型进行分类，如下所示：
- en: '**Account Details**: This section contains all the general options regarding
    your developer console account, such as the name of the developer, your address,
    your email ID, website URL, and so on.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**帐户详细信息**：此部分包含有关您的开发者控制台帐户的所有常规选项，例如开发者姓名、地址、电子邮件ID、网站URL等。'
- en: '**User accounts & rights**: From here, you can set who can access your developer
    console. When working in a team, it is understandable that you would want all
    of them to have access. You can set that in this section.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户帐户和权限**：从这里，您可以设置谁可以访问您的开发者控制台。在团队中工作时，您可能希望所有人都能访问。您可以在此部分进行设置。'
- en: '**Activity log**: Here you can see all of the changes you have made to your
    app in the developer console, along with a time-stamp as to when the particular
    change was made. This is a great way to keep track of any changes made to the
    app.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动日志**：在这里，您可以查看您在开发者控制台中对应用程序所做的所有更改，以及特定更改的时间戳。这是跟踪应用程序所做的任何更改的好方法。'
- en: '**Email preferences**: If you want or do not want to receive alerts about your
    apps via email, you can set it here.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电子邮件首选项**：如果您希望或不希望通过电子邮件接收有关您的应用程序的警报，您可以在此处进行设置。'
- en: '**API Access**: API is an important aspect of apps. It allows you to manage
    things like in-app purchases, authenticating transactions, and so on. However,
    before you can use them, you will have to link your app first. You can link your
    app here, in the **API Access** section'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API访问**：API是应用程序的重要方面。它允许您管理诸如应用内购买、认证交易等事项。但是，在您可以使用它们之前，您必须首先链接您的应用程序。您可以在**API访问**部分链接您的应用程序。'
- en: '**AdWords accounts**: Here you can link your account to an **AdWords account**.
    AdWords is a service offered by Google which allows you to promote your app by
    using advanced targeting techniques to make sure that the right people get to
    see your advertisement or promotion for your app or game.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AdWords帐户**：在这里，您可以将您的帐户链接到**AdWords帐户**。AdWords是Google提供的一项服务，它允许您通过使用先进的定位技术来推广您的应用程序，以确保正确的人看到您的应用程序或游戏的广告或促销。'
- en: ALERTS
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 警报
- en: In the Settings section, we discussed how you can turn on/off email alerts.
    If you have turned on email alerts, you will receive all alerts regarding your
    app via email. If you have turned it off, you can view these alerts here in the
    **ALERTS** panel.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置部分，我们讨论了如何打开/关闭电子邮件警报。如果您已打开电子邮件警报，您将通过电子邮件接收有关应用程序的所有警报。如果您关闭了它，您可以在**警报**面板中查看这些警报。
- en: '![ALERTS](img/image00449.jpeg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![警报](img/image00449.jpeg)'
- en: Publishing your game
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布您的游戏
- en: Now that we have discussed the Developer Console, we can go ahead and publish
    our game to the Google Play Store.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了开发者控制台，我们可以继续将我们的游戏发布到Google Play商店。
- en: Activating Google services
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 激活Google服务
- en: Now, since the app is more than 50 MB, you will have to make use of the Google
    Play service, namely the APK expansion files. Go to the **Game services** panel,
    and then the **Game details** section. Here, fill out all the fields since all
    of them are the basic requirements that the app should have before you can publish
    your services. This includes setting the **Display name**, which you can set as
    `Bloques`. In the **Description** section just write what the game is, what the
    objective of the game is, and so on.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于应用程序超过50 MB，您将需要使用Google Play服务，即APK扩展文件。转到**游戏服务**面板，然后转到**游戏详细信息**部分。在这里，填写所有字段，因为这些都是在您发布服务之前应用程序应具备的基本要求。这包括设置**显示名称**，您可以将其设置为`Bloques`。在**描述**部分，只需写出游戏是什么，游戏的目标等。
- en: '![Activating Google services](img/image00450.jpeg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![激活Google服务](img/image00450.jpeg)'
- en: 'Since this is a puzzle game, in the **Category** field, choose **Puzzle**.
    Further, since we do not require saved games, you can set it to **Off**. For the
    **Graphic Assets**, you will need a minimum of two: one for the icon and one feature
    graphic. The resolution required for the screenshot is `512 x 512` and the resolution
    required for the feature graphic is `1024 x 500`. You can take high-resolution
    screenshots of your scene and edit them in Photoshop to create your image.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个益智游戏，在**类别**字段中选择**益智**。此外，由于我们不需要保存的游戏，您可以将其设置为**关闭**。对于**图形资产**，您将需要至少两个：一个用于图标，一个用于特色图形。截图所需的分辨率为`512
    x 512`，特色图形所需的分辨率为`1024 x 500`。您可以拍摄高分辨率截图并在Photoshop中进行编辑以创建您的图像。
- en: '![Activating Google services](img/image00451.jpeg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![激活Google服务](img/image00451.jpeg)'
- en: Once you have everything set up, click on **Save** at the top of the screen.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都设置好后，单击屏幕顶部的**保存**。
- en: 'After you have filled in the details go to **Linked apps**, fill in the required
    fields and click on **Continue** at the top. Once clicked, you will have to authorize
    your app. Click on **Authorize your app now** button. This will open a menu where
    you will be asked to fill in the name of the product, logo, and so on. However,
    since we already filled in those details earlier, we can leave it as it is (unless
    you want to make any changes). Click on **Continue**. Before we can move any further,
    we will first have to create a Client ID. To find out what the Client ID for your
    app is, follow these steps:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 填写完详细信息后，转到**已链接的应用程序**，填写必填字段，然后在顶部单击**继续**。单击后，您将需要授权您的应用程序。单击**立即授权您的应用程序**按钮。这将打开一个菜单，要求您填写产品名称、标志等。但是，由于我们之前已经填写了这些详细信息，我们可以将其保留（除非您想进行任何更改）。单击**继续**。在我们继续之前，我们首先必须创建一个客户端ID。要找出您的应用程序的客户端ID是什么，请按照以下步骤进行：
- en: Open Command Prompt. Make sure you run as administrator.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符。确保以管理员身份运行。
- en: 'Run the following command:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE0]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When it asks for a password, enter the default password: `android`.'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当它要求密码时，输入默认密码：`android`。
- en: 'Copy the SHA1 signature and paste it in the Signing certificate fingerprint
    (SHA1): field.'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制SHA1签名并粘贴到签名证书指纹（SHA1）字段中。
- en: Next, click on **Create ID** which will create a client ID for you.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**创建ID**，这将为您创建一个客户端ID。
- en: Once done, Google will create a unique client ID for your game as well as an
    Application ID.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，Google将为您的游戏创建一个唯一的客户端ID以及一个应用程序ID。
- en: 'The next thing we need is **ACHIEVEMENTS**. In order to publish our game, we
    need a minimum of five achievements. You need a name for the achievement, a description,
    and an icon to go along with it. You can create your own achievements but for
    now there are five achievements as follows:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们需要的是**成就**。为了发布我们的游戏，我们需要至少五个成就。您需要一个成就的名称，描述以及与之配套的图标。您可以创建自己的成就，但目前有五个成就如下：
- en: '**First Time**: This is when the player plays the game for the first time'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第一次**：这是玩家第一次玩游戏时'
- en: '**Getting the Hang of it**: This is when the player clears the second room'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**掌握要领**：这是玩家清理第二个房间时'
- en: '**Puppet Master**: This is when the player clears the third room'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**傀儡大师**：这是玩家清理第三个房间时'
- en: '**Puzzle Master**: This is when the player clears the fourth room'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拼图大师**：这是玩家清理第四个房间时'
- en: '**Addicted**: This is when the player plays the game five times'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上瘾**：这是玩家玩游戏五次时'
- en: '![Activating Google services](img/image00452.jpeg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![激活Google服务](img/image00452.jpeg)'
- en: You can assign any number of points you see fit. We do not require leaderboards,
    since our game does not have points or scores.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以分配任意数量的积分。我们不需要排行榜，因为我们的游戏没有积分或分数。
- en: Preparing the project for shipping
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为出货准备项目
- en: Now we need to go back to the **Engine** and define a few settings in the Project.
    First, we need to set what type of build we are going to make. To do this, go
    to **Project Settings** and under **Project**, in the **Packaging** section, check
    the **For Distribution** box. You will notice that the **Build Configuration**
    option will be set to `Shipping` and the option will be locked.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要回到**引擎**并在项目中定义一些设置。首先，我们需要设置我们将要进行的构建类型。要做到这一点，转到**项目设置**，在**项目**下，在**打包**部分，选中**用于分发**框。您会注意到**构建配置**选项将设置为`Shipping`并且该选项将被锁定。
- en: '![Preparing the project for shipping](img/image00453.jpeg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![为出货准备项目](img/image00453.jpeg)'
- en: The next thing we are going to do is copy some of the values from the developer
    console to our project. Go to **Project Settings** | **Platforms** | **Android**.
    First, in the **APKPackaging** section, uncheck **Package game data inside .apk?**.
    Since our game is more than 50 MB, we cannot upload the .apk file directly. What
    we need is a `.obb` file, an extension file, which we will be uploading in addition
    to the `.apk` file. With this option unchecked, UE4 will automatically create
    both a `.apk` file (which will be smaller than 50 MB) along with an `.obb` file
    (the extension file).
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们要做的是将一些值从开发者控制台复制到我们的项目中。转到**项目设置** | **平台** | **Android**。首先，在**APK打包**部分，取消选中**将游戏数据打包在.apk内？**。由于我们的游戏超过50
    MB，我们无法直接上传.apk文件。我们需要的是一个`.obb`文件，一个扩展文件，我们将除了`.apk`文件之外上传。取消此选项后，UE4将自动创建一个`.apk`文件（小于50
    MB）以及一个`.obb`文件（扩展文件）。
- en: '![Preparing the project for shipping](img/image00454.jpeg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![为出货准备项目](img/image00454.jpeg)'
- en: 'Next, go to **Distribution Signing**. This section is necessary if we are to
    package our game for shipping. The first thing we need is to create a `keystore`
    file. A keystore file is a binary file that has a set of keys. You can think of
    it as a digital signature which is used to identify and authenticate your app
    on the app store. There are various ways to create a keystore: one of them is
    with the help of Command Prompt. So, run Command Prompt as administrator and enter
    the following command:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到**分发签名**。如果我们要为出货打包我们的游戏，这部分是必要的。我们需要的第一件事是创建一个`keystore`文件。密钥库文件是一个具有一组密钥的二进制文件。您可以将其视为用于在应用商店上识别和验证您的应用的数字签名。有各种方法可以创建密钥库：其中之一是使用命令提示符的帮助。因此，以管理员身份运行命令提示符并输入以下命令：
- en: '[PRE1]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Replace `*name of your project*` with Bloques (or whatever you see fit) and
    `*alias_name*` with Game (or whatever you see fit).
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 用Bloques（或您认为合适的任何名称）替换`*项目名称*`，用Game（或您认为合适的任何名称）替换`*别名*`。
- en: After you have entered the command, you will be asked to fill in some other
    information, such as the password for your keystore, your name, your company's
    information, and so on. Once you fill those in, the keystore will be created.
    Locate it and place it in `*Project Directory*/Build/Android`.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入命令后，您将被要求填写一些其他信息，例如密钥库的密码，您的姓名，您公司的信息等。填写完毕后，密钥库将被创建。找到它并将其放置在`*项目目录*/Build/Android`中。
- en: Once done, go back to **Project Preference**, and under **Distribution Signing**,
    in **Key Store**, enter the name of the `keystore` file you created, along with
    the extension (for example, if the name of the keystore is Bloques, then enter
    Bloques.keystore). Then, in **Key Alias**, enter the alias name (Game). Finally,
    in the **Key Store Password** and **Key Password** fields, enter in the password
    you had defined when you were making the `keystore` file.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，返回到**项目首选项**，在**分发签名**下，在**密钥库**中，输入您创建的`keystore`文件的名称，以及扩展名（例如，如果密钥库的名称是Bloques，则输入Bloques.keystore）。然后，在**密钥别名**中，输入别名（Game）。最后，在**密钥库密码**和**密钥密码**字段中，输入您在创建`keystore`文件时定义的密码。
- en: '![Preparing the project for shipping](img/image00455.jpeg)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![为出货准备项目](img/image00455.jpeg)'
- en: Next, go to **Google Play Services**. Here the first thing to do is to check
    **Enable Google Play Support**. This will enable Google Play services in the game.
    In the **Game App ID** field, fill in the Application ID you got when you linked
    your app in the Developer Console. You can find this ID in the Developer Console
    under the **Authorization** section of **Linked apps** in the **Game services**
    panel.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到**Google Play服务**。这里要做的第一件事是检查**启用Google Play支持**。这将在游戏中启用Google Play服务。在**游戏应用ID**字段中，填写您在开发者控制台中链接应用程序时获得的应用程序ID。您可以在开发者控制台的**游戏服务**面板的**已链接应用程序**的**授权**部分中找到此ID。
- en: '![Preparing the project for shipping](img/image00456.jpeg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![为发货准备项目](img/image00456.jpeg)'
- en: Next, we are going to need the Google Play License Key. This can be found in
    the **Developer Console**, under the **LICENSING & IN-APP BILLING** section of
    **Services and APIs** in the **All applications** panel.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要Google Play许可密钥。这可以在**开发者控制台**的**所有应用程序**面板的**服务和API**的**许可和应用内结算**部分中找到。
- en: '![Preparing the project for shipping](img/image00457.jpeg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![为发货准备项目](img/image00457.jpeg)'
- en: This extremely long string of seemingly random characters is our License Key.
    Copy the entire thing and paste it in the **Google Play License Key** section.
    Next, in the Achievement Map, fill in the name and the ID of the achievements
    you created earlier.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这一长串看似随机的字符是我们的许可密钥。复制整个内容并粘贴到**Google Play许可密钥**部分。接下来，在成就地图中，填写您之前创建的成就的名称和ID。
- en: '![Preparing the project for shipping](img/image00458.jpeg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![为发货准备项目](img/image00458.jpeg)'
- en: Just copy and paste the name along with the ID here. If you have icons that
    you would like to add you can do so here as well, in the **Icons** section. We
    are now ready to package our game for distribution. So, in the Editor, go to **File**
    | **Package Project** | **Android** and choose any format and package the game.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 只需在此处复制并粘贴名称以及ID。如果您有图标要添加，也可以在**图标**部分添加。现在我们已经准备好为分发打包我们的游戏。因此，在编辑器中，转到**文件**
    | **打包项目** | **Android**，选择任何格式并打包游戏。
- en: Once the build is complete, go to the folder you set to store the package. You
    will see a `.apk` file, a `.bat` file, and a `.obb` file of the project. We will
    only require the `.apk` and `.obb` file.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，转到您设置用于存储包的文件夹。您将看到项目的`.apk`文件、`.bat`文件和`.obb`文件。我们只需要`.apk`和`.obb`文件。
- en: '![Preparing the project for shipping](img/image00459.jpeg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![为发货准备项目](img/image00459.jpeg)'
- en: Uploading the game on the Play Store
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Play商店上传游戏
- en: The last step is to upload the package onto the Play Store and fill out a few
    more details. Go back to the **Developer Console** and go to **All Applications**.
    Within that, go to **APK**. Here is where we upload our `.apk` and `.obb` files.
    Go to the **Production** tab and click on **Upload APK**; then select the `.apk`
    file. Once the upload has finished, we will need to upload the extension or the
    `.obb` file.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是将包上传到Play商店并填写更多细节。返回**开发者控制台**，转到**所有应用程序**。在其中，转到**APK**。在这里，我们上传我们的`.apk`和`.obb`文件。转到**生产**选项卡，然后单击**上传APK**；然后选择`.apk`文件。上传完成后，我们需要上传扩展名或`.obb`文件。
- en: '![Uploading the game on the Play Store](img/image00460.jpeg)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![在Play商店上传游戏](img/image00460.jpeg)'
- en: To upload the `.obb` file, click on **No expansion** file to open a dropdown
    menu and select **Upload a new file**. From there, select the `.obb` file. After
    the upload is complete, click on **Save Draft**.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传`.obb`文件，请单击**无扩展**文件以打开下拉菜单，然后选择**上传新文件**。从那里，选择`.obb`文件。上传完成后，单击**保存草稿**。
- en: The next thing to do is fill the sections in the **Store Listing** section.
    This is similar to what we filled in in the **Game Details** sections in the **Game
    Services** panel. You can copy-paste the fields. You also require a minimum of
    two screenshots here.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要做的是填写**商店列表**部分中的各个部分。这与我们在**游戏服务**面板的**游戏详情**部分中填写的内容类似。您可以复制粘贴字段。这里还需要至少两张截图。
- en: Next, go to **Content Rating**. Here, once you have uploaded the APK you will
    be asked to fill in a questionnaire which will properly rate your app. These questions
    mostly relate to the content of your game. Fill them out and save the questionnaire.
    The **Save** button is located at the bottom. Next, click on **Calculate Rating**
    and it will generate an appropriate rating for your game. Once you have seen your
    rating, click on **Apply Rating** located at the bottom of the page.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到**内容评级**。在这里，一旦您上传了APK，您将被要求填写一个问卷调查，这将正确评价您的应用程序。这些问题大多与您的游戏内容有关。填写并保存问卷。**保存**按钮位于底部。接下来，单击**计算评级**，它将为您的游戏生成适当的评级。一旦您看到您的评级，单击页面底部的**应用评级**。
- en: The last thing we need to fill out is the **Pricing and Distribution** form.
    Here, you will need to specify in which countries you want the game to be available,
    as well as tick read and agree to guidelines regarding export laws, and such.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 最后需要填写的是**定价和分销**表格。在这里，您需要指定希望游戏在哪些国家可用，并勾选阅读并同意有关出口法律的指南等。
- en: You are now ready to publish your app. To do so, click on **Publish App** located
    at the top-right corner of the **Developer Console** and your app will be added
    to the Google Play Store for the world to download, play, and enjoy.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经准备好发布您的应用程序。要这样做，请单击**开发者控制台**右上角的**发布应用**，您的应用程序将被添加到Google Play商店供全世界下载、玩耍和享受。
- en: Monetization methods
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 货币化方法
- en: 'It is one thing to make a good game. However, the most important thing is for
    your game to generate revenue because, after all, we all have bills to pay. Ever
    since mobile games came into the scene, several monetization models have emerged.
    Here are the four most popular and widely used monetization models that developers
    use to generate revenue:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 制作好游戏是一回事。然而，最重要的是您的游戏能够产生收入，因为毕竟，我们都有账单要支付。自从手机游戏出现以来，出现了几种货币化模型。以下是开发人员用来产生收入的四种最受欢迎和广泛使用的货币化模型：
- en: '**Freemium model**: This is a widely used business model made popular by games
    such as Angry Birds, Cut the Rope, and so on. Here, you make certain features
    of the game free while other features are locked—which cost money to unlock. The
    main goal of this model is to attract as many people as possible and give them
    a preview of the app and its features without giving away too much, so that the
    users become interested enough in purchasing the whole app. This is similar to
    the Demo version of games for the PC and Consoles.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**免费模式**：这是一种广泛使用的商业模式，由《愤怒的小鸟》、《割绳子》等游戏所推广。在这里，你可以免费使用游戏的某些功能，而其他功能被锁定，需要付费解锁。这种模式的主要目标是尽可能吸引更多的人，并让他们预览应用程序及其功能，而不会透露太多，以便用户对购买整个应用程序产生足够的兴趣。这类似于PC和游戏机的演示版本。'
- en: The advantages of using this model are that users get to try the product before
    they purchase it, making them more likely to purchase the app later on. It is
    also an easy way to build a large user base, since the app has no upfront charge
    and people love free things.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种模式的优势是用户可以在购买之前尝试产品，这样他们更有可能在以后购买应用程序。这也是建立大型用户群的简单方法，因为应用程序没有前期收费，人们喜欢免费的东西。
- en: On the flipside, some of the disadvantages of using this model are that if you
    offer too few features, the users will not be engaged enough to purchase the whole
    product. On the other hand, if you offer too many features, the users will not
    have a good enough reason to purchase the whole product.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，使用这种模式的一些缺点是，如果你提供的功能太少，用户将不会对购买整个产品产生足够的兴趣。另一方面，如果你提供的功能太多，用户将没有足够的理由购买整个产品。
- en: '**In-app advertisement**: Another popular business model is making the product
    completely free for users. The way developers earn revenue is through in-app advertisements.
    You may have seen such apps. The game or app is free to download and you have
    ad banners at the top or bottom of the screen.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用内广告**：另一种流行的商业模式是为用户完全免费提供产品。开发者通过应用内广告赚取收入。你可能见过这样的应用。游戏或应用程序是免费下载的，屏幕顶部或底部有广告横幅。'
- en: The advantages of using this model are that you completely remove any paywall
    or barriers between the user and the features offered by the app, making it more
    desirable. You can also gather data based on their behavior and use this for target
    advertising.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种模式的优势是，你完全消除了用户和应用程序提供的功能之间的任何付费壁垒，使其更具吸引力。你还可以根据用户的行为收集数据，并将其用于定向广告。
- en: However, using this model means sacrificing the already limited screen space
    for ads, which means sacrificing the user experience. Another thing to keep in
    mind is that people can and will get annoyed with the ads and this can cause them
    to stop using or uninstall the app. So be careful how and when you use them.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用这种模式意味着牺牲已经有限的屏幕空间来放置广告，这意味着牺牲用户体验。另一件事要记住的是，人们可能会因为广告而感到烦恼，这可能导致他们停止使用或卸载应用。因此要小心如何以及何时使用它们。
- en: '**Paid apps**: As the name suggests, in this model, the app is not free; users
    will have to purchase the app in order to use it. The advantages of using this
    model are that you get upfront revenue from every download along with better user
    retention (since they paid to download the app, they are more likely to use it
    frequently). However, with that said, unless you have a good reputation in the
    app market, it is hard to convince users to pay upfront for your product. It also
    means that users would have high expectations of your product.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**付费应用程序**：顾名思义，在这种模式下，应用程序不是免费的；用户必须购买应用程序才能使用。使用这种模式的优势是，你可以从每次下载中获得前期收入，以及更好的用户留存率（因为他们付费下载应用程序，他们更有可能频繁使用）。然而，除非你在应用市场有良好的声誉，否则很难说服用户为你的产品提前付费。这也意味着用户会对你的产品有很高的期望。'
- en: '**In-App purchases**: This model, made popular by games such as Candy Crush
    Saga, Clash of Clans, and so on is similar to the Freemium model in that the product
    is made available free. However, in this case, no features are blocked for the
    users until they make a purchase. Instead, they get all of the features right
    from the start. The way that the developers earn revenue is by in-app purchases.
    These are virtual goods, such as lives, power-ups, virtual currency, and so on.
    The advantages of using this model are that it increases user engagement and therefore,
    user retention. Another thing is that it has a low level of risk, since it does
    not require a lot of investment. However, keep in mind not to get carried away
    with this. One fatal mistake developers make is building a game which is virtually
    unplayable unless the users pay.'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用内购买**：这种模式由《糖果传奇》、《部落冲突》等游戏所推广，与免费模式类似，产品是免费提供的。然而，在这种情况下，用户在购买之前不会被限制使用任何功能。相反，他们从一开始就可以使用所有功能。开发者赚取收入的方式是通过应用内购买。这些是虚拟商品，如生命、能量增强、虚拟货币等。使用这种模式的优势是它增加了用户参与度，因此也增加了用户留存率。另一件事是，它的风险水平较低，因为它不需要太多的投资。然而，要记住不要过度使用这种模式。开发者犯的一个致命错误是构建一个几乎无法玩的游戏，除非用户付费。'
- en: Mobile performance and optimization
  id: totrans-326
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动性能和优化
- en: It is every developer's desire to make their game nice and beautiful with various
    types of post-processes, complex shaders, lighting, and so on. While this is perfectly
    fine when making games on PC/Consoles, you have to keep in mind that mobile platforms
    have certain technological limitations which can cause your game to perform poorly,
    thus resulting in poor sales. Here are a few tips and tricks on how you can optimize
    your game to achieve the best performance.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 每个开发者都希望通过各种类型的后期处理、复杂的着色器、照明等使他们的游戏变得漂亮而美丽。虽然在PC/游戏机上制作游戏时这是完全可以的，但你必须记住移动平台有一定的技术限制，这可能会导致你的游戏性能不佳，从而导致销售不佳。以下是一些关于如何优化游戏以实现最佳性能的技巧和窍门。
- en: The draw calls for your entire scene should be less than 700 to achieve the
    best performance.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整个场景的绘制调用应该少于700次，以实现最佳性能。
- en: Although dynamic lights make the game look good, it is also heavy on the technical
    side. Thus, unless you absolutely require them avoid using dynamic lights. Also,
    it is recommended that you build the lighting before you port the game on your
    device.
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管动态光线使游戏看起来很好，但在技术上也很重。因此，除非绝对需要，避免使用动态光线。此外，建议在将游戏移植到设备上之前构建照明。
- en: The triangle count for your entire scene should ideally be 500,000 or less.
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整个场景的三角形数量理想情况下应为500,000或更少。
- en: Unless you absolutely need to, you should turn off Mobile **High Definition
    Rendering** (**HDR**). This turns off lighting features and greatly improves the
    performance on mobile.
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除非绝对需要，您应该关闭移动**高清晰度渲染**（**HDR**）。这会关闭照明功能，并大大提高移动性能。
- en: Again, unless required, you should turn off post-process features for better
    performance.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同样，除非需要，您应该关闭后期处理功能以获得更好的性能。
- en: When it comes to textures, to prevent memory wastage, their resolution should
    be of powers of 2 (256 x 256, 512 x 512, 1024 x 1024, and so on).
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在纹理方面，为了防止内存浪费，它们的分辨率应为2的幂（256 x 256，512 x 512，1024 x 1024等）。
- en: You can set some of the **Rendering** options in the **Project Settings** in
    the **Engine** category, under the **Rendering** section.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在**项目设置**中的**引擎**类别下的**渲染**部分中设置一些**渲染**选项。
- en: '![Mobile performance and optimization](img/image00461.jpeg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![移动性能和优化](img/image00461.jpeg)'
- en: You can turn on/off different features such as lighting, post-process, textures,
    and so on from here, including the last two points mentioned above.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从这里打开/关闭不同的功能，如照明，后期处理，纹理等，包括上述的最后两点。
- en: 'When it comes to performance, you should first be aware of some performance
    tiers. They all have to do with the lighting features in the game. When developing
    games for mobile, depending upon your requirements and your target platform, you
    should keep these in mind:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在性能方面，您首先应该了解一些性能层次。它们都与游戏中的照明功能有关。在为移动设备开发游戏时，根据您的要求和目标平台，您应该牢记这些：
- en: '**Low Dynamic Range** (**LDR**): This mode has the highest performance and
    least load on the memory and processor. This mode is recommended for games that
    do not need lighting features and/or post-processing in their game.'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低动态范围**（**LDR**）：这种模式具有最高的性能，对内存和处理器的负荷最小。这种模式适用于不需要照明特性和/或后期处理的游戏。'
- en: '**Basic Lighting**: This is the next best mode in terms of performance. In
    this mode, you have access to the basic lighting features offered by UE4, such
    as global illumination, material shading, and so on.'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本照明**：在性能方面，这是下一个最佳模式。在这种模式下，您可以访问UE4提供的基本照明功能，如全局照明，材质着色等。'
- en: '**Full HDR Lighting**: This mode is on the other end of the spectrum. It has
    the lowest performance and the highest load on the memory and processor. In this
    mode, you make use of most of the lighting and post-processing features offered
    by UE4\. It is not recommended for use in mobile games.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全高动态范围照明**：这种模式位于光谱的另一端。它的性能最低，对内存和处理器的负荷最高。在这种模式下，您可以利用UE4提供的大多数照明和后期处理功能。不建议在移动游戏中使用。'
- en: Tip
  id: totrans-341
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is recommended that you visit [https://wiki.unrealengine.com/Android_Device_Compatibility](https://wiki.unrealengine.com/Android_Device_Compatibility).
    This is a community driven page, wherein various community members have tested
    UE4 on various Android-based devices using different lighting modes. It is really
    helpful when developing games for Android. If you have tested UE4 on a device
    that has not been listed, you can post it yourself for the benefit of other community
    members.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 建议您访问[https://wiki.unrealengine.com/Android_Device_Compatibility](https://wiki.unrealengine.com/Android_Device_Compatibility)。这是一个社区驱动的页面，社区的各种成员使用不同的照明模式在各种基于Android的设备上测试了UE4。在为Android开发游戏时，这非常有帮助。如果您已经在未列出的设备上测试了UE4，您可以自行发布，以造福其他社区成员。
- en: Summary
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed UMG and its user interface. Using it, we created
    a main menu for our game (which contains the name of the game and a button that
    starts the game when the player touches it). Having done that, we were then ready
    to package our game for Android devices.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了UMG及其用户界面。使用它，我们为游戏创建了一个主菜单（其中包含游戏的名称和一个按钮，玩家触摸按钮后游戏开始）。做到这一点后，我们就准备好为Android设备打包我们的游戏了。
- en: The first step in doing that was installing the Android SDK which contains all
    of the build files required to package our game into a `.apk` file. Once installed,
    the next step was to specify to the engine where all of the files are located.
    Then, we discussed how to set up the Android device to test the game directly
    without having to package the game every time. Finally, we discussed how to package
    the final product and upload the game onto the Google Play Store for people to
    download.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的第一步是安装包含打包游戏所需的所有构建文件的Android SDK。安装完成后，下一步是指定引擎文件的位置。然后，我们讨论了如何设置Android设备以直接测试游戏，而无需每次都打包游戏。最后，我们讨论了如何打包最终产品并将游戏上传到Google
    Play商店供用户下载。
- en: The chapter ended with details on the few monetization models that are widely
    used by mobile game developers to earn revenue, and a few tips on how to properly
    optimize your game for mobile devices..
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 本章以有关少数被移动游戏开发者广泛使用的盈利模式的细节结束，以及有关如何为移动设备正确优化游戏的一些建议。
- en: You are now equipped with all that you need to know to get started on making
    that game you always dreamed of. From here, the only thing you can do to get better
    at UE4 is practice.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经掌握了开始制作您梦寐以求的游戏所需的一切知识。从现在开始，您在UE4上变得更好的唯一方法就是练习。
