["```js\nimport example from 'path/to/module';\n```", "```js\nimport 'C:\\\\Users\\\\project\\\\file';\n```", "```js\nimport '../src/file';\n```", "```js\nimport 'module/sub-directory/file';\n```", "```js\npackage.json\nwebpack.config.js\n/dist\n/src\n index.js\n/node_modules\n/node_modules/another-module.js\n```", "```js\nimport _ from 'lodash';\nconsole.log(\n  _.join(['Another', 'module', 'loaded!'], ' ')\n );\n\n// webpack.config.js \n const path = require('path');\n module.exports = {\n   mode: 'development',\n   entry: {\n     index: './src/index.js',\n     another: './src/another-module.js'\n },\n output: {\n   filename: '[name].bundle.js',\n   path: path.resolve(__dirname, 'dist')\n  }\n };\n```", "```js\nnpm run build\n```", "```js\n...\n Asset Size Chunks Chunk Names\n another.bundle.js 550 KiB another [emitted] another\n index.bundle.js 550 KiB index [emitted] index\n Entrypoint index = index.bundle.js\n Entrypoint another = another.bundle.js\n ...\n```", "```js\nconst path = require('path');\nmodule.exports = {\n  mode: 'development',\n  entry: {\n    index: './src/index.js',\n    another: './src/another-module.js'\n },\n output: {\n   filename: '[name].bundle.js',\n   path: path.resolve(__dirname, 'dist')\n },\n optimization: {\n   splitChunks: {\n chunks: 'all'\n   }\n  }\n };\n```", "```js\n...\nAsset Size Chunks Chunk Names\nanother.bundle.js 5.95 KiB another [emitted] another\nindex.bundle.js 5.89 KiB index [emitted] index\nvendors~another~index.bundle.js 547 KiB vendors~another~index [emitted]    vendors~another~index\nEntrypoint index = vendors~another~index.bundle.js index.bundle.js\nEntrypoint another = vendors~another~index.bundle.js another.bundle.js\n...\n```", "```js\nconst path = require('path');\nmodule.exports = {\n mode: 'development',\n entry: {\n   index: './src/index.js'\n   index: './src/index.js',\n },\n output: {\n   filename: '[name].bundle.js',\n   chunkFilename: '[name].bundle.js',\n   path: path.resolve(__dirname, 'dist')\n },\n };\n```", "```js\nfunction getComponent() {\n  return import(/* webpackChunkName: \"lodash\" */ 'lodash').then((\n      { default: _ }) => {\n var element = document.createElement('div');\n\n element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n\n return element;\n\n }).catch(error => 'An error occurred while loading \n     the component');\n }\n\n  getComponent().then(component => {\n    document.body.appendChild(component);\n  })\n```", "```js\nnpm run build\n```", "```js\n...\n Asset Size Chunks Chunk Names\n index.bundle.js 7.88 KiB index [emitted] index\n vendors~lodash.bundle.js 547 KiB vendors~lodash [emitted] vendors~lodash\n Entrypoint index = index.bundle.js\n ...\n```", "```js\nasync function getComponent() {\n 'lodash').then(({ default: _ }) => {\nconst element = document.createElement('div');\nconst { default: _ } = await import(/* webpackChunkName: \"lodash\" */ 'lodash');\n\nelement.innerHTML = _.join(['Hello', 'webpack'], ' ');\n\nreturn element;\n}\n\n  getComponent().then(component => {\n    document.body.appendChild(component);\n  });\n```", "```js\n module.exports = {\n   entry: './src/index.js',\n   plugins: [\n    // new CleanWebpackPlugin(['dist/*']) for < v2 versions \n       of CleanWebpackPlugin\n    new CleanWebpackPlugin(),\n    new HtmlWebpackPlugin({\n      title: 'Output Management',\n      title: 'Caching',\n   }),\n ],\n output: {\n  filename: 'bundle.js',\n  filename: '[name].[contenthash].js',\n  path: path.resolve(__dirname, 'dist'),\n  },\n};\n```", "```js\nimport(/* webpackPrefetch: true */ 'LoginModal');\n```", "```js\n <linkrel=\"prefetch\" href=\"login-modal-chunk.js\"> \n```", "```js\nimport(/* webpackPreload: true */ 'ChartingLibrary');\n```"]