["```ts\n<%\nDim connection\nSet connection = Server.CreateObject(\"ADODB.Connection\")\nResponse.Write \"The server connection has been created for id \" & Request.QueryString(\"id\")\n%>\n<H1>Hello World</H1>\n```", "```ts\npublic static void Main(string[] args)\n{\n  CreateWebHostBuilder(args).Build().Run();\n}\npublic static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\n  WebHost.CreateDefaultBuilder(args)\n    .UseStartup<Startup>();\n```", "```ts\npublic static IWebHostBuilder CreateWebHostBuilder(string[] args)\n{\n   return WebHost.CreateDefaultBuilder(args).UseStartup<Startup>();\n}\n```", "```ts\npublic class Startup\n{\n}\n```", "```ts\npublic Startup(IConfiguration configuration)\n{\n  Configuration = configuration;\n}\npublic IConfiguration Configuration { get; }\n```", "```ts\npublic void ConfigureServices(IServiceCollection services)\n{\n  services.Configure<CookiePolicyOptions>(options =>\n  {\n    options.CheckConsentNeeded = context => true;\n    options.MinimumSameSitePolicy = SameSiteMode.None;\n  });\n\n  services.AddHttpClient();\n  services.AddSingleton<IDiscogsClient, DiscogsClient>();\n  services.AddMvc().SetCompatibilityVersion(\n    CompatibilityVersion.Version_2_1);\n}\n```", "```ts\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\n{\n  if (env.IsDevelopment())\n  {\n    app.UseDeveloperExceptionPage();\n  }\n  else\n  {\n    app.UseExceptionHandler(\"/Home/Error\");\n    app.UseHsts();\n  }\n\n  app.UseHttpsRedirection();\n  app.UseStaticFiles();\n  app.UseCookiePolicy();\n\n  app.UseMvc(routes =>\n  {\n    routes.MapRoute(\n              name: \"default\",\n              template: \"{controller=Home}/{action=Index}/{id?}\");\n  });\n}\n```", "```ts\n@{\n    Layout = \"_Layout\";\n}\n```", "```ts\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, \n      initial-scale=1.0\" />\n    <title>@ViewData[\"Title\"] - Chapter10</title>\n\n    <environment include=\"Development\">\n        <link rel=\"stylesheet\" \n          href=\"~/lib/bootstrap/dist/css/bootstrap.css\" />\n        <link rel=\"stylesheet\" href=\"~/css/site.css\" />\n    </environment>\n    <environment exclude=\"Development\">\n        <link rel=\"stylesheet\" \n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/\n                css/bootstrap.min.css\"\n          asp-fallback-href=\"~/lib/bootstrap/dist/\n                             css/bootstrap.min.css\"\n          asp-fallback-test-class=\"sr-only\" \n          asp-fallback-test-property=\"position\" \n          asp-fallback-test-value=\"absolute\" />\n        <link rel=\"stylesheet\" href=\"~/css/site.min.css\" \n          asp-append-version=\"true\" />\n    </environment>\n</head> \n```", "```ts\n@{\n    ViewData[\"Title\"] = \"Home Page\";\n}\n```", "```ts\n<head>\n  <meta charset=\"utf-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, \n    initial-scale=1.0\"/>\n  <title>@ViewData[\"Title\"] - AdvancedTypeScript 3 - Discogs</title>\n\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/\n    bootstrap/4.0.0/css/bootstrap.min.css\" \n    integrity=\"sha384-  \n      Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" \n        crossorigin=\"anonymous\">\n  <environment include=\"Development\">\n    <link rel=\"stylesheet\" href=\"~/css/site.css\"/>\n  </environment>\n  <environment exclude=\"Development\">\n    <link rel=\"stylesheet\" href=\"~/css/site.min.css\" \n      asp-append-version=\"true\"/>\n  </environment>\n</head>\n```", "```ts\n<body>\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle\" \n                    data-toggle=\"collapse\" \n                    data-target=\".navbar-collapse\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a asp-area=\"\" asp-controller=\"Home\" \n                  asp-action=\"Index\" class=\"navbar-brand\">Chapter10</a>\n            </div>\n            <div class=\"navbar-collapse collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li><a asp-area=\"\" asp-controller=\"Home\" \n                      asp-action=\"Index\">Home</a></li>\n                    <li><a asp-area=\"\" asp-controller=\"Home\" \n                      asp-action=\"About\">About</a></li>\n                    <li><a asp-area=\"\" asp-controller=\"Home\" \n                      asp-action=\"Contact\">Contact</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n\n</body>\n```", "```ts\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" asp-area=\"\" asp-controller=\"Home\" \n      asp-action=\"Index\">AdvancedTypeScript3 - Discogs</a>\n    <div class=\"navbar-header\">\n      <button class=\"navbar-toggler\" type=\"button\" \n        data-toggle=\"collapse\" \n        data-target=\"#navbarSupportedContent\" \n        aria-controls=\"navbarSupportedContent\" \n        aria-expanded=\"false\" \n        aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    </div>\n    <div class=\"navbar-collapse collapse\">\n      <ul class=\"nav navbar-nav\">\n        <li>\n          <a class=\"nav-link\" asp-area=\"\" asp-controller=\"Home\" \n            asp-action=\"Index\">Home</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" asp-area=\"\" asp-controller=\"Home\" \n            asp-action=\"About\">About</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" asp-area=\"\" asp-controller=\"Home\" \n            asp-action=\"Contact\">Contact</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n```", "```ts\npublic IActionResult About()\n{\n  ViewData[\"Message\"] = \"Your application description page.\";\n  return View();\n}\n```", "```ts\n<div class=\"container body-content\">\n    @RenderBody()\n    <hr />\n    <footer>\n        <p>&copy; 2019 - Chapter10</p>\n    </footer>\n</div>\n```", "```ts\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      @RenderBody()\n    </div>\n  </div>\n  <hr/>\n  <footer>\n    <p>&copy; 2019 - Advanced TypeScript3 - Discogs Artist search</p>\n  </footer>\n</div>\n```", "```ts\npublic interface IDiscogsClient\n{\n  Task<Results> GetByArtist(string artist);\n}\n```", "```ts\nusing Newtonsoft.Json;\n```", "```ts\npublic class CommunityInfo\n{\n  [JsonProperty(PropertyName = \"want\")]\n  public int Want { get; set; }\n  [JsonProperty(PropertyName = \"have\")]\n  public int Have { get; set; }\n}\n```", "```ts\npublic class DiscogsClient : IDiscogsClient\n{\n  public async Task<Results> GetByArtist(string artist)\n  {\n  }\n}\n```", "```ts\nprivate const string BasePath = \"https://api.discogs.com/\";\n```", "```ts\nprivate readonly IHttpClientFactory _httpClientFactory;\npublic DiscogsClient(IHttpClientFactory httpClientFactory)\n{\n  _httpClientFactory = httpClientFactory ?? throw new \n     ArgumentNullException(nameof(httpClientFactory));\n}\n```", "```ts\nif (string.IsNullOrWhiteSpace(artist))\n{\n  return new Results();\n}\n```", "```ts\nprivate string GetMethod(string path) => $\"{BasePath}{path}\";\n```", "```ts\nHttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, \n  GetMethod($\"database/search?artist={Uri.EscapeDataString(artist)}&per_page=10\"));\n```", "```ts\nrequest.Headers.Add(\"Authorization\", \"Discogs token=MyJEHLsbTIydAXFpGafrrphJhxJWwVhWExCynAQh\");\nrequest.Headers.Add(\"user-agent\", \"AdvancedTypeScript3Chapter10\");\n```", "```ts\nusing (HttpClient client = _httpClientFactory.CreateClient())\n{\n  HttpResponseMessage response = await client.SendAsync(request);\n  string content = await response.Content.ReadAsStringAsync();\n  return JsonConvert.DeserializeObject<Results>(content);\n}\n```", "```ts\npublic class DiscogsClient : IDiscogsClient\n{\n  private const string BasePath = \"https://api.discogs.com/\";\n  private readonly IHttpClientFactory _httpClientFactory;\n  public DiscogsClient(IHttpClientFactory httpClientFactory)\n  {\n    _httpClientFactory = httpClientFactory ?? throw new \n                 ArgumentNullException(nameof(httpClientFactory));\n  }\n\n  public async Task<Results> GetByArtist(string artist)\n  {\n    if (string.IsNullOrWhiteSpace(artist))\n    {\n      return new Results();\n    }\n    HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, \n      GetMethod($\"database/search?artist=\n        {Uri.EscapeDataString(artist)}&per_page=10\"));\n    request.Headers.Add(\"Authorization\", \"Discogs \n      token=MyJEHLsbTIydAXFpGafrrphJhxJWwVhWExCynAQh\");\n    request.Headers.Add(\"user-agent\", \"AdvancedTypeScript3Chapter10\");\n    using (HttpClient client = _httpClientFactory.CreateClient())\n    {\n      HttpResponseMessage response = await client.SendAsync(request);\n      string content = await response.Content.ReadAsStringAsync();\n      return JsonConvert.DeserializeObject<Results>(content);\n    }\n  }\n  private string GetMethod(string path) => $\"{BasePath}{path}\";\n}\n```", "```ts\npublic class HomeController : Controller\n{\n  private readonly IDiscogsClient _discogsClient;\n  public HomeController(IDiscogsClient discogsClient)\n  {\n    _discogsClient = discogsClient;\n  }\n}\n```", "```ts\npublic async Task<IActionResult> Index(string searchString)\n{\n  if (!string.IsNullOrWhiteSpace(searchString))\n  {\n    Results client = await _discogsClient.GetByArtist(searchString);\n    ViewBag.Result = client.ResultsList;\n  }\n\n  return View();\n}\n```", "```ts\n@{\n  ViewData[\"Title\"] = \"Home Page\";\n}\n```", "```ts\n<div id=\"pageRoot\">\n  <form asp-controller=\"Home\" asp-action=\"Index\" class=\"form-inline\">\n  </form>\n</div>\n```", "```ts\n<div class=\"form-group mx-sm-3 mb-10\">\n  <input type=\"text\" name=\"SearchString\" class=\"form-control\" \n    placeholder=\"Enter artist to search for\" />\n</div>\n<button type=\"submit\" class=\"btn btn-primary\">Search</button>\n```", "```ts\n<div id=\"pageRoot\">\n  <form asp-controller=\"Home\" asp-action=\"Index\" class=\"form-inline\">\n    <div class=\"form-group mx-sm-3 mb-10\">\n      <input type=\"text\" name=\"SearchString\" class=\"form-control\" \n        placeholder=\"Enter artist to search for\" />\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n  </form>\n</div>\n```", "```ts\nint counter = (int)ViewData[\"Counter\"];\n```", "```ts\n@{ if (ViewBag.Result != null)\n  {\n  }\n}\n```", "```ts\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Title</th>\n      <th>Artwork</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n```", "```ts\n<tbody>\n  @{\n    int index = 0;\n  }\n  @foreach (var item in ViewBag.Result)\n  {\n    <tr>\n      <td>@item.Title</td>\n      <td>@item.ResourceUrl</td>\n    </tr>\n    index++;\n  }\n</tbody>\n```", "```ts\n{\n  \"compileOnSave\": true,\n  \"compilerOptions\": {\n    \"lib\": [ \"es2015\", \"dom\" ],\n    \"noImplicitAny\": true,\n    \"noEmitOnError\": true,\n    \"removeComments\": true,\n    \"sourceMap\": true,\n    \"target\": \"es2015\",\n    \"outDir\": \"wwwroot/js/\"\n  },\n  \"exclude\": [\n    \"wwwroot\"\n  ]\n}\n```", "```ts\nconst searchDiscog = (request: RequestInfo, imgId: string): Promise<void> => {\n  return new Promise((): void => {\n  }\n}\n```", "```ts\nfetch(request,\n  {\n    method: 'GET',\n    headers: {\n      'authorization': 'Discogs \n           token=MyJEHLsbTIydAXFpGafrrphJhxJWwVhWExCynAQh',\n      'user-agent': 'AdvancedTypeScript3Chapter10'\n    }\n  })\n```", "```ts\n.then(response => {\n  return response.json();\n})\n```", "```ts\n.then(responseBody => {\n  const image = <HTMLImageElement>document.getElementById(imgId);\n  if (image) {\n    if (responseBody && responseBody.images && \n         responseBody.images.length > 0) {\n      image.src = responseBody.images[\"0\"].uri150;\n    }\n  }\n})\n```", "```ts\nconst searchDiscog = (request: RequestInfo, imgId: string): Promise<void> => {\n  return new Promise((): void => {\n    fetch(request,\n      {\n        method: 'GET',\n        headers: {\n          'authorization': 'Discogs \n            token=MyJEHLsbTIydAXFpGafrrphJhxJWwVhWExCynAQh',\n          'user-agent': 'AdvancedTypeScript3Chapter10'\n        }\n      })\n      .then(response => {\n        return response.json();\n      })\n      .then(responseBody => {\n        const image = <HTMLImageElement>document.getElementById(imgId);\n        if (image) {\n          if (responseBody && responseBody.images && \n               responseBody.images.length > 0) {\n            image.src = responseBody.images[\"0\"].uri150;\n          }\n        }\n      }).catch(x => {\n        console.log(x);\n      });\n  });\n}\n```", "```ts\nconst searchDiscog = (request: RequestInfo, imgId: string): Promise<void> => {\n  return new Promise(async (): void => {\n    try\n    {\n      const response = await fetch(request,\n        {\n          method: 'GET',\n          headers: {\n            'authorization': 'Discogs \n              token=MyJEHLsbTIydAXFpGafrrphJhxJWwVhWExCynAQh',\n            'user-agent': 'AdvancedTypeScript3Chapter10'\n          }\n        });\n      const responseBody = await response.json();\n      const image = <HTMLImageElement>document.getElementById(imgId);\n      if (image) {\n        if (responseBody && responseBody.images && \n             responseBody.images.length > 0) {\n          image.src = responseBody.images[\"0\"].uri150;\n        }\n      }\n    }\n    catch(ex) {\n      console.log(ex);\n    } \n  });\n}\n```", "```ts\n<script src=\"~/js/discogHelper.js\"></script>\n```", "```ts\n<td>\n  <img id=\"img_@index\" width=\"150\" height=\"150\" />\n  <script type=\"text/javascript\">\n      searchDiscog('@item.ResourceUrl', 'img_@index');\n  </script>\n</td>\n```", "```ts\n@{\n  ViewData[\"Title\"] = \"Home Page\";\n}\n<div id=\"pageRoot\">\n  <form asp-controller=\"Home\" asp-action=\"Index\" class=\"form-inline\">\n    <div class=\"form-group mx-sm-3 mb-10\">\n      <input type=\"text\" name=\"SearchString\" class=\"form-control\" \n         placeholder=\"Enter artist to search for\" />\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n  </form>\n</div>\n@{ if (ViewBag.Result != null)\n  {\n    <script src=\"~/js/discogHelper.js\"></script>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Artwork</th>\n        </tr>\n      </thead>\n      <tbody>\n        @{\n          int index = 0;\n        }\n        @foreach (var item in ViewBag.Result)\n        {\n          <tr>\n            <td>@item.Title</td>\n            <td>\n              <img id=\"img_@index\" width=\"150\" height=\"150\" />\n              <script type=\"text/javascript\">\n                  searchDiscog('@item.ResourceUrl', 'img_@index');\n              </script>\n            </td>\n          </tr>\n          index++;\n        }\n      </tbody>\n    </table>\n  }\n}\n```"]