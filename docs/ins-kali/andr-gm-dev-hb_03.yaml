- en: Chapter 3. Different Android Development Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。不同的Android开发工具
- en: We have already discussed the different Android target devices for game development.
    In this chapter, we will take a look at the different ways and tools to develop
    games for Android. Other than development skill and knowledge, it is very important
    to know about the helpful software that can make the development process easier
    and effective.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了游戏开发的不同Android目标设备。在本章中，我们将看看为Android开发游戏的不同方法和工具。除了开发技能和知识外，了解可以使开发过程更轻松和有效的有用软件非常重要。
- en: 'Android game development is supported or backed by many powerful tools and
    libraries. Let''s have a look at the list of mandatory tools for the development
    process:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Android游戏开发得到许多强大的工具和库的支持。让我们来看看开发过程中必备的工具列表：
- en: Android SDK
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android SDK
- en: Android Development Tool
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android开发工具
- en: Android Virtual Device
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android虚拟设备
- en: Android Debug Bridge
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android调试桥
- en: Dalvik Debug Monitor Server
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 达尔维克调试监视服务器
- en: These are the must-have tools that should be installed in an Android game developer's
    system. Without these, it is impossible to develop anything for the Android platform.
    Although ADB and AVD are not mandatory for development, they are required to test
    and deploy the game on physical as well as virtual devices in order to debug the
    game.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是Android游戏开发人员系统中必须安装的必备工具。没有这些工具，就无法为Android平台开发任何东西。尽管ADB和AVD对于开发来说并不是必需的，但它们需要用于在物理设备和虚拟设备上测试和部署游戏，以便调试游戏。
- en: Android SDK
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android SDK
- en: Android SDK is the main development kit required to build any application for
    Android. Without going into details, it can be said that the SDK is the skeleton
    for any Android development. This SDK itself comes with dozens of support tools.
    It contains platform details, APIs, and libraries along with ADT and AVD. So having
    Android SDK integrated in the system provides the developer with all the necessary
    tools. It is a very good practice to always update the SDK with the latest platforms
    and other tools.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK是构建Android应用程序所需的主要开发工具包。不详细介绍，可以说SDK是任何Android开发的骨架。这个SDK本身带有数十个支持工具。它包含平台细节、API和库，以及ADT和AVD。因此，将Android
    SDK集成到系统中提供了开发人员所需的所有必要工具。始终使用最新平台和其他工具更新SDK是一个非常好的做法。
- en: 'Upgrading can be done through the Android SDK manager. However, platform selection
    is manual, and it is recommended to have only the necessary platforms as per requirements.
    Another best practice is to have the latest released platform along with the minimum
    targeted version of Android (image source: [http://photos4.meetupstatic.com/photos/event/1/1/0/f/highres_441724367.jpeg](http://photos4.meetupstatic.com/photos/event/1/1/0/f/highres_441724367.jpeg)):'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 升级可以通过Android SDK管理器进行。但是，平台选择是手动的，建议根据需求仅安装必要的平台。另一个最佳实践是将最新发布的平台与Android的最低目标版本一起使用（图片来源：[http://photos4.meetupstatic.com/photos/event/1/1/0/f/highres_441724367.jpeg](http://photos4.meetupstatic.com/photos/event/1/1/0/f/highres_441724367.jpeg)）：
- en: '![Android SDK](img/B05069_03_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![Android SDK](img/B05069_03_01.jpg)'
- en: Android Development Tool
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android开发工具
- en: '**Android Development Tool** (**ADT**) is a plugin for the Eclipse IDE that
    is designed to give a powerful, integrated environment in which to build Android
    applications.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android开发工具**（**ADT**）是专为Eclipse IDE设计的插件，旨在为构建Android应用程序提供强大的集成环境。'
- en: ADT extends the capabilities of Eclipse to let the developer quickly set up
    new Android projects, create an application UI, add packages based on the Android
    framework API, debug the applications using the Android SDK tools, and even export
    signed (or unsigned) `.apk` files in order to distribute the application.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ADT扩展了Eclipse的功能，使开发人员能够快速设置新的Android项目，创建应用程序UI，根据Android框架API添加包，使用Android
    SDK工具调试应用程序，甚至导出签名（或未签名）`.apk`文件以分发应用程序。
- en: Developing in Eclipse with ADT is highly recommended, and is the fastest way
    to get started. With the guided project setup it provides, as well as tools integration,
    custom XML editors, and the debug output pane, ADT gives an incredible boost to
    developing Android applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在Eclipse中使用ADT进行开发是非常推荐的，也是最快速的入门方式。通过提供的引导式项目设置以及工具集成、自定义XML编辑器和调试输出窗格，ADT极大地提高了开发Android应用程序的速度。
- en: However, ADT support for Eclipse is being pulled by Google, so developers are
    recommended to switch to Android Studio.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，谷歌正在取消对Eclipse的ADT支持，因此建议开发人员切换到Android Studio。
- en: Android Virtual Device
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android虚拟设备
- en: 'An **Android Virtual Device** (**AVD**) is a software-produced model of a real
    device, which can be configured with custom hardware specifications. It can be
    a virtual copy of the real device as well. This is one of the most important tools
    for any Android developer. This lets the developer test the application in a typical
    Android environment without using an actual hardware device, to cut short the
    development time (image source: [http://www.geeknaut.com/images/2014/08/top-android-emulators-for-windows3.png](http://www.geeknaut.com/images/2014/08/top-android-emulators-for-windows3.png)):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android虚拟设备**（**AVD**）是真实设备的软件生成模型，可以配置自定义硬件规格。它也可以是真实设备的虚拟副本。这是任何Android开发人员最重要的工具之一。这使开发人员能够在典型的Android环境中测试应用程序，而无需使用实际的硬件设备，以缩短开发时间（图片来源：[http://www.geeknaut.com/images/2014/08/top-android-emulators-for-windows3.png](http://www.geeknaut.com/images/2014/08/top-android-emulators-for-windows3.png)）：'
- en: '![Android Virtual Device](img/B05069_03_02.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![Android虚拟设备](img/B05069_03_02.jpg)'
- en: Configuring AVD
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置AVD
- en: 'An AVD consists of the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: AVD包括以下内容：
- en: '**Hardware profile**: This profile describes the hardware features of the virtual
    device. This can be configured with hardware options like a QWERTY keypad, camera,
    integrated memory, and so on.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件配置文件**：该配置文件描述虚拟设备的硬件特性。可以配置硬件选项，如QWERTY键盘、摄像头、集成内存等。'
- en: '**System image mapping**: The running Android platform version can be configured
    depending on the installed set of Android platforms. Android platforms can be
    installed by the Android SDK manager.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统镜像映射**：可以根据已安装的 Android 平台集合配置正在运行的 Android 平台版本。Android 平台可以通过 Android
    SDK 管理器安装。'
- en: '**Dedicated disk space**: Dedicated storage area on your development machine
    can be set with this feature, which saves the emulator''s user data and the virtual
    SD card.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专用磁盘空间**：可以使用此功能在开发机上设置专用存储区域，用于保存模拟器的用户数据和虚拟 SD 卡。'
- en: '**Other features**: The developer can even specify the look and feel of the
    virtual device such as device skin, screen dimension, and appearance.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他功能**：开发人员甚至可以指定虚拟设备的外观和感觉，如设备外壳、屏幕尺寸和外观。'
- en: 'The following is the brief procedure to create an AVD through AVD manager,
    which is located in the `<SDK Path>/tools` directory:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是通过 AVD 管理器创建 AVD 的简要过程，该管理器位于 `<SDK 路径>/tools` 目录中：
- en: On the main screen, click on **Create Virtual Device**.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主屏幕上，点击**创建虚拟设备**。
- en: In the **Select Hardware** window, select a device configuration such as **Nexus
    5**, then click on **Next**, then click on **Finish**.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择硬件**窗口中，选择设备配置，如**Nexus 5**，然后点击**下一步**，然后点击**完成**。
- en: To begin customizing the device by using an existing device profile as a template,
    select a device profile and then click on **Clone Device**. Or, to create a complete
    custom emulator, click on **New Hardware Profile**.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要通过使用现有设备配置文件作为模板开始自定义设备，请选择设备配置文件，然后点击**克隆设备**。或者，要创建完整的自定义模拟器，请点击**新硬件配置文件**。
- en: 'Set the following to create a new custom emulator:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置以下内容以创建新的自定义模拟器：
- en: Device name
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备名称
- en: Screen size
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕尺寸
- en: Screen resolution
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕分辨率
- en: RAM
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RAM
- en: Input options
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入选项
- en: Supported states
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持的状态
- en: Camera options
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摄像头选项
- en: Sensor options
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传感器选项
- en: After setting every property, click on **Finish**.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置完每个属性后，点击**完成**。
- en: 'The developer can also create a new custom emulator using the command line,
    as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员还可以使用命令行创建新的自定义模拟器，如下所示：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here, the following options can be set:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，可以设置以下选项：
- en: '`name`: This will be the custom AVD name'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：这将是自定义 AVD 名称'
- en: '`targetID`: This will be the custom ID'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`targetID`：这将是自定义 ID'
- en: '`option`: This can include options such as device screen density, resolution,
    camera, and so on.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`option`：这可以包括设备屏幕密度、分辨率、摄像头等选项。'
- en: 'The developer can execute this command to use a previously defined AVD:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以执行此命令来使用先前定义的 AVD：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, the developer can run the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，开发人员可以运行以下命令：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Android Debug Bridge
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 调试桥
- en: '**Android Debug Bridge** (**adb**) is a tool used to establish communication
    between the development environment and a virtual device or the connected Android
    device. It is a client-server command-line program, which works on three elements:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android 调试桥**（**adb**）是用于在开发环境和虚拟设备或连接的 Android 设备之间建立通信的工具。它是一个客户端-服务器命令行程序，由三个元素组成：'
- en: '**Client on the development machine**: Works as the client, which can be invoked
    by adb commands. Other Android tools such as the ADT plugin and DDMS also create
    adb clients.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发机上的客户端**：作为客户端工作，可以通过 adb 命令调用。其他 Android 工具，如 ADT 插件和 DDMS，也会创建 adb 客户端。'
- en: '**Daemon**: A background process that runs in the background on each emulator
    or device instance.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**守护进程**：在每个模拟器或设备实例上后台运行的后台进程。'
- en: '**Server on the development machine**: This is a background process that runs
    on the development machine and manages the communication between the client and
    server.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发机上的服务器**：这是在开发机上运行的后台进程，负责管理客户端和服务器之间的通信。'
- en: On starting adb, the client first checks whether there is an adb server process
    already running. If there isn't, it starts the server process. When the server
    starts, it binds to the local TCP port `5037` and listens for commands sent from
    adb clients—all adb clients use port `5037` to communicate with the adb server.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 adb 时，客户端首先检查是否已经运行了 adb 服务器进程。如果没有，它会启动服务器进程。服务器启动后，它会绑定到本地 TCP 端口 `5037`，并监听从
    adb 客户端发送的命令——所有 adb 客户端都使用端口 `5037` 与 adb 服务器通信。
- en: The server then sets up connections to all running emulator/device instances.
    It locates emulator/device instances by scanning odd-numbered ports in the range
    `5555` to `5585`, the range used by emulators/devices. Where the server finds
    an adb daemon, it sets up a connection to that port. Note that each emulator/device
    instance acquires a pair of sequential ports—an even-numbered port for console
    connections and an odd-numbered port for adb connections.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器然后建立到所有运行的模拟器/设备实例的连接。它通过扫描范围为 `5555` 到 `5585` 的奇数端口来定位模拟器/设备实例，这是模拟器/设备使用的范围。服务器在找到
    adb 守护程序时，会建立到该端口的连接。请注意，每个模拟器/设备实例都会获取一对连续端口——用于控制台连接的偶数端口和用于 adb 连接的奇数端口。
- en: Once the server has set up connections to all emulator instances, the developer
    can use adb commands to access those instances. Because the server manages connections
    to emulator/device instances, and handles commands from multiple adb clients,
    the developer can control any emulator/device instance from any client (or from
    a script).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务器建立了到所有模拟器实例的连接，开发人员就可以使用 adb 命令访问这些实例。由于服务器管理着对模拟器/设备实例的连接，并处理来自多个 adb
    客户端的命令，开发人员可以从任何客户端（或脚本）控制任何模拟器/设备实例。
- en: Using adb on an Android device
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Android 设备上使用 adb
- en: One of the first things to remember is to put the development device in the
    USB debugging mode. This can be done by navigating to Settings, tapping on **Developer
    options**, and checking the box named **USB debugging** for Android 5.0 and above
    (for other Android versions, refer to [https://www.recovery-android.com/enable-usb-debugging-on-android.html](https://www.recovery-android.com/enable-usb-debugging-on-android.html)).
    Without doing this, the development PC won't recognize the device.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要记住的第一件事之一是将开发设备置于USB调试模式。这可以通过转到设置，点击**开发人员选项**，并为Android 5.0及以上版本勾选名为**USB调试**的复选框来完成（对于其他Android版本，请参考[https://www.recovery-android.com/enable-usb-debugging-on-android.html](https://www.recovery-android.com/enable-usb-debugging-on-android.html)）。如果不这样做，开发PC将无法识别设备。
- en: 'The most important thing to know is simply how to get to the adb folder via
    the command line. This is done with the `cd` (change directory) command. So, if
    (on Windows) the SDK folder is called `android-SDK`, and it''s in the root (`c:`)
    directory, you can enter the following command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是知道如何通过命令行进入adb文件夹。这可以通过`cd`（更改目录）命令完成。因此，如果（在Windows上）SDK文件夹称为`android-SDK`，并且位于根目录（`c:`）中，您可以输入以下命令：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, to get into the adb folder, use this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，要进入adb文件夹，请使用以下命令：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'At this point, the prompt will say this:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，提示会显示如下内容：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now the developer can connect the device, and test the adb connection, after
    locating and installing the drivers for a particular device:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开发人员可以连接设备，并测试adb连接，在找到并安装特定设备的驱动程序之后：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If everything is set up properly, there should be a list of devices attached.
    The phone or tablet will have a number assigned to it, so don't be surprised if
    it doesn't say "Droid Razr" or "Galaxy Nexus".
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切设置正确，应该会列出已连接的设备。手机或平板电脑将被分配一个编号，因此如果它不说“Droid Razr”或“Galaxy Nexus”，也不要感到惊讶。
- en: For average users, adb is more of a tool for basic hacking tasks than it is
    a task in itself. Unless the developers know what they are doing, they probably
    shouldn't go poking around too much without clear instructions. When rooting the
    device, knowing these basics can help save some time and let the developer be
    prepared in advance.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对于普通用户，adb更多地是用于基本黑客任务的工具，而不是任务本身。除非开发人员知道自己在做什么，他们可能不应该在没有明确指示的情况下过多地探索。在对设备进行root时，了解这些基础知识可以帮助节省一些时间，并让开发人员提前做好准备。
- en: Beside the specific instructions to root a particular device, the next thing
    the developer needs will be the drivers for the phone or tablet.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 除了特定设备的root指令之外，开发人员需要的下一步是手机或平板电脑的驱动程序。
- en: The easiest way to do this is usually to simply Google search for the *specific
    device plus drivers*. So if the developer has a Droid Razr, he/she should search
    for `Droid Razr Windows Drivers`. This will almost always direct the developer
    to the best link.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，最简单的方法是简单地通过谷歌搜索*特定设备加驱动程序*。因此，如果开发人员有一个Droid Razr，他/她应该搜索`Droid Razr Windows
    Drivers`。这几乎总是会将开发人员引向最佳链接。
- en: Another option, which will only work for stock Android devices, is to download
    the USB drivers from the SDK. To do this, launch the SDK manager again. Go to
    the **Available packages** tab on the left, expand the **Third party add-ons**
    entry, and then expand the **Google Inc. add-ons** entry. Finally, check the entry
    for the **Google USB Driver** package.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项，仅适用于原生Android设备的是从SDK下载USB驱动程序。要做到这一点，再次启动SDK管理器。转到左侧的**可用软件包**选项卡，展开**第三方附加组件**条目，然后展开**Google
    Inc.附加组件**条目。最后，勾选**Google USB驱动程序**软件包的条目。
- en: Note that the USB driver package isn't compatible with OS X.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，USB驱动程序包与OS X不兼容。
- en: Dalvik Debug Monitor Server
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dalvik调试监视服务器
- en: 'The **Dalvik Debug Monitor Server** (**DDMS**), whether it''s accessed through
    the standalone application or the Eclipse perspective with the same name, provides
    handy features for inspecting, debugging, and interacting with emulator and device
    instances. You can use DDMS to inspect running processes and threads, explore
    the filesystem, gather heap and other memory information, attach debuggers, and
    even take screenshots. For emulators, you can also simulate mock location data,
    send SMS messages, and initiate incoming phone calls:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**Dalvik调试监视服务器**（**DDMS**），无论是通过独立应用程序还是具有相同名称的Eclipse透视图访问，都提供了方便的功能，用于检查、调试和与模拟器和设备实例交互。您可以使用DDMS来检查运行中的进程和线程，浏览文件系统，收集堆和其他内存信息，附加调试器，甚至拍摄屏幕截图。对于模拟器，您还可以模拟模拟位置数据，发送短信和发起来电：'
- en: '![Dalvik Debug Monitor Server](img/B05069_03_03.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Dalvik调试监视服务器](img/B05069_03_03.jpg)'
- en: 'As the preceding screenshot shows, DDMS can primarily track, update, and display
    the following information:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，DDMS主要可以跟踪、更新和显示以下信息：
- en: All running processes
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有运行中的进程
- en: All running threads per process
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个进程的所有运行线程
- en: Consumed heap per process
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个进程的已用堆
- en: All log messages
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有日志消息
- en: On Android, every application runs in its own process, each of which runs in
    its own virtual machine. The debugger can be attached to the exposed port of VM.
    DDMS connects to adb on start. On successful connection, a VM monitoring service
    is created between adb and DDMS, which informs DDMS upon starting and ending a
    VM on the device. DDMS retrieves the VM's process ID via adb, and opens a connection
    to the VM's debugger when there is an active VM running through the adb daemon
    on the device. DDMS can now communicate to the VM using a custom wire protocol.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android上，每个应用程序都在自己的进程中运行，每个进程都在自己的虚拟机中运行。调试器可以连接到VM的公开端口。DDMS在启动时连接到adb。成功连接后，在adb和DDMS之间创建了一个VM监视服务，该服务在设备上启动和结束VM时通知DDMS。DDMS通过adb检索VM的进程ID，并在通过设备上的adb守护程序运行的活动VM时，打开到VM的调试器的连接。DDMS现在可以使用自定义的线路协议与VM通信。
- en: DDMS also listens on the default debugging port, called **base port**. The base
    port is a port forwarder, which can accept VM traffic from any debugging port
    and forward it to the debugger. The traffic that is forwarded is determined by
    the currently selected process in the DDMS **Devices** view.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: DDMS还监听默认调试端口，称为**基本端口**。基本端口是一个端口转发器，可以接受来自任何调试端口的VM流量并将其转发到调试器。转发的流量由DDMS
    **设备**视图中当前选择的进程确定。
- en: Other tools
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他工具
- en: The elements mentioned in the previous sections are the minimum requirement
    for Android development, with which a full application can be created. However,
    the development process can become much easier with the support of a few other
    tools. Let's have a look at a few of such tools. These tools are not mandatory
    for Android development, but they are recommended to be used for a better development
    process.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 前面部分提到的元素是Android开发的最低要求，可以使用它们创建完整的应用程序。但是，借助其他一些工具的支持，开发过程可以变得更加容易。让我们看看一些这样的工具。这些工具对于Android开发并非强制使用，但建议使用以获得更好的开发过程。
- en: Eclipse
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Eclipse
- en: Although Eclipse is not the only Java development environment that can be used
    to develop Android applications, it is by far the most popular. This is partially
    due to its cost (free!), but mostly due to the strong integration of Android tools
    with Eclipse. This integration is achieved with the ADT plugin for Eclipse, which
    can be downloaded from the Android website.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Eclipse不是唯一可用于开发Android应用程序的Java开发环境，但它是迄今为止最受欢迎的。这在一定程度上是由于其成本（免费！），但主要是由于Android工具与Eclipse的强大集成。这种集成是通过Eclipse的ADT插件实现的，可以从Android网站下载。
- en: 'Use of Eclipse for Android development is a well-known practice for many developers.
    Some of the reasons for this are as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多开发人员来说，使用Eclipse进行Android开发是一个众所周知的做法。其中一些原因如下：
- en: Free Eclipse IDE
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费的Eclipse IDE
- en: Direct Android plugin support
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接的Android插件支持
- en: Direct DDMS support
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接的DDMS支持
- en: Simple interface
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的界面
- en: Android NDK support
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android NDK支持
- en: The launch of Android Studio reduced the popularity of Eclipse among Android
    developers, because Android Studio has everything inbuilt to support any Android
    development. Moreover, it is a much simplified tool to use in design view. Google
    itself is promoting the new tool massively.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio的推出降低了Eclipse在Android开发人员中的流行度，因为Android Studio具有内置的支持任何Android开发所需的一切。此外，在设计视图中使用起来更加简化。谷歌本身正在大力推广这个新工具。
- en: 'There are a few drawbacks in Eclipse Android development, because it uses Android
    SDK as a third-party tool. The significant drawbacks are as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse Android开发存在一些缺点，因为它使用Android SDK作为第三方工具。主要缺点如下：
- en: Debugging through Eclipse is sometimes difficult
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Eclipse进行调试有时很困难
- en: ADB configuration is tricky
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ADB配置很棘手
- en: Android manifest has to be managed manually
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android清单必须手动管理
- en: The design view is very complex through Eclipse IDE
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Eclipse IDE进行设计视图非常复杂
- en: Eclipse is an excellent standalone IDE, but when it comes to Android development,
    Android Studio wins the race.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse是一个出色的独立IDE，但在Android开发方面，Android Studio赢得了比赛。
- en: Hierarchy Viewer
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 层次结构查看器
- en: Hierarchy Viewer, whether it's accessed through the standalone application or
    the relatively new Eclipse perspective, is used to see how your layouts and screens
    resolve at runtime.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 层次结构查看器，无论是通过独立应用程序还是相对较新的Eclipse透视图访问，都用于查看布局和屏幕在运行时的解析方式。
- en: 'It provides a graphical representation of the layout and view hierarchy of
    your application, and can be used to diagnose layout problems (image source: [https://media-mediatemple.netdna-ssl.com/wp-content/uploads/2012/03/da_hierarchy_viewer.png](https://media-mediatemple.netdna-ssl.com/wp-content/uploads/2012/03/da_hierarchy_viewer.png)):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供了应用程序布局和视图层次结构的图形表示，并可用于诊断布局问题（图片来源：[https://media-mediatemple.netdna-ssl.com/wp-content/uploads/2012/03/da_hierarchy_viewer.png](https://media-mediatemple.netdna-ssl.com/wp-content/uploads/2012/03/da_hierarchy_viewer.png)）：
- en: '![Hierarchy Viewer](img/B05069_03_04.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![层次结构查看器](img/B05069_03_04.jpg)'
- en: Draw 9-Patch
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Draw 9-Patch
- en: 'When it comes to graphics design, the Draw 9-patch tool comes in handy. This
    tool allows you to convert traditional PNG graphic files into stretchable graphics
    that are more flexible and efficient for mobile development use. The tool simplifies
    the creation of NinePatch files in an environment that instantly displays the
    results:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在图形设计方面，Draw 9-patch工具非常有用。该工具允许您将传统的PNG图形文件转换为可伸缩的图形，对于移动开发使用更加灵活和高效。该工具简化了在即时显示结果的环境中创建NinePatch文件的过程：
- en: '![Draw 9-Patch](img/B05069_03_05.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![Draw 9-Patch](img/B05069_03_05.jpg)'
- en: ProGuard
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ProGuard
- en: ProGuard is not directly associated with Android development, but it helps in
    protecting the intellectual property of the developer. It is a very common practice
    for Android game developers to use ProGuard.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: ProGuard与Android开发没有直接关联，但它有助于保护开发者的知识产权。对于Android游戏开发人员来说，使用ProGuard是一种非常常见的做法。
- en: ProGuard basically wraps the members and methods to a non-readable code structure.
    This tool can be configured to obfuscate the resulting binary. ProGuard also helps
    in optimizing the binary, so that the overall package size is reduced.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: ProGuard基本上将成员和方法包装成不可读的代码结构。该工具可以配置为混淆生成的二进制文件。ProGuard还有助于优化二进制文件，从而减小整体包大小。
- en: ProGuard can be difficult to use when developers try to integrate pre-compiled
    JARs into the Android project. Sometimes conflicts are created in class structures
    if the JAR is already optimized through ProGuard. In those situations, ProGuard
    must be configured to exclude the precompiled JARs in order to achieve a successful
    build.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当开发人员尝试将预编译的JAR文件集成到Android项目中时，ProGuard可能很难使用。如果JAR已经通过ProGuard进行了优化，类结构可能会产生冲突。在这种情况下，必须配置ProGuard以排除预编译的JAR，以实现成功构建。
- en: It is always recommended to use ProGuard to protect the game classes from reverse
    engineering or decompilation.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 始终建议使用ProGuard来保护游戏类免受逆向工程或反编译。
- en: Asset optimization tools
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资产优化工具
- en: We all know the vast range of Android hardware configurations. It is always
    necessary to optimize the assets to reduce runtime memory usage and unnecessary
    data processing. In games, graphical assets take most of the storage and memory.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都知道Android硬件配置的广泛范围。始终有必要优化资产以减少运行时内存使用和不必要的数据处理。在游戏中，图形资产占据了大部分存储空间和内存。
- en: Full asset optimization
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 完整的资产优化
- en: An unoptimized asset may hold some unnecessary data, like transparency information
    in an opaque asset, EXIF data, unused color information, extra bit depth, and
    so on.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 未经优化的资产可能包含一些不必要的数据，例如不透明资产中的透明信息，EXIF数据，未使用的颜色信息，额外的位深度等。
- en: Asset optimizer tools help to get rid of this burden. However, it is tricky
    to use such tools as the asset quality may be lost. A developer should be very
    cautious while using these tools.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 资产优化工具有助于摆脱这一负担。但是，使用此类工具可能会使资产质量下降。开发人员在使用这些工具时应非常谨慎。
- en: For example, if an asset is supposed to be at 24 bit, but was optimized with
    an 8 bit optimizer tool, it will surely lose its visual quality. So, over-optimization
    is never recommended for any games, and it is the developer's responsibility to
    use proper optimization techniques to maintain the game quality.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一个资产应该是24位的，但是使用了8位优化工具进行了优化，它肯定会失去其视觉质量。因此，不建议对任何游戏进行过度优化，开发人员有责任使用适当的优化技术来维护游戏质量。
- en: 'The following are a few such asset optimizer tools:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些此类资产优化工具：
- en: PNGOUT
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PNGOUT
- en: TinyPNG
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TinyPNG
- en: RIOT
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RIOT
- en: JPEGmini
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JPEGmini
- en: PNGGauntlet
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PNGGauntlet
- en: 'With the help of such tools, art assets can be optimized up to 80-90% of their
    size. But many developers don''t prefer to use them on a regular basis because
    of the following reasons:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 借助这些工具，艺术资源的大小可以优化到80-90％。但许多开发人员不喜欢定期使用它们，原因如下：
- en: The developers do not optimize each asset separately, which results in quality
    loss for a few assets.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员不会单独优化每个资产，这导致了一些资产的质量损失。
- en: It is really difficult to choose the right tools for optimization. Sometimes,
    multiple tools are required for the same job, which slows down the overall development
    process.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择正确的优化工具真的很困难。有时，相同的工作可能需要多个工具，这会减慢整体开发过程。
- en: Creating sprites
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建精灵
- en: In many cases, it is noticed that a large number of small art assets are being
    used in games individually. This may cause critical performance lag for the game.
    It is recommended to use a sprite building tool to merge those assets into one
    to save space and time. SpriteBuilder and TexturePacker are two good examples
    of such tools.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，人们注意到游戏中使用了大量小型艺术资源。这可能导致游戏的性能严重滞后。建议使用精灵构建工具将这些资源合并到一个资源中，以节省空间和时间。SpriteBuilder和TexturePacker是此类工具的两个很好的例子。
- en: Tools for testing
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试工具
- en: For any development process, testing is of major importance. For Android game
    development too, there are a few tools and processes to make testing easier.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何开发过程，测试都非常重要。对于Android游戏开发，也有一些工具和流程可以使测试变得更容易。
- en: Creating a test case
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建测试用例
- en: Activity tests are written in a structured way. Make sure to put your tests
    in a separate package, distinct from the code under test. By convention, your
    test package name should follow the same name as the application package, suffixed
    with `.tests`. In the test package you created, add the Java class for your test
    case. By convention, your test case name should also follow the same name as the
    Java or Android class that you want to test, but suffixed with `Test`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 活动测试以结构化方式编写。确保将测试放在与受测试代码不同的包中。按照惯例，您的测试包名称应该与应用程序包名称相同，后缀为`.tests`。在您创建的测试包中，添加您的测试用例的Java类。按照惯例，您的测试用例名称也应该与您想要测试的Java或Android类的名称相同，但后缀为`Test`。
- en: 'To create a new test case in Eclipse, perform the following steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Eclipse中创建新的测试用例，请执行以下步骤：
- en: In Package Explorer, right-click on the `/src` directory for your test project,
    and select **New** | **Package**.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包资源管理器中，右键单击您的测试项目的`/src`目录，然后选择**新建** | **包**。
- en: Set the **Name** field to `<package_name>.tests` (for example, `com.example.android.testingfun.tests`),
    and click on **Finish**.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**名称**字段设置为`<package_name>.tests`（例如`com.example.android.testingfun.tests`），然后单击**完成**。
- en: Right-click on the test package you created, and select **New** | **Class**.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击您创建的测试包，并选择**新建** | **类**。
- en: Set the **Name** field to `<activity_name>Test` (for example, `MyFirstTestActivityTest`),
    and click on **Finish**.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**名称**字段设置为`<activity_name>Test`（例如`MyFirstTestActivityTest`），然后单击**完成**。
- en: Setting up your test fixture
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置测试装置
- en: A test fixture consists of objects that must be initialized for running one
    or more tests. To set up the test fixture, you can override the `setUp()` and
    `tearDown()` methods in your test. The test runner automatically runs `setUp()`
    before running any other test methods, and `tearDown()` at the end of each test
    method execution. You can use these methods to keep the code for test initialization
    and clean up separate from the tests methods.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 测试装置由必须初始化以运行一个或多个测试的对象组成。要设置测试装置，您可以重写测试中的`setUp()`和`tearDown()`方法。测试运行器在运行任何其他测试方法之前自动运行`setUp()`，并在每个测试方法执行结束时运行`tearDown()`。您可以使用这些方法将测试初始化和清理的代码与测试方法分开。
- en: 'To set up a test fixture in Eclipse, follow the steps listed next:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Eclipse中设置测试装置，请按照下面列出的步骤进行操作：
- en: 'In Package Explorer, double-click on the test case that you created earlier
    to bring up the Eclipse Java editor, then modify your test case class to extend
    one of the subclasses of `ActivityTestCase`. For example:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包资源管理器中，双击您之前创建的测试用例，以打开Eclipse Java编辑器，然后修改您的测试用例类以扩展`ActivityTestCase`的子类之一。例如：
- en: '[PRE7]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, add the constructor and `setUp()` methods to your test case, and add
    variable declarations for the activity that you want to test. For example:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，向您的测试用例添加构造函数和`setUp()`方法，并为您想要测试的活动添加变量声明。例如：
- en: '[PRE8]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The constructor is invoked by the test runner to instantiate the test class,
    while the `setUp()` method is invoked by the test runner before it runs any tests
    in the test class.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 构造函数由测试运行器调用以实例化测试类，而`setUp()`方法在测试运行器运行测试类中的任何测试之前由测试运行器调用。
- en: Typically, in the `setUp()` method, you should invoke the superclass constructor
    for `setUp()`, which is required by JUnit
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在`setUp()`方法中，您应该调用`setUp()`的超类构造函数，这是JUnit所要求的。
- en: 'You can initialize your test fixture state by:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下方式初始化测试装置状态：
- en: Defining the instance variables that store the state of the fixture.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义存储装置状态的实例变量。
- en: Creating and storing a reference to an instance of the activity under test.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并存储对要测试的活动实例的引用。
- en: Obtaining a reference to any UI components in the activity that you want to
    test.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取要测试的活动中的任何UI组件的引用。
- en: Developers can use the `getActivity()` method to get a reference to the activity
    under test.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以使用`getActivity()`方法获取对要测试的活动的引用。
- en: Adding test preconditions
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加测试前提条件
- en: As a sanity check, it is good practice to verify that the test fixture has been
    set up correctly, and the objects that you want to test have been correctly instantiated
    or initialized. That way, you won't have to see tests failing because something
    was wrong with the setup of your test fixture. By convention, the method for verifying
    your test fixture is called `testPreconditions()`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种合理检查，验证测试装置是否已正确设置，并且您要测试的对象是否已正确实例化或初始化是一个好习惯。这样，您就不必因为测试装置的设置有问题而看到测试失败。按照惯例，用于验证测试装置的方法称为`testPreconditions()`。
- en: 'For example, you might want to add a `testPreconditions()` method like this
    to your test case:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可能希望向您的测试用例添加一个类似于以下内容的`testPreconditions()`方法：
- en: '[PRE9]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The assertion methods are from the Junit `Assert` class. Generally, you can
    use assertions to verify if a specific condition that you want to test is true.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 断言方法来自Junit的`Assert`类。通常，您可以使用断言来验证您要测试的特定条件是否为真。
- en: If the condition is false, the assertion method throws an `AssertionFailedError`
    exception, which is then typically reported by the test runner. You can provide
    a string in the first argument of your assertion method to give some contextual
    details if the assertion fails.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果条件为假，则断言方法会抛出`AssertionFailedError`异常，然后通常由测试运行器报告。您可以在断言方法的第一个参数中提供一个字符串，以便在断言失败时提供一些上下文详情。
- en: If the condition is true, the test passes. In both cases, the test runner proceeds
    to run the other test methods in the test case.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果条件为真，则测试通过。在两种情况下，测试运行器都会继续运行测试用例中的其他测试方法。
- en: Adding test methods to verify an activity
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加测试方法来验证一个活动
- en: Next, add one or more test methods to verify the layout and functional behavior
    of your activity.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加一个或多个测试方法来验证活动的布局和功能行为。
- en: 'For example, if your activity includes a TextView, you can add a test method
    like this to check that it has the correct label text:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您的活动包括一个TextView，您可以添加一个类似于以下内容的测试方法来检查它是否具有正确的标签文本：
- en: '[PRE10]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `testMyFirstTestTextView_labelText()` method simply checks that the default
    text of the TextView, which is set by the layout, is the same as the expected
    text defined in the `strings.xml` resource.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`testMyFirstTestTextView_labelText()`方法只是检查TextView的默认文本（由布局设置）是否与`strings.xml`资源中定义的预期文本相同。'
- en: Note
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When naming test methods, you can use an underscore to separate what is being
    tested from the specific case being tested. This style makes it easier to see
    exactly what cases are being tested.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在命名测试方法时，您可以使用下划线来区分正在测试的内容和正在测试的具体情况。这种风格使得更容易看到确切测试了哪些情况。
- en: When doing this type of string value comparison, it's a good practice to read
    the expected string from your resources instead of hardcoding the string in your
    comparison code. This prevents your test from easily breaking whenever the string
    definitions are modified in the resource file.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行这种类型的字符串值比较时，最好从资源中读取预期字符串，而不是在比较代码中硬编码字符串。这样可以防止在资源文件中修改字符串定义时轻松破坏您的测试。
- en: To perform the comparison, pass both the expected and actual strings as arguments
    to the `assertEquals()` method. If the values are not the same, the assertion
    will throw an `AssertionFailedError` exception.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行比较，将预期和实际字符串作为参数传递给`assertEquals()`方法。如果这些值不相同，断言将抛出`AssertionFailedError`异常。
- en: If you added a `testPreconditions()` method, put your test methods after the
    `testPreconditions()` definition in your Java class.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您添加了一个`testPreconditions()`方法，请在Java类中的`testPreconditions()`定义之后放置您的测试方法。
- en: 'You can build and run your test easily from the Package Explorer in Eclipse.
    To build and run your test, follow these steps:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Eclipse的“包资源管理器”中轻松构建和运行您的测试。要构建和运行您的测试，请按照以下步骤进行：
- en: Connect an Android device to your machine. On the device or emulator, open the
    **Settings** menu, select **Developer options**, and make sure that **USB debugging**
    is enabled.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Android设备连接到计算机。在设备或模拟器上，打开**设置**菜单，选择**开发者选项**，并确保**USB调试**已启用。
- en: In the Project Explorer, right-click on the test class that you created earlier,
    and select **Run As** | **Android JUnit Test**.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“项目资源管理器”中，右键单击您之前创建的测试类，然后选择**运行为** | **Android JUnit测试**。
- en: In the **Android Device Chooser** dialog, select the device that you just connected,
    then click on **OK**.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Android设备选择器**对话框中，选择刚刚连接的设备，然后单击**确定**。
- en: In the JUnit view, verify that the test passes with no errors or failures.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在JUnit视图中，验证测试是否通过，没有错误或失败。
- en: Performance profiling tools
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能分析工具
- en: 'Putting pixels on the screen involves four primary pieces of hardware: the
    CPU computes display lists, the GPU renders images to the display, the memory
    stores images and data, and the battery provides electrical power. Each of these
    pieces of hardware has constraints; pushing or exceeding those constraints causes
    your app to be slow, worsens the display performance, or exhausts the battery.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕上放置像素涉及四个主要的硬件部件：CPU计算显示列表，GPU将图像渲染到显示器，内存存储图像和数据，电池提供电力。每个硬件部件都有约束；推动或超过这些约束会导致您的应用变慢，降低显示性能，或耗尽电池。
- en: To discover what causes your specific performance problems, you need to take
    a look under the hood, use tools to collect data about your app's execution behavior,
    surface that data as lists and graphics, understand and analyze what you see,
    and improve your code.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 要发现导致特定性能问题的原因，您需要深入了解，使用工具收集有关应用程序执行行为的数据，将这些数据显示为列表和图形，理解和分析所见的内容，并改进您的代码。
- en: Android Studio and your device provide profiling tools to record and visualize
    the rendering, computing, memory, and battery performance of your app.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio和您的设备提供了性能分析工具，记录和可视化应用的渲染、计算、内存和电池性能。
- en: Android Studio
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android Studio
- en: 'Android Studio is the official IDE for Android application development, based
    on IntelliJ IDEA. On top of the capabilities you expect from IntelliJ, Android
    Studio offers the following among many others:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio是Android应用开发的官方IDE，基于IntelliJ IDEA。除了您期望从IntelliJ获得的功能外，Android
    Studio还提供了以下功能：
- en: Flexible Gradle-based build system
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灵活的基于Gradle的构建系统
- en: Build variants and multiple `.apk` file generation
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建变体和多个`.apk`文件生成
- en: Code templates to help you build common app features
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码模板可帮助您构建常见的应用程序功能
- en: Rich layout editor with support for drag and drop theme editing
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有拖放主题编辑支持的丰富布局编辑器
- en: lint tools to catch performance, usability, version compatibility, and other
    problems
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lint工具用于捕捉性能、可用性、版本兼容性和其他问题
- en: ProGuard and app-signing capabilities
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ProGuard和应用签名功能
- en: Built-in support for the Google Cloud platform, making it easy to integrate
    Google Cloud messaging and App Engine
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置对Google Cloud平台的支持，轻松集成Google Cloud消息传递和App Engine
- en: If you're new to Android Studio or the IntelliJ IDEA interface, this section
    provides an introduction to some key Android Studio features.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是Android Studio或IntelliJ IDEA界面的新手，本节将介绍一些关键的Android Studio功能。
- en: Android project view
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android项目视图
- en: 'By default, Android Studio displays your project files in the Android project
    view. This view shows a flattened version of your project''s structure, which
    provides quick access to the key source files of Android projects, and helps you
    work with the Gradle-based build system. The Android project view:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Android Studio在Android项目视图中显示项目文件。此视图显示项目结构的扁平化版本，可快速访问Android项目的关键源文件，并帮助您使用基于Gradle的构建系统。Android项目视图：
- en: Shows the most important source directories at the top level of the module hierarchy
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在模块层次结构的顶层显示最重要的源目录
- en: Groups the build files for all modules in a common folder
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有模块的构建文件分组到一个公共文件夹中
- en: Groups all the manifest files for each module in a common folder
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将每个模块的所有清单文件分组到一个公共文件夹中
- en: Shows resource files from all Gradle source sets
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示所有Gradle源集的资源文件
- en: Groups resource files for different locales, orientations, and screen types
    in a single group per resource type
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将不同语言环境、方向和屏幕类型的资源文件分组到单个资源类型的单个组中
- en: 'The Android project view shows all the build files at the top level of the
    project hierarchy under `Gradle Scripts`. Each project module appears as a folder
    at the top level of the project hierarchy, and contains these four elements at
    the top level:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: Android项目视图在项目层次结构的顶层显示所有构建文件，位于`Gradle Scripts`下。每个项目模块都显示为项目层次结构的顶层文件夹，并包含以下四个元素：
- en: '`java/`: Source files for the module'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`java/`：模块的源文件'
- en: '`manifests/`: Manifest files for the module'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manifests/`：模块的清单文件'
- en: '`res/`: Resource files for the module'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res/`：模块的资源文件'
- en: '`Gradle Scripts/`: Gradle build and property files'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Gradle Scripts/`：Gradle构建和属性文件'
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For example, the Android project view groups all the instances of the `ic_launcher.png`
    resource for different screen densities under the same element.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Android项目视图将不同屏幕密度下`ic_launcher.png`资源的所有实例分组到同一个元素下。
- en: The project structure on disk differs from this flattened representation. To
    switch back to the segregated project view, select your project from the **Project**
    drop-down menu.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘上的项目结构与此扁平化表示不同。要切换回分隔的项目视图，请从**项目**下拉菜单中选择您的项目。
- en: Memory and CPU monitor
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内存和CPU监视器
- en: Android Studio provides a memory and CPU monitor view so that you can easily
    monitor your app's performance and memory usage to track CPU usage, find deallocated
    objects, locate memory leaks, and track the amount of memory the connected device
    is using. With your app running on a device or emulator, click on the **Android**
    tab in the lower-left corner of the runtime window to launch the **Android runtime**
    window. Click on the **Memory | CPU** tab.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio提供了内存和CPU监视器视图，以便您可以轻松监视应用的性能和内存使用情况，跟踪CPU使用情况，查找已释放的对象，定位内存泄漏，并跟踪连接设备使用的内存量。在设备或模拟器上运行您的应用程序时，单击运行时窗口左下角的**Android**选项卡，以启动**Android运行时**窗口。单击**内存|CPU**选项卡。
- en: When you're monitoring memory usage in Android Studio, you can initiate garbage
    collection, and dump the Java heap to a heap snapshot in an Android-specific HPROF
    binary format file at the same time. The HPROF viewer displays classes, instances
    of each class, and a reference tree to help you track memory usage and find memory
    leaks.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android Studio中监视内存使用情况时，您可以启动垃圾回收，并同时将Java堆转储到Android特定的HPROF二进制格式文件中。HPROF查看器显示类、每个类的实例和引用树，以帮助您跟踪内存使用情况和查找内存泄漏。
- en: Android Studio allows you to track memory allocation as it monitors memory use.
    Tracking memory allocation allows you to monitor where objects are being allocated
    when you perform certain actions. Knowing these allocations enables you to adjust
    the method calls related to those actions to optimize your app's performance and
    memory use.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio允许您跟踪内存分配，因为它监视内存使用情况。跟踪内存分配可以让您监视在执行某些操作时对象的分配位置。了解这些分配可以让您调整与这些操作相关的方法调用，以优化应用程序的性能和内存使用。
- en: '![Memory and CPU monitor](img/B05069_03_06.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![内存和CPU监视器](img/B05069_03_06.jpg)'
- en: Cross-platform tools
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跨平台工具
- en: Although we are only talking about Android game development, game development
    cannot be efficient without cross-platform support. We have already discussed
    game design flexibility. From a typical technical perspective, it should be possible
    to deploy the game for various platforms such as iOS, Windows, consoles, and the
    like.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们只谈论Android游戏开发，但是没有跨平台支持，游戏开发是不可能高效的。我们已经讨论了游戏设计的灵活性。从典型的技术角度来看，应该可以将游戏部署到各种平台，如iOS、Windows、游戏机等。
- en: Always keep in mind that cross-platform mobile development isn't quite as simple
    as writing the code once, putting it through a tool for translation, and publishing
    both an iOS and Android app to the respective app stores.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 请始终记住，跨平台移动开发并不像只编写一次代码，通过工具进行翻译，然后将iOS和Android应用程序发布到各自的应用商店那样简单。
- en: Using a cross-platform mobile development tool can reduce the time and cost
    associated with developing apps on both platforms, but the UI needs to be updated
    to match each system. For example, adjustments are needed between the two so that
    the menu and control commands match the UX of how Android devices and iOS devices
    inherently operate in different ways.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 使用跨平台移动开发工具可以减少在两个平台上开发应用程序所需的时间和成本，但需要更新UI以匹配每个系统。例如，需要在两者之间进行调整，以使菜单和控制命令与Android设备和iOS设备的UX相匹配，因为它们在操作方式上有所不同。
- en: 'There are plenty of tools that support cross-platform development. Let''s take
    a look at a few of them:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多支持跨平台开发的工具。让我们来看看其中的一些：
- en: Cocos2d-x
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cocos2d-x
- en: 'Cocos2d is primarily used in two-dimensional game development. It gives developers
    the option of five different forks or platforms to develop on, based on their
    preferred programming languages, such as C++, JavaScript, Objective C, Python,
    and C# (image source: [http://www.cocos2d-x.org/attachments/802/cocos2dx_landscape.png](http://www.cocos2d-x.org/attachments/802/cocos2dx_landscape.png)):'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Cocos2d主要用于二维游戏开发。它为开发者提供了基于其首选编程语言的五种不同分支或平台的选择，如C++、JavaScript、Objective C、Python和C#（图片来源：[http://www.cocos2d-x.org/attachments/802/cocos2dx_landscape.png](http://www.cocos2d-x.org/attachments/802/cocos2dx_landscape.png)）：
- en: '![Cocos2d-x](img/B05069_03_07.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![Cocos2d-x](img/B05069_03_07.jpg)'
- en: Primarily, this tool is efficient for Android, iOS, and Windows Phone. The development
    platform is mainly 2D; however, from Cocos2d-x 3.x it is possible to develop games
    in 3D also.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 主要，这个工具对Android、iOS和Windows Phone都很有效。开发平台主要是2D；然而，从Cocos2d-x 3.x开始，也可以开发3D游戏。
- en: Cocos2d-x works with native Android, and can support different processor architectures
    separately. This tool works in a Unix-based environment.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Cocos2d-x与原生Android兼容，并且可以分别支持不同的处理器架构。这个工具在Unix环境中工作。
- en: 'There is a huge developer community that develops games on Cocos2d-x. Here
    are the pros and cons of this cross-platform development engine from the Android
    game development perspective:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个庞大的开发者社区在Cocos2d-x上开发游戏。以下是从Android游戏开发角度看这个跨平台开发引擎的优缺点：
- en: 'The pros are as follows:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 优点如下：
- en: Supports the most common programming languages such as C++
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持最常见的编程语言，如C++
- en: Works in the native environment
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地环境中工作
- en: Lightweight and optimized library
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级和优化库
- en: Common OpenGL rendering system
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的OpenGL渲染系统
- en: All smartphone features supported for 2D development
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持所有智能手机功能的2D开发
- en: Completely free open source Engine
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全免费的开源引擎
- en: 'The cons are as follows:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点如下：
- en: Majorly supports 2D development
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要支持2D开发
- en: Cross-platform deployment is tricky and complicated
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨平台部署很棘手和复杂
- en: Performance and memory optimization is weak
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能和内存优化较弱
- en: No visual programming support
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有可视化编程支持
- en: No debugging tool is provided within the engine
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引擎内没有提供调试工具
- en: Mostly works on mobile phone platforms
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要在手机平台上运行
- en: Unity3D
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity3D
- en: 'Unity3D is the most popular cross-platform engine among Android and iOS game
    developers. Although it is mainly optimized for mobile platforms, it is powerful
    enough to deploy games for other major gaming platforms as well, for example,
    PC, Mac, consoles, web, Linux, Xbox, PlayStation, and so on. Currently, it supports
    17 different platforms for game development (image source: [http://img.danawa.com/images/descFiles/3/545/2544550_1_1390443907.png](http://img.danawa.com/images/descFiles/3/545/2544550_1_1390443907.png)):'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: Unity3D是Android和iOS游戏开发者中最流行的跨平台引擎。虽然它主要针对移动平台进行了优化，但它足够强大，可以为其他主要游戏平台部署游戏，例如PC、Mac、游戏机、Web、Linux、Xbox、PlayStation等。目前，它支持17种不同的游戏开发平台（图片来源：[http://img.danawa.com/images/descFiles/3/545/2544550_1_1390443907.png](http://img.danawa.com/images/descFiles/3/545/2544550_1_1390443907.png)）：
- en: '![Unity3D](img/B05069_03_08.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![Unity3D](img/B05069_03_08.jpg)'
- en: Once you've got your game on all your chosen platforms, Unity3D will even help
    you distribute it to the appropriate stores, get social shares, and track user
    analytics.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在所有选择的平台上都有了游戏，Unity3D甚至会帮助您将其分发到适当的商店，获得社交分享，并跟踪用户分析。
- en: Unity3D has the largest game developer community, with huge support on almost
    every aspect of game development. It has its separate store where you can find
    an effective prebuilt custom library, prebuilt plugins, and so on, which helps
    a developer in terms of reducing development time significantly. Here are the
    main pros and cons of Unity3D.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Unity3D拥有最大的游戏开发者社区，几乎在游戏开发的各个方面都有很大的支持。它有自己的商店，您可以在那里找到有效的预构建自定义库、预构建插件等，这有助于开发者大大减少开发时间。以下是Unity3D的主要优缺点。
- en: 'The pros are as follows:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 优点如下：
- en: Supports 17 different platforms for gaming
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持17种不同的游戏平台
- en: Very simple deployment procedure
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常简单的部署程序
- en: Visual editor to support visual programming
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化编辑器支持可视化编程
- en: Inbuilt powerful debug tool
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置强大的调试工具
- en: Huge library support
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 庞大的库支持
- en: Hassle-free development
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无忧开发
- en: Inbuilt powerful memory and performance optimizer
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置强大的内存和性能优化器
- en: 'The cons are as follows:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点如下：
- en: Comparatively bigger library size
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相对较大的库大小
- en: Slightly performance heavy (however, it is improving day by day)
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能稍重（然而，它正在日益改进）
- en: Supports only scripting languages (C#, JavaScript, and Boo)
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅支持脚本语言（C＃，JavaScript和Boo）
- en: Not completely free for commercial purposes
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商业用途并非完全免费
- en: Mainly works well with 3D
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要适用于3D
- en: Unreal Engine
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 虚幻引擎
- en: 'The recently released Unreal Engine 4 is a very powerful cross-platform game
    engine. Previously, this engine focused on the console and PC platforms only,
    but it has extended its support to mobile gaming platforms such as Android and
    iOS (image source: [http://up.11t.ir/view/691714/1425334231-unreal-engine-logo.png](http://up.11t.ir/view/691714/1425334231-unreal-engine-logo.png)):'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 最近发布的虚幻引擎4是一个非常强大的跨平台游戏引擎。此前，该引擎仅专注于主机和PC平台，但现在已将其支持扩展到Android和iOS等移动游戏平台（图片来源：[http://up.11t.ir/view/691714/1425334231-unreal-engine-logo.png](http://up.11t.ir/view/691714/1425334231-unreal-engine-logo.png)）：
- en: '![Unreal Engine](img/B05069_03_09.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![虚幻引擎](img/B05069_03_09.jpg)'
- en: 'There have been a lot of debates about whether Unreal Engine 4 is better than
    Unity3D. They both have their own pros and cons. Let''s have a look at the pros
    and cons of Unreal Engine 4:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 关于虚幻引擎4是否比Unity3D更好有很多争论。它们都有各自的优缺点。让我们来看看虚幻引擎4的优缺点：
- en: 'The pros are as follows:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 优点如下：
- en: The Blueprint feature allows flexible visual programming
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蓝图功能允许灵活的可视化编程
- en: Generic C++ language is more developer friendly
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用C++语言更适合开发人员
- en: Graphic processing is excellent
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形处理非常出色
- en: Inbuilt dynamic shadow system
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置动态阴影系统
- en: Simple to understand and start making games
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单易懂，开始制作游戏
- en: Vast support in terms of device scalability
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设备可扩展性方面提供广泛支持
- en: In-editor material designing
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑器中的材料设计
- en: 'The cons are as follows:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点如下：
- en: Mobile optimization is still not up to the mark
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动优化仍未达到标准
- en: Lack of 2D development tools
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏2D开发工具
- en: Lack of availability of third-party plugins
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏第三方插件的可用性
- en: Working with sprites is a pain for mobile development
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在移动开发中使用精灵很麻烦
- en: Still focused on high configuration hardware platforms
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仍专注于高配置硬件平台
- en: PhoneGap
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PhoneGap
- en: Owned by Adobe, PhoneGap is a free resource that first-time app developers can
    use to translate code from HTML5, CSS, and JavaScript.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 由Adobe拥有，PhoneGap是初次应用程序开发者可以使用的免费资源，用于将代码从HTML5，CSS和JavaScript翻译过来。
- en: They maintain SDKs at their end for each of the platforms you can develop an
    app for, so it's one less thing you have to worry about. And once your app is
    completed, you can share it with your team members for review to see if you need
    to make any improvements.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 他们在各个平台上维护SDK，因此您可以为每个平台开发应用程序，这样您就少了一件要担心的事情。一旦您的应用程序完成，您可以与团队成员分享，以便审查是否需要进行任何改进。
- en: 'Beyond iOS and Android, PhoneGap also creates apps for BlackBerry and Windows.
    So it is truly a cross-platform mobile development tool (image source: [http://blogs.perceptionsystem.com/wp-content/uploads/2016/03/phonegap.png](http://blogs.perceptionsystem.com/wp-content/uploads/2016/03/phonegap.png)):'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 除了iOS和Android，PhoneGap还为BlackBerry和Windows创建应用程序。因此，它真正是一个跨平台移动开发工具（图片来源：[http://blogs.perceptionsystem.com/wp-content/uploads/2016/03/phonegap.png](http://blogs.perceptionsystem.com/wp-content/uploads/2016/03/phonegap.png)）：
- en: '![PhoneGap](img/B05069_03_10.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap](img/B05069_03_10.jpg)'
- en: 'PhoneGap features the following pros:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap具有以下优点：
- en: Supports almost all mobile platforms
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几乎支持所有移动平台
- en: Lightweight application build
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级应用程序构建
- en: Supports HTML, CSS, and JavaScript
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持HTML，CSS和JavaScript
- en: Cordova apps install just like a native application
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cordova应用程序的安装方式与本机应用程序相同
- en: PhoneGap is open source and free
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PhoneGap是开源和免费的
- en: 'It has the following cons:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 它有以下缺点：
- en: Lack of platform support
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏平台支持
- en: Lack of third-party plugins
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏第三方插件
- en: Native UI is still difficult to use
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本机UI仍然难以使用
- en: Corona
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Corona
- en: 'Corona''s SDK comes with the promise that you can start coding your new app
    in as little as five minutes after the download. It''s another cross-platform
    mobile development tool that''s optimized for 2D gaming graphics, and helps you
    make games 10 times faster than it would take to code everything from scratch
    (image source: [https://qph.ec.quoracdn.net/main-qimg-fad64a16e531773325448e6ca699d117](https://qph.ec.quoracdn.net/main-qimg-fad64a16e531773325448e6ca699d117)):'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: Corona的SDK承诺您可以在下载后的五分钟内开始编写新应用程序。这是另一个专为2D游戏图形优化的跨平台移动开发工具，可以帮助您比从头开始编写代码快10倍制作游戏（图片来源：[https://qph.ec.quoracdn.net/main-qimg-fad64a16e531773325448e6ca699d117](https://qph.ec.quoracdn.net/main-qimg-fad64a16e531773325448e6ca699d117)）：
- en: '![Corona](img/B05069_03_11.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![Corona](img/B05069_03_11.jpg)'
- en: Corona's programming language is Lua, which is written in C, making it a cross-platform
    language. Corona chose Lua because they found it to be really robust, with a small
    footprint for mobile apps.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: Corona的编程语言是Lua，它是用C编写的，使其成为一种跨平台语言。Corona选择Lua是因为他们发现它对于移动应用程序来说非常强大，占用空间很小。
- en: 'Corona has the following pros:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: Corona具有以下优点：
- en: Good application performance in terms of FPS
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在FPS方面具有良好的应用程序性能
- en: Good inbuilt emulator
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 良好的内置模拟器
- en: Light application build
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级应用程序构建
- en: 'It has the following cons:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 它有以下缺点：
- en: Uses the less popular scripting language Lua
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用不太流行的脚本语言Lua
- en: Not free
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不免费
- en: Less plugin support
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件支持较少
- en: No on-device debugging support
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有设备上的调试支持
- en: Titanium
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 钛
- en: 'Using JavaScript, Titanium''s SDK creates native iOS and Android apps while
    reusing anywhere from 60% to 90% of the same code for all the apps you make, thereby
    saving you a significant amount of time (image source: [http://mobile.e20lab.info/wp-content/uploads/sites/2/2014/04/titanium.png](http://mobile.e20lab.info/wp-content/uploads/sites/2/2014/04/titanium.png)):'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 使用JavaScript，Titanium的SDK可以创建原生的iOS和Android应用程序，同时在制作所有应用程序时可以重复使用60%到90%的相同代码，从而为您节省大量时间（图片来源：[http://mobile.e20lab.info/wp-content/uploads/sites/2/2014/04/titanium.png](http://mobile.e20lab.info/wp-content/uploads/sites/2/2014/04/titanium.png)）：
- en: '![Titanium](img/B05069_03_12.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![Titanium](img/B05069_03_12.jpg)'
- en: Because Titanium is an open-source tool, hundreds of thousands of your fellow
    developers are constantly contributing to it to make it better, and give it more
    functionality. And if you happen to find a bug in its system, you can do so too.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Titanium是一个开源工具，成千上万的开发人员不断为其做出贡献，使其变得更好，并赋予它更多功能。如果您发现系统中有错误，您也可以这样做。
- en: 'The pros are as follows:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 优点如下：
- en: Quick-start flexibility for the initial phase
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始阶段的快速灵活性
- en: Lightweight application build
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级应用程序构建
- en: Common JavaScript language
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的JavaScript语言
- en: Web and mobile support on Android and iOS
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Android和iOS上的Web和移动支持
- en: Open source
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源
- en: 'The cons are as follows:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点如下：
- en: Lack of plugin support
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏插件支持
- en: Lack of platform support range
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏平台支持范围
- en: Script-based development increases complexity and effort
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于脚本的开发增加了复杂性和工作量
- en: Performance varies with different platforms
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能因不同平台而异
- en: Poor optimization compared to other tools
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与其他工具相比，优化不足
- en: Summary
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Development tools are essential for any game development; however, they have
    always been low priority in game design and the pre-development analysis stage.
    The necessity for these tools is realized when they are required.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 开发工具对于任何游戏开发都是必不可少的；然而，在游戏设计和前期分析阶段，它们一直是低优先级的。当需要这些工具时，才意识到它们的必要性。
- en: We have discussed all the mandatory tools for Android development only. But
    modern age game development demands flexibility across hardware platforms as well
    as operating systems. This is where cross-platform development engines come into
    the picture. These tools help the development process to become faster and more
    efficient; however, this comes at the cost of a little drop in performance and
    a larger build size. In most cases, developers have limited control over the cross-platform
    engine, but full control can be gained if the game is developed on native SDKs.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只讨论了Android开发的必备工具。但是现代游戏开发需要在硬件平台和操作系统上具有灵活性。这就是跨平台开发引擎出现的地方。这些工具帮助开发过程变得更快更高效；然而，这是以性能略微下降和更大的构建大小为代价的。在大多数情况下，开发人员对跨平台引擎的控制有限，但如果游戏是在原生SDK上开发的，就可以获得完全控制。
- en: Development tools are not just useful for development and debugging—they are
    very efficient in optimizing the game along with data protection, which might
    not have a direct impact on games. A good developer must use optimization tools
    to deliver a better performing game.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 开发工具不仅在开发和调试方面有用——它们在优化游戏以及数据保护方面非常高效，这可能对游戏没有直接影响。一个优秀的开发人员必须使用优化工具来提供性能更好的游戏。
