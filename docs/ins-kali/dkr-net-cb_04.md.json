["```\nsudo apt-get install iproute2 \n```", "```\nuser@docker1:~$ docker run --name web1 **--net=none** -d \\\njonlangemak/web_server_1\nc108ca80db8a02089cb7ab95936eaa52ef03d26a82b1e95ce91ddf6eef942938\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker exec web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\nuser@docker1:~$ \n```", "```\nuser@docker1:~$ **sudo ip link add bridge_end type veth \\**\n**peer name container_end**\nuser@docker1:~$ ip link show\n\u2026<Additional output removed for brevity>\u2026\n5: **container_end@bridge_end**: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether ce:43:d8:59:ac:c1 brd ff:ff:ff:ff:ff:ff\n6: **bridge_end@container_end**: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 72:8b:e7:f8:66:45 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ip link set dev **bridge_end** master docker0\nuser@docker1:~$ sudo ip link set **bridge_end** up\nuser@docker1:~$ ip link show bridge_end\n6: **bridge_end@container_end**: <NO-CARRIER,BROADCAST,MULTICAST,UP,M-DOWN> mtu 1500 qdisc pfifo_fast **master docker0** state LOWERLAYERDOWN mode DEFAULT group default qlen 1000\n    link/ether 72:8b:e7:f8:66:45 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$\n\n```", "```\nuser@docker1:~$ cd /var/run\nuser@docker1:/var/run$ sudo ln -s /var/run/docker/netns netns\n```", "```\nuser@docker1:/var/run$ sudo ip netns list\n**712f8a477cce**\ndefault\nuser@docker1:/var/run$\n```", "```\nuser@docker1:~$ docker inspect web1\n\u2026<Additional output removed for brevity>\u2026\n        \"State\": {\n            \"Status\": \"running\",\n            \"Running\": true,\n            \"Paused\": false,\n            \"Restarting\": false,\n            \"OOMKilled\": false,\n            \"Dead\": false,\n            **\"Pid\": 3156**,\n            \"ExitCode\": 0,\n            \"Error\": \"\",\n            \"StartedAt\": \"2016-10-05T21:32:00.163445345Z\",\n            \"FinishedAt\": \"0001-01-01T00:00:00Z\"\n        },\n\u2026<Additional output removed for brevity>\u2026\nuser@docker1:~$ \n```", "```\nuser@docker1:/var/run$ sudo ip netns identify **3156**\n**712f8a477cce**\nuser@docker1:/var/run$ \n```", "```\nuser@docker1:~$ docker inspect web1\n\u2026<Additional output removed for brevity>\u2026 \n\"NetworkSettings\": {\n            \"Bridge\": \"\",\n            \"SandboxID\": \"712f8a477cceefc7121b2400a22261ec70d6a2d9ab2726cdbd3279f1e87dae22\",\n            \"HairpinMode\": false,\n            \"LinkLocalIPv6Address\": \"\",\n            \"LinkLocalIPv6PrefixLen\": 0,\n            \"Ports\": {},\n **\"SandboxKey\": \"/var/run/docker/netns/712f8a477cce\",**\n            \"SecondaryIPAddresses\": null,\n            \"SecondaryIPv6Addresses\": null,\n            \"EndpointID\": \"\", \n\u2026<Additional output removed for brevity>\u2026 \nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ip link set container_end netns **712f8a477cce**\n\n```", "```\nuser@docker1:~$ docker exec web1 ip link show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n5: **container_end@if6**: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN qlen 1000\n    link/ether 86:15:2a:f7:0e:f9 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ip netns exec 712f8a477cce ip \\\naddr add 172.17.0.99/16 dev container_end\n```", "```\nuser@docker1:~$ sudo ip netns exec 712f8a477cce ip link \\\nset dev container_end name eth0\n```", "```\nuser@docker1:~$ sudo ip netns exec 712f8a477cce ip link \\\nset eth0 up\nuser@docker1:~$ ip link show bridge_end\n6: **bridge_end**@if5: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast master docker0 state UP mode DEFAULT group default qlen 1000\n    link/ether 86:04:ed:1b:2a:04 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$ sudo ip netns exec **4093b3b4e672 ip link show eth0**\n5: **eth0**@if6: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000\n    link/ether 86:15:2a:f7:0e:f9 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$ sudo ip netns exec **4093b3b4e672 ip addr show eth0**\n5: eth0@if6: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 86:15:2a:f7:0e:f9 brd ff:ff:ff:ff:ff:ff\n    inet **172.17.0.99/16** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::8415:2aff:fef7:ef9/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker1:~$ ping **172.17.0.99** -c 2\nPING 172.17.0.99 (172.17.0.99) 56(84) bytes of data.\n**64 bytes from 172.17.0.99: icmp_seq=1 ttl=64 time=0.104 ms**\n**64 bytes from 172.17.0.99: icmp_seq=2 ttl=64 time=0.045 ms**\n--- 172.17.0.99 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 999ms\nrtt min/avg/max/mdev = 0.045/0.074/0.104/0.030 ms\nuser@docker1:~$\nuser@docker1:~$ curl **http://172.17.0.99**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #1 - Running on port 80**</span></h1>\n</body>\n  </html>\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ip netns exec 712f8a477cce ip route \\\nadd default via **172.17.0.1**\nuser@docker1:~$ docker exec -it **web1** ping 4.2.2.2 -c 2\nPING 4.2.2.2 (4.2.2.2): 48 data bytes\n**56 bytes from 4.2.2.2: icmp_seq=0 ttl=50 time=39.764 ms**\n**56 bytes from 4.2.2.2: icmp_seq=1 ttl=50 time=40.210 ms**\n--- 4.2.2.2 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max/stddev = 39.764/39.987/40.210/0.223 ms\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo iptables -t nat -L\n\u2026<Additional output removed for brevity>\u2026\nChain POSTROUTING (policy ACCEPT)\ntarget     prot opt source               destination\n**MASQUERADE  all  --  172.17.0.0/16        anywhere**\n\u2026<Additional output removed for brevity>\u2026\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo iptables -t nat -A DOCKER ! -i docker0 -p tcp -m tcp \\\n--dport 32799 -j DNAT --to-destination 172.17.0.99:80\n```", "```\nsudo apt-get install iproute2 \n```", "```\nuser@docker1:~$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nuser@docker1:~$\nuser@docker1:~$ sudo systemctl stop docker\nuser@docker1:~$\nuser@docker1:~$ sudo ip link delete dev docker0\nuser@docker1:~$\nuser@docker1:~$ ip link show dev docker0\nDevice \"docker0\" does not exist.\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ip link add mybridge1 type bridge\nuser@docker1:~$ sudo ip address add 10.11.12.1/24 dev mybridge1\nuser@docker1:~$ sudo ip link set dev mybridge1 up\nuser@docker1:~$ ip addr show dev mybridge1\n7: mybridge1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN group default\n    link/ether 9e:87:b4:7b:a3:c0 brd ff:ff:ff:ff:ff:ff\n    inet **10.11.12.1/24** scope global mybridge1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::9c87:b4ff:fe7b:a3c0/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nExecStart=/usr/bin/dockerd --bridge=mybridge1\n```", "```\nuser@docker1:~$ sudo systemctl daemon-reload\nuser@docker1:~$ sudo systemctl start docker\n```", "```\nuser@docker1:~$ **docker run --name web1 -d -P jonlangemak/web_server_1**\ne8a05afba6235c6d8012639aa79e1732ed5ff741753a8c6b8d9c35a171f6211e\nuser@docker1:~$ **ip link show**\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000\n    link/ether 62:31:35:63:65:63 brd ff:ff:ff:ff:ff:ff\n3: eth1: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 36:b3:5c:94:c0:a6 brd ff:ff:ff:ff:ff:ff\n17: **mybridge1**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether 7a:1b:30:e6:94:b7 brd ff:ff:ff:ff:ff:ff\n**22: veth68fb58a@if21**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue **master mybridge1** state UP mode DEFAULT group default\n    link/ether 7a:1b:30:e6:94:b7 brd ff:ff:ff:ff:ff:ff link-netnsid 0\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker inspect web1 | grep SandboxKey\n            \"SandboxKey\": \"/var/run/docker/netns/926ddab911ae\",\nuser@docker1:~$ \nuser@docker1:~$ sudo ip netns exec **926ddab911ae ip link show**\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n**21: eth0@if22**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default\n    link/ether 02:42:0a:0b:0c:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\nuser@docker1:~$ \n```", "```\nuser@docker1:~$ docker exec web1 ip addr show dev **eth0**\n8: eth0@if9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:0a:0b:0c:02 brd ff:ff:ff:ff:ff:ff\n    inet **10.11.12.2/24** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:aff:fe0b:c02/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo iptables -t nat -L -n\n\u2026<Additional output removed for brevity>\u2026\nChain POSTROUTING (policy ACCEPT)\ntarget     prot opt source               destination\n**MASQUERADE  all  --  10.11.12.0/24        0.0.0.0/0**\n\u2026<Additional output removed for brevity>\u2026\nChain DOCKER (2 references)\ntarget     prot opt source               destination\nRETURN     all  --  0.0.0.0/0            0.0.0.0/0\n**DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:32768 to:10.11.12.2:80**\n\n```", "```\nsudo apt-get install iproute2 \n```", "```\nuser@docker1:~$ sudo apt-get install openvswitch-switch\n```", "```\nuser@docker1:~$ sudo ovs-vsctl -V\novs-vsctl (Open vSwitch) 2.5.0\nCompiled Mar 10 2016 14:16:49\nDB Schema 7.12.1\nuser@docker1:~$ \n```", "```\nuser@docker1:~$ sudo ovs-vsctl add-br ovs_bridge\n```", "```\nuser@docker1:~$ ip link show dev ovs_bridge\n6: ovs_bridge: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1\n    link/ether b6:45:81:aa:7c:47 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$ \n```", "```\nuser@docker1:~$ sudo ovs-vsctl show\n0f2ced94-aca2-4e61-a844-fd6da6b2ce38\n    Bridge ovs_bridge\n        Port ovs_bridge\n            Interface ovs_bridge\n                type: internal\n    ovs_version: \"2.5.0\"\nuser@docker1:~$ \n```", "```\nuser@docker1:~$ sudo ip addr add dev ovs_bridge 10.11.12.1/24\nuser@docker1:~$ sudo ip link set dev ovs_bridge up\n```", "```\nuser@docker1:~$ ip addr show dev ovs_bridge\n6: ovs_bridge: <BROADCAST,MULTICAST**,UP,LOWER_UP**> mtu 1500 qdisc noqueue state UNKNOWN group default qlen 1\n    link/ether b6:45:81:aa:7c:47 brd ff:ff:ff:ff:ff:ff\n    inet **10.11.12.1/24** scope global ovs_bridge\n       valid_lft forever preferred_lft forever\n    inet6 fe80::b445:81ff:feaa:7c47/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$ \nuser@docker1:~$ ping 10.11.12.1 -c 2\nPING 10.11.12.1 (10.11.12.1) 56(84) bytes of data.\n**64 bytes from 10.11.12.1: icmp_seq=1 ttl=64 time=0.036 ms**\n**64 bytes from 10.11.12.1: icmp_seq=2 ttl=64 time=0.025 ms**\n--- 10.11.12.1 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 999ms\nrtt min/avg/max/mdev = 0.025/0.030/0.036/0.007 ms\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ip link add ovs_end1 type veth \\\npeer name container_end1\n```", "```\nuser@docker1:~$ sudo ovs-vsctl add-port ovs_bridge ovs_end1\n```", "```\nuser@docker1:~$ sudo ovs-vsctl list-ports ovs_bridge\n**ovs_end1**\nuser@docker1:~$\n```", "```\nuser@docker1:~$ **ip link show dev ovs_end1**\n8: **ovs_end1@container_end1**: <BROADCAST,MULTICAST> mtu 1500 qdisc noop **master ovs-system** state DOWN mode DEFAULT group default qlen 1000\n    link/ether 56:e0:12:94:c5:43 brd ff:ff:ff:ff:ff:ff\nuser@docker1:~$\n```", "```\n    docker run --name web1 --net=none -d jonlangemak/web_server_1\n    ```", "```\n    docker inspect web1 | grep SandboxKey\n    \"SandboxKey\": \"/var/run/docker/netns/54b7dfc2e422\"\n    ```", "```\n    sudo ip link set container_end1 netns 54b7dfc2e422\n    ```", "```\n    sudo ip netns exec 54b7dfc2e422 ip link set dev \\\n    container_end1 name eth0\n    ```", "```\n    sudo ip netns exec 54b7dfc2e422 ip addr add \\\n    10.11.12.99/24 dev eth0\n    ```", "```\n    sudo ip netns exec 54b7dfc2e422 ip link set dev eth0 up\n    ```", "```\n    sudo ip link set dev ovs_end1 up\n    ```", "```\nuser@docker1:~$ ping 10.11.12.99 -c 2\nPING 10.11.12.99 (10.11.12.99) 56(84) bytes of data.\n**64 bytes from 10.11.12.99: icmp_seq=1 ttl=64 time=0.469 ms**\n**64 bytes from 10.11.12.99: icmp_seq=2 ttl=64 time=0.028 ms**\n--- 10.11.12.99 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 999ms\nrtt min/avg/max/mdev = 0.028/0.248/0.469/0.221 ms\nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ovs-appctl fdb/show ovs_bridge\nport  VLAN  MAC                Age\nLOCAL     0  b6:45:81:aa:7c:47    7\n **1     0  b2:7e:e8:42:58:39    7** \nuser@docker1:~$\n```", "```\nuser@docker1:~$ sudo ovs-dpctl show\nsystem@ovs-system:\n        lookups: hit:13 missed:11 lost:0\n        flows: 0\n        masks: hit:49 total:1 hit/pkt:2.04\n        port 0: ovs-system (internal)\n **port 1: ovs_bridge (internal)**\n        port 2: ovs_end1 \nuser@docker1:~$\n```", "```\nuser@docker1:~$ git clone https://github.com/jpetazzo/pipework\n\u2026<Additional output removed for brevity>\u2026 \nuser@docker1:~$ cd pipework/\nuser@docker1:~/pipework$ ls\n**docker-compose.yml  doctoc  LICENSE  pipework  pipework**.spec  README.md\nuser@docker1:~/pipework$\n```", "```\nuser@docker1:~$ docker run --name web2 --net=none -d \\\njonlangemak/web_server_2\n985384d0b0cd1a48cb04de1a31b84f402197b2faade87d073e6acdc62cf29151\nuser@docker1:~$\n```", "```\nuser@docker1:~/pipework$ sudo ./pipework **ovs_bridge \\**\n**web2 10.11.12.100/24**\nWarning: arping not found; interface may not be immediately reachable\nuser@docker1:~/pipework$\n```", "```\nuser@docker1:~/pipework$ sudo ./pipework docker0 -i eth0 web2 \\\n172.17.0.100/16@172.17.0.1\n```", "```\nuser@docker1:~/pipework$ **docker exec web2 ip addr**\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n9: **eth1**@if10: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP qlen 1000\n    link/ether da:40:35:ec:c2:45 brd ff:ff:ff:ff:ff:ff\n    inet **10.11.12.100/24** scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::d840:35ff:feec:c245/64 scope link\n       valid_lft forever preferred_lft forever\n11: **eth0**@if12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP qlen 1000\n    link/ether 2a:d0:32:ef:e1:07 brd ff:ff:ff:ff:ff:ff\n    inet **172.17.0.100/16** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::28d0:32ff:feef:e107/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~/pipework$ **docker exec web2 ip route**\n**default via 172.17.0.1 dev eth0**\n10.11.12.0/24 dev eth1  proto kernel  scope link  src 10.11.12.100\n172.17.0.0/16 dev eth0  proto kernel  scope link  src 172.17.0.100\nuser@docker1:~/pipework$ \n```", "```\nsudo apt-get install iproute2 \n```", "```\nuser@docker1:~$ sudo apt-get install openvswitch-switch\n\u2026<Additional output removed for brevity>\u2026 \nSetting up openvswitch-switch (2.0.2-0ubuntu0.14.04.3) ...\nopenvswitch-switch start/running\nuser@docker1:~$\nuser@docker1:~$ sudo ovs-vsctl add-br ovs_bridge\nuser@docker1:~$ sudo ip addr add dev ovs_bridge 10.11.12.1/24\nuser@docker1:~$ sudo ip link set dev ovs_bridge up\nuser@docker1:~$\nuser@docker1:~$ docker run --name web1 --net=none -dP \\\njonlangemak/web_server_1\n5e6b335b12638a7efecae650bc8e001233842bb97ab07b32a9e45d99bdffe468\nuser@docker1:~$\nuser@docker1:~$ cd pipework\nuser@docker1:~/pipework$ sudo ./pipework ovs_bridge \\\nweb1 10.11.12.100/24\nWarning: arping not found; interface may not be immediately reachable\nuser@docker1:~/pipework$\n```", "```\nuser@docker1:~$ curl http://**10.11.12.100**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #1 - Running on port 80**</span>\n    </h1>\n</body>\n  </html>\nuser@docker1:~$\n```", "```\nuser@docker3:~$ sudo apt-get install openvswitch-switch\n\u2026<Additional output removed for brevity>\u2026 \nSetting up openvswitch-switch (2.0.2-0ubuntu0.14.04.3) ...\nopenvswitch-switch start/running\nuser@docker3:~$\nuser@docker3:~$ sudo ovs-vsctl add-br ovs_bridge\nuser@docker3:~$ sudo ip addr add dev ovs_bridge 10.11.12.2/24\nuser@docker3:~$ sudo ip link set dev ovs_bridge up\nuser@docker3:~$\nuser@docker3:~$ docker run --name web2 --net=none -dP \\\njonlangemak/web_server_2\n155aff2847e27c534203b1ae01894b0b159d09573baf9844cc6f5c5820803278\nuser@docker3:~$\nuser@docker3:~$ cd pipework\nuser@docker3:~/pipework$ sudo ./pipework ovs_bridge web2 10.11.12.200/24\nWarning: arping not found; interface may not be immediately reachable\nuser@docker3:~/pipework$\n```", "```\nuser@docker3:~$ curl http://**10.11.12.200**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #2 - Running on port 80**</span>\n    </h1>\n</body>\n  </html>\nuser@docker3:~$\n```", "```\nuser@docker1:~$ sudo ovs-vsctl add-port ovs_bridge ovs_gre \\\n-- set interface ovs_gre type=gre options:remote_ip=192.168.50.101\n```", "```\nuser@docker3:~$ sudo ovs-vsctl add-port ovs_bridge ovs_gre \\\n-- set interface ovs_gre type=gre options:remote_ip=10.10.10.101\n```", "```\nuser@**docker1**:~$ docker exec -it **web1** curl http://**10.11.12.200**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #2 - Running on port 80**</span>\n    </h1>\n</body>\n  </html>\nuser@docker1:~$\n\nuser@**docker3**:~$ docker exec -it **web2** curl http://**10.11.12.100**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #1 - Running on port 80**</span>\n    </h1>\n</body>\n  </html>\nuser@docker3:~$\n```", "```\nsudo apt-get install iproute2 \n```", "```\nuser@docker1:~$ sudo apt-get install openvswitch-switch\n\u2026<Additional output removed for brevity>\u2026\nSetting up openvswitch-switch (2.0.2-0ubuntu0.14.04.3) ...\nopenvswitch-switch start/running\nuser@docker1:~$\nuser@docker1:~$ sudo ovs-vsctl add-br ovs_bridge\nuser@docker1:~$ sudo ip link set dev ovs_bridge up\nuser@docker1:~$\nuser@docker1:~$ sudo ip link add newbridge type bridge\nuser@docker1:~$ sudo ip link set newbridge up\nuser@docker1:~$ sudo ip address add 10.11.12.1/24 dev newbridge\nuser@docker1:~$ sudo ip link set newbridge up\n```", "```\nuser@docker1:~$ sudo ovs-vsctl add-port ovs_bridge ovs_gre \\\n-- set interface ovs_gre type=gre options:remote_ip=192.168.50.101\nuser@docker1:~$\nuser@docker1:~$ sudo ip link set ovs_bridge master newbridge\n```", "```\nExecStart=/usr/bin/dockerd --bridge=newbridge --fixed-cidr=10.11.12.128/26\n```", "```\nuser@docker1:~$ sudo systemctl daemon-reload\nuser@docker1:~$ sudo systemctl restart docker\n```", "```\nuser@docker1:~$ **docker run --name web1 -d -P jonlangemak/web_server_1**\n82c75625f8e5436164e40cf4c453ed787eab102d3d12cf23c86d46be48673f66\nuser@docker1:~$\nuser@docker1:~$ docker exec **web1 ip addr**\n\u2026<Additional output removed for brevity>\u2026\n8: **eth0**@if9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:0a:0b:0c:80 brd ff:ff:ff:ff:ff:ff\n    inet **10.11.12.128/24** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:aff:fe0b:c80/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker3:~$ sudo apt-get install openvswitch-switch\n\u2026<Additional output removed for brevity>\u2026\nSetting up openvswitch-switch (2.0.2-0ubuntu0.14.04.3) ...\nopenvswitch-switch start/running\nuser@docker3:~$\nuser@docker3:~$ sudo ovs-vsctl add-br ovs_bridge\nuser@docker3:~$ sudo ip link set dev ovs_bridge up\nuser@docker3:~$\nuser@docker3:~$ sudo ip link add newbridge type bridge\nuser@docker3:~$ sudo ip link set newbridge up\nuser@docker3:~$ sudo ip address add 10.11.12.2/24 dev newbridge\nuser@docker3:~$ sudo ip link set newbridge up\nuser@docker3:~$\nuser@docker3:~$ sudo ip link set ovs_bridge master newbridge\nuser@docker3:~$ sudo ovs-vsctl add-port ovs_bridge ovs_gre \\\n-- set interface ovs_gre type=gre options:remote_ip=10.10.10.101\nuser@docker3:~$\n```", "```\nExecStart=/usr/bin/dockerd --bridge=newbridge --fixed-cidr=10.11.12.192/26\n```", "```\nuser@docker3:~$ sudo systemctl daemon-reload\nuser@docker3:~$ sudo systemctl restart docker\n```", "```\nuser@docker3:~$ **docker run --name web2 -d -P jonlangemak/web_server_2**\neb2b26ee95580a42568051505d4706556f6c230240a9c6108ddb29b6faed9949\nuser@docker3:~$\nuser@docker3:~$ docker exec **web2 ip addr**\n\u2026<Additional output removed for brevity>\u2026\n9: **eth0**@if10: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:0a:0b:0c:c0 brd ff:ff:ff:ff:ff:ff\n    inet **10.11.12.192/24** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:aff:fe0b:cc0/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker3:~$\n```", "```\nuser@docker3:~$ docker exec -it **web2** curl http://**10.11.12.128**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #1 - Running on port 80**</span>\n    </h1>\n</body>\n  </html>\nuser@docker3:~$\n```", "```\nuser@docker1:~$ docker port **web1**\n80/tcp -> 0.0.0.0:**32768**\nuser@docker1:~$ curl http://**localhost:32768**\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #1 - Running on port 80**</span>\n    </h1>\n</body>\n  </html>\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker exec -it web1 ping **4.2.2.2** -c 2\nPING 4.2.2.2 (4.2.2.2): 48 data bytes\n**56 bytes from 4.2.2.2: icmp_seq=0 ttl=50 time=30.797 ms**\n**56 bytes from 4.2.2.2: icmp_seq=1 ttl=50 time=31.399 ms**\n--- 4.2.2.2 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max/stddev = 30.797/31.098/31.399/0.301 ms\nuser@docker1:~$\n```", "```\nsudo apt-get install bridge-utils\n```", "```\n    auto newbridge\n    iface newbridge inet static\n      address 10.11.12.1\n      netmask 255.255.255.0\n      bridge_ports ovs_bridge\n    ```", "```\n    auto newbridge\n    iface newbridge inet static\n      address 10.11.12.2\n      netmask 255.255.255.0\n      bridge_ports ovs_bridge\n    ```"]