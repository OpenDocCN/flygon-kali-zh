- en: Chapter 10. Fun with Scikits
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第十章：Scikits 的乐趣
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下秘籍：
- en: Installing scikit-learn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 scikit-learn
- en: Loading an example dataset
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载示例数据集
- en: Clustering Dow Jones stocks with scikit-learn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用 scikit-learn 对道琼斯股票进行聚类
- en: Installing statsmodels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Statsmodels
- en: Performing a normality test with statsmodels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Statsmodels 执行正态性检验
- en: Installing scikit-image
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 scikit-image
- en: Detecting corners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测角点
- en: Detecting edges
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测边界
- en: Installing pandas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Pandas
- en: Estimating correlation of stock returns with pandas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Pandas 估计股票收益的相关性
- en: Loading data as pandas objects from statsmodels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Statsmodels 中将数据作为 pandas 对象加载
- en: Resampling time series data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重采样时间序列数据
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: '**Scikits** are small, independent projects that are related to SciPy in some
    way but are not part of SciPy. These projects are not entirely independent, but
    operate under an umbrella, as a consortium of sorts. In this chapter, we will
    discuss several Scikits projects, such as the following:'
  prefs: []
  type: TYPE_NORMAL
  zh: '**Scikits** 是小型的独立项目，以某种方式与 SciPy 相关，但不属于 SciPy。 这些项目不是完全独立的，而是作为一个联合体在伞下运行的。
    在本章中，我们将讨论几个 Scikits 项目，例如：'
- en: scikit-learn, a machine learning package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scikit-learn，机器学习包
- en: '`statsmodels`, a statistics package'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Statsmodels，统计数据包
- en: scikit-image, an image processing package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scikit-image，图像处理包
- en: pandas, a data analysis package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pandas，数据分析包
- en: Installing scikit-learn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 scikit-learn
- en: The scikit-learn project aims to provide an API for machine learning. What I
    like the most about it is the amazing documentation. We can install scikit-learn
    with the package manager of our operating system. This option may or may not be
    available, depending on the operating system, but it should be the most convenient
    route.
  prefs: []
  type: TYPE_NORMAL
  zh: scikit-learn 项目旨在提供一种用于机器学习的 API。 我最喜欢的是令人惊叹的文档。 我们可以使用操作系统的包管理器安装 scikit-learn。
    根据操作系统的不同，此选项可能可用也可能不可用，但它应该是最方便的方法。
- en: Windows users can simply download an installer from the project website. On
    Debian and Ubuntu, the project is called python-sklearn. On MacPorts, the ports
    are called py26-scikits-learn and py27-scikits-learn. We can also install from
    source or using `easy_install`. There are third-party distributions available
    from Python(x, y), Enthought, and NetBSD.
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 用户只需从项目网站下载安装程序即可。 在 Debian 和 Ubuntu 上，该项目称为`python-sklearn`。 在 MacPorts
    上，这些端口称为`py26-scikits-learn`和`py27-scikits-learn`。 我们也可以从源代码或使用`easy_install`安装。
    PythonXY，Enthought 和 NetBSD 提供了第三方发行版。
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: You need to have SciPy and NumPy installed. Go back to [Chapter 1](ch01.xhtml
    "Chapter 1. Winding Along with IPython"), *Winding Along with IPython*, for instructions
    if necessary.
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装 SciPy 和 NumPy。 返回第一章，“使用 IPython”，以获取必要的说明。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'Let''s now see how we can install the scikit-learn project:'
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下如何安装 scikit-learn 项目：
- en: '**Installing with** `easy_install`: Type any one of the following commands
    at the command line:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用`easy_install`进行安装**：在命令行中键入以下命令之一：'
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This might not work because of permissions, so you might either need to write
    `sudo` in front of the commands, or log in as admin.
  prefs: []
  type: TYPE_NORMAL
  zh: 由于权限问题，这个可能无法工作，因此您可能需要在命令前面编写`sudo`，或以管理员身份登录。
- en: '**Installing from source**: Download the source from [http://pypi.python.org/pypi/scikit-learn/](http://pypi.python.org/pypi/scikit-learn/),
    unpack and `cd` into the downloaded folder. Then issue the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源代码安装**：从[`pypi.python.org/pypi/scikit-learn`](http://pypi.python.org/pypi/scikit-learn/)下载源代码，解压缩并使用`cd`进入下载的文件夹。
    然后发出以下命令：'
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Loading an example dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载示例数据集
- en: The scikit-learn project comes with a number of datasets and sample images that
    we can experiment with. In this recipe, we will load an example dataset included
    in the scikit-learn distribution. The datasets hold data as a NumPy two-dimensional
    array and metadata linked to the data.
  prefs: []
  type: TYPE_NORMAL
  zh: scikit-learn 项目附带了许多我们可以尝试的数据集和样例图像。 在本秘籍中，我们将加载 scikit-learn 分发中包含的示例数据集。 数据集将数据保存为
    NumPy 二维数组，并将元数据链接到该数据。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: We will load a sample dataset of house prices in Boston. It is a tiny dataset,
    so if you are looking for a house in Boston, don't get too excited! Other datasets
    are described at [http://scikit-learn.org/dev/modules/classes.html#module-sklearn.datasets](http://scikit-learn.org/dev/modules/classes.html#module-sklearn.datasets).
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将加载波士顿房价样本数据集。 这是一个很小的数据集，因此，如果您要在波士顿寻找房子，请不要太兴奋！ 其他数据集在[`scikit-learn.org/dev/modules/classes.html#module-sklearn.datasets`](http://scikit-learn.org/dev/modules/classes.html#module-sklearn.datasets)中进行了描述。
- en: 'We will look at the shape of the raw data and its maximum and minimum values.
    The shape is a tuple, representing the dimensions of the NumPy array. We will
    do the same for the target array, which contains values that are the learning
    objectives (determining house price). The following code from `sample_data.py`
    accomplishes our goals:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看原始数据的形状及其最大值和最小值。 形状是一个元组，表示 NumPy 数组的大小。 我们将对目标数组执行相同的操作，其中包含作为学习目标（确定房价）的值。
    以下`sample_data.py` 中的代码实现了我们的目标：
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The outcome of our program is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们计划的结果如下：
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Clustering Dow Jones stocks with scikits-learn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用 scikits-learn 对道琼斯股票进行聚类
- en: '**Clustering** is a type of machine learning algorithm that aims to group items
    based on similarities. In this example, we will use the log returns of stocks
    in the **Dow Jones Industrial Average** (**DJI** or **DJIA**) index to cluster.
    Most of the steps of this recipe have already passed the review in previous chapters.'
  prefs: []
  type: TYPE_NORMAL
  zh: '**聚类**是一种机器学习算法，旨在基于相似度对项目进行分组。 在此示例中，我们将使用**道琼斯工业平均指数**（**DJI** 或 **DJIA**）进行聚类。
    本秘籍的大多数步骤已通过前面各章的审查。'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'First, we will download the EOD price data for those stocks from Yahoo! Finance.
    Then, we will calculate a square affinity matrix. Finally, we will cluster the
    stocks with the `AffinityPropagation` class:'
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从雅虎金融下载这些股票的 EOD 价格数据。 然后，我们将计算平方亲和矩阵。 最后，我们将股票与`AffinityPropagation`类聚类：
- en: 'Download price data for 2011 using the stock symbols of the DJI Index. In this
    example, we are only interested in the close price:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 DJI 指数的股票代码下载 2011 年价格数据。 在此示例中，我们仅对收盘价感兴趣：
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Calculate the similarities between different stocks using the log returns as
    the metric. What we are trying to do is calculate the Euclidean distances for
    the data points:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用对数收益率作为指标来计算不同股票之间的相似度。 我们正在要做的是计算数据点的欧几里德距离：
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Give the `AffinityPropagation` class the result from the previous step. This
    class labels the data points, or in our case, stocks with the appropriate cluster
    number:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给`AffinityPropagation`类上一步的结果。 此类为数据点或在我们的情况下的股票标记了适当的群集编号：
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The complete clustering program is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的群集程序如下：
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output with the cluster numbers for each stock is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 具有每个股票的簇号的输出如下：
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: 'The following table is an overview of the functions we used in this recipe:'
  prefs: []
  type: TYPE_NORMAL
  zh: 下表是在秘籍中使用的函数的概述：
- en: '| Functions | Descriptions |'
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 描述 |'
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `sklearn.cluster.AffinityPropagation()` | Creates an `AffinityPropagation`
    object. |'
  prefs: []
  type: TYPE_TB
  zh: '| `sklearn.cluster.AffinityPropagation()` | 创建一个`AffinityPropagation`对象。 |'
- en: '| `sklearn.cluster.AffinityPropagation.fit()` | Computes an affinity matrix
    from Euclidian distances and applies affinity propagation clustering. |'
  prefs: []
  type: TYPE_TB
  zh: '| `sklearn.cluster.AffinityPropagation.fit()` | 从欧几里得距离计算亲和度矩阵，并应用亲和度传播聚类。
    |'
- en: '| `diff()` | Calculates differences of numbers within a NumPy array. If this
    is not specified, first-order differences are computed. |'
  prefs: []
  type: TYPE_TB
  zh: '| `diff()` | 计算 NumPy 数组中数字的差。 如果未指定，则计算一阶差。 |'
- en: '| `log()` | Calculates the natural log of elements in a NumPy array. |'
  prefs: []
  type: TYPE_TB
  zh: '| `log()` | 计算 NumPy 数组中元素的自然对数。 |'
- en: '| `sum()` | Sums the elements of a NumPy array. |'
  prefs: []
  type: TYPE_TB
  zh: '| `sum()` | 对 NumPy 数组的元素求和。 |'
- en: '| `dot()` | This performs matrix multiplication for two-dimensional arrays.
    It also calculates the inner product for one-dimensional arrays. |'
  prefs: []
  type: TYPE_TB
  zh: '| `dot()` | 这对二维数组执行矩阵乘法。 它还计算一维数组的内积。 |'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The relevant documentation is at [http://scikit-learn.org/stable/modules/generated/sklearn.cluster.AffinityPropagation.html](http://scikit-learn.org/stable/modules/generated/sklearn.cluster.AffinityPropagation.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关文档位于[`scikit-learn.org/stable/modules/generated/sklearn.cluster.AffinityPropagation.html`](http://scikit-learn.org/stable/modules/generated/sklearn.cluster.AffinityPropagation.html)'
- en: Installing statsmodels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Statsmodels
- en: The `statsmodels` package focuses on statistical modeling. We can integrate
    it with NumPy and pandas (more about pandas later in this chapter).
  prefs: []
  type: TYPE_NORMAL
  zh: '`statsmodels`包专注于统计建模。 我们可以将其与 NumPy 和 Pandas 集成（在本章稍后的内容中将有更多关于 Pandas 的信息）。'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'Source and binaries can be downloaded from [http://statsmodels.sourceforge.net/install.html](http://statsmodels.sourceforge.net/install.html).
    If you are installing from source, run the following command:'
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从[`statsmodels.sourceforge.net/install.html`](http://statsmodels.sourceforge.net/install.html)下载源码和二进制文件。 如果要从源代码安装，请运行以下命令：
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you are using `setuptools`, the command is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用`setuptools`，则命令如下：
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Performing a normality test with statsmodels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Statsmodels 执行正态性检验
- en: The `statsmodels` package has many statistical tests. We will see an example
    of such a test—the **Anderson-Darling test** for normality ([http://en.wikipedia.org/wiki/Anderson%E2%80%93Darling_test](http://en.wikipedia.org/wiki/Anderson%E2%80%93Darling_test)).
  prefs: []
  type: TYPE_NORMAL
  zh: '`statsmodels`包具有许多统计检验。 我们将看到这样一个检验的示例——用于正态性的**安德森-达林（Anderson-Darling）检验**（[`en.wikipedia.org/wiki/Anderson%E2%80%93Darling_test`](http://en.wikipedia.org/wiki/Anderson%E2%80%93Darling_test)）。'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: We will download price data as in the previous recipe, but this time for a single
    stock. Again, we will calculate the log returns of the close price of this stock,
    and use that as an input for the normality test function.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将像以前的秘籍一样下载价格数据，但这一次是单只股票。 再次，我们将计算该股票收盘价的对数收益，并将其用作正态性检验函数的输入。
- en: 'This function returns a tuple containing a second element—a **p-value** between
    0 and 1\. The complete code for this tutorial is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回一个包含第二个元素的元组，即 **P 值**，介于 0 和 1 之间。本教程的完整代码如下：
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following shows the output of the script with `p-value` of `0.13`:'
  prefs: []
  type: TYPE_NORMAL
  zh: 下面显示了`0.13`为`p-value`的脚本的输出：
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: This recipe demonstrated the Anderson-Darling statistical test for normality,
    as found in `statsmodels`. We used the stock price data, which does not have a
    normal distribution, as input. For the data, we got a p-value of `0.13`. Since
    probabilities range between 0 and 1, this confirms our hypothesis.
  prefs: []
  type: TYPE_NORMAL
  zh: 如`statsmodels`中所示，此秘籍证明了安德森-达林统计检验的正态性。 我们使用没有正态分布的股票价格数据作为输入。 对于数据，我们获得了`0.13`的
    P 值。 由于概率在 0 到 1 之间，这证实了我们的假设。
- en: Installing scikit-image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 scikit-image
- en: '**scikit-image** is a toolkit used for image processing that requires PIL,
    SciPy, Cython, and NumPy. Windows installers are available too. The toolkit is
    part of the Enthought Python Distribution, as well as the Python(*x*, *y*) distribution.'
  prefs: []
  type: TYPE_NORMAL
  zh: '**scikit-image** 是用于图像处理的工具包，它依赖 PIL，SciPy，Cython 和 NumPy。 Windows 安装程序也可用。
    该工具包是 Enthought Python 发行版以及 PythonXY 发行版的一部分。'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'As usual, install scikit-image using any one of the following two commands:'
  prefs: []
  type: TYPE_NORMAL
  zh: 与往常一样，使用以下两个命令之一安装 scikit-image：
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Again, you may need to run these commands as root.
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可能需要以超级用户身份运行这些命令。
- en: 'Another option is to obtain the latest development version by cloning the Git
    repository, or downloading the repository as a source archive from Github. Then
    run the following command:'
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是通过克隆 Git 仓库或从 Github 下载该仓库作为源归档来获取最新的开发版本。 然后运行以下命令：
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Detecting corners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测角点
- en: '**Corner detection** ([http://en.wikipedia.org/wiki/Corner_detection](http://en.wikipedia.org/wiki/Corner_detection))
    is a standard technique in computer vision. scikit-image offers a **Harris corner**
    **detector**, which is great, since corner detection is pretty complicated. Obviously,
    we could do it ourselves from scratch, but that would violate the cardinal rule
    of not reinventing the wheel.'
  prefs: []
  type: TYPE_NORMAL
  zh: '**角点检测**（[`en.wikipedia.org/wiki/Corner_detection`](http://en.wikipedia.org/wiki/Corner_detection)）是计算机视觉中的标准技术。 scikit-image
    提供了**哈里斯角点检测器**，它很棒，因为角检测非常复杂。 显然，我们可以从头开始做，但是这违反了不重新发明轮子的基本原则。'
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: 'You might need to install `jpeglib` on your system to be able to load the scikit-learn
    image, which is a JPEG file. If you are on Windows, use the installer; otherwise,
    download the distribution, unpack it, and build from the top folder with the following
    commands:'
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要在系统上安装`jpeglib`，才能加载 scikit-learn 图像（是 JPEG 文件）。 如果您使用的是 Windows，请使用安装程序。
    否则，下载发行版，解压缩它，并使用以下命令从顶部文件夹中进行构建：
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'We will load a sample image from scikit-learn. This is not absolutely necessary
    for this example; you can use any other image instead:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 scikit-learn 加载示例图像。 对于此示例，这不是绝对必要的； 您可以改用其他任何图像：
- en: 'scikit-learn currently has two sample JPEG images in a dataset structure. Look
    at the first image only:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: scikit-learn 当前在数据集结构中有两个样例 JPEG 图像。 只看第一张图片：
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Since the first edition of this book, the API has changed. For instance, with
    scikit-image 0.11.2, we need to first convert values of a color images to grayscale
    values. Gray scale the image as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自本书第一版以来，API 发生了变化。 例如，对于 scikit-image 0.11.2，我们需要首先将彩色图像的值转换为灰度值。 图像灰度如下：
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Call the `corner_harris()` function to get the coordinates of the corners:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`corner_harris()`函数获取角点的坐标：
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The code for the corner detection is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 角点检测的代码如下：
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We get an image with dots, where the script detects corners, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到一个带有点的图像，脚本在其中检测角点，如以下屏幕截图所示：
- en: '![How to do it...](img/0945OS_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_10_01.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: We applied Harris corner detection on a sample image from scikit-image. The
    result is pretty good, as you can see. We could have done this with NumPy only,
    since it is just a straightforward, linear algebra type computation; still it,
    could have become messy. The scikit-image toolkit has a lot more similar functions,
    so check out the scikit-image documentation if you are in need of an image processing
    routine. Also keep in mind that the API can undergo rapid changes.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对 scikit-image 的样例图像应用了哈里斯角点检测。 如您所见，结果非常好。 我们只能使用 NumPy 做到这一点，因为它只是一个简单的线性代数类型的计算。
    仍然，可能会变得凌乱。 scikit-image 工具包具有更多类似的功能，因此，如果需要图像处理例程，请查看 scikit-image 文档。 另外请记住，API
    可能会发生快速变化。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The related scikit-image documentation is at [http://scikit-image.org/docs/dev/auto_examples/plot_corner.html](http://scikit-image.org/docs/dev/auto_examples/plot_corner.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关的 scikit-image 文档位于[`scikit-image.org/docs/dev/auto_examples/plot_corner.html`](http://scikit-image.org/docs/dev/auto_examples/plot_corner.html)'
- en: Detecting edges
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测边界
- en: '**Edge detection** is another popular image processing technique ([http://en.wikipedia.org/wiki/Edge_detection](http://en.wikipedia.org/wiki/Edge_detection)).
    scikit-image has a **Canny filter** implementation based on the standard deviation
    of the Gaussian distribution, which can perform edge detection out of the box.
    Besides the image data as a 2D array, this filter accepts the following parameters:'
  prefs: []
  type: TYPE_NORMAL
  zh: '**边界检测**是另一种流行的图像处理技术（[`en.wikipedia.org/wiki/Edge_detection`](http://en.wikipedia.org/wiki/Edge_detection)）。 scikit-image
    具有基于高斯分布的标准差的 **Canny 过滤器**实现  ，可以开箱即用地执行边界检测。 除了将图像数据作为 2D 数组外，此过滤器还接受以下参数：'
- en: Standard deviation of the Gaussian distribution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高斯分布的标准差
- en: Lower bound threshold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下限阈值
- en: Upper bound threshold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上限阈值
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'We will use the same image as in the previous recipe. The code is almost the
    same (see `edge_detection.py`). Pay extra attention to the line where we call
    the Canny filter function:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用与先前秘籍相同的图像。 代码几乎相同（请参见`edge_detection.py`）。 请特别注意我们称为 Canny 过滤器函数的行：
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The code produces an image of the edges within the original image, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码生成原始图像中边界的图像，如以下屏幕截图所示：
- en: '![How to do it...](img/0945OS_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_10_02.jpg)'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The related documentation is at [http://scikit-image.org/docs/dev/auto_examples/plot_canny.html](http://scikit-image.org/docs/dev/auto_examples/plot_canny.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关文档位于[`scikit-image.org/docs/dev/auto_examples/plot_canny.html`](http://scikit-image.org/docs/dev/auto_examples/plot_canny.html)'
- en: Installing pandas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Pandas
- en: '**pandas** is a Python library used for data analysis. It has some similarities
    with the R programming language, which are not coincidental. R is a specialized
    programming language popular with data scientists. For instance, R inspired the
    core `DataFrame` object in pandas.'
  prefs: []
  type: TYPE_NORMAL
  zh: '**Pandas** 是用于数据分析的  Python 库。 它与 R 编程语言有一些相似之处，并非偶然。 R 是一种受数据科学家欢迎的专业编程语言。
    例如，R 启发了 Pandas 的核心`DataFrame`对象。'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'On PyPi, the project is called `pandas`. So, you can run either of the following
    commands:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PyPi 上，该项目称为`pandas`。 因此，您可以运行以下命令之一：
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If you are using a Linux package manager, you will need to install the `python-pandas`
    project. On Ubuntu, do the following:'
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 Linux 包管理器，则需要安装`python-pandas`项目。 在 Ubuntu 上，执行以下操作：
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You can also install from source (this requires Git unless you download a source
    archive):'
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以从源代码安装（除非下载源代码存档，否则需要 Git）：
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The related documentation is at [http://pandas.pydata.org/pandas-docs/stable/install.html](http://pandas.pydata.org/pandas-docs/stable/install.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关文档位于[`pandas.pydata.org/pandas-docs/stable/install.html`](http://pandas.pydata.org/pandas-docs/stable/install.html)'
- en: Estimating correlation of stock returns with pandas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pandas 估计股票收益的相关性
- en: A pandas `DataFrame` is a matrix and dictionary-like data structure similar
    to the functionality available in R. In fact, it is the central data structure
    in pandas, and you can apply all kinds of operations on it. It is quite common
    to take a look, for instance, at the correlation matrix of a portfolio, so let's
    do that.
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas `DataFrame`是类似矩阵和字典的数据结构，类似于 R 中提供的功能。实际上，它是 Pandas 的中心数据结构，您可以应用各种操作。
    例如，查看投资组合的相关矩阵是很常见的，所以让我们开始吧。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'First, we will create the `DataFrame` with pandas for each symbol''s daily
    log returns. Then we will join these on the date. At the end, the correlation
    will be printed and a plot will appear:'
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将为每个符号的每日对数回报创建带有 Pandas 的`DataFrame`。 然后，我们将在约会中加入这些。 最后，将打印相关性，并显示一个图：
- en: 'To create the data frame, create a dictionary containing stock symbols as keys
    and the corresponding log returns as values. The data frame itself has the date
    as the index and the stock symbols as column labels:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建数据框，请创建一个包含股票代码作为键的字典，并将相应的日志作为值返回。 数据框本身以日期作为索引，将股票代码作为列标签：
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We can now perform operations such as calculating a correlation matrix or plotting
    on the data frame:'
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以执行诸如计算相关矩阵或在数据帧上绘制等操作：
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The complete source code, which also downloads the price data, is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的源代码（也可以下载价格数据）如下：
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Here is the output for the correlation matrix:'
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相关矩阵的输出：
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following image shows the plot for the log returns of the five stocks:'
  prefs: []
  type: TYPE_NORMAL
  zh: 显示了五只股票的对数收益图：
- en: '![How to do it...](img/0945OS_10_03.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_10_03.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: 'We used the following `DataFrame` methods:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了以下`DataFrame`方法：
- en: '| Functions | Descriptions |'
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 描述 |'
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `pandas.DataFrame()` | This function constructs `DataFrame` with specified
    data, index (row), and column labels. |'
  prefs: []
  type: TYPE_TB
  zh: '| `pandas.DataFrame()` | 此函数使用指定的数据，索引（行）和列标签构造`DataFrame`。 |'
- en: '| `pandas.DataFrame.corr()` | This function computes pair-wise correlation
    of columns, ignoring the missing values. By default, Pearson correlation is used.
    |'
  prefs: []
  type: TYPE_TB
  zh: '| `pandas.DataFrame.corr()` | 该函数计算列的成对相关，而忽略缺失值。 默认情况下，使用皮尔逊相关。 |'
- en: '| `pandas.DataFrame.plot()` | This function plots the data frame with `matplotlib`.
    |'
  prefs: []
  type: TYPE_TB
  zh: '| `pandas.DataFrame.plot()` | 此函数使用`matplotlib`绘制数据帧。 |'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The related documentation is at [http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.html](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关文档位于[`pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.html`](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.html)'
- en: '*Chapter 4*, *pandas Primer*, from Ivan Idris''book *Python Data* *Analysis*,
    *Packt Publishing*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 4 章，“Pandas 入门书”，摘自 Ivan Idris 的书“Python 数据分析”， Packt Publishing
- en: Loading data as pandas objects from statsmodels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Statsmodels 中将数据作为 Pandas 对象加载
- en: statsmodels has quite a lot of sample datasets in its distribution. The complete
    list can be found at [https://github.com/statsmodels/statsmodels/tree/master/statsmodels/datasets](https://github.com/statsmodels/statsmodels/tree/master/statsmodels/datasets).
  prefs: []
  type: TYPE_NORMAL
  zh: Statsmodels 在其发行版中有很多样本数据集。 完整列表可以在[`github.com/statsmodels/statsmodels/tree/master/statsmodels/datasets`](https://github.com/statsmodels/statsmodels/tree/master/statsmodels/datasets)中找到。
- en: In this tutorial, we will concentrate on the copper dataset, which contains
    information about copper prices, world consumption, and other parameters.
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将专注于铜数据集，其中包含有关铜价，世界消费量和其他参数的信息。
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: 'Before we start, we might need to install **patsy**. patsy is a library that
    describes statistical models. It is easy enough to see whether this library is
    necessary; just run the code. If you get errors related to patsy, execute any
    one of the following commands:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们可能需要安装 **Patsy**。 Patsy 是描述统计模型的库。 很容易看出这个库是否是必需的。 只需运行代码。 如果您收到与 Patsy
    相关的错误，请执行以下任一命令：
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: In this section, we will load a dataset from statsmodels as a pandas `DataFrame`
    or `Series` object.
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将从 Statsmodels 中加载数据集作为 Pandas `DataFrame`或`Series`对象。
- en: 'The function we need to call is `load_pandas()`. Load the data as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要调用的函数是`load_pandas()`。 如下加载数据：
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This loads the data in a `DataSet` object, which contains pandas objects.
  prefs: []
  type: TYPE_NORMAL
  zh: 这会将数据加载到包含 Pandas 对象的`DataSet`对象中。
- en: The `Dataset` object has an attribute called `exog`, which when loaded as a
    `pandas` object, becomes a `DataFrame` object with multiple columns. It also has
    an `endog` attribute containing values for the world consumption of copper in
    our case.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`DataSet`对象具有名为`exog`的属性，当作为 Pandas 对象加载时，该属性将成为具有多个列的`DataFrame`对象。 在我们的案例中，它还有一个`endog`属性，其中包含世界铜消费量的值。'
- en: 'Perform an ordinary least squares calculation by creating an `OLS` object and
    calling its `fit()` method, as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建`OLS`对象并调用其`fit()`方法来执行普通的最小二乘计算，如下所示：
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This should print the result of the fitting procedure:'
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该打印拟合过程的结果：
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The results of the OLS fit can be summarized by the `summary()` method, as
    follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OLS 拟合的结果可以通过`summary()`方法总结如下：
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This will give us the following output for the regression results:'
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为我们提供以下回归结果输出：
- en: '![How to do it...](img/0945OS_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_10_04.jpg)'
- en: 'The code required to load the copper dataset is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 加载铜数据集所需的代码如下：
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The data in the `Dataset` class of statsmodels follows a special format. Among
    others, this class has the `endog` and `exog` attributes. Statsmodels has the
    `load()` function, which loads data as NumPy arrays. Instead, we used the `load_pandas()`
    method, which loads data as `pandas` objects. We did an OLS fit, basically giving
    us a statistical model for copper price and consumption.
  prefs: []
  type: TYPE_NORMAL
  zh: Statsmodels 的`Dataset`类中的数据遵循特殊格式。 其中，此类具有`endog`和`exog`属性。 Statsmodels 具有`load()`函数，该函数将数据作为
    NumPy 数组加载。 相反，我们使用了`load_pandas()`方法，该方法将数据加载为`pandas`对象。 我们进行了 OLS 拟合，基本上为我们提供了铜价和消费量的统计模型。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The related documentation is at [http://statsmodels.sourceforge.net/stable/datasets/index.html](http://statsmodels.sourceforge.net/stable/datasets/index.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关文档位于[`statsmodels.sourceforge.net/stable/datasets/index.html`](http://statsmodels.sourceforge.net/stable/datasets/index.html)'
- en: Resampling time series data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重采样时间序列数据
- en: In this tutorial, you will learn how to resample time series with pandas.
  prefs: []
  type: TYPE_NORMAL
  zh: 在此教程中，您将学习如何使用 Pandas 对时间序列进行重新采样。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'We will download the daily price time series data for AAPL and resample it
    into monthly data by computing the mean. We will do this by creating a pandas
    `DataFrame` and calling its `resample()` method:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将下载`AAPL`的每日价格时间序列数据，然后通过计算平均值将其重新采样为每月数据。 我们将通过创建 Pandas `DataFrame`并调用其`resample()`
    方法来做到这一点：
- en: 'Before we can create a pandas `DataFrame`, we need to create a `DatetimeIndex`
    object to pass to the `DataFrame` constructor. Create the index from the downloaded
    quotes data, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建 Pandas `DataFrame`之前，我们需要创建一个`DatetimeIndex`对象传递给`DataFrame`构造器。 根据下载的报价数据创建索引，如下所示：
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Once we have the date-time index, we use it together with the close prices
    to create a data frame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获得日期时间索引后，我们将其与收盘价一起使用以创建数据框：
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Resample the time series to monthly frequency by computing the mean:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过计算平均值，将时间序列重新采样为每月频率：
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The resampled time series, as shown in the following lines, has one value for
    each month:'
  prefs: []
  type: TYPE_NORMAL
  zh: 如下行所示，重新采样的时间序列每个月都有一个值：
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Use the `DataFrame plot()` method to plot the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`DataFrame plot()`方法绘制数据：
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The plot for the original time series is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 原始时间序列的图如下：
- en: '![How to do it...](img/0945OS_10_05.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_10_05.jpg)'
- en: 'The resampled data has less data points, and therefore, the resulting plot
    is choppier, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
  zh: 重采样的数据具有较少的数据点，因此，生成的图更加混乱，如以下屏幕截图所示：
- en: '![How to do it...](img/0945OS_10_06.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945OS_10_06.jpg)'
- en: 'The complete resampling code is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的重采样代码如下：
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: 'We created a date-time index from a list of dates and times. This index was
    then used to create a pandas `DataFrame`. We then resampled our time series data.
    A single character gives the resampling frequency, as listed here:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们根据日期和时间列表创建了日期时间索引。 然后，该索引用于创建 Pandas `DataFrame`。 然后，我们对时间序列数据进行了重新采样。 单个字符给出重采样频率，如下所示：
- en: '`D` for daily'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每天`D`
- en: '`M` for monthly'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每月`M`
- en: '`A` for annual'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每年`A`
- en: The `how` parameter of the `resample()` method indicates how the data is sampled.
    This defaults to calculating the mean.
  prefs: []
  type: TYPE_NORMAL
  zh: '`resample()`方法的`how`参数指示如何采样数据。 默认为计算平均值。'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The related pandas documentation is at [http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.resample.html](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.resample.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关 Pandas 文档位于[`pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.resample.html`](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.resample.html)'
