["```kt\n    class Journaler : Application() { \n\n      companion object { \n        val tag = \"Journaler\" \n        var ctx: Context? = null \n      } \n\n      override fun onCreate() { \n        super.onCreate() \n        ctx = applicationContext \n        Log.v(tag, \"[ ON CREATE ]\") \n      } \n\n      override fun onLowMemory() { \n        super.onLowMemory() \n        Log.w(tag, \"[ ON LOW MEMORY ]\") \n      } \n\n      override fun onTrimMemory(level: Int) { \n        super.onTrimMemory(level) \n        Log.d(tag, \"[ ON TRIM MEMORY ]: $level\") \n     } \n    } \n```", "```kt\n        v(String tag, String msg) \n        v(String tag, String msg, Throwable tr) \n```", "```kt\n        d(String tag, String msg) \n        d(String tag, String msg, Throwable tr) \n```", "```kt\n        i(String tag, String msg) \n        i(String tag, String msg, Throwable tr) \n```", "```kt\n        w(String tag, String msg) \n        w(String tag, String msg, Throwable tr) \n```", "```kt\n        e(String tag, String msg) \n        e(String tag, String msg, Throwable tr) \n```", "```kt\n    class MainActivity : AppCompatActivity() { \n      private val tag = Journaler.tag \n\n      override fun onCreate( \n        savedInstanceState: Bundle?,  \n        persistentState: PersistableBundle? \n       ) { \n          super.onCreate(savedInstanceState, persistentState) \n          setContentView(R.layout.activity_main) \n          Log.v(tag, \"[ ON CREATE ]\") \n         } \n\n       override fun onPostCreate(savedInstanceState: Bundle?) { \n         super.onPostCreate(savedInstanceState) \n         Log.v(tag, \"[ ON POST CREATE ]\") \n       } \n\n       override fun onRestart() { \n         super.onRestart() \n         Log.v(tag, \"[ ON RESTART ]\") \n       } \n\n       override fun onStart() { \n         super.onStart() \n         Log.v(tag, \"[ ON START ]\") \n       } \n\n       override fun onResume() { \n         super.onResume() \n         Log.v(tag, \"[ ON RESUME ]\") \n       } \n\n       override fun onPostResume() { \n         super.onPostResume() \n         Log.v(tag, \"[ ON POST RESUME ]\") \n       } \n\n       override fun onPause() { \n        super.onPause() \n        Log.v(tag, \"[ ON PAUSE ]\") \n      } \n\n      override fun onStop() { \n        super.onStop() \n        Log.v(tag, \"[ ON STOP ]\") \n      } \n\n      override fun onDestroy() { \n        super.onDestroy() \n        Log.v(tag, \"[ ON DESTROY ]\") \n      } \n    } \n```", "```kt\nadb logcat\n```", "```kt\n./gradlew clean\n```", "```kt\n./gradlew assemble.\n```", "```kt\n./gradlew assembleDebug \n```", "```kt\n./gradlew assembleCompleteDebug\n```", "```kt\n./gradlew test \n```", "```kt\n./gradlew testCompleteDebug\n```", "```kt\n./gradlew connectedCompleteDebug\n```", "```kt\n    void onCreate(@Nullable Bundle savedInstanceState) \n```", "```kt\n     onCreate(Bundle savedInstanceState, PersistableBundle \n     persistentState) \n```", "```kt\n    override fun onCreate(savedInstanceState: Bundle?) { \n      super.onCreate(savedInstanceState) \n      setContentView(R.layout.activity_main) \n      Log.v(tag, \"[ ON CREATE 1 ]\") \n    } \n\n    override fun onCreate(savedInstanceState: Bundle?, \n    persistentState: PersistableBundle?) { \n      super.onCreate(savedInstanceState, persistentState) \n      Log.v(tag, \"[ ON CREATE 2 ]\") \n    } \n```"]