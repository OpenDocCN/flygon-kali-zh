- en: Chapter 4. A Traditional Approach to Monitoring Containers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。监控容器的传统方法
- en: 'So far, we have looked at only a few technologies to monitor our containers,
    so in this chapter, we will be looking more at a traditional tool for monitoring
    services. By the end of this chapter, you should know your way around Zabbix and
    the various ways you can monitor your containers. We will cover the following
    topics in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只看了一些监控容器的技术，因此在本章中，我们将更多地关注传统的监控服务工具。在本章结束时，您应该了解Zabbix以及您可以监控容器的各种方式。本章将涵盖以下主题：
- en: How to run a Zabbix Server using containers
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用容器运行Zabbix服务器
- en: How to launch a Zabbix Server on a vagrant machine
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在vagrant机器上启动Zabbix服务器
- en: How to prepare our host system for monitoring containers using the Zabbix agent
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何准备我们的主机系统，使用Zabbix代理监控容器
- en: How to find your way around the Zabbix web interface
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在Zabbix Web界面中找到自己的位置
- en: Zabbix
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zabbix
- en: First things first, what is Zabbix and why use it?
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，什么是Zabbix，为什么要使用它？
- en: 'I have personally been using it since version 1.2; the Zabbix site describes
    it as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人从1.2版本开始使用它；Zabbix网站对其描述如下：
- en: '*"With Zabbix, it is possible to gather virtually limitless types of data from
    the network. High-performance real-time monitoring means that tens of thousands
    of servers, virtual machines, and network devices can be monitored simultaneously.
    Along with storing the data, visualization features are available (overviews,
    maps, graphs, screens, and so on), as well as very flexible ways of analyzing
    the data for the purpose of alerting.*'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “使用Zabbix，可以从网络中收集几乎无限类型的数据。高性能实时监控意味着可以同时监控数万台服务器、虚拟机和网络设备。除了存储数据外，还提供了可视化功能（概览、地图、图表、屏幕等），以及非常灵活的数据分析方式，用于警报目的。”
- en: '>'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '*Zabbix offers great performance for data gathering and can be scaled to very
    large environments. Distributed monitoring options are available with the use
    of Zabbix proxies. Zabbix comes with a web-based interface, secure user authentication,
    and a flexible user permission schema. Polling and trapping is supported, with
    native high-performance agents gathering data from virtually any popular operating
    system; agent-less monitoring methods are available as well."*'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “Zabbix提供了出色的数据收集性能，并可以扩展到非常大的环境。使用Zabbix代理可以进行分布式监控。Zabbix带有基于Web的界面、安全用户认证和灵活的用户权限模式。支持轮询和陷阱，具有从几乎任何流行操作系统收集数据的本机高性能代理；也提供了无代理的监控方法。”
- en: 'At the time I started using Zabbix, the only real viable options were as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我开始使用Zabbix的时候，唯一真正可行的选择如下：
- en: 'Nagios: [https://www.nagios.org/](https://www.nagios.org/)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nagios：[https://www.nagios.org/](https://www.nagios.org/)
- en: 'Zabbix: [http://www.zabbix.com/](http://www.zabbix.com/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zabbix：[http://www.zabbix.com/](http://www.zabbix.com/)
- en: 'Zenoss: [http://www.zenoss.org/](http://www.zenoss.org/)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zenoss：[http://www.zenoss.org/](http://www.zenoss.org/)
- en: Out of the these three options, Zabbix seemed to be the most straightforward
    one at the time. It was doing enough work to manage the several hundred servers
    I was going to monitor without having to have the extra work of learning the complexities
    of setting up Nagios or Zenoss; after all, given the task the software had, I
    needed to be able to trust that I had set it up correctly.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这三个选项中，当时Zabbix似乎是最直接的选择。它足以管理我要监控的几百台服务器，而无需额外学习设置Nagios或Zenoss的复杂性；毕竟，考虑到软件的任务，我需要相信我已经正确设置了它。
- en: 'In this chapter, while I am going to go into some detail about the setup and
    the basics of using Zabbix, we will only be touching on some of the functionalities,
    which can do a lot more than just monitor your containers. For more information,
    I would recommend the following as a good starting point:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，虽然我将详细介绍设置和使用Zabbix的基础知识，但我们只会涉及一些功能，它可以做的远不止监视您的容器。有关更多信息，我建议以下作为一个很好的起点：
- en: 'Zabbix blog: [http://blog.zabbix.com](http://blog.zabbix.com)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zabbix博客：[http://blog.zabbix.com](http://blog.zabbix.com)
- en: 'Zabbix 2.4 manual: [https://www.zabbix.com/documentation/2.4/manual](https://www.zabbix.com/documentation/2.4/manual)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zabbix 2.4手册：[https://www.zabbix.com/documentation/2.4/manual](https://www.zabbix.com/documentation/2.4/manual)
- en: 'Further reading: [https://www.packtpub.com/all/?search=zabbix](https://www.packtpub.com/all/?search=zabbix)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多阅读：[https://www.packtpub.com/all/?search=zabbix](https://www.packtpub.com/all/?search=zabbix)
- en: Installing Zabbix
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Zabbix
- en: As you may have noticed from the links in the previous section, there are a
    lot of moving parts in Zabbix. It leverages several open source technologies,
    and a production-ready installation needs a little more planning than we can go
    into in this chapter. Because of this we are going to look at two ways of installing
    Zabbix quickly rather go into too much detail.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经从上一节的链接中注意到的那样，Zabbix中有很多活动部分。它利用了几种开源技术，而且一个生产就绪的安装需要比我们在本章中所能涉及的更多的规划。因此，我们将看一下两种快速安装Zabbix的方法，而不是过多地详细介绍。
- en: Using containers
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用容器
- en: At the time of writing, there are over a hundred Docker images available on
    the Docker Hub ([https://hub.docker.com](https://hub.docker.com)) that mentions
    Zabbix. These range from full server installations to just the various parts,
    such as the Zabbix agent or proxy services.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Docker Hub（[https://hub.docker.com](https://hub.docker.com)）上有100多个Docker镜像提到了Zabbix。这些范围从完整的服务器安装到各种部分，如Zabbix代理或代理服务。
- en: 'Out of the ones listed, there is one that is recommend by Zabbix itself. So,
    we will look at this one; it can be found at the following URLs:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在列出的选项中，有一个是Zabbix本身推荐的。因此，我们将看一下这个；它可以在以下网址找到：
- en: 'Docker Hub: [https://hub.docker.com/u/zabbix/](https://hub.docker.com/u/zabbix/)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Hub：[https://hub.docker.com/u/zabbix/](https://hub.docker.com/u/zabbix/)
- en: 'Project page: [https://github.com/zabbix/zabbix-community-docker](https://github.com/zabbix/zabbix-community-docker)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目页面：[https://github.com/zabbix/zabbix-community-docker](https://github.com/zabbix/zabbix-community-docker)
- en: 'To get the `ZabbixServer` container up and running, we must first launch a
    database container. Let''s start afresh with our vagrant instance by running the
    following command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要使`ZabbixServer`容器运行起来，我们必须首先启动一个数据库容器。让我们通过运行以下命令从头开始使用我们的vagrant实例：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, we have a clean environment and it''s time to launch our database container,
    as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个干净的环境，是时候启动我们的数据库容器了，如下所示：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will download the `million12/mariadb` image from [https://hub.docker.com/r/million12/mariadb/](https://hub.docker.com/r/million12/mariadb/)
    and launch a container called `zabbix-db`, running MariaDB 10 ([https://mariadb.org](https://mariadb.org))
    with a user called `zabbix` who has a password `zabbix_password`. We have also
    opened the MariaDB port `3306` up on the container, but as we will be connecting
    to it from a linked container, there is no need to expose that port on the host
    machine.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从[https://hub.docker.com/r/million12/mariadb/](https://hub.docker.com/r/million12/mariadb/)下载`million12/mariadb`镜像，并启动一个名为`zabbix-db`的容器，运行MariaDB
    10（[https://mariadb.org](https://mariadb.org)），使用名为`zabbix`的用户，密码为`zabbix_password`。我们还在容器上打开了MariaDB端口`3306`，但由于我们将从链接的容器连接到它，因此无需在主机上暴露该端口。
- en: 'Now, we have the database container up and running, we now need to launch our
    Zabbix Server container:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的数据库容器已经运行起来了，现在我们需要启动我们的Zabbix服务器容器：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This downloads the image, which at the time of writing is over 1 GB so this
    process could take several minutes depending on your connection, and launches
    a container called `zabbix`. It maps the web server (port `80`) and the Zabbix
    Server process (port `10051`) on the host to the container, creates a link to
    our database container, sets up the alias `db`, and injects the database credentials
    as environment variables so that the scripts that launch when the container boots
    can populate the database.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这将下载镜像，目前为止，镜像大小超过1GB，因此这个过程可能需要几分钟，具体取决于您的连接速度，并启动一个名为`zabbix`的容器。它将主机上的Web服务器（端口`80`）和Zabbix服务器进程（端口`10051`）映射到容器上，创建到我们数据库容器的链接，设置别名`db`，并将数据库凭据作为环境变量注入，以便在容器启动时运行的脚本可以填充数据库。
- en: 'You can verify that everything worked as expected by checking the logs on the
    container. To do this, enter `docker logs zabbix`. This will print details of
    what happened when the container launched on screen:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过检查容器上的日志来验证一切是否按预期工作。要做到这一点，输入`docker logs zabbix`。这将在屏幕上打印容器启动时发生的详细信息：
- en: '![Using containers](../images/00026.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用容器](../images/00026.jpeg)'
- en: Now, once we have the container up and running, it is time to move to the browser
    for our first taste of the web interface. Go to `http://192.168.33.10/` in your
    browser and you will be greeted by a welcome page; before we can start using Zabbix,
    we need to complete the installation.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一旦我们启动了容器，就该转到浏览器，体验一下网络界面。在浏览器中输入`http://192.168.33.10/`，您将看到一个欢迎页面；在我们开始使用Zabbix之前，我们需要完成安装。
- en: On the welcome page, click on **Next** to be taken to the first step. This will
    verify that everything we need to run a Zabbix Server is installed. As we have
    launched it in a container, you should see **OK** next to all of the prerequisites.
    Click on **Next** to move onto the next step.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在欢迎页面上，点击**下一步**进入第一步。这将验证我们运行Zabbix服务器所需的一切是否都已安装。由于我们在容器中启动了它，您应该看到所有先决条件旁边都有**OK**。点击**下一步**进入下一步。
- en: 'Now, we need to configure the database connection for the web interface. Here,
    you should have the same details as you did when you launched the container, as
    illustrated in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要为网络界面配置数据库连接。在这里，您应该有与启动容器时相同的细节，如下面的截图所示：
- en: '![Using containers](../images/00027.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![使用容器](../images/00027.jpeg)'
- en: Once you have entered the details, click on **Test connection** and you should
    receive an **OK** message; you will not be able to proceed until this test completes
    successfully. Once you have entered the details and have an **OK** message, click
    on **Next**.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦输入了详细信息，点击**测试连接**，您应该收到一个**OK**的消息；在此测试成功完成之前，您将无法继续。一旦输入了详细信息并收到了**OK**消息，点击**下一步**。
- en: Next up, are the details on the Zabbix Server that the web interface needs to
    connect to; click on **Next** here. Next up, you will receive a summary of the
    installation. To proceed, click on **Next** and you will be get confirmation that
    the `/usr/local/src/zabbix/frontends/php/conf/zabbix.conf.php` file has been created.
    Click on **Finish** to be taken to the login page.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是网络界面需要连接的Zabbix服务器的详细信息；在这里点击**下一步**。接下来，您将收到安装的摘要。要继续，请点击**下一步**，您将收到确认`/usr/local/src/zabbix/frontends/php/conf/zabbix.conf.php`文件已创建的消息。点击**完成**进入登录页面。
- en: Using vagrant
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用vagrant
- en: 'While writing this chapter, I thought a lot about providing another set of
    installation instructions for the Zabbix Server service. While the book is all
    about Monitoring Docker containers, having a service as resource intensive as
    Zabbix running inside a container feels a little counter intuitive. Because of
    this, there is a vagrant machine that uses Puppet to bootstrap a working installation
    of Zabbix Server:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本章时，我考虑了为Zabbix服务器服务提供另一组安装说明。虽然本书都是关于监控Docker容器，但在容器内运行像Zabbix这样资源密集型的服务感觉有点违反直觉。因此，有一个vagrant机器使用Puppet来引导Zabbix服务器的工作安装：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you may have noticed, there is a lot of output streamed to the terminal,
    so what just happened? First of all, a CentOS 7 vagrant instance was launched
    and then a Puppet agent was installed. Once installed, the installation was handed
    off to Puppet. Using the Zabbix Puppet module by Werner Dijkerman, Zabbix Server
    was installed; for more details on the module, see its Puppet Forge page at [https://forge.puppetlabs.com/wdijkerman/zabbix](https://forge.puppetlabs.com/wdijkerman/zabbix).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，有大量的输出流到终端，那刚刚发生了什么？首先，启动了一个CentOS 7 vagrant实例，然后安装了Puppet代理。一旦安装完成，安装就交给了Puppet。使用Werner
    Dijkerman的Zabbix Puppet模块，安装了Zabbix服务器；有关该模块的更多详细信息，请参阅其Puppet Forge页面[https://forge.puppetlabs.com/wdijkerman/zabbix](https://forge.puppetlabs.com/wdijkerman/zabbix)。
- en: Unlike the containerized version of Zabbix Server, there is no additional configuration
    required, so you should be able to access the Zabbix login page at [http://zabbix.media-glass.es/](http://zabbix.media-glass.es/)
    (an IP address of `192.168.33.11` is hardcoded into the configuration).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与Zabbix服务器的容器化版本不同，不需要额外的配置，因此您应该能够访问Zabbix登录页面[http://zabbix.media-glass.es/](http://zabbix.media-glass.es/)（配置中硬编码了IP地址`192.168.33.11`）。
- en: Preparing our host machine
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备我们的主机机器
- en: For the remainder of this chapter, I will assume that you are using the Zabbix
    Server that is running on its own vagrant instance. This helps to ensure that
    your environment is consistent with the configuration of the Zabbix agent we will
    be looking at.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分，我将假设您正在使用在其自己的vagrant实例上运行的Zabbix服务器。这有助于确保您的环境与我们将要查看的Zabbix代理的配置一致。
- en: 'To pass the statistics from our containers to the Zabbix agent, which will
    then in turn expose them to the Zabbix Server, we will be installing using the
    `Zabbix-Docker-Monitoring` Zabbix agent module that has been developed by Jan
    Garaj. For more information on the project, see the following URLs:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将我们容器的统计数据传递给Zabbix代理，然后再将其暴露给Zabbix服务器，我们将使用由Jan Garaj开发的`Zabbix-Docker-Monitoring`
    Zabbix代理模块进行安装。有关该项目的更多信息，请参见以下URL：
- en: 'The Project page: [https://github.com/monitoringartist/Zabbix-Docker-Monitoring/](https://github.com/monitoringartist/Zabbix-Docker-Monitoring/)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目页面：[https://github.com/monitoringartist/Zabbix-Docker-Monitoring/](https://github.com/monitoringartist/Zabbix-Docker-Monitoring/)
- en: 'The Zabbix share page: [https://share.zabbix.com/virtualization/docker-containers-monitoring](https://share.zabbix.com/virtualization/docker-containers-monitoring)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zabbix共享页面：[https://share.zabbix.com/virtualization/docker-containers-monitoring](https://share.zabbix.com/virtualization/docker-containers-monitoring)
- en: 'To get the agent and module installed, configured, and running, we need to
    execute the following steps:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装、配置和运行代理和模块，我们需要执行以下步骤：
- en: Install the Zabbix package repository.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Zabbix软件包存储库。
- en: Install the Zabbix agent.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Zabbix代理。
- en: Install the prerequisites for the module.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装模块的先决条件。
- en: Add the Zabbix agent user to the Docker group.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Zabbix代理用户添加到Docker组。
- en: Download the auto-discovery bash script.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载自动发现的bash脚本。
- en: Download the precompiled `zabbix_module_docker` binary.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载预编译的`zabbix_module_docker`二进制文件。
- en: Configure the Zabbix agent with the details of our Zabbix Server and also the
    Docker module.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们的Zabbix服务器的详细信息以及Docker模块配置Zabbix代理。
- en: Set the correct permissions on all the files we have downloaded and created.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置我们下载和创建的所有文件的正确权限。
- en: Start the Zabbix agent.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Zabbix代理。
- en: 'While the steps remain the same for both CentOS and Ubuntu, the actions taken
    to do the initial package installation differ slightly. Rather than going through
    the process of showing the commands to install and configure the agent, there
    is a script for each of the host operating systems in the `/monitoring_docker/chapter04/`
    folder. To view the scripts, run the following command from your terminal:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然CentOS和Ubuntu的步骤是相同的，但进行初始软件包安装的操作略有不同。与其逐步显示安装和配置代理的命令，不如在`/monitoring_docker/chapter04/`文件夹中为每个主机操作系统准备一个脚本。要查看脚本，请从终端运行以下命令：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, you have taken a look at the scripts its time to run them, to do this
    type one of the following commands. If you are running CentOS, run this command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经查看了脚本，是时候运行它们了，要做到这一点，请输入以下命令之一。如果您正在运行CentOS，请运行此命令：
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For Ubuntu, run the following command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，运行以下命令：
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To verify that everything ran as expected, check the Zabbix agent log file
    by running the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证一切是否按预期运行，请运行以下命令检查Zabbix代理日志文件：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You should see that the end of the file confirms that the agent has started
    and that the `zabbix_module_docker.so` module has been loaded:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会看到文件末尾确认代理已启动，并且`zabbix_module_docker.so`模块已加载：
- en: '![Preparing our host machine](../images/00028.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![准备我们的主机](../images/00028.jpeg)'
- en: 'Before we move onto the Zabbix web interface, let''s launch a few containers
    using the `docker-compose` file from [Chapter 2](part0021_split_000.html#K0RQ2-fcf7b4d102f841bba77b823d677470e0
    "Chapter 2. Using the Built-in Tools"), *Using the Built-in Tools*:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入Zabbix Web界面之前，让我们使用[第2章](part0021_split_000.html#K0RQ2-fcf7b4d102f841bba77b823d677470e0
    "第2章。使用内置工具")中的`docker-compose`文件启动一些容器，*使用内置工具*：
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We should now have three web server containers running and a running Zabbix
    agent on the host.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在应该有三个运行中的Web服务器容器和一个在主机上运行的Zabbix代理。
- en: The Zabbix web interface
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Zabbix Web界面
- en: Once you have Zabbix installed you can open the Zabbix web interface by going
    to [http://zabbix.media-glass.es/](http://zabbix.media-glass.es/) in your browser,
    this link will only work when you have the Zabbix vagrant box up and running,
    if you don't have it running the page will time out. You should be presented with
    a login screen. Enter the default username and password here, which is `Admin`
    and `zabbix` (note that the username has a capital *A*), to login.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您安装了Zabbix，您可以通过在浏览器中输入[http://zabbix.media-glass.es/](http://zabbix.media-glass.es/)来打开Zabbix
    Web界面，只有在Zabbix虚拟机正常运行时，此链接才有效，否则页面将超时。您应该会看到一个登录界面。在这里输入默认的用户名和密码，即`Admin`和`zabbix`（请注意用户名的*A*是大写），然后登录。
- en: Once logged in, you will need to add the host templates. These are preconfigured
    environment settings and will add some context around the statistics that the
    Zabbix agent is sending to the server, along with the auto-discovery of containers.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，您需要添加主机模板。这些是预配置的环境设置，将为Zabbix代理发送到服务器的统计信息添加一些上下文，以及容器的自动发现。
- en: To add the templates, go to the **Configuration** tab in the top menu and select
    **Template**; this will bring up a list of all the templates that are currently
    installed. Click on the **Import** button in the header and upload a copy of the
    two template files you can find in the `~/Documents/Projects/monitoring-docker/chapter04/template`
    folder on your main machine; there is no need to change the rules when uploading
    the templates.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加模板，转到顶部菜单中的**配置**选项卡，然后选择**模板**；这将显示当前安装的所有模板的列表。点击标题中的**导入**按钮，并上传两个模板文件的副本，您可以在主机的`~/Documents/Projects/monitoring-docker/chapter04/template`文件夹中找到；上传模板时无需更改规则。
- en: 'Once both templates have been successfully imported, it is time to add our
    Docker host. Again, go to the **Configuration** tab, but this time select **Hosts**.
    Here, you need to click on **Create host**. Then, enter the following information
    in the **Host** tab:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦两个模板成功导入，就该是添加我们的Docker主机的时候了。再次，转到**配置**选项卡，但这次选择**主机**。在这里，您需要点击**创建主机**。然后，在**主机**选项卡中输入以下信息：
- en: '![The Zabbix web interface](../images/00029.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![Zabbix web界面](../images/00029.jpeg)'
- en: 'Here are the details of the preceding information:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述信息的详细信息：
- en: '**Host name**: This is the host name of our Docker host'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：这是我们Docker主机的主机名'
- en: '**Visible name**: Here, the name server will appear as in Zabbix'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可见名称**：在Zabbix中将显示名称服务器'
- en: '**Groups**: Which group within Zabbix the server you would like the Docker
    host to be part of'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组**：您希望Docker主机成为Zabbix中的哪个组'
- en: '**Agent Interfaces**: This is the IP address or the DNS name of our Docker
    host'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理接口**：这是我们Docker主机的IP地址或DNS名称'
- en: '**Enabled**: This should be ticked'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已启用**：应该打勾'
- en: 'Before clicking on **Add**, you should click on the **Templates** tab and link
    the following two templates to the host:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击**添加**之前，您应该点击**模板**选项卡，并将以下两个模板链接到主机：
- en: '**Template App Docker**'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板App Docker**'
- en: '**Template OS Linux**'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板OS Linux**'
- en: 'Here is the screenshot of the host:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是主机的屏幕截图：
- en: '![The Zabbix web interface](../images/00030.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![Zabbix web界面](../images/00030.jpeg)'
- en: 'Once you have added the two templates, click on **Add** to configure and enable
    the host. To verify that the host has been added correctly, you should go to the
    **Monitoring** tab and then **Latest data**. From here, click on **Show filter**
    and enter the host machine in the **Hosts** box. You should then start to see
    items appearing:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦添加了两个模板，点击**添加**以配置和启用主机。要验证主机是否已正确添加，您应该转到**监控**选项卡，然后**最新数据**。从这里，点击**显示过滤器**，并在**主机**框中输入主机机器。然后您应该开始看到项目出现：
- en: '![The Zabbix web interface](../images/00031.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Zabbix web界面](../images/00031.jpeg)'
- en: Don't worry if you don't see the **Docker** section immediately, by default,
    Zabbix will attempt to auto-discover new containers every five minutes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您立即看不到**Docker**部分，不要担心，默认情况下，Zabbix将每五分钟尝试自动发现新容器。
- en: Docker metrics
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker指标
- en: 'For each container, Zabbix discovers the following metrics that will be recorded:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个容器，Zabbix发现将记录以下指标：
- en: Container (your Containers name) is running
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器（您的容器名称）正在运行
- en: CPU system time
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU系统时间
- en: CPU user time
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU用户时间
- en: Used cache memory
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已使用的缓存内存
- en: Used RSS memory
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已使用的RSS内存
- en: Used swap
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已使用的交换空间
- en: Apart from "Used swap", these are the same metrics recorded by cAdvisor.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 除了“已使用的交换空间”外，这些都是cAdvisor记录的相同指标。
- en: Create custom graphs
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建自定义图表
- en: 'You can access a time-based graph for any of the metrics collected by Zabbix;
    you can also create your own custom graphs. In the following graph, I have created
    a graph that plots all the CPU System stats from the three web containers we launched
    earlier in the chapter:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以访问Zabbix收集的任何指标的基于时间的图表；您还可以创建自己的自定义图表。在下图中，我创建了一个图表，绘制了我们在本章早些时候启动的三个Web容器的所有CPU系统统计信息：
- en: '![Create custom graphs](../images/00032.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义图表](../images/00032.jpeg)'
- en: As you can see, I performed a few tests using ApacheBench to make the graph
    a little more interesting.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，我使用ApacheBench进行了一些测试，以使图表更加有趣。
- en: For more information on how to create custom graphs, see the graphs section
    of the documentation site at [https://www.zabbix.com/documentation/2.4/manual/config/visualisation/graphs](https://www.zabbix.com/documentation/2.4/manual/config/visualisation/graphs).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何创建自定义图表的更多信息，请参阅文档站点的图表部分[https://www.zabbix.com/documentation/2.4/manual/config/visualisation/graphs](https://www.zabbix.com/documentation/2.4/manual/config/visualisation/graphs)。
- en: Compare containers to your host machine
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将容器与主机进行比较
- en: 'As we added the Linux OS template and the Docker template to the host and we
    are also recording quite a lot of information about the system, here we can tell
    the effect the testing with ApacheBench had on the overall processor load:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已将Linux OS模板和Docker模板添加到主机，并且还记录了系统的大量信息，因此我们可以看出使用ApacheBench进行测试对整体处理器负载的影响：
- en: '![Compare containers to your host machine](../images/00033.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![将容器与主机进行比较](../images/00033.jpeg)'
- en: 'We can drill down further to get information on the overall utilization:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进一步深入了解整体利用情况的信息：
- en: '![Compare containers to your host machine](../images/00034.jpeg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![将容器与主机进行比较](../images/00034.jpeg)'
- en: Triggers
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 触发器
- en: 'Another feature of Zabbix is triggers: you can define actions to happen when
    a metric meets a certain set of criteria. In the following example, Zabbix has
    been configured with a trigger called **Container Down**; this changes the status
    of the monitored item to **Problem** with a severity of **Disaster**:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix的另一个特性是触发器：您可以定义当指标满足一定一组条件时发生的操作。在以下示例中，Zabbix已配置了一个名为**容器下线**的触发器；这将将受监视项的状态更改为**问题**，严重性为**灾难**：
- en: '![Triggers](../images/00035.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![触发器](../images/00035.jpeg)'
- en: 'This change in status then triggers an e-mail to inform that, for some reason
    the container is no longer up and running:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，状态的变化会触发一封电子邮件通知，通知某种原因导致容器不再运行：
- en: '![Triggers](../images/00036.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![触发器](../images/00036.jpeg)'
- en: This could have also triggered other tasks, such as running a custom script,
    sending an instant message via Jabber, or even triggering a third-party service
    such as PagerDuty ([https://www.pagerduty.com](https://www.pagerduty.com)) or
    Slack ([https://slack.com](https://slack.com)).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可能触发其他任务，例如运行自定义脚本、通过Jabber发送即时消息，甚至触发PagerDuty（[https://www.pagerduty.com](https://www.pagerduty.com)）或Slack（[https://slack.com](https://slack.com)）等第三方服务。
- en: 'For more information on Triggers, Events, and Notifications, see the following
    sections of the documentation:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 有关触发器、事件和通知的更多信息，请参阅以下文档部分：
- en: '[https://www.zabbix.com/documentation/2.4/manual/config/triggers](https://www.zabbix.com/documentation/2.4/manual/config/triggers)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/2.4/manual/config/triggers](https://www.zabbix.com/documentation/2.4/manual/config/triggers)'
- en: '[https://www.zabbix.com/documentation/2.4/manual/config/events](https://www.zabbix.com/documentation/2.4/manual/config/events)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/2.4/manual/config/events](https://www.zabbix.com/documentation/2.4/manual/config/events)'
- en: '[https://www.zabbix.com/documentation/2.4/manual/config/notifications](https://www.zabbix.com/documentation/2.4/manual/config/notifications)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/2.4/manual/config/notifications](https://www.zabbix.com/documentation/2.4/manual/config/notifications)'
- en: Summary
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: So, how does this traditional approach to monitoring fit into a container's
    lifecycle?
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这种传统的监控方法如何适应容器的生命周期呢？
- en: 'Going back to the Pets versus Cattle analogy, at first glance, Zabbix seems
    to be geared more towards Pets: its feature set is best suited to monitoring services
    that are static over a long period of time. This means that the same approach
    to monitoring a pet can also be applied to long-running processes running within
    your containers.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 回到宠物与牛群的比喻，乍一看，Zabbix似乎更适合宠物：其功能集最适合监控长时间内静态的服务。这意味着监控宠物的相同方法也可以应用于在您的容器中运行的长时间进程。
- en: Zabbix is also the perfect option for monitoring mixed environments. Maybe you
    have several database servers that are not running as containers, but you have
    several hosts running Docker, and have equipment such as switches and SANs that
    you need to monitor. Zabbix can provide you with a single pane of glass showing
    you metrics for all your environments, along with being able to alert you to problems.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix也是监控混合环境的完美选择。也许您有几台数据库服务器没有作为容器运行，但您有几台运行Docker的主机，并且有交换机和存储区域网络等设备需要监控。Zabbix可以为您提供一个单一的界面，显示所有环境的指标，并能够提醒您有问题。
- en: So far, we have looked at using APIs and metrics provided by Docker and LXC,
    but what about other metrics can we use? In the next chapter, we will look at
    a tool that hooks straight into the host machine's kernel to gather information
    on your containers.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看过了使用Docker和LXC提供的API和指标，但是我们还能使用哪些其他指标呢？在下一章中，我们将看到一个工具，它直接钩入主机机器的内核，以收集有关您的容器的信息。
