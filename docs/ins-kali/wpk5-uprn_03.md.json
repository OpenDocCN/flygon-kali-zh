["```js\n\"scripts\": {\n  \"build\": \"webpack --config example.config.js\" }\n```", "```js\nconst path = require('path');\n\nmodule.exports = {\n  mode: \"production\", // \"production\" | \"development\" | \"none\"\n  entry: \"./app/entry\", // string | object | array\n```", "```js\noutput: {\n  path: path.resolve(__dirname, \"dist\"), // string\n filename: \"bundle.js\", // string\n  publicPath: \"/assets/\", // string\n  library: \"MyLibrary\", // string,\n libraryTarget: \"umd\", // universal module definition\n  },\n```", "```js\nmodule: { \n   rules: [\n        {\n        test: /\\.jsx?$/,\n        include: [\n          path.resolve(__dirname, \"app\")\n        ],\n        exclude: [\n          path.resolve(__dirname, \"app/demo-files\")\n        ],\n```", "```js\nissuer: { test, include, exclude },\n        enforce: \"pre\",\n        enforce: \"post\",\n        loader: \"babel-loader\",\n        options: { presets: [\"es2015\"] },\n},\n      {\n        test: /\\.html$/,\n        use: [ \"htmllint-loader\",\n{\n            loader: \"html-loader\",\n            options: {\n              / *...* /\n            }\n          }\n        ]\n      },\n```", "```js\n{ oneOf: [ / rules / ] },\n{ rules: [ / rules / ] },\n{ resource: { and: [ / conditions / ] } }, \n{ resource: { or: [ / conditions / ] } },\n{ resource: [ / conditions / ] },\n{ resource: { not: / condition / } }],\n    /* Advanced module configuration */\n  },\n  resolve: {\n```", "```js\nmodules: [\n      \"node_modules\",\n      path.resolve(__dirname, \"app\")\n    ], extensions: [\".js\", \".json\", \".jsx\", \".css\"], \n    alias: { \n              \"module\": \"new-module\",\n              \"only-module$\": \"new-module\",\n              \"module\": path.resolve(__dirname, \"app/third/module.js\"),\n           },\n},\n\n  performance: {\n    hints: \"warning\", // enum\n    maxAssetSize: 200000, // int (in bytes),\n    maxEntrypointSize: 400000, // int (in bytes)\n    assetFilter: function(assetFilename) {\n    return assetFilename.endsWith('.css') || assetFilename.endsWith('.js');\n    }\n  },\n```", "```js\ndevtool: \"source-map\", // enum\ncontext: __dirname, // string (absolute path!)\ntarget: \"web\", // enum\nexternals: [\"react\", /^@angular/],\nserve: { //object\n    port: 1337,\n    content: './dist',\n    // ...\n  },\nstats: \"errors-only\",\n```", "```js\ndevServer: { proxy: { // proxy URLs to backend development server '/api': 'http://localhost:3000' },\n    contentBase: path.join(__dirname, 'public'), \n    compress: true, \n    historyApiFallback: true, \n    hot: true, \n    https: false, \n    noInfo: true, \n\n  },\n  plugins: [\n\n  ],\n  // list of additional plugins\n```", "```js\nnpx webpack-cli init\n```", "```js\nnpx webpack-cli init\n\n INFO For more information and a detailed description of each question, have a look at https://github.com/webpack/webpack-cli/blob/master/INIT.md\n INFO Alternatively, run `webpack(-cli) --help` for usage info.\n\n Will your application have multiple bundles? No\n Which module will be the first to enter the application? [default: ./src/index]\n Which folder will your generated bundles be in? [default: dist]:\n Will you be using ES2015? Yes\n Will you use one of the below CSS solutions? No\n\n  babel-plugin-syntax-dynamic-import@6.18.0\n  uglifyjs-webpack-plugin@2.0.1\n  webpack-cli@3.2.3\n  @babel/core@7.2.2\n  babel-loader@8.0.4\n  @babel/preset-env@7.1.0\n  webpack@4.29.3\n  added 124 packages from 39 contributors, updated 4 packages and audited \n  25221 packages in 7.463s\n  found 0 vulnerabilities\n\nCongratulations! Your new webpack configuration file has been created!\n\n```", "```js\n  <!doctype html>\n  <html>\n    <head>\n    <title>Asset Management</title>\n    </head>\n    <body>\n     <script src=\"img/bundle.js\"></script>\n    </body>\n  </html>\n```", "```js\n  const path = require('path');\n\n  module.exports = {\n    entry: './src/index.js',\n    output: {\n     filename: 'bundle.js',\n     path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\nnpm install --save-dev style-loader css-loader\n```", "```js\n  const path = require('path');\n\n  module.exports = {\n    entry: './src/index.js',\n    output: {\n      filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n   module: {\n     rules: [\n       {\n         test: /\\.css$/,\n         use: [\n           'style-loader',\n           'css-loader'\n         ]\n       }\n     ]\n   }\n  };\n```", "```js\nwebpack5-demo \npackage.json \nwebpack.config.js \n/dist \nbundle.js \nindex.html \n/src  \nstyle.css \nindex.js \n/node_modules\n```", "```js\n.hello {\n  color: blue;\n}\n```", "```js\n  import _ from 'lodash';\n  import './style.css';\n\n  function component() {\n    const element = document.createElement('div');\n\n    // Lodash, now imported by this script\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n    element.classList.add('hello');\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n```", "```js\nnpm run build\n\n...\n    Asset      Size  Chunks             Chunk Names\nbundle.js  76.4 KiB       0  [emitted]  main\nEntrypoint main = bundle.js\n...\n```", "```js\nnpm install --save-dev file-loader\n```", "```js\n  const path = require('path');\n  module.exports = {\n    entry: './src/index.js',\n    output: {\n      filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.css$/,\n          use: [\n            'style-loader',\n            'css-loader'\n          ]\n        },\n        {\n          test: /\\.(png|svg|jpg|gif)$/, \n          use: [  \n             'file-loader'\n          ]\n        }\n      ]\n    }\n  };\n```", "```js\n  webpack5-demo\n  |- package.json\n  |- webpack.config.js\n  |- /dist\n    |- bundle.js\n    |- index.html\n  |- /src\n |- icon.png\n    |- style.css\n    |- index.js\n  |- /node_modules\n```", "```js\nimport _ from 'lodash'; import './style.css';  \nimport Icon from './icon.png'; \nfunction component() { \n    const element = document.createElement('div'); \n    // Lodash, now imported by this script \n        element.innerHTML = _.join(['Hello', 'Webpack'], ' '); \n        element.classList.add('hello');  \n    // Add the image to our existing div.  \n    const myIcon = new Image(); myIcon.src = Icon; \n    element.appendChild(myIcon); \n    return element; \n} \ndocument.body.appendChild(component());\n```", "```js\n  .hello {\n    color: red;\n    background: url('./icon.png');\n  }\n```", "```js\nnpm run build\n\n...\nAsset                                 Size          Chunks         Chunk Names\nda4574bb234ddc4bb47cbe1ca4b20303.png  3.01 MiB          [emitted]  [big]\nbundle.js                             76.7 KiB       0  [emitted]         main\nEntrypoint main = bundle.js\n...\n```", "```js\n  const path = require('path');\n\n  module.exports = {\n    entry: './src/index.js',\n    output: {\n      filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.css$/,\n          use: [\n            'style-loader',\n            'css-loader'\n          ]\n        },\n        {\n          test: /\\.(png|svg|jpg|gif)$/,\n          use: [\n            'file-loader'\n          ]\n        },\n       {\n         test: /\\.(woff|woff2|eot|ttf|otf)$/,\n         use: [\n           'file-loader'\n         ]\n       }\n      ]\n    }\n  };\n```", "```js\n  webpack5-demo\n  |- package.json\n  |- webpack.config.js\n  |- /dist\n    |- bundle.js\n    |- index.html\n  |- /src\n    |- sample-font.woff\n    |- sample-font.woff2\n    |- icon.png\n    |- style.css\n    |- index.js\n  |- /node_modules\n```", "```js\n @font-face {\n    font-family: 'SampleFont';\n    src:  url('./sample-font.woff2') format('woff2'),\n          url('./sample-font.woff') format('woff');\n    font-weight: 600;\n    font-style: normal;\n  }\n\n  .hello {\n    color: blue;\n font-family: 'SampleFont';\n    background: url('./icon.png');\n  }\n```", "```js\nnpm run build\n\n...\n                                 Asset      Size  Chunks                    Chunk Names\n5439466351d432b73fdb518c6ae9654a.woff2  19.5 KiB          [emitted]\n 387c65cc923ad19790469cfb5b7cb583.woff  23.4 KiB          [emitted]\n  da4574bb234ddc4bb47cbe1ca4b20303.png  3.01 MiB          [emitted]  [big]\nbundle.js                                 77 KiB       0  [emitted]         main\nEntrypoint main = bundle.js\n...\n```", "```js\nnpm install --save-dev csv-loader xml-loader\n```", "```js\n  const path = require('path');\n\n  module.exports = {\n    entry: './src/index.js',\n    output: {\n      filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.css$/,\n          use: [\n            'style-loader',\n            'css-loader'\n          ]\n        },\n        {\n          test: /\\.(png|svg|jpg|gif)$/,\n          use: [\n            'file-loader'\n          ]\n        },\n        {\n          test: /\\.(woff|woff2|eot|ttf|otf)$/,\n          use: [\n            'file-loader'\n          ]\n        },\n        {\n          test: /\\.(csv|tsv)$/,\n          use: [\n            'csv-loader'\n          ]\n        },\n        {\n          test: /\\.xml$/,\n          use: [\n            'xml-loader'\n          ]\n        }\n      ]\n    }\n  };\n```", "```js\n  webpack5-demo\n  |- package.json\n  |- webpack.config.js\n  |- /dist\n    |- bundle.js\n    |- index.html\n  |- /src\n    |- data.xml\n    |- samplefont.woff\n    |- sample-font.woff2\n    |- icon.png\n    |- style.css\n    |- index.js\n  |- /node_modules\n```", "```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<note>\n  <to>Tim</to>\n  <from>Jakob</from>\n  <heading>Reminder</heading>\n  <body>Call me tomorrow</body>\n</note>\n```", "```js\n  import _ from 'lodash';\n  import './style.css';\n  import Icon from './icon.png';\n  import Data from './data.xml';\n\n  function component() {\n    const element = document.createElement('div');\n\n    // Lodash, now imported by this script\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n    element.classList.add('hello');\n\n    // Add the image to our existing div.\n    const myIcon = new Image();\n    myIcon.src = Icon;\n\n    element.appendChild(myIcon);\n\n    console.log(Data);\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n```", "```js\nnpm run build\n```", "```js\n  |- /assets\n  |\u2013 /components\n  |  |\u2013 /my-component |  |  |\u2013 index.jsx\n  |  |  |\u2013 index.css\n  |  |  |\u2013 icon.svg\n  |  |  |\u2013 img.png\n```", "```js\n  webpack5-demo\n  |- package.json\n  |- webpack.config.js\n  |- /dist\n    |- bundle.js\n    |- index.html\n  |- /src\n    |- data.xml\n    |- sample-font.woff\n    |- sample-font.woff2\n    |- icon.png\n    |- style.css\n    |- index.js\n  |- /node_modules\n```", "```js\n  const path = require('path'); module.exports = {\n    entry: './src/index.js',\n    output: {\n      filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.css$/,\n          use: [\n            'style-loader',\n            'css-loader'\n          ]\n        },\n        {\n          test: /\\.(png|svg|jpg|gif)$/,\n          use: [\n            'file-loader'\n          ]\n        },\n        {\n          test: /\\.(woff|woff2|eot|ttf|otf)$/,\n          use: [\n            'file-loader'\n          ]\n        },\n        {\n          test: /\\.(csv|tsv)$/,\n          use: [\n            'csv-loader'\n          ]\n        },\n        {\n          test: /\\.xml$/,\n          use: [\n            'xml-loader'\n          ]\n        }\n      ]\n    }\n  };\n```", "```js\n  import _ from 'lodash';\n import './style.css';\n  import Icon from './icon.png';\n  import Data from './data.xml';\n\n  function component() {\n    const element = document.createElement('div');\n\n // Lodash, now imported by this script\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n element.classList.add('hello');\n\n    // Add the image to our existing div.\n    const myIcon = new Image();\n    myIcon.src = Icon;\n\n    element.appendChild(sampleIcon);\n\n    console.log(Data);\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n```", "```js\n  webpack5-demo\n  |- package.json\n  |- webpack.config.js\n  |- /dist\n  |- /src\n    |- index.js |- print.js  |- /node_modules\n```", "```js\nexport default function printIt() {\n  console.log('This is called from print.js!');\n}\n```", "```js\n  import _ from 'lodash';\n  import printMe from './print.js';\n\n  function component() {\n    const element = document.createElement('div');\n    const btn = document.createElement('button');\n\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n\n    btn.innerHTML = 'Click here then check the console!';\n    btn.onclick = printIt();\n\n    element.appendChild(btn);\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n```", "```js\n  <!doctype html>\n  <html>\n    <head>\n      <title>Output Management</title>\n      <script src=\"img/print.bundle.js\"></script>\n    </head>\n    <body>\n      <script src=\"img/app.bundle.js\"></script>\n    </body>\n  </html>\n```", "```js\n  const path = require('path');\n\n  module.exports = {\n    entry: './src/index.js',\n    entry: {\n      app: './src/index.js',\n      print: './src/print.js'\n    },\n    output: {\n      filename: 'bundle.js',\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\n...\nAsset           Size      Chunks                  Chunk Names\napp.bundle.js   545 kB    0, 1  [emitted]  [big]  app\nprint.bundle.js  2.74 kB  1     [emitted]         print\n...\n```", "```js\nnpm install --save-dev html-webpack-plugin\n```", "```js\n  const path = require('path');\n const HtmlWebpackPlugin = require('html-webpack-plugin');\n\n  module.exports = {\n    entry: {\n      app: './src/index.js',\n      print: './src/print.js'\n    },\n    plugins: [\n new HtmlWebpackPlugin({\n        title: 'Output Management'\n      })\n    ],\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\n...\n           Asset       Size  Chunks                    Chunk Names\n print.bundle.js     544 kB       0  [emitted]  [big]  print\n   app.bundle.js    2.81 kB       1  [emitted]         app\n      index.html  249 bytes          [emitted]\n...\n```", "```js\nnpm install --save-dev clean-webpack-plugin \n```", "```js\n  const path = require('path');\n  const HtmlWebpackPlugin = require('html-webpack-plugin');\n const CleanWebpackPlugin = require('clean-webpack-plugin');\n\n  module.exports = {\n    entry: {\n      app: './src/index.js',\n      print: './src/print.js'\n    },\n    plugins: [\n new CleanWebpackPlugin(),\n      new HtmlWebpackPlugin({\n        title: 'Output Management'\n      })\n    ],\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\nmodule.exports = {\n  amd: {\n    jQuery: true\n  }\n};\n```", "```js\nmodule.exports = {\n  bail: true\n};\n\n```", "```js\nmodule.exports = {\n  cache: false\n};\n```", "```js\nlet SharedCache = {};\n\nmodule.exports = {\n  cache: SharedCache\n};\n```", "```js\nuse: [\n    {\n       loader: worker-loader\n    }\n]\n```", "```js\nprofile: true,\n```", "```js\nparallelism: 1\n```", "```js\nmodule.exports = {\n  recordsPath: path.join(__dirname, 'records.json')\n};\n```", "```js\nmodule.exports = { \nrecordsInputPath: path.join(__dirname, 'records.json'), \n};\n```", "```js\nmodule.exports = {\n  recordsInputPath: path.join(__dirname, 'records.json'),\n  recordsOutputPath: path.join(__dirname, 'outRecords.json')\n};\n```", "```js\nmodule.exports = {\n  name: 'admin-app'\n};\n```"]