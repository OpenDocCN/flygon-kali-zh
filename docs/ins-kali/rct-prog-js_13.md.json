["```js\nvar fs = require('fs');\nvar contents = fs.readFileSync('/etc/passwd');\nconsole.log(contents);\n```", "```js\nvar fs = require('fs'); \nfs.readFile('/etc/passwd', 'utf8', function(err, data) {\n  if (err) {\n    console.log('There was an error:');\n    console.log(err);\n    return;\n  }\n  console.log(data);\n});\n```", "```js\nconsole.log('Hello, world!');\n```", "```js\nnpm search express\n\n```", "```js\nnpm install express\n\n```", "```js\n<img id=\"portrait\" />\n<script>\n(document.getElementById('portrait').src =\n'http://cjsh.name/images/portrait.png');\n</script>\n```", "```js\n> fs.readFile('/etc/passwd', function(err, data){console.log(data)});\nundefined\n> <Buffer 23 23 0a 23 20 55 73 65 72 20 44 61 74 61 62 61 73 65 0a 23 20 0a 23 20 4e 6f 74 65 20 74 68 61 74 20 74 68 69 73 20 66 69 6c 65 20 69 73 20 63 6f 6e 73 ...>\n```", "```js\nif (typeof localStorage === 'undefined' || localStorage === null)\n  {      \n  var LocalStorage = require('node-localstorage').LocalStorage;\n  localStorage = new LocalStorage(__dirname + '/localStorage',\n    Infinity);\n  }\n```", "```js\n  var populate_state = function(state, new_data) {\n    for (field in new_data) {\n      if (new_data.hasOwnProperty(field)) {\n        state[field] = new_data[field];\n      }\n    }\n  state.initialized = true;\n  }\n```", "```js\n  var restore = function(identifier, default_value, state, callback) {\n    populate_state(state, default_value);\n    state.initialized = false;\n    var complete = function(jqxhr) {\n      if (jqxhr.responseText === 'undefined' || jqxhr.responseText.length &&\n        jqxhr.responseText[0] === '<') {\n        // We deliberately do nothing.\n      } else {\n        populate_state(state, JSON.parse(jqxhr.responseText));\n      }\n      callback();\n      state.initialized = true;\n    }\n    jQuery.ajax('/restore', {\n      'complete': complete,\n      'data': {\n        'identifier': identifier,\n        'userid': userid\n      },\n      'method': 'POST'\n    });\n    if (Modernizr.localstorage) {\n      if (localStorage[identifier] === null || localStorage[identifier]\n        === undefined) {\n        return default_value;\n      } else {\n        return JSON.parse(localStorage[identifier]);\n      }\n    } else {\n      return default_value;\n    }\n  }\n```", "```js\n  var save = function(identifier, data) {\n    if (Modernizr.localstorage) {\n      localStorage[identifier] = JSON.stringify(data);\n    }\n    jQuery.ajax('/save', {\n      'data': {\n        'data': JSON.stringify(data),\n        'identifier': identifier,\n        'userid': userid\n      },\n      'method': 'POST'\n    });\n  }\n```", "```js\n    render: function() {\n      var result = [this.render_basic_entry(\n        this.state.entry_being_added)];\n      if (this.state.entry_being_added &&\n        this.state.entry_being_added.hasOwnProperty('repeats') &&\n        this.state.entry_being_added.repeats) {\n        result.push(this.render_entry_additionals(\n          this.state.entry_being_added));\n      }\n      return (<div id=\"Calendar\">\n        <h1>Calendar</h1>\n        {this.render_upcoming()}<form onSubmit={\n        this.handle_submit}>{result}\n        <input type=\"submit\" value=\"Save\" id=\"submit-calendar\"\n          disabled=\"disabled\" /></form></div>);\n    },\n```", "```js\n    getInitialState: function() {\n      default_value = {\n        entries: [],\n        entry_being_added: this.new_entry()\n        };\n      restore('Calendar', default_value,\n        default_value, function()\n        {\n        jQuery('#submit-calendar').prop('disabled', false);\n        });\n```", "```js\n  jQuery('#logout').click(function() {\n    if (Modernizr.localstorage) {\n      localStorage.removeItem('Calendar');\n      localStorage.removeItem('Todo');\n      localStorage.removeItem('Scratch');\n    }\n  });\n```", "```js\n{\n  \"name\": \"Pragmatometer\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node ./bin/www\"\n  },\n  \"dependencies\": {\n    \"body-parser\": \"~1.13.2\",\n    \"connect-flash\": \"~0.1.1\",\n    \"debug\": \"~2.2.0\",\n    \"ejs\": \"~2.3.2\",\n    \"express\": \"~4.12.4\",\n    \"express-stormpath\": \"~1.0.5\",\n    \"jade\": \"~1.9.2\",\n    \"morgan\": \"~1.5.3\",\n    \"serve-favicon\": \"~2.2.1\",\n    \"stormpath\": \"~0.10.0\"\n  }\n}\n```", "```js\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.engine('html', require('ejs').renderFile);\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\n// uncomment after placing your favicon in /public\napp.use(favicon(__dirname + '/public/images/favicon.ico'));\napp.use('/public', express.static(path.join(__dirname, 'public')));\n\n// Authentication middleware.\napp.use(stormpath.init(app, {\n  apiKeyId: '[Deleted]',\n  apiKeySecret: '[Deleted]',\n  application:\n    'https://api.stormpath.com/v1/applications/[Deleted]',\n  secretKey: '[Deleted]',\n  sessionDuration: 365 * 24 * 60 * 60 * 1000\n  }));\n\napp.use('/users', users);\n```", "```js\npython -c \"import binascii; print binascii.hexlify(open('/dev/random').read(1024))\"\n\n```", "```js\nvar body_parser = require('body-parser');\nvar json_parser = body_parser.json();\nvar express = require('express');\nvar stormpath = require('express-stormpath');\n```", "```js\nvar sanitize = function(raw) { \n  var workbench = []; \n  for(var index = 0; index < raw.length; ++index) {\n    if ('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.'\n      .indexOf(raw[index]) !== -1) {\n      workbench.push(raw[index])\n    }\n  }\n  return workbench.join('');\n}\n```", "```js\nvar router = express.Router();\n\nrouter.get('/', stormpath.loginRequired, function(request, response) {\n  response.render('index.ejs');\n});\n\nrouter.post('/', stormpath.loginRequired, function(request, response) {\n  response.render('index.ejs');\n});\n```", "```js\nvar save = function(userid, identifier, value) {\n  localStorage.setItem(sanitize(userid) + ':' + sanitize(identifier), value);\n  return true;\n}\n\nvar restore = function(userid, identifier) {\n  var value = localStorage.getItem(sanitize(userid) + ':' + sanitize(identifier));\n  if (value) {\n    return value;\n  } else {\n    return 'undefined';\n  }\n}\n```", "```js\nrouter.post('/restore', json_parser, function(request, response, next) {\n  var result = restore(request.user.href, request.body.identifier);\n  response.type('application/json');\n  response.send(result);\n});\n\nrouter.post('/save', function(request, response, next) {\n  var success_or_failure = save_identifier(request.user.href,\n  request.query.identifier,\n    request.query.data);\n  response.type('application/json');\n  response.send(String(success_or_failure));\n  });\n```", "```js\nmodule.exports = router;\n```", "```js\n    <script\n      src=\"img/react-with-addons.js\">\n    </script>\n    <script\n      src=\"img/showdown.js\">\n    </script>\n    <script src=\"img/ckeditor.js\"></script>\n    <script src=\"img/\"></script>\n    <script src=\"img/json2.js\"></script>\n    <script src=\"img/modernizr.js\"></script>\n    <script src=\"img/site.js\"></script>\n```"]