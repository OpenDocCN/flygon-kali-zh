["```js\nvar template = new PopupTemplate({\n  title: \"USA Demograpahics\",\n  description: \"Median household income at {NAME}, {STATE_NAME} is ${MEDHINC_CY}\",\n **//define field infos so we can specify an alias in the chart**\n  fieldInfos: [\n    { \n      fieldName: \"WHITE_CY\",\n      label: \"White Americans\"\n    },\n    { \n      fieldName: \"BLACK_CY\",\n      label: \"Blacks\"\n    },\n    { \n      fieldName: \"AMERIND_CY\",\n      label: \"American Indians\"\n    },\n    {   fieldName: \"ASIAN_CY\",\n      label: \"Asians\"\n    },\n    { \n      fieldName: \"PACIFIC_CY\",\n      label: \"Pacific Islanders\"\n    },\n    { \n      fieldName: \"OTHRACE_CY\",\n      label: \"Other Race Count\"\n    }\n    ],\n  mediaInfos: [{ //define the bar chart\n    caption: \"\",\n    type: \"piechart\", // image, piechart, barchart,columnchart,linechart\n    value: \n    {\n      theme: \"Dollar\",\n      fields: [\"WHITE_CY\", \"BLACK_CY\", \"AMERIND_CY\", \"ASIAN_CY\", \"PACIFIC_CY\", \"OTHRACE_CY\"]\n    }\n    }]\n});\n```", "```js\nvar chart1 = new Chart2D(chartDomNode);\nchart1.addPlot(\"default\", plotArguments);\n```", "```js\nchart1.addPlot(\"default\", {type: \"StackedLines\", lines: true, markers: false, tension : 3, shadows: {dx:2, dy: 2, dw: 2}});\n```", "```js\nchart1.addPlot(\"default\", {type: \"Bars\", gap: 3});\n```", "```js\nchart.setTheme(dojoxTheme);\n```", "```js\nchart.addSeries(\"PopulationSplit\", chartSeriesArray);\n```", "```js\nchart.addSeries(\"Students\",[\n{x: 1, y: 200 },\n{x: 2, y: 185 }\n]\n});\n```", "```js\nnew Highlight(chart, \"default\");\nnew Tooltip(chart, \"default\");\nnew MoveSlice(chart, \"default\");\n```", "```js\nvar template = new InfoTemplate();\ntemplate.setTitle(\"<b>${STATE_NAME}</b>\");\n\n**//Get the info template content from the getWindowContent function**\ntemplate.setContent(getWindowContent);\n\nvar statesLayer = new FeatureLayer(\"http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer/15\", {\n  mode: FeatureLayer.MODE_ONDEMAND,\n  infoTemplate: template,\n  outFields: [\"NAME\", \"STATE_NAME\", \"TOTPOP_CY\", \"MEDHINC_CY\", \"DIVINDX_CY\", \"WHITE_CY\", \"BLACK_CY\", \"AMERIND_CY\", \"ASIAN_CY\", \"PACIFIC_CY\", \"OTHRACE_CY\"]\n});\n```", "```js\nfunction getWindowContent(graphic) {\n  // Make a tab container.\n  var tc = new TabContainer({\n    style: \"width:100%;height:100%;\"\n  }, domConstruct.create(\"div\"));\n\n// Make two content panes, one showing Median household income       //details. And the second showing the pie chart\n\n  var cp1 = new ContentPane({\n    title: \"Details\",\n    content: \"<a target='_blank' href='http://en.wikipedia.org/wiki/\" + graphic.attributes.NAME + \"'>Wikipedia Entry</a><br/>\" +  \"<br/> Total Population: \" + graphic.attributes.TOTPOP_CY + \" <br/> Median House Income: $\" + graphic.attributes.MEDHINC_CY\n  });\n **// Display a dojo pie chart for the racial distribution in %**\n  var cp2 = new ContentPane({\n    title: \"Pie Chart\"\n  });\n  tc.addChild(cp1);\n  tc.addChild(cp2);\n\n  // Create the chart that will display in the second tab.\n  var c = domConstruct.create(\"div\", {\n    id: \"demoChart\"\n  }, domConstruct.create(\"div\"));\n  var chart = new Chart2D(c);\n  domClass.add(chart, \"chart\");\n\n  // Apply a color theme to the chart.\n  chart.setTheme(dojoxTheme);\n\n  chart.addPlot(\"default\", {\n    type: \"Pie\",\n    radius: 70,\n    htmlLabels: true\n  });\n  tc.watch(\"selectedChildWidget\", function (name, oldVal, newVal) {\n    if (newVal.title === \"Pie Chart\") {\n      chart.resize(180, 180);\n    }\n  });\n\n  // Calculate percent of each ethnic race\n  //\"WHITE_CY\", \"BLACK_CY\", \"AMERIND_CY\", \"ASIAN_CY\", \"PACIFIC_CY\", \"OTHRACE_CY\"\n  var total = graphic.attributes.TOTPOP_CY;\n  var white = {\n    value: number.round(graphic.attributes.WHITE_CY / total * 100, 2),\n    label: \"White Americans\"\n  };\n  var black = {\n    value: number.round(graphic.attributes.BLACK_CY / total * 100, 2),\n    label: \"African Americans\"\n  };\n  var AmericanIndians = {\n    value: number.round(graphic.attributes.AMERIND_CY / total * 100, 2),\n    label: \"American Indians\"\n  };\n  var Asians = {\n    value: number.round(graphic.attributes.ASIAN_CY / total * 100, 2),\n    label: \"Asians\"\n  }\n  var Pacific = {\n    value: number.round(graphic.attributes.PACIFIC_CY / total * 100, 2),\n    label: \"Pacific Islanders\"\n  };\n  var OtherRace = {\n    value: number.round(graphic.attributes.OTHRACE_CY / total * 100, 2), \n    label: \"Other Race\"\n  };\n  var chartFields = [white, black, AmericanIndians, Asians, Pacific, OtherRace];\n  var chartSeriesArray = [];\n  array.forEach(chartFields, function (chartField) {\n    var chartObject = {\n      y: chartField.value,\n      tooltip: chartField.label + ' : ' + chartField.value + ' %',\n      text: chartField.label\n    }\n    chartSeriesArray.push(chartObject);\n\n  });\n\n  chart.addSeries(\"PopulationSplit\", chartSeriesArray);\n  //highlight the chart and display tooltips when you mouse over a slice.\n  new Highlight(chart, \"default\");\n  new Tooltip(chart, \"default\");\n  new MoveSlice(chart, \"default\");\n\n  cp2.set(\"content\", chart.node);\n  return tc.domNode;\n}\n```", "```js\n<script src=\"//d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n```", "```js\nvar dojoConfig = {\n  packages: \n  [\n    {\n      name: \"d3\",\n      location: \"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5\",\n      main: \"d3.min\"\n    }\n  ]\n};\n```", "```js\ndefine([\n  \"dojo/_base/declare\",\n  \"d3\",\n  \"dojo/domReady!\"\n  ], \nfunction \n(\n  declare,\n  d3\n) \n{\n  //Keep Calm and use D3 with dojo\n});\n```", "```js\nd3.select(\"body\")\n```", "```js\nd3.select(\".chart\").selectAll(\"div\")\n```", "```js\nd3.select(\"body\").append(\"svg\")\n```", "```js\nd3.select(\"body\").enter().append(\"svg\")\n```", "```js\nvar data = [45, 87, 15, 16, 23, 11];\n\n  var d3Selection = d3.select(\".chart\").selectAll(\"div\").data(data).enter().append(\"div\");\n\n  d3Selection.style(\"width\", function (d) {\n    return d * 3 + \"px\";\n  }).text(function (d) {\n    return d;\n  });\n```", "```js\n.chart div {\n    font: 10px sans-serif;\n    background-color: steelblue;\n    text-align: right;\n    padding: 3px;\n    margin: 1px;\n    color: white;\n}\n```", "```js\nd3.max(data)\n```", "```js\nvar x = d3.scale.linear()\n    .domain([0, d3.max(data)])\n    .range([0, 750]);\n```", "```js\nd3.select(\".chart\").selectAll(\"div\").data(data)\n  .enter().append(\"div\").style(\"width\", function (d) {\n    return x(d) + \"px\"; \n  }).text(function (d) {\n    return d;\n  });\n```", "```js\nvar svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", 500)\n    .attr(\"height\", 500)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(20,20)\";\n```", "```js\n  var y = d3.scale.linear()\n    .range([700, 0]);\n```", "```js\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n```", "```js\nmean = $46193\nSD = $12564\n```", "```js\n2.5th percentile value = mean \u2013 1.96 * SD\n                       =   46193 \u2013 1.96*(12564)  \n                       =             21567.56  \n```", "```js\n97.5th percentile = mean + 1.96 * SD\n                  = 46193 + 1.96*(12564)\n                  = 70818.44\n```", "```js\nvar data = [\n  {\n    \"label\": \"Top 2.5%ile\",\n    \"Income\": 70818\n  },\n  {\n    \"label\": \"Bottom 2.5%ile\",\n    \"Income\": 21568\n  },\n  {\n    \"label\": \"National Avg\",\n    \"Income\": 46193\n  },\n  {\n    \"label\": \"Selected Value\",\n    \"Income\": 0\n  }\n];\n```", "```js\n var margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 60\n    },\n    width = 400 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n```", "```js\nfunction drawChart() {\n\n// Find X and Y scaling factor\n\n  var x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\n  var y = d3.scale.linear()\n    .range([height, 0]);\n\n  // Define the X & y axes\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n  //clear existing \n  d3.select(\".chart\").selectAll(\"*\").remove();\n  var svg = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Define the X & y domains \n  x.domain(data. map(function (d) {\n    return d.label;\n  }));\n  y.domain([0, d3.max(data, function (d) {\n    return d.population;\n  })]);\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .append(\"text\")\n    .attr(\"transform\", \"translate(-60, 150) rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Population\");\n\n  svg.selectAll(\".bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .style(\"fill\", function (d) {\n      if (d.label == \"Selected Value\")\n        return \"yellowgreen\";\n    })\n    .attr(\"x\", function (d) {\n      return x(d.label);\n    })\n    .attr(\"width\", x.rangeBand())\n    .attr(\"y\", function (d) {\n      return y(d.population);\n    })\n    .attr(\"height\", function (d) {\n      return height - y(d.population);\n    });\n}\n```", "```js\n//map.js file\n\ndefine(\"dojo/topic\",..){\non(CountyDemogrpahicsLayer, \"click\", function(evt){\n            topic.publish(\"app/feature/selected\", evt.graphic);\n        });\n}\n```", "```js\n//chart_d3.js file\n\ntopic.subscribe(\"app/feature/selected\", function () {\n    var val = arguments[0].attributes.MEDHINC_CY;\n    var title = arguments[0].attributes.NAME + ', ' + arguments[0].attributes.STATE_NAME;;\n    array.forEach(data, function (item) {\n      if (item.label === \"Selected Value\") {\n        item.Income = val;\n      }\n    });\n\n    drawChart(title);\n    console.log(JSON.stringify(data));\n  });\n```", "```js\n<script type=\"text/javascript\" src=\"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n<script type=\"text/javascript\" src=\"http://vega.github.io/vega/vega.min.js\"></script>\n<script type=\"text/javascript\" src=\"https://rawgit.com/Esri/cedar/master/src/cedar.js\"></script>\n\n<script>\n  var chart = new Cedar({\"type\": \"bar\"});\n  ...\n</script>\n```", "```js\nvar package_path = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\nvar dojoConfig = {\npackages: [{\n    name: \"application\",\n    location: package_path + '/js/lib'\n  },\n  {\n    name: \"d3\",\n    location: \"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5\",\n    main: \"d3.min\"\n  },\n  {\n    name: 'vega',\n    location: 'http://vega.github.io/vega/',\n    main: 'vega.min'\n  }, {\n    name: 'cedar',\n    location: package_path + '/js/cedar',\n    main: 'cedar'\n  }]\n};\n```", "```js\ndefine([\n  \"cedar\",\n  \"dojo/domReady!\"\n], function (Cedar) \n{\n  var chart = new Cedar({\n  ...\n\n  });\n\n  chart.show({\n    elementId: \"#cedarchartdiv\",\n    width: 900\n  });\n});\n```", "```js\nvar chart = new Cedar({\n  \"type\": \"bar\",\n  \"dataset\": {\n    \"url\": \"/proxy/proxy.ashx?http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer/15\",\n    \"query\": {\n      \"groupByFieldsForStatistics\": \"ST_ABBREV\",\n\n//Find the average value of Median Household Income\n      \"outStatistics\": [{\n        \"statisticType\": \"avg\",\n        \"onStatisticField\": \"MEDHINC_CY\",\n        \"outStatisticFieldName\": \"AVG_MEDHINC_CY\"\n      }]\n    },\n    \"mappings\": {\n      \"sort\": \"AVG_MEDHINC_CY\",\n      \"x\": {\n        \"field\": \"ST_ABBREV\",\n        \"label\": \"State\"\n      },\n      \"y\": {\n        \"field\": \"AVG_MEDHINC_CY\",\n        \"label\": \"Avg. Median Household Income\"\n      }\n    }\n  }\n});\n\nchart.tooltip = {\n  \"title\": \"{ST_ABBREV}\",\n  \"content\": \"{AVG_MEDHINC_CY} population in {ST_ABBREV}\"\n}\n\n//show the chart\nchart.show({\n  elementId: \"#cedarchartdiv\",\n  width: 900\n});\n```", "```js\n//Get data from the Query Task\n\nvar query = new Query();\nvar queryTask = new QueryTask(\"http://demographics5.arcgis.com/arcgis/rest/services/USA_Demographics_and_Boundaries_2015/MapServer/21\");\nquery.where = \"1 = 1\";\nquery.returnGeometry = false;\nquery.outFields = [\"MEDHINC_CY\", \"DIVINDX_CY\", \"NAME\", \"TOTPOP_CY\"];\nqueryTask.execute(query).then(function (data) {\n  /*scatter*/\n  var scatter_chart = new Cedar({\n    \"type\": \"scatter\",\n    \"dataset\": {\n      \"data\": data,\n      \"mappings\": {\n        \"x\": {\n          \"field\": \"MEDHINC_CY\",\n          \"label\": \"Median Houseold Income\"\n        },\n        \"y\": {\n          \"field\": \"DIVINDX_CY\",\n          \"label\": \"Diversity Index\"\n        },\n        \"color\": {\n          \"field\": \"NAME\",\n          \"label\": \"State\"\n        }\n      }\n    }\n  });\n\n  scatter_chart.tooltip = {\n    \"title\": \"{NAME}\",\n    \"content\": \"Median Income:{MEDHINC_CY}<br/>Diversity:{DIVINDX_CY}\"\n  }\n\n  scatter_chart.show({\n    elementId: \"#cedarScatterPlotDiv\",\n    width: 870,\n    height: 600\n  });\n```", "```js\nvar bubble_chart = new Cedar({\n      \"type\": \"bubble\",\n      \"dataset\": {\n        \"data\": data,\n        \"mappings\": {\n          \"x\": {\n            \"field\": \"MEDHINC_CY\",\n            \"label\": \"Median Houseold Income\"\n          },\n          \"y\": {\n            \"field\": \"DIVINDX_CY\",\n            \"label\": \"Diversity Index\"\n          },\n          \"size\": {\n            \"field\": \"TOTPOP_CY\",\n            \"label\": \"Population\"\n          }\n        }\n      }\n    });\n\n    bubble_chart.tooltip = {\n      \"title\": \"{NAME}\",\n      \"content\": \"Median Income:{MEDHINC_CY}<br/>Diversity:{DIVINDX_CY}\"\n    }\n\n    bubble_chart.show({\n      elementId: \"#cedarBubblePlotDiv\"\n    });\n```"]