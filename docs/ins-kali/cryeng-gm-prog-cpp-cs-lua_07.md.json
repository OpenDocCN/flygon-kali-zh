["```cs\n<UIElements name=\"Menus\">\n  <UIElement name=\"MyMainMenu\" mouseevents=\"1\" keyevents=\"1\" cursor=\"1\" controller_input=\"1\">\n\n    <GFx file=\"Menus_Startmenu.swf\" layer=\"3\">\n      <Constraints>\n        <Align mode=\"fullscreen\" scale=\"1\"/>\n      </Constraints>\n    </GFx>\n\n    <functions>\n    </functions>\n\n    <events>\n    </events>\n    <Arrays>\n    </Arrays>\n\n    <MovieClips>\n    </MovieClips>\n  </UIElement>\n</UIElements>\n```", "```cs\n<UIElements name=\"Menus\">\n```", "```cs\n<UIElement name=\"MyMainMenu\" mouseevents=\"1\" keyevents=\"1\" cursor=\"1\" controller_input=\"1\">\n```", "```cs\n<GFx file=\"Menus_Startmenu.swf\" layer=\"3\">\n```", "```cs\n<Constraints>\n  <Align mode=\"fullscreen\" scale=\"1\"/>\n</Constraints>\n```", "```cs\n<UIElements name=\"Menus\">\n  <UIElement name=\"MainMenuSample\" mouseevents=\"1\" keyevents=\"1\" cursor=\"1\" controller_input=\"1\">\n    <GFx file=\"MainMenuSample.swf\" layer=\"3\">\n      <Constraints>\n        <Align mode=\"dynamic\" halign=\"left\" valign=\"top\" scale=\"1\" max=\"1\"/>\n      </Constraints>\n    </GFx>\n  </UIElement>\n</UIElements>\n```", "```cs\n<functions>\n  <function name=\"SetupScreen\" funcname=\"setupScreen\" desc=\"Sets up screen, clearing previous movieclips and configuring settings\">\n    <param name=\"buttonX\" desc=\"Initial x pos of buttons\" type=\"int\" />\n    <param name=\"buttonY\" desc=\"Initial y pos of buttons\" type=\"int\" />\n    <param name=\"buttonDividerSize\" desc=\"Size of the space between buttons\" type=\"int\" />\n  </function>\n\n  <function name=\"AddBigButton\" funcname=\"addBigButton\" desc=\"Adds a primary button to the screen\">\n    <param name=\"id\" desc=\"Button Id, sent with the onBigButton event\" type=\"string\" />\n    <param name=\"title\" desc=\"Button text\" type=\"string\" />\n  </function>\n</functions>\n```", "```cs\n<events>\n  <event name=\"OnBigButton\" fscommand=\"onBigButton\" desc=\"Triggered when a big button is pressed\">    \n    <param name=\"id\" desc=\"Id of the button\" type=\"string\" />\n  </event>\n</events>\n```", "```cs\nfscommand(\"onBigButton\", buttonId);\n```", "```cs\n<variables>\n  <variable name=\"MyTextField\" varname=\"_root.m_myTextField.text\"/>\n</variables>\n```", "```cs\n<arrays>\n  <array name=\"MyArray\" varname=\"_root.m_myArray\"/>\n</arrays>\n```", "```cs\n<movieclips>\n  <movieclip name=\"MyMovieClip\" instancename=\"_root.m_myMovieclip\"/>\n</movieclips>\n```", "```cs\nvar button = _root.attachMovie(\"BigButton\", \"BigButton\" + m_buttons.length, _root.getNextHighestDepth());\n```", "```cs\nfscommand(\"onBigButton\", button._id);\n```", "```cs\nclass CMyUIGameEventSystem\n  : public IUIGameEventSystem\n{\npublic:\n  CMyUIGameEventSystem() {}\n\n  // IUIGameEventSystem\n  UIEVENTSYSTEM(\"MyUIGameEvents\");\n  virtual void InitEventSystem() {}\n  virtual void UnloadEventSystem() {}\n  // ~IUIGameEventSystem\n};\n```", "```cs\nREGISTER_UI_EVENTSYSTEM(CMyUIGameEventSystem);\n```", "```cs\nSUIEventReceiverDispatcher<CMyUIGameEventSystem> m_eventReceiver;\nIUIEventSystem *m_pUIFunctions;\n```", "```cs\nvoid OnMyUIFunction(int intParameter) \n{\n  // Log indicating whether the call was successful\n  CryLogAlways(\"OnMyUIFunction %i\", intParameter);\n}\n```", "```cs\n// Create and register the incoming event system\nm_pUIFunctions = gEnv->pFlashUI->CreateEventSystem(\"MyUI\", IUIEventSystem::eEST_UI_TO_SYSTEM);\nm_eventReceiver.Init(m_pUIFunctions, this, \"MyUIGameEvents\");\n\n// Register our function\n{\n  SUIEventDesc eventDesc(\"MyUIFunction\", \"description\");\n\n  eventDesc.AddParam<SUIParameterDesc::eUIPT_Int>(\"IntInput\", \"parameter description\");\n\n  m_eventReceiver.RegisterEvent(eventDesc, &CMyUIGameEventSystem::OnMyUIFunction);\n}\n```", "```cs\nenum EUIEvent\n{\n\teUIE_MyUIEvent\n};\n\nSUIEventSenderDispatcher<EUIEvent> m_eventSender;\nIUIEventSystem *m_pUIEvents;\n```", "```cs\n// Create and register the outgoing event system\nm_pUIEvents = gEnv->pFlashUI->CreateEventSystem(\"MyUI\", IUIEventSystem::eEST_SYSTEM_TO_UI);\n\nm_eventSender.Init(m_pUIEvents);\n\n// Register our event\n{\n\tSUIEventDesc eventDesc(\"OnMyUIEvent\", \"description\");\n\teventDesc.AddParam<SUIParameterDesc::eUIPT_String>(\"String\", \"String output description\");\n\tm_eventSender.RegisterEvent<eUIE_MyUIEvent>(eventDesc);\n}\n```", "```cs\nm_eventSender.SendEvent<eUIE_MyUIEvent>(\"MyStringParam\");\n```"]