- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Some of us may be used to developing an application using the object orientation
    programming technique and don’t care about the functional programming technique.
    However, there are benefits to using functional programming. One of the benefits
    is that we will get a new perspective on our programming code since the function
    in functional programming is identical to a mathematical function. Because it's
    identical to a mathematical function, the function in functional programming contains
    no side-effects, which means that the function invocation will have no effect
    on other functions in the class. We will discuss more details about the benefits
    and other things related to functional programming in this book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们中的一些人可能习惯于使用面向对象编程技术开发应用程序，不关心函数式编程技术。然而，使用函数式编程是有好处的。其中一个好处是，我们将从新的角度看待我们的编程代码，因为函数式编程中的函数与数学函数相同。因为它与数学函数相同，函数式编程中的函数不包含副作用，这意味着函数调用不会对类中的其他函数产生影响。我们将在本书中讨论有关函数式编程的好处和其他相关事项的更多细节。
- en: What this book covers
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](text00016.html#ch01 "Chapter 1. Tasting Functional Style in C#")
    , *Tasting Functional Style in C#* , introduces the functional programming approach
    by discussing its concepts and the comparison between functional and imperative
    programming. We also try to refactor a simple imperative code into a functional
    approach.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](text00016.html#ch01 "第1章。品味C#中的函数式风格") ，*品味C#中的函数式风格*，通过讨论其概念和函数式与命令式编程的比较，介绍了函数式编程方法。我们还尝试将简单的命令式代码重构为函数式方法。'
- en: '[Chapter 2](text00024.html#ch02 "Chapter 2. Walkthrough Delegates") , *Walkthrough
    Delegates* , covers the definition, syntax, and use of delegates. We also discuss
    the variance of delegates and the built-in delegate.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](text00024.html#ch02 "第2章。委托演练") ，*委托演练*，涵盖了委托的定义、语法和用法。我们还讨论了委托的变化和内置委托。'
- en: '[Chapter 3](text00028.html#ch03 "Chapter 3. Expressing Anonymous Methods with
    Lambda Expressions") , *Expressing Anonymous Methods with Lambda Expressions*
    , walks us through the concept of delegates and uses it to create and use an anonymous
    method. After we dig through the anonymous method, we can transform it into a
    lambda expression and then apply it to functional programming.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](text00028.html#ch03 "第3章。用Lambda表达式表达匿名方法") ，*用Lambda表达式表达匿名方法*，引导我们了解委托的概念，并使用它来创建和使用匿名方法。在深入研究匿名方法之后，我们可以将其转换为Lambda表达式，然后应用于函数式编程。'
- en: '[Chapter 4](text00033.html#page "Chapter 4. Extending Object Functionality
    with Extension Methods") , *Extending Object Functionality with Extension Methods*
    , elaborates the benefits of using the extension method in functional programming.
    Before that, we discuss the use of the extension method and also discuss how to
    get this new method in IntelliSense. Also, we try to invoke the extension method
    from other assemblies.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](text00033.html#page "第4章。使用扩展方法扩展对象功能") ，*使用扩展方法扩展对象功能*，详细说明了在函数式编程中使用扩展方法的好处。在此之前，我们讨论了扩展方法的用法，还讨论了如何在IntelliSense中获取这个新方法。此外，我们尝试从其他程序集调用扩展方法。'
- en: '[Chapter 5](text00039.html#page "Chapter 5. Querying Any Collection Easily
    with LINQ") , *Querying Any Collection Easily with LINQ* , enumerates the LINQ
    operator provided by C# and compares the two LINQ syntaxes: Fluent Syntax and
    Query Expression Syntax. We also discuss deferred execution in the LINQ process.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](text00039.html#page "第5章。使用LINQ轻松查询任何集合") ，*使用LINQ轻松查询任何集合*，列举了C#提供的LINQ运算符，并比较了两种LINQ语法：流畅语法和查询表达式语法。我们还讨论了LINQ过程中的延迟执行。'
- en: '[Chapter 6](text00044.html#page "Chapter 6. Enhancing the Responsiveness of
    the Functional Program with Asynchronous Programming") , *Enhancing the Responsiveness
    of the Functional Program with Asynchronous Programming* , covers asynchronous
    programming for the functional approach. It will explain the Asynchronous Programming
    Model and the Task-based Asynchronous pattern.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](text00044.html#page "第6章。使用异步编程增强函数式程序的响应性") ，*使用异步编程增强函数式程序的响应性*，涵盖了函数式方法的异步编程。它将解释异步编程模型和基于任务的异步模式。'
- en: '[Chapter 7](text00050.html#page "Chapter 7. Learning Recursion") , *Learning
    Recursion* , explains the advantages of recursion over the loop sequence. We also
    discuss direct and indirect recursion in this chapter.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](text00050.html#page "第7章。学习递归") ，*学习递归*，解释了递归在循环序列上的优势。我们还在本章讨论了直接递归和间接递归。'
- en: '[Chapter 8](text00054.html#ch08 "Chapter 8. Optimizing the Code using Laziness
    and Caching Techniques") , *Optimizing the Code Using Laziness and Caching Techniques*
    , covers the technique used to optimize the code in the functional approach. We
    talk about laziness thinking and the caching technique in order to optimize our
    code.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](text00054.html#ch08 "第8章。使用惰性和缓存技术优化代码") ，*使用惰性和缓存技术优化代码*，涵盖了函数式方法中用于优化代码的技术。我们讨论了惰性思维和缓存技术，以优化我们的代码。'
- en: '[Chapter 9](text00057.html#ch09 "Chapter 9. Working with Pattern") , *Working
    with Pattern* , covers the advantages of using patterns compared to conventional
    switch-case operations. We discuss pattern matching and monad in this chapter.
    We use the pattern matching feature, which is the new feature provided by C# 7.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](text00057.html#ch09 "第9章。使用模式") ，*使用模式*，涵盖了使用模式与传统的switch-case操作相比的优势。我们在本章讨论了模式匹配和单子。我们使用模式匹配功能，这是C#
    7提供的新功能。'
- en: '[Chapter 10](text00060.html#ch10 "Chapter 10. Taking an Action in C# Functional
    Programming") , *Taking an Action in C# Functional Programming* , walks us through
    developing functional code based on given imperative code. We use our learning
    in the previous chapter to create an application using the functional approach.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](text00060.html#ch10 "第10章。在C#函数式编程中采取行动") ，*在C#函数式编程中采取行动*，引导我们通过基于给定命令式代码开发函数式代码。我们利用上一章的学习成果，使用函数式方法创建一个应用程序。'
- en: '[Chapter 11](text00062.html#ch11 "Chapter 11. Coding Best Practice and Testing
    the Functional Code") , *Coding Best Practice and Testing the Functional Code*
    , explains the best practice in the functional approach, including the creation
    of an honest signature and dealing with the side-effects. We also separate the
    code into domain logic and mutable shell and then test it using unit testing.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](text00062.html#ch11 "第11章。编码最佳实践和测试功能代码") ，*编码最佳实践和测试功能代码*，解释了功能方法的最佳实践，包括创建诚实的签名和处理副作用。我们还将代码分为领域逻辑和可变外壳，然后使用单元测试进行测试。'
- en: What you need for this book
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书做好准备
- en: To walk through this book and successfully compile all the source code, we require
    a personal computer that runs Microsoft Windows 10 (or higher) with Visual Studio
    Community 2015 Update 3 installed for the running of code in chapters 1-8, 10,
    11 and Visual Studio Community 2017 RC (Release Candidate) installed for the running
    of code in chapter 9\. We also need the .NET Framework 4.6.2 unless you need to
    recode all the source code to run in your current version of .NET Framework. You
    also need .NET Core 1.0 if you want to compile all code in another platform since
    all code are compatible with .NET Core 1.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要阅读本书并成功编译所有源代码，我们需要一台运行Microsoft Windows 10（或更高版本）的个人电脑，并安装Visual Studio Community
    2015 Update 3以运行第1-8章、10、11章的代码，以及安装Visual Studio Community 2017 RC（Release Candidate）以运行第9章的代码。我们还需要.NET
    Framework 4.6.2，除非您需要重新编写所有源代码以在当前版本的.NET Framework中运行。如果您想在其他平台上编译所有代码，则还需要.NET
    Core 1.0，因为所有代码都与.NET Core 1.0兼容。
- en: Who this book is for
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is suitable for C# developers with basic prior knowledge of C# and
    with no functional programming experience at all.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合具有C#基础知识但没有功能性编程经验的C#开发人员。
- en: Conventions
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 惯例
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是这些样式的一些示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“我们可以通过使用`include`指令包含其他上下文。”
- en: 'A block of code is set as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "We have a **Body** property containing **{(a * b)}** , **NodeType** containing
    **Lambda** , **Type** containing the **Func** delegate with three templates."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。例如，屏幕上看到的单词，例如菜单或对话框中的单词，会以这种方式出现在文本中：“我们有一个包含**{(a *
    b)}**的**Body**属性，包含**Lambda**的**NodeType**，包含具有三个模板的**Func**委托的**Type**。”'
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会以以下方式显示。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧看起来像这样。
- en: Reader feedback
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的读者的反馈总是受欢迎的。让我们知道您对本书的看法-您喜欢或不喜欢的内容。读者的反馈对我们很重要，因为它有助于我们开发您真正能够充分利用的标题。
- en: To send us general feedback, simply e-mail feedback@packtpub.com, and mention
    the book's title in the subject of your message.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要向我们发送一般反馈，只需发送电子邮件至feedback@packtpub.com，并在主题中提及书名。
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](https://www.packtpub.com/books/info/packt/authors)
    .
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在某个专题上有专业知识，并且有兴趣撰写或为书籍做出贡献，请参阅我们的作者指南[www.packtpub.com/authors](https://www.packtpub.com/books/info/packt/authors)。
- en: Customer support
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您是Packt书籍的自豪所有者，我们有许多事情可以帮助您充分利用您的购买。
- en: Downloading the example code
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com)
    . If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便文件直接发送到您的电子邮件。
- en: 'You can download the code files by following these steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**选项卡上。
- en: Click on **Code Downloads & Errata** .
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载和勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书名。
- en: Select the book for which you're looking to download the code files.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买本书的地方。
- en: Click on **Code Download** .
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用最新版本的解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows的WinRAR / 7-Zip
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac的Zipeg / iZip / UnRarX
- en: 7-Zip / PeaZip for Linux
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux的7-Zip / PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Functional-CSharp](https://github.com/PacktPublishing/Functional-CSharp)
    . We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    . Check them out!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Functional-CSharp](https://github.com/PacktPublishing/Functional-CSharp)。我们还有来自丰富书籍和视频目录的其他代码包可供使用，网址为[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)。去看看吧！
- en: Errata
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)
    , selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经非常小心地确保了内容的准确性，但错误还是会发生。如果您在我们的书籍中发现错误——可能是文本或代码中的错误——我们将不胜感激，如果您能向我们报告。通过这样做，您可以帮助其他读者避免挫折，并帮助我们改进本书的后续版本。如果您发现任何勘误，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表**链接，并输入您的勘误详情。一旦您的勘误被验证，您的提交将被接受，并且勘误将被上传到我们的网站或添加到该标题的勘误部分的任何现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看先前提交的勘误表，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)并在搜索框中输入书名。所需信息将显示在**勘误表**部分下。
- en: Piracy
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上的盗版行为是跨所有媒体持续存在的问题。在Packt，我们非常重视保护我们的版权和许可。如果您在互联网上以任何形式发现我们作品的非法副本，请立即向我们提供位置地址或网站名称，以便我们采取补救措施。
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过copyright@packtpub.com与我们联系，并附上涉嫌盗版材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们的作者和我们提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，可以通过questions@packtpub.com与我们联系，我们将尽力解决问题。
