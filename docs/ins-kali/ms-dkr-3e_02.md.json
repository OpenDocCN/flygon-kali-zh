["```\nFROM alpine:latest\nLABEL maintainer=\"Russ McKendrick <russ@mckendrick.io>\"\nLABEL description=\"This example Dockerfile installs NGINX.\"\nRUN apk add --update nginx && \\\n rm -rf /var/cache/apk/* && \\\n mkdir -p /tmp/nginx/\n\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/default.conf /etc/nginx/conf.d/default.conf\nADD files/html.tar.gz /usr/share/nginx/\n\nEXPOSE 80/tcp\n\nENTRYPOINT [\"nginx\"]\nCMD [\"-g\", \"daemon off;\"]\n```", "```\n$ docker image inspect <IMAGE_ID>\n```", "```\n$ docker image inspect -f {{.Config.Labels}} <IMAGE_ID>\n```", "```\nRUN apk add --update nginx && \\\n rm -rf /var/cache/apk/* && \\\n mkdir -p /tmp/nginx/\n```", "```\n$ apk add --update nginx\n```", "```\n$ rm -rf /var/cache/apk/*\n```", "```\n$ mkdir -p /tmp/nginx/\n```", "```\nRUN apk add --update nginx\nRUN rm -rf /var/cache/apk/*\nRUN mkdir -p /tmp/nginx/\n```", "```\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/default.conf /etc/nginx/conf.d/default.conf\n```", "```\nuser nginx;\nworker_processes 1;\n\nerror_log /var/log/nginx/error.log warn;\npid /var/run/nginx.pid;\n\nevents {\n worker_connections 1024;\n}\n\nhttp {\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    access_log /var/log/nginx/access.log main;\n    sendfile off;\n    keepalive_timeout 65;\n    include /etc/nginx/conf.d/*.conf;\n}\n```", "```\nserver {\n  location / {\n      root /usr/share/nginx/html;\n  }\n}\n```", "```\nADD files/html.tar.gz /usr/share/nginx/\n```", "```\nADD http://www.myremotesource.com/files/html.tar.gz /usr/share/nginx/\n```", "```\nEXPOSE 80/tcp\n```", "```\nENTRYPOINT [\"nginx\"]\nCMD [\"-g\", \"daemon off;\"]\n```", "```\n$ nginx -g daemon off;\n```", "```\n$ docker container run --name nginx-version dockerfile-example -v\n```", "```\n$ nginx -v\n```", "```\nONBUILD RUN apk update && apk upgrade && rm -rf /var/cache/apk/*\n```", "```\n$ docker image build --help\n```", "```\nFROM alpine:latest\nLABEL maintainer=\"Russ McKendrick <russ@mckendrick.io>\"\nLABEL description=\"This example Dockerfile installs NGINX.\"\nRUN apk add --update nginx && \\\n rm -rf /var/cache/apk/* && \\\n mkdir -p /tmp/nginx/\n\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/default.conf /etc/nginx/conf.d/default.conf\nADD files/html.tar.gz /usr/share/nginx/\n\nEXPOSE 80/tcp\n\nENTRYPOINT [\"nginx\"]\nCMD [\"-g\", \"daemon off;\"]\n```", "```\n$ docker image build --file <path_to_Dockerfile> --tag <REPOSITORY>:<TAG> .\n```", "```\n$ docker image build --file /path/to/your/dockerfile --tag local:dockerfile-example .\n```", "```\n$ docker image build --tag local:dockerfile-example .\n```", "```\n$ docker image ls\n```", "```\n$ docker container run -d --name dockerfile-example -p 8080:80 local:dockerfile-example\n```", "```\n$ docker container ls \n```", "```\n$ docker container run --name nginx-version local:dockerfile-example -v\n```", "```\n$ docker image inspect -f {{.Config.Labels}} local:dockerfile-example\n```", "```\n$ docker container stop dockerfile-example\n$ docker container rm dockerfile-example nginx-version  \n```", "```\n$ docker image pull alpine:latest\n```", "```\n$ docker container run -it --name alpine-test alpine /bin/sh\n```", "```\n$ apk update\n$ apk upgrade\n$ apk add --update nginx\n$ rm -rf /var/cache/apk/*\n$ mkdir -p /tmp/nginx/\n$ exit\n```", "```\n$ docker container commit <container_name> <REPOSITORY>:<TAG>\n```", "```\n$ docker container commit alpine-test local:broken-container \n```", "```\n$ docker image save -o <name_of_file.tar> <REPOSITORY>:<TAG>\n```", "```\n$ docker image save -o broken-container.tar local:broken-container\n```", "```\nFROM scratch\nADD files/alpine-minirootfs-3.8.0-x86_64.tar.gz /\nCMD [\"/bin/sh\"]\n```", "```\n$ docker image build --tag local:fromscratch .\n```", "```\n$ docker image ls\n```", "```\n$ docker container run -it --name alpine-test local:fromscratch /bin/sh\n```", "```\n$ cat /etc/*release\n```", "```\nENV <key> <value>\nENV username admin\n```", "```\nENV <key>=<value>\nENV username=admin\n```", "```\nENV username=admin database=wordpress tableprefix=wp\n```", "```\n$ docker image inspect <IMAGE_ID> \n```", "```\nFROM alpine:latest\nLABEL maintainer=\"Russ McKendrick <russ@mckendrick.io>\"\nLABEL description=\"This example Dockerfile installs Apache & PHP.\"\nENV PHPVERSION=7\n\nRUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION} && \\\n rm -rf /var/cache/apk/* && \\\n mkdir /run/apache2/ && \\\n rm -rf /var/www/localhost/htdocs/index.html && \\\n echo \"<?php phpinfo(); ?>\" > /var/www/localhost/htdocs/index.php && \\\n chmod 755 /var/www/localhost/htdocs/index.php\n\nEXPOSE 80/tcp\n\nENTRYPOINT [\"httpd\"]\nCMD [\"-D\", \"FOREGROUND\"]\n```", "```\n$ docker build --tag local/apache-php:7 .\n```", "```\nSending build context to Docker daemon 2.56kB\nStep 1/8 : FROM alpine:latest\n ---> 11cd0b38bc3c\nStep 2/8 : LABEL maintainer=\"Russ McKendrick <russ@mckendrick.io>\"\n ---> Using cache\n ---> 175e9ebf182b\nStep 3/8 : LABEL description=\"This example Dockerfile installs Apache & PHP.\"\n ---> Running in 095e42841956\nRemoving intermediate container 095e42841956\n ---> d504837e80a4\nStep 4/8 : ENV PHPVERSION=7\n ---> Running in 0df665a9b23e\nRemoving intermediate container 0df665a9b23e\n ---> 7f2c212a70fc\nStep 5/8 : RUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION} && rm -rf /var/cache/apk/* && mkdir /run/apache2/ && rm -rf /var/www/localhost/htdocs/index.html && echo \"<?php phpinfo(); ?>\" > /var/www/localhost/htdocs/index.php && chmod 755 /var/www/localhost/htdocs/index.php\n ---> Running in ea77c54e08bf\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/x86_64/APKINDEX.tar.gz\n(1/14) Installing libuuid (2.32-r0)\n(2/14) Installing apr (1.6.3-r1)\n(3/14) Installing expat (2.2.5-r0)\n(4/14) Installing apr-util (1.6.1-r2)\n(5/14) Installing pcre (8.42-r0)\n(6/14) Installing apache2 (2.4.33-r1)\nExecuting apache2-2.4.33-r1.pre-install\n(7/14) Installing php7-common (7.2.8-r1)\n(8/14) Installing ncurses-terminfo-base (6.1-r0)\n(9/14) Installing ncurses-terminfo (6.1-r0)\n(10/14) Installing ncurses-libs (6.1-r0)\n(11/14) Installing libedit (20170329.3.1-r3)\n(12/14) Installing libxml2 (2.9.8-r0)\n(13/14) Installing php7 (7.2.8-r1)\n(14/14) Installing php7-apache2 (7.2.8-r1)\nExecuting busybox-1.28.4-r0.trigger\nOK: 26 MiB in 27 packages\nRemoving intermediate container ea77c54e08bf\n ---> 49b49581f8e2\nStep 6/8 : EXPOSE 80/tcp\n ---> Running in e1cbc518ef07\nRemoving intermediate container e1cbc518ef07\n ---> a061e88eb39f\nStep 7/8 : ENTRYPOINT [\"httpd\"]\n ---> Running in 93ac42d6ce55\nRemoving intermediate container 93ac42d6ce55\n ---> 9e09239021c2\nStep 8/8 : CMD [\"-D\", \"FOREGROUND\"]\n ---> Running in 733229cc945a\nRemoving intermediate container 733229cc945a\n ---> 649b432e8d47\nSuccessfully built 649b432e8d47\nSuccessfully tagged local/apache-php:7 \n```", "```\n$ docker container run -d -p 8080:80 --name apache-php7 local/apache-php:7\n```", "```\n$ docker image build --tag local/apache-php:5 .\n```", "```\nSending build context to Docker daemon 2.56kB\nStep 1/8 : FROM alpine:latest\n ---> 11cd0b38bc3c\nStep 2/8 : LABEL maintainer=\"Russ McKendrick <russ@mckendrick.io>\"\n ---> Using cache\n ---> 175e9ebf182b\nStep 3/8 : LABEL description=\"This example Dockerfile installs Apache & PHP.\"\n ---> Using cache\n ---> d504837e80a4\nStep 4/8 : ENV PHPVERSION=5\n ---> Running in 0646b5e876f6\nRemoving intermediate container 0646b5e876f6\n ---> 3e17f6c10a50\nStep 5/8 : RUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION} && rm -rf /var/cache/apk/* && mkdir /run/apache2/ && rm -rf /var/www/localhost/htdocs/index.html && echo \"<?php phpinfo(); ?>\" > /var/www/localhost/htdocs/index.php && chmod 755 /var/www/localhost/htdocs/index.php\n ---> Running in d55a7726e9a7\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/x86_64/APKINDEX.tar.gz\n(1/10) Installing libuuid (2.32-r0)\n(2/10) Installing apr (1.6.3-r1)\n(3/10) Installing expat (2.2.5-r0)\n(4/10) Installing apr-util (1.6.1-r2)\n(5/10) Installing pcre (8.42-r0)\n(6/10) Installing apache2 (2.4.33-r1)\nExecuting apache2-2.4.33-r1.pre-install\n(7/10) Installing php5 (5.6.37-r0)\n(8/10) Installing php5-common (5.6.37-r0)\n(9/10) Installing libxml2 (2.9.8-r0)\n(10/10) Installing php5-apache2 (5.6.37-r0)\nExecuting busybox-1.28.4-r0.trigger\nOK: 32 MiB in 23 packages\nRemoving intermediate container d55a7726e9a7\n ---> 634ab90b168f\nStep 6/8 : EXPOSE 80/tcp\n ---> Running in a59f40d3d5df\nRemoving intermediate container a59f40d3d5df\n ---> d1aadf757f59\nStep 7/8 : ENTRYPOINT [\"httpd\"]\n ---> Running in c7a1ab69356d\nRemoving intermediate container c7a1ab69356d\n ---> 22a9eb0e6719\nStep 8/8 : CMD [\"-D\", \"FOREGROUND\"]\n ---> Running in 8ea92151ce22\nRemoving intermediate container 8ea92151ce22\n ---> da34eaff9541\nSuccessfully built da34eaff9541\nSuccessfully tagged local/apache-php:5\n```", "```\n$ docker container run -d -p 9090:80 --name apache-php5 local/apache-php:5\n```", "```\n$ docker image ls\n```", "```\nRUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION}\n```", "```\nRUN apk add --update apache2 php7-apache2 php7\n```", "```\nRUN apk add --update apache2 php5-apache2 php5\n```", "```\nFROM alpine:latest\nLABEL maintainer=\"Russ McKendrick <russ@mckendrick.io>\"\nLABEL description=\"An image with the latest version on Consul.\"\n\nENV CONSUL_VERSION=1.2.2 CONSUL_SHA256=7fa3b287b22b58283b8bd5479291161af2badbc945709eb5412840d91b912060\n\nRUN apk add --update ca-certificates wget && \\\n wget -O consul.zip https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip && \\\n echo \"$CONSUL_SHA256 *consul.zip\" | sha256sum -c - && \\\n unzip consul.zip && \\\n mv consul /bin/ && \\\n rm -rf consul.zip && \\\n rm -rf /tmp/* /var/cache/apk/*\n\nEXPOSE 8300 8301 8301/udp 8302 8302/udp 8400 8500 8600 8600/udp\n\nVOLUME [ \"/data\" ]\n\nENTRYPOINT [ \"/bin/consul\" ]\nCMD [ \"agent\", \"-data-dir\", \"/data\", \"-server\", \"-bootstrap-expect\", \"1\", \"-client=0.0.0.0\"]\n```", "```\nFROM golang:latest as builder\nWORKDIR /go-http-hello-world/\nRUN go get -d -v golang.org/x/net/html \nADD https://raw.githubusercontent.com/geetarista/go-http-hello-world/master/hello_world/hello_world.go ./hello_world.go\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\n\nFROM scratch \nCOPY --from=builder /go-http-hello-world/app .\nCMD [\"./app\"] \n```", "```\n$ docker image build --tag local:go-hello-world .\n```", "```\nSending build context to Docker daemon 9.216kB\nStep 1/8 : FROM golang:latest as builder\nlatest: Pulling from library/golang\n55cbf04beb70: Pull complete\n1607093a898c: Pull complete\n9a8ea045c926: Pull complete\nd4eee24d4dac: Pull complete\n9c35c9787a2f: Pull complete\n6a66653f6388: Pull complete\n102f6b19f797: Pull complete\nDigest: sha256:957f390aceead48668eb103ef162452c6dae25042ba9c41762f5210c5ad3aeea\nStatus: Downloaded newer image for golang:latest\n ---> d0e7a411e3da\nStep 2/8 : WORKDIR /go-http-hello-world/\n ---> Running in e1d56745f358\nRemoving intermediate container e1d56745f358\n ---> f18dfc0166a0\nStep 3/8 : RUN go get -d -v golang.org/x/net/html\n ---> Running in 5e97d81db53c\nFetching https://golang.org/x/net/html?go-get=1\nParsing meta tags from https://golang.org/x/net/html?go-get=1 (status code 200)\nget \"golang.org/x/net/html\": found meta tag get.metaImport{Prefix:\"golang.org/x/net\", VCS:\"git\", RepoRoot:\"https://go.googlesource.com/net\"} at https://golang.org/x/net/html?go-get=1\nget \"golang.org/x/net/html\": verifying non-authoritative meta tag\nFetching https://golang.org/x/net?go-get=1\nParsing meta tags from https://golang.org/x/net?go-get=1 (status code 200)\ngolang.org/x/net (download)\nRemoving intermediate container 5e97d81db53c\n ---> f94822756a52\nStep 4/8 : ADD https://raw.githubusercontent.com/geetarista/go-http-hello-world/master/hello_world/hello_world.go ./hello_world.go\nDownloading 393B\n ---> ecf3944740e1\nStep 5/8 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\n ---> Running in 6e2d39c4d8ba\nRemoving intermediate container 6e2d39c4d8ba\n ---> 247fcbfb7a4d\nStep 6/8 : FROM scratch\n --->\nStep 7/8 : COPY --from=builder /go-http-hello-world/app .\n ---> a69cf59ab1d3\nStep 8/8 : CMD [\"./app\"]\n ---> Running in c99076fad7fb\nRemoving intermediate container c99076fad7fb\n ---> 67296001bdc0\nSuccessfully built 67296001bdc0\nSuccessfully tagged local:go-hello-world\n```", "```\n$ docker image ls\n```", "```\n$ docker container run -d -p 8000:80 --name go-hello-world local:go-hello-world\n```", "```\n$ curl http://localhost:8000/\n```", "```\n$ docker container stop go-hello-world\n$ docker container rm go-hello-world\n```"]