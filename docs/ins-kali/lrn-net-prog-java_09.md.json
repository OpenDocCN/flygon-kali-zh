["```java\n        int number = 0x01234567;\n```", "```java\n        System.out.println(ByteOrder.nativeOrder());\n```", "```java\n        ByteBuffer buffer = ByteBuffer.allocate(4096);\n        System.out.println(buffer.order());\n        buffer.order(ByteOrder.LITTLE_ENDIAN);\n        System.out.println(buffer.order());\n```", "```java\n        buffer.order(ByteOrder.LITTLE_ENDIAN);\n        ByteBuffer slice = buffer.slice();\n        System.out.println(buffer.order());\n```", "```java\n    try {\n        ScriptEngine engine = \n            new ScriptEngineManager().getEngineByName(\"nashorn\");\n        engine.eval(\"print('Executing JavaScript code');\");\n    } catch (ScriptException ex) {\n        // Handle exceptions\n    }\n```", "```java\npublic class JavaSocket {\n\n    public static void main(String[] args) {\n        System.out.println(\"Server Started\");\n        try (ServerSocket serverSocket = new ServerSocket(5000)) {\n            Socket socket = serverSocket.accept();\n            System.out.println(\"Client connection completed\");\n            ...\n            socket.close();\n        } catch (IOException ex) {\n            // Handle exceptions\n        }\n        System.out.println(\"Server Terminated\");\n    }\n}\n```", "```java\n            Scanner scanner = \n                new Scanner(socket.getInputStream());\n            PrintWriter pw = new PrintWriter(\n                socket.getOutputStream(), true);\n```", "```java\n            String message = scanner.nextLine();\n            System.out.println(\"Server received: \" + message);\n            pw.println(message);\n            System.out.println(\"Server sent: \" + message);\n```", "```java\nusing System;\nusing System.Net;\nusing System.Net.Sockets;\n\nnamespace CSharpSocket\n{\n    class CSharpClient\n    {\n        public static void Main(string[] args)\n        {\n            Console.WriteLine(\"Client Started\");\n            ...\n        }\n    }\n}\n```", "```java\n            IPEndPoint serverAddress = \n               new IPEndPoint(IPAddress.Parse(\"127.0.0.1\"), 5000);\n            Socket clientSocket = \n                new Socket(AddressFamily.InterNetwork, \n                    SocketType.Stream, ProtocolType.Tcp);\n            clientSocket.Connect(serverAddress);\n```", "```java\n            Console.Write(\"Enter message: \");\n            String message = Console.ReadLine();\n```", "```java\n            byte[] messageBuffer;\n            messageBuffer = System.Text.Encoding.ASCII.GetBytes(\n               message + \"\\n\");\n            clientSocket.Send(messageBuffer);\n```", "```java\n            byte[] receiveBuffer = new byte[32];\n            clientSocket.Receive(receiveBuffer);\n```", "```java\n            String recievedMessage = \n               System.Text.Encoding.ASCII.GetString(\n                   receiveBuffer);\n            Console.WriteLine(\"Client received: [\" + \n               recievedMessage + \"]\");\n```", "```java\n            clientSocket.Close();\n            Console.WriteLine(\"Client Terminated\");\n```", "```java\n    @GET\n    @Produces(\"text/html\")\n    public String getHtml() {\n        return \n            \"<html><body><h1>Hello, World!!</body></h1></html>\";\n    }\n```", "```java\n    public String getHtml() throws ClientErrorException {\n        WebTarget resource = webTarget;\n        return resource.\n            request(javax.ws.rs.core.MediaType.TEXT_HTML).\n            get(String.class);\n    }\n```", "```java\n    public static void main(String[] args) {\n        RestfulClient restfulClient = new RestfulClient();\n        System.out.println(restfulClient.getHtml());\n    }\n```"]