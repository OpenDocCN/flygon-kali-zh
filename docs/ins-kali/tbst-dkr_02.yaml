- en: Chapter 2. Docker Installation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。Docker安装
- en: Docker installation is pretty smooth in most of the operating systems, and there
    are very few chances of things going wrong. Docker Engine installation is supported
    mostly on all the Linux, Cloud, Windows, and Mac OS X environments. If the Linux
    version is not supported, then Docker Engine can be installed using binaries.
    Docker binary installation is mostly oriented for hackers who want to try out
    Docker on a variety of OS. It usually involves checking runtime dependencies,
    kernel dependencies, and using Docker platform-specific binaries in order to move
    ahead with installation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数操作系统中Docker安装非常顺利，很少出错的机会。Docker引擎安装在大多数Linux、云、Windows和Mac OS X环境中都得到支持。如果Linux版本不受支持，那么可以使用二进制文件安装Docker引擎。Docker二进制安装主要面向那些想在各种操作系统上尝试Docker的黑客。通常涉及检查运行时依赖关系、内核依赖关系，并使用Docker特定于平台的二进制文件以便继续安装。
- en: 'Docker Toolbox is an installer, which can be used to quickly install and set
    up a Docker environment on your Windows or Mac machine. Docker toolbox also installs:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Toolbox是一个安装程序，可以快速在Windows或Mac机器上安装和设置Docker环境。Docker工具箱还安装了：
- en: '**Docker client**: It executes commands, such as build and run, and ship containers
    by communicating with the Docker daemon'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker客户端**：它通过与Docker守护程序通信执行命令，如构建和运行，并发送容器'
- en: '**Docker Machine**: It is a tool used to install Docker Engine on virtual hosts
    and manages them with the help of Docker Machine commands'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker Machine**：它是一个用于在虚拟主机上安装Docker引擎并使用Docker Machine命令管理它们的工具'
- en: '**Docker Compose**: It is a tool used to define and run multicontainer Docker
    applications'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker Compose**：它是一个用于定义和运行多容器Docker应用程序的工具'
- en: '**Kitematic**: The Docker GUI that runs on Mac OS X and Windows operating system'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kitematic**：在Mac OS X和Windows操作系统上运行的Docker GUI'
- en: The installation for Docker with toolbox as well as on various supported OSes
    is quite straightforward, but nevertheless we have listed potential pitfalls and
    troubleshooting steps involved.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用工具箱安装Docker以及在各种支持的操作系统上的安装都非常简单，但我们列出了可能的陷阱和涉及的故障排除步骤。
- en: 'In this chapter, we explore how to install Docker on various Linux distributions,
    such as the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何在各种Linux发行版上安装Docker，例如以下内容：
- en: Ubuntu
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu
- en: Red Hat Linux
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红帽Linux
- en: CentOS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS
- en: CoreOS
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CoreOS
- en: Fedora
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora
- en: SUSE Linux
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SUSE Linux
- en: All of the above OSes can be deployed on the bare-metal machines, but we have
    used AWS to deploy in some of the cases, as it's an ideal situation for a production
    environment. Also, it'll be faster to get the environment up and running in AWS.
    We have explained the steps for the same in the respective sections in this chapter,
    which will help you to troubleshoot and speed up the deployment on AWS.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 上述所有操作系统都可以部署在裸机上，但在某些情况下我们使用了AWS进行部署，因为这是一个理想的生产环境。此外，在AWS上快速启动环境也更快。我们在本章的各个部分中解释了相同的步骤，这将帮助您解决问题并加快在AWS上的部署速度。
- en: Installing Docker on Ubuntu
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Ubuntu上安装Docker
- en: 'Let''s get started with installing Docker on Ubuntu 14.04 LTS 64-bit. We can
    use AWS AMI in order to create our setup. The image can be launched on AMI directly
    with the help of following link:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始在Ubuntu 14.04 LTS 64位上安装Docker。我们可以使用AWS AMI来创建我们的设置。可以通过以下链接直接在AMI上启动镜像：
- en: '[http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5](http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5](http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5)'
- en: 'The following diagram illustrates the installation steps required to install
    Docker on Ubuntu 14.04 LTS:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表说明了在Ubuntu 14.04 LTS上安装Docker所需的安装步骤：
- en: '![Installing Docker on Ubuntu](graphics/image_02_001.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: 在Ubuntu上安装Docker
- en: Prerequisites
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件
- en: Docker requires a 64-bit installation, regardless of the Ubuntu version. The
    kernel must be 3.10 at minimum.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Docker需要64位安装，无论Ubuntu版本如何。内核必须至少为3.10。
- en: 'Let''s check our kernel version, using the following command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下命令检查我们的内核版本：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output is a kernel version of 3.13.x, which is fine:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是3.13.x的内核版本，这很好：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Updating package information
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新软件包信息
- en: 'Perform the following steps to update the APT repository and have necessary
    certificates installed:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来更新APT存储库并安装必要的证书：
- en: 'Docker''s APT repository contains Docker 1.7.x or higher. To set APT to use
    packages from the new repository:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker的APT存储库包含Docker 1.7.x或更高版本。要设置APT以使用新存储库中的软件包：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Run the following command to ensure that APT works with the HTTPS method and
    CA certificates are installed:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以确保APT使用HTTPS方法并安装CA证书：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `apt-transport-https` package enables us to use `deb https://foo distro
    main` lines in the `/etc/apt/sources.list` so that package managers, which use
    the `libapt-pkg` library, can access metadata and packages available in sources
    accessible over HTTPS.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`apt-transport-https`软件包使我们能够在`/etc/apt/sources.list`中使用`deb https://foo distro
    main`行，以便使用`libapt-pkg`库的软件包管理器可以访问通过HTTPS可访问的源中的元数据和软件包。'
- en: The `ca-certificates` are container's PEM files of CA certificates, which allow
    SSL-based applications to check for the authenticity of SSL connections.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`ca-certificates`是容器的CA证书的PEM文件，允许基于SSL的应用程序检查SSL连接的真实性。'
- en: Adding a new GPG key
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加新的GPG密钥
- en: '**GNU Privacy Guard** (known as **GPG** or **GnuPG)** is a free encryption
    software that''s compliant with the OpenPGP (RFC4880) standard:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**GNU隐私保护**（称为**GPG**或**GnuPG)**是一款符合OpenPGP（RFC4880）标准的免费加密软件：'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output will be similar to the following listing:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下清单：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Troubleshooting
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除
- en: 'If you find the `sks-keyservers` to be unavailable, you can try the following
    command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现`sks-keyservers`不可用，可以尝试以下命令：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Adding a new package source for Docker
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Docker添加新的软件包源
- en: 'The Docker repository can be added in the following way to the APT repository:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下方式将Docker存储库添加到APT存储库中：
- en: Update `/etc/apt/sources.list.d` with a new source as Docker repository.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新的源更新`/etc/apt/sources.list.d`作为Docker存储库。
- en: 'Open the `/etc/apt/sources.list.d/docker.list` file and update it with the
    following entry:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`/etc/apt/sources.list.d/docker.list`文件，并使用以下条目进行更新：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Updating Ubuntu packages
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新Ubuntu软件包
- en: 'The Ubuntu packages after adding Docker repository can be updated, as shown here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加Docker存储库后，可以更新Ubuntu软件包，如下所示：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Install linux-image-extra
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装linux-image-extra
- en: 'For Ubuntu Trusty, it''s recommended to install the `linux-image-extra` kernel
    package; the `linux-image-extra` package allows the AUFS storage driver to be
    used:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu Trusty，建议安装`linux-image-extra`内核包；`linux-image-extra`包允许使用AUFS存储驱动程序：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output will be similar to the following listing:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下清单：
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Optional - installing AppArmor
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可选 - 安装AppArmor
- en: 'If it is not already installed, install AppArmor using the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未安装，使用以下命令安装AppArmor：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output will be similar to the following listing:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下清单：
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Docker installation
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Docker安装
- en: 'Let''s get started with installing Docker Engine on Ubuntu using the official
    APT package:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用官方APT软件包在Ubuntu上安装Docker Engine：
- en: 'Update APT package index:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新APT软件包索引：
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Install Docker Engine:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Docker Engine：
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Start the Docker daemon:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Docker守护程序：
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Verify that Docker is installed correctly:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证Docker是否正确安装：
- en: '[PRE16]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This is how the output would look like:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE17]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Installing Docker on Red Hat Linux
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Red Hat Linux上安装Docker
- en: Docker is supported on Red Hat Enterprise Linux 7.x. This section provides an
    overview of installation of Docker using Docker-managed release packages and installation
    mechanisms. Using these packages ensures that you will be able get the latest
    release of Docker.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Docker在Red Hat Enterprise Linux 7.x上受支持。本节概述了使用Docker管理的发行包和安装机制安装Docker。使用这些软件包可以确保您能够获得最新版本的Docker。
- en: '![Installing Docker on Red Hat Linux](graphics/image_02_002.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![在Red Hat Linux上安装Docker](graphics/image_02_002.jpg)'
- en: Checking kernel version
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查内核版本
- en: 'The Linux kernel version can be checked with the help of the following command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令检查Linux内核版本：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output, in our case, is kernel version 3.10.x, which will work fine:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，输出是内核版本3.10.x，这将很好地工作：
- en: '[PRE19]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Updating the YUM packages
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新YUM软件包
- en: 'The YUM repository can be updated, using the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令更新YUM存储库：
- en: '[PRE20]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Output listing is given; ensure that it shows `Complete!` at the end, as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 给出输出列表；确保最后显示`Complete!`，如下所示：
- en: '[PRE21]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Adding the YUM repository
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加YUM存储库
- en: 'Let''s add the Docker repository to the YUM repository list:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将Docker存储库添加到YUM存储库列表中：
- en: '[PRE22]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Installing the Docker package
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Docker软件包
- en: 'The Docker Engine can be installed using YUM repository, as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Docker引擎可以使用YUM存储库进行安装，如下所示：
- en: '[PRE23]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Starting the Docker service
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动Docker服务
- en: 'The Docker service can be started with help of the following command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令启动Docker服务：
- en: '[PRE24]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Testing the Docker installation
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试Docker安装
- en: 'Listing all the processes in the Docker Engine with help of the following command
    can validate whether the installation of the Docker service is successful or not:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令列出Docker引擎中的所有进程可以验证Docker服务的安装是否成功：
- en: '[PRE25]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The following is the output for the preceding command:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令的输出：
- en: '[PRE26]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Check the Docker version to make sure that it is the latest:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 检查Docker版本以确保它是最新的：
- en: '[PRE27]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Checking the installation parameters
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查安装参数
- en: 'Let''s run Docker information to see the default installation parameters:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行Docker信息以查看默认安装参数：
- en: '[PRE28]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output listing is given here; note that the `Storage Driver` is `devicemapper`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 输出列表如下；请注意`存储驱动程序`为`devicemapper`：
- en: '[PRE29]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Troubleshooting tips
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除提示
- en: Ensure that you are using the latest version of Red Hat Linux to be able to
    deploy Docker 1.11\. Another important thing to remember is that the kernel version
    has to be 3.10 or higher. Rest of the installation was pretty uneventful.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您使用最新版本的Red Hat Linux以便部署Docker 1.11。另一个重要的事情要记住是内核版本必须是3.10或更高。其余的安装过程都很顺利。
- en: Deploy CentOS VM on AWS to run Docker containers
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署CentOS VM在AWS上运行Docker容器
- en: We are using AWS as an environment to showcase Docker installation from a convenience
    perspective. If an OS needs to be tested for support of its Docker version, AWS
    is the easiest and quickest way to deploy and test it.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用AWS作为环境来展示Docker安装的便利性。如果需要测试操作系统是否支持其Docker版本，AWS是部署和测试的最简单和最快速的方式。
- en: If you are not using AWS as an environment, feel free to skip the steps involving
    spinning a VM on AWS.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不是在AWS环境中使用，请随意跳过涉及在AWS上启动VM的步骤。
- en: 'In this section, we''ll take a look at deploying CentOS VM on AWS to get the
    environment up and running fast and deploy Docker containers. CentOS is similar
    to Red Hat''s distribution and uses the same packaging tools like YUM. We will
    use CentOS 7.x, on which Docker is officially supported:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看在AWS上部署CentOS VM以快速启动环境并部署Docker容器。CentOS类似于Red Hat的发行版，并使用与YUM相同的打包工具。我们将使用官方支持Docker的CentOS
    7.x：
- en: 'First, let''s launch a CentOS-based VM on AWS:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们在AWS上启动基于CentOS的VM：
- en: '![Deploy CentOS VM on AWS to run Docker containers](graphics/image_02_003.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上部署CentOS VM来运行Docker容器](graphics/image_02_003.jpg)'
- en: 'We are launching with a **1-Click Launch** and pre-existing keypair. SSH is
    enabled by default:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用**一键启动**和预先存在的密钥对进行启动。SSH默认启用：
- en: '![Deploy CentOS VM on AWS to run Docker containers](graphics/image_02_004.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上部署CentOS VM来运行Docker容器](graphics/image_02_004.jpg)'
- en: Once the instance is up, get the public IP address from the AWS EC2 console.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦实例启动，从AWS EC2控制台获取公共IP地址。
- en: 'SSH into the instance and follow the following steps for installation:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: SSH进入实例并按照以下步骤进行安装：
- en: '[PRE30]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Deploy CentOS VM on AWS to run Docker containers](graphics/image_02_005.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上部署CentOS VM来运行Docker容器](graphics/image_02_005.jpg)'
- en: Checking kernel version
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查内核版本
- en: 'The kernel version of the Linux OS can be checked with the following command:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令检查Linux操作系统的内核版本：
- en: '[PRE31]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The output, in our case, is kernel version 3.10.x, which will work fine:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，输出是内核版本3.10.x，这将很好地工作：
- en: '[PRE32]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note how similar it is to the Red Hat kernel version 3.10.0-327.el7.x86_64.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 注意它与Red Hat内核版本3.10.0-327.el7.x86_64有多相似。
- en: Updating the YUM packages
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新YUM包
- en: 'The YUM packages and repository can be updated, as shown here:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: YUM包和存储库可以更新，如下所示：
- en: '[PRE33]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Adding the YUM repository
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加YUM存储库
- en: 'Let''s add the Docker repository to the YUM repository:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将Docker存储库添加到YUM存储库中：
- en: '[PRE34]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Installing the Docker package
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Docker包
- en: 'The following command can be used to install Docker Engine using the YUM repository:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令可用于使用YUM存储库安装Docker Engine：
- en: '[PRE35]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Starting the Docker service
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动Docker服务
- en: 'The Docker service can be started in the following way:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Docker服务可以通过以下方式启动：
- en: '[PRE36]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Testing the Docker installation
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试Docker安装
- en: '[PRE37]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Output:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE38]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Check the Docker version to make sure it is the latest:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 检查Docker版本以确保它是最新的：
- en: '[PRE39]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Checking the installation parameters
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查安装参数
- en: 'Let''s run Docker information to see the default installation parameters:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行Docker信息来查看默认安装参数：
- en: '[PRE40]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The output is listed here; note that the `Storage Driver` is `devicemapper`:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下；请注意`Storage Driver`是`devicemapper`：
- en: '[PRE41]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Installing Docker on CoreOS
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CoreOS上安装Docker
- en: CoreOS is a lightweight OS built for the cloud. It comes prepackaged with Docker,
    which is a few releases behind the latest version. Since it comes prebuilt with
    Docker there is little troubleshooting required. We just need to make sure that
    the right version of CoreOS is picked.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: CoreOS是为云构建的轻量级操作系统。它预先打包了Docker，但版本比最新版本落后一些。由于它预先构建了Docker，因此几乎不需要故障排除。我们只需要确保选择了正确的CoreOS版本。
- en: CoreOS runs on a variety of platforms, including Vagrant, Amazon EC2, QEMU/KVM,
    VMware and OpenStack, and custom hardware. CoreOS uses fleet to manage clusters
    of containers along with etcd (key value data store).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: CoreOS可以在各种平台上运行，包括Vagrant、Amazon EC2、QEMU/KVM、VMware和OpenStack，以及自定义硬件。CoreOS使用fleet来管理容器集群以及etcd（键值数据存储）。
- en: Installation channels of CoreOS
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CoreOS的安装通道
- en: 'In our case, we will use stable  **Release Channels**:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，我们将使用稳定的**发布通道**：
- en: '![Installation channels of CoreOS](graphics/image_02_006.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![CoreOS的安装通道](graphics/image_02_006.jpg)'
- en: 'First, we will install CoreOS on AWS using the CloudFormation templates. You
    can find this template at the following link:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用CloudFormation模板在AWS上安装CoreOS。您可以在以下链接找到此模板：
- en: '[https://s3.amazonaws.com/coreos.com/dist/aws/coreos-stable-pv.template](https://s3.amazonaws.com/coreos.com/dist/aws/coreos-stable-pv.template)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://s3.amazonaws.com/coreos.com/dist/aws/coreos-stable-pv.template](https://s3.amazonaws.com/coreos.com/dist/aws/coreos-stable-pv.template)'
- en: 'This template provides the following parameters:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 此模板提供以下参数：
- en: Instance type
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例类型
- en: Cluster size
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群大小
- en: Discovery URL
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现URL
- en: Advertised IP address
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广告IP地址
- en: Allow SSH From
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许SSH来自
- en: Keypair
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥对
- en: 'These mentioned parameters can be set in the default template, as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数可以在默认模板中设置如下：
- en: '[PRE42]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The following steps will provide the complete walk-through for CoreOS installation
    on AWS with help of screenshots:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将提供在AWS上使用截图进行CoreOS安装的完整步骤：
- en: Select the S3 template to launch:![Installation channels of CoreOS](graphics/image_02_007.jpg)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择S3模板进行启动：![CoreOS的安装通道](graphics/image_02_007.jpg)
- en: Specify the **Stack name**, **KeyPair**, and cluster 3:![Installation channels
    of CoreOS](graphics/image_02_008.jpg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定**堆栈名称**，**密钥对**和集群3：![CoreOS的安装通道](graphics/image_02_008.jpg)
- en: Troubleshooting
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除
- en: 'Here are some troubleshooting tips and guidelines, which should be followed
    during the preceding installation:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在之前安装过程中应遵循的一些故障排除提示和指南：
- en: '**Stack name** should not be duplicate'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**堆栈名称**不应重复'
- en: '**ClusterSize** cannot be lower than 3 and should be a maximum of 12'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ClusterSize**不能低于3，最大为12'
- en: '**InstanceType** recommended is `m3.medium`'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议的**InstanceType**是`m3.medium`
- en: '**KeyPair** should exist; if it doesn''t, the cluster will not launch'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密钥对**应存在；如果不存在，集群将无法启动'
- en: 'SSH into the instance and check the Docker version:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: SSH进入实例并检查Docker版本：
- en: '[PRE43]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Installing Docker on Fedora
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Fedora上安装Docker
- en: Docker is supported on Fedora version 22 and 23\. The following are the steps
    to be performed in order to install Docker on Fedora 23\. It can be deployed on
    bare-metal or as a VM.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Docker支持Fedora 22和23版本。以下是在Fedora 23上安装Docker的步骤。它可以部署在裸机上或作为虚拟机。
- en: Checking Linux kernel Version
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查Linux内核版本
- en: 'Docker requires 64-bit installation, regardless of the Fedora version. Also,
    the kernel version should be at least 3.10\. Check the kernel version before going
    ahead with installation using the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Docker需要64位安装，无论Fedora版本如何。此外，内核版本应至少为3.10。使用以下命令在安装之前检查内核版本：
- en: '[PRE44]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Installing with DNF
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用DNF安装
- en: 'Update the existing DNF package by using the following command:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令更新现有的DNF软件包：
- en: '[PRE45]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Adding to the YUM repository
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加到YUM存储库
- en: 'Let''s add the Docker repository to the YUM repository:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将Docker存储库添加到YUM存储库中：
- en: '[PRE46]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Installing the Docker package
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Docker软件包
- en: 'The Docker Engine can be installed using the DNF package:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用DNF软件包安装Docker引擎：
- en: '[PRE47]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The output will be similar to the following listing (this listing is truncated):'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下列表（此列表已被截断）：
- en: '[PRE48]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Start the Docker service using `systemctl`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`systemctl`启动Docker服务：
- en: '[PRE49]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Verify with a Docker hello-world example in order to check whether Docker is
    installed successfully:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Docker的hello-world示例来验证Docker是否成功安装：
- en: '[PRE50]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The output will be similar to the following listing:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下列表：
- en: '[PRE51]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'To generate this message, Docker took the following steps:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成这条消息，Docker采取了以下步骤：
- en: The Docker client contacted the Docker daemon.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker客户端联系了Docker守护程序。
- en: The Docker daemon pulled the `hello-world` image from the Docker Hub.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker守护程序从Docker Hub拉取了`hello-world`镜像。
- en: The Docker daemon created a new container from that image, which runs the executable
    that produces the output you are currently reading.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker守护程序从该镜像创建了一个新的容器，该容器运行生成您当前正在阅读的输出的可执行文件。
- en: The Docker daemon streamed that output to the Docker client, which sent it to
    your terminal.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker守护程序将输出流式传输到Docker客户端，然后发送到您的终端。
- en: 'To try something more ambitious, you can run an Ubuntu container with the following
    command:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试更雄心勃勃的事情，您可以使用以下命令运行Ubuntu容器：
- en: '[PRE52]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Share images, automate workflows, and more with a free Docker Hub account, [https://hub.docker.com](https://hub.docker.com).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 通过免费的Docker Hub帐户[https://hub.docker.com](https://hub.docker.com)共享图像，自动化工作流程等。
- en: For more examples and ideas, visit [https://docs.docker.com/userguide/md64-server-20160114.5
    (ami-a21529cc)](https://docs.docker.com/engine/userguide/).
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多示例和想法，请访问[https://docs.docker.com/userguide/md64-server-20160114.5 (ami-a21529cc)](https://docs.docker.com/engine/userguide/)。
- en: Installing Docker with script
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用脚本安装Docker
- en: 'Update your DNF package, as follows:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 更新您的DNF包，如下所示：
- en: '[PRE53]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Running the Docker installation script
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行Docker安装脚本
- en: 'The Docker installation can also be done in a quick and easy way by executing
    the shell script and getting it from the official Docker website:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Docker安装也可以通过执行shell脚本并从官方Docker网站获取来快速简便地完成：
- en: '[PRE54]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Start the Docker daemon:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Docker守护程序：
- en: '[PRE55]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Docker run `hello-world`:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: Docker运行`hello-world`：
- en: '[PRE56]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'To create a Docker group and add a user, follow the steps mentioned, as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建Docker组并添加用户，请按照以下步骤进行操作：
- en: '[PRE57]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Log out and log in with the user to make sure that your user is created successfully:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 注销并使用用户登录以确保您的用户已成功创建：
- en: '[PRE58]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'In order to uninstall Docker, follow these steps:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要卸载Docker，请按照以下步骤进行操作：
- en: '[PRE59]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The truncated output of the preceding command is listed as follows:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的截断输出如下所示：
- en: '[PRE60]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Installing Docker on SUSE Linux
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在SUSE Linux上安装Docker
- en: In this section, we will install Docker on SUSE Linux Enterprise Server 12 SP1
    x86_64 (64-bit). We will also look at some of the problems we came across during
    the installation process.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在SUSE Linux Enterprise Server 12 SP1 x86_64（64位）上安装Docker。我们还将看一下在安装过程中遇到的一些问题。
- en: Launching the SUSE Linux VM on AWS
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在AWS上启动SUSE Linux VM
- en: 'Choose the appropriate AMI and launch the instance from the EC2 console:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 选择适当的AMI并从EC2控制台启动实例：
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_009.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上启动SUSE Linux VM](graphics/image_02_009.jpg)'
- en: 'The following parameters are shown in the next step; review and then launch
    them:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步显示了以下参数；请查看然后启动它们：
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_010.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上启动SUSE Linux VM](graphics/image_02_010.jpg)'
- en: 'We chose an existing keypair to SSH into the instance:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了一个现有的密钥对以SSH进入实例：
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_011.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上启动SUSE Linux VM](graphics/image_02_011.jpg)'
- en: 'Once the VM is up, log in to the VM from a terminal:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: VM启动后，请从终端登录到VM：
- en: '[PRE61]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The truncated output is listed here:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 截断的输出如下所示：
- en: '[PRE62]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Since we have launched the VM, let''s focus on getting docker installed. The
    following diagram outlines the steps for installing docker on SUSE Linux:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经启动了VM，让我们专注于安装docker。以下图表概述了在SUSE Linux上安装docker的步骤：
- en: '![Launching the SUSE Linux VM on AWS](graphics/image_02_012.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![在AWS上启动SUSE Linux VM](graphics/image_02_012.jpg)'
- en: Checking Linux kernel version
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查Linux内核版本
- en: 'Kernel version should be at least 3.10\. Check the kernel version before going
    ahead with its installation, using the following command:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 内核版本应至少为3.10。在继续安装之前，请使用以下命令检查内核版本：
- en: '[PRE63]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Adding Containers-Module
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加Containers-Module
- en: 'The following Containers-Module needs to be updated in the local packages before
    docker can be installed. You can find more details about the Containers-Module
    at the following link:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装docker之前，需要更新本地软件包中的以下Containers-Module。您可以在以下链接找到有关Containers-Module的更多详细信息：
- en: '[https://www.suse.com/support/update/announcement/2015/suse-ru-20151158-1.html](https://www.suse.com/support/update/announcement/2015/suse-ru-20151158-1.html)'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.suse.com/support/update/announcement/2015/suse-ru-20151158-1.html](https://www.suse.com/support/update/announcement/2015/suse-ru-20151158-1.html)'
- en: 'Execute the following command:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE64]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The output will be similar to this:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于此：
- en: '[PRE65]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Installing Docker
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Docker
- en: 'Execute the following command:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE66]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The truncated output is listed here:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 截断的输出如下所示：
- en: '[PRE67]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Starting Docker service
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动Docker服务
- en: 'The Docker service can be started, as shown here:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Docker服务可以启动，如下所示：
- en: '[PRE68]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Checking the Docker installation
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查Docker安装
- en: 'Execute Docker run, as follows, to test the installation:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 执行Docker运行，如下所示，以测试安装：
- en: '[PRE69]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'The output will be similar to this:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于这样：
- en: '[PRE70]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Troubleshooting
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除
- en: Please note, the Docker installation on SUSE Linux 11 is not a smooth experience,
    as SUSE Connect is not available.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，SUSE Linux 11上的Docker安装并不是一次顺利的体验，因为SUSE Connect不可用。
- en: Summary
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we went over steps on how to install Docker on various Linux
    distributions-Ubuntu, CoreOS, CentOS, Red Hat Linux , Fedora, and SUSE Linux.
    We noticed similarities in the steps and common prerequisites across Linux, while
    the actual remote repository from where the Docker module needs to be downloaded
    and the package management for the Docker modules, various for each Linux operating
    system. In the next chapter, we'll explore the mission-critical task of image
    building, understanding base and layered images, and exploring the troubleshooting
    aspect of it.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了如何在各种Linux发行版（Ubuntu，CoreOS，CentOS，Red Hat Linux，Fedora和SUSE Linux）上安装Docker的步骤。我们注意到在Linux上的步骤和常见先决条件的相似之处，而Docker模块需要从远程存储库下载和Docker模块的软件包管理在每个Linux操作系统上都有所不同。在下一章中，我们将探讨构建镜像的使命关键任务，了解基本和分层镜像，并探索故障排除方面。
