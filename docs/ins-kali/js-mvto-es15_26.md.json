["```js\nvar UserManager = (function () {\n  function UserManager(database, userEmailer) {\n    this.database = database;\n    this.userEmailer = userEmailer;\n  }\n  return UserManager;\n})();\n```", "```js\nUserManager.toString()\n```", "```js\n@Inject(CoffeeMaker, Skillet, Stove, Fridge, Dishwasher)\nexport class Kitchen {\n  constructor(coffeeMaker, skillet, stove, fridge, dishwasher) {\n    this.coffeeMaker = coffeeMaker;\n    this.skillet = skillet;\n    this.stove = stove;\n    this.fridge = fridge;\n    this.dishwasher = dishwasher;\n  }\n}\n```", "```js\n@Provide(CoffeeMaker)\n@Inject(Filter, Container)\nexport class BodumCoffeeMaker{\n  constructor(filter, container){\n  \u2026\n  }\n}\n```", "```js\nclass Axe{\n  constructor(public handleLength, public headHeight){}\n}\n```", "```js\nvar Axe = (function () {\n  function Axe(handleLength, headHeight) {\n    this.handleLength = handleLength;\n    this.headHeight = headHeight;\n  }\n  return Axe;\n})();\n```", "```js\nclass Axe{\n  constructor(handleLength, /*public*/ headHeight){}\n}\n```", "```js\nfunction publicParameters(func){\n  var stringRepresentation = func.toString();\n  var parameterString = stringRepresentation.match(/^function .*\\((.*)\\)/)[1];\n  var parameters = parameterString.split(\",\");\n  var setterString = \"\";\n  for(var i = 0; i < parameters.length; i++){\n    if(parameters[i].indexOf(\"public\") >= 0){\n      var parameterName = parameters[i].split('/')[parameters[i].split('/').length-1].trim();\n      setterString += \"this.\" +  parameterName + \" = \" + parameterName + \";\\n\";\n    }\n  }\n  var functionParts = stringRepresentation.match(/(^.*{)([\\s\\S]*)/);\n  return functionParts[1] + setterString + functionParts[2];\n}\n\nconsole.log(publicParameters(Axe));\n```", "```js\nvar GoldTransfer = (function () {\n  function GoldTransfer() {\n  }\n  GoldTransfer.prototype.SendPaymentOfGold = function (amountOfGold, destination) {\n    var user = Security.GetCurrentUser();\n    if (Security.IsAuthorized(user, \"SendPaymentOfGold\")) {\n      //send actual payment\n    } else {\n      return { success: 0, message: \"Unauthorized\" };\n    }\n  };\n  return GoldTransfer;\n})();\n```", "```js\nclass GoldTransfer {\n  SendPaymentOfGold(amountOfGold, destination) {\n    var user = Security.GetCurrentUser();\n    if (Security.IsAuthorized(user, \"SendPaymentOfGold\")) {\n    }\n    else {\n     return { success: 0, message: \"Unauthorized\" };\n    }\n  }\n}\n```", "```js\nclass ToWeaveIn {\n   BeforeCall() {\n    console.log(\"Before!\");\n  }\n  AfterCall() {\n    console.log(\"After!\");\n  }\n}\n```", "```js\nfunction weave(toWeave, toWeaveIn, toWeaveInName) {\n  for (var property in toWeave.prototype) {\n    var stringRepresentation = toWeave.prototype[property].toString();\n    console.log(stringRepresentation);\n    if (stringRepresentation.indexOf(\"@aspect(\" + toWeaveInName + \")\")>= 0) {\n      toWeave.prototype[property + \"_wrapped\"] = toWeave.prototype[property];\n      toWeave.prototype[property] = function () {\n      toWeaveIn.BeforeCall();\n      toWeave.prototype[property + \"_wrapped\"]();\n      toWeaveIn.AfterCall();\n    };\n    }\n  }\n}\n```", "```js\nvar _ = require(\"underscore\");\nexport class Person{\n}\nexport class ReanimatedPerson{\n}\nexport class RideHorseMixin{\n  public Ride(){\n    console.log(\"I'm on a horse!\");\n  }\n}\n\nvar person = new Person();\nvar reanimatedPerson = new ReanimatedPerson();\n_.extend(person, new RideHorseMixin());\n_.extend(reanimatedPerson, new RideHorseMixin());\n\nperson.Ride();\nreanimatedPerson.Ride();\n```", "```js\nlet var = macro {\n  rule { [$var (,) ...] = $obj:expr } => {\n    var i = 0;\n    var arr = $obj;\n    $(var $var = arr[i++]) (;) ...\n  }\n\n  rule { $id } => {\n    var $id\n  }\n}\n```", "```js\nvar [foo, bar, baz] = arr;\n```", "```js\nvar i = 0;\nvar arr$2 = arr;\nvar foo = arr$2[i++];\nvar bar = arr$2[i++];\nvar baz = arr$2[i++];\n```"]