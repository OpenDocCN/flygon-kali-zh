- en: Chapter 2. Connecting Things to the Raspberry Pi Zero
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。将东西连接到树莓派Zero
- en: You need to learn how to connect things to your Raspberry Pi Zero, and also
    looked at the architecture and differentiate between the pins we can use for the
    purpose we defined. This is the reason we have this section--to help you with
    the sensors we can connect and give the basics of how to connect other things
    to your device. In this section, we will explain how to configure the Raspberry
    Pi; now you cannot avoid learning how to connect to your Raspberry Pi sensors
    to read analog inputs connected to it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要学习如何将东西连接到您的树莓派Zero，并查看架构并区分我们可以用于我们定义目的的引脚。这就是我们有这一部分的原因-帮助您连接传感器并了解如何连接其他设备的基础知识。在本节中，我们将解释如何配置树莓派；现在您无法避免学习如何连接到您的树莓派传感器以读取连接到它的模拟输入。
- en: 'We will cover the following topics to make our hardware communicate with the
    board:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题，以使我们的硬件与板通信：
- en: 'Connecting digital inputs: Sensor DS18B20'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接数字输入：传感器DS18B20
- en: Connecting analog inputs using an MCP3008 ADC converter
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用MCP3008 ADC转换器连接模拟输入
- en: Connecting a real**-**time clock (RTC)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接实时时钟（RTC）
- en: Connectting digital input - sensor DS18B20
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接数字输入-传感器DS18B20
- en: The Raspberry Pi has digital pins, so in this section, we will look at how to
    connect a digital sensor to the board. We will use the digital sensor DS18B20,
    which has a digital output and can be perfectly connected to a digital input in
    our Raspberry Pi sensor. The main idea is to take temperature readings from the
    sensor and display them on the screen.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派有数字引脚，因此在本节中，我们将看看如何将数字传感器连接到板上。我们将使用数字传感器DS18B20，它具有数字输出，并且可以完美地连接到我们树莓派传感器的数字输入。主要思想是从传感器中获取温度读数并在屏幕上显示它们。
- en: Hardware requirements
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件要求
- en: 'We will require the following hardware to take the temperature reading:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要以下硬件来读取温度：
- en: Temperature sensor DS18B20 (waterproof)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 温度传感器DS18B20（防水）
- en: One resistor of 4.7 kilo-ohms
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个4.7千欧姆的电阻
- en: Some jumper wires
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些跳线线
- en: A breadboard
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个面包板
- en: 'We will use a waterproof sensor DS18B20 and a *4.7* kilo-ohm resistor:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用防水传感器DS18B20和*4.7*千欧姆电阻：
- en: '![Hardware requirements](graphics/B05170_02_01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![硬件要求](graphics/B05170_02_01.jpg)'
- en: This is the waterproof sensor that we are using in this project.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在这个项目中使用的防水传感器。
- en: Hardware connections
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件连接
- en: 'The following diagram shows the circuit on the breadboard, with the sensor
    and the resistor:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了面包板上的电路，带有传感器和电阻：
- en: '![Hardware connections](graphics/B05170_02_02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![硬件连接](graphics/B05170_02_02.jpg)'
- en: 'In the following image, we can see the circuit with the sensor:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到带有传感器的电路：
- en: '![Hardware connections](graphics/B05170_02_03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![硬件连接](graphics/B05170_02_03.jpg)'
- en: Configuring the one-wire protocol
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置单线协议
- en: 'Open a terminal in the Raspberry Pi, and type the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派中打开一个终端，并输入以下内容：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You should type the following line at the bottom of the page to configure the
    protocol and define the pin where the one-wire protocol will communicate:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该在页面底部输入以下行以配置协议并定义单线协议将进行通信的引脚：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The next step is to reboot the Raspberry Pi. After a few minutes, open the
    terminal and type the following lines:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是重新启动树莓派。几分钟后，打开终端并输入以下行：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Enter the folder and select the device that will be configured:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 进入文件夹并选择要配置的设备：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Select the device that will be set up. Change  `xxxx` to the serial number
    of the device that will set up in the protocol:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要设置的设备。将`xxxx`更改为协议中将设置的设备的序列号：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You will see the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到以下内容：
- en: '![Configuring the one-wire protocol](graphics/B05170_02_04.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![配置单线协议](graphics/B05170_02_04.jpg)'
- en: 'After that, you will see one line which says *Yes if it appears that the temperature
    reading is done like this: t=29.562*.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您将看到一行，上面写着*如果出现温度读数，则为Yes，如下所示：t=29.562*。
- en: Software configuration
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件配置
- en: Let's now look at the code to display the temperature in degrees Celsius and
    Fahrenheit every second on the screen.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下代码，每秒在屏幕上显示摄氏度和华氏度的温度。
- en: 'Here we import the libraries used in the program:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们导入了程序中使用的库：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here we define the devices configured in the protocol:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了协议中配置的设备：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here we define the folders where the devices are configured:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了设备配置的文件夹：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then we define the functions to read `temperature` and configure the sensor:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们定义读取`温度`和配置传感器的函数：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Read the temperature with the function:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下函数读取温度：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In this function, we compare when it received the message `YES` and get the
    `t=` character. We also get the value of the temperature:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个函数中，我们比较了接收到消息“YES”时的时间，并获取了温度的值：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then we calculate the temperature, `temp` in `C` and `F`, and return the values:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们计算温度，`temp`以`C`和`F`返回值：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'It repeats the cycle every second:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 它每秒重复一次循环：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Displaying the readings on the screen
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在屏幕上显示读数
- en: 'Now we need to execute `thermometer.py`. To show the results of the scripts
    made in Python, open your PuTTY terminal, and type the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要执行`thermometer.py`。要显示Python中制作的脚本的结果，请打开您的PuTTY终端，并输入以下命令：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The command means that, when we run the thermometer file, if everything is
    running perfectly, we will see the following results:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的意思是，当我们运行温度计文件时，如果一切正常运行，我们将看到以下结果：
- en: '![Displaying the readings on the screen](graphics/B05170_02_05.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![在屏幕上显示读数](graphics/B05170_02_05.jpg)'
- en: Connecting analog inputs using an MCP3008 ADC Converter
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用MCP3008 ADC转换器连接模拟输入
- en: If we want to connect analog sensors to the Raspberry Pi, we need to use an
    **Analog-to-Digital Converter** (**ADC**). The board doesn't have analog inputs;
    we use the **MCP3008** to connect analog sensors. This is a 10-bit ADC and has
    eight channels. This means that you can connect up to eight sensors that can be
    read from the Raspberry Pi Zero. We don't need special components to connect them.
    They can be connected with SPI to the Raspberry Pi's GPIOs.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要连接模拟传感器到树莓派，我们需要使用**模拟到数字转换器**（**ADC**）。该板没有模拟输入；我们使用**MCP3008**连接模拟传感器。这是一个10位ADC，有八个通道。这意味着您可以连接多达八个传感器，可以从树莓派Zero读取。我们不需要特殊的组件来连接它们。它们可以通过SPI连接到树莓派的GPIO。
- en: 'The first step is to enable SPI communication:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是启用SPI通信：
- en: 'Access the Raspberry Pi terminal and type the following command:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问树莓派终端并输入以下命令：
- en: '[PRE14]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Select **Advanced Options,** as shown in the following screenshot:![Connecting
    analog inputs using an MCP3008 ADC Converter](graphics/B05170_02_06.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下截图所示选择**高级选项**：![使用MCP3008 ADC转换器连接模拟输入](graphics/B05170_02_06.jpg)
- en: Enable **SPI** communication by selecting the **SPI** option:![Connecting analog
    inputs using an MCP3008 ADC Converter](graphics/B05170_02_07.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**SPI**选项启用**SPI**通信：![使用MCP3008 ADC转换器连接模拟输入](graphics/B05170_02_07.jpg)
- en: Select **<Yes>** to enable the SPI interface:![Connecting analog inputs using
    an MCP3008 ADC Converter](graphics/B05170_02_08.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**<Yes>**以启用SPI接口：![使用MCP3008 ADC转换器连接模拟输入](graphics/B05170_02_08.jpg)
- en: The final screen looks like the following screenshot when we enable the SPI
    interface. Select **<Ok>**:![Connecting analog inputs using an MCP3008 ADC Converter](graphics/B05170_02_09.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们启用SPI接口时，最终屏幕看起来像下面的截图。选择**<Ok>**：![使用MCP3008 ADC转换器连接模拟输入](graphics/B05170_02_09.jpg)
- en: Raspberry Pi GPIO header
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派GPIO引脚
- en: 'The following screenshot is a chart of the GPIO pins of the Raspberry Pi Zero.
    In this case, we will use the SPI configuration interface (`SPI_MOSI, SPI_MISO,
    SPI_CLK, SPI_CE0_N`):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是树莓派Zero的GPIO引脚图表。在这种情况下，我们将使用SPI配置接口（`SPI_MOSI, SPI_MISO, SPI_CLK, SPI_CE0_N`）：
- en: '![Raspberry Pi GPIO header](graphics/B05170_02_10.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派GPIO引脚](graphics/B05170_02_10.jpg)'
- en: 'The following diagram shows the name of the pins of the MCP3008 chip that you
    connect to the Raspberry Pi:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了MCP3008芯片的引脚名称，您将其连接到树莓派：
- en: '![Raspberry Pi GPIO header](graphics/B05170_02_11.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派GPIO引脚](graphics/B05170_02_11.jpg)'
- en: 'The following image shows the temperature sensor:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了温度传感器：
- en: '![Raspberry Pi GPIO header](graphics/B05170_02_12.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派GPIO引脚](graphics/B05170_02_12.jpg)'
- en: 'You need to connect the following pins according to the next description:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要根据以下描述连接以下引脚：
- en: '**VDD** to ***3.3*** volts'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VDD**连接到***3.3***伏特'
- en: '**VREF** to **3.3** volts from the Raspberry Pi Zero'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VREF**连接到树莓派Zero的**3.3**伏特'
- en: Pin **AGND** to **GND**
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**AGND**引脚连接到**GND**
- en: Pin **CLK** (clock) to **GPIO11** of the Raspberry Pi
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**CLK**（时钟）引脚连接到树莓派的**GPIO11**
- en: '**DOUT** to **GPIO9**'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DOUT**连接到**GPIO9**'
- en: Pin **DIN** to **GPIO10**
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**DIN**引脚连接到**GPIO10**
- en: Pin **CS** to **GPIO8** and the pin
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**CS**引脚连接到**GPIO8**和引脚
- en: Pin the MCP3008D **GND** to Ground
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将MCP3008D的**GND**引脚连接到地面
- en: 'This connection is represented in the following figure:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这个连接在下图中表示：
- en: '![Raspberry Pi GPIO header](graphics/B05170_02_13.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派GPIO引脚](graphics/B05170_02_13.jpg)'
- en: 'The following image shows the connections of the sensor to the ADC MCP3008
    and the Raspberry Pi:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了传感器连接到ADC MCP3008和树莓派的连接：
- en: '![Raspberry Pi GPIO header](graphics/B05170_02_14.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派GPIO引脚](graphics/B05170_02_14.jpg)'
- en: Reading the data with a Python script
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Python脚本读取数据
- en: 'In the next section, you will create the `MCP3008.py` file; you need to follow
    the next steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将创建`MCP3008.py`文件；您需要按照以下步骤进行：
- en: Open the terminal on your Raspberry Pi Zero.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的树莓派Zero上打开终端。
- en: Enter the interface in your Pi terminal.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的树莓派终端中输入界面。
- en: It's important to use `nano` before.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用之前使用`nano`非常重要。
- en: Type `sudo nano MCP3008.py`.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`sudo nano MCP3008.py`。
- en: 'It will appear on the screen and we will describe the following lines:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 它将出现在屏幕上，我们将描述以下行：
- en: 'Import libraries:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Open the SPI bus:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开SPI总线：
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Define the channels from the ADC MCP2008:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义ADC MCP2008的通道：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The function to convert volts is as follows:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转换电压的函数如下：
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The function to convert temperature is as follows:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转换温度的函数如下：
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Define channels from the ADC:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义ADC的通道：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Define the reading time:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义读取时间：
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The function to read the temperature is as follows:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取温度的函数如下：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Print the results:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印结果：
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Wait every 5 seconds:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每5秒等待：
- en: '[PRE24]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Run the Python file using the following command:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令运行Python文件：
- en: '[PRE25]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: On the following screen, we can see the temperature, the ADC measurements, and
    the volts according to the temperature:![Reading the data with a Python script](graphics/B05170_02_15.jpg)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，我们可以看到温度、ADC测量值和根据温度的电压：![使用Python脚本读取数据](graphics/B05170_02_15.jpg)
- en: Connecting an RTC
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接RTC
- en: To control a system, it is very important to have a circuit that can read the
    time; it can help control the outputs from the Raspberry Pi or detect an action
    at a specific time. We will interface an **RTC** module *DS3231* with the Raspberry
    Pi.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制系统，拥有一个可以读取时间的电路非常重要；它可以帮助控制树莓派的输出或在特定时间检测动作。我们将使用**RTC**模块*DS3231*与树莓派进行接口。
- en: I2C setup
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: I2C设置
- en: 'The first step is to enable the **I2C** interface by performing the following
    steps:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是通过执行以下步骤启用**I2C**接口：
- en: Select **Advanced Options**:![I2C setup](graphics/B05170_02_16.jpg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**高级选项**：![I2C设置](graphics/B05170_02_16.jpg)
- en: Enable the **I2C** option, as shown in the following screenshot:![I2C setup](graphics/B05170_02_17.jpg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**I2C**选项，如下截图所示：![I2C设置](graphics/B05170_02_17.jpg)
- en: Select **<Yes>** on the next screen:![I2C setup](graphics/B05170_02_18.jpg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上选择**<Yes>**：![I2C设置](graphics/B05170_02_18.jpg)
- en: Select **<Ok>**:![I2C setup](graphics/B05170_02_19.jpg)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**<Ok>**：![I2C设置](graphics/B05170_02_19.jpg)
- en: Then select **<Yes>**:![I2C setup](graphics/B05170_02_20.jpg)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后选择**<Yes>**：![I2C设置](graphics/B05170_02_20.jpg)
- en: Next, select **<OK>**:![I2C setup](graphics/B05170_02_21.jpg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**<OK>**：![I2C设置](graphics/B05170_02_21.jpg)
- en: DS3231 module setup
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DS3231模块设置
- en: The module DS3231 is a real-time clock. It can be used to get the time and date
    from an integrated circuit, so it can work with your system to control specific
    events that you want to program from an embedded chip. It can work perfectly with
    the Raspberry Pi Zero in order to get the time and date in real time.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: DS3231模块是一个实时时钟。它可以用于从集成电路获取时间和日期，因此可以与您的系统一起工作，以控制您想要从嵌入式芯片编程的特定事件。它可以与树莓派Zero完美配合，以实时获取时间和日期。
- en: 'You need to be sure that you have the latest updates. To do that, type the
    following commands in your terminal:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保您有最新的更新。为此，请在终端中输入以下命令：
- en: '[PRE26]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Modify the system file with the following command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令修改系统文件：
- en: '[PRE27]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Add the following lines to the `modules.txt` file:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下行添加到`modules.txt`文件中：
- en: '[PRE28]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Hardware setup
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件设置
- en: 'In this section, we will look at the pins of the RTC module:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看RTC模块的引脚：
- en: '[PRE29]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This is the RTC module, and we can see the pins of the chip:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这是RTC模块，我们可以看到芯片的引脚：
- en: '![Hardware setup](graphics/B05170_02_22.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![硬件设置](graphics/B05170_02_22.jpg)'
- en: 'The following diagram shows, the circuit connection:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了电路连接：
- en: '![Hardware setup](graphics/B05170_02_23.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![硬件设置](graphics/B05170_02_23.jpg)'
- en: 'The following image shows the final connection:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了最终的连接：
- en: '![Hardware setup](graphics/B05170_02_24.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![硬件设置](graphics/B05170_02_24.jpg)'
- en: Testing the RTC
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试RTC
- en: 'Open the terminal, and type this:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端，输入以下内容：
- en: '[PRE30]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'You should see something similar to the following screenshot:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到类似于以下截图的内容：
- en: '![Testing the RTC](graphics/B05170_02_25.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![测试RTC](graphics/B05170_02_25.jpg)'
- en: I2C device setup
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: I2C设备设置
- en: 'The next step is to check whether the time clock is synchronized with RTC time.
    Here we define the RTC local:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是检查时间时钟是否与RTC时间同步。在这里我们定义RTC本地：
- en: '[PRE31]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Add the following lines to the file as we declare the new device and the path
    we configure:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下行添加到文件中，因为我们声明了新设备和我们配置的路径：
- en: '[PRE32]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following command will start up the RTC:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将启动RTC：
- en: '[PRE33]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'After this command, reboot the Pi. You will see the following screen, which
    means that the RTC is configured and ready to work:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此命令后，重新启动Pi。您将看到以下屏幕，这意味着RTC已配置并准备好工作：
- en: '![I2C device setup](graphics/B05170_02_26.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![I2C设备设置](graphics/B05170_02_26.jpg)'
- en: Putting the real-time clock to final test
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将实时时钟进行最终测试
- en: 'You can read the Pi time system with the following command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下命令读取Pi时间系统：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![Putting the real-time clock to final test](graphics/image_02_027.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![将实时时钟进行最终测试](graphics/image_02_027.jpg)'
- en: 'Once the RTC is ready, you can test it with the following command; write the
    time to the RTC:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦RTC准备就绪，您可以使用以下命令进行测试；将时间写入RTC：
- en: '[PRE35]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You can read the time from the RTC with the command given here:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用此处给出的命令从RTC读取时间：
- en: '[PRE36]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now for the final command. With this command, we can see both the time values,
    as shown in the following screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进行最终命令。使用此命令，我们可以看到以下截图中显示的时间值：
- en: '![Putting the real-time clock to final test](graphics/image_02_028.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![将实时时钟进行最终测试](graphics/image_02_028.jpg)'
- en: Summary
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to use the MCP3008 ADC converter and also how to
    use a temperature sensor using Raspberry Pi Zero. We explored the GPIO port and
    the various interfaces it features. We looked at the various things we can connect
    to the Raspberry Pi using GPIO.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何使用MCP3008 ADC转换器，以及如何使用树莓派Zero使用温度传感器。我们探索了GPIO端口及其各种接口。我们看了看可以使用GPIO连接到树莓派的各种东西。
- en: In the next chapter, we will dive into more hardware acquisition, connecting
    different kinds of sensors to our Raspberry Pi Zero and Arduino boards. This will
    help you make real measurements in your projects. That’s very interesting—keep
    at it!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入研究更多的硬件采集，连接不同类型的传感器到我们的树莓派Zero和Arduino板。这将帮助您在项目中进行真实的测量。非常有趣 -
    继续努力！
