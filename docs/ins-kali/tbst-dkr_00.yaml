- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Docker is an open source, container-based platform that enables anyone to consistently
    develop and deploy stable applications anywhere. Docker delivers speed, simplicity,
    and security in creating scalable and portable environments for ultramodern applications.
    With the advent and prevalence of Docker in the containerization of modern microservices
    and N-tier applications, it is both prudent and imperative to effectively troubleshoot
    automated workflows for production-level deployments.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Docker是一个开源的基于容器的平台，可以让任何人在任何地方一致地开发和部署稳定的应用程序。Docker在创建可扩展和可移植环境方面提供了速度、简单性和安全性。随着Docker在现代微服务和N层应用的容器化中的出现和普及，有效地解决生产级部署的自动化工作流程是明智且必要的。
- en: What this book covers
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](ch01.html "Chapter 1. Understanding Container Scenarios and an
    Overview of Docker"), *Understanding Container Scenarios and an Overview of Docker*,
    is about the basic containerization concept with the help of application and OS-based
    containers. We will throw some light on the Docker technology, its advantages,
    and the life cycle of Docker containers.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，理解容器场景和Docker概述，介绍了基本的容器化概念，以应用程序和基于操作系统的容器为例。我们将介绍Docker技术、其优势以及Docker容器的生命周期。
- en: '[Chapter 2](ch02.html "Chapter 2. Docker Installation"), *Docker Installation*,
    will go over the steps to install Docker on various Linux distributions – Ubuntu,
    CoreOS, CentOS, Red Hat Linux, Fedora, and SUSE Linux.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，Docker安装，将介绍在各种Linux发行版上安装Docker的步骤 - Ubuntu，CoreOS，CentOS，Red Hat Linux，Fedora和SUSE
    Linux。
- en: '[Chapter 3](ch03.html "Chapter 3. Building Base and Layered Images"), *Building
    Base and Layered Images*, teaches that a mission-critical task in production-ready
    application containerization is image building. We will also discuss building
    images manually from scratch. Moving ahead, we will explore building layered images
    with a Dockerfile and enlist the Dockerfile commands in detail.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，构建基础和分层镜像，教授了在生产就绪的应用容器化中构建镜像的重要任务。我们还将讨论如何手动从头开始构建镜像。接下来，我们将详细探讨使用Dockerfile构建分层镜像，并列出Dockerfile命令。
- en: '[Chapter 4](ch04.html "Chapter 4. Devising Microservices and N-Tier Applications"),
    *Devising Microservices and N-Tier Applications*, will explore example environments
    designed seamlessly from development to test, eliminating the need for manual
    and error-prone resource provisioning and configuration. In doing so, we will
    touch briefly on how a microservice applications can be tested, automated, deployed,
    and managed.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，设计微服务和N层应用，将探讨从开发到测试无缝设计的示例环境，消除了手动和容易出错的资源配置和配置的需求。在这样做的过程中，我们将简要介绍微服务应用程序如何进行测试、自动化、部署和管理。
- en: '[Chapter 5](ch05.html "Chapter 5. Moving Around Containerized Applications"),
    *Moving Around Containerized Application*, will take a look at Docker registry.
    We will start with the basic concepts of Docker public repository using Docker
    Hub and the use case of sharing containers with a larger audience. Docker also
    provides the option to deploy a private Docker registry, which we look into, that
    can be used to push, pull, and share the Docker containers internally in the organization.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，移动容器化应用，将介绍Docker注册表。我们将从使用Docker Hub的Docker公共存储库的基本概念开始，以及与更大观众共享容器的用例。Docker还提供了部署私有Docker注册表的选项，我们将探讨这一点，该注册表可用于在组织内部推送、拉取和共享Docker容器。
- en: '[Chapter 6](ch06.html "Chapter 6. Making Containers Work"), *Making Containers
    Work*, will teach you about privileged containers, which have access to all the
    host devices, and super-privileged containers, which show that the containers
    can run a background service that can be used to run services in Docker containers
    to manage the underlying host.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“使容器工作”，将教你关于特权容器，它们可以访问所有主机设备，以及超级特权容器，它们表明容器可以运行后台服务，用于在Docker容器中运行服务以管理底层主机。
- en: '[Chapter 7](ch07.html "Chapter 7. Managing the Networking Stack of a Docker
    Container"), *Managing the Networking Stack of a Docker Container*, will explain how
    Docker networking is powered with Docker0 bridge and its troubleshooting issues
    and configuration. We will also look at troubleshooting the communication issues
    between Docker networks and the external network. We look into containers communication
    across multiple hosts using different networking options, such as Weave, OVS,
    Flannel, and Docker''s latest overlay network. We will compare them and look at
    the troubleshooting issues involved in their configuration.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“管理Docker容器的网络堆栈”，将解释Docker网络是如何通过Docker0桥接进行配置和故障排除的。我们还将探讨Docker网络与外部网络之间的通信问题的故障排除。我们将研究使用不同网络选项（如Weave、OVS、Flannel和Docker的最新覆盖网络）在多个主机之间进行容器通信，并比较它们以及它们配置中涉及的故障排除问题。
- en: '[Chapter 8](ch08.html "Chapter 8. Managing Docker Containers with Kubernetes"),
    *Managing Docker Containers with Kubernetes*, explains how to manage Docker containers
    with help of Kubernetes. We will cover many deployment scenarios and troubleshooting
    issues while deploying Kubernetes on a Bare Metal machine, AWS, vSphere, or using
    minikube. We will also look at deploying Kubernetes pods effectively and debugging
    Kubernetes issues.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“使用Kubernetes管理Docker容器”，解释了如何借助Kubernetes管理Docker容器。我们将涵盖许多部署场景和在裸机、AWS、vSphere或使用minikube部署Kubernetes时的故障排除问题。我们还将探讨有效部署Kubernetes
    pods和调试Kubernetes问题。
- en: '[Chapter 9](ch09.html "Chapter 9. Hooking Volume Baggage"), *Hooking Volume
    Baggage*, will dive into data volumes and storage driver concepts related to Docker.
    We will discuss troubleshooting the data volumes with the help of the four approaches
    and look at their pros and cons. The first case of storing data inside the Docker
    container is the most basic case, but it doesn''t provide the flexibility to manage
    and handle data in the production environment. The second and third cases are
    about storing the data using data-only containers or directly on the host. The
    fourth case is about using a third-party volume plugin, Flocker or Convoy, which
    stores the data in a separate block and even provides reliability with data, even
    if the container is transferred from one host to another or if the container dies.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“挂载卷包”，将深入探讨与Docker相关的数据卷和存储驱动器概念。我们将讨论使用四种方法来故障排除数据卷，并研究它们的优缺点。存储数据在Docker容器内部的第一种情况是最基本的情况，但它不提供在生产环境中管理和处理数据的灵活性。第二和第三种情况是使用仅存储数据的容器或直接存储在主机上的情况。第四种情况是使用第三方卷插件，如Flocker或Convoy，它将数据存储在单独的块中，即使容器从一个主机转移到另一个主机，或者容器死亡，也能提供数据的可靠性。
- en: '[Chapter 10](ch10.html "Chapter 10. Docker Deployment in a Public Cloud - AWS
    and Azure"), *Docker Deployment in a Public Cloud - AWS and Azure*, outlines Docker
    deployment on the Microsoft Azure and AWS public clouds.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“在公共云中部署Docker - AWS和Azure”，概述了在Microsoft Azure和AWS公共云上部署Docker。
- en: What you need for this book
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需内容
- en: You will need Docker 1.12+ installed on Windows, Mac OS,or Linux machines. Public
    cloud accounts of AWS, Azure and GCE might be required, which are mentioned in
    the respective sections of the chapters.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在Windows、Mac OS或Linux机器上安装Docker 1.12+。可能需要AWS、Azure和GCE的公共云账户，这些在各章节的相应部分中提到。
- en: Who this book is for
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is intended to help seasoned solutions architects, developers, programmers,
    system engineers, and administrators troubleshoot common areas of Docker containerization.
    If you are looking to build production-ready Docker containers for automated deployment,
    you will be able to master and troubleshoot both the basic functions and the advanced
    features of Docker. Advanced familiarity with the Linux command line syntax, unit
    testing, the Docker registry, GitHub, and leading container hosting platforms
    and Cloud Service Providers (CSP) are the prerequisites. In this book you will
    also learn about ways and means to avoid troubleshooting in the first place.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助经验丰富的解决方案架构师、开发人员、程序员、系统工程师和管理员解决Docker容器化的常见问题。如果您希望构建用于自动部署的生产就绪的Docker容器，您将能够掌握和解决Docker的基本功能和高级功能。熟悉Linux命令行语法、单元测试、Docker注册表、GitHub以及领先的容器托管平台和云服务提供商（CSP）是先决条件。在本书中，您还将了解避免首次进行故障排除的方法和手段。
- en: Conventions
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些文本样式，用于区分不同类型的信息。以下是一些样式的示例及其含义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Restart
    the cluster using the `start_k8s.sh` shell script."'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“使用`start_k8s.sh`
    shell脚本重新启动集群。”
- en: 'A block of code is set as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式书写：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms **and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Specify the **Stack name**, **KeyPair**, and cluster 3."'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会在文本中显示为：“指定**堆栈名称**、**密钥对**和集群3。”'
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明显示在这样的框中。
- en: Tip
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧显示如下。
