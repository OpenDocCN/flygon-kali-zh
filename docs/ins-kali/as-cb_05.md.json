["```kt\n    compile 'com.google.apis:google-api-services-youtube:v3-rev120-1.19.0'\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <FrameLayout xmlns:android=\n      \"http://schemas.android.com/apk/res/android\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"match_parent\"\n       android:background=\"@android:color/holo_orange_light\"\n       android:id=\"@+id/main_container_for_list_fragment\">\n    </FrameLayout>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <FrameLayout \n        android:orientation=\"vertical\"     \n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n    <ListView\n        android:id=\"@+id/main_video_list_view\"\n    \tandroid:visibility=\"visible\"\n    \tandroid:padding=\"6dp\"\n    \tandroid:layout_marginTop=\"0dp\"\n    \tandroid:layout_width=\"match_parent\"\n    \tandroid:layout_height=\"match_parent\">\n    \t</ListView>\n    </FrameLayout>\n    ```", "```kt\n    public class ListFragment extends Fragment {\n      private ListView mListView;\n      @Override\n      public View onCreateView(LayoutInflater inflater,    \n       ViewGroup container, Bundle savedInstanceState) \n        final View view= inflater.inflate(  \n          R.layout.fragment_list, container, false);\n        mListView = (ListView)view.findViewById(\n         R.id.main_video_list_view);\n        return view;\n      }\n    }\n    ```", "```kt\n    import android.app.Fragment;\n    ```", "```kt\n    private YouTube mYoutube;\n    private YouTube.Search.List mYouTubeList;\n    private void loadVideos(String queryString){\n     mYoutube = new YouTube.Builder(new NetHttpTransport(),\n      new JacksonFactory(), new HttpRequestInitializer() {\n       @Override\n       public void initialize(HttpRequest hr) throws  \n        IOException {}\n     }).setApplicationName( \n      getString(R.string.app_name)).build();\n    }\n    ```", "```kt\n    try{\n     mYouTubeList = mYoutube.search().list(\"id,snippet\");      \n     mYouTubeList.setType(\"video\");\n     mYouTubeList.setFields( \n      \"items(id/videoId,snippet/title,snippet/   \n          description,snippet/thumbnails/default/url)\");\n    }\n    catch (IOException e) {\n      Log.d(this.getClass().toString(), \"Could not \n        initialize: \" + e);\n    }\n    ```", "```kt\n    android:name=\"android.permission.INTERNET\"/>\n    ```", "```kt\n    mYouTubeList.setKey(\"Your API key goes here\");\n    ```", "```kt\n    private String title;\n    private String description;\n    private String thumbnailURL;\n    private String id;\n    public String getId() {\n     return id;\n    }\n    public void setId(String id) {\n     this.id = id;\n    }\n    public String getTitle() {\n     return title;\n    }\n    public void setTitle(String title) {\n     this.title = title;\n    }\n    public String getDescription() {\n     return description;\n    }\n    public void setDescription(String description) {\n     this.description = description;\n    }\n    public String getThumbnailURL() {\n     return thumbnailURL;\n    }\n    public void setThumbnailURL(String thumbnail) {\n     this.thumbnailURL = thumbnail;\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"vertical\"\n       xmlns:android= \n        \"http://schemas.android.com/apk/res/android\"\n      android:padding=\"6dp\">\n    <TextView\n      android:id=\"@+id/adapter_video_id\"android:textSize=\"14sp\"android:textStyle=\"bold\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" />\n    <TextView\n      android:id=\"@+id/adapter_video_title\"android:textSize=\"20sp\"android:layout_marginTop=\"2dp\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" /></LinearLayout>\n    ```", "```kt\n    public class VideoAdapter extends ArrayAdapter<VideoItem> {\n     private Context mContext;\n     private int mAdapterResourceId;\n     public ArrayList<VideoItem>mVideos = null;\n     static class ViewHolder{\n            TextView videoId;\n            TextView videoTitle;\n        }\n    @Override\n     public int getCount(){\n     super.getCount();\n     int count = mVideos !=null ? mVideos.size() : 0;\n     return count;\n    }\n    public VideoAdapter (Context context, int  \n     adapterResourceId, ArrayList<VideoItem> items)\n    {\n     super(context, adapterResourceId, items);\n     this.mVideos = items;\n     this.mContext = context;\n     this.mAdapterResourceId = adapterResourceId; \n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent)\n    {\n     View v = convertView;\n    if (v == null){LayoutInflater vi =   \n         (LayoutInflater)this.getContext().getSystemService(\n          Context.LAYOUT_INFLATER_SERVICE);\n        v = vi.inflate(mAdapterResourceId, null);\n        ViewHolder holder = new ViewHolder();\n        holder.videoId = (TextView)  \n         v.findViewById(R.id.adapter_video_id);\n        holder.videoTitle = (TextView) \n         v.findViewById(R.id.adapter_video_title);     \n        v.setTag(holder);\n     }\n     final VideoItem item = mVideos.get(position);\n     if(item != null){\n      final ViewHolder holder = (ViewHolder)v.getTag();\n      holder.videoId.setText(item.getId());\n      holder.videoTitle.setText( item.getTitle());\n     }\n     return v;\n    }\n    ```", "```kt\n    private List<VideoItem>mVideos;\n    private VideoAdapter mAdapter;\n    ```", "```kt\n    public List<VideoItem> search(String keywords){\n     mYouTubeList.setQ(keywords);\n    try{\n       SearchListResponse response = mYouTubeList.execute();\n       List<SearchResult> results = response.getItems();\n       List<VideoItem>  items = new ArrayList<VideoItem>();\n        for(SearchResult result:results){\n\n        VideoItem item = new VideoItem();\n        item.setTitle(result.getSnippet().getTitle());\n        item.setDescription(result.getSnippet().\n         getDescription());\n\n        item.setThumbnailURL(result.getSnippet().\n         getThumbnails().getDefault().getUrl());\n        item.setId(result.getId().getVideoId());\n        items.add(item);\n      }\n      return items;\n     }\n    catch(IOException e){\n      Log.d(\"TEST\", \"Could not search: \" + e);\n     }\n    }\n    ```", "```kt\n    mVideos =search(queryString\u00a7);\n    mAdapter = new VideoAdapter(getActivity(), R.layout.adapter_video, (ArrayList<VideoItem>) mVideos);\n    ```", "```kt\n    getActivity().runOnUiThread(new Runnable() {\n    public void run() {\n       mListView.setAdapter(mAdapter);\n       mAdapter.notifyDataSetChanged();\n     }\n    });\n    ```", "```kt\n    @Override\n     public void onActivityCreated(Bundle bundle){\n     super.onActivityCreated(bundle);\n     new Thread(new Runnable() {\n       public void run(){\n          loadVideos(\"Android development\");\n       }\n    }).start();\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout  xmlns:android=  \n     \"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"android:layout_height=\"match_parent\">\n    <Button\n    android:id=\"@+id/detail_button_play\"android:text=\"@string/play\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\" />\n    <ImageView\n    android:id=\"@+id/detail_image\"android:layout_width=\"match_parent\"android:layout_height=\"wrap_content\"android:src=\"img/gallery_thumb\"/>\n    <TextView\n    android:layout_marginTop=\"16dp\"android:id=\"@+id/detail_text\"android:minHeight=\"200dp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n    ```", "```kt\n    public class DetailsFragment  extends Fragment {\n      @Override\n      public View onCreateView(LayoutInflater inflater,\n       ViewGroup container, Bundle savedInstanceState) {\n        final View view= inflater.inflate(\n          R.layout.fragment_details, container, false);\n         return view;\n      }\n    }\n    ```", "```kt\n    private void showDetails(){\n    if (getView()!=null &&mVideo != null)\n     {\n       TextView tv = (TextView) \n        getView().findViewById(R.id.detail_text);\n       final ImageView iv = (ImageView)    \n        getView().findViewById(R.id.detail_image);\n       tv.setText(mVideo.getDescription());\n      new Thread(new Runnable() {\n       public void run() {\n          loadThumbnail(mVideo, iv);\n        }\n       }).start();\n      }\n    }\n    public void setVideo(VideoItem video)\n    {\n      mVideo = video;\n      showDetails();\n    }\n    @Override\n      public void onResume(){\n      super.onResume();\n      showDetails();\n    }\n    ```", "```kt\n    private void loadThumbnail(VideoItem video,final  \n     ImageView iv){\n    try \n     {\n        URL url = new URL(video.getThumbnailURL());\n       final Bitmap bmp = BitmapFactory.decodeStream(   \n        url.openConnection().getInputStream());\n\n       getActivity().runOnUiThread(new Runnable() {\n        public void run() {\n          iv.setImageBitmap(bmp);\n         }\n        });\n     }\n     catch (Exception ex){\n        Log.d(this.getClass().toString(), ex.getMessage());\n     }\n    }\n    ```", "```kt\n    mListView.setOnItemClickListener(new \n     AdapterView.OnItemClickListener() \n    {\n      @Override\n      public void onItemClick(AdapterView<?> adapterView,    \n        View view, int i, long l) \n        {\n            VideoItem video = mVideos.get(i);\n            onVideoClicked(video);\n        }\n    });\n    return view;\n    ```", "```kt\n    public static String TAG_LIST_FRAGMENT = \"LIST\";\n    public static String TAG_DETAILS_FRAGMENT = \"DETAILS\";\n\n    ```", "```kt\n    private void onVideoClicked(VideoItem video) {  \n      DetailFragment detailsFragment = (DetailFragment)   \n       getFragmentManager().findFragmentByTag(   \n        MainActivity.TAG_DETAILS_FRAGMENT);\n    if (detailsFragment != null) { \n      detailsFragment.setVideo(video);}\n    }\n    ```", "```kt\n    private DetailFragment mDetailsFragment;\n    private ListFragment mListFragment;\n    ```", "```kt\n    mListFragment = new ListFragment();\n    FragmentTransaction ft =  \n     getFragmentManager().beginTransaction();\n    ft.add(R.id.main_container_for_list_fragment, \n     mListFragment, TAG_LIST_FRAGMENT);\n    ft.commit();\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?><FrameLayout xmlns:android=  \n     \"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"android:layout_height=\"match_parent\"android:id=\"@+id/main_container\">\n    <FrameLayout\n    android:layout_width=\"300dp\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/holo_orange_light\"\n    android:id=\"@+id/main_container_for_list_fragment\">\n    </FrameLayout>\n    <FrameLayout\n    android:id=\"@+id/main_container_for_detail_fragment\"android:background=\"@android:color/holo_blue_light\"\n    android:layout_marginLeft=\"300dp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    </FrameLayout>\n    </FrameLayout>\n    ```", "```kt\n    mListFragment = new ListFragment();\n    FragmentTransaction ft =  \n     getFragmentManager().beginTransaction();\n    ft.add(R.id.main_container_for_list_fragment,  mListFragment, TAG_LIST_FRAGMENT);\n    if (findViewById(  \n     R.id.main_container_for_detail_fragment)!= null){\n      mDetailsFragment = new DetailFragment();ft.add(R.id.main_container_for_detail_fragment,  \n      mDetailsFragment, TAG_DETAILS_FRAGMENT);\n    }\n    ft.commit();\n    ```", "```kt\n    private void onVideoClicked(VideoItem video) {\n      DetailFragment detailsFragment = (DetailFragment)    \n       getFragmentManager().findFragmentByTag(  \n        MainActivity.TAG_DETAILS_FRAGMENT);\n     if (detailsFragment != null) {\n       detailsFragment.setVideo(video);\n     }\n     else\n     {\n       FragmentTransaction ft =  getFragmentManager().beginTransaction();\n       detailsFragment = new DetailFragment();\n       ft.add(R.id.main_container_for_list_fragment,  \n        detailsFragment, MainActivity.TAG_DETAILS_FRAGMENT);\n       ft.addToBackStack(MainActivity.TAG_DETAILS_FRAGMENT); \n       ft.commit();\n       detailsFragment.setVideo(video);\n     }\n    }\n    ```", "```kt\n    @Override \n    public void onBackPressed() {\n    if (getFragmentManager().getBackStackEntryCount()>0){\n            getFragmentManager().popBackStack();\n        }\n    else {\n    this.finish();\n        }\n    }\n    ```", "```kt\n    compile fileTree(dir: 'libs', include: ['YouTubeAndroidPlayerApi.jar'])\n    ```", "```kt\n    public static String TAG_PLAYER_FRAGMENT = \"PLAYER\";\n    private YouTubePlayerFragment mPlayerFragment;\n    public YouTubePlayer mYouTubePlayer = null;\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <FrameLayout\n    android:layout_width=\"match_parent\"android:layout_height=\"match_parent\"android:id=\"@+id/main_container\">\n    <FrameLayout\n    android:layout_width=\"300dp\"android:layout_height=\"match_parent\"android:background=\"@android:color/holo_orange_light\"android:id=\"@+id/main_container_for_list_fragment\"></FrameLayout>\n    <FrameLayout\n    android:id=\"@+id/main_container_for_detail_fragment\"android:background=\"@android:color/holo_blue_light\"android:layout_marginLeft=\"300dp\"android:layout_width=\"match_parent\"android:layout_height=\"300dp\"></FrameLayout>\n    <fragment\n    android:name=\"com.google.android.youtube.player.YouTubePlayerFragment\"\n    android:id=\"@+id/main_youtube_player_fragment\"android:layout_marginTop=\"300dp\"android:layout_marginLeft=\"300dp\"android:layout_width=\"match_parent\"android:layout_height=\"match_parent\"android:layout_weight=\"3\"/>\n    </FrameLayout>\n    ```", "```kt\n    mPlayerFragment = (YouTubePlayerFragment)  \n     getFragmentManager().findFragmentById(\n      R.id.main_youtube_player_fragment);if (mPlayerFragment != null) {\n      ft.add(mPlayerFragment, TAG_PLAYER_FRAGMENT);  mPlayerFragment.initialize(\"Your API key\", new \n       YouTubePlayer.OnInitializedListener() \n      {\n       @Override \n         public void onInitializationSuccess( YouTubePlayer.Provider   \n         provider, YouTubePlayer youTubePlayer, boolean isRestored) \n       {\n         mYouTubePlayer = youTubePlayer;}\n       @Override \n        public void onInitializationFailure(YouTubePlayer.Provider    \n        provider, YouTubeInitializationResult \n         youTubeInitializationResult) {\n          Log.d(this.getClass().toString(),   \n           youTubeInitializationResult.toString()); \n     });\n    }\n    ```", "```kt\n    view.findViewById(R.id.detail_button_play).setOnClickListener(\n     new View.OnClickListener() {\n      @Override\n      public void onClick(View v) {\n        playVideo();}\n    });\n    ```", "```kt\n    private void playVideo(){\n    if (getActivity() != null && \n     ((MainActivity)getActivity()).mYouTubePlayer != null){\n        ((MainActivity)getActivity()  \n         ).mYouTubePlayer.cueVideo(mVideo.getId());\n     }\n     else {\n        FragmentTransaction ft =  \n         getFragmentManager().beginTransaction();\n        YouTubePlayerFragment playerFragment = new \n        YouTubePlayerFragment();\n       ft.add(R.id.main_container_for_list_fragment,   \n        playerFragment, MainActivity.TAG_DETAILS_FRAGMENT);\n       ft.addToBackStack(MainActivity.TAG_PLAYER_FRAGMENT);\n       ft.commit();\n       playerFragment.initialize(\"Your API key\", new \n        YouTubePlayer.OnInitializedListener() {\n          @Override\n         public void onInitializationSuccess(YouTubePlayer.Provider \n           provider, YouTubePlayer youTubePlayer, boolean \n           isRestored) {\n             if (!isRestored) {\n                 youTubePlayer.cueVideo(mVideo.getId());\n              }\n          }\n          @Override\n    \t   public void onInitializationFailure(YouTubePlayer.Provider \n           provider, YouTubeInitializationResult \n            youTubeInitializationResult) {\n            Log.d(this.getClass().toString(),   \n             youTubeInitializationResult.toString()); \n          }\n       });\n     }\n    }\n    ```", "```kt\n    <uses-feature\n    android:name=\"android.hardware.touchscreen\"\n    android:required=\"false\" />\n    <uses-feature\n    android:name=\"android.software.leanback\"\n    android:required=\"true\" />\n    ```"]