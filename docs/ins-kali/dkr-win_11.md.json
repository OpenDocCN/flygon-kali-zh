["```\nImport-Module servermanager\nAdd-WindowsFeature web-mgmt-service\n```", "```\nSet-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\WebManagement\\Server -Name EnableRemoteManagement -Value 1\nStart-Service wmsvc\n```", "```\nnet user iisadmin \"!!Sadmin*\" /add\nnet localgroup \"Administrators\" \"iisadmin\" /add\n```", "```\ndocker container run -d -p 80 -p 8172 --name iis dockeronwindows/ch08-iis-with-management:2e\n```", "```\n> docker container exec iis powershell \\EnableIisRemoteManagement.ps1\nThe command completed successfully.\nThe command completed successfully.\n\nSuccess Restart Needed Exit Code      Feature Result\n------- -------------- ---------      --------------\nTrue    No             Success        {ASP.NET 4.7, Management Service, Mana...\n\nWindows IP Configuration\nEthernet adapter vEthernet (Ethernet):\n   Connection-specific DNS Suffix  . : localdomain\n   Link-local IPv6 Address . . . . . : fe80::583a:2cc:41f:f2e4%14\n   IPv4 Address. . . . . . . . . . . : 172.27.56.248\n   Subnet Mask . . . . . . . . . . . : 255.255.240.0\n   Default Gateway . . . . . . . . . : 172.27.48.1\n```", "```\ndocker container run -d -p 1433:1433 `\n -e sa_password=DockerOnW!nd0ws `\n --name sql `\n dockeronwindows/ch03-sql-server:2e\n```", "```\n# escape=` FROM dockeronwindows/ch03-sql-server:2e SHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop';\"] ENV sa_password DockerOnW!nd0ws VOLUME C:\\mssql  WORKDIR C:\\init\nCOPY . . CMD ./InitializeDatabase.ps1 -sa_password $env:sa_password -Verbose HEALTHCHECK CMD powershell -command ` try { ` $result = invoke-sqlcmd -Query 'SELECT TOP 1 1 FROM Authors' -Database DockerOnWindows; ` if ($result[0] -eq 1) {return 0} ` else {return 1}; ` } catch { return 1 }\n```", "```\ndocker container run -d -p 1433 --name db dockeronwindows/ch08-mssql-with-schema:2e\n```", "```\n> docker exec db powershell `\n \"Get-EventLog -LogName Application -Source MSSQL* -Newest 2 | Format-Table TimeWritten,Message\"\n\nTimeWritten          Message\n-----------          -------\n6/27/2017 5:14:49 PM Setting database option READ_WRITE to ON for database '...\n6/27/2017 5:14:49 PM Setting database option query_store to off for database...\n```", "```\n$lastCheck = (Get-Date).AddSeconds(-2) \nwhile ($true) { \n Get-EventLog -LogName Application -Source \"MSSQL*\" -After $lastCheck | `\n Select-Object TimeGenerated, EntryType, Message \n $lastCheck = Get-Date \n Start-Sleep -Seconds 2 \n}\n```", "```\nnet user serveradmin \"s3rv3radmin*\" /add\nnet localgroup \"Administrators\" \"serveradmin\" /add\n\nNew-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System `\n -Name LocalAccountTokenFilterPolicy -Type DWord -Value 1\nStart-Service winrm\n```", "```\n> > docker container run -d -P --name iis2 dockeronwindows/ch08-iis-with-server-manager:2e\n9c097d80c08b5fc55cfa27e40121d240090a1179f67dbdde653c1f93d3918370\n\nPS> docker exec iis2 powershell .\\EnableRemoteServerManagement.ps1\nThe command completed successfully.\n... \n```", "```\n> docker exec iis2 hostname\n9c097d80c08b\n```", "```\n#ch08 \n172.27.59.5  9c097d80c08b\n```", "```\nSet-Item wsman:\\localhost\\Client\\TrustedHosts 9c097d80c08b -Concatenate -Force\n```", "```\ndocker service create `\n  --name=viz `\n  --publish=8000:8080/tcp `\n  --constraint=node.role==manager `\n  --mount=type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock `\n  dockersamples/visualizer\n```", "```\nportainer:\n  image: portainer/portainer\n  command: -H tcp://tasks.agent:9001 --tlsskipverify\n  ports:\n   - \"8000:9000\"\n  volumes:\n   - portainer_data:/data\n  networks:\n   - agent_network\n  deploy: \n    mode: replicated\n    replicas: 1\n    placement:\n      constraints: [node.role == manager]\n```", "```\nmessage-queue:\n  image: nats:1.4.1-linux\n  deploy:\n    placement:\n      constraints: \n       - node.platform.os == linux\n```"]