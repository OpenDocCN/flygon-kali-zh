- en: Docker Machine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker Machine
- en: 'In this chapter, we will take a deeper look at Docker Machine, which we touched
    upon in the previous chapter. It can be used to easily launch and bootstrap Docker
    hosts targeting various platforms, including locally or in a cloud environment.
    You can control your Docker hosts with it as well. Let''s take a look at what
    we will be covering in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将更深入地了解Docker Machine，这是我们在上一章中提到的。它可以用于轻松启动和引导针对各种平台的Docker主机，包括本地或云环境。您也可以使用它来控制您的Docker主机。让我们看看本章将涵盖的内容：
- en: An introduction to Docker Machine
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Machine简介
- en: Using Docker Machine to set up local Docker hosts
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Docker Machine设置本地Docker主机
- en: Launching Docker hosts in the cloud
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云中启动Docker主机
- en: Using other base operating systems
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用其他基本操作系统
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: As in previous chapters, we will continue to use our local Docker installations.
    Again, the screenshots in this chapter will be from my preferred operating system,
    macOS.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前的章节一样，我们将继续使用我们的本地Docker安装。同样，在本章中的截图将来自我首选的操作系统macOS。
- en: We will be looking at how we can use Docker Machine to launch Docker-based virtual
    machines locally using VirtualBox as well as in public clouds, so you will need
    an account with Digital Ocean if you would like to follow along with the example
    in this chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看看如何使用Docker Machine在本地使用VirtualBox启动基于Docker的虚拟机，以及在公共云中使用，因此，如果您想要在本章中的示例中跟随，您将需要一个Digital
    Ocean账户。
- en: As before, the Docker commands we will be running will work on all three of
    the operating systems on which we have installed Docker so far. However, some
    of the supporting commands, which will be few and far between, may only apply
    to macOS, and Linux-based operating systems.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前一样，我们将在迄今为止安装了Docker的三个操作系统上运行Docker命令。然而，一些支持命令可能只适用于macOS和基于Linux的操作系统。
- en: 'Check out the following video to see the Code in Action:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 观看以下视频以查看代码的实际操作：
- en: '[http://bit.ly/2Ansb5v](http://bit.ly/2Ansb5v)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://bit.ly/2Ansb5v](http://bit.ly/2Ansb5v)'
- en: An introduction to Docker Machine
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker Machine简介
- en: Before we roll our sleeves up and get stuck in with Docker Machine, we should
    take a moment to discuss what place it occupies in the overall Docker ecosystem.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们卷起袖子并开始使用Docker Machine之前，我们应该花点时间讨论它在整个Docker生态系统中的地位。
- en: Docker Machine's biggest strength is that it provides a consistent interface
    to several public cloud providers, such as Amazon Web Services, DigitalOcean,
    Microsoft Azure, and Google Cloud, as well as self-hosted virtual machine/cloud
    platforms, including OpenStack, and VMware vSphere. Finally, the following locally-hosted
    hypervisors are supported, such as Oracle VirtualBox and VMware Workstation or
    Fusion.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Machine的最大优势在于它为多个公共云提供了一致的接口，例如亚马逊网络服务、DigitalOcean、微软Azure和谷歌云，以及自托管的虚拟机/云平台，包括OpenStack和VMware
    vSphere。最后，它还支持以下本地托管的虚拟化平台，如Oracle VirtualBox和VMware Workstation或Fusion。
- en: Being able to target all of these technologies using a single command with minimal
    user interaction is a very big time saver if you need to quickly access a Docker
    host in Amazon Web Services one day and then DigitialOcean the next—you know you
    are going to get a consistent experience.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 能够使用单个命令以最少的用户交互来针对所有这些技术是一个非常大的时间节省器，如果你需要快速访问亚马逊网络服务的Docker主机，然后第二天又需要访问DigitialOcean，你知道你将获得一致的体验。
- en: 'As it is a command-line tool, it is also very easy to pass instructions to
    colleagues or even script the launch and tear down on Docker hosts: imagine starting
    work with your environment built fresh for you each morning and then, to save
    costs, it is torn down each evening.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是一个命令行工具，因此非常容易向同事传达指令，甚至可以对Docker主机的启动和关闭进行脚本化：想象一下，每天早上开始工作时，您的环境都是新建的，然后为了节省成本，每天晚上都会被关闭。
- en: Deploying local Docker hosts with Docker Machine
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Docker Machine部署本地Docker主机
- en: Before we journey out into the cloud, we are going to look at the basics of
    Docker Machine locally by launching it, using Oracle VirtualBox to provide the
    virtual machine.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入云之前，我们将通过启动Oracle VirtualBox来查看Docker Machine的基础知识，以提供虚拟机。
- en: VirtualBox is a free virtualization product from Oracle. It allows you to install
    virtual machines across many different platforms and CPU types. Download and install
    VirtualBox from [https://www.virtualbox.org/wiki/Downloads/](https://www.virtualbox.org/wiki/Downloads/).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox是Oracle提供的免费虚拟化产品。它允许您在许多不同的平台和CPU类型上安装虚拟机。从[https://www.virtualbox.org/wiki/Downloads/](https://www.virtualbox.org/wiki/Downloads/)下载并安装VirtualBox。
- en: 'To launch the machine, all you need to do is run the following command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动虚拟机，您只需要运行以下命令：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will start the deployment, during which you will get a list of tasks that
    Docker Machine is running. To launch your Docker host, each host launched with
    Docker Machine goes through the same steps.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动部署过程，期间您将获得Docker Machine正在运行的任务列表。对于每个使用Docker Machine启动的Docker主机，都会经历相同的步骤。
- en: 'First of all, Docker Machine runs a few basic checks, such as confirming that
    VirtualBox is installed, and creating certificates and a directory structure in
    which to store all of its files and virtual machines:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，Docker Machine运行一些基本检查，例如确认VirtualBox是否已安装，并创建证书和目录结构，用于存储所有文件和虚拟机：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'It then checks for the presence of the image it will use for the virtual machine.
    If it is not there, the image will be downloaded:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后检查将用于虚拟机的镜像是否存在。如果不存在，将下载该镜像：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the checks have passed, it creates the virtual machine using the selected
    driver:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦检查通过，它将使用所选的驱动程序创建虚拟机：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As you can see, Docker Machine creates a unique SSH key for the virtual machine.
    This means that you will be able to access the virtual machine over SSH, but more
    on that later. Once the virtual machine has booted, Docker Machine then makes
    a connection to the virtual machine:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，Docker Machine为虚拟机创建了一个唯一的SSH密钥。这意味着您将能够通过SSH访问虚拟机，但稍后会详细介绍。虚拟机启动后，Docker
    Machine会连接到虚拟机：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As you can see, Docker Machine detects the operating system being used and
    chooses the appropriate bootstrap script to deploy Docker. Once Docker is installed,
    Docker Machine generates and shares certificates between your local host and the
    Docker host. It then configures the remote Docker installation for certificate
    authentication, meaning that your local client can connect to and interact with
    the remote Docker server:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，Docker Machine会检测正在使用的操作系统，并选择适当的引导脚本来部署Docker。一旦安装了Docker，Docker Machine会在本地主机和Docker主机之间生成和共享证书。然后，它会为证书认证配置远程Docker安装，这意味着您的本地客户端可以连接并与远程Docker服务器进行交互：
- en: 'Once Docker is installed, Docker Machine generates and shares certificates
    between your local host and the Docker host. It then configures the remote Docker
    installation for certificate authentication, meaning that your local client can
    connect to and interact with the remote Docker server:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了Docker，Docker Machine会在本地主机和Docker主机之间生成和共享证书。然后，它会为证书认证配置远程Docker安装，这意味着您的本地客户端可以连接并与远程Docker服务器进行交互：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Finally, it checks whether your local Docker client can make the remote connection
    and completes the task by giving you instructions on how to configure your local
    client to the newly launched Docker host.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它检查您的本地Docker客户端是否可以进行远程连接，并通过提供有关如何配置本地客户端以连接新启动的Docker主机的说明来完成任务。
- en: 'If you open VirtualBox, you should be able to see your new virtual machine:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打开VirtualBox，您应该能够看到您的新虚拟机：
- en: '![](Images/e31b049f-31be-45cc-9084-ac9b2ab29006.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/e31b049f-31be-45cc-9084-ac9b2ab29006.png)'
- en: 'Next, we need to configure our local Docker client to connect to the newly
    launched Docker host; as already mentioned in the output of launching the host,
    running the following command will show you how to make the connection:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要配置本地Docker客户端以连接到新启动的Docker主机；如在启动主机的输出中已经提到的，运行以下命令将向您显示如何进行连接：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This command returns the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令返回以下内容：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This overrides the local Docker installation by giving the IP address and port
    number of the newly launched Docker host as well as the path to the certificates
    used for authentication. At the end of the output, it gives you a command to run
    and to configure your terminal session in order to make the connection.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这将通过提供新启动的Docker主机的IP地址和端口号以及用于身份验证的证书路径来覆盖本地Docker安装。在输出的末尾，它会给出一个命令来运行并配置您的终端会话，以便进行连接。
- en: 'Before we run the command, let''s run `docker version` to get information on
    the current setup:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行该命令之前，让我们运行`docker version`以获取有关当前设置的信息：
- en: '![](Images/68b803b8-d173-47f2-8575-63ec407bd92a.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/68b803b8-d173-47f2-8575-63ec407bd92a.png)'
- en: 'This is basically the Docker for Mac installation I am running. Running the
    following command and then `docker version` again should show some changes to
    the server:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上是我正在运行的Docker for Mac安装。运行以下命令，然后再次运行`docker version`应该会显示服务器的一些更改：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output of the command is given here:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的输出如下：
- en: '![](Images/5f64477c-35a8-4f7f-abe1-54bed7e4abe9.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/5f64477c-35a8-4f7f-abe1-54bed7e4abe9.png)'
- en: As you can see, the server launched by Docker Machine is pretty much in line
    with what we have installed locally; in fact, the only difference is the build
    time. As you can see, the Docker Engine binary on my Docker for Mac installation
    was built one minute after the Docker Machine version.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，Docker Machine启动的服务器基本上与我们在本地安装的内容一致；实际上，唯一的区别是构建时间。如您所见，我在Docker for
    Mac安装中的Docker Engine二进制文件是在Docker Machine版本之后一分钟构建的。
- en: From here, we can interact with the Docker host in the same way as if it were
    a local Docker installation. Before we move on to launching Docker hosts in the
    cloud, there are a few other basic Docker Machine commands to cover.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，我们可以以与本地Docker安装相同的方式与Docker主机进行交互。在继续在云中启动Docker主机之前，还有一些其他基本的Docker Machine命令需要介绍。
- en: 'The first lists the currently configured Docker hosts:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 首先列出当前配置的Docker主机：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output of the command is given here:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的输出如下：
- en: '![](Images/172d6b76-17f2-4e7b-84ec-a9a7d2155fb1.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/172d6b76-17f2-4e7b-84ec-a9a7d2155fb1.png)'
- en: As you can see, it lists the details on the machine name, the driver used and
    the Docker endpoint URL, as well as the version of Docker the hosts are running.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，它列出了机器名称、使用的驱动程序和Docker端点URL的详细信息，以及主机正在运行的Docker版本。
- en: You will also notice that there is an `*` in the `ACTIVE` column; this indicates
    which Docker host your local client is currently configured to interact with.
    You can also find out the active machine by running `docker-machine active`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会注意到`ACTIVE`列中有一个`*`；这表示您的本地客户端当前配置为与之交互的Docker主机。您还可以通过运行`docker-machine
    active`来找出活动的机器。
- en: 'The next command connects you to the Docker host using SSH:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的命令使用SSH连接到Docker主机：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output of the command is given here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的输出如下：
- en: '![](Images/d13ebe1b-2e6a-468b-8155-44c1e1c2505d.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/d13ebe1b-2e6a-468b-8155-44c1e1c2505d.png)'
- en: 'This is useful if you need to install additional software or configuration
    outside of Docker Machine. It is also useful if you need to look at logs and so
    on, as you can exit the remote shell by running `exit`. You can find out the IP
    address of your Docker host by running the following command once back on your
    local machine:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要在Docker Machine之外安装其他软件或配置，则这很有用。如果您需要查看日志等，也很有用，因为您可以通过运行`exit`退出远程shell。一旦回到本地机器上，您可以通过运行以下命令找到Docker主机的IP地址：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We will be using this a lot later in the chapter. There are also commands for
    establishing more details about your Docker host:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面经常使用这个。还有一些命令可以获取有关Docker主机的更多详细信息：
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, there are also commands to `stop`, `start`, `restart`, and remove
    your Docker host. Use the final command to remove your locally launched host:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有一些命令可以`stop`，`start`，`restart`和删除您的Docker主机。使用最后一个命令来删除您本地启动的主机：
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Running the `docker-machine rm` command will prompt you to determine whether
    you really want to remove the instance:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`docker-machine rm`命令将提示您确定是否真的要删除实例：
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now that we have had a very quick rundown of the basics, let's try something
    more adventurous.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经快速了解了基础知识，让我们尝试一些更有冒险精神的东西。
- en: Launching Docker hosts in the cloud
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云中启动Docker主机
- en: In this section, we are going to take a look at just one of the public cloud
    drivers supported by Docker Machine. As already mentioned, there are plenty available,
    but part of the appeal of Docker Machine is that it offers consistent experiences,
    so there are not too many differences between the drivers.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将只看一下Docker Machine支持的公共云驱动程序之一。如前所述，有很多可用的驱动程序，但Docker Machine的吸引力之一是它提供一致的体验，因此驱动程序之间的差异不会太大。
- en: We are going to be launching a Docker host in DigitalOcean using Docker Machine.
    The only thing we need to do this is an API access token. Rather than explaining
    how to generate one here, you can follow the instructions at [https://www.digitalocean.com/help/api/](https://www.digitalocean.com/help/api/).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Docker Machine在DigitalOcean中启动一个Docker主机。我们唯一需要的是一个API访问令牌。而不是在这里解释如何生成一个，您可以按照[https://www.digitalocean.com/help/api/](https://www.digitalocean.com/help/api/)上的说明进行操作。
- en: Launching a Docker host using the API token will incur a cost; ensure you keep
    track of the Docker hosts you launch. Details on DigitalOcean's pricing can be
    found at [https://www.digitalocean.com/pricing/](https://www.digitalocean.com/pricing/).
    Also, keep your API token secret as it could be used to gain unauthorized access
    to your account. All of the tokens used in this chapter have been revoked.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用API令牌启动Docker主机将产生费用；确保您跟踪您启动的Docker主机。有关DigitalOcean的定价详情，请访问[https://www.digitalocean.com/pricing/](https://www.digitalocean.com/pricing/)。此外，保持您的API令牌秘密，因为它可能被用来未经授权地访问您的帐户。本章中使用的所有令牌都已被撤销。
- en: 'The first we are going to do is set our token as an environment variable so
    we don''t have to keep using it. To do this, run the following command, making
    sure you replace the API token with your own:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们要做的是将我们的令牌设置为环境变量，这样我们就不必一直使用它。要做到这一点，请运行以下命令，确保您用自己的API令牌替换API令牌：
- en: '[PRE15]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Due to the additional flags that we need to pass to the Docker Machine command,
    I will be using `\` to split the command across multiple lines to make it more
    readable.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们需要传递给Docker Machine命令的额外标志，我将使用`\`来将命令分割成多行，以使其更易读。
- en: 'To launch a Docker host called `docker-digtialocean`, we need to run the following
    command:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动名为`docker-digtialocean`的Docker主机，我们需要运行以下命令：
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'As the Docker host is a remote machine, it will take a little while to launch,
    configure, and be accessible. As you can see from the following output, there
    are also a few changes to how Docker Machine bootstraps the Docker host:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Docker 主机是远程机器，它将需要一些时间来启动、配置和访问。如您从以下输出中所见，Docker Machine 启动 Docker 主机的方式也有一些变化：
- en: '[PRE17]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once launched, you should be able to see the Docker host in your DigitalOcean
    control panel:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 启动后，您应该能够在 DigitalOcean 控制面板中看到 Docker 主机：
- en: '![](Images/bfffcab0-e5f0-466c-ad23-16bee375745f.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/bfffcab0-e5f0-466c-ad23-16bee375745f.png)'
- en: 'Reconfigure your local client to connect to the remote host by running the
    following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令重新配置本地客户端以连接到远程主机：
- en: '[PRE18]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Also, you can run `docker version` and `docker-machine inspect docker-digitalocean`
    to find out more information about the Docker host.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以运行 `docker version` 和 `docker-machine inspect docker-digitalocean` 来获取有关
    Docker 主机的更多信息。
- en: 'Finally, running `docker-machine ssh docker-digitalocean` will SSH you into
    the host. As you can see from the following output, and also from the output when
    you first launched the Docker host, there is a difference in the operating system
    used:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行 `docker-machine ssh docker-digitalocean` 将使您通过 SSH 进入主机。如您从以下输出中所见，以及您首次启动
    Docker 主机时的输出中，所使用的操作系统有所不同：
- en: '![](Images/cb1e120a-b732-47be-a345-353509316d83.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/cb1e120a-b732-47be-a345-353509316d83.png)'
- en: 'You can exit the remote shell by running `exit`. As you can see, we didn''t
    have to tell Docker Machine which operating system to use, the size of the Docker
    host, or even where to launch it. That is because each driver has some pretty
    sound defaults. Adding these defaults to our command makes it look like the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行 `exit` 退出远程 shell。正如您所见，我们不必告诉 Docker Machine要使用哪种操作系统，Docker 主机的大小，甚至在哪里启动它。这是因为每个驱动程序都有一些相当合理的默认值。将这些默认值添加到我们的命令中，使其看起来像以下内容：
- en: '[PRE19]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'As you can see, there is scope for you to customize the size, region, and operating
    system, and even the network your Docker host is launched with. Let''s say we
    wanted to change the operating system and the size of the droplet. In this instance,
    we can run the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，您可以自定义 Docker 主机的大小、区域和操作系统，甚至是启动 Docker 主机的网络。假设我们想要更改操作系统和 droplet 的大小。在这种情况下，我们可以运行以下命令：
- en: '[PRE20]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'As you can see in the DigitalOcean control panel, this launches a machine that
    looks like the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在 DigitalOcean 控制面板中所见，这将启动一个看起来像以下内容的机器：
- en: '![](Images/766a16c6-50f5-4439-b972-9aa69d25de4b.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/766a16c6-50f5-4439-b972-9aa69d25de4b.png)'
- en: 'You can remove the DigitalOcean Docker host by running the following command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行以下命令删除 DigitalOcean Docker 主机：
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Using other base operating systems
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用其他基本操作系统
- en: You don't have to use the default operating systems with Docker Machine; it
    does come with provisioners for other base operating systems, including ones that
    are geared toward running containers. Before we finish the chapter, we are going
    to take a look at launching one of these, CoreOS.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您不必使用 Docker Machine 的默认操作系统；它确实提供了其他基本操作系统的配置程序，包括专门用于运行容器的操作系统。在完成本章之前，我们将看一下如何启动其中一个，CoreOS。
- en: The distribution we are going to look at has just enough of an operating system
    to run a kernel, networking stack, and containers, just like Docker's own MobyOS,
    which is used as the base for Docker for Mac and Docker for Windows.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要查看的发行版刚好有足够的操作系统来运行内核、网络堆栈和容器，就像 Docker 自己的 MobyOS 一样，它被用作 Docker for Mac
    和 Docker for Windows 的基础。
- en: While CoreOS supports its own container runtime, called RKT (pronounced Rocket),
    it also ships with Docker. However, as we will see, the version of Docker currently
    shipping with the stable version of CoreOS is a little out of date.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然CoreOS支持自己的容器运行时，称为RKT（发音为Rocket），但它也附带了Docker。然而，正如我们将看到的，目前与CoreOS稳定版本一起提供的Docker版本有点过时。
- en: 'To launch the DigitalOcean-managed `coreos-stable` version, run the following
    command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动DigitalOcean管理的`coreos-stable`版本，请运行以下命令：
- en: '[PRE22]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'As with launching our other Docker hosts on public clouds, the output is pretty
    much the same. You will notice that Docker Machine uses the CoreOS provisioner:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 与在公共云上启动其他Docker主机一样，输出基本相同。您会注意到Docker Machine使用CoreOS提供程序：
- en: '[PRE23]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Once launched, you can run the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启动，您可以运行以下命令：
- en: '[PRE24]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This will return the content of the `release` file:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回`release`文件的内容：
- en: '[PRE25]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Running the following will show you more information on the version of Docker
    that is running on the CoreOS host:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将显示有关在CoreOS主机上运行的Docker版本的更多信息：
- en: '[PRE26]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You can see this from the following output; also, as already mentioned, it
    is behind the current release:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从以下输出中看到这一点；另外，正如已经提到的，它落后于当前版本：
- en: '![](Images/1717210e-d830-4cab-bb21-092e16c042fc.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/1717210e-d830-4cab-bb21-092e16c042fc.png)'
- en: 'This means that not all of the commands we are using in this book may work.
    To remove the CoreOS host, run the following command:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着本书中使用的并非所有命令都能正常工作。要删除CoreOS主机，请运行以下命令：
- en: '[PRE27]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Summary
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at how to use Docker Machine to create the Docker
    hosts locally on VirtualBox and reviewed the commands you can use to both interact
    with and manage your Docker Machine-launched Docker hosts.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了如何使用Docker Machine在VirtualBox上本地创建Docker主机，并回顾了您可以使用的命令来交互和管理由Docker
    Machine启动的Docker主机。
- en: We then looked at how to use Docker Machine to deploy Docker hosts to your cloud
    environments, namely DigitalOcean. Finally, we took a very quick look at how to
    launch a different container-optimized Linux operating system, which was CoreOS.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们看了如何使用Docker Machine在云环境中部署Docker主机，即DigitalOcean。最后，我们快速看了如何启动不同的容器优化Linux操作系统，即CoreOS。
- en: I am sure you will agree that using Docker Machine made running these tasks,
    which typically have very different approaches, a very consistent experience,
    and which, in the long run, will save a lot of time as well as explaining.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信您会同意，使用Docker Machine来运行这些任务，通常具有非常不同的方法，会带来非常一致的体验，并且从长远来看，也将节省大量时间并解释清楚。
- en: In the next chapter, we are going to move away from interacting with single
    Docker hosts to launching and running a Docker Swarm cluster.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将不再与单个Docker主机进行交互，而是启动和运行Docker Swarm集群。
- en: Questions
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which flag, when running `docker-machine create`, lets you define which service
    or provider Docker Machine uses to launch your Docker host?
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行`docker-machine create`时，哪个标志可以让您定义Docker Machine用于启动Docker主机的服务或提供程序？
- en: 'True or false: Running `docker-machine env my-host` will reconfigure you local
    Docker client to interact with `my-host`?'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假：运行`docker-machine env my-host`将重新配置本地Docker客户端以与`my-host`进行交互？
- en: Explain the basic principle behind Docker Machine.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释Docker Machine背后的基本原理。
- en: Further reading
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'For information on the various platforms supported by Docker Machine, refer
    to the following:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Docker Machine支持的各种平台的信息，请参考以下内容：
- en: 'Amazon Web Services: [https://aws.amazon.com/](https://aws.amazon.com/)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊网络服务：[https://aws.amazon.com/](https://aws.amazon.com/)
- en: 'Microsoft Azure: [https://azure.microsoft.com/](https://azure.microsoft.com/)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Azure：[https://azure.microsoft.com/](https://azure.microsoft.com/)
- en: 'DigitalOcean: [https://www.digitalocean.com/](https://www.digitalocean.com/)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DigitalOcean：[https://www.digitalocean.com/](https://www.digitalocean.com/)
- en: 'Exoscale: [https://www.exoscale.ch/](https://www.exoscale.ch/)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Exoscale: [https://www.exoscale.ch/](https://www.exoscale.ch/)'
- en: 'Google Compute Engine: [https://cloud.google.com/](https://cloud.google.com/)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Compute Engine: [https://cloud.google.com/](https://cloud.google.com/)'
- en: 'Rackspace: [https://www.rackspace.com/](https://www.rackspace.com/)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Rackspace: [https://www.rackspace.com/](https://www.rackspace.com/)'
- en: 'IBM SoftLayer: [https://www.softlayer.com/](https://www.softlayer.com/)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'IBM SoftLayer: [https://www.softlayer.com/](https://www.softlayer.com/)'
- en: 'Microsoft Hyper-V: [https://www.microsoft.com/en-gb/cloud-platform/server-virtualization/](https://www.microsoft.com/en-gb/cloud-platform/server-virtualization/)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '微软Hyper-V: [https://www.microsoft.com/en-gb/cloud-platform/server-virtualization/](https://www.microsoft.com/en-gb/cloud-platform/server-virtualization/)'
- en: 'OpenStack: [https://www.openstack.org/](https://www.openstack.org/)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'OpenStack: [https://www.openstack.org/](https://www.openstack.org/)'
- en: 'VMware vSphere: [https://www.vmware.com/uk/products/vsphere.html](https://www.vmware.com/uk/products/vsphere.html)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'VMware vSphere: [https://www.vmware.com/uk/products/vsphere.html](https://www.vmware.com/uk/products/vsphere.html)'
- en: 'Oracle VirtualBox: [https://www.virtualbox.org/](https://www.virtualbox.org/)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Oracle VirtualBox: [https://www.virtualbox.org/](https://www.virtualbox.org/)'
- en: 'VMware Fusion: [https://www.vmware.com/uk/products/fusion.html](https://www.vmware.com/uk/products/fusion.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'VMware Fusion: [https://www.vmware.com/uk/products/fusion.html](https://www.vmware.com/uk/products/fusion.html)'
- en: 'VMware Workstation: [https://www.vmware.com/uk/products/workstation.html](https://www.vmware.com/uk/products/workstation.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'VMware Workstation: [https://www.vmware.com/uk/products/workstation.html](https://www.vmware.com/uk/products/workstation.html)'
- en: CoreOS: [https://coreos.com/](https://coreos.com/)
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CoreOS: [https://coreos.com/](https://coreos.com/)'
