- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: JavaScript has emerged as one of the most robust and versatile programming language
    around. Modern JavaScript embraces a vast array of time-tested and cutting edge
    features. Several of these features are slowly giving shape to the next generation
    of web and server platforms. ES6 introduces very important language constructs,
    such as promises, classes, arrow functions, and several, much anticipated features.
    This book takes a detailed look at the language constructs and their practical
    uses. This book doesn't assume any prior knowledge of JavaScript and works from
    the ground up to give you a thorough understanding of the language. People who
    know the language will still find it useful and informative. For people who already
    know JavaScript and are familiar with ES5 syntax, this book will be a very useful
    primer for ES6 features.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript已经成为最强大和多功能的编程语言之一。现代JavaScript包含了大量经过时间考验和尖端的特性。其中一些特性正在慢慢塑造下一代Web和服务器平台。ES6引入了非常重要的语言构造，如promises、classes、箭头函数等，以及其他备受期待的特性。本书详细介绍了语言构造及其实际用途。本书不假设读者有任何JavaScript的先验知识，从基础开始全面讲解语言。了解该语言的人仍会发现它有用和信息丰富。对于已经了解JavaScript并熟悉ES5语法的人来说，本书将是ES6特性的非常有用的入门读物。
- en: What this book covers
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Object-Oriented JavaScript"), *Object-Oriented
    JavaScript*, talks briefly about the history, present, and future of JavaScript,
    and then moves on to explore the basics of object-oriented programming (OOP) in
    general. You will then learn how to set up your training environment (Firebug)
    in order to dive into the language on your own, using the book examples as a base.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章 面向对象的JavaScript"), *面向对象的JavaScript*，简要介绍了JavaScript的历史、现状和未来，然后继续探讨了面向对象编程（OOP）的基础知识。然后，您将学习如何设置训练环境（Firebug），以便根据书中的示例自己深入学习语言。'
- en: '[Chapter 2](ch02.html "Chapter 2. Primitive Data Types, Arrays, Loops, and
    Conditions"), *Primitive Data Types, Arrays, Loops, and Conditions*, discusses
    the language basics-variables, data types, primitive data types, arrays, loops,
    and conditionals.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章 原始数据类型、数组、循环和条件"), *原始数据类型、数组、循环和条件*，讨论了语言基础-变量、数据类型、原始数据类型、数组、循环和条件。'
- en: '[Chapter 3](ch03.html "Chapter 3. Functions"), *Functions*, covers functions
    that JavaScript uses, and here you will learn to master them all. You will also
    learn about the scope of variables and JavaScript''s built-in functions. An interesting,
    but often misunderstood, feature of the language-closures-is demystified at the
    end of the chapter.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章 函数"), *函数*，涵盖了JavaScript使用的函数，您将学会掌握它们。您还将了解变量的作用域和JavaScript的内置函数。语言的一个有趣但经常被误解的特性-闭包-在本章末尾被揭开神秘面纱。'
- en: '[Chapter 4](ch04.html "Chapter 4. Objects"), *Objects*, talks about objects,
    how to work with properties and methods, and the various ways to create your objects.
    This chapter also talks about built-in objects such as Array, Function, Boolean,
    Number, and String.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章 对象"), *对象*，讨论了对象，如何处理属性和方法，以及创建对象的各种方式。本章还介绍了Array、Function、Boolean、Number和String等内置对象。'
- en: '[Chapter 5](ch05.html "Chapter 5. ES6 Iterators and Generators"), *ES6 Iterators
    and Generators*, introduces the most anticipated features of ES6, Iterators and
    Generators. With this knowledge, you will proceed to take a detailed look at the
    enhanced collections constructs.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章 ES6迭代器和生成器"), *ES6迭代器和生成器*，介绍了ES6最受期待的特性，迭代器和生成器。有了这些知识，您将进一步详细了解增强的集合构造。'
- en: '[Chapter 6](ch06.html "Chapter 6. Prototype"), *Prototype,* is dedicated to
    the all-important concept of prototypes in JavaScript. It also explains how the
    prototype chain works, hasOwnProperty(), and some gotchas of prototypes.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章 原型"), *原型*，专门讨论了JavaScript中重要的原型概念。它还解释了原型链的工作原理，hasOwnProperty()以及原型的一些陷阱。'
- en: '[Chapter 7](ch07.html "Chapter 7. Inheritance"), *Inheritance,* discusses how
    inheritance works. This chapter also talks about a method to create subclasses
    like other classic languages.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章 继承"), *继承*，讨论了继承的工作原理。本章还介绍了一种创建子类的方法，就像其他经典语言一样。'
- en: '[Chapter 8](ch08.html "Chapter 8. Classes and Modules"), *Classes and Modules*,
    shows that ES6 introduces important syntactical features that makes it easier
    to write classical object-oriented programming constructs. ES6 class syntax wraps
    the slightly complex syntax of ES5\. ES6 also has full language support for modules.
    This chapter goes into the details of the classes and module constructs introduced
    in ES6.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章 类和模块"), *类和模块*，展示了ES6引入的重要语法特性，使得编写经典面向对象编程构造更加容易。ES6类语法包装了ES5略微复杂的语法。ES6还完全支持模块的语言。本章详细介绍了ES6中引入的类和模块构造。'
- en: '[Chapter 9](ch09.html "Chapter 9. Promises and Proxies"), *Promises and Proxies*,
    explains that JavaScript has always been a language with strong support for asynchronous
    programming. Up until ES5, writing asynchronous programs meant you needed to rely
    on callbacks-sometimes resulting in callback hell.  ES6 promises are a much-awaited
    feature introduced in the language. Promises provide a much cleaner way to write
    asynchronous programs in ES6\. Proxies are used to define custom behavior to some
    of the fundamental operations. This chapter looks at practical uses of both promises
    and proxies in ES6.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章 Promises and Proxies"), *Promises and Proxies*，解释了JavaScript一直以来都是一种支持异步编程的语言。直到ES5，编写异步程序意味着您需要依赖回调-有时会导致回调地狱。ES6的promises是语言中引入的一个备受期待的特性。Promises在ES6中提供了一种更清晰的方式来编写异步程序。Proxies用于为一些基本操作定义自定义行为。本章讨论了ES6中promises和proxies的实际用途。'
- en: '[Chapter 10](ch10.html "Chapter 10. The Browser Environment"), *The Browser
    Environment*, is dedicated to browsers. This chapter also covers BOM (Browser
    Object Model), DOM (W3C''s Document Object Model), browser events, and AJAX.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，浏览器环境，专门讨论浏览器。本章还涵盖了BOM（浏览器对象模型）、DOM（W3C的文档对象模型）、浏览器事件和AJAX。
- en: '[Chapter 11](ch11.html "Chapter 11. Coding and Design Patterns"), *Coding and
    Design Patterns*, dives into various unique JavaScript coding patterns, as well
    as several language-independent design patterns, translated to JavaScript from
    the Book of Four, the most influential work of software design patterns. This
    chapter also discusses JSON.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，编码和设计模式，深入探讨了各种独特的JavaScript编码模式，以及从《四人帮》中翻译成JavaScript的几种与语言无关的设计模式。本章还讨论了JSON。
- en: '[Chapter 12](ch12.html "Chapter 12. Testing and Debugging"), *Testing and Debugging*,
    talks about how Modern JavaScript is equipped with tools that support Test Driven
    Development and Behavior Driven Development. Jasmine is one of the most popular
    tools available at the moment. This chapter discusses TDD and BDD using Jasmine
    as the framework.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，测试和调试，讨论了现代JavaScript配备了支持测试驱动开发和行为驱动开发的工具。Jasmine是目前最流行的工具之一。本章讨论了使用Jasmine作为框架进行TDD和BDD。
- en: '[Chapter 13](ch13.html "Chapter 13. Reactive Programming and React"), *Reactive
    Programming and React*, explains that with the advent of ES6, several radical
    ideas are taking shape. Reactive programming takes a very different approach to
    how we manage change of states using data flows. React, however, is a framework
    focusing on the View part of MVC. This chapter discusses these two ideas.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，响应式编程和React，解释了随着ES6的出现，一些激进的想法正在形成。响应式编程以非常不同的方式处理我们使用数据流管理状态变化。而React是一个专注于MVC视图部分的框架。本章讨论了这两个想法。
- en: '[Appendix A](apa.html "Appendix A. Reserved Words"), *Reserved Words*, lists
    the reserved words in JavaScript.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 附录A，保留字，列出了JavaScript中的保留字。
- en: '[Appendix B](apb.html "Appendix B. Built-in Functions"), *Built-in Functions*,
    is a reference of built-in JavaScript functions together with sample uses.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 附录B，内置函数，是内置JavaScript函数的参考，以及示例用法。
- en: '[Appendix C](apc.html "Appendix C. Built-in Objects"), *Built-in Objects*,
    is a reference that provides details and examples of the use of every method and
    property of every built-in object in JavaScript.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 附录C，内置对象，是一个参考，提供了JavaScript中每个内置对象的每个方法和属性的使用细节和示例。
- en: '[Appendix D](apd.html "Appendix D. Regular Expressions"), *Regular Expressions*,
    is a regular expressions pattern reference.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 附录D，正则表达式，是一个正则表达式模式参考。
- en: '[Appendix E](ape.html "Appendix E. Answers to Exercise Questions"), *Answers
    to Exercise Questions*, has solutions for all the exercises mentioned at the end
    of the chapters.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 附录E，练习题答案，提供了章节末尾提到的所有练习的解决方案。
- en: What you need for this book
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需内容
- en: You need a modern browser-Google Chrome or Firefox are recommended, and an optional
    Node.js setup. Most of the code in this book can be executed in [http://babeljs.io/repl/](http://babeljs.io/repl/)
    or [http://jsbin.com/](http://jsbin.com/). To edit JavaScript, you can use any
    text editor of your choice.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个现代浏览器-推荐使用Google Chrome或Firefox，以及一个可选的Node.js设置。本书中的大部分代码可以在[http://babeljs.io/repl/](http://babeljs.io/repl/)或[http://jsbin.com/](http://jsbin.com/)中执行。要编辑JavaScript，可以使用任何您喜欢的文本编辑器。
- en: Who this book is for
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合谁
- en: This book is for anyone who is starting to learn JavaScript, or who knows JavaScript
    but isn't very good at the object-oriented part of it. This book can be a useful
    primer for ES6 if you are already familiar with the ES5 features of the language.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于刚开始学习JavaScript的人，或者懂JavaScript但不擅长面向对象部分的人。如果您已经熟悉语言的ES5特性，本书可以作为ES6的有用入门。
- en: Conventions
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现一些文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `Triangle` constructor takes three point objects and assigns them to `this.points`
    (its own collection of points)."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名显示如下："`Triangle`构造函数接受三个点对象并将它们分配给`this.points`（它自己的点集合）"。
- en: 'A block of code is set as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式书写：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "In order to bring up the console in Chrome or Safari, right-click anywhere
    on a page and select **Inspect Element** . The additional window that shows up
    is the Web Inspector feature. Select the **Console** tab, and you''re ready to
    go".'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要单词以粗体显示。例如，屏幕上看到的单词，比如菜单或对话框中的单词，会以这种形式出现："为了在Chrome或Safari中打开控制台，右键单击页面的任何位置，然后选择**检查元素**。弹出的额外窗口就是Web
    Inspector功能。选择**控制台**选项卡，然后就可以开始了"。
- en: Note
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会以这种形式出现在一个框中。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种形式出现。
