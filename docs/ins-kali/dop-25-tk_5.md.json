["```\n 1  cd k8s-specs\n 2\n 3  git pull\n```", "```\n 1  helm install \\\n 2      stable/prometheus-adapter \\\n 3      --name prometheus-adapter \\\n 4      --version v0.5.0 \\\n 5      --namespace metrics \\\n 6      --set image.tag=v0.5.0 \\\n 7      --set metricsRelistInterval=90s \\\n 8      --set prometheus.url=http://prometheus-server.metrics.svc \\\n 9      --set prometheus.port=80\n10\n11  kubectl -n metrics \\\n12      rollout status \\\n13      deployment prometheus-adapter\n```", "```\n 1  kubectl get --raw \\\n 2      \"/apis/custom.metrics.k8s.io/v1beta1\" \\\n 3      | jq \".\"\n```", "```\n{\n  \"kind\": \"APIResourceList\",\n  \"apiVersion\": \"v1\",\n  \"groupVersion\": \"custom.metrics.k8s.io/v1beta1\",\n  \"resources\": [\n    {\n      \"name\": \"namespaces/memory_max_usage_bytes\",\n      \"singularName\": \"\",\n      \"namespaced\": false,\n      \"kind\": \"MetricValueList\",\n      \"verbs\": [\n        \"get\"\n      ]\n    },\n    {\n      \"name\": \"jobs.batch/kube_deployment_spec_strategy_rollingupdate_max_unavailable\",\n      \"singularName\": \"\",\n      \"namespaced\": true,\n      \"kind\": \"MetricValueList\",\n      \"verbs\": [\n        \"get\"\n      ]\n    },\n    ...\n```", "```\n 1  GD5_ADDR=go-demo-5.$LB_IP.nip.io\n 2\n 3  helm install \\\n 4    https://github.com/vfarcic/go-demo-5/releases/download/\n    0.0.1/go-demo-5-0.0.1.tgz \\\n 5      --name go-demo-5 \\\n 6      --namespace go-demo-5 \\\n 7      --set ingress.host=$GD5_ADDR\n 8\n 9  kubectl -n go-demo-5 \\\n10      rollout status \\\n11      deployment go-demo-5\n```", "```\n 1  for i in {1..100}; do\n 2      curl \"http://$GD5_ADDR/demo/hello\"\n 3  done\n```", "```\n 1  kubectl get --raw \\\n 2      \"/apis/custom.metrics.k8s.io/v1beta1\" \\\n 3      | jq '.resources[]\n 4      | select(.name\n 5      | contains(\"nginx_ingress_controller_requests\"))'\n```", "```\n{\n  \"name\": \"ingresses.extensions/nginx_ingress_controller_requests\",\n  \"singularName\": \"\",\n  \"namespaced\": true,\n  \"kind\": \"MetricValueList\",\n  \"verbs\": [\n    \"get\"\n  ]\n}\n{\n  \"name\": \"jobs.batch/nginx_ingress_controller_requests\",\n  \"singularName\": \"\",\n  \"namespaced\": true,\n  \"kind\": \"MetricValueList\",\n  \"verbs\": [\n    \"get\"\n  ]\n}\n{\n  \"name\": \"namespaces/nginx_ingress_controller_requests\",\n  \"singularName\": \"\",\n  \"namespaced\": false,\n  \"kind\": \"MetricValueList\",\n  \"verbs\": [\n    \"get\"\n  ]\n}\n```", "```\n 1  kubectl get --raw \\\n 2      \"/apis/custom.metrics.k8s.io/v1beta1\" \\\n 3      | jq '.resources[]\n 4      | select(.name\n 5      | contains(\"http_server_resp_time_count\"))'\n```", "```\n 1  kubectl -n metrics \\\n 2      describe cm prometheus-adapter\n```", "```\n...\nrules:\n- seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n  seriesFilters: []\n  resources:\n    overrides:\n      namespace:\n        resource: namespace\n      pod_name:\n        resource: pod\n  name:\n    matches: ^container_(.*)_seconds_total$\n    as: \"\"\n  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[5m]))\n    by (<<.GroupBy>>)\n...\n```", "```\n 1  cat mon/prom-adapter-values-ing.yml\n```", "```\nimage:\n  tag: v0.5.0\nmetricsRelistInterval: 90s\nprometheus:\n  url: http://prometheus-server.metrics.svc\n  port: 80\nrules:\n  default: false\n  custom:\n  - seriesQuery: 'nginx_ingress_controller_requests'\n    resources:\n      overrides:\n        namespace: {resource: \"namespace\"}\n        ingress: {resource: \"ingress\"}\n    name:\n      as: \"http_req_per_second\"\n    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)'\n  - seriesQuery: 'nginx_ingress_controller_requests'\n    resources:\n      overrides:\n        namespace: {resource: \"namespace\"}\n        ingress: {resource: \"ingress\"}\n    name:\n      as: \"http_req_per_second_per_replica\"\n    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / sum(label_join(kube_deployment_status_replicas, \"ingress\", \",\", \"deployment\")) by (<<.GroupBy>>)'\n```", "```\n 1  helm upgrade prometheus-adapter \\\n 2      stable/prometheus-adapter \\\n 3      --version v0.5.0 \\\n 4      --namespace metrics \\\n 5      --values mon/prom-adapter-values-ing.yml\n 6\n 7  kubectl -n metrics \\\n 8      rollout status \\\n 9      deployment prometheus-adapter\n```", "```\n 1  kubectl -n metrics \\\n 2      describe cm prometheus-adapter\n```", "```\n...\nData\n====\nconfig.yaml:\n----\nrules:\n- metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)\n  name:\n    as: http_req_per_second\n  resources:\n    overrides:\n      ingress:\n        resource: ingress\n      namespace:\n        resource: namespace\n  seriesQuery: nginx_ingress_controller_requests\n- metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) /\n    sum(label_join(kube_deployment_status_replicas, \"ingress\", \",\", \"deployment\"))\n    by (<<.GroupBy>>)\n  name:\n    as: http_req_per_second_per_replica\n  resources:\n    overrides:\n      ingress:\n        resource: ingress\n      namespace:\n        resource: namespace\n  seriesQuery: nginx_ingress_controller_requests\n...\n```", "```\n 1  kubectl get --raw \\\n 2      \"/apis/custom.metrics.k8s.io/v1beta1\" \\\n 3      | jq \".\"\n```", "```\n{\n  \"kind\": \"APIResourceList\",\n  \"apiVersion\": \"v1\",\n  \"groupVersion\": \"custom.metrics.k8s.io/v1beta1\",\n  \"resources\": [\n    {\n      \"name\": \"namespaces/http_req_per_second_per_replica\",\n      \"singularName\": \"\",\n      \"namespaced\": false,\n      \"kind\": \"MetricValueList\",\n      \"verbs\": [\n        \"get\"\n      ]\n    },\n    {\n      \"name\": \"ingresses.extensions/http_req_per_second_per_replica\",\n      \"singularName\": \"\",\n      \"namespaced\": true,\n      \"kind\": \"MetricValueList\",\n      \"verbs\": [\n        \"get\"\n      ]\n    },\n    {\n      \"name\": \"ingresses.extensions/http_req_per_second\",\n      \"singularName\": \"\",\n      \"namespaced\": true,\n      \"kind\": \"MetricValueList\",\n      \"verbs\": [\n        \"get\"\n      ]\n    },\n    {\n      \"name\": \"namespaces/http_req_per_second\",\n      \"singularName\": \"\",\n      \"namespaced\": false,\n      \"kind\": \"MetricValueList\",\n      \"verbs\": [\n        \"get\"\n      ]\n    }\n  ]\n}\n```", "```\n 1  cat mon/go-demo-5-hpa-ing.yml\n```", "```\napiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: go-demo-5\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: go-demo-5\n  minReplicas: 3\n  maxReplicas: 10\n  metrics:\n  - type: Object\n    object:\n      metricName: http_req_per_second_per_replica\n      target:\n        kind: Namespace\n        name: go-demo-5\n      targetValue: 50m\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      apply -f mon/go-demo-5-hpa-ing.yml\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      describe hpa go-demo-5\n```", "```\n...\nMetrics:         ( current / target )\n  \"http_req_per_second_per_replica\" on Namespace/go-demo-5: 0 / 50m\nMin replicas:    3\nMax replicas:    10\nDeployment pods: 3 current / 3 desired\n...\n```", "```\n 1  for i in {1..100}; do\n 2      curl \"http://$GD5_ADDR/demo/hello\"\n 3  done\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      describe hpa go-demo-5\n```", "```\n...\nMetrics:                                                   ( current / target )\n  \"http_req_per_second_per_replica\" on Ingress/go-demo-5:  138m / 50m\nMin replicas:                                              3\nMax replicas:                                              10\nDeployment pods:                                           3 current / 6 desired\n...\nEvents:\n  ... Message\n  ... -------\n  ... New size: 6; reason: Ingress metric http_req_per_second_per_replica above target\n```", "```\n 1  kubectl -n go-demo-5 get pods\n```", "```\nNAME           READY STATUS  RESTARTS AGE\ngo-demo-5-db-0 2/2   Running 0        19m\ngo-demo-5-db-1 2/2   Running 0        19m\ngo-demo-5-db-2 2/2   Running 0        10m\ngo-demo-5-...  1/1   Running 2        19m\ngo-demo-5-...  1/1   Running 0        16s\ngo-demo-5-...  1/1   Running 2        19m\ngo-demo-5-...  1/1   Running 0        16s\ngo-demo-5-...  1/1   Running 2        19m\ngo-demo-5-...  1/1   Running 0        16s\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      describe hpa go-demo-5\n```", "```\n...\nMetrics:         ( current / target )\n  \"http_req_per_second_per_replica\" on Ingress/go-demo-5:  0 / 50m\nMin replicas:    3\nMax replicas:    10\nDeployment pods: 3 current / 3 desired\n...\nEvents:\n... Age   ... Message\n... ----  ... -------\n... 10m   ... New size: 6; reason: Ingress metric http_req_per_second_per_replica above target\n... 7m10s ... New size: 9; reason: Ingress metric http_req_per_second_per_replica above target\n... 2m9s  ... New size: 3; reason: All metrics below target\n```", "```\n 1  cat mon/prom-adapter-values-svc.yml\n```", "```\nimage:\n  tag: v0.5.0\nmetricsRelistInterval: 90s\nprometheus:\n  url: http://prometheus-server.metrics.svc\n  port: 80\nrules:\n  default: false\n  custom:\n  - seriesQuery: 'http_server_resp_time_count{kubernetes_namespace!=\"\",kubernetes_name!=\"\"}'\n    resources:\n      overrides:\n        kubernetes_namespace: {resource: \"namespace\"}\n        kubernetes_name: {resource: \"service\"}\n    name:\n      matches: \"^(.*)server_resp_time_count\"\n      as: \"${1}req_per_second_per_replica\"\n    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / count(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)'\n  - seriesQuery: 'nginx_ingress_controller_requests'\n    resources:\n      overrides:\n        namespace: {resource: \"namespace\"}\n        ingress: {resource: \"ingress\"}\n    name:\n      as: \"http_req_per_second_per_replica\"\n    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / sum(label_join(kube_deployment_status_replicas, \"ingress\", \",\", \"deployment\")) by (<<.GroupBy>>)'\n```", "```\n 1  helm upgrade -i prometheus-adapter \\\n 2      stable/prometheus-adapter \\\n 3      --version v0.5.0 \\\n 4      --namespace metrics \\\n 5      --values mon/prom-adapter-values-svc.yml\n 6\n 7  kubectl -n metrics \\\n 8      rollout status \\\n 9      deployment prometheus-adapter\n```", "```\n 1  kubectl get --raw \\\n 2      \"/apis/custom.metrics.k8s.io/v1beta1\" \\\n 3      | jq \".\"\n```", "```\n{\n  ...\n    {\n      \"name\": \"services/http_req_per_second_per_replica\",\n      ...\n    },\n    {\n      \"name\": \"namespaces/http_req_per_second_per_replica\",\n      ...\n    },\n    {\n      \"name\": \"ingresses.extensions/http_req_per_second_per_replica\",\n      ...\n```", "```\n 1  kubectl get --raw \\\n 2      \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/go-demo5\n    /services/*/http_req_per_second_per_replica\" \\\n 3       | jq .\n```", "```\n{\n  \"kind\": \"MetricValueList\",\n  \"apiVersion\": \"custom.metrics.k8s.io/v1beta1\",\n  \"metadata\": {\n    \"selfLink\": \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/go-demo-5/services/%2A/http_req_per_second_per_replica\"\n  },\n  \"items\": [\n    {\n      \"describedObject\": {\n        \"kind\": \"Service\",\n        \"namespace\": \"go-demo-5\",\n        \"name\": \"go-demo-5\",\n        \"apiVersion\": \"/v1\"\n      },\n      \"metricName\": \"http_req_per_second_per_replica\",\n      \"timestamp\": \"2018-10-27T23:49:58Z\",\n      \"value\": \"1130m\"\n    }\n  ]\n}\n```", "```\n 1  cat mon/go-demo-5-hpa-svc.yml\n```", "```\napiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: go-demo-5\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: go-demo-5\n  minReplicas: 3\n  maxReplicas: 10\n  metrics:\n  - type: Object\n    object:\n      metricName: http_req_per_second_per_replica\n      target:\n        kind: Service\n        name: go-demo-5\n       targetValue: 1500m\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      apply -f mon/go-demo-5-hpa-svc.yml\n 3\n 4  kubectl -n go-demo-5 \\\n 5      describe hpa go-demo-5\n```", "```\n...\nMetrics:                                                  ( current / target )\n  \"http_req_per_second_per_replica\" on Service/go-demo-5: 1100m / 1500m\n...\nDeployment pods:                                           3 current / 3 desired\n...\nEvents:\n  Type    Reason             Age    From                       Message\n  ----    ------             ----   ----                       -------\n  Normal  SuccessfulRescale  12m    horizontal-pod-autoscaler  New size: 6; reason: Ingress metric http_req_per_second_per_replica above target\n  Normal  SuccessfulRescale  9m20s  horizontal-pod-autoscaler  New size: 9; reason: Ingress metric http_req_per_second_per_replica above target\n  Normal  SuccessfulRescale  4m20s  horizontal-pod-autoscaler  New size: 3; reason: All metrics below target\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      run -it test \\\n 3      --image=debian \\\n 4      --restart=Never \\\n 5      --rm \\\n 6      -- bash\n```", "```\n 1  apt update\n 2\n 3  apt install -y curl\n```", "```\n 1  for i in {1..500}; do\n 2      curl \"http://go-demo-5:8080/demo/hello\"\n 3  done\n 4  \n 5  exit\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      describe hpa go-demo-5\n```", "```\n...\nReference:                                                Deployment/go-demo-5\nMetrics:                                                  ( current / target )\n  \"http_req_per_second_per_replica\" on Service/go-demo-5: 1794m / 1500m\nMin replicas:                                             3\nMax replicas:                                             10\nDeployment pods:                                          3 current / 4 desired\n...\nEvents:\n... Message\n... -------\n... New size: 6; reason: Ingress metric http_req_per_second_per_replica above target\n... New size: 9; reason: Ingress metric http_req_per_second_per_replica above target\n... New size: 3; reason: All metrics below target\n... New size: 4; reason: Service metric http_req_per_second_per_replica above target\n```", "```\n 1  kubectl -n go-demo-5 get pods\n```", "```\nNAME           READY STATUS  RESTARTS AGE\ngo-demo-5-db-0 2/2   Running 0        33m\ngo-demo-5-db-1 2/2   Running 0        32m\ngo-demo-5-db-2 2/2   Running 0        32m\ngo-demo-5-...  1/1   Running 2        33m\ngo-demo-5-...  1/1   Running 0        53s\ngo-demo-5-...  1/1   Running 2        33m\ngo-demo-5-...  1/1   Running 2        33m\n```", "```\n 1  cat mon/go-demo-5-hpa.yml\n```", "```\n...\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      targetAverageUtilization: 80\n  - type: Resource\n    resource:\n      name: memory\n      targetAverageUtilization: 80\n  - type: Object\n    object:\n      metricName: http_req_per_second_per_replica\n      target:\n        kind: Service\n        name: go-demo-5\n      targetValue: 1500m\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      apply -f mon/go-demo-5-hpa.yml\n```", "```\n 1  kubectl -n go-demo-5 \\\n 2      describe hpa go-demo-5\n```", "```\n...\nMetrics:                                                  ( current / target )\n  resource memory on pods  (as a percentage of request):  110% (5768533333m) / 80%\n  \"http_req_per_second_per_replica\" on Service/go-demo-5: 825m / 1500m\n  resource cpu on pods  (as a percentage of request):     20% (1m) / 80%\n...\nDeployment pods:                                          5 current / 5 desired\n...\nEvents:\n... Message\n... -------\n... New size: 6; reason: Ingress metric http_req_per_second_per_replica above target\n... New size: 9; reason: Ingress metric http_req_per_second_per_replica above target\n... New size: 4; reason: Service metric http_req_per_second_per_replica above target\n... New size: 3; reason: All metrics below target\n... New size: 5; reason: memory resource utilization (percentage of request) above target\n```", "```\n 1  helm delete go-demo-5 --purge\n 2\n 3  kubectl delete ns go-demo-5\n```"]