- en: Appendix D. Regular Expressions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录D. 正则表达式
- en: 'When you use regular expressions (discussed in [Chapter 4](ch04.html "Chapter 4. Objects"),
    *Objects*), you can match literal strings, for example:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用正则表达式（在[第4章](ch04.html "第4章。对象")中讨论，*对象*）时，您可以匹配文字字符串，例如：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'However, the true power of regular expressions comes from matching patterns,
    not literal strings. The following table describes the different syntax you can
    use in your patterns, and provides some examples of their use:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正则表达式的真正威力来自于匹配模式，而不是文字字符串。以下表格描述了您可以在模式中使用的不同语法，并提供了一些使用示例：
- en: '| **Pattern** | **Description** |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| **模式** | **描述** |'
- en: '| --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `[abc]` | Matches a class of characters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '| `[abc]` | 匹配一类字符：'
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '|'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `[a-z]` | A class of characters defined as a range. For example, [a-d] is
    the same as [abcd], [a-z] matches all lowercase characters, [a-zA-Z0-9_] matches
    all characters, numbers, and the underscore character:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '| `[a-z]` | 作为范围定义的一类字符。例如，[a-d]与[abcd]相同，[a-z]匹配所有小写字符，[a-zA-Z0-9_]匹配所有字符，数字和下划线字符：'
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '|'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `[^abc]` | Matches everything that is not matched by the class of characters:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '| `[^abc]` | 匹配不属于字符类的所有内容：'
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '|'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `a&#124;b` | Matches a or b. The pipe character means OR, and it can be used
    more than once:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '| `a&#124;b` | 匹配a或b。管道字符表示或，可以使用多次：'
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '|'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `a(?=b)` | Matches a only if followed by b:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '| `a(?=b)` | 只有在后面跟着b时才匹配a：'
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '|'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `a(?!b)` | Matches a only when not followed by b:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '| `a(?!b)` | 只有在后面不跟着b时才匹配a：'
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '|'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\` | Escape character used to help you match the special characters used
    in patterns as literals:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\` | 转义字符，用于帮助您匹配模式中用作文字的特殊字符：'
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '|'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\n``\r``\f``\t``\v` | New lineCarriage returnForm feedTabVertical tab |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `\n``\r``\f``\t``\v` | 换行符回车换行符制表符垂直制表符 |'
- en: '| `\s` | White space, or any of the previous five escape sequences:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\s` | 空格，或前面五个转义序列中的任何一个：'
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '|'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\S` | Opposite of the above; matches everything but white space. Same as
    [^\s]:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\S` | 与上面相反；匹配除空格之外的所有内容。与[^\s]相同：'
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '|'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\w` | Any letter, number, or underscore. Same as [A-Za-z0-9_]:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\w` | 任何字母，数字或下划线。与[A-Za-z0-9_]相同：'
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '|'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\W` | Opposite of `\w`:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\W` | `\w`的相反：'
- en: '[PRE11]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '|'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\d` | Matches a number, same as [0-9]:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\d` | 匹配数字，与[0-9]相同：'
- en: '[PRE12]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '|'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\D` | Opposite of `\d`; matches non-numbers, same as [^0-9] or [^\d]:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\D` | `\d`的相反；匹配非数字，与[^0-9]或[^\d]相同：'
- en: '[PRE13]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '|'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\b` | Matches a word boundary such as space or punctuation.Matching R or
    D followed by 2:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\b` | 匹配词边界，如空格或标点符号。匹配R或D后面跟着2：'
- en: '[PRE14]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Same as above but only at the end of a word:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与上面相同，但只在单词的末尾：
- en: '[PRE15]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Same pattern but the input has a dash, which is also an end of a word:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的模式，但输入中有一个破折号，这也是一个单词的结尾：
- en: '[PRE16]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '|'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\B` | The opposite of `\b`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\B` | `\b`的相反：'
- en: '[PRE17]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '|'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `[\b]` | Matches the backspace character. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `[\b]` | 匹配退格字符。 |'
- en: '| `\0` | The null character. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `\0` | 空字符。 |'
- en: '| `\u0000` | Matches a Unicode character, represented by a four-digit hexadecimal
    number:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\u0000` | 匹配Unicode字符，由四位十六进制数字表示：'
- en: '[PRE18]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '|'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `\x00` | Matches a character code represented by a two-digit hexadecimal
    number:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '| `\x00` | 匹配由两位十六进制数字表示的字符代码：'
- en: '[PRE19]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '|'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `^` | The beginning of the string to be matched. If you set the `m` modifier
    (multi-line), it matches the beginning of each line:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '| `^` | 要匹配的字符串的开头。如果设置了`m`修饰符（多行），则匹配每行的开头：'
- en: '[PRE20]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '|'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `$` | Matches the end of the input or, when using the multiline modifier,
    the end of each line:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '| `$` | 匹配输入的结尾，或者在使用多行修饰符时，匹配每行的结尾：'
- en: '[PRE21]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '|'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `.` | Matches any single character except for the new line and the line feed:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '| `.` | 匹配除换行符和换行符之外的任何单个字符：'
- en: '[PRE22]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '|'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `*` | Matches the preceding pattern if it occurs zero or more times. For
    example, `/.*/` will match anything including nothing (an empty input):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '| `*` | 如果出现零次或多次，则匹配前面的模式。例如，`/.*/`将匹配任何内容，包括空（空输入）：'
- en: '[PRE23]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Keep in mind that the pattern is "greedy", meaning it will match as much as
    possible:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，模式是“贪婪”的，这意味着它会尽可能多地匹配：
- en: '[PRE24]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '|'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `?` | Matches the preceding pattern if it occurs zero or one times:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '| `?` | 如果出现零次或一次，则匹配前面的模式：'
- en: '[PRE25]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '|'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `+` | Matches the preceding pattern if it occurs at least once (or more times):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '| `+` | 如果至少出现一次（或更多次），则匹配前面的模式：'
- en: '[PRE26]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '|'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `{n}` | Matches the preceding pattern if it occurs exactly n times:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '| `{n}` | 如果出现n次，则匹配前面的模式：'
- en: '[PRE27]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '|'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `{min,max}` | Matches the preceding pattern if it occurs between min and
    max number of times. You can omit max, which will mean no maximum, but only a
    minimum. You cannot omit min.An example where the input is "doodle" with the "o"
    repeated 10 times:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '| `{min,max}` | 如果出现在min和max次之间，则匹配前面的模式。您可以省略max，这将意味着没有最大值，但只有最小值。您不能省略min。输入为“doodle”，其中“o”重复了10次的示例：'
- en: '[PRE28]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '|'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `(pattern)` | When the pattern is in parentheses, it is remembered so that
    it can be used for replacements. These are also known as capturing patterns.The
    captured matches are available as $1, $2,... $9Matching all "r" occurrences and
    repeating them:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '| `(pattern)` | 当模式在括号中时，它会被记住，以便可以用于替换。这些也被称为捕获模式。捕获的匹配可用作$1，$2，... $9匹配所有“r”出现并重复它们：'
- en: '[PRE29]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Matching "re" and turning it to "er":'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 匹配“re”并将其变为“er”：
- en: '[PRE30]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '|'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `(?:pattern)` | Non-capturing pattern, not remembered and not available in
    $1, $2...Here''s an example of how "re" is matched, but the "r" is not remembered
    and the second pattern becomes $1:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '| `(?:pattern)` | 非捕获模式，不会被记住，也不会在$1，$2...中可用。以下是一个示例，说明如何匹配“re”，但不会记住“r”，第二个模式变为$1：'
- en: '[PRE31]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '|'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Make sure you pay attention when a special character can have two meanings,
    as is the case with `^`, `?`, and `\b`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当特殊字符有两种含义时，请确保您注意，就像`^`，`?`和`\b`一样。
