["```kt\nclass AppContainer(applicationContext:Context) {\n\u00a0\u00a0\u00a0\u00a0val myRepository: MyRepository\n\u00a0\u00a0\u00a0\u00a0init {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val retrofit =           Retrofit.Builder().baseUrl(\"https://google.com/\").build()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val myService=           retrofit.create<MyService>(MyService::class.java)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val database = Room.databaseBuilder(applicationContext,           MyDatabase::class.java, \"db\").build()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myRepository = MyRepositoryImpl(myService, database.myDao())\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\nclass MyApplication : Application() {\n\u00a0\u00a0\u00a0\u00a0lateinit var appContainer: AppContainer\n\u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0appContainer = AppContainer(this)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.... \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val myRepository = (application as           MyApplication).appContainer. myRepository\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n}\n```", "```kt\nclass MyContainer(private val myRepository: MyRepository) {\n\u00a0\u00a0\u00a0\u00a0fun geMyViewModelFactory(): ViewModelProvider.Factory {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return object : ViewModelProvider.Factory {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?> create(modelClass:               Class<T>): T {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return MyViewModel(myRepository) as T\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\nclass MyActivity : AppCompatActivity() {\n\u00a0\u00a0\u00a0\u00a0private lateinit var myViewModel: MyViewModel\n\u00a0\u00a0\u00a0\u00a0private lateinit var myContainer: MyContainer\n\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0....\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val myRepository = (application as           MyApplication).appContainer. myRepository\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myContainer = MyContainer (myRepository)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0myViewModel = ViewModelProvider(this,           myContainer.geMyViewModelFactory())            .get(MyViewModel::class.java)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\n    \u00a0\u00a0\u00a0\u00a0implementation \"androidx.lifecycle:lifecycle-      extensions:2.2.0\"\n    ```", "```kt\n    interface NumberRepository {\n    \u00a0\u00a0\u00a0\u00a0fun generateNextNumber(): Int\n    }\n    ```", "```kt\n    class NumberRepositoryImpl(private val random: Random) :   NumberRepository {\n    \u00a0\u00a0\u00a0\u00a0override fun generateNextNumber(): Int {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return random.nextInt()\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MainViewModel(private val numberRepository:   NumberRepository) : ViewModel() {\n    \u00a0\u00a0\u00a0\u00a0private val numberLiveData = MutableLiveData<Int>()\n    \u00a0\u00a0\u00a0\u00a0fun getLiveData(): LiveData<Int> = numberLiveData\n    \u00a0\u00a0\u00a0\u00a0fun generateNextNumber() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0numberLiveData.postValue(numberRepository           .generateNextNumber())\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_width=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0android:layout_height=\"match_parent\"\n    \u00a0\u00a0\u00a0\u00a0android:gravity=\"center\"\n    \u00a0\u00a0\u00a0\u00a0android:orientation=\"vertical\">\n    \u00a0\u00a0\u00a0\u00a0<TextView\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_text_view\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\" />\n    \u00a0\u00a0\u00a0\u00a0<Button\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:id=\"@+id/activity_main_button\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_width=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:layout_height=\"wrap_content\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:text=\"@string/randomize\" />\n    </LinearLayout>\n    ```", "```kt\n    \u00a0\u00a0\u00a0<string name=\"randomize\">Randomize</string>\n    ```", "```kt\n    class MainActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class RandomApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0<application\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0android:name=\".RandomApplication\"\n    .../>\n    ```", "```kt\n    class ApplicationContainer {\n    \u00a0\u00a0\u00a0\u00a0val numberRepository: NumberRepository =       NumberRepositoryImpl(Random())\n    }\n    ```", "```kt\n    class RandomApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0val applicationContainer = ApplicationContainer()\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MainContainer(private val numberRepository:   NumberRepository) {\n    \u00a0\u00a0\u00a0\u00a0fun getMainViewModelFactory(): ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return object : ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?> create(modelClass:               Class<T>): T {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return MainViewModel(numberRepository) as T\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MainActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val mainContainer = MainContainer((application as           RandomApplication).applicationContainer             .numberRepository)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val viewModel = ViewModelProvider(this,           mainContainer.getMainViewModelFactory())            .get(MainViewModel::class.java)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel.getLiveData().observe(this, Observer {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>              (R.id.activity_main_text_view).text = it.toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_button)          .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel.generateNextNumber()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\nimplementation 'com.google.dagger:dagger:2.29.1' \nkapt 'com.google.dagger:dagger-compiler:2.29.1'\n```", "```kt\napply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\napply plugin: 'kotlin-kapt'\n```", "```kt\nimport javax.inject.Inject\nclass ClassA @Inject constructor()\nclass ClassB @Inject constructor(private val classA: ClassA)\n```", "```kt\nimport javax.inject.Inject\nclass ClassA @Inject constructor()\nclass ClassB {\n\u00a0\u00a0\u00a0\u00a0@Inject\n\u00a0\u00a0\u00a0\u00a0lateinit var classA: ClassA\n}\n```", "```kt\nimport dagger.Module\nimport dagger.Provides\nclass ClassA\nclass ClassB(private val classA: ClassA)\n@Module\nobject MyModule {\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassA(): ClassA = ClassA()\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassB(classA: ClassA): ClassB = ClassB(classA)\n}\n```", "```kt\nimport dagger.Component\n@Component(modules = [MyModule::class])\ninterface MyComponent {\n\u00a0\u00a0\u00a0\u00a0fun inject(myApplication: MyApplication)\n}\n```", "```kt\nimport android.app.Application\nimport javax.inject.Inject\nclass MyApplication : Application() {\n\u00a0\u00a0\u00a0\u00a0@Inject\n\u00a0\u00a0\u00a0\u00a0lateinit var classB: ClassB\n\u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\ufffc\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val component = DaggerMyComponent.create()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//needs to build the project once to generate \n        //DaggerMyComponent.class\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0component.inject(this)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\n@Module\nobject MyModule {\n\u00a0\u00a0\u00a0\u00a0@Named(\"classA1\")\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassA1(): ClassA = ClassA()\n\u00a0\u00a0\u00a0\u00a0@Named(\"classA2\")\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassA2(): ClassA = ClassA()\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassB(@Named(\"classA1\") classA: ClassA): ClassB =       ClassB(classA)\n}\n```", "```kt\nimport javax.inject.Qualifier\n@Qualifier\n@MustBeDocumented\n@kotlin.annotation.Retention(AnnotationRetention.RUNTIME)\nannotation class ClassA1Qualifier\n@Qualifier\n@MustBeDocumented\n@kotlin.annotation.Retention(AnnotationRetention.RUNTIME)\nannotation class ClassA2Qualifier\n```", "```kt\n@Module\nobject MyModule {\n\u00a0\u00a0\u00a0\u00a0@ClassA1Qualifier\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassA1(): ClassA = ClassA()\n\u00a0\u00a0\u00a0\u00a0@ClassA2Qualifier\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassA2(): ClassA = ClassA()\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassB(@ClassA1Qualifier classA: ClassA): ClassB =       ClassB(classA)\n}\n```", "```kt\nimport javax.inject.Scope\n@Scope\n@MustBeDocumented\n@kotlin.annotation.Retention(AnnotationRetention.RUNTIME)\nannotation class ActivityScope\n@Scope\n@MustBeDocumented\n@kotlin.annotation.Retention(AnnotationRetention.RUNTIME)\nannotation class FragmentScope\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0@ActivityScope\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassA(): ClassA = ClassA()\n```", "```kt\n@ActivityScope\n@Component(modules = [MyModule::class])\ninterface MyComponent {\n}\n```", "```kt\nclass ClassC\n@Module\nobject MySubcomponentModule {\n\u00a0\u00a0\u00a0\u00a0@Provides\n\u00a0\u00a0\u00a0\u00a0fun provideClassC(): ClassC = ClassC()\n}\n```", "```kt\nimport dagger.Subcomponent\n@ActivityScope\n@Subcomponent(modules = [MySubcomponentModule::class])\ninterface MySubcomponent {\n\u00a0\u00a0\u00a0\u00a0fun inject(mainActivity: MainActivity)\n}\n```", "```kt\nimport dagger.Component\n@Component(modules = [MyModule::class])\ninterface MyComponent {\n\u00a0\u00a0\u00a0\u00a0fun inject(myApplication: MyApplication)\n\u00a0\u00a0\u00a0\u00a0fun createSubcomponent(mySubcomponentModule:       MySubcomponentModule): MySubcomponent\n}\n```", "```kt\n@Inject\n\u00a0\u00a0\u00a0\u00a0lateinit var classC: ClassC\n\u00a0\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(application as MyApplication).component           .createSubcomponent(MySubcomponentModule).inject(this)\n}\n```", "```kt\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.google.dagger:dagger:2.29.1'\n    \u00a0\u00a0\u00a0\u00a0kapt 'com.google.dagger:dagger-compiler:2.29.1'\n    \u00a0\u00a0\u00a0\u00a0implementation \"androidx.lifecycle:lifecycle-      extensions:2.2.0\"\n    ```", "```kt\n    apply plugin: 'kotlin-kapt'\n    ```", "```kt\n    @Module\n    \u00a0\u00a0\u00a0\u00a0class ApplicationModule {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@Provides\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun provideRandom(): Random = Random()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@Provides\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fun provideNumberRepository(random: Random):           NumberRepository = NumberRepositoryImpl(random)\n    }\n    ```", "```kt\n    @Module\n    class MainModule {\n\n    \u00a0\u00a0\u00a0\u00a0@Provides\n    \u00a0\u00a0\u00a0\u00a0fun provideMainViewModelFactory(numberRepository:       NumberRepository): ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return object : ViewModelProvider.Factory {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0override fun <T : ViewModel?> create(modelClass:               Class<T>): T {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return MainViewModel(numberRepository) as T\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    @Scope\n    @MustBeDocumented\n    @kotlin.annotation.Retention(AnnotationRetention.RUNTIME)\n    annotation class MainScope\n    ```", "```kt\n    @MainScope\n    @Subcomponent(modules = [MainModule::class])\n    interface MainSubcomponent {\n    \u00a0\u00a0\u00a0\u00a0fun inject(mainActivity: MainActivity)\n    }\n    ```", "```kt\n    @Singleton\n    @Component(modules = [ApplicationModule::class])\n    interface ApplicationComponent {\n    \u00a0\u00a0\u00a0\u00a0fun createMainSubcomponent(): MainSubcomponent\n    }\n    ```", "```kt\n    class RandomApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0lateinit var applicationComponent: ApplicationComponent\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationComponent =           DaggerApplicationComponent.create()\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    class MainActivity : AppCompatActivity() {\n    \u00a0\u00a0\u00a0\u00a0@Inject\n    \u00a0\u00a0\u00a0\u00a0lateinit var factory: ViewModelProvider.Factory\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(application as RandomApplication).applicationComponent           .createMainSubcomponent().inject(this)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val viewModel = ViewModelProvider(this,           factory).get(MainViewModel::class.java)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel.getLiveData().observe(this, Observer {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_text_view)              .text = it.toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_button)          .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel.generateNextNumber()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n\u00a0\u00a0\u00a0\u00a0implementation 'com.google.dagger:dagger-android:2.29.1' \n\u00a0\u00a0\u00a0\u00a0implementation 'com.google.dagger:dagger-android-support:2.29.1' \n\u00a0\u00a0\u00a0\u00a0kapt 'com.google.dagger:dagger-android-processor:2.29.1'\n```", "```kt\n@Module\nabstract class ActivityProviderModule {\n\u00a0\u00a0\u00a0\u00a0@ContributesAndroidInjector(modules = [ActivityModule::class])\n\u00a0\u00a0\u00a0\u00a0@ActivityScope\n\u00a0\u00a0\u00a0\u00a0abstract fun contributeMyActivityInjector(): MyActivity\n}\n```", "```kt\n@Singleton\n@Component(\n\u00a0\u00a0\u00a0\u00a0modules = [AndroidSupportInjectionModule::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ApplicationModule::class,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ActivityProviderModule::class\n\u00a0\u00a0\u00a0\u00a0]\n)\ninterface ApplicationComponent {\n\u00a0\u00a0\u00a0\u00a0fun inject(myApplication: MyApplication)\n}\n```", "```kt\nclass MyApplication : Application(), HasAndroidInjector {\n\u00a0\u00a0\u00a0\u00a0@Inject\n\u00a0\u00a0\u00a0\u00a0lateinit var dispatchingAndroidInjector:       DispatchingAndroidInjector<Any>\n\u00a0\u00a0\u00a0\u00a0lateinit var applicationComponent: ApplicationComponent\n\u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationComponent = DaggerApplicationComponent.create()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationComponent.inject(this)\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0override fun androidInjector(): AndroidInjector<Any> =       dispatchingAndroidInjector\n}\n```", "```kt\nclass MyActivity : AppCompatActivity() {\n\u00a0\u00a0\u00a0\u00a0@Inject\n\u00a0\u00a0\u00a0\u00a0lateinit var myClass: MyClass\n\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0AndroidInjection.inject(this)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\nclass MyActivity : AppCompatActivity(), HasAndroidInjector {\n\u00a0\u00a0\u00a0\u00a0@Inject\n\u00a0\u00a0\u00a0\u00a0lateinit var dispatchingAndroidInjector:       DispatchingAndroidInjector<Any>\n\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0AndroidInjection.inject(this)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0override fun androidInjector(): AndroidInjector<Any> =       dispatchingAndroidInjector\n}\n```", "```kt\n@Module\nabstract class FragmentProviderModule {\n\u00a0\u00a0\u00a0\u00a0@ContributesAndroidInjector(modules = [FragmentModule::class])\n\u00a0\u00a0\u00a0\u00a0@FragmentScope\n\u00a0\u00a0\u00a0\u00a0abstract fun contributeMyFragmentInjector(): MyFragment\n}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0@ContributesAndroidInjector(modules = [ActivityModule::class,       FragmentProviderModule::class])\n\u00a0\u00a0\u00a0\u00a0@ActivityScope\n\u00a0\u00a0\u00a0\u00a0abstract fun contributeMyActivityInjector(): MyActivity\n```", "```kt\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.google.dagger:dagger:2.29.1'\n    \u00a0\u00a0\u00a0\u00a0kapt 'com.google.dagger:dagger-compiler:2.29.1'\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.google.dagger:dagger-android:2.29.1'\n    \u00a0\u00a0\u00a0\u00a0implementation 'com.google.dagger:dagger-android-      support:2.29.1'\n    \u00a0\u00a0\u00a0\u00a0kapt 'com.google.dagger:dagger-android-processor:2.29.1'\n    ```", "```kt\n    @Module\n    abstract class MainProviderModule {\n    \u00a0\u00a0\u00a0\u00a0@MainScope\n    \u00a0\u00a0\u00a0\u00a0@ContributesAndroidInjector(modules = [MainModule::class])\n    \u00a0\u00a0\u00a0\u00a0abstract fun contributeMainActivityInjector(): MainActivity\n    }\n    ```", "```kt\n    @Singleton\n    @Component(modules = [ApplicationModule::class, AndroidSupportInjectionModule::class, MainProviderModule::class])\n    interface ApplicationComponent {\n    \u00a0\u00a0\u00a0\u00a0fun inject(randomApplication: RandomApplication)\n    }\n    ```", "```kt\n    class RandomApplication : Application(), HasAndroidInjector {\n    \u00a0\u00a0\u00a0\u00a0@Inject\n    \u00a0\u00a0\u00a0\u00a0lateinit var dispatchingAndroidInjector:       DispatchingAndroidInjector<Any>\n    \u00a0\u00a0\u00a0\u00a0lateinit var applicationComponent: ApplicationComponent\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationComponent =           DaggerApplicationComponent.create()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0applicationComponent.inject(this)\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0override fun androidInjector(): AndroidInjector<Any> =       dispatchingAndroidInjector\n    }\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0AndroidInjection.inject(this)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val viewModel = ViewModelProvider(this,             factory).get(MainViewModel::class.java)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel.getLiveData().observe(this, Observer {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_text_view)              .text = it.toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_button)          .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel.generateNextNumber()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\nimplementation 'org.koin:koin-android:2.2.0-rc-4'\n```", "```kt\nclass MyApplication : Application() {\n\u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startKoin {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidLogger(Level.INFO)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidContext(this@MyApplication)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidFileProperties()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0modules(myModules)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```kt\nclass ClassA\nclass ClassB(private val classB: ClassA)\n\u00a0\u00a0\u00a0\u00a0val moduleForClassA = module {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0single { ClassA() }\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0val moduleForClassB = module {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0factory { ClassB(get()) }\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0override fun onCreate() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startKoin {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidLogger(Level.INFO)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidContext(this@MyApplication)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidFileProperties()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0modules(listOf(moduleForClassA, moduleForClassB))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0class MainActivity : AppCompatActivity() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val classB: ClassB by inject()\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val classB: ClassB = get()\n\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0val moduleForClassA = module {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0single(named(\"name\")) { ClassA() }\n\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0val moduleForClassB = module {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scope(named<MainActivity>()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scoped { ClassB(get()) }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\nclass MainActivity : ScopeActivity() {\n\u00a0\u00a0\u00a0\u00a0val classB: ClassB by inject()\n}\n```", "```kt\nimplementation \"org.koin:koin-android-viewmodel:2.2.0-rc-4\"\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0val moduleForClassB = module {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0factory {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ClassB(get())\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0viewModel { MyViewModel(get()) }\n\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\nclass MainActivity : AppCompatActivity() {\n\u00a0\u00a0\u00a0\u00a0val model: MyViewModel by viewModel()\n}\n```", "```kt\n\u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0val model : MyViewModel = getViewModel()\n\u00a0\u00a0\u00a0\u00a0}\n```", "```kt\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.2.0\"\n    implementation 'org.koin:koin-android:2.2.0-rc-4'\n    implementation \"org.koin:koin-android-viewmodel:2.2.0-rc-4\"\n    ```", "```kt\n    class RandomApplication : Application() {\n    \u00a0\u00a0\u00a0\u00a0val appModule = module {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0single {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Random()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0single<NumberRepository> {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NumberRepositoryImpl(get())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    }\n    }\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0val mainModule = module {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scope(named<MainActivity>()) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scoped {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MainViewModel(get())\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0startKoin {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidLogger()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0androidContext(this@RandomApplication)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0modules(listOf(appModule, mainModule))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```kt\n    class MainActivity :  ScopeActivity() {\n    \u00a0\u00a0\u00a0\u00a0private val mainViewModel: MainViewModel by inject()\n    \u00a0\u00a0\u00a0\u00a0override fun onCreate(savedInstanceState: Bundle?) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.onCreate(savedInstanceState)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setContentView(R.layout.activity_main)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mainViewModel.getLiveData().observe(this, Observer {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_text_view)              .text = it.toString()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0findViewById<TextView>(R.id.activity_main_button)          .setOnClickListener {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mainViewModel.generateNextNumber()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```kt\n    [Koin]: [init] declare Android Context\n    [Koin]: bind type:'android.content.Context' ~ [type:Single,primary_type:'android.content.Context']\n    [Koin]: bind type:'android.app.Application' ~ [type:Single,primary_type:'android.app.Application']\n    [Koin]: bind type:'java.util.Random' ~ [type:Single,primary_type:'java.util.Random']\n    [Koin]: bind type:'com.android.testable.randomapplication   .NumberRepository' ~ [type:Single,primary_type:'com.android   .testable.randomapplication.NumberRepository']\n    [Koin]: total 5 registered definitions\n    [Koin]: load modules in 0.4638 ms\n    ```"]