["```\n**$ sudo pip install docker-compose**\n\n```", "```\n    **$ docker-compose up**\n\n    ```", "```\n    **$ wget  https://github.com/docker/machine/releases/download/v0.2.0/docker-machine_linux-amd64** \n    **$ sudo mv  docker-machine_linux-amd64 /usr/local/bin/docker-machine**\n    **$ chmod a+x  /usr/local/bin/docker-machine** \n\n    ```", "```\n    **$ docker-machine create -d virtualbox local**\n\n    ```", "```\n    **$ eval \"$(docker-machine env local)\"**\n\n    ```", "```\n    **$ docker run swarm create**\n    **7c3a21b42708cde81d99884116d68fa1**\n\n    ```", "```\n    **$ docker-machine create  -d virtualbox  --swarm  --swarm-master  --swarm-discovery token://7c3a21b42708cde81d99884116d68fa1  swarm-master**\n\n    ```", "```\n    **$ docker-machine create -d virtualbox  --swarm  --swarm-discovery token://7c3a21b42708cde81d99884116d68fa1 swarm-node-1**\n    **$ docker-machine create -d virtualbox  --swarm  --swarm-discovery token://7c3a21b42708cde81d99884116d68fa1 swarm-node-2**\n\n    ```", "```\n    **$ eval \"$(docker-machine env swarm-master)\"**\n\n    ```", "```\n    **$ docker info**\n\n    ```", "```\n        [Unit] \n        Description=Docker Application Container Engine \n        Documentation=http://docs.docker.com \n        **After=network.target docker.socket** \n        **Requires=docker.socket** \n\n        [Service] \n        Type=notify \n        EnvironmentFile=-/etc/sysconfig/docker \n        EnvironmentFile=-/etc/sysconfig/docker-storage \n        **ExecStart=/usr/bin/docker -d -H fd:// $OPTIONS $DOCKER_STORAGE_OPTIONS** \n        LimitNOFILE=1048576 \n        LimitNPROC=1048576 \n\n        [Install] \n        WantedBy=multi-user.target \n        ```", "```\n    **$ git clone https://github.com/coreos/coreos-vagrant.git** \n    **$ cd coreos-vagrant**\n\n    ```", "```\n    **$ cp user-data.sample user-data**\n\n    ```", "```\n    **$num_instances=1**\n\n    ```", "```\n    **$num_instances=3**\n\n    ```", "```\n    **$ vagrant up** \n\n    ```", "```\n    **$ vagrant ssh core-01** \n    **$ systemctl status etcd fleet**\n    **$ fleetctl list-machines**\n\n    ```", "```\n    [Unit] \n    Description=MyApp \n    After=docker.service \n    Requires=docker.service \n\n    [Service] \n    TimeoutStartSec=0 \n    ExecStartPre=-/usr/bin/docker kill busybox1 \n    ExecStartPre=-/usr/bin/docker rm busybox1 \n    ExecStartPre=/usr/bin/docker pull busybox \n    ExecStart=/usr/bin/docker run --name busybox1 busybox /bin/sh -c \"while true; do echo Hello World; sleep 1; done\" \n    ExecStop=/usr/bin/docker stop busybox1\n    ```", "```\n    **$ fleetctl submit myapp.service**\n    **$ fleetctl start myapp.service**\n    **$ fleetctl list-units**\n\n    ```", "```\n    **$ wget http://download.fedoraproject.org/pub/fedora/linux/releases/test/22_Beta/Cloud/x86_64/Images/Fedora-Cloud-Atomic-22_Beta-20150415.x86_64.raw.xz**\n\n    ```", "```\n    **$ xz -d Fedora-Cloud-Atomic-22_Beta-20150415.x86_64.raw.xz** \n\n    ```", "```\n    **$ cat  meta-data**\n    **instance-id: iid-local01** \n    **local-hostname: atomichost**\n\n    **$ cat user-data** \n    **#cloud-config** \n    **password: atomic** \n    **ssh_pwauth: True** \n    **chpasswd: { expire: False }** \n\n    **ssh_authorized_keys:** \n    **- ssh-rsa AAAAB3NzaC1yc.........**\n\n    ```", "```\n    **$ genisoimage -output init.iso -volid cidata -joliet -rock user-data meta-data**\n\n    ```", "```\n    **$sudo docker run -it fedora bash**\n\n    ```", "```\n    **$ atomic host status**\n\n    ```", "```\n    **$ sudo atomic host rollback**\n\n    ```", "```\n    **DEVS=\"/dev/sdb\"**\n    **[fedora@atomichost ~]$ cat /etc/sysconfig/docker-storage-setup** \n    **DEVS=\"/dev/sdb\"**\n\n    ```", "```\n    **$ sudo docker-storage-setup** \n\n    ```", "```\n    **[fedora@atomichost ~]$ sudo atomic run stefwalter/cockpit-ws** \n\n    ```", "```\nLABEL INSTALL /usr/bin/docker run -ti --rm --privileged -v /:/host IMAGE /container/atomic-install\nLABEL UNINSTALL /usr/bin/docker run -ti --rm --privileged -v /:/host IMAGE /cockpit/atomic-uninstall\nLABEL RUN /usr/bin/docker run -d --privileged --pid=host -v /:/host IMAGE /container/atomic-run --local-ssh\n```", "```\n    **$ export KUBERNETES_PROVIDER=vagrant**\n    **$ export VAGRANT_DEFAULT_PROVIDER=virtualbox**\n    **$ curl -sS https://get.k8s.io | bash**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh get nodes**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh get pods**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh get services**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh get replicationControllers**\n\n    ```", "```\n    **$ ./cluster/kube-down.sh**\n\n    ```", "```\n    **$ ./cluster/kube-up.sh**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh run-container my-nginx --image=nginx --replicas=3 --port=80**\n\n    ```", "```\n    **$  ./cluster/kubectl.sh get pods**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh get replicationControllers**\n\n    ```", "```\n    **$ ./cluster/kubectl.sh resize rc my-nginx \u2013replicas=1**\n    **$ ./cluster/kubectl.sh get rc**\n\n    ```", "```\n    **$  ./cluster/kubectl.sh get pods**\n\n    ```", "```\n**$ ./cluster/kubectl.sh get services** \n\n```", "```\n    **$ cd kubernetes/examples/mysql-wordpress-pd**\n    **$  ls *.yaml**\n    **mysql-service.yaml mysql.yaml wordpress-service.yaml  wordpress.yaml**\n\n    ```", "```\n    **$ vagrant ssh master**\n    **$ kubectl get pods** \n\n    ```", "```\n    **$ kubectl create -f /vagrant/examples/mysql-wordpress-pd/mysql.yaml**\n    **$ kubectl get pods**\n\n    ```", "```\n    **$ kubectl create -f /vagrant/examples/mysql-wordpress-pd/mysql-service.yaml**\n    **$ kubectl get services**\n\n    ```", "```\n    **$ kubectl create -f /vagrant/examples/mysql-wordpress-pd/wordpress.yaml**\n\n    ```", "```\n    createExternalLoadBalancer: true\n    ```", "```\n    publicIPs: \n        - 10.245.1.3\n    ```", "```\n    **$ kubectl create -f /vagrant/examples/mysql-wordpress-pd/wordpress-service.yaml**\n\n    ```", "```\n    **$ sudo yum install links -y**\n    **$ links 10.245.1.3**\n\n    ```", "```\n    **$ vagrant ssh minion-1**\n    **$ sudo docker ps**\n\n    ```"]