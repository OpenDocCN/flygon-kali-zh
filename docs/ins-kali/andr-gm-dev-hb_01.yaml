- en: Chapter 1. Android Game Development
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 安卓游戏开发
- en: Developing games has become a very popular profession through the last decade.
    Previously, it was limited to PCs, consoles, and a few embedded gaming devices.
    Today's world is fully equipped with modern gadgets with better technology, better
    portability, better flexibility, and better quality. This has opened up the doors
    for developers to create games with better quality and fewer limitations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的十年里，游戏开发已经成为一个非常受欢迎的职业。以前，它局限于个人电脑、游戏机和一些嵌入式游戏设备。如今的世界完全配备了现代化的设备，技术更好，便携性更好，灵活性更好，质量更好。这为开发者创造更高质量的游戏和减少限制打开了大门。
- en: Android is a modern age operating system, and is being used widely for many
    hardware platforms. Hence, the world of Android has become a target for game developers.
    The most efficient and useful targets are Android smartphones and tablets. According
    to surveys of the global market share for mobile OS, Android tops it with a 78-80%
    share in 2015\. Android is now not only a mobile OS, it is being used in TVs and
    smart watches also. Hence, the popularity of Android is touching the sky among
    game developers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓是一个现代操作系统，被广泛应用于许多硬件平台。因此，安卓世界已成为游戏开发者的目标。最有效和有用的目标是安卓智能手机和平板电脑。根据全球移动操作系统市场份额的调查，2015年安卓占据了78-80%的份额。安卓现在不仅是一个移动操作系统，还被用于电视和智能手表。因此，安卓在游戏开发者中的受欢迎程度正在飙升。
- en: 'This book will be helpful for those who already have a background in Android
    game development. Let''s start with the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书对那些已经有安卓游戏开发背景的人会有所帮助。让我们从以下主题开始：
- en: Android game development
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安卓游戏开发
- en: A game is not just an application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏不仅仅是一个应用程序。
- en: Choosing target device configuration for your game
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的游戏选择目标设备配置
- en: Best practices while making a game on Android
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在安卓上制作游戏的最佳实践
- en: Android game development
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓游戏开发
- en: Let us now focus on the main topic of this book. Although game development covers
    many platforms and technologies, we will only focus on Android in this book.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们专注于本书的主题。尽管游戏开发涵盖了许多平台和技术，但本书只关注安卓。
- en: Android is a mobile operating system based on the Linux kernel. Currently, it
    is being developed by Google. The OS has released many versions since 2008 to
    date. But after the release of Android 2.2 (Froyo) and Android 2.3 (Gingerbread),
    this OS caught the attention of many game developers. Android uses what is called
    the **Dalvik Virtual Machine** (**DVM**), which is an open source implementation
    of a **Java Virtual Machine** (JVM). There are several differences between Dalvik
    and a standard JVM, some subtle, some not so subtle. The DVM is also not aligned
    to either Java SE or Java ME, but to an Apache implementation called Apache Harmony
    Java. All of this makes for a slight learning curve if you happen to be transitioning
    from Java ME. Google introduced an alternative to DVM called **Android RunTime**
    (**ART**) from Android 4.4 (KitKat), and ART replaced DVM from Android 5.0 (Lollipop).
    ART mainly features **Ahead-of-time** (**AOT**) compilation, and an improved garbage
    collection process, and it provides a smaller memory footprint in order to optimize
    memory operations. However, most game developers use DVM to support older versions
    of Android devices.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓是基于Linux内核的移动操作系统。目前由谷歌开发。自2008年以来，该操作系统已发布了许多版本。但在发布安卓2.2（Froyo）和安卓2.3（Gingerbread）之后，这个操作系统引起了许多游戏开发者的注意。安卓使用所谓的**达尔维克虚拟机**（**DVM**），这是**Java虚拟机**（JVM）的开源实现。达尔维克和标准JVM之间有一些差异，有些微妙，有些不那么微妙。DVM也不是针对Java
    SE或Java ME，而是针对一个名为Apache Harmony Java的Apache实现。如果你刚好从Java ME过渡过来，这些都会造成一些学习曲线。谷歌在安卓4.4（KitKat）中推出了一种名为**安卓运行时**（**ART**）的DVM替代方案，ART从安卓5.0（棒棒糖）开始取代了DVM。ART主要特点是**提前编译**（**AOT**）和改进的垃圾回收过程，并提供更小的内存占用以优化内存操作。然而，大多数游戏开发者使用DVM来支持旧版本的安卓设备。
- en: Android game development started extensively when this OS was adapted by many
    hardware platforms. Android is mostly being used on the mobile and tablet platforms.
    When the mobile game industry started migrating from Symbian or Java to Android
    or other smart mobile OSes, Android game development started to boom.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当许多硬件平台开始采用这个操作系统时，安卓游戏开发开始大规模开展。安卓主要被用于移动和平板设备。当移动游戏行业开始从Symbian或Java迁移到安卓或其他智能移动操作系统时，安卓游戏开发开始蓬勃发展。
- en: 'There are a few reasons for the success of Android games:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓游戏成功的原因有几个：
- en: Smooth user interface
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流畅的用户界面
- en: Better interactivity
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的互动性
- en: Touch interface
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触摸界面
- en: Better look and feel
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的外观和感觉
- en: Better hardware platform
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的硬件平台
- en: More design flexibility
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多设计灵活性
- en: It is always easier to use a common operating system than an embedded **real-time
    operating system** (**RTOS**). The user need not spend time on different hardware
    to learn its usability. Android is one such easy-to-use operating system.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用通用操作系统总比使用嵌入式**实时操作系统**（**RTOS**）更容易。用户不需要花时间学习不同硬件的可用性。安卓就是这样一个易于使用的操作系统。
- en: The visual user interface is very attractive in Android, as it always runs on
    better hardware configuration than Symbian, Java, or an embedded OS. It enhances
    user experience, which is one of the reasons why it got adapted by so many organizations.
    As the user base of Android increased, many more game developers started targeting
    this platform.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在安卓中，视觉用户界面非常吸引人，因为它总是在比Symbian、Java或嵌入式操作系统更好的硬件配置上运行。这增强了用户体验，这也是为什么它被这么多组织所采用的原因之一。随着安卓用户群的增加，许多游戏开发者开始瞄准这个平台。
- en: From the perspective of game design, the enhanced Android features list gave
    flexibility to explore more in mobile games. Thus, the game design style was enhanced.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从游戏设计的角度来看，增强的安卓功能列表给移动游戏的探索提供了灵活性。因此，游戏设计风格得到了提升。
- en: The current world has various types of hardware that run on Android. Apart from
    mobile phones, Android is being used on tablets, televisions, wristwatches, consoles,
    digital cameras, PCs, and other devices. Nowadays, game developers are targeting
    almost every Android platform.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当前世界上有各种类型的运行Android的硬件。除了手机，Android还被用于平板电脑、电视、手表、游戏机、数码相机、个人电脑和其他设备上。如今，游戏开发者几乎在每个Android平台上进行开发。
- en: Features and support
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能和支持
- en: '**Direct manipulation interface** is the top feature of Android. It interacts
    with the user through a continuous representation of objects of interest, dynamic
    real-time action, and dynamic feedback. Android mainly uses a touch interface
    with real-time action such as swiping, dragging, tapping, and multi-touch, which
    are widely used in game development for Android.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**直接操作界面**是Android的顶级特性。它通过持续表示感兴趣的对象、动态实时操作和动态反馈与用户进行交互。Android主要使用触摸界面，实时操作如滑动、拖动、轻击和多点触控，在Android游戏开发中被广泛使用。'
- en: Android application development is mainly based on Java (SDK) and C++ (NDK),
    which are the most common programming languages in the world. Hence, developing
    a game has become much easier.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用程序开发主要基于Java（SDK）和C++（NDK），这是世界上最常见的编程语言。因此，开发游戏变得更加容易。
- en: '**Excellent support for multimedia** took Android a step further in gaining
    popularity. Game developers can now use multimedia objects freely inside the game
    in order to increase the game quality.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**出色的多媒体支持**使Android在赢得流行度方面迈出了一大步。游戏开发者现在可以在游戏中自由使用多媒体对象，以提高游戏质量。'
- en: Since version 2.2 (Froyo), Google has developed an integrated service called
    Google Play Services. It is a closed system-level API service provider, which
    has proved to be very useful in game development.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 自2.2版（Froyo）以来，谷歌开发了一个名为Google Play服务的集成服务。这是一个封闭的系统级API服务提供商，在游戏开发中非常有用。
- en: A large number of third-party tools available for Android development have also
    eased the job of game developers. Some of the tools we can mention are Android
    Studio, App Inventor, Corona, Delphi, Testdroid, Sample Directmedia Layer, Visual
    Studio, Eclipse IDE, and RubyMotions.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Android开发，有大量的第三方工具可用，这也使游戏开发者的工作变得更加轻松。我们可以提到一些工具，如Android Studio、App Inventor、Corona、Delphi、Testdroid、Sample
    Directmedia Layer、Visual Studio、Eclipse IDE和RubyMotions。
- en: '**Android device hardware** configuration has to follow a minimum configuration
    list, so it becomes very easy for the developers to identify the configuration.
    Moreover, it has to maintain a minimum standard to run applications easily.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android设备硬件**配置必须遵循一个最低配置列表，这样开发者就可以很容易地识别配置。此外，它必须保持一个最低标准，以便轻松运行应用程序。'
- en: There are plenty of sensors associated with Android devices (mostly on mobiles
    or tablets), which are a very good option for designing the controls of a game.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 与Android设备（主要是手机或平板电脑）相关联的传感器有很多，这对于设计游戏的控制是一个非常好的选择。
- en: Android supports awesome connectivity through Bluetooth, Wi-Fi, GSM/CDMA/EDGE,
    LTE, NFC, IDEN, and the like. These help game developers to create multiplayer
    games easily.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Android通过蓝牙、Wi-Fi、GSM/CDMA/EDGE、LTE、NFC、IDEN等提供了出色的连接功能。这些帮助游戏开发者轻松创建多人游戏。
- en: '**Virtual reality** is another field where Android is being used through Cardboard
    SDK. We will discuss this topic more later on.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟现实**是另一个领域，Android通过Cardboard SDK被使用。我们稍后会更详细地讨论这个话题。'
- en: These are the features that a game developer should keep in mind. The rest of
    the features are less important for game development. However, there is always
    a chance to explore more, and create a few specific-feature oriented games.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是游戏开发者应该牢记的特性。其他特性对于游戏开发来说不那么重要。然而，总是有机会去探索更多，并创建一些特定特性导向的游戏。
- en: Challenges
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战
- en: The main challenge in developing a game on an Android platform is to make the
    most use of the features in an efficient way.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android平台上开发游戏的主要挑战是以高效的方式充分利用其功能。
- en: The range of Android device configurations is wide. So, designing a game targeting
    most of them is a big challenge.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Android设备配置范围广泛。因此，针对大多数设备设计游戏是一个很大的挑战。
- en: Many of the Android game developers design and build games for specific hardware
    configurations, like Tegra, or Snapdragon, or a particular device like Xperia
    Play. Nvidia's Tegra is the most commonly used chip in these situations; the *THD*
    branding often indicates that a game was built for Tegra only. Nvidia has a lot
    of experience working with developers on the desktop side, and has brought that
    expertise to mobiles. Android game developers are encouraged to make use of Tegra-specific
    APIs to build their games. The problem with this scenario is that most users don't
    have Tegra in their phones. In fact, many LTE handsets that might have otherwise
    had that gaming-friendly chip are being moved over to Snapdragon S4\. Now, for
    a developer, it is very difficult to maintain performance across different graphic
    processors.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 许多Android游戏开发者为特定的硬件配置设计和构建游戏，比如Tegra或Snapdragon，或者像Xperia Play这样的特定设备。Nvidia的Tegra是这些情况下最常用的芯片；*THD*品牌通常表示游戏是专为Tegra构建的。Nvidia在桌面端与开发者合作方面拥有丰富的经验，并将这一专业知识带到了移动设备上。鼓励Android游戏开发者利用Tegra特定的API来构建他们的游戏。这种情况的问题在于大多数用户的手机上并没有Tegra。事实上，许多本来可能搭载这种游戏友好芯片的LTE手机现在都转向了Snapdragon
    S4。对于开发者来说，要在不同的图形处理器上保持性能非常困难。
- en: User experience
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户体验
- en: Android games can provide awesome user experience through their features.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Android游戏可以通过其功能提供出色的用户体验。
- en: Game controls can use the accelerometer or gravity sensor for a physics-based
    mechanism (if supported by the hardware), which is always an added advantage for
    real-time interactivity.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏控制可以利用加速计或重力传感器进行基于物理的机制（如果硬件支持），这总是实时互动的一个额外优势。
- en: On-touch screen devices, and dynamic controls like swiping, dragging, pinching,
    and multi-touch, can be experienced through Android.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在触摸屏设备上，可以通过Android体验到诸如滑动、拖动、捏合和多点触控等动态控制。
- en: Android supports OpenGL for better graphic rendering, which enhances the visual
    quality of the game.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Android支持OpenGL以获得更好的图形渲染，从而增强游戏的视觉质量。
- en: Miracast in Android is another feature which enables games to use multiple displays
    and screen sharing for a better experience.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Android中的Miracast是另一个功能，它使游戏可以使用多个显示屏和屏幕共享，以获得更好的体验。
- en: Design constraints
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计约束
- en: Development of any game requires a design Android is not an exception. The design
    of Android games requires a lot of knowledge about the target hardware. There
    are thousands of varieties available for Android. Designers have to choose their
    target very carefully, and then design the game scope.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 任何游戏的开发都需要一个设计，Android也不例外。Android游戏的设计需要对目标硬件有很多了解。Android有成千上万种不同的设备。设计师必须非常谨慎地选择他们的目标，然后设计游戏范围。
- en: As previously stated, it is a challenge not only for the programmers but for
    the designers as well. Different Android devices have different configurations,
    but it is very important for a designer that the common features should be targeted.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 正如之前所述，这不仅对程序员是一个挑战，对设计师也是如此。不同的Android设备具有不同的配置，但对于设计师来说，有必要针对共同特征。
- en: A game is not just an application
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏不仅仅是一个应用程序
- en: It is a very common practice for an application developer to switch to game
    development and vice versa. Many do not change their style, and approach game
    development accordingly. Every developer of games should keep in mind that *a
    game is not just an application*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序开发人员经常转向游戏开发，反之亦然。许多人不改变他们的风格，并相应地进行游戏开发。每个游戏开发者都应该记住*游戏不仅仅是一个应用程序*。
- en: Games versus applications
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏与应用程序
- en: A game can be termed an interactive entertainment system, in brief. The main
    objective of games is to provide fun, be it a software or physical exercise. On
    the other hand, the main objective of an application is to make life easier with
    a mechanical job. So the development approaches for these two are completely different.
    However, this still remains a point of discussion, as every game is an application.
    Any application can adapt the features of games in order to provide a better user
    experience.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏可以简称为交互式娱乐系统。游戏的主要目标是提供乐趣，无论是软件还是体育锻炼。另一方面，应用程序的主要目标是通过机械工作使生活更轻松。因此，这两者的开发方法完全不同。然而，这仍然是一个讨论的焦点，因为每个游戏都是一个应用程序。任何应用程序都可以适应游戏的特性，以提供更好的用户体验。
- en: It is difficult to differentiate between the complexities of development of
    a game versus an application. However, game development has an edge. Most of the
    application developers do not have to focus much on speed performance, whereas
    all game developers have to focus on speed and the frame rate of the game.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 很难区分游戏开发与应用程序开发的复杂性。然而，游戏开发有优势。大多数应用程序开发者不必过多关注速度性能，而所有游戏开发者都必须关注游戏的速度和帧率。
- en: Every game is an application for sure, but every application is not a game.
    This statement itself conveys the message that on a single reference scale, game
    development has more parameters than applications, yet it has to have all the
    features of an application.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 每个游戏肯定都是一个应用程序，但并非每个应用程序都是一个游戏。这个陈述本身传达了这样一个信息，即在一个参考标准上，游戏开发的参数比应用程序更多，但它必须具有应用程序的所有特性。
- en: Application development is technology-oriented, whereas game development is
    fun-oriented. This increases the difficulties in game development. Fun is an emotion,
    there is no parameter to calculate that. So, while making games, a developer can
    never know what exactly the game is going to achieve in terms of fun. On the other
    hand, an application developer is very much certain that the application target
    can be achieved if all the specifications meet the requirement.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序开发是技术导向的，而游戏开发是以乐趣为导向的。这增加了游戏开发的困难。乐趣是一种情感，没有参数可以计算。因此，在制作游戏时，开发人员永远无法知道游戏在乐趣方面到底能达到什么程度。另一方面，应用程序开发人员非常确定，只要所有规格满足要求，应用程序目标就可以实现。
- en: Game development very rigorously needs mathematics to work on the physics or
    graphics side; even AI needs a lot of mathematics for the low-level stuff. Applications
    are more technology driven, with limited use of graphics.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏开发非常严格地需要数学来处理物理或图形方面；即使AI也需要大量的数学来处理低级别的东西。应用程序更多地受技术驱动，图形的使用有限。
- en: 'Any application that qualifies as a game must fulfill the following criteria:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 任何符合游戏资格的应用程序必须满足以下标准：
- en: It must entertain a set of users in terms of fun
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它必须在乐趣方面满足一组用户
- en: There must be a set of milestones to achieve for the users of the application
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须有一组里程碑供应用程序用户实现
- en: It should reward the users for achieving a milestone
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应该奖励用户达到里程碑
- en: It should have a more dynamic user interface
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应该有一个更动态的用户界面
- en: There must be better visual impact
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须有更好的视觉冲击
- en: It should be performance driven rather than feature driven
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应该是以性能为驱动而不是以功能为驱动
- en: Life cycle of Android application and games
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android应用程序和游戏的生命周期
- en: 'The application life cycle applies to any game made on the same platform. But
    a game has more to the cycle, as you can see in the following diagram:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序生命周期适用于在同一平台上制作的任何游戏。但是游戏的周期更多，如下图所示：
- en: '![Life cycle of Android application and games](img/B05069_01_01.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![Android应用程序和游戏的生命周期](img/B05069_01_01.jpg)'
- en: The application life cycle is simpler a game life cycle. The game cycle runs
    within the running phase of the application life cycle. This is typically termed
    the **game loop**. This will be discussed later in detail.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的生命周期比游戏生命周期简单。游戏周期在应用程序生命周期的运行阶段内运行。这通常被称为**游戏循环**。这将在后面详细讨论。
- en: This game loop runs on game states. The application may have only one running
    state, but there are multiple game update states. In a typical system of game
    development, there are a minimum of two update states. One depends on the game
    loop execution, and the other depends on the time interval. The second one actually
    controls the **frame rate**.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏循环在游戏状态上运行。应用程序可能只有一个运行状态，但有多个游戏更新状态。在典型的游戏开发系统中，至少有两个更新状态。一个取决于游戏循环的执行，另一个取决于时间间隔。第二个实际上控制着帧率。
- en: Performance of games and applications
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏和应用程序的性能
- en: There are noticeable differences between the performance management systems
    for games and applications. Performance is one of the biggest requirements in
    game development, whereas it is only a recommended feature for an application,
    as the frame rate does not affect the quality.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏和应用程序的性能管理系统之间存在明显的差异。性能是游戏开发中最大的要求之一，而对于应用程序来说，它只是一个推荐的特性，因为帧率不会影响质量。
- en: It is an accepted truth that games are heavier than applications on the same
    scale. A game runs on repetitive frames—one set of tasks runs on one frame. This
    increases the instruction traffic for the processor. In an application, there
    are generally no loops; the state of the application depends on user action. In
    this case, the processor gets plenty of time to execute the instruction as no
    instructions are being sent repetitively.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 公认的事实是，游戏比同样规模的应用程序更重。游戏在重复的帧上运行一组任务。这增加了处理器的指令流量。在应用程序中，通常没有循环；应用程序的状态取决于用户的操作。在这种情况下，处理器有足够的时间来执行指令，因为没有重复发送指令。
- en: Memory management of games and applications
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏和应用程序的内存管理
- en: Applications which are not games have different memory management than games.
    In case of games, multimedia assets are the main objects, which occupy a larger
    portion of the heap than class objects. But in the case of applications, it is
    just the opposite. Applications need to load only the object they require for
    the state, that is, class objects.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 不是游戏的应用程序与游戏有不同的内存管理。在游戏的情况下，多媒体资产是主要对象，占用堆的比例比类对象大。但在应用程序的情况下，情况正好相反。应用程序只需要加载它们需要的对象，即类对象。
- en: For any game developer, memory optimization is a must. Because of the extensive
    use of memory, a developer cannot afford to have unused objects loaded in memory,
    or any memory leakage caused by mishandled memory pointers. This has a direct
    effect on running games. For an application, memory optimization is obviously
    a good practice, but most of the time it has no direct or indirect effect on running
    the application. However, a good programmer should always have knowledge about
    memory optimization.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何游戏开发者来说，内存优化是必须的。由于内存的广泛使用，开发者不能承担在内存中加载未使用的对象，或者由于处理不当的内存指针导致的内存泄漏。这直接影响游戏的运行。对于应用程序，内存优化显然是一个好的实践，但大多数情况下对应用程序的运行没有直接或间接的影响。然而，一个好的程序员应该始终了解内存优化。
- en: Choosing the target device configuration
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择目标设备配置
- en: 'As mentioned earlier, Android has a variety of device configurations. So, it
    is very important for an Android game developer to choose the target very carefully.
    The general approach should have these parameters:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，安卓有各种设备配置。因此，对于安卓游戏开发者来说，非常重要的是要非常谨慎地选择目标。一般的方法应该具有这些参数：
- en: Game scale
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏规模
- en: Target audience
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标受众
- en: Feature requirement
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能要求
- en: Scope for portability
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可移植性的范围
- en: Game scale
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏规模
- en: This is basically the scale on which the game is being made. The larger the
    scale, the better the configuration that it'll need. This includes mainly the
    game size, which means the amount of memory it will consume on a device. Many
    Android devices are configured with very low RAM and internal memory storage.
    If the targeted device does not have the required configuration, the game will
    not run. Even if the game is fully optimized, it can fail depending on the hardware
    platform it is running on.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上是游戏制作的规模。规模越大，需要的配置就越好。这主要包括游戏大小，即它在设备上消耗的内存量。许多安卓设备配置的RAM和内部存储空间非常低。如果目标设备没有所需的配置，游戏将无法运行。即使游戏经过了充分优化，也可能因为运行的硬件平台而失败。
- en: Every game requires a set of processes to be executed recursively, which requires
    processor speed. If a game is process-heavy, and the targeted device has a slow
    processor, the game will experience some horrible frame rate issue, or crash.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 每个游戏都需要一组递归执行的进程，这需要处理器速度。如果游戏的进程密集，并且目标设备的处理器速度较慢，游戏将出现一些可怕的帧率问题，或者崩溃。
- en: Every Android game developer must be aware of the requirements of memory, processor,
    and other constraints when choosing the target device.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 每个安卓游戏开发者在选择目标设备时必须了解内存、处理器和其他约束的要求。
- en: Let's take the example of an Android game which requires at least 120 MB of
    disk space to install, 512 MB of RAM to run, and a 1.2 GHz processor speed to
    achieve a decent frame rate. Now consider a mobile device which matches these
    specifications exactly, but being a developer, one must not assume that the device
    will not have any other application installed or running in parallel. So, in this
    case, there is a fair assumption that the game will not have the required support
    even if the device meets its requirement. Hence, for this example game, the target
    device must have a higher configuration than the minimum requirement.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以一个需要至少120MB磁盘空间安装、512MB RAM运行和1.2 GHz处理器速度达到良好帧率的安卓游戏为例。现在考虑一个移动设备，它完全符合这些规格，但作为开发者，不能假设设备没有安装或并行运行其他应用程序。因此，在这种情况下，即使设备符合要求，也有一个合理的假设，即游戏将无法获得所需的支持。因此，对于这个例子游戏，目标设备必须比最低要求更高配置。
- en: Now, let's take a look at the opposite scenario. Assuming the same game requirements,
    consider a device having 8 GB of available storage, 2 GB of RAM, and a 2 GHz multicore
    processor. There is no doubt that the game will run on that device with maximum
    performance, but the device could have supported a larger-scale game. So the resource
    utilization is not efficient in this scenario. This is where porting comes in.
    A game developer should upscale the game quality, and create a different build
    for those high-end configuration devices.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看相反的情况。假设相同的游戏要求，考虑一个具有8GB可用存储空间、2GB RAM和2GHz多核处理器的设备。毫无疑问，游戏将在该设备上以最佳性能运行，但该设备本可以支持更大规模的游戏。因此，在这种情况下，资源利用效率不高。这就是移植的作用。游戏开发者应提升游戏质量，并为这些高端配置设备创建不同的版本。
- en: It is a very common practice in the industry to exclude a few devices from the
    targeted device list to make the game run properly. In a few cases, the game developer
    creates separate game builds to support most of the devices and maintain the game
    quality.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在行业中，通常会排除一些设备，以使游戏能够正常运行。在一些情况下，游戏开发者会创建单独的游戏版本，以支持大多数设备并保持游戏质量。
- en: Target audience
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目标受众
- en: The target audience is the particular group for which the game is made. It is
    assumed that a particular set of people will have most fun from the game, or that
    they will play the game more than other people.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 目标受众是制作游戏的特定群体。人们认为特定的一群人会从游戏中获得最多的乐趣，或者他们会比其他人更多地玩这个游戏。
- en: Every game design has its target audience. The set of target devices are the
    direct consequence of the set of target audience. For example, if the target audience
    is working professionals between the ages of 25 to 40, it makes no sense to create
    the game for an Android TV no matter what the game scale is. This is because this
    specific audience will mostly use mobile devices, as they have less time to sit
    in front of a television set. So, the list of target devices should contain mobile
    devices for this target audience.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 每个游戏设计都有其目标受众。目标设备的集合是目标受众的直接结果。例如，如果目标受众是25至40岁的职业人士，无论游戏规模如何，为Android电视创建游戏都没有意义。这是因为这个特定的受众大多会使用移动设备，因为他们没有时间坐在电视机前。因此，针对这个目标受众的目标设备列表应包含移动设备。
- en: We can see a lot of difference between devices in the same category. For now,
    let's take the example of Android mobile phones, as this is the most-used Android
    category. We can see a range of Android devices available in the market. Most
    of the Android phones are comparatively cheaper, and have fewer features. A major
    section of the target audience that uses such phones belongs in particular to
    Asia or the third world countries. So while making a game for this target audience,
    the developer should consider the minimum configuration target.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到同一类别的设备之间存在很大的差异。现在，让我们以Android手机为例，因为这是最常用的Android类别。我们可以看到市场上有各种Android设备。大多数Android手机价格相对较低，功能较少。使用这类手机的目标受众大部分属于亚洲或第三世界国家。因此，在为这个目标受众制作游戏时，开发者应考虑最低配置目标。
- en: Feature requirement
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能需求
- en: Feature requirement depends completely on the game design. When we talk about
    games on Android, the major focus is on mobile and tablet platforms. Mostly, Android
    games are made for these devices.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 功能需求完全取决于游戏设计。当我们谈论Android游戏时，主要关注的是移动和平板平台。大多数Android游戏都是为这些设备制作的。
- en: If we consider other platforms like watches, TVs, or consoles, the feature set
    varies. Televisions provide a bigger display with less user control, watches have
    limited display area and minimum configuration, consoles have better graphic quality
    with dedicated controls, and so on. It is very important to identify the feature
    list which is required to recognize the hardware devices.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们考虑其他平台，如手表、电视或游戏机，功能集会有所不同。电视提供较大的显示屏，用户控制较少，手表的显示区域有限，配置最低，游戏机具有更好的图形质量和专用控制等。识别所需的硬件设备的功能列表非常重要。
- en: There might be a scenario where an accelerometer, Bluetooth, Wi-Fi, or some
    other special feature is being used in a game, so the selected hardware platform
    must have those features. However, common mobile and tablet devices have almost
    the same set of features that a game developer might generally use. This feature
    dependency becomes very specific when Android games are made for some particular
    hardware platform like consoles or VR devices.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 可能存在这样一种情况，游戏中使用了加速计、蓝牙、Wi-Fi或其他特殊功能，因此所选的硬件平台必须具备这些功能。然而，普通的移动设备和平板设备几乎具有游戏开发者通常会使用的相同功能集。当为某些特定的硬件平台（如游戏机或VR设备）制作Android游戏时，这种功能依赖变得非常具体。
- en: Scope for portability
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可移植性的范围
- en: While choosing the target hardware device, every game developer must consider
    the scope for portability of games. The more portable a game becomes, lesser the
    effort required to select or choose the target hardware.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择目标硬件设备时，每个游戏开发者都必须考虑游戏的可移植性。游戏变得越可移植，选择目标硬件所需的工作量就越少。
- en: 'The portability of games always depends on the vision of the game developer.
    Porting can take two different approaches: platform porting and hardware porting.
    We will only focus on hardware porting here, as we have already fixed the platform
    to be Android.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏的可移植性始终取决于游戏开发者的愿景。移植可以采用两种不同的方法：平台移植和硬件移植。在这里，我们只关注硬件移植，因为我们已经确定了平台为Android。
- en: 'A game developer should focus on the following points to increase the portability
    of a game:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏开发者应该专注于以下几点，以增加游戏的可移植性：
- en: Creating different sets of assets
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建不同的资产集
- en: Designing different sets of controls
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计不同的控制集
- en: Finding and listing alternatives for a feature
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找和列出功能的替代方案
- en: Controlling memory usage
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制内存使用
- en: Controlling the frame rate
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制帧率
- en: A good portable game is a balanced combination of all of these preceding points.
    Most of the time, the target hardware is chosen first depending on the other parameters,
    and only then does the developer work on the portability of the game.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的便携游戏是所有这些前述要点的平衡组合。大多数情况下，目标硬件是根据其他参数首先选择的，然后开发者才会着手游戏的可移植性。
- en: Best practices for making an Android game
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作Android游戏的最佳实践
- en: 'Making an Android game is not a big deal. But making the game in the right
    way through which the game looks great, and performs well across as many devices
    as possible, is very important. The best practices should focus on the following
    points:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 制作Android游戏并不是一件大事。但是通过正确的方式制作游戏，使游戏在尽可能多的设备上看起来很棒，并且性能良好，这是非常重要的。最佳实践应该关注以下几点：
- en: Maintaining game quality
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护游戏质量
- en: Minimalistic user interface
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极简用户界面
- en: Supporting maximum resolutions
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持最大分辨率
- en: Supporting maximum devices
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持最大设备
- en: Background behavior
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后台行为
- en: Interruption handling
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中断处理
- en: Maintaining battery usage
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护电池使用
- en: Extended support for multiple visual qualities
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对多种视觉质量的扩展支持
- en: Introducing social networking and multiplayer
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入社交网络和多人游戏
- en: Let's discuss these in brief here. We will elaborate on this in detail later
    as the book progresses.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在这里简要讨论一下。随着书籍的进展，我们将在后面详细阐述这些内容。
- en: Maintaining game quality
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维护游戏质量
- en: There are millions of games available in the market, and thousands being introduced
    every week. So, just making a good game is not enough nowadays. Every developer
    should maintain their game periodically to cope with the quality of other improved
    games.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有数百万款游戏，每周都有数千款新游戏推出。因此，仅仅制作一个好游戏已经不够了。每个开发者都应该定期维护他们的游戏，以适应其他改进游戏的质量。
- en: The developer should keep a constant eye on the reviews and complaints from
    the users. The game quality can be improved a lot based on this feedback. No one
    can predict the exact user reaction to the game before it is out in the market.
    So, in most cases, it is noticed that the game goes through a drastic change in
    design, or other means, to keep the consumer happy.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者应该时刻关注用户的评论和投诉。根据这些反馈，游戏的质量可以得到很大的改善。在游戏上市之前，没有人能够准确预测用户对游戏的反应。因此，在大多数情况下，游戏的设计或其他方面都会经历剧烈的变化，以保持消费者的满意度。
- en: There are a few other ways to track the behavior of consumers/players. There
    are several tools available to do this job efficiently, such as Google Analytics,
    Game Analytics, Flurry, and so on. Besides these internal integrations, user comments
    on stores or blogs are helpful to maintain the quality of a game.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他跟踪消费者/玩家行为的方法。有几种工具可以高效地完成这项工作，比如Google Analytics、Game Analytics、Flurry等等。除了这些内部集成，用户在商店或博客上的评论也有助于维护游戏的质量。
- en: Fixing bugs in a game is another major factor in increasing the quality of the
    game. It is not possible to get rid of all the bugs inside the game during development.
    The App Store bug report tool is useful for tracking major crashes and ANRs when
    the game is out in the market. Besides this, the developer can use Android error
    reporting to track errors and bugs from real users. Android provides this feature
    in Android versions 2.2 and later.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 修复游戏中的错误是提高游戏质量的另一个重要因素。在开发过程中不可能摆脱游戏内的所有错误。应用商店的错误报告工具对于跟踪游戏上市后的重大崩溃和ANR非常有用。除此之外，开发者可以使用Android错误报告来跟踪真实用户的错误和bug。Android在2.2版本及以后提供了这个功能。
- en: Two more parameters that improve the quality of the game are stable gameplay,
    and consistent frame rate.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 提高游戏质量的另外两个因素是稳定的游戏玩法和一致的帧率。
- en: Minimalistic user interface
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 极简用户界面
- en: This is a typical design practice for Android games. A common mistake that many
    developers make is that they design a long and hectic user interface to take the
    user to the gameplay. This section should be as short as possible. The player
    should experience the game with minimum effort the very first time. Most users
    leave games because of the heavy UI interface.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Android游戏的典型设计实践。许多开发者犯的一个常见错误是设计一个冗长而繁琐的用户界面来引导用户进入游戏。这一部分应该尽可能地简短。玩家应该在第一次体验游戏时尽量少地付出努力。大多数用户会因为繁重的UI界面而离开游戏。
- en: Technically, a developer should take care of the device UI options like Menu,
    Back, and Home. These are the most common options for the Android mobile and tablet
    platforms. The behavior of all these options should be controlled within the game,
    as the user might press/touch them accidentally while playing the game. Also,
    there should be a quick interface to quit the game.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，开发者应该注意设备的UI选项，比如菜单、返回和主页。这些是Android手机和平板电脑平台上最常见的选项。所有这些选项的行为应该在游戏内进行控制，因为用户在玩游戏时可能会意外按到/触摸到它们。此外，应该有一个快速的界面来退出游戏。
- en: Basically, having a minimum user interface and fewer screen transactions saves
    a lot of time, which has a direct impact on gameplay sessions.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，拥有最少的用户界面和较少的屏幕切换可以节省大量时间，这对游戏的游戏时间有直接影响。
- en: Supporting maximum resolutions
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持最大分辨率
- en: This is a very obvious point for creating a good Android game. A game must support
    as many resolutions as possible. Android, in particular has many different screen
    sizes available in the market.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这是制作一个好的Android游戏的一个非常明显的要点。游戏必须支持尽可能多的分辨率。特别是Android在市场上有许多不同的屏幕尺寸可用。
- en: 'Android has a series of different resolution sets:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Android有一系列不同的分辨率集：
- en: LDPI (approximately 120 dpi)
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDPI（大约120 dpi）
- en: MDPI (approximately 160 dpi)
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MDPI（大约160 dpi）
- en: HDPI (approximately 240 dpi)
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HDPI（大约240 dpi）
- en: XHDPI (approximately 320 dpi)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XHDPI（大约320 dpi）
- en: XXHDI (approximately 480 dpi)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XXHDI（大约480 dpi）
- en: XXXHDPI (approximately 640 dpi)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XXXHDPI（大约640 dpi）
- en: If they do not follow multiple resolution specifications, the developer can
    also opt for the screen compatibility option available as a last resort. However,
    it is recommended not to use this feature of Android, because it can reduce the
    visual quality significantly. This option is, by default, disabled from Android
    API version 11.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果他们不遵循多个分辨率规范，开发者也可以选择作为最后手段的屏幕兼容性选项。然而，建议不要使用这个Android的功能，因为它可能会显著降低视觉质量。这个选项在Android
    API版本11中默认是禁用的。
- en: Supporting maximum devices
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持最大设备
- en: Other than the different screen sizes, Android has a variety of device configurations.
    Most developers filter the device list only by screen resolution, which is a bad
    practice. An Android game developer should always consider the target device configuration
    along with the resolution.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 除了不同的屏幕尺寸，Android还有各种设备配置。大多数开发者只通过屏幕分辨率来过滤设备列表，这是一个不好的做法。Android游戏开发者应该始终考虑目标设备配置以及分辨率。
- en: When building their applications, developers should remember not to make assumptions
    about specific keyboard layouts, the touch interface, or other interactive systems
    unless, of course, the game is restricted so that it can only be used on those
    devices.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建他们的应用程序时，开发者应该记住不要对特定的键盘布局、触摸界面或其他交互系统做出假设，除非游戏被限制只能在这些设备上使用。
- en: Optimizing the application in terms of memory and performance is also helpful
    in supporting more devices. The developer should not restrict them to only a few
    sets of devices. Optimal use of disk space and the processor opens up the opportunity
    to increase the support range.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在内存和性能方面优化应用程序也有助于支持更多设备。开发者不应该将其限制在只支持少数设备。最佳地利用磁盘空间和处理器可以增加支持范围的机会。
- en: A single game application build can support more devices with some simple tricks.
    On Android activity launch, the developer should detect hardware information,
    and use that to create some sort of rules by which the entire game quality and
    processing speed can be controlled.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一个游戏应用程序构建可以通过一些简单的技巧支持更多设备。在Android活动启动时，开发者应该检测硬件信息，并使用它来创建某种规则，通过这些规则可以控制整个游戏的质量和处理速度。
- en: Background behavior
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 后台行为
- en: A few tasks in a game may run in the background while the main thread is running.
    These are called asynchronous tasks, mostly used for loading a large file or fetching
    something from the Internet.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在主线程运行时，游戏中的一些任务可能会在后台运行。这些被称为异步任务，主要用于加载大文件或从互联网获取数据。
- en: Another type of background task is called services, which works even when the
    main application thread is not running. This is a very useful feature for communicating
    with the device on which the game is installed.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种后台任务称为服务，即使主应用程序线程没有运行，也可以工作。这是一个非常有用的功能，用于与安装了游戏的设备进行通信。
- en: It is a good practice for any game developer to use these features in the game
    properly. A large chunk of data usually takes longer time, but it should not pause
    the game loop. In another scenario, asynchronous tasks are used when the game
    communicates with the Internet or other connectivity. This feature helps to keep
    the main thread running, and provides dynamic feedback.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何游戏开发者来说，合理使用这些功能是一个很好的做法。通常大量的数据需要更长时间，但不应该暂停游戏循环。在另一种情况下，异步任务用于游戏与互联网或其他连接进行通信。这个功能有助于保持主线程运行，并提供动态反馈。
- en: Background services are useful for increasing the communication between the
    developer and user. They can provide user activity information to improve the
    game as well as notifying users about the latest update or information.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 后台服务对增加开发者和用户之间的通信很有用。它们可以提供用户活动信息，以改进游戏，并通知用户有关最新更新或信息。
- en: Interruption handling
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 中断处理
- en: Interruption handling is one of the trickiest parts of game development. As
    we discussed earlier about the game loop, the loop pauses or, sometimes, terminates
    on any external interruption. In an ongoing game cycle, the interruption should
    not harm the gaming experience. It is a very common problem for developers that
    the game restarts after being interrupted. Android is most likely to kill the
    game activity if it remains in an idle state for a long time, or if some other
    activity needs provision to run. In these cases, most of the time, the player
    loses his/her progress.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 中断处理是游戏开发中最棘手的部分之一。正如我们之前讨论过的游戏循环一样，循环会在任何外部中断时暂停或有时终止。在进行中的游戏周期中，中断不应该影响游戏体验。对开发者来说，一个非常常见的问题是游戏在被中断后重新启动。如果Android游戏活动在空闲状态下保持很长时间，或者其他活动需要运行，Android很可能会终止游戏活动。在这些情况下，大多数时候玩家会失去他/她的进度。
- en: It is good practice to save the user progress periodically to avoid any loss
    of data or progression. But saving data may cause lags in the game loop, and can
    drop the frame rate significantly. The game developer should identify the states
    where the data can be saved without affecting the gaming experience.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 定期保存用户进度是一个很好的做法，以避免数据或进度的丢失。但保存数据可能会导致游戏循环出现延迟，并且可能会显著降低帧率。游戏开发者应该确定可以在不影响游戏体验的情况下保存数据的状态。
- en: The way to handle this issue in a multi-activity application is to detect and
    pause/resume all the running threads. Many times, the game developer keeps running
    the thread, as the primary objective is just to pause/resume the game loop properly
    on interruption. In most cases, all of the background processes do not pause,
    causing unusual behavior by the game.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在多活动应用程序中处理这个问题的方法是检测并暂停/恢复所有正在运行的线程。很多时候，游戏开发者会保持线程运行，因为主要目标只是在中断时正确地暂停/恢复游戏循环。在大多数情况下，所有的后台进程都不会暂停，导致游戏出现异常行为。
- en: Maintaining battery usage
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维护电池使用
- en: One of the reasons for the success of an Android game is power efficiency. Most
    likely, the Android hardware platform will be a mobile device, which has a limited
    source of power. So power-saving applications are always preferred.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Android游戏成功的原因之一是功耗效率。Android硬件平台很可能是移动设备，其电源来源有限。因此，节能应用程序总是首选。
- en: A major chunk of the battery is consumed by rendering and network connectivity.
    From the gaming perspective, rendering and connectivity are both necessary. So,
    there is a fair chance that the game uses up a lot of power.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 电池的主要部分被渲染和网络连接所消耗。从游戏的角度来看，渲染和连接都是必要的。因此，游戏消耗大量电力的可能性很大。
- en: Most game developers focus a lot on visual appearance. It increases the graphic
    quality as well as battery consumption. So it is a very good practice for the
    developer to always focus more on the technical quality of the graphical assets.
    Assets should not boost up processing or rendering, as, developers often use non-optimized
    assets.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数游戏开发人员都非常注重视觉效果。这会提高图形质量，同时也会增加电池消耗。因此，开发人员始终应更多关注图形资产的技术质量是一个非常好的做法。资产不应该增加处理或渲染，因为开发人员经常使用非优化的资产。
- en: Another process which consumes a lot of battery is background services. These
    are used widely for better connectivity with consumers or for some web-based services.
    Technically this process pings frequently to stay connected with the desired network.
    Developers can control this frequency. Another way to avoid this is by killing
    a service which is not connected for a long time or was disconnected from the
    network, with the help of Android **PackageManager**.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个消耗大量电池的过程是后台服务。这些广泛用于与消费者更好地连接或用于一些基于网络的服务。从技术上讲，这个过程频繁地ping以保持与所需网络的连接。开发人员可以控制这种频率。避免这种情况的另一种方法是通过使用Android
    **PackageManager**杀死长时间未连接或已从网络断开连接的服务。
- en: In many cases, it is seen that a game becomes popular, or has a better user
    count than another, better-quality game, just because of lower battery consumption.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，人们会发现一个游戏变得流行，或者用户数量比其他质量更好的游戏更多，仅仅是因为电池消耗较低。
- en: If the developers can determine that connectivity is lost, then all of the receivers
    except the connectivity-change receiver can be disabled using native APIs. Conversely,
    once the developers are connected, then they can stop listening for connectivity
    changes, and simply check to see if the application is online immediately before
    performing an update; they can then reschedule a recurring update alarm.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果开发人员可以确定连接丢失，那么除了连接更改接收器之外，可以使用本机API禁用所有接收器。相反，一旦开发人员连接，他们可以停止监听连接更改，并在执行更新之前立即检查应用程序是否在线；然后可以重新安排定期更新警报。
- en: Developers can use the same technique to delay a download that requires higher
    bandwidth to complete simply by enabling a broadcast receiver, which will listen
    for connectivity changes, and initiate the download only after the application
    is connected to Wi-Fi. This significantly reduces battery use.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以使用相同的技术来延迟需要更高带宽才能完成的下载，只需启用广播接收器，监听连接更改，并在应用程序连接到Wi-Fi后才启动下载。这可以显著减少电池使用。
- en: Extended support for multiple visual quality
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对多种视觉质量的扩展支持
- en: 'This section actually starts with supporting multiple resolutions. We have
    already discussed multiple-size screens with different dpi. The following list
    is another standard that Android devices follow:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分实际上是从支持多种分辨率开始的。我们已经讨论了具有不同dpi的多尺寸屏幕。以下列表是Android设备遵循的另一个标准：
- en: QVGA (low PPI)
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QVGA（低PPI）
- en: WQVGA (medium-low PPI)
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WQVGA（中低PPI）
- en: HVGA (medium-high PPI)
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HVGA（中等PPI）
- en: WVGA (medium-high PPI)
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WVGA（中高PPI）
- en: SVGA (high PPI)
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SVGA（高PPI）
- en: VGA (very high PPI)
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VGA（非常高PPI）
- en: Creating graphics using this standard is always beneficial in order to achieve
    the best possible visual quality across devices. This notation mainly depends
    on the screen size, irrespective of the resolution. It is very common for Android
    devices to have the same resolution running on different screen sizes. Creating
    assets specially optimized for targeted devices will always help to increase the
    visual quality.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种标准创建图形始终是有益的，以实现跨设备的最佳视觉质量。这种表示法主要取决于屏幕大小，而不是分辨率。在Android设备上，相同的分辨率在不同的屏幕尺寸上运行是非常常见的。专门为目标设备优化的资产将有助于提高视觉质量。
- en: Introducing social networking and multiplayer
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引入社交网络和多人游戏
- en: The gaming industry's style and standards are changing rapidly. Now gaming is
    being used for social connectivity, which is, connecting more than one real user
    on a single platform. Very careful use of this social element can increase the
    user base and retention rate significantly.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏行业的风格和标准正在迅速变化。现在游戏被用于社交连接，即在单个平台上连接多个真实用户。非常谨慎地使用这种社交元素可以显著增加用户群和留存率。
- en: In many games, there is the possibility of more than one user being able to
    experience the same game state together, and to improve the game play by real-time
    interaction. A few board games such as Chess, Ludo, and Snakes and Ladders, are
    examples of such a possibility. Beside those, some real-time online multiplayer
    games are also at their peak.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多游戏中，有可能让多个用户一起体验相同的游戏状态，并通过实时互动来改善游戏玩法。一些棋类游戏，如国际象棋、飞行棋和蛇梯棋，就是这种可能的例子。除此之外，一些实时在线多人游戏也正处于巅峰状态。
- en: Google has its own multiplayer features through Google Play Services. Besides
    popular turn-based and real-time multiplayer support, Google has also introduced
    a feature to connect players in close proximity on a single platform through Wi-Fi,
    called **Google Nearby**. There are many other third-party platforms that support
    multiplayer.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌通过Google Play服务拥有自己的多人游戏功能。除了流行的回合制和实时多人游戏支持外，谷歌还通过Wi-Fi引入了一项功能，可以将靠近的玩家连接到单个平台上，称为**Google
    Nearby**。还有许多其他第三方平台支持多人游戏。
- en: Summary
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Making an Android game is not difficult, making a successful game is. From a
    technical point of view, a successful game must provide smooth gameplay to provide
    users with an excellent, swift gaming experience. Great visual quality with better
    graphics always attracts users and other potential players nearby, while fewer
    bugs removes the irritation of users during gameplay, and the game can perform
    according to plan. A wide range of device support can increase the number of users
    and gameplay sessions, optimal use of resources ensures the minimum possible application
    package size, and finally, a good relationship between the developer and users,
    through excellent communication skills, can eliminate the few doubts and confusions
    of the users.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 制作安卓游戏并不困难，但要制作一款成功的游戏就不同了。从技术角度来看，一款成功的游戏必须提供流畅的游戏体验，为用户提供出色、迅速的游戏体验。出色的视觉质量和更好的图形总是吸引用户和其他潜在玩家，而较少的错误可以消除用户在游戏过程中的烦恼，游戏可以按计划进行。广泛的设备支持可以增加用户数量和游戏次数，资源的最佳利用确保了最小可能的应用程序包大小，最后，开发者与用户之间良好的关系，通过出色的沟通技巧，可以消除用户的一些疑虑和困惑。
- en: We have covered all of these points in brief to give you an idea about how to
    make a successful Android game. Making an Android game is no different to making
    any software. However, a game must follow some practices in order to achieve its
    fun element. You will learn in detail about making an efficient Android game later
    in this book. You will also eventually learn about several aspects of game development
    for the Android platform. You will recognize and realize the current state of
    available Android devices made by various manufacturers. There are many types
    of devices, which we will have a look into.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经简要介绍了所有这些要点，以便让您了解如何制作一款成功的安卓游戏。制作安卓游戏与制作任何软件并无二致。然而，为了实现游戏的乐趣元素，游戏必须遵循一些实践。您将在本书的后面详细了解如何制作高效的安卓游戏。您还将最终了解安卓平台的游戏开发的几个方面。您将认识并了解由各种制造商制造的当前可用安卓设备的现状。有许多类型的设备，我们将一一了解。
- en: We will try to explore a better and efficient approach for Android game development
    ,with many development procedures, styles, and standards for different hardware
    platforms. We will further dig deep, with game-specific development standards
    for 2D, 3D, and virtual reality games. We will further discuss native development,
    with shaders and various optimization techniques.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试探索一种更好、更高效的安卓游戏开发方法，针对不同硬件平台有许多开发流程、风格和标准。我们将进一步深入，针对2D、3D和虚拟现实游戏制定特定的开发标准。我们还将讨论原生开发，包括着色器和各种优化技术。
- en: Then, finally, we will explore various ways to make a successful game, which
    is good enough from the monetization point of view. Since developers must know
    about each and every user behavior to make the game better, you can realize the
    power of data collected from users through this book.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将探讨各种使游戏成功的方法，从盈利的角度来看是足够好的。由于开发者必须了解每个用户的行为以使游戏更好，您可以通过本书了解从用户那里收集到的数据的力量。
