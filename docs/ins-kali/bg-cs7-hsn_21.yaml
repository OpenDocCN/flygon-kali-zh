- en: Using LINQ to Operate on Tables from SQL Server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用LINQ操作来自SQL Server的表
- en: In this chapter, you will learn how to use LINQ together with SQL and SQL Server.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何将LINQ与SQL和SQL Server一起使用。
- en: Changing the data in the ExperimentValues table
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改ExperimentValues表中的数据
- en: 'We will be working with the database table that we created in the previous
    chapter called `ExperimentValues`, as shown in *Figure 21.6.1*:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在上一章中创建的数据库表`ExperimentValues`，如*图21.6.1*所示：
- en: '![](img/af7483e3-85ce-4d88-9e4b-b5f558bc4805.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af7483e3-85ce-4d88-9e4b-b5f558bc4805.png)'
- en: 'Figure 21.6.1: The ExperimentValues table from chapter 20'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图21.6.1：第20章的ExperimentValues表
- en: Remember that the table has an `Id` field (PK, primary key integer, and not
    null) and then `XValues (decimal, (18, 3)`, which means 18 units wide with 3 decimal
    places and then 15 units to the left for 18 units altogether. You can make this
    `null` if you want. Likewise, with `YValues, (decimal, (18, 3)`; so, 3 places
    to the right of the decimal, and 15 units to the left for 18 units altogether.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，表中有一个`Id`字段（PK，主键整数，非空），然后是`XValues（十进制，（18, 3）`，表示宽18个单位，小数点后3位，然后左边15个单位，总共18个单位。如果你愿意，你可以将其设置为`null`。同样，`YValues（十进制，（18,
    3）`；所以，小数点后3位，然后左边15个单位，总共18个单位。
- en: 'Now make sure that you have data in there. So, right-click on `dbo.ExperimentValues`
    and select View Data. You should see the data that we entered in the previous
    chapter. Of course, you can always change it. To make things easier, let''s change
    the values to those shown in *Figure 21.6.2*:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在确保你在里面有数据。所以，右键单击`dbo.ExperimentValues`并选择查看数据。你应该看到我们在上一章中输入的数据。当然，你可以随时更改它。为了使事情变得更容易，让我们将值更改为*图21.6.2*中显示的值：
- en: '![](img/f0ecdcfe-09f3-4fd1-a485-cf7f7dd35f1f.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0ecdcfe-09f3-4fd1-a485-cf7f7dd35f1f.png)'
- en: 'Figure 21.6.2: The new data for the ExperimentValues table'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图21.6.2：ExperimentValues表的新数据
- en: If you want, you can reload it to see that it's saved. So that's our simple
    database table.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，你可以重新加载它以查看它是否已保存。这就是我们简单的数据库表。
- en: Summarizing the fields
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结字段
- en: 'Now we will reach into it and summarize the fields. You will find the sum of
    the `X` values and the sum of the `Y` values using LINQ. First, go into <html>
    and place a button below the line that begins with `<form id= ....`. Go to Toolbox
    (*Ctrl* + *Alt* + *X*), grab a `Button` control, and drag it in there. Change
    the text on the button to say Sum Fields. Of course, several other operations
    can be performed. This is just one operation: summation.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将进入并总结字段。您将使用LINQ找到`X`值的总和和`Y`值的总和。首先，进入<html>，并在以`<form id= ....`开头的行下方放置一个按钮。转到工具箱（*Ctrl*
    + *Alt* + *X*），获取一个`Button`控件，并将其拖放到那里。更改按钮上的文本以显示Sum Fields。当然，还可以执行其他几个操作。这只是一个操作：求和。
- en: 'Close Toolbox and switch to the Design view. Double-click on the Sum Fields
    button. This takes us into `Default.aspx.cs`. Delete the `Page_Load` block. The
    relevant portion of the starting code for this project should look like *Figure
    21.6.3*:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭工具箱并切换到设计视图。双击Sum Fields按钮。这将带我们进入`Default.aspx.cs`。删除`Page_Load`块。该项目的起始代码的相关部分应如*图21.6.3*所示：
- en: '![](img/6540bf85-5f28-45fb-9087-4753daf880e7.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6540bf85-5f28-45fb-9087-4753daf880e7.png)'
- en: 'Figure 21.6.3: The starting code section for this project'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图21.6.3：该项目的起始代码部分
- en: Adding the namespaces
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加命名空间
- en: 'First, near the top of the file under `using System`, enter the following lines,
    all of which are necessary:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在文件顶部的`using System`下，输入以下所有必要的行：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Building the connection string
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建连接字符串
- en: 'The next stage will be to make a connection string, so within a set of curly
    braces below the line that begins with `protected void Button1_Click...`, start
    by entering `string connString =`, followed by the `@` symbol to make it a verbatim
    string, and then you put the `""` symbols. Now to get the connection string, do
    the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下一阶段将是建立连接字符串，所以在以下行下的一对大括号中，首先输入`string connString =`，然后跟上`@`符号使其成为逐字字符串，然后放入`""`符号。现在要获取连接字符串，执行以下操作：
- en: Click on View in the menu bar, and select SQL Server Object Explorer.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击菜单栏中的“查看”，然后选择“SQL Server对象资源管理器”。
- en: Right-click on the `People` database, and select Properties.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`People`数据库，然后选择属性。
- en: In the Properties pane, double-click on Connection String to select it with
    its long description.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性窗格中，双击连接字符串以选择带有其长描述的内容。
- en: Then right-click on the long description and copy it.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后右键单击长描述并复制它。
- en: Paste the description between a set of `""` symbols.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将描述粘贴在一对`""`符号之间。
- en: 'The connection string line should then look like the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后连接字符串行应如下所示：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can now close the SQL Server Object Explorer and Properties panes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以关闭SQL Server对象资源管理器和属性窗格。
- en: Making the SQL connection
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建立SQL连接
- en: 'In the next stage, we will proceed as usual. So, enter the following line:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一阶段，我们将像往常一样进行。所以，输入以下行：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Notice, as you type this, you see that `SqlClient` in the `using System.Data.SqlClient;`
    line at the top of the file becomes active. It changes to black. This means that
    the SQL connection is stored there, and if you hover your mouse over it, it also
    tells you that this is the case: class System.Data.SqlClient.SqlConnection'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当你输入这个时，你会看到文件顶部的`using System.Data.SqlClient;`行中的`SqlClient`变为活动状态。它变成了黑色。这意味着SQL连接存储在那里，如果你将鼠标悬停在上面，它还会告诉你这一点：class
    System.Data.SqlClient.SqlConnection
- en: 'In the next stage, enter the following between a set of curly braces below
    this line:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一阶段，在此行下的一对大括号之间输入以下内容：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Between the parentheses that follow `SqlCommand()`, you put the text that defines
    the command directly into the constructor as an argument. Remember, you already
    have `ExperimentValues`. The `*` symbol means select all of the columns. So, you
    need the command text and then the connection.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在`SqlCommand()`后面的括号之间，将定义命令的文本直接放入构造函数作为参数。记住，你已经有了`ExperimentValues`。`*`符号表示选择所有列。所以，你需要命令文本和连接。
- en: Making an adapter
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作适配器
- en: 'Next, you will make an adapter. So, enter the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将创建一个适配器。所以，输入以下内容：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, `SqlDataAdapter` is something that exists between the actual database
    and us. It's a way of adapting the information from here to there, so to speak.
    To initialize it, you can pass in a specific SQL command. So, in our case we will
    pass in `(command)`. You can add the comment, `//make adapter`, following this
    line.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`SqlDataAdapter`是存在于实际数据库和我们之间的东西。这是一种将信息从这里适应到那里的方式。要初始化它，可以传入特定的SQL命令。因此，在我们的情况下，我们将传入`(command)`。您可以在此行后面添加注释`//make
    adapter`。
- en: Making a data table
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作数据表
- en: 'Next, you''ll make a data table, as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将制作一个数据表，如下所示：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Again, notice that, once you type `DataTable`, the `using System.Data;` namespace
    at the top of the file becomes active. So, if hover your mouse over `DataTable`,
    it says class System.Data.DataTable. This is where it's stored. So, it's stored
    at the `Data` namespace.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 再次注意，一旦输入`DataTable`，文件顶部的`using System.Data;`命名空间就会激活。因此，如果将鼠标悬停在`DataTable`上，它会说System.Data.DataTable类。这就是它存储的地方。因此，它存储在`Data`命名空间中。
- en: Populating the table with data
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用数据填充表
- en: 'Now we need to fill this table with some information. So, enter the following
    next:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要用一些信息填充这个表。因此，接下来输入以下内容：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here, you type the name of the adapter, and then the dataset to be filled.
    So, with these three lines, first you make an adapter and get information using
    a SQL command, and then you make a data table. Then you use the adapter to fill
    that table. Now we can make use of it as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您输入适配器的名称，然后填充数据集。因此，通过这三行，首先制作一个适配器并使用SQL命令获取信息，然后制作一个数据表。然后使用适配器填充该表。现在我们可以如下使用它：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we can take that data table and make it enumerable so that we can go
    through it. Note that we''re throwing a Lambda expression in there using `=>`;
    `<decimal>` is the data type, and then, if you hover your mouse over the parentheses
    after `<decimal>()`, the tooltip says (`DataColumn column`): Provides strongly-typed
    access to each of the columns values in the specified row. So, insert a 1 between
    the parentheses.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '在这里，我们可以将数据表变成可枚举的，以便我们可以浏览它。请注意，我们在其中使用`=>`添加了一个Lambda表达式；`<decimal>`是数据类型，然后，如果将鼠标悬停在`<decimal>()`括号后面，工具提示会说(`DataColumn
    column`): 提供对指定行中每个列值的强类型访问。因此，在括号之间插入1。'
- en: 'Next, enter the following for the `summedYValues` variable, and note that we
    put a 2 between the parentheses:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为`summedYValues`变量输入以下内容，并注意我们在括号之间放了一个2：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once you have entered all of that, then you can display the sum of the `x`
    and `y` values, so enter the following lines next:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您输入了所有这些，然后您可以显示`x`和`y`值的总和，因此接下来输入以下行：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Displaying the summed values
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示总和值
- en: In the preceding lines, note that the first line does not need a `<br>` tag,
    but the next line does. Also, the first line just needs `=`, while the next line
    needs `+=` to append.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的行中，请注意第一行不需要`<br>`标签，但下一行需要。此外，第一行只需要`=`, 而下一行需要`+=`来追加。
- en: Running the program
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行程序
- en: 'Remember, the idea is to sum the fields, so open your browser and click on
    the Sum Fields button:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，目的是对字段求和，因此打开浏览器，然后单击Sum Fields按钮：
- en: '![](img/3259b843-4776-4386-a4ca-53cb1b6f2276.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3259b843-4776-4386-a4ca-53cb1b6f2276.png)'
- en: 'Figure 21.6.4: The initial results of running our program'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图21.6.4：运行我们程序的初始结果
- en: 'You can see that the Sum of Y values is 50.000, and the Sum of X values is
    10.000\. You can confirm that this is working as expected by opening the SQL Server
    Object Explorer pane, right-clicking on the `ExperimentValues` table, and adding
    up the values, as seen in *Figure 21.6.5*:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到Y值的总和为50.000，X值的总和为10.000。您可以通过打开SQL Server对象资源管理器窗格，右键单击`ExperimentValues`表，并将值相加来确认这是否按预期工作，如*图21.6.5*所示：
- en: '![](img/2a699f26-0334-4448-ba0e-7081be08fe93.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a699f26-0334-4448-ba0e-7081be08fe93.png)'
- en: 'Figure 21.6.5: Add the values in the X and Y columns'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图21.6.5：添加X和Y列中的值
- en: The XValues column adds up to 10.000, and the YValues column adds up to 50.000\.
    Both of these sums check with the results of the program run.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: XValues列加起来是10.000，YValues列加起来是50.000。这两个总和与程序运行的结果一致。
- en: Close the `ExperimentValues` table window and the SQL Object Explorer pane.
    This is working as expected again.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭`ExperimentValues`表窗口和SQL对象资源管理器窗格。这次又按预期工作了。
- en: Adding comments
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加注释
- en: 'Now add this comment above the connection string line:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在连接字符串行上面添加此注释：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Whenever you deal with low-level resources, apply a `using` block. Add the
    following comment above the line that begins with `using (SqlConnection conn...`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 每当处理低级资源时，应用`using`块。在以`using (SqlConnection conn...`开头的行上面添加以下评论：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Remember, the purpose is to make it, use it, and dispose off it properly so
    that there are no memory leaks remaining. Do that whenever you're dealing with
    hard drive access, for example.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，目的是正确地制作、使用和处理它，以便不会留下任何内存泄漏。每当处理硬盘访问时，例如，都要这样做。
- en: 'Add the following comment above the line that begins with `SqlCommand command
    =...`:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在以`SqlCommand command =...`开头的行上面添加以下评论：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, add the following comment above the line that begins with `sqlDataAdapter
    adapter...` to emphasize the purpose of the adapter:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在以`sqlDataAdapter adapter...`开头的行上面添加以下评论以强调适配器的目的：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Also, add this comment at the very end of the line:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，在该行的末尾添加此评论：
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Next, for `DataTable dt...`, add this comment:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，对于`DataTable dt...`，添加此注释：
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The adapter is the mechanism that allows us to fill the table, so add the following
    comment at the end of the `adapter.Fill(dt);` line:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 适配器是允许我们填充表的机制，因此在`adapter.Fill(dt);`行的末尾添加以下评论：
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Next, add the following comment above line 30:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在第30行上面添加以下评论：
- en: '[PRE17]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, add the following comment above line 33:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在第33行上面添加以下评论：
- en: '[PRE18]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the following line, notice that the field here is `decimal`, because that''s
    how we made it in SQL Server, and 1 simply means the first field and the index
    is 1\. However, recall that this really means the second column because there
    are three columns:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一行中，请注意这里的字段是`decimal`，因为这是我们在SQL Server中创建的，1只是表示第一个字段，索引为1。然而，请记住，这实际上意味着第二列，因为有三列：
- en: '[PRE19]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'As can be seen in *Figure 21.6.6*, Id is really index 0, XValues is index 1,
    and YValues is index 2\. This is why we use 1 and 2 here, because there are three
    columns where the second column is at index 1:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图21.6.6*所示，Id实际上是索引0，XValues是索引1，YValues是索引2。这就是为什么我们在这里使用1和2，因为有三列，其中第二列位于索引1：
- en: '![](img/a74c7f3f-19ba-46a5-a6e0-6e4b887e35c0.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a74c7f3f-19ba-46a5-a6e0-6e4b887e35c0.png)'
- en: 'Figure 21.6.6: Id is index 0, XValues is index 1, and YValues is index 2'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图21.6.6：Id是索引0，XValues是索引1，YValues是索引2
- en: Chapter review
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 章节回顾
- en: The complete version of the `Default.aspx.cs` file for this chapter, including
    comments, is shown in the following code block.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的`Default.aspx.cs`文件的完整版本，包括注释，如下面的代码块所示。
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Summary
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to use LINQ together with SQL and SQL Server.
    You changed the data in the `ExperimentValues` table, wrote code to summarize
    the fields using LINQ, added namespaces, built the connection string, made the
    SQL connection, made the adapter, made the data table, populated the table with
    data, displayed the summed values, ran the program, and finally added comments.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何将LINQ与SQL和SQL Server一起使用。您更改了`ExperimentValues`表中的数据，编写了使用LINQ对字段进行汇总的代码，添加了命名空间，构建了连接字符串，建立了SQL连接，创建了适配器，创建了数据表，填充了数据表，显示了汇总值，运行了程序，并最终添加了注释。
- en: In the next chapter, you will learn how to make a page, save stuff from the
    page to a hard drive, and then read it back.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何制作一个页面，将页面上的内容保存到硬盘上，然后再读取它。
