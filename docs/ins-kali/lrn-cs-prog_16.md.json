["```cs\nC:\\Projects>dotnet new globaljson\nThe template \"global.json file\" was created successfully.\n```", "```cs\n{\n\u00a0\u00a0\u00a0\u00a0\"sdk\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"version\": \"3.0.100\"\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cs\nC:\\Projects>dotnet new sln -o HelloSolution\nThe template \"Solution File\" was created successfully.\n```", "```cs\ncd HelloSolution\ndotnet new console -o Hello\ndotnet sln add Hello\n```", "```cs\ncd Hello\nC:\\Projects\\HelloSolution\\Hello>dotnet run\nHello World!\n```", "```cs\nC:\\Projects\\HelloSolution\\Hello>dotnet watch run\nwatch : Started\nHello World!\nwatch : Exited\nwatch : Waiting for a file to change before restarting dotnet...\nwatch : Started\nHello Raf!\nwatch : Exited\nwatch : Waiting for a file to change before restarting dotnet...\n```", "```cs\nThe runtime and sdk versions listed by this command may be different from the ones on Windows. You should consider the opportunity to create a global.json outside the sources repository in order to avoid mismatches when cloning a repository on different operating systems.\n```", "```cs\nsudo apt-get install openssh-server\n(eventually configure the configuration file /etc/ssh/sshd_config)\nsystemctl start ssh\n```", "```cs\nssh username@machinenameORipaddress\n```", "```cs\nInstall-Module -Force OpenSSHUtils -Scope AllUsers\nRepair-UserSshConfigPermission ~/.ssh/config\nGet-ChildItem ~\\.ssh\\* -Include \"id_rsa\",\"id_dsa\" -ErrorAction SilentlyContinue | % {\n\u00a0\u00a0\u00a0\u00a0Repair-UserKeyPermission -FilePath $_.FullName @psBoundParameters\n}\n```", "```cs\nPath.Combine(\"..\", \"..\", \"..\", \"..\", \"Test\",\n\u00a0\u00a0\u00a0\u00a0\"bin\", \"Debug\", \"netcoreapp3.0\", \"test.exe\");\n```", "```cs\nif (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Linux!\");\nelse if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Windows!\");\nelse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"MacOS!\");\nelse if (RuntimeInformation.IsOSPlatform(OSPlatform.FreeBSD))\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"FreeBSD!\");\nelse\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Unknown :(\");\n```", "```cs\nC:\\Projects\\HelloSolution>dotnet new classlib -o MyLibrary\n```", "```cs\ndotnet sln add MyLibrary\n```", "```cs\nC:\\Projects\\HelloSolution>dotnet add Hello reference MyLibrary\nReference `..\\MyLibrary\\MyLibrary.csproj` added to the project.\n```", "```cs\nC:\\Projects\\HelloSolution>dotnet new classlib -f netcoreapp3.0 -o NetCoreLibrary\nC:\\Projects\\HelloSolution>dotnet add Hello reference NetCoreLibrary\n```", "```cs\ndotnet add package Newtonsoft.Json --version 12.0.3\n```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n \u2026\n\u00a0\u00a0<ItemGroup>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u2026\n\u00a0\u00a0</ItemGroup>\n\u00a0\u00a0<ItemGroup>\n\u00a0\u00a0\u00a0\u00a0<PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\n\u00a0\u00a0</ItemGroup>\n</Project>\n```", "```cs\n<PropertyGroup>\n\u00a0\u00a0\u00a0\u00a0...\n\u00a0\u00a0<AssemblyName>MyLibrary2</AssemblyName>\n <RootNamespace>MyLibrary2</RootNamespace>\n</PropertyGroup>\n```", "```cs\nC:\\Projects\\HelloSolution\\Hello>dotnet publish -c Release\n```", "```cs\n\u00a0\u00a0Hello -> C:\\Projects\\HelloSolution\\Hello\\bin\\Release\\netcoreapp3.0\\publish\\\n```", "```cs\nC:\\Projects\\HelloSolution\\Hello>dotnet publish -c Release -o myfolder\n```", "```cs\n\u00a0\u00a0Hello -> C:\\Projects\\HelloSolution\\Hello\\myfolder\\\n```", "```cs\ndotnet publish -c Release -r linux-x64 --no-self-contained\n```", "```cs\n\u00a0\u00a0Hello -> C:\\Projects\\HelloSolution\\Hello\\bin\\Release\\netcoreapp3.0\\linux-x64\\publish\\\n```", "```cs\ndotnet publish -c Release -r win-x64\n```", "```cs\n\u00a0\u00a0Hello -> C:\\Projects\\HelloSolution\\Hello\\bin\\Release\\netcoreapp3.0\\win-x64\\publish\\\n```", "```cs\ndotnet publish -r win-x64 -o folder -p:PublishSingleFile=true\n```", "```cs\n<PublishSingleFile>true</PublishSingleFile>\n<RuntimeIdentifier>win-x64</RuntimeIdentifier>\n```", "```cs\ndotnet publish -c Release -r win-x64 -p:PublishTrimmed=true\n```", "```cs\n<PublishTrimmed>true</PublishTrimmed>\n```", "```cs\ndotnet publish -c Release -r win-x64 -p:PublishReadyToRun=true\n```", "```cs\n<PublishReadyToRun>true</PublishReadyToRun>\n```", "```cs\ndotnet publish -c Release -p:TieredCompilationQuickJit=true\n```", "```cs\n<TieredCompilationQuickJit>false</TieredCompilationQuickJit>\n```"]