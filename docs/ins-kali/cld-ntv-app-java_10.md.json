["```java\npackage com.mycompany.product;\n\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n\n @SpringBootApplication\n public class ProductSpringApp {\n\n    public static void main(String[] args) throws Exception {\n       SpringApplication.run(ProductSpringApp.class, args);\n    }\n\n }\n```", "```java\n{ \n  \"AWSEBDockerrunVersion\": \"1\", \n  \"Image\": { \n    \"Name\": \"<aws-account-id>.dkr.ecr.us-west-2.amazonaws.com/product-api\", \n    \"Update\": \"true\" \n  }, \n  \"Ports\": [ \n    { \n      \"ContainerPort\": \"8080\" \n    } \n  ] \n} \n```", "```java\n<project  \n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <groupId>com.mycompany</groupId>\n   <artifactId>hello-lambda</artifactId>\n   <version>0.0.1-SNAPSHOT</version>\n\n   <dependencies>\n     <dependency>\n       <groupId>junit</groupId>\n       <artifactId>junit</artifactId>\n       <version>4.12</version>\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n       <groupId>com.amazonaws</groupId>\n       <artifactId>aws-lambda-java-core</artifactId>\n       <version>1.1.0</version>\n     </dependency>\n     <dependency>\n       <groupId>com.amazonaws</groupId>\n       <artifactId>aws-lambda-java-events</artifactId>\n       <version>2.0.1</version>\n     </dependency>\n     <dependency>\n       <groupId>com.amazonaws</groupId>\n       <artifactId>aws-lambda-java-log4j2</artifactId>\n       <version>1.0.0</version>\n     </dependency>\n   </dependencies>\n\n   <build>\n     <finalName>hello-lambda</finalName>\n     <plugins>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-compiler-plugin</artifactId>\n         <configuration>\n           <source>1.8</source>\n           <target>1.8</target>\n         </configuration>\n       </plugin>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-shade-plugin</artifactId>\n         <version>3.0.0</version>\n         <configuration>\n           <createDependencyReducedPom>false</createDependencyReducedPom>\n         </configuration>\n         <executions>\n           <execution>\n             <phase>package</phase>\n             <goals>\n               <goal>shade</goal>\n             </goals>\n           </execution>\n         </executions>\n       </plugin>\n     </plugins>\n   </build>\n\n </project>\n```", "```java\npackage com.mycompany;\n\n import com.amazonaws.services.lambda.runtime.Context;\n import com.amazonaws.services.lambda.runtime.RequestHandler;\n import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;\n import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;\n\n import java.net.HttpURLConnection;\n\n public class HelloHandler implements RequestHandler<APIGatewayProxyRequestEvent, APIGatewayProxyResponseEvent> {\n\n   @Override\n   public APIGatewayProxyResponseEvent handleRequest(APIGatewayProxyRequestEvent request, Context context) {\n     String who = \"World\";\n     if ( request.getPathParameters() != null ) {\n       String name  = request.getPathParameters().get(\"name\");\n       if ( name != null && !\"\".equals(name.trim()) ) {\n         who = name;\n       }\n     }\n     return new APIGatewayProxyResponseEvent().withStatusCode(HttpURLConnection.HTTP_OK).withBody(String.format(\"Hello %s!\", who));\n   }\n\n }\n```", "```java\npackage com.mycompany;\n\n import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;\n import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.BlockJUnit4ClassRunner;\n\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n\n import static org.junit.Assert.*;\n\n @RunWith(BlockJUnit4ClassRunner.class)\n public class HelloHandlerTest {\n\n   HelloHandler handler;\n   APIGatewayProxyRequestEvent input;\n   @Before\n   public void setUp() throws Exception {\n     handler = new HelloHandler();\n     Map<String, String> pathParams = new HashMap<>();\n     pathParams.put(\"name\", \"Universe\");\n     input = new APIGatewayProxyRequestEvent().withPath(\"/hello\").withPathParamters(pathParams);\n   }\n\n   @Test\n   public void handleRequest() {\n     APIGatewayProxyResponseEvent res = handler.handleRequest(input, null);\n     assertNotNull(res);\n     assertEquals(\"Hello Universe!\", res.getBody());\n   }\n   @Test\n   public void handleEmptyRequest() {\n     input.withPathParamters(Collections.emptyMap());\n     APIGatewayProxyResponseEvent res = handler.handleRequest(input, null);\n     assertNotNull(res);\n     assertEquals(\"Hello World!\", res.getBody());\n   }\n }\n```", "```java\n$ mvn clean package \n[INFO] Scanning for projects... \n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for com.mycompany:hello-lambda:jar:0.0.1-SNAPSHOT \n[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-compiler-plugin is missing. @ line 35, column 15 \n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build. \n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects. \n[WARNING] \n[INFO] \n[INFO] ------------------------------------------------------------------------ \n[INFO] Building hello-lambda 0.0.1-SNAPSHOT \n[INFO] ------------------------------------------------------------------------ \n[INFO] \n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ hello-lambda --- \n[INFO] Deleting /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target \n[INFO] \n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ hello-lambda --- \n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! \n[INFO] skip non existing resourceDirectory /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/src/main/resources \n[INFO] \n[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ hello-lambda --- \n[INFO] Changes detected - recompiling the module! \n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! \n[INFO] Compiling 1 source file to /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target/classes \n[INFO] \n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ hello-lambda --- \n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! \n[INFO] skip non existing resourceDirectory /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/src/test/resources \n[INFO] \n[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ hello-lambda --- \n[INFO] Changes detected - recompiling the module! \n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! \n[INFO] Compiling 1 source file to /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target/test-classes \n[INFO] \n[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ hello-lambda --- \n[INFO] Surefire report directory: /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target/surefire-reports \n\n------------------------------------------------------- \n T E S T S \n------------------------------------------------------- \nRunning com.mycompany.HelloHandlerTest \nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec \n\nResults : \n\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0 \n\n[INFO] \n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ hello-lambda --- \n[INFO] Building jar: /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target/hello-lambda.jar \n[INFO] \n[INFO] --- maven-shade-plugin:3.0.0:shade (default) @ hello-lambda --- \n[INFO] Including com.amazonaws:aws-lambda-java-core:jar:1.1.0 in the shaded jar. \n[INFO] Including com.amazonaws:aws-lambda-java-events:jar:2.0.1 in the shaded jar. \n[INFO] Including joda-time:joda-time:jar:2.6 in the shaded jar. \n[INFO] Including com.amazonaws:aws-lambda-java-log4j2:jar:1.0.0 in the shaded jar. \n[INFO] Including org.apache.logging.log4j:log4j-core:jar:2.8.2 in the shaded jar. \n[INFO] Including org.apache.logging.log4j:log4j-api:jar:2.8.2 in the shaded jar. \n[INFO] Replacing original artifact with shaded artifact. \n[INFO] Replacing /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target/hello-lambda.jar with /Users/shyam/workspaces/msa-wsp/CloudNativeJava/chapter-09/hello-lambda/target/hello-lambda-0.0.1-SNAPSHOT-shaded.jar \n[INFO] ------------------------------------------------------------------------ \n[INFO] BUILD SUCCESS \n[INFO] ------------------------------------------------------------------------ \n[INFO] Total time: 2.549 s \n[INFO] Finished at: 2018-02-12T13:52:14+05:30 \n[INFO] Final Memory: 25M/300M \n[INFO] ------------------------------------------------------------------------ \n```"]