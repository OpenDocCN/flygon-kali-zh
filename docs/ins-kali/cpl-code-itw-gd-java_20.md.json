["```java\nvoid run()\n```", "```java\nV call() throws Exception\n```", "```java\nsynchronized (queue) {\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0while (!queue.isEmpty()) {\n\u00a0\u00a0\u00a0\u00a0logger.info(\"Queue is not empty ...\");\n\u00a0\u00a0\u00a0\u00a0queue.wait();\n\u00a0\u00a0}\n}\n```", "```java\nsynchronized (queue) {\n\u00a0\u00a0String product = \"product-\" + rnd.nextInt(1000);\n\u00a0\u00a0// simulate the production time\n\u00a0\u00a0Thread.sleep(rnd.nextInt(MAX_PROD_TIME_MS)); \n\u00a0\u00a0queue.add(product);\n\u00a0\u00a0logger.info(() -> \"Produced: \" + product);\n\u00a0\u00a0queue.notify();\n}\n```", "```java\nsynchronized (queue) {\n\u00a0\u00a0while (queue.isEmpty()) {\n\u00a0\u00a0\u00a0\u00a0logger.info(\"Queue is empty ...\");\n\u00a0\u00a0\u00a0\u00a0queue.wait();\n\u00a0\u00a0}\n}\n```", "```java\nsynchronized (queue) {\n\u00a0\u00a0String product = queue.remove(0);\n\u00a0\u00a0if (product != null) {\n\u00a0\u00a0\u00a0\u00a0// simulate consuming time\n\u00a0\u00a0\u00a0\u00a0Thread.sleep(rnd.nextInt(MAX_CONS_TIME_MS));\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0logger.info(() -> \"Consumed: \" + product);\n\u00a0\u00a0\u00a0\u00a0queue.notify();\n\u00a0\u00a0}\n}\n```", "```java\nwhile (queue.hasWaitingConsumer()) {\n\u00a0\u00a0String product = \"product-\" + rnd.nextInt(1000);\n\u00a0\u00a0// simulate the production time\n\u00a0\u00a0Thread.sleep(rnd.nextInt(MAX_PROD_TIME_MS)); \n\u00a0\u00a0queue.add(product);\n\u00a0\u00a0logger.info(() -> \"Produced: \" + product);\n}\n```", "```java\n// MAX_PROD_TIME_MS * 2, just give enough time to the producer\nString product = queue.poll(\n\u00a0\u00a0MAX_PROD_TIME_MS * 2, TimeUnit.MILLISECONDS);\nif (product != null) {\n\u00a0\u00a0// simulate consuming time\n\u00a0\u00a0Thread.sleep(rnd.nextInt(MAX_CONS_TIME_MS));\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0logger.info(() -> \"Consumed: \" + product);\n}\n```"]