["```py\n    $ python ez_setup.py\n\n```", "```py\n> import setuptools \n\n```", "```py\npy_hello \n\u251c\u2500\u2500 README \n\u251c\u2500\u2500 MANIFEST.in \n\u251c\u2500\u2500 setup.py \n\u251c\u2500\u2500 bin \n\u2502   \u2514\u2500\u2500 greeter.bat \n\u2514\u2500\u2500 greeter \n    \u251c\u2500\u2500 __init__.py \n    \u251c\u2500\u2500 greeter.py \n\n```", "```py\nfrom setuptools import setup \nimport os \ndescription = open(os.path.join(os.path.dirname(__file__), 'README'), 'r').read() \nsetup( \n    name = \"py_hello\", \n    packages = [\"greeter\"], \n    scripts = [\"bin/greeter.bat\"], \n    include_package_data = True, \n    package_data = { \n        \"py_hello\":[] \n        }, \n    version = \"0.1.0\", \n    description = \"Simple Application\", \n    author = \"packt\", \n    author_email = \"packt@packt.com\", \n    url = \"https://bitbucket.org/tdatta/book/py_hello\", \n    download_url = \"https://bitbucket.org/tdatta/book/py_hello/zipball/master\", \n    keywords = [\"tanmay\", \"example_seutp\", \"packt\"  \"app\"], \n    install_requires=[ \n        \"setup >= 0.1\"], \n    license='LICENSE', \n    classifiers = [ \n        \"Programming Language :: Python\", \n        \"Development Status :: release 0.1\", \n        \"Intended Audience ::  new users\", \n        \"License :: Public\", \n        \"Operating System :: POSIX :: Linux\", \n        \"Topic :: Demo\", \n        ], \n    long_description = description \n    ) \n\n```", "```py\npython setup.py install \n\n```", "```py\nif sys.version_info[0] < 3: \n   import __builtin__ as builtins \nelse: \n   import builtins \n\n..... \n..... \n..... \nFor full sample look for setup.py file with the accompanying CD\n..... \n..... \n\n##define a function to import numpy if available and return true else false \n\ndef is_numpy_installed(): \n   try: \n        import numpy \n   except ImportError: \n        return False \n   return True  \n## next we will import setuptools feature here  \n## We need to do this here because setuptools will \"Monkey patch\" the setup function \n## \nSETUPTOOLS_COMMANDS = set([ \n    'develop', 'release', 'bdist_egg','bdist_rpm', \n    'bdist_wininst', 'install_egg_info', 'build_sphinx', \n    'easy_install', 'upload', 'bdist_wheel', \n    '--single-version-externally-managed', \n]) \n\nif SETUPTOOLS_COMMANDS.intersection(sys.argv): \n    import setuptools \n    extra_setuptools_args = dict( \n        zip_safe-False # Custom clean command to remove build artifacts \n\n## The main function where we link everything \n\ndef setup_package(): \n\n   # check NumPy and raise excpetions \n\n    if is_numpy_installed() is False: \n        raise ImportError(\"Numerical Python (NumPy) is not installed. The package requires it be installed. Installation instruction available at the NumPy website\") \n\n    from numpy.distutils.core import setup, Extension \n\n    # add extension from Fortran \n\n    ext1 = Extension(name = \"firstExt\", \n                     sources = ['firstExt.f']) \n    ext2  = Extension(name = \"convolutedExt\", \n                      sources = ['convolutedExt.pyf, stc2.f'], \n                      include_dir = ['paths to include'], \n                      extra_objects = \"staticlib.a\") \n\n    metadata = dict(name = \"yourPackage\", \n                    description=\"short desc\", \n                    license = \"licence info here\", \n                    ext_modules = [ext1, ext2] \n                    .. \n                    # metadata as we set previously \n                    .. \n                    **extra_setuptools_args \n    ) \n\n    setup(**metadata) \n\nif __name__ == \"__main__\": \n    setup_package() \n\n```", "```py\n $ python <setup.py file> build_src build_ext --help \n\n```", "```py\n **$ python setup.py register\n    running register\n    running egg_info\n    ....\n    ....\n    We need to know who you are, so please choose either:\n     1\\. use your existing login,\n     2\\. register as a new user,\n     3\\. have the server generate a new password for you (and email it to you), or\n     4\\. quit\n    Your selection [default 1]:** \n```", "```py\n $ python setup.py sdist upload \n\n```"]