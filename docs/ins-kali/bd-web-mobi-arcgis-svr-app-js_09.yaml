- en: Chapter 9. Network Analyst Tasks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章 网络分析任务
- en: 'Network analysis services allow you to perform analyses on street networks
    such as finding the best route from one address to another, finding the closest
    school, identifying a service area around a location, or responding to a set of
    orders with a fleet of service vehicles. The services can be accessed using their
    REST endpoints. There are three types of analysis that can perform the services:
    routing, closest facility, and service area. We''ll examine each of the service
    types in this chapter. All network analysis services require you to have the network
    analyst plugin for ArcGIS Server.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络分析服务允许您在街道网络上执行分析，例如从一个地址到另一个地址找到最佳路线，找到最近的学校，确定位置周围的服务区域，或者使用一组服务车辆响应一组订单。可以使用它们的REST端点访问这些服务。可以执行服务的三种类型的分析：路由、最近设施和服务区域。我们将在本章中检查每种服务类型。所有网络分析服务都要求您在ArcGIS
    Server上安装网络分析插件。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: RouteTask
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RouteTask
- en: Time to practice routing
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 练习路由的时间
- en: The ClosestFacility task
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近设施任务
- en: The ServiceArea task
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务区域任务
- en: RouteTask
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RouteTask
- en: Routing in the API for JavaScript allows you to use a `RouteTask` object to
    find routes between two or more locations and optionally get driving directions.
    The `RouteTask` object uses network analysis services to calculate the routes
    and can include both simple and complex routes such as multiple stops, barriers,
    and time windows.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript API中进行路由允许您使用`RouteTask`对象在两个或多个位置之间找到路线，并可选择获取驾驶方向。`RouteTask`对象使用网络分析服务计算路线，可以包括简单和复杂的路线，如多个停靠点、障碍和时间窗口。
- en: 'The `RouteTask` object uses a least-cost path between multiple locations in
    a network. Impedance on the network can include time and distance variables. The
    following screenshot shows the output of a `RouteTask` implementation:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`RouteTask`对象在网络中的多个位置之间使用最小成本路径。网络上的阻抗可以包括时间和距离变量。以下截图显示了`RouteTask`实现的输出：'
- en: '![RouteTask](graphics/7965_09_1.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![RouteTask](graphics/7965_09_1.jpg)'
- en: 'As with the other tasks we have examined in this class, routing is accomplished
    through a series of objects including `RouteParameters`, `RouteTask`, and `RouteResult`.
    The following diagram illustrates the three route objects:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在本课程中研究的其他任务一样，路由是通过一系列对象完成的，包括`RouteParameters`、`RouteTask`和`RouteResult`。以下图示说明了这三个路由对象：
- en: '![RouteTask](graphics/7965_09_2.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![RouteTask](graphics/7965_09_2.jpg)'
- en: The `RouteParameters` object provides the input parameters to `RouteTask`, which
    submits a routing request to ArcGIS Server using the input parameters. Results
    are returned from ArcGIS Server in the form of a `RouteResult` object.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`RouteParameters`对象提供了输入参数给`RouteTask`，`RouteTask`使用输入参数向ArcGIS Server提交路由请求。结果以`RouteResult`对象的形式从ArcGIS
    Server返回。'
- en: 'The `RouteParameters` object serves as an input to the `RouteTask` object and
    can include stop and barrier locations, impedance, whether or not to return driving
    directions and routes, and many others. You can obtain a full list of all the
    parameters at [https://developers.arcgis.com/en/javascript/jsapi/routeparameters-amd.html](https://developers.arcgis.com/en/javascript/jsapi/routeparameters-amd.html)
    for the JavaScript API. A brief code example is also provided showing how to create
    an instance of `RouteParameters`, add stops, and define the output spatial reference:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`RouteParameters`对象作为`RouteTask`对象的输入，并可以包括停靠和障碍位置、阻抗、是否返回驾驶方向和路线等。您可以在JavaScript
    API的[https://developers.arcgis.com/en/javascript/jsapi/routeparameters-amd.html](https://developers.arcgis.com/en/javascript/jsapi/routeparameters-amd.html)获取所有参数的完整列表。还提供了一个简短的代码示例，显示如何创建`RouteParameters`的实例，添加停靠点并定义输出空间参考：'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `RouteTask` object executes a routing operation using the input parameters
    supplied by `RouteParameters`. The constructor for `RouteTask` takes a pointer
    to a URL that identifies the network service to use for the analysis. Calling
    the `solve()` method on `RouteTask` executes a routing task against the network
    analysis service using the input parameters supplied:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`RouteTask`对象使用`RouteParameters`提供的输入参数执行路由操作。`RouteTask`的构造函数接受一个指向标识要用于分析的网络服务的URL的指针。调用`RouteTask`上的`solve()`方法执行路由任务，使用提供的输入参数对网络分析服务执行路由任务：'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A `RouteResult` object is returned from the network analysis service to a callback
    function provided by `RouteTask`. The callback function then handles the data
    by displaying it to the user. The data returned is largely dependent upon the
    input supplied to the `RouteParameters` object. One of the most important properties
    on `RouteParameters` is the `stops` property. These are the points to be included
    in the analysis of the best route between points. Stops is defined as either an
    instance of `DataLayer` or `FeatureSet` and is a set of stops are to be included
    in the analysis.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`RouteResult`对象从网络分析服务返回给`RouteTask`提供的回调函数。然后回调函数通过向用户显示数据来处理数据。返回的数据在很大程度上取决于提供给`RouteParameters`对象的输入。`RouteParameters`上最重要的属性之一是`stops`属性。这些是要包括在点之间最佳路线分析中的点。停靠点被定义为`DataLayer`或`FeatureSet`的实例，并且是要包括在分析中的一组停靠点。'
- en: 'The concept of barriers is also important in routing operations. Barriers restrict
    movement when planning a route. Barriers can include a car accident, construction
    work on a street segment, or other delays such as railroad crossings. Barriers
    are defined as either `FeatureSet` or `DataLayer` and specified through the `RouteParameters.barriers`
    property. The following code shows an example of how barriers are created in your
    code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 障碍的概念在路由操作中也很重要。障碍在规划路线时限制移动。障碍可以包括车祸、街道段上的施工工作或其他延误，如铁路道口。障碍被定义为`FeatureSet`或`DataLayer`，并通过`RouteParameters.barriers`属性指定。以下代码显示了如何在您的代码中创建障碍的示例：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Directions are returned only if `RouteParameters.returnDirections` is set to
    `true`. When you elect to have directions returned, you can also use various properties
    to control the returned directions. You have control over the language for the
    directions (`RouteParameters.directionsLanguage`), length units (`RouteParameters.directionsLengthUnits`),
    output type (`RouteParameters.directionsOutputType`), style name (`RouteParameters.StyleName`),
    and time attribute (`RouteParameters.directionsTimeAttribute`). The data returned
    in addition to directions can include the route between points, the route name,
    and an array of stops.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当`RouteParameters.returnDirections`设置为`true`时，才会返回方向。当你选择返回方向时，你还可以使用各种属性来控制返回的方向。你可以控制方向的语言（`RouteParameters.directionsLanguage`）、长度单位（`RouteParameters.directionsLengthUnits`）、输出类型（`RouteParameters.directionsOutputType`）、样式名称（`RouteParameters.StyleName`）和时间属性（`RouteParameters.directionsTimeAttribute`）。除了方向之外返回的数据还包括点之间的路线、路线名称和停靠点数组。
- en: It is also possible to specify that the task should fail if one of the stops
    is unreachable. This is accomplished through `RouteParameters.ignoreInvalidLocations`
    property. This property can be set to `true` or `false`. You can also introduce
    time into the analysis through properties such as `RouteParameters.startTime`,
    which specifies the time the route begins, and `RouteParameters.useTimeWindows`,
    which defines that a time range should be used in the analysis.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以指定如果其中一个停靠点无法到达，则任务应该失败。这是通过`RouteParameters.ignoreInvalidLocations`属性来实现的。这个属性可以设置为`true`或`false`。你还可以通过诸如`RouteParameters.startTime`（指定路线开始的时间）和`RouteParameters.useTimeWindows`（定义分析中应该使用时间范围）等属性将时间引入到分析中。
- en: Time to practice routing
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习路由
- en: 'In this exercise, you will learn how to implement routing in your applications.
    You''ll create an instance of `RouteParameters`, add stops by allowing the user
    to click points on a map, and solve the route. The returned route will be displayed
    as a line symbol on the map. Follow the following directions to create an application
    that includes routing:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将学习如何在你的应用程序中实现路由。你将创建一个`RouteParameters`的实例，通过允许用户在地图上点击点来添加停靠点，并解决路线。返回的路线将显示为地图上的线符号。按照以下指示创建一个包括路由的应用程序：
- en: Open the JavaScript Sandbox at [http://developers.arcgis.com/en/javascript/sandbox/sandbox.html](http://developers.arcgis.com/en/javascript/sandbox/sandbox.html).
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[http://developers.arcgis.com/en/javascript/sandbox/sandbox.html](http://developers.arcgis.com/en/javascript/sandbox/sandbox.html)打开JavaScript沙盒。
- en: 'Remove the JavaScript content from the `<script>` tag that I have highlighted
    in the following code snippet:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我在下面的代码片段中突出显示的`<script>`标签中删除JavaScript内容：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add the following references for the objects that we''ll use in this exercise:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们在这个练习中将要使用的对象添加以下引用：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Inside the `require()` function, create the `Map` object as seen in the following
    code snippet and define variables to hold the route objects and symbols for display
    purposes:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`require()`函数内，创建`Map`对象，如下面的代码片段所示，并定义变量来保存用于显示目的的路线对象和符号：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Just below the code block that created the `Map` object, add an event handler
    for the `Map.click()` event. This action should trigger the `addStop()` function:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建`Map`对象的代码块的下方，为`Map.click()`事件添加事件处理程序。这个操作应该触发`addStop()`函数：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create the `RouteTask` and `RouteParameters` objects. Set the `RouteParameters.stops`
    property equal to a new `FeatureSet` object. Also, set the `RouteParameters.outSpatialReference`
    property:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`RouteTask`和`RouteParameters`对象。将`RouteParameters.stops`属性设置为一个新的`FeatureSet`对象。同时，设置`RouteParameters.outSpatialReference`属性：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following is a screenshot of the services directory that contains this
    network analysis service:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是包含这个网络分析服务的服务目录的屏幕截图：
- en: '![Time to practice routing](graphics/7965_09_10.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![练习路由](graphics/7965_09_10.jpg)'
- en: 'Add event handlers for the completion of the `RouteTask.solve-complete()` event
    and the `RouteTask.error()` event. The successful completion of a routing task
    should trigger the execution of a function called `showRoute()`. Any errors should
    trigger the execution of a function called `errorHandler()`:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`RouteTask.solve-complete()`事件的完成和`RouteTask.error()`事件添加事件处理程序。路由任务成功完成应该触发`showRoute()`函数的执行。任何错误应该触发`errorHandler()`函数的执行：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create symbol objects for the beginning and ending points of the route as well
    as the line that defines the route between those points. The following lines of
    code should be added just below the two lines of code you added in the previous
    step:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为路线的起点和终点创建符号对象，以及定义这些点之间路线的线。以下代码应该添加在你在上一步中添加的两行代码的下方：
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create the `addStop()` function that will be triggered when the user clicks
    on the map. This function will accept an `Event` object as its only parameter.
    The point clicked on the map can be extracted from this object. This function
    will add a point graphic to the map and add the graphic to the `RouteParameters.stops`
    property; on the second map click, it will call the `RouteTask.solve()` method,
    passing in an instance of `RouteParameters`:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`addStop()`函数，当用户在地图上点击时将被触发。这个函数将接受一个`Event`对象作为它唯一的参数。可以从这个对象中提取在地图上点击的点。这个函数将在地图上添加一个点图形，并将图形添加到`RouteParameters.stops`属性；在第二次地图点击时，它将调用`RouteTask.solve()`方法，传入一个`RouteParameters`的实例：
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Create the `showRoute()` function, which accepts an instance of `RouteResult`.
    The only thing you need to do in this function is add the route as a line to `GraphicsLayer`:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`showRoute()`函数，接受一个`RouteResult`的实例。在这个函数中，你需要做的唯一的事情就是将路线作为线添加到`GraphicsLayer`中：
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Finally, add the error callback function in case there is a problem with the
    routing. This function should display an error message to the user and remove
    any leftover graphics:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，添加错误回调函数，以防路由出现问题。这个函数应该向用户显示错误消息，并删除任何剩余的图形：
- en: '[PRE12]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You may want to review the solution file (`routing.html`) in your `ArcGISJavaScriptAPI`
    folder to verify that your code has been written correctly.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能想要在`ArcGISJavaScriptAPI`文件夹中查看解决方案文件（`routing.html`），以验证你的代码是否已经正确编写。
- en: Click on the **Run** button. You should see the map as in the following screenshot.
    If not, you may need to recheck your code for accuracy.![Time to practice routing](graphics/7965_09_3.jpg)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**运行**按钮。您应该看到地图如下截图所示。如果没有，您可能需要重新检查代码的准确性。![练习路由时间](graphics/7965_09_3.jpg)
- en: Click somewhere on the map. You should see a point marker as shown in the following
    screenshot:![Time to practice routing](graphics/7965_09_4.jpg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地图上的某个地方单击。您应该看到一个点标记，如下截图所示：![练习路由时间](graphics/7965_09_4.jpg)
- en: Click on another point somewhere on the map. This should display a second marker
    along with the best route between the two points, as seen in the following screenshot:![Time
    to practice routing](graphics/7965_09_5.jpg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地图上的其他地方单击。这应该显示第二个标记以及两点之间的最佳路线，如下截图所示：![练习路由时间](graphics/7965_09_5.jpg)
- en: The ClosestFacility task
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最近设施任务
- en: The `ClosestFacility` task measures the cost of traveling between incidents
    and facilities and determines which are nearest to one other. When looking for
    the closest facilities, you can specify how many to find and whether the direction
    of travel is towards or away from them. The closest facility solver displays the
    best routes between incidents and facilities, reports their travel costs, and
    returns driving directions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`ClosestFacility`任务测量了事件和设施之间的旅行成本，并确定彼此之间最近的事件和设施。在寻找最近的设施时，您可以指定要找到多少个以及旅行方向是朝向还是远离它们。最近设施求解器显示事件和设施之间的最佳路线，报告它们的旅行成本，并返回驾驶方向。'
- en: '![The ClosestFacility task](graphics/7965_09_6.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![最近设施任务](graphics/7965_09_6.jpg)'
- en: 'The classes involved in solving closest facility operations include `ClosestFacilityParameters`,
    `ClosestFacilityTask`, and `ClosestFacilitySolveResults`, shown as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 解决最近设施操作涉及的类包括`ClosestFacilityParameters`、`ClosestFacilityTask`和`ClosestFacilitySolveResults`，如下所示：
- en: '![The ClosestFacility task](graphics/7965_09_7.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![最近设施任务](graphics/7965_09_7.jpg)'
- en: The `ClosestFacilityParameters` class includes input parameters such as the
    default cutoff, whether or not to return incidents, routes, and directions, and
    more. These parameters are used as inputs to the `ClosestFacilityTask` class,
    which contains a `solve()` method. Finally, results are passed from ArcGIS Server
    back to the client in the form of a `ClosestFacilitySolveResults` object.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`ClosestFacilityParameters`类包括默认截止、是否返回事件、路线和方向等输入参数。这些参数用作`ClosestFacilityTask`类的输入，该类包含一个`solve()`方法。最后，结果以`ClosestFacilitySolveResults`对象的形式从ArcGIS服务器传递回客户端。'
- en: 'The `ClosestFacilityParameters` object is used as an input to `ClosestFacilityTask`.
    Some of the more commonly used properties on this object will now be discussed.
    The `incidents` and `facilities` properties are used to set the locations for
    the analysis. The data returned by the task can be controlled through the `returnIncidents`,
    `returnRoutes`, and `returnDirections` properties, which are simply `true` or
    `false` values indicating whether the information should be returned in the results.
    The `travelDirection` parameter specifies whether travel should be to or from
    the facility and `defaultCutoff` is the cutoff value beyond which the analysis
    will stop traversing. The following code example shows how to create an instance
    of `ClosestFacilityParameters` and apply the various properties:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`ClosestFacilityParameters`对象用作`ClosestFacilityTask`的输入。现在将讨论此对象上一些常用的属性。`incidents`和`facilities`属性用于设置分析的位置。任务返回的数据可以通过`returnIncidents`、`returnRoutes`和`returnDirections`属性进行控制，这些属性只是`true`或`false`值，指示是否应在结果中返回信息。`travelDirection`参数指定是否应该到设施或从设施出发旅行，`defaultCutoff`是分析将停止遍历的截止值。以下代码示例显示了如何创建`ClosestFacilityParameters`的实例并应用各种属性：'
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: When you create a new instance of `ClosestFacilityTask`, you will need to point
    to a REST resource representing a network analysis service. Once created, the
    `ClosestFacilityTask` class accepts the input parameters provided by `ClosestFacilityParameters`
    and submits them to a network analysis service using the `solve()` method.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当您创建一个新的`ClosestFacilityTask`实例时，您需要指向代表网络分析服务的REST资源。创建后，`ClosestFacilityTask`类接受`ClosestFacilityParameters`提供的输入参数，并使用`solve()`方法将它们提交给网络分析服务。
- en: 'This is illustrated by the following code example. The `solve()` method also
    accepts callback and error callback functions:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过以下代码示例来说明的。`solve()`方法还接受回调和错误回调函数：
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The result returned from a `ClosestFacilityTask` operation is a `ClosestFacilitySolveResult`
    object. This object can contain various properties including a `DirectionsFeatureSet`
    object, which is an array of directions. This `DirectionsFeatureSet` object contains
    the turn-by-turn directions text and geometry of the route. The attributes for
    each feature provide the information associated with the corresponding route segment.
    The returned attributes include the direction text, the length of the route segment,
    the time to travel along the route segment, and the estimated time of arrival
    at the route segment. Other properties contained within `ClosestFacilitySolveResults`
    include an array containing the facilities and incidents, an array of polylines
    representing the routes returned, any messages returned, and arrays containing
    barriers.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 从`ClosestFacilityTask`操作返回的结果是一个`ClosestFacilitySolveResult`对象。此对象可以包含各种属性，包括`DirectionsFeatureSet`对象，这是一个方向数组。这个`DirectionsFeatureSet`对象包含路线的逐步方向文本和几何信息。每个要素的属性提供与相应路段相关的信息。返回的属性包括方向文本、路段长度、沿路段行驶的时间以及到达路段的预计到达时间。`ClosestFacilitySolveResults`中包含的其他属性包括包含设施和事件的数组，表示返回的路线的折线数组，返回的任何消息以及包含障碍的数组。
- en: The ServiceArea task
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务区任务
- en: The new `ServiceArea` task, illustrated in the following screenshot, calculates
    the service area around an input location. This service area is defined in minutes
    and is a region that encompasses all the accessible streets within that time range.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 新的ServiceArea任务在下面的截图中进行了说明，计算了输入位置周围的服务区域。该服务区域以分钟为单位定义，是一个包含在该时间范围内所有可访问街道的区域。
- en: '![The ServiceArea task](graphics/7965_09_08.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![服务区域任务](graphics/7965_09_08.jpg)'
- en: 'The classes involved in service area operations include `ServiceAreaParameters`,
    `ServiceAreaTask`, and `ServiceAreaSolveResults`. These objects are illustrated
    in the following diagram:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 涉及服务区域操作的类包括ServiceAreaParameters、ServiceAreaTask和ServiceAreaSolveResults。这些对象在下图中进行了说明：
- en: '![The ServiceArea task](graphics/7965_09_9.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![服务区域任务](graphics/7965_09_9.jpg)'
- en: 'The `ServiceAreaParameters` class includes input parameters such as the default
    break, facilities involved, barriers and restrictions, travel direction, and more.
    These parameters are used as inputs to the `ServiceAreaTask` class, which calls
    `solve()`. Parameters defined in `ServiceAreaParameters` are passed in to `ServiceAreaTask`.
    Finally, results are passed from ArcGIS Server back to the client in the form
    of a `ServiceAreaSolveResults` object. The `ServiceAreaParameters` object is used
    as an input to `ServiceAreaTask`. Some of the more commonly used properties on
    this object are discussed in this section of the chapter. The `defaultBreaks`
    property is an array of numbers defining the service area. For instance, in the
    following code example, a single value of `2` is provided to indicate that we''d
    like to return a 2-minute service area around the facility. The `returnFacilities`
    property, when set to `true`, indicates that the facilities should be returned
    with the results. Various point, polyline, and polygon barriers can be set as
    well through the barriers property. Travel direction for the analysis can be to
    or from the facility and is set with the `travelDirection` property. There are
    many other properties that can be set on `ServiceAreaParameters`. A code example
    is provided as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ServiceAreaParameters类包括诸如默认中断、涉及的设施、障碍和限制、行进方向等输入参数。这些参数用作ServiceAreaTask类的输入，该类调用solve()。在ServiceAreaParameters中定义的参数传递给ServiceAreaTask。最后，结果以ServiceAreaSolveResults对象的形式从ArcGIS
    Server传递回客户端。ServiceAreaParameters对象用作ServiceAreaTask的输入。本章的这一部分讨论了该对象上一些常用的属性。defaultBreaks属性是定义服务区域的数字数组。例如，在以下代码示例中，提供了一个值为2的单个值，表示我们希望返回设施周围的2分钟服务区域。returnFacilities属性设置为true时，表示设施应与结果一起返回。还可以通过barriers属性设置各种点、折线和多边形障碍。分析的行进方向可以是到设施或从设施，通过travelDirection属性进行设置。ServiceAreaParameters上还可以设置许多其他属性。以下提供了一个代码示例：
- en: '[PRE15]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `ServiceAreaTask` class finds service areas around a location using a street
    network. The constructor for `ServiceAreaTask` should point to a REST resource
    representing a network analysis service. To submit a request to solve a service
    area task, you will need to call the `solve()` method on `ServiceAreaTask`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: ServiceAreaTask类使用街道网络在位置周围找到服务区域。ServiceAreaTask的构造函数应该指向代表网络分析服务的REST资源。要提交解决服务区域任务的请求，您需要在ServiceAreaTask上调用solve()方法。
- en: The result returned from a `ServiceAreaTask` operation is a `ServiceAreaSolveResult`
    object. This object can contain various properties including a `ServiceAreaPolygons`
    property, which is an array of service area polygons returned from the analysis.
    In addition, other properties include facilities, messages, and barriers.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: ServiceAreaTask操作返回的结果是一个ServiceAreaSolveResult对象。该对象可以包含各种属性，包括ServiceAreaPolygons属性，这是从分析中返回的服务区域多边形数组。此外，其他属性包括设施、消息和障碍。
- en: Summary
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Routing enables you to add the functionality that finds routes between two or
    more locations to your application. In addition, you can generate driving directions
    between the locations. This is accomplished through a `RouteTask` object that
    performs network analysis. This functionality, along with the other network analysis
    services, requires the use of the network analysis plugin for ArcGIS Server. Other
    network analyst tasks include the closest facility task, which allows you to measure
    the cost of traveling between incidents and facilities and determines which are
    nearest to one other, and the service area task, which calculates the service
    area around an input location. In the next chapter, you will learn how to execute
    geoprocessing tasks from your applications.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 路由使您能够向应用程序添加在两个或多个位置之间找到路径并生成驾驶路线的功能。此功能是通过执行网络分析的RouteTask对象来实现的。这种功能以及其他网络分析服务需要使用ArcGIS
    Server的网络分析插件。其他网络分析任务包括最近设施任务，它允许您测量事件和设施之间的旅行成本，并确定彼此之间最近的设施，以及服务区域任务，它计算了输入位置周围的服务区域。在下一章中，您将学习如何从应用程序执行地理处理任务。
