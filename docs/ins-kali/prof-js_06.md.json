["```js\nfunction yymm() {\n  let date = new Date();\n  Return date.getFullYear() + \"/\" + date.getMonth();\n}\n```", "```js\nfunction getYearAndMonth() {\n  let date = new Date();\n  return date.getFullYear() + \"/\" + date.getMonth();\n}\n```", "```js\nif(time>1600 || time<600) {\n  light.state = true;\n}\n```", "```js\nif(time.isNight) {\n  light.turnOn;\n}\n```", "```js\nconst units = '\u03bcs';\n```", "```js\nconst units = '\\u03bcs'; // '\u03bcs'\n```", "```js\n    mkdir Exercise29\n    cd Exercise29\n    npm init -y\n    npm install --save-dev eslint prettier eslint-config-airbnb-base eslint-config-prettier eslint-plugin-jest eslint-plugin-import\n    ```", "```js\n    {\n     \"extends\": [\"airbnb-base\", \"prettier\"],\n      \"parserOptions\": {\n    \u00a0\u00a0\u00a0\"ecmaVersion\": 2018,\n    \u00a0\u00a0\u00a0\"sourceType\": \"module\"\n      },\n      \"env\": {\n    \u00a0\u00a0\u00a0\"browser\": true,\n    \u00a0\u00a0\u00a0\"node\": true,\n    \u00a0\u00a0\u00a0\"es6\": true,\n    \u00a0\u00a0\u00a0\"mocha\": true,\n    \u00a0\u00a0\u00a0\"jest\": true,\n      },\n      \"plugins\": [],\n      \"rules\": {\n    \u00a0\u00a0\u00a0\"no-unused-vars\": [\n    \u00a0\u00a0\u00a0\u00a0\"error\",\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0 \"vars\": \"local\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0 \"args\": \"none\"\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0],\n    \u00a0\u00a0\u00a0\"no-plusplus\": \"off\",\n      }\n    }\n    ```", "```js\n    node_modules\n    build\n    dist\n    ```", "```js\n    var square = x => x * x;\n    \tconsole.log(square(5));\n    ```", "```js\n      \"scripts\": {\n    \u00a0\u00a0\u00a0\"lint\": \"prettier --write src/**/*.js\"\n      },\n    ```", "```js\n    npm run lint\n    ```", "```js\n      \"scripts\": {\n    \u00a0\u00a0\u00a0\"lint\": \"prettier --write src/**/*.js && eslint src/*.js\"\n      },\n    ```", "```js\n    > prettier --write src/**/*.js && eslint src/*.js\n    src/square.js 49ms\n    /home/philip/packt/lesson_6/lint/src/square.js\n      1:1  error\u00a0\u00a0\u00a0Unexpected var, use let or const instead  no-var\n      2:1  warning  Unexpected console statement\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 no-console\n      2 problems (1 error, 1 warning)\n      1 error and 0 warnings potentially fixable with the --fix option.\n    ```", "```js\n    > prettier --write src/**/*.js && eslint src/*.js\n    src/js.js 48ms\n    /home/philip/packt/lesson_6/lint/src/js.js\n      2:1  warning  Unexpected console statement  no-console\n      1 problem (0 errors, 1 warning)\n    ```", "```js\ntest('Check that 5 plus 7 is 12', () => {\n  expect(math.add(5, 7)).toBe(12);\n});\ntest('Check that 10 minus 3 is 7', () => {\n  expect(math.subtract(10, 3)).toBe(7);\n});\ntest('Check that 5 multiplied by 3 is 15', () => {\n  expect(math.multiply(5, 3).toBe(15);\n});\ntest('Check that 100 divided by 5 is 20', () => {\n  expect(math.multiply(100, 5).toBe(20);\n});\ntest('Check that square of 5 is 25', () => {\n  expect(math.square(5)).toBe(25);\n});\n```", "```js\n    npm init -y\n    ```", "```js\n    npm install --save-dev jest\n    ```", "```js\n    mkdir __tests__\n    ```", "```js\n    const math = require('./../src/math.js');\n    test('Check that square of 5 is 25', () => {\n      expect(math.square(5)).toBe(25);\n    });\n    ```", "```js\n    FAIL  __test__/math.test.js\n      \u2715 Check that square of 5 is 25 (17ms)\n      \u25cf Check that square of 5 is 25\n    \u00a0\u00a0\u00a0expect(received).toBe(expected) // Object.is equality\n    \u00a0\u00a0\u00a0Expected: 25\n    \u00a0\u00a0\u00a0Received: 10\n    \u00a0\u00a0\u00a0\u00a02 | \n    \u00a0\u00a0\u00a0\u00a03 | test('Check that square of 5 is 25', () => {\n    \u00a0\u00a0\u00a0> 4 |\u00a0\u00a0expect(math.square(5)).toBe(25);\n    \u00a0\u00a0\u00a0\u00a0\u00a0 |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ^\n    \u00a0\u00a0\u00a0\u00a05 | });\n    \u00a0\u00a0\u00a0\u00a06 | \n    \u00a0\u00a0\u00a0\u00a0at Object.toBe (__test__/math.test.js:4:26)\n    Test Suites: 1 failed, 1 total\n    Tests:\u00a0\u00a0\u00a0\u00a0\u00a01 failed, 1 total\n    Snapshots:\u00a0\u00a00 total\n    Time:\u00a0\u00a0\u00a0\u00a0\u00a0 1.263s\n    ```", "```js\n    const square = (x) => x * x;\n    ```", "```js\n    npm install\n    ```", "```js\n    mkdir __tests__\n    ```", "```js\n    const math = require('./../src/math.js');\n    ```", "```js\n    test('check that square of result from 1 + 1 is 4', () => {\n      expect(math.square(math.add(1,1))).toBe(4);\n    });\n    ```", "```js\n    test('check that square of result from 1 + 1 is 4', () => {\n      const start = new Date();\n      expect(math.square(math.add(1,1))).toBe(4);\n      expect(new Date() - start).toBeLessThan(5000);\n    });\n    ```", "```js\nfunction fib(n) {\n  return (n<=1) ? n : fib(n - 1) + fib(n - 2);\n}\n```", "```js\nconsole.log(fib(37));\n```", "```js\ntime node test.js\n```", "```js\n24157817\nreal 0m0.441s\nuser 0m0.438s\nsys 0m0.004s\n```", "```js\n701408733\nreal 0m10.664s\nuser 0m10.653s\nsys 0m0.012s\n```", "```js\nfunction fibonacciIterator(a, b, n) {\n  return n === 0 ? b : fibonacciIterator((a+b), a, (n-1));\n}\nfunction fibonacci(n) {\n  return fibonacciIterator(1, 0, n);\n}\n```", "```js\ntest('Timer - Slow way of getting Fibonacci of 44', () => {\n  const start = new Date();\n  expect(fastFib(44)).toBe(701408733);\n  expect(new Date() - start).toBeLessThan(5000);\n});\n```", "```js\n    npm install\n    ```", "```js\n    mkdir __tests__\n    ```", "```js\n    const fastFib = require('./../fastFib');\n    const slowFib = require('./../slowFib');\n    ```", "```js\n    test('Fast way of getting Fibonacci of 44', () => {\n      const start = new Date();\n      expect(fastFib(44)).toBe(701408733);\n      expect(new Date() - start).toBeLessThan(5000);\n    });\n    ```", "```js\n    test('Timer - Slow way of getting Fibonacci of 44', () => {\n      const start = new Date();\n      expect(slowFib(44)).toBe(701408733);\n      expect(new Date() - start).toBeLessThan(5000);\n    });\n    ```", "```js\n(async() => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('http://news.google.com');\n  const more = await page.$(\".rdp59b\");\n  more.click();\n  await page.waitFor(3000);\n  await page.screenshot({path: 'news.png'});\n  await browser.close();\n})();\n```", "```js\n    npm install\n    ```", "```js\n    npm install --save-dev jest puppeteer jest-puppeteer\n    ```", "```js\n      \"jest\": {\n    \u00a0\u00a0\u00a0\"preset\": \"jest-puppeteer\"\n      },\n    ```", "```js\n    module.exports = {\n      server: {\n    \u00a0\u00a0\u00a0command: 'npm start',\n    \u00a0\u00a0\u00a0port: 8080,\n      },\n    }\n    ```", "```js\n    mkdir __test__\n    ```", "```js\n    describe('Calculator', () => {\n      beforeAll(async () => {\n    \u00a0\u00a0\u00a0await page.goto('http://localhost:8080')\n      })\n      it('Check that 5 times 5 is 25', async () => {\n    \u00a0\u00a0\u00a0const five = await page.$(\"#five\");\n    \u00a0\u00a0\u00a0const multiply = await page.$(\"#multiply\");\n    \u00a0\u00a0\u00a0const equals = await page.$(\"#equals\");\n    \u00a0\u00a0\u00a0await five.click();\n    \u00a0\u00a0\u00a0await multiply.click();\n    \u00a0\u00a0\u00a0await five.click();\n    \u00a0\u00a0\u00a0await equals.click();\n    \u00a0\u00a0\u00a0const result = await page.$eval('#screen', e => e.innerText);\n    \u00a0\u00a0\u00a0expect(result).toMatch('25');\n      })\n    })\n    ```", "```js\n    npm install\n    ```", "```js\n    git init\n    ```", "```js\n    #!/bin/sh\n    npm run lint\n    ```", "```js\n    chmod +x .git/hooks/pre-commit\n    ```", "```js\n    git add package.json\n    git commit -m \"testing git hook\"\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 let number = square(5);\n    ```", "```js\n    git add src/js.js\n    git commit -m \"testing bad lint\"\n    ```", "```js\n    npm install\n    ```", "```js\n    {\n      \"hooks\": {\n    \u00a0\u00a0\u00a0\"pre-commit\": \"npm run lint\"\n      }\n    }\n    ```", "```js\n    git init\n    ```", "```js\n    npm install --save-dev husky\n    ```", "```js\n    git add src/js.js\n    git commit -m \"test husky hook\"\n    ```", "```js\n    npm install --save-dev jest puppeteer jest-puppeteer\n    ```", "```js\n      \"scripts\": {\n    \u00a0\u00a0\u00a0\"start\": \"http-server\",\n    \u00a0\u00a0\u00a0\"test\": \"jest\"\n      },\n    ```", "```js\n      \"jest\": {\n    \u00a0\u00a0\u00a0\"preset\": \"jest-puppeteer\"\n      },\n    ```", "```js\n    module.exports = {\n      server: {\n    \u00a0\u00a0\u00a0command: 'npm start',\n    \u00a0\u00a0\u00a0port: 8080,\n      },\n    }\n    ```", "```js\n    mkdir __test__\n    ```", "```js\n    describe('Quiz', () => {\n      beforeAll(async () => {\n    \u00a0\u00a0\u00a0await page.goto('http://localhost:8080')\n      })\n    // tests will go here\n    })\n    ```", "```js\n      it('Check question #1', async () => {\n    \u00a0\u00a0\u00a0const q1 = await page.$(\"#q1\");\n    \u00a0\u00a0\u00a0let rightAnswer = await q1.$x(\"//button[contains(text(), '10')]\");\n    \u00a0\u00a0\u00a0await rightAnswer[0].click();\n    \u00a0\u00a0\u00a0const result = await page.$eval('#score', e => e.innerText);\n    \u00a0\u00a0\u00a0expect(result).toMatch('1');\n      })\n    ```", "```js\n      it('Check question #2', async () => {\n    \u00a0\u00a0\u00a0const q2 = await page.$(\"#q2\");\n    \u00a0\u00a0\u00a0let rightAnswer = await q2.$x(\"//button[contains(text(), '36')]\");\n    \u00a0\u00a0\u00a0await rightAnswer[0].click();\n    \u00a0\u00a0\u00a0const result = await page.$eval('#score', e => e.innerText);\n    \u00a0\u00a0\u00a0expect(result).toMatch('2');\n      })\n      it('Check question #3', async () => {\n    \u00a0\u00a0\u00a0const q3 = await page.$(\"#q3\");\n    \u00a0\u00a0\u00a0let rightAnswer = await q3.$x(\"//button[contains(text(), '9')]\");\n    \u00a0\u00a0\u00a0await rightAnswer[0].click();\n    \u00a0\u00a0\u00a0const result = await page.$eval('#score', e => e.innerText);\n    \u00a0\u00a0\u00a0expect(result).toMatch('3');\n      })\n      it('Check question #4', async () => {\n    \u00a0\u00a0\u00a0const q4 = await page.$(\"#q4\");\n    \u00a0\u00a0\u00a0let rightAnswer = await q4.$x(\"//button[contains(text(), '99')]\");\n    \u00a0\u00a0\u00a0await rightAnswer[0].click();\n    \u00a0\u00a0\u00a0const result = await page.$eval('#score', e => e.innerText);\n    \u00a0\u00a0\u00a0expect(result).toMatch('4');\n      })\n    ```", "```js\n    npm test\n    ```"]