- en: Chapter 1. Foundation for the API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。API的基础
- en: 'You are probably reading this book because you want to integrate spatial capability
    into your web application using the ArcGIS JavaScript API and make it even more
    amazing, or maybe you''re hoping to become a web mapping data scientist very soon.
    Whatever it is, we are with you. But don''t you think we need a bit of groundwork
    before working on the actual projects? This chapter is all about that—laying a
    strong foundation for the concepts used later in this book. This chapter is by
    design diverse in its content, covering a lot of ground on the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能正在阅读这本书，因为您想要使用ArcGIS JavaScript API将空间能力集成到您的Web应用程序中，并使其变得更加令人惊叹，或者您希望很快成为一名Web地图数据科学家。无论是什么，我们都与您同在。但是在着手实际项目之前，我们不认为需要一些基础工作。本章就是关于这个的——为本书后面使用的概念奠定坚实的基础。本章在内容上设计多样，涵盖了以下主题的许多内容：
- en: Writing your first mapping application using the API
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用API编写您的第一个地图应用程序
- en: Brushing up on coordinate geometry, extents, and spatial reference systems
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复习坐标几何、范围和空间参考系统。
- en: Introducing dojo and the AMD pattern of coding
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍dojo和AMD编码模式
- en: Understanding ArcGIS Server and the REST API
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解ArcGIS Server和REST API
- en: Setting up the development environment
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搭建开发环境
- en: Setting up the development environment
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搭建开发环境
- en: This book is a *by example* book, and we will be explaining the concepts with
    the applications that we'll develop. So, it's essential that you have the development
    environment up and running at the onset of this chapter. Most of the environments
    mentioned in the following sections are just our preferences and may not be mandatory
    to implement the code samples provided in this book. All the code samples have
    been targeted at running in a Windows-based OS and an **Integrated Development
    Environment** (**IDE**) named **Brackets**. If you have a different choice of
    OS and IDE, we welcome you to develop in the environment you're most comfortable
    with.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是一本*示例*书，我们将通过开发的应用程序来解释概念。因此，在本章开始时，确保您的开发环境已经运行起来是至关重要的。以下部分提到的大多数环境只是我们的偏好，可能不是必须的，以实现本书提供的代码示例。所有的代码示例都针对运行在基于Windows的操作系统和名为**Brackets**的**集成开发环境**（**IDE**）。如果您有不同的操作系统和IDE选择，我们欢迎您在您最舒适的环境中开发。
- en: Browser, web server, and IDE
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器、Web服务器和IDE
- en: 'To develop, deploy, and execute any web application, we need the following
    components:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开发、部署和执行任何Web应用程序，我们需要以下组件：
- en: Web browser
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web浏览器
- en: Web server
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务器
- en: Integrated Development Environment (IDE)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成开发环境（IDE）
- en: Web browser
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web浏览器
- en: We have used Google Chrome throughout this book as it provides some great developer
    tools and HTML inspection tools. We think Mozilla too, is a great browser for
    development purposes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在整本书中都使用了Google Chrome，因为它提供了一些很棒的开发者工具和HTML检查工具。我们认为Mozilla也是一个很好的用于开发的浏览器。
- en: Web server
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web服务器
- en: Applications developed in this book are hosted using IIS Express. IIS Express
    is a lightweight webserver mainly used for hosting .NET web applications. Though,
    all the projects in this book are developed using pure HTML, CSS, and JavaScript,
    we will be using the Esri .NET resource proxy to access the ArcGIS online secured
    content and avoid cross domain issues.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中开发的应用程序是使用IIS Express进行托管的。IIS Express是一个轻量级的Web服务器，主要用于托管.NET Web应用程序。尽管本书中的所有项目都是使用纯HTML、CSS和JavaScript开发的，但我们将使用Esri
    .NET资源代理来访问ArcGIS在线安全内容，并避免跨域问题。
- en: 'Readers can install IIS Express either by installing Web Platform Installer
    or directly from the Microsoft downloads page, as illustrated in the following
    steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以通过安装Web平台安装程序或直接从Microsoft下载页面安装IIS Express，如下步骤所示：
- en: To install IIS Express using Web Platform Installer visit [https://www.microsoft.com/web/downloads/platform.aspx](https://www.microsoft.com/web/downloads/platform.aspx)
    to download Web Platform Installer.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装IIS Express，请访问[https://www.microsoft.com/web/downloads/platform.aspx](https://www.microsoft.com/web/downloads/platform.aspx)使用Web平台安装程序进行安装。
- en: Once downloaded, search for `IIS Express` in the search text. The search results
    will display the IIS Express application. Click on the **Add** button against
    the IIS Express application name, and then click on the **Install** button at
    the bottom of the page as shown in the following screenshot:![Web server](graphics/B04959_01_01.jpg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，在搜索文本中搜索`IIS Express`。搜索结果将显示IIS Express应用程序。点击IIS Express应用程序名称后面的**添加**按钮，然后点击页面底部的**安装**按钮，如下面的屏幕截图所示：![Web
    server](graphics/B04959_01_01.jpg)
- en: Installing IIS Express from Web Platform Installer ensures that we can get IIS
    Express' latest version against the direct download link, which we may not be
    able to provide the link for the latest version. When this book was written, the
    latest IIS Express direct download link was found at [https://www.microsoft.com/en-us/download/details.aspx?id=34679](https://www.microsoft.com/en-us/download/details.aspx?id=34679).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Web平台安装程序安装IIS Express可以确保我们可以获得IIS Express的最新版本，而直接下载链接可能无法提供最新版本的链接。在撰写本书时，最新的IIS
    Express直接下载链接可以在[https://www.microsoft.com/en-us/download/details.aspx?id=34679](https://www.microsoft.com/en-us/download/details.aspx?id=34679)找到。
- en: After installing IIS, you can find the executables in the `IIS Express` folder
    inside the `Program Files` folder. The default location is usually `C:\Program
    Files\IIS Express`.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装IIS后，您可以在`Program Files`文件夹内的`IIS Express`文件夹中找到可执行文件。默认位置通常是`C:\Program Files\IIS
    Express`。
- en: We will provide an executable batch (`.bat`) file within each project that helps
    to start the web server and host the project at the specified port.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在每个项目中提供一个可执行的批处理（`.bat`）文件，帮助启动Web服务器并将项目托管在指定的端口上。
- en: 'You can find the following line of code in the executable file of each project
    we have developed for this book:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在我们为本书开发的每个项目的可执行文件中找到以下代码行：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding line will host the application at port `9098`. So, to access the
    app, you just need to use the URL—`http://localhost:9098/`.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的行将在端口`9098`上托管应用程序。因此，要访问该应用程序，您只需要使用URL-`http://localhost:9098/`。
- en: IDE
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IDE
- en: The choice of IDE for developing JavaScript code is wide, and experienced developers
    already know what they need to use. We have used Brackets throughout this book
    as is our preferred choice of IDE.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 开发JavaScript代码的IDE选择很多，有经验的开发人员已经知道他们需要使用什么。我们在整本书中都使用了Brackets作为我们首选的IDE。
- en: Setting up an ArcGIS Developer account
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置ArcGIS开发者帐户
- en: For a few exercises in the book, you will require an ArcGIS Developer account.
    It's also an opportunity for you to explore various capabilities offered by ESRI
    for the developers. To set up a Developer account, just sign up for free at [https://developers.arcgis.com/en/sign-up/](https://developers.arcgis.com/en/sign-up/).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的一些练习中，您将需要一个ArcGIS开发者帐户。这也是一个让您探索ESRI为开发人员提供的各种功能的机会。要设置开发者帐户，只需免费注册[https://developers.arcgis.com/en/sign-up/](https://developers.arcgis.com/en/sign-up/)。
- en: Hello, Map – the jump-start code
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你好，地图-快速启动代码
- en: If you're anything like us, you'd probably like to code your way to your first
    map right away. So here it is. Try adding these lines of code to a new HTML file
    in your Brackets IDE. You can also download the HTML source code, named `B04959_01_CODE01,`
    from the code repository and double-click on the HTML file to run it.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你和我们一样，你可能想立刻用编码的方式制作你的第一张地图。所以在这里。尝试将这些代码添加到Brackets IDE中的新HTML文件中。您还可以从代码存储库下载名为`B04959_01_CODE01`的HTML源代码，并双击HTML文件来运行它。
- en: '![Hello, Map – the jump-start code](graphics/B04959_01_23.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![Hello, Map – the jump-start code](graphics/B04959_01_23.jpg)'
- en: 'While observing the preceding lines of code, you may have observed these two
    things:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 观察前面的代码行时，您可能已经注意到了这两件事：
- en: We didn't need any licensing, authentication, or key to run this code. In other
    words, the API is free. You just had to use the CDN link.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不需要任何许可证、身份验证或密钥来运行此代码。换句话说，API是免费的。您只需要使用CDN链接。
- en: We will be seeing this beautiful cartographic map in our browser as shown in
    the following screenshot:![Hello, Map – the jump-start code](graphics/B04959_01_22.jpg)
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将在浏览器中看到这张美丽的制图地图，如下面的截图所示：![Hello, Map – the jump-start code](graphics/B04959_01_22.jpg)
- en: 'We encourage you to zoom or pan to location you want to see your map. If you
    haven''t figured how to zoom/pan the map, we''ll deal with it right away:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们鼓励您缩放或平移到您想要查看地图的位置。如果您还没有弄清楚如何缩放/平移地图，我们将立即处理：
- en: Left-click dragging or pressing any arrow key causes a pan and the level of
    detail doesn't change.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 单击并拖动或按任何箭头键会导致平移，但不会改变详细级别。
- en: '*Shift* + left-click drag, mouse scroll, a double click, or clicking on the
    *+* or *-* buttons on the map causes a zoom and the level of detail displayed
    changes.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*Shift* +左键拖动、鼠标滚动、双击或单击地图上的*+*或*- *按钮会导致缩放和显示的详细级别发生变化。'
- en: Note
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There are other ways to achieve zooming/panning functionality. The ones mentioned
    here are just to gain a preliminary understanding.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他方法可以实现缩放/平移功能。这里提到的方法只是为了获得初步的理解。
- en: Understanding the jump-start code
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解快速启动代码
- en: Let's try to understand the code we just saw. There are three concepts in this
    code that we'd like to explain. The first one deals with the reference links for
    the API or the **Content Delivery Network** (**CDN**) that we used to download
    the ArcGIS JavaScript API (v 3.15) and its associated style sheets. The second
    concept tries to introduce you to the pattern of coding employed, which is known
    as the **Asynchronous Modular Definition** (**AMD**) pattern. This is used by
    the latest version of dojo (v1.10). The next concept is about what you see in
    the browser when you ran the code—the map and the parameters we supplied to it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试着理解刚才看到的代码。这段代码中有三个概念我们想解释。第一个涉及API的引用链接或我们用来下载ArcGIS JavaScript API（v 3.15）及其相关样式表的**内容交付网络**（**CDN**）。第二个概念试图向您介绍所采用的编码模式，即**异步模块定义**（**AMD**）模式。这是最新版本的dojo（v1.10）所使用的。下一个概念是关于您在浏览器中运行代码时看到的内容-地图和我们提供给它的参数。
- en: The API reference link
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: API参考链接
- en: First things first. We need to reference the API to develop an ArcGIS JavaScript
    API-based application. Esri is the organization that owns the API, yet the API
    is free and available for public use. The latest version of the API as of March
    2016 was 3.15 and the corresponding dojo toolkit version was version 1.10.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要做的是引用API来开发基于ArcGIS JavaScript API的应用程序。Esri是拥有该API的组织，但该API是免费的，可供公众使用。截至2016年3月，API的最新版本是3.15，相应的dojo工具包版本是1.10。
- en: 'The following libraries are the only ones you may probably need to reference
    to use ArcGIS JavaScript API''s capabilities as well many dojo toolkit packages,
    such as `core dojo`, `dijit`, `dgrid`, and so on:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下库可能是您可能需要引用的唯一库，以使用ArcGIS JavaScript API的功能以及许多dojo工具包，如`core dojo`、`dijit`、`dgrid`等：
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Refer to this link for complete documentation of the ArcGIS JavaScript API—[https://developers.arcgis.com/javascript/jsapi/](https://developers.arcgis.com/javascript/jsapi/).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅此链接，以获取ArcGIS JavaScript API的完整文档-[https://developers.arcgis.com/javascript/jsapi/](https://developers.arcgis.com/javascript/jsapi/)。
- en: When you visit the preceding URL, you will see a web page providing complete
    documentation of the API with multiple tabs such as **API Reference**, **Guide**,
    **Sample Code**, **Forum**, and **Home**.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当您访问上述URL时，您将看到一个网页，提供了API的完整文档，包括**API参考**、**指南**、**示例代码**、**论坛**和**主页**等多个选项卡。
- en: Tip
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接通过电子邮件接收文件。
- en: 'You can download the code files by following these steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用你的电子邮件地址和密码登录或注册到我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**选项卡上。
- en: Click on **Code Downloads & Errata**.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击**代码下载和勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书名。
- en: Select the book for which you're looking to download the code files.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择你要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择你购买这本书的地方。
- en: Click on **Code Download**.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: You can also download the code files by clicking on the Code Files button on
    the book's webpage at the Packt Publishing website. This page can be accessed
    by entering the book's name in the Search box. Please note that you need to be
    logged in to your Packt account.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过点击Packt Publishing网站上书籍页面上的代码文件按钮来下载代码文件。可以通过在搜索框中输入书名来访问该页面。请注意，你需要登录到你的Packt账户。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用最新版本的解压缩软件解压文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的WinRAR / 7-Zip
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac上的Zipeg / iZip / UnRarX
- en: 7-Zip / PeaZip for Linux
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux上的7-Zip / PeaZip
- en: 'The API reference lists all the modules available under the API as details,
    properties, methods, and events available for each module. The left pane groups
    most of the modules for easy reference. For example, the grouping named **esri/layers**
    has multiple modules that inherit from it. The following screenshot gives a snapshot
    of how the different modules that inherit from **esri/layers** are grouped:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: API参考列出了API下所有模块的详细信息、属性、方法和可用的事件。左侧窗格将大多数模块分组以便参考。例如，名为**esri/layers**的分组有多个从中继承的模块。以下截图显示了从**esri/layers**继承的不同模块的分组情况：
- en: '![The API reference link](graphics/B04959_01_02.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![API参考链接](graphics/B04959_01_02.jpg)'
- en: 'The **Guide** section provides detailed instructions on important topics such
    as **Working with the Query Task**, **Working with ArcGIS Online Widgets**, and
    Working with symbols and renderers. The following screenshot shows a detailed
    guide on setting map extents:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**指南**部分提供了重要主题的详细说明，比如**使用查询任务**，**使用ArcGIS在线小部件**，以及**使用符号和渲染器**。以下截图显示了设置地图范围的详细指南：'
- en: '![The API reference link](graphics/B04959_01_03.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![API参考链接](graphics/B04959_01_03.jpg)'
- en: The **Sample Code** tab is yet another useful section with hundreds of sample
    applications, which are used to demonstrate different concepts in the API. The
    best part of these sample codes is that they come with a sandbox facility, which
    you can use to play around with the code by modifying it.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例代码**选项卡是另一个有用的部分，其中包含数百个示例应用程序，用于演示API中的不同概念。这些示例代码最好的部分是它们带有一个沙盒设施，你可以用来通过修改代码来玩耍。'
- en: The **Forum** tab redirects you to the following URL—[https://geonet.esri.com/community/developers/web-developers/arcgis-api-for-javascript](https://geonet.esri.com/community/developers/web-developers/arcgis-api-for-javascript).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**论坛**选项卡会将你重定向到以下网址—[https://geonet.esri.com/community/developers/web-developers/arcgis-api-for-javascript](https://geonet.esri.com/community/developers/web-developers/arcgis-api-for-javascript)。'
- en: The GeoNet community forum is a great place to ask your questions and share
    your solutions to questions from developers like you.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: GeoNet社区论坛是一个很好的地方，可以在那里提出问题并分享解决方案，与像你一样的开发者交流。
- en: Due to its close integration with the dojo framework, a working knowledge of
    the dojo toolkit is required and the reference documentation for it can be accessed
    at [http://dojotoolkit.org/reference-guide/1.10/](http://dojotoolkit.org/reference-guide/1.10/).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它与dojo框架的紧密集成，需要对dojo工具包有一定的了解，其参考文档可以在[http://dojotoolkit.org/reference-guide/1.10/](http://dojotoolkit.org/reference-guide/1.10/)上访问。
- en: The AMD pattern of coding
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编码的AMD模式
- en: 'If you''ve observed the code structure, it may look as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你观察了代码结构，它可能如下所示：
- en: '![The AMD pattern of coding](graphics/B04959_01_04.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![编码的AMD模式](graphics/B04959_01_04.jpg)'
- en: If you aren't familiar with this pattern of JavaScript coding, it is known as
    the AMD pattern of coding, and the ArcGIS API for JavaScript emphasizes on using
    this pattern of coding. In the initial chapters we will be introducing a lot about
    this to get ourselves familiarized with dojo and AMD. From the code structure
    you might have understood that the code *requires* certain modules and the function
    that loads these modules requires that they are in the same order. Some of the
    modules in our case were Esri modules (`esri/..`) and dojo modules (`dojo/..`).
    If you're wondering whether you could *require* custom defined modules, the answer
    is absolutely yes, and this will be a major part of our exercise in this book.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不熟悉JavaScript编码的这种模式，它被称为AMD编码模式，ArcGIS JavaScript API强调使用这种编码模式。在最初的章节中，我们将介绍很多关于这个的内容，以便熟悉dojo和AMD。从代码结构中，你可能已经了解到代码*需要*某些模块，加载这些模块的函数要求它们按照相同的顺序。在我们的情况下，一些模块是Esri模块（`esri/..`）和dojo模块（`dojo/..`）。如果你想知道是否可以*需要*自定义定义的模块，答案绝对是肯定的，这将是我们在本书中的主要部分。
- en: The esri/map module
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: esri/map模块
- en: 'The highlighted line in the code forms the crux of our jumpstart code:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 代码中的高亮行构成了我们快速启动代码的核心：
- en: '[PRE2]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `map` module accepts two arguments. The first argument is the `div` container,
    which will contain the `map` object. The second argument is an optional object,
    which accepts a lot of properties that can used to set the map's properties.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`map`模块接受两个参数。第一个参数是包含`map`对象的`div`容器。第二个参数是一个可选对象，它接受许多属性，可以用来设置地图的属性。'
- en: 'In our jumpstart code, the `basemap` property in the optional object sets one
    of the Esri''s provided basemap code named `national-geographic` to be displayed
    as the background map. We implore you to experiment with the other Esri provided
    basemaps, such as the following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的快速入门代码中，可选对象中的`basemap`属性设置了Esri提供的基础地图代码之一，名为`national-geographic`，用作背景地图显示。我们建议您尝试使用其他Esri提供的基础地图，例如以下内容：
- en: satellite
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卫星
- en: dark-gray
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深灰色
- en: light-gray
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浅灰色
- en: hybrid
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合
- en: topo
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拓扑
- en: Setting the initial map extent
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置初始地图范围
- en: At times when the application opens up, you may want to zoom it to a particular
    area of interest, instead of showing the map at the world scale first, and then
    zoom your way to the area you want to see. To accomplish this, the map module
    provides a property to set its initial extent and also to programmatically change
    its extent any time you want.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，当应用程序打开时，您可能希望将其缩放到特定感兴趣的区域，而不是首先以世界范围显示地图，然后再缩放到您想要查看的区域。为了实现这一点，地图模块提供了一个属性来设置其初始范围，并在任何时候以编程方式更改其范围。
- en: Before this, let's look at what an extent is in the context of a map.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，让我们看看在地图的上下文中范围是什么。
- en: Note
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: An extent is the minimum bounding rectangle that encloses an area of interest
    on the map.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 范围是包围地图上感兴趣区域的最小边界矩形。
- en: Brushing up some coordinate geometry
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刷新一些坐标几何
- en: 'To understand about extent, a grasp of coordinate geometry would help. Line
    segments colored yellow will be referred to as *polyline* for our purposes. The
    blue lines represents *polygons* (a rectangle in our case):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解范围，了解坐标几何将有所帮助。我们将把黄色的线段称为*折线*。蓝色线代表*多边形*（在我们的例子中是矩形）：
- en: '![Brushing up some coordinate geometry](graphics/B04959_01_05.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![刷新一些坐标几何](graphics/B04959_01_05.jpg)'
- en: 'Now, try to observe the difference in the coordinates between the preceding
    diagram and the following diagram:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，试着观察前述图表和以下图表之间的差异。
- en: '![Brushing up some coordinate geometry](graphics/B04959_01_06.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![刷新一些坐标几何](graphics/B04959_01_06.jpg)'
- en: 'Here are some notes about the preceding diagrams:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于前述图表的一些说明：
- en: The point is represented by just one pair of coordinates; (2, 2) in figure 1
    and (-1, -1) in figure 2
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点由一对坐标表示；图1中为（2，2），图2中为（-1，-1）
- en: The polylines are represented by a sequence of coordinates
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 折线由一系列坐标表示
- en: The polygon is also represented by a sequence of coordinates, similar to the
    polyline
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多边形也由一系列坐标表示，类似于折线
- en: 'You might have figured out that apart from the coordinates and the axes, the
    shapes of both the figures are the same. This might mean two things:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 除了坐标和坐标轴之外，你可能已经发现两个图形的形状是相同的。这可能意味着两件事：
- en: The diagram has shifted its *x* positions by -3 units and its *y* positions
    by -3 units
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表的*x*位置向左移动了3个单位，*y*位置向下移动了3个单位
- en: Or it may mean that the origin has shifted its *x* and *y* positions by -3 units
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者可能意味着原点将其*x*和*y*位置移动了-3个单位
- en: The second possibility is more important for us to understand because it implies
    that the actual position of the diagram hasn't changed and only the origin or
    the coordinate axes has changed its position. So, in reference to the coordinate
    axes, the coordinates of the diagram shapes (the rectangle, point, and line) have
    also changed.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种可能对我们来说更重要，因为它意味着图表的实际位置没有改变，只是原点或坐标轴改变了位置。因此，相对于坐标轴，图表形状（矩形、点和线）的坐标也发生了变化。
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The same shape can have different coordinates based on the reference coordinate
    system. This kind of coordinate system is known as a **spatial reference** in
    the context of GIS.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的形状可以根据参考坐标系统的不同具有不同的坐标。在GIS的上下文中，这种坐标系统称为**空间参考**。
- en: Quiz time!
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测验时间！
- en: 'Let''s test our knowledge. Try solving the following quiz:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们测试一下我们的知识。尝试解决以下测验：
- en: Q1\. What would be the coordinates of the point (with the triangle symbol) if
    the origin (the bottom-left corner of the rectangle) were (100000, 100000)?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 如果原点（矩形的左下角）是（100000，100000），点（三角形符号）的坐标将是什么？
- en: Q2\. Since the polygon and the polyline are both represented by a sequence of
    coordinates, how can we conclude whether the shape is a polygon or polyline given
    a sequence of coordinates?
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 由于多边形和折线都由一系列坐标表示，我们如何得出结论，给定一系列坐标，形状是多边形还是折线？
- en: Q3\. How many coordinates are required to represent a rectangle?
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Q3\. 需要多少个坐标来表示一个矩形？
- en: Think about it and we'll give you the answers very soon.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 思考一下，我们很快就会给出答案。
- en: Spatial reference systems
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 空间参考系统
- en: When displaying the world or a part of the world on a digital screen as a map,
    which is a two-dimensional surface just like our graph, we need to use a spatial
    reference system to identify the coordinates of locations on the map. There are
    numerous standard spatial reference systems in use. The bare minimum we need to
    know to proceed with using the API is that each reference system has a unique
    identification number that is recognized by the API. The complete parameters (such
    as datum used, origin coordinates, measurement units used, and so on) used to
    define a spatial reference can also be used to identify a particular spatial reference
    system.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在数字屏幕上显示世界或世界的一部分作为地图时，我们需要使用空间参考系统来识别地图上位置的坐标，这是一个与我们的图表一样的二维表面。有许多标准的空间参考系统在使用中。我们需要知道的最基本的是，每个参考系统都有一个唯一的识别号，被API所识别。用于定义特定空间参考系统的完整参数（如使用的基准、原点坐标、使用的测量单位等）也可以用来识别特定的空间参考系统。
- en: Note
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The unique ID with which an SRS is identified is known as **Well-known ID**
    (**wkid**).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 用于识别SRS的唯一ID称为**Well-known ID**（**wkid**）。
- en: A string listing the parameters used to define a spatial reference system is
    known as **Well-known Text** (**wkt**).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 列出用于定义空间参考系统的参数的字符串称为**Well-known Text**（**wkt**）。
- en: As you might have anticipated, each spatial reference system is associated with
    different measurement systems such as feet, meters, or decimal degrees.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能预料的那样，每个空间参考系统都与不同的测量系统相关联，如英尺、米或十进制度。
- en: For example, `4326` is the wkid of the global coordinate system known as **WGS
    84**. The measurement unit for this reference system is decimal degrees.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`4326`是全球坐标系统**WGS 84**的wkid。该参考系统的测量单位是十进制度。
- en: '`102100` is the wkid of another global coordinate system whose measurement
    unit is meters.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`102100`是另一个全局坐标系统的wkid，其测量单位为米。'
- en: The following URLs give a list of wkids and the corresponding wkt at [https://developers.arcgis.com/javascript/jshelp/pcs.html](https://developers.arcgis.com/javascript/jshelp/pcs.html)
    and [https://developers.arcgis.com/javascript/jshelp/gcs.html](https://developers.arcgis.com/javascript/jshelp/gcs.html).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下URL提供了一系列wkid和对应的wkt，网址为[https://developers.arcgis.com/javascript/jshelp/pcs.html](https://developers.arcgis.com/javascript/jshelp/pcs.html)和[https://developers.arcgis.com/javascript/jshelp/gcs.html](https://developers.arcgis.com/javascript/jshelp/gcs.html)。
- en: The quiz results
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测验结果
- en: A 1\. (100002, 100002)—relative to the origin, the point is 2 units away in
    the positive x-direction and 2 units away in the positive y-direction.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: A 1\. （100002，100002）—相对于原点，该点在正x方向上离开2个单位，在正y方向上离开2个单位。
- en: A 2\. A sequence of coordinates can either be a polyline or a polygon unless
    mentioned explicitly in the geometry object. But a polygon has one property that
    makes it different from a polyline—the first and last coordinate must be the same.
    A polyline can have the same first and last coordinates, but not all polylines
    fulfil this criteria.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: A 2\. 除非在几何对象中明确提到，否则坐标序列可以是折线或多边形。但是多边形具有一个使它与折线不同的属性——第一个和最后一个坐标必须相同。折线可以具有相同的第一个和最后一个坐标，但并非所有折线都满足这一标准。
- en: A 3\. If your answer was 4, that's great! But if your answer was 2, you're awesome.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: A 3\. 如果你的答案是4，那太棒了！但如果你的答案是2，那你太棒了。
- en: 'That''s right. Just two coordinates are sufficient to define the rectangle,
    thanks to its perpendicularity property. The two coordinates could be any pair
    of diagonally opposite coordinates, but for the sake of the API, we will take
    the left-bottom coordinate and the upper-right coordinate. The bottom-left coordinate
    has the minimum *x* and *y* coordinate values among the 4 coordinate value pair,
    and the upper-right coordinate has the maximum *x* and *y* coordinate values:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。只需要两个坐标就足以定义矩形，这要归功于它的垂直性质。这两个坐标可以是任意一对对角坐标，但为了API的方便起见，我们将采用左下角坐标和右上角坐标。左下角坐标在4个坐标值对中具有最小的*x*和*y*坐标值，而右上角坐标具有最大的*x*和*y*坐标值：
- en: '![The quiz results](graphics/B04959_01_07.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![测验结果](graphics/B04959_01_07.jpg)'
- en: Getting the current map extent
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取当前地图范围
- en: 'Zoom the map to the extent you want to set as the initial extent of the map.
    In the jump start code, the map variable is a global object since this is declared
    outside the `require` function:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将地图缩放到您想要设置为地图初始范围的范围。在快速启动代码中，地图变量是一个全局对象，因为它是在`require`函数之外声明的。
- en: '[PRE3]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This means that we can access the map''s properties in the browser console.
    After zooming the map and the extent you want as the initial map extent, open
    the developer tools using the *Ctrl* + *Shift* + *I* command (in Chrome). In the
    JavaScript browser console, try to access the map properties, `getMaxScale()`,
    `getMinZoom()`, `getMinScale()`, `getMaxZoom()`, `getScale()`, and `extent`:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以在浏览器控制台中访问地图的属性。在缩放地图和所需的范围作为地图初始范围之后，使用*Ctrl* + *Shift* + *I*命令（在Chrome中）打开开发者工具。在JavaScript浏览器控制台中，尝试访问地图属性，`getMaxScale()`、`getMinZoom()`、`getMinScale()`、`getMaxZoom()`、`getScale()`和`extent`：
- en: '![Getting the current map extent](graphics/B04959_01_08.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![获取当前地图范围](graphics/B04959_01_08.jpg)'
- en: Scale is literally the factor with which the map measures are scaled down from
    the real-world measures. Maximum scale shows the greatest details on the map,
    and the minimum scale of the map shows the least detail. The values for `map.getMaxScale()`
    is smaller than that for `map.getMinScale()`, because the scale values represent
    reciprocal numbers. Hence *1/591657527 < 1/9027* (1/9027.977411 and 1/591657527.59…,
    respectively, in our instance).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 比例实际上是地图测量从现实世界测量中缩小的因素。最大比例显示地图上的最大细节，而地图的最小比例显示最少的细节。`map.getMaxScale()`的值小于`map.getMinScale()`的值，因为比例值代表倒数。因此*1/591657527
    < 1/9027*（在我们的实例中分别为1/9027.977411和1/591657527.59…）。
- en: Zoom levels, on the other hand, are the discrete scale levels at which the map
    is displayed. Most maps that involve Basemaps or Tiledmaps (which will be discussed
    in later chapters) can only be displayed at specific scale levels known as zoom
    levels. The minimum zoom level is mostly `0` and is associated with the maximum
    scale of the map.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，缩放级别是地图显示的离散缩放级别。大多数涉及Basemaps或Tiledmaps（将在后面的章节中讨论）的地图只能在特定的缩放级别（称为缩放级别）上显示。最小缩放级别通常为`0`，并与地图的最大比例相关联。
- en: '`map.getScale()` gives us the current scale, and `map.extent` gives us the
    current extent of the map. We can use this `extent` object to set the extent of
    the map using the `setExtent()` method in the map. Refer to the API documentation
    for the `map` module and navigate to the `setExtent` method of the map. The `setExtent()`
    method accepts two parameters—the `Extent` object and an optional fit object.
    When we click on the hyperlinked `Extent` object, as provided in the document,
    it redirects us to the API documentation page for the `Extent` module:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`map.getScale()`给出了当前的比例，`map.extent`给出了地图的当前范围。我们可以使用这个`extent`对象来使用地图的`setExtent()`方法设置地图的范围。参考`map`模块的API文档，并导航到地图的`setExtent`方法。`setExtent()`方法接受两个参数——`Extent`对象和一个可选的fit对象。当我们点击文档中提供的超链接`Extent`对象时，它会将我们重定向到`Extent`模块的API文档页面：'
- en: '![Getting the current map extent](graphics/B04959_01_09.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![获取当前地图范围](graphics/B04959_01_09.jpg)'
- en: 'The constructor for `Extent` accepts a JSON object and converts it into an
    extent object. We can obtain this JSON object from the JSON string of the map''s
    extent:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`Extent`的构造函数接受一个JSON对象并将其转换为范围对象。我们可以从地图范围的JSON字符串中获取这个JSON对象：'
- en: '![Getting the current map extent](graphics/B04959_01_10.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![获取当前地图范围](graphics/B04959_01_10.jpg)'
- en: 'The preceding image shows us the JSON string of the extent of the map that
    we have zoomed into. The following screenshot displays what the coordinates mean
    with respect to the map area we intend to zoom into (which is highlighted with
    the rectangle):'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图像向我们展示了地图的范围的JSON字符串，我们已经放大到了地图的范围。以下的截图显示了坐标与我们打算放大的地图区域的关系（用矩形标出）：
- en: '![Getting the current map extent](graphics/B04959_01_11.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![获取当前地图范围](graphics/B04959_01_11.jpg)'
- en: 'Now, we can copy the JSON object, create an `Extent` object, and assign it
    the `setExtent` method of the map. But before this, we need to import the `Extent`
    module (`esri/geometry/Extent`). The following screenshot explains how to implement
    this:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以复制JSON对象，创建一个`Extent`对象，并将其分配给地图的`setExtent`方法。但在此之前，我们需要导入`Extent`模块（`esri/geometry/Extent`）。以下截图解释了如何实现这一点。
- en: '![Getting the current map extent](graphics/B04959_01_12.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![获取当前地图范围](graphics/B04959_01_12.jpg)'
- en: When we refresh the map now, the map will automatically zoom into the extent
    that we have set.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当我们刷新地图时，地图将自动放大到我们设置的范围。
- en: The template generator for loading modules
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载模块的模板生成器
- en: 'In the previous code where we successfully set the initial extent of the map,
    we had to use two modules: `esri/map` and `esri/geometry/Extent`. As the application
    grows, we may need to add many more modules to add additional functionality to
    the app. For a novice user, finding the module names from the API and incorporating
    them into the app might be cumbersome. This has been made easy using a web app
    template generator that can be found at [http://swingley.github.io/arg/](http://swingley.github.io/arg/).'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，我们成功设置了地图的初始范围，我们需要使用两个模块：`esri/map`和`esri/geometry/Extent`。随着应用程序的增长，我们可能需要添加更多的模块来为应用程序添加额外的功能。对于新手用户来说，从API中找到模块名称并将其整合到应用程序中可能会很麻烦。可以通过一个网页应用程序模板生成器来简化这个过程，该生成器可以在[http://swingley.github.io/arg/](http://swingley.github.io/arg/)找到。
- en: 'The following is a screenshot of the application:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是应用程序的截图：
- en: '![The template generator for loading modules](graphics/B04959_01_13.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![加载模块的模板生成器](graphics/B04959_01_13.jpg)'
- en: 'The modules that are needed for our `require` function can be typed into the
    text box provided at the top of the application. There are two multi-selection
    list boxes: one listing the Esri modules and the other listing the dojo modules.
    Once we start typing the name of the modules required for our application, the
    list gets populated with the suggested modules matching the name we have typed.
    Once we select the module we need from either list box, it gets added to the list
    of modules in the `require` function, and an appropriate alias is added to the
    callback function as a parameter. Once all the required modules are selected,
    we can use the bare bone template being generated on the right side of the app.
    For setting the initial extent of the map, you may load the required modules by
    searching for the following names:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们`require`函数所需的模块可以在应用程序顶部提供的文本框中输入。有两个多选列表框：一个列出Esri模块，另一个列出dojo模块。一旦我们开始输入我们应用程序所需的模块名称，列表就会显示与我们输入的名称匹配的建议模块。一旦我们从任一列表框中选择所需的模块，它就会被添加到`require`函数的模块列表中，并且适当的别名会作为参数添加到回调函数中。一旦选择了所有所需的模块，我们就可以使用右侧生成的基本模板。要设置地图的初始范围，可以通过搜索以下名称来加载所需的模块：
- en: Map (`esri/map`)
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地图（`esri/map`）
- en: Extent (`esri/geometry/Extent`)
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围（`esri/geometry/Extent`）
- en: Understanding dojo and AMD
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解dojo和AMD
- en: 'As the name suggests, the AMD pattern of coding relies on modularizing your
    JavaScript code. There are lots of reason why you might need to start writing
    modular code or modules:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，AMD编码模式依赖于将JavaScript代码模块化。有很多原因你可能需要开始编写模块化代码或模块：
- en: Modules are written for a single purpose and are focused
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块是为了单一目的而编写的，而且专注于此
- en: Modules are hence reusable
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此模块是可重用的
- en: Modules have a cleaner global scope
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块具有更清晰的全局范围
- en: While there are many formats for writing modular JavaScript, such as CommonJS
    and ES Harmony, we will be dealing with AMD only because the latest versions of
    ArcGIS JavaScript API and the dojo toolkit upon which it is based uses the AMD
    style of coding. Dojo loader resolves the dependencies and loads the modules asynchronously
    while running the application.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有许多编写模块化JavaScript的格式，比如CommonJS和ES Harmony，但我们只会处理AMD，因为最新版本的ArcGIS JavaScript
    API和基于其上的dojo工具包使用AMD风格的编码。Dojo加载器解析依赖项并在运行应用程序时异步加载模块。
- en: The key components of AMD
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AMD的关键组件
- en: In this section, we'll look at the `define` and `require` methods, which are
    the key components of AMD.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一下`define`和`require`方法，这是AMD的关键组件。
- en: The define method
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义方法
- en: 'The `define` method defines a module. A module can have its own private variables
    and functions and only those variables and functions returned by the `define`
    function are exposed by other functions importing this module. An example for
    the `define` method is as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`define`方法定义了一个模块。一个模块可以有自己的私有变量和函数，只有被`define`函数返回的变量和函数才会被导入该模块的其他函数所暴露。`define`方法的一个示例如下：'
- en: '![The define method](graphics/B04959_01_14.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![定义方法](graphics/B04959_01_14.jpg)'
- en: 'Note the following in our code example:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意我们代码示例中的以下内容：
- en: The first parameter in the `define` method is a module name or ID. This is optional.
    `dojoGreeting` is the name of our module.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`define`方法中的第一个参数是模块名称或ID。这是可选的。`dojoGreeting`是我们模块的名称。'
- en: The second parameter is an array of dependencies for our module. We didn't need
    any dependencies for this module, so we just pass an empty array.
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个参数是我们模块的依赖项数组。对于这个模块，我们不需要任何依赖项，所以我们只传递一个空数组。
- en: The third parameter is a callback function that accepts any alias name for our
    dependencies that we might have loaded. Note that the alias names that are used
    as function parameters should be in the same order as it was defined in the dependency
    array. Since we didn't use any dependencies, we don't pass anything into this
    callback function.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个参数是一个回调函数，接受我们可能已加载的依赖项的任何别名。请注意，用作函数参数的别名应该与在依赖数组中定义的顺序相同。由于我们没有使用任何依赖项，所以我们不会将任何东西传递给这个回调函数。
- en: Inside the callback function, we can have as many privately scoped variables
    and functions as required. Any variable or function we'd like to expose from this
    module should be included in a `return` statement within the definition function.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在回调函数中，我们可以有许多私有作用域的变量和函数。我们想要从该模块中公开的任何变量或函数都应该包含在定义函数内的`return`语句中。
- en: In our example, `_dojoGreeting` is a privately scoped variable that is returned
    by the `define` method.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的示例中，`_dojoGreeting`是一个由`define`方法返回的私有作用域变量。
- en: The require method
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: require方法
- en: 'The `require` method uses custom defined modules or modules defined in an external
    library. Let''s use the module we just defined with a `require` method:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`require`方法使用自定义定义的模块或在外部库中定义的模块。让我们使用刚刚定义的模块和`require`方法：'
- en: '![The require method](graphics/B04959_01_15.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![require方法](graphics/B04959_01_15.jpg)'
- en: 'That''s about it. Pay close attention to the parameters of the `require` method:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。请密切关注`require`方法的参数：
- en: The first parameter is an array of module dependencies. The first module dependency
    is the custom module we just defined, `dojoGreeting`.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个参数是模块依赖项的数组。第一个模块依赖项是我们刚刚定义的自定义模块`dojoGreeting`。
- en: The `dojo/dom` module lets us interact with the `dom` elements in HTML.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dojo/dom`模块让我们可以与HTML中的`dom`元素交互。'
- en: '`dojo/domReady!` is an AMD plugin that will wait until the DOM has finished
    loading before returning. Note that the plugin uses a special character "`!`"
    at the end. We need not assign an alias in the callback function since its return
    is meaningless. Hence this should be one of the last modules to be used in the
    dependency array.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dojo/domReady!`是一个AMD插件，它会等待DOM加载完成后再返回。请注意，该插件在末尾使用了特殊字符“`!`”。在回调函数中，我们不需要分配别名，因为它的返回值是无意义的。因此，这应该是依赖数组中使用的最后一个模块之一。'
- en: The callback function uses `dojoGreeting` and `dom` as the alias for the `dojoGreeting`
    and `dojo/dom` modules respectively. As mentioned earlier, we need not use an
    alias for `dojo/domReady!`.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回调函数使用`dojoGreeting`和`dom`作为`dojoGreeting`和`dojo/dom`模块的别名。如前所述，我们不需要为`dojo/domReady!`使用别名。
- en: The `byId()` method of the `dom` module returns a reference of a `dom` node
    by its ID. It's very much equivalent to `document.getElementById()`, only that
    the `dom.byId()` works across all browsers.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dom`模块的`byId()`方法通过其ID返回一个`dom`节点的引用。它与`document.getElementById()`非常相似，只是`dom.byId()`可以在所有浏览器中使用。'
- en: In our register method, we are assuming we have a `div` element with its ID
    as `greeting`.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的register方法中，我们假设有一个ID为“greeting”的`div`元素。
- en: Some awesome dojo modules
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些很棒的dojo模块
- en: You have already been introduced to two dojo modules, namely `dojo/dom` and
    `dojo/domReady`. Now, it's time to get familiarized with some other awesome `dojo`
    modules, which you should try using wherever possible while writing an ArcGIS
    JS API application. Sticking to using pure dojo and Esri JS modules will have
    enormous kickbacks in terms of code integrity and cross-browser uniformity. What's
    more? Dojo has some pleasant surprises for you in terms of the commonly used JavaScript
    functionalities, some of which we are going to introduce very shortly.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经了解了两个dojo模块，即`dojo/dom`和`dojo/domReady`。现在，是时候熟悉一些其他很棒的`dojo`模块了，你应该尽可能在编写ArcGIS
    JS API应用程序时使用它们。坚持使用纯dojo和Esri JS模块将在代码完整性和跨浏览器统一性方面产生巨大的回报。更重要的是，Dojo在常用的JavaScript功能方面为你带来了一些惊喜，其中一些我们将很快介绍。
- en: Dojo dom modules
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dojo dom模块
- en: 'You''ve already used the `dojo/dom` module. But there are other dojo `dom`
    modules, which will let you manipulate and work with the `dom` nodes:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经使用了`dojo/dom`模块。但是还有其他的dojo `dom`模块，它们可以让你操作和处理`dom`节点：
- en: '`dojo/dom-attr`: This is the go-to module for anything related to `dom` attributes:'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dojo/dom-attr`：这是与`dom`属性相关的首选模块：'
- en: The `has()` method in the module checks whether an attribute is present in a
    given node
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块中的`has()`方法检查给定节点中是否存在属性
- en: The `get()` method returns the value of the requested attribute or null if that
    attribute does not have a specified or default value
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get()`方法返回请求属性的值，如果该属性没有指定或默认值，则返回null'
- en: As you might have guessed, there is a `set()` method that you can use to set
    values to an attribute
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如你可能已经猜到的，有一个`set()`方法，你可以用它来设置属性的值
- en: '`dojo/dom-class`: This module provides most of the operations you need to do
    with CSS classes associated with the `dom` nodes'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dojo/dom-class`：该模块提供了与`dom`节点关联的CSS类的大部分操作'
- en: '`dojo/dom-construct`: The `dojo/dom-construct` module lets you construct `dom`
    elements easily'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dojo/dom-construct`：`dojo/dom-construct`模块让你可以轻松构建`dom`元素'
- en: Dojo event handler module
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dojo事件处理程序模块
- en: The `dojo/on` module is an event handler module that is supported by most browsers.
    The `dojo/on` module could handle events from most types of object.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`dojo/on`模块是一个由大多数浏览器支持的事件处理程序模块。`dojo/on`模块可以处理大多数类型对象的事件。'
- en: Dojo array module
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dojo数组模块
- en: You should prefer dojo's array module over the native JavaScript array functions
    for a variety of reasons. Dojo's array module is named `dojo/_base/array`.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该优先使用dojo的数组模块，而不是原生JavaScript数组函数，原因有很多。Dojo的数组模块名为`dojo/_base/array`。
- en: dojo/_base/array
  id: totrans-193
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: dojo/_base/array
- en: As you would expect from an array module, there's an iterator method known as
    `forEach()` as well as the `indexOf()` and `lastIndexOf()` methods. Now comes
    the best part. There's a `filter()` method that returns an array filtered by a
    particular condition. We find the `map()` method a gem since it not only iterates
    through an array but also allows us to modify the items in the callback function
    and return the modified array. Ever wanted to check whether each or at least one
    element of the array met a particular condition? Check out the `every()` and `some()`
    methods in this module.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所期望的那样，作为数组模块的一部分，有一个称为`forEach()`的迭代器方法，以及`indexOf()`和`lastIndexOf()`方法。现在来看最好的部分。有一个`filter()`方法，它返回一个根据特定条件过滤的数组。我们认为`map()`方法是一个宝石，因为它不仅遍历数组，还允许我们修改回调函数中的项目并返回修改后的数组。您是否曾想过检查数组的每个元素或至少一个元素是否满足特定条件？请查看此模块中的`every()`和`some()`方法。
- en: 'This sample code explains two main methods of the dojo array module:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例代码解释了dojo数组模块的两个主要方法：
- en: '![dojo/_base/array](graphics/B04959_01_16.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![dojo/_base/array](graphics/B04959_01_16.jpg)'
- en: 'The preceding code prints the following to the browser''s console window:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将以下内容打印到浏览器的控制台窗口中：
- en: '[PRE4]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Understanding ArcGIS Server and the REST API
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解ArcGIS服务器和REST API
- en: ArcGIS Server is an Esri product for enabling WebGIS by sharing geospatial data
    over the web. Our JavaScript API is capable of consuming a lot of services exposed
    by this server through the REST API. It simply means that all these services exposed
    by the ArcGIS Server is available through a URL. Now, let's look at how the REST
    API interface is so helpful to developers.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS服务器是Esri公司的产品，通过在网上共享地理空间数据来实现WebGIS。我们的JavaScript API能够通过REST API消耗这个服务器提供的许多服务。这意味着ArcGIS服务器提供的所有这些服务都可以通过URL访问。现在，让我们看看REST
    API接口对开发人员有多么有帮助。
- en: Types of service
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务类型
- en: 'When you ran the first code given in this book, you saw a cartographic map
    on the web page. The map you saw in the browser was actually a collection of images
    stitched together. You will realize this if you observed the **Networks** tab
    in the developer tools when you loaded the map. The individual images are called
    **tiles**. These tiles are also served by an ArcGIS MAP server. Here''s a URL
    for one such tile: [http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/2/1/2](http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/2/1/2).'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行本书中提供的第一个代码时，在网页上看到了一个地图。您在浏览器中看到的地图实际上是一组拼接在一起的图像。如果您在加载地图时观察了开发者工具中的**网络**选项卡，您会意识到这一点。这些单独的图像被称为**瓦片**。这些瓦片也是由ArcGIS
    MAP服务器提供的。以下是一个这样的瓦片的URL：[http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/2/1/2](http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/2/1/2)。
- en: 'This just means that any resource published via ArcGIS Server and available
    to the API is through an URL, as shown in the following screenshot:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着通过ArcGIS服务器发布并可通过API访问的任何资源都是通过URL，如下面的屏幕截图所示：
- en: '![Types of service](graphics/B04959_01_17.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![服务类型](graphics/B04959_01_17.jpg)'
- en: Note
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'An ArcGIS service endpoint will have the following format: `<ArcGIS_Server_Name>/ArcGIS/rest/services/<Folder_Name>/
    <ServiceType>`.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS服务端点的格式将是：`<ArcGIS服务器名称>/ArcGIS/rest/services/<文件夹名称>/<服务类型>`。
- en: ArcGIS Server provides a user interface to view these REST endpoints. This interface
    is popularly known as the **Service Catalog**.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS服务器提供了一个用户界面来查看这些REST端点。这个界面通常被称为**服务目录**。
- en: The Service Catalog is something the developer needs to consult before planning
    to use a particular GIS service. The Service Catalog supports multiple formats
    such as JSON and HTML, HTML being the default format. If you're unable to view
    the Service Catalog, you need to contact your GIS Administrator to enable the
    service-browsing capability for the service you're interested in.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在计划使用特定的GIS服务之前，开发人员需要查看服务目录。服务目录支持多种格式，如JSON和HTML，HTML是默认格式。如果您无法查看服务目录，您需要联系您的GIS管理员，以启用您感兴趣的服务的服务浏览功能。
- en: Working with the Service Catalog
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用服务目录
- en: Let's explore a sample GIS server provided by Esri named `sampleserver3.arcgisonline.com`.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索Esri提供的一个名为`sampleserver3.arcgisonline.com`的示例GIS服务器。
- en: To view the Service Catalog for any GIS server, the syntax is `<GIS Server Name>/ArcGIS/rest/services`.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看任何GIS服务器的服务目录，语法是`<GIS服务器名称>/ArcGIS/rest/services`。
- en: 'So the URL we need to navigate to is: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services).'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要导航到的URL是：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services)。
- en: 'You will see this screen in your browser:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在浏览器中看到这个屏幕：
- en: '![Working with the Service Catalog](graphics/B04959_01_18.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![使用服务目录](graphics/B04959_01_18.jpg)'
- en: 'The items of interest in the Service Catalog are the list of links below the
    **Folders** heading tag and the list of links under the **Services** heading tag.
    We encourage you to navigate to each of these links and see the kinds of service
    they expose. You will find the following types of service:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 服务目录中感兴趣的项目是**文件夹**标题标签下的链接列表和**服务**标题标签下的链接列表。我们鼓励您导航到这些链接中的每一个，并查看它们公开的服务类型。您将找到以下类型的服务：
- en: '**MapServer**: This serves geospatial data'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MapServer**：这个服务地理空间数据'
- en: '**FeatureServer**: This enables the editing functionality'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FeatureServer**：这使得编辑功能成为可能'
- en: '**ImageServer**: This serves image tiles'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ImageServer**：这个服务图像瓦片'
- en: Didn't we mention that the Service Catalog supports multiple formats such as
    JSON? We encourage you to append a query string parameter, such as `?f=json`,
    at the end of the URL. To view the Service Catalog as an HTML, just remove the
    query string parameter from the URL.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有没有提到服务目录支持多种格式，比如JSON？我们鼓励您在URL的末尾添加一个查询字符串参数，比如`?f=json`。要将服务目录视为HTML，只需从URL中删除查询字符串参数。
- en: Map server
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地图服务器
- en: A map server exposes GIS data as a REST endpoint.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 地图服务器将GIS数据公开为REST端点。
- en: 'Let''s explore more about a particular map server named `Parcels` inside the
    folder `BloomfieldHillsMichigan`. Navigate to this URL: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer).'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更多地了解名为`Parcels`的特定地图服务器，位于`BloomfieldHillsMichigan`文件夹中。导航到此URL：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer)。
- en: 'The following heading tags are of particular interest to us: layers, tables,
    and description. Now, let''s delve more into one of the layers in the map server.
    All three layers are worth navigating through. For the purpose of explanation,
    let''s choose the first layer (Layer ID: `0`), which can be navigated to directly
    using this URL: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0).'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 以下标题标签对我们特别感兴趣：图层、表和描述。现在，让我们更深入地研究地图服务器中的一个图层。这三个图层都值得浏览。为了解释起见，让我们选择第一个图层（图层ID：`0`），可以直接导航到此URL：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0)。
- en: 'All the heading tags listed in this URL are worth contemplating. We''ll discuss
    some of these:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 此URL中列出的所有标题标签都值得思考。我们将讨论其中一些：
- en: '**Geometry Type** describes the type of geometry of the particular layer. In
    our URL under investigation, it is named `''esriGeometryPoint''`, which means
    it is a point feature.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Geometry Type**描述了特定图层的几何类型。在我们调查的URL中，它被命名为`''esriGeometryPoint''`，这意味着它是一个点要素。'
- en: Meta data such as `'Description'`, `'Copyright Text'`.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元数据，如`'Description'`，`'Copyright Text'`。
- en: Information about the Geographic Extent of the data under the tags `'Extent'`
    and `'Spatial Reference'`.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于数据的地理范围的信息在标签`'Extent'`和`'Spatial Reference'`下。
- en: The `Drawing Info` tag defines how the data is rendered on the map.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Drawing Info`标签定义了数据在地图上的呈现方式。'
- en: '`''Fields''` reveals the table schema of our layer. The actual field name is
    mentioned along with the type of the field and the alias name of the field. The
    alias and field type information is necessary to perform queries on the data.
    A field type of `''esriFieldTypeString''` and `''esriFieldTypeSmallInteger''`
    indicates that the field should be treated as a string and number respectively.
    `''esriFieldTypeOID''` is a special type of field that holds the unique Object
    ID of the features in the layer.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''Fields''`显示了我们图层的表模式。实际字段名与字段类型和字段的别名一起提到。别名和字段类型信息对于对数据执行查询是必要的。`''esriFieldTypeString''`和`''esriFieldTypeSmallInteger''`的字段类型表示该字段应分别被视为字符串和数字。`''esriFieldTypeOID''`是一种特殊类型的字段，它保存了图层中要素的唯一对象ID。'
- en: The Query endpoint
  id: totrans-230
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 查询端点
- en: 'At the bottom of the page, there will be a heading tag named **Supported Operations**
    listing the links to the various endpoints exposed by this layer. There might
    a link with a text called **Query**. This link is the reason for our delving into
    ArcGIS Server and REST endpoints. Click on the link or navigate to it using this
    direct URL: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query).'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 页面底部将有一个名为**支持的操作**的标题标签，列出了此层公开的各个端点的链接。可能会有一个名为**查询**的链接。这个链接是我们深入研究ArcGIS
    Server和REST端点的原因。点击链接或使用此直接URL导航到它：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query)。
- en: '![The Query endpoint](graphics/B04959_01_19.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![查询端点](graphics/B04959_01_19.jpg)'
- en: 'The UI provides us all possible ways that we can query with that particular
    layer (**Building Footprints**). The query operation seems to support both spatial
    as well as flat table SQL queries. As of now, let''s just discuss the flat table
    queries. The **Where** field and the **Return Fields (Comma Separated)** are the
    ones that deal with flat table queries. The **Where** field accepts a standard
    SQL `where` clause as input, and the **Return Fields** accepts a comma-separated
    value of field names that needs to be the output. But we''re explorers at this
    stage of development, and we just need to see the kind of data returned by this
    interface. Feed the following values into the corresponding textbox:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: UI提供了我们可以使用该特定图层（**建筑足迹**）进行查询的所有可能方式。查询操作似乎支持空间查询和平面表SQL查询。目前，让我们只讨论平面表查询。**Where**字段和**Return
    Fields (Comma Separated)**是处理平面表查询的字段。**Where**字段接受标准的SQL `where`子句作为输入，**Return
    Fields**接受一个以逗号分隔的字段名称值，需要作为输出。但在开发的这个阶段，我们只是探索者，我们只需要看到这个接口返回的数据类型。将以下值输入到相应的文本框中：
- en: '**Where**: `1 = 1`'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Where**: `1 = 1`'
- en: '**Return Fields**: `*`'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Return Fields**: `*`'
- en: Click on the **Query (GET)** button and scroll to the bottom of the screen.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**查询（GET）**按钮并滚动到屏幕底部。
- en: 'The query literally returns all the layer data from all the fields from the
    database, but ArcGIS Server limits the results to 1000 features. Note that the
    browser URL has changed. The following URL is the REST GET request URL that was
    used to fire this query: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?text=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&objectIds=&where=1%3D1&time=&returnIdsOnly=false&returnGeometry=true&maxAllowableOffset=&outSR=&outFields=*&f=html](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?text=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&objectIds=&where=1%3D1&time=&returnIdsOnly=false&returnGeometry=true&maxAllowableOffset=&outSR=&outFields=*&f=html).'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 查询实际上返回了来自数据库的所有字段的所有图层数据，但ArcGIS Server将结果限制为1000个要素。请注意浏览器的URL已更改。以下URL是用于触发此查询的REST
    GET请求URL：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?text=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&objectIds=&where=1%3D1&time=&returnIdsOnly=false&returnGeometry=true&maxAllowableOffset=&outSR=&outFields=*&f=html](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?text=&geometry=&geometryType=esriGeometryPoint&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&objectIds=&where=1%3D1&time=&returnIdsOnly=false&returnGeometry=true&maxAllowableOffset=&outSR=&outFields=*&f=html)。
- en: 'The following URL, removing all optional and undefined query parameters from
    the preceding URL, will also yield the same result: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?where=1%3D1&outFields=*&f=html](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?where=1%3D1&outFields=*&f=html).'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 以下URL从前述URL中删除所有可选和未定义的查询参数，也将产生相同的结果：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?where=1%3D1&outFields=*&f=html](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?where=1%3D1&outFields=*&f=html)。
- en: 'Now let''s analyze the result data a bit more by narrowing down our `Where`
    clause. Note the **OBJECTID** field of the first feature among the results:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过缩小`Where`子句来更详细地分析结果数据。注意结果中第一个要素的**OBJECTID**字段：
- en: Remove the value in the `Where` clause text box.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`Where`子句文本框中的值。
- en: Enter the noted **OBJECTID** in the Object IDs text box. The object ID we noted
    was **5991** (but you could very well pick any).
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对象ID文本框中输入所注意的**OBJECTID**。我们注意到的对象ID是**5991**（但您也可以选择任何一个）。
- en: There's a drop-down labeled format. Select the drop-down value named `'json'`
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有一个名为格式的下拉菜单。选择名为`'json'`的下拉值
- en: Click on the **Query (GET)** button.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**查询（GET）**按钮。
- en: 'Or, here''s the direct URL achieving the same operation: [http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?objectIds=5991outFields=*&f=pjson](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?objectIds=5991outFields=*&f=pjson).'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，这是实现相同操作的直接URL：[http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?objectIds=5991outFields=*&f=pjson](http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/BloomfieldHillsMichigan/Parcels/MapServer/0/query?objectIds=5991outFields=*&f=pjson)。
- en: Now, the results look very detailed. What we are looking at is the data of a
    single feature. The JSON returns several features key value pairs with keys such
    as `displayFieldName`, `fieldAliases`, `geometryType`, `spatialReference`, `fields`,
    and `features`.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，结果看起来非常详细。我们正在查看的是单个要素的数据。JSON返回了几个特征键值对，其中包括`displayFieldName`、`fieldAliases`、`geometryType`、`spatialReference`、`fields`和`features`等键。
- en: 'Let''s look at the `feature` key value pair. The value for the `features` key
    is an array of objects. Each object has keys named `attributes` and `geometry`.
    The attributes hold the value of an object listing the key values of field names
    and its values. In our case, `PARCELID` is the fieldname and `"1916101009"` is
    its value:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`feature`键值对。`features`键的值是对象数组。每个对象都有名为`attributes`和`geometry`的键。属性保存对象的值，列出字段名称和其值的键值。在我们的案例中，`PARCELID`是字段名，`"1916101009"`是它的值：
- en: '![The Query endpoint](graphics/B04959_01_20.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![查询端点](graphics/B04959_01_20.jpg)'
- en: 'The geometry object represents the polygon feature with an array of ring objects.
    And each ring is an array of floating point numbers. We earlier dealt with a polygon
    as just an array of coordinates. But ArcGIS Server treats a polygon as an array
    of rings. To understand the concept of rings, please look at the following illustration:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 几何对象表示具有环对象数组的多边形要素。每个环都是浮点数数组。我们之前处理多边形时只是一个坐标数组。但是ArcGIS Server将多边形视为环的数组。要理解环的概念，请查看以下插图：
- en: '![The Query endpoint](graphics/B04959_01_21.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![查询端点](graphics/B04959_01_21.jpg)'
- en: In the preceding illustration, we dealt with two disjoint polygons, but it is
    considered as a single unit in the real world, such as a house and garage. ArcGIS
    represents the polygon feature with two rings. The first rings consists of coordinates
    called [[x1, y1], [x2, y2],…[x6,y6]], and the second ring consists of coordinates
    called [[x7,y7],..[x10, y10]].
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的插图中，我们处理了两个不相交的多边形，但在现实世界中被视为单个单位，比如房屋和车库。ArcGIS用两个环表示多边形要素。第一个环由坐标组成，称为[[x1,
    y1], [x2, y2],…[x6,y6]]，第二个环由坐标组成，称为[[x7,y7],..[x10, y10]]。
- en: Summary
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We used the ArcGIS JS API's CDN to access the API and tried to understand the
    map and Esri geometry modules. We tried to better understand extents and spatial
    references by brushing up our knowledge of coordinate geometry. We now know that
    an extent is just a minimum bounding rectangle that could be defined using two
    coordinates, and a spatial reference system is akin to the coordinate axes on
    a graph. We tried to look at some of the amazing modules that the dojo toolkit
    provides, which we must consider using in our code. ArcGIS Server exposes its
    GIS data and other resources as a REST API, that is, it is available as a URL.
    You also learned that a developer must always consult the Service Catalog before
    starting to consume any service through the API. we laid down our preferences
    in the way of development environment for working through projects in this book.
    The next chapter deals with the different types of layer used in the API and the
    ideal context where each type is used. We will also be introduced to some of the
    most commonly used in-built widgets provided by Esri, and we will use them in
    our application.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了ArcGIS JS API的CDN来访问API，并尝试理解地图和Esri几何模块。我们试图通过复习坐标几何知识来更好地理解范围和空间参考。我们现在知道，范围只是一个可以使用两个坐标定义的最小边界矩形，空间参考系统类似于图表上的坐标轴。我们试图查看道具工具包提供的一些令人惊叹的模块，我们必须考虑在我们的代码中使用它们。ArcGIS
    Server将其GIS数据和其他资源公开为REST API，也就是说，它可以作为URL使用。您还了解到开发人员在开始通过API消耗任何服务之前，必须始终参考服务目录。我们在这本书中为通过项目工作制定了开发环境的偏好。下一章将涉及API中使用的不同类型的图层以及每种类型使用的理想上下文。我们还将介绍Esri提供的一些最常用的内置小部件，并在我们的应用程序中使用它们。
