["```\n**$ for i in `seq 0 3`; do docker-machine create -d virtualbox \n    node$i; \n    done**\n\n```", "```\n**$ eval $(docker-machine env node0)**\n\n```", "```\n**$ docker run swarm create**\n**3b905f46fef903800d51513d51acbbbe**\n\n```", "```\n**$ TOKEN=3b905f46fef903800d51513d51acbbbe**\n\n```", "```\n**$ docker run -ti -v /var/lib/boot2docker:/certs -p 3376:3376 swarm \n    manage -H 0.0.0.0:3376 -tls --tlscacert=/certs/ca.pem --\n    tlscert=/certs/server.pem --tlskey=/certs/server-key.pem \n    token://$TOKEN**\n\n```", "```\n**$ docker run -d swarm join --addr=192.168.99.101:2376 \n    token://$TOKEN**\n\n```", "```\n**$ docker run -t-d -v /var/lib/boot2docker:/certs -p 3376:3376 swarm \n    manage -H 0.0.0.0:3376 -tls --tlscacert=/certs/ca.pem --\n    tlscert=/certs/server.pem --tlskey=/certs/server-key.pem \n    token://$TOKEN**\n\n```", "```\n**$ docker run -d swarm join --addr=192.168.99.101:2376  \n    token://$TOKEN**\n\n```", "```\n**$ eval $(docker-machine env node2)**\n**$ docker run -d swarm join --addr=192.168.99.102:2376 \n    token://$TOKEN**\n**$ eval $(docker-machine env node3)**\n**$ docker run -d swarm join --addr=192.168.99.103:2376 \n    token://$TOKEN**\n\n```", "```\n**$ docker run swarm list token://$TOKEN**\n\n```", "```\n**type Node interface {**\n **Tick()**\n **Campaign(ctx context.Context) error**\n **Propose(ctx context.Context, data []byte) error**\n **ProposeConfChange(ctx context.Context, cc pb.ConfChange) error**\n **Step(ctx context.Context, msg pb.Message) error**\n **Ready() <-chan Ready**\n **Advance()**\n **ApplyConfChange(cc pb.ConfChange) *pb.ConfState**\n **Status() Status**\n **ReportUnreachable(id uint64)**\n **ReportSnapshot(id uint64, status SnapshotStatus)**\n **Stop()**\n**}**\n\n```", "```\n**version: '2'**\n**services:**\n **raftexample1:**\n **image: fsoppelsa/raftexample**\n **command: --id 1 --cluster \n          http://127.0.0.1:9021,http://127.0.0.1:9022,\n          http://127.0.0.1:9023 --port 9121**\n **ports:**\n **- \"9021:9021\"**\n **- \"9121:9121\"**\n **raftexample2:**\n **image: fsoppelsa/raftexample**\n **command: --id 2 --cluster    \n          http://127.0.0.1:9021,http://127.0.0.1:9022,\n          http://127.0.0.1:9023 --port 9122**\n **ports:**\n **- \"9022:9022\"**\n **- \"9122:9122\"**\n **raftexample3:**\n **image: fsoppelsa/raftexample**\n **command: --id 3 --cluster \n          http://127.0.0.1:9021,http://127.0.0.1:9022,\n          http://127.0.0.1:9023 --port 9123**\n **ports:**\n **- \"9023:9023\"**\n **- \"9123:9123\"**\n\n```", "```\n**docker-compose -f raftexample.yaml up**\n\n```", "```\n**curl -L http://127.0.0.1:9121/testkey -XPUT -d value**\n**curl -L http://127.0.0.1:9121/testkey**\n\n```", "```\n**for i in m `seq 1 3`; do docker-machine create -d virtualbox etcd-$i; \ndone**\n\n```", "```\n**term0$ eval $(docker-machine env etcd-m)**\n\n```", "```\n**docker run -d -p 2379:2379 -p 2380:2380 -p 4001:4001 \\**\n**--name etcd quay.io/coreos/etcd \\**\n**-name etcd-m -initial-advertise-peer-urls http://$(docker-machine \n    ip etcd-m):2380 \\**\n**-listen-peer-urls http://0.0.0.0:2380 \\**\n**-listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 \\**\n**-advertise-client-urls http://$(docker-machine ip etcd-m):2379 \\**\n**-initial-cluster-token etcd-cluster-1 \\**\n**-initial-cluster etcd-m=http://$(docker-machine ip etcd-m):2380**\n**-initial-cluster-state new**\n\n```", "```\n**term0$ docker run fsoppelsa/etcdctl -C $(dm ip etcd-m):2379 \n    cluster-health**\n\n```", "```\n**term0$ docker run -d -p 3376:3376 swarm manage \\**\n**-H tcp://0.0.0.0:3376 \\`**\n**etcd://$(docker-machine ip etcd-m)/swarm**\n\n```", "```\n**term1$ eval $(docker-machine env etcd-1)**\n**term1$ docker run -d swarm join --advertise \\**\n**$(docker-machine ip etcd-1):2379 \\**\n**etcd://$(docker-machine ip etcd-m):2379**\n**term2$ eval $(docker-machine env etcd-2)**\n**term1$ docker run -d swarm join --advertise \\**\n**$(docker-machine ip etcd-2):2379 \\**\n**etcd://$(docker-machine ip etcd-m):2379**\n**term3$ eval $(docker-machine env etcd-3)**\n**term3$ docker run -d swarm join --advertise \\**\n**$(docker-machine ip etcd-3):2379 \\**\n**etcd://$(docker-machine ip etcd-m):2379**\n\n```", "```\n**$ docker-machine create --driver digitalocean consul-m**\n**$ eval $(docker-machine env consul-m)**\n\n```", "```\n**$ docker run -d --name=consul --net=host \\**\n**consul agent \\**\n**-client=$(docker-machine ip consul-m) \\**\n**-bind=$(docker-machine ip consul-m) \\**\n**-server -bootstrap**\n\n```", "```\n**$ curl -X GET http://$(docker-machine ip consul-m):8500/v1/kv/**\n\n```", "```\n**$ for i in `seq 1 3`; do docker-machine create -d digitalocean \n    consul-$i; \n    done**\n\n```", "```\n**$ eval $(docker-machine env consul-m)**\n**$ docker run -d -p 3376:3376 swarm manage \\**\n**-H tcp://0.0.0.0:3376 \\**\n**consul://$(docker-machine ip consul-m):8500/swarm**\n**$ eval $(docker-machine env consul-1)**\n**$ docker run -d swarm join \\**\n **--advertise $(docker-machine ip consul-1):2376 \\**\n **consul://$(docker-machine ip consul-m):8500/swarm**\n**$ eval $(docker-machine env consul-2)**\n**$ docker run -d swarm join \\**\n **--advertise $(docker-machine ip consul-2):2376 \\**\n **consul://$(docker-machine ip consul-m):8500/swarm**\n**$ eval $(docker-machine env consul-3)**\n**$ docker run -d swarm join \\**\n **--advertise $(docker-machine ip consul-3):2376 \\**\n **consul://$(docker-machine ip consul-m):8500/swarm**\n\n```", "```\n**$ docker run swarm list consul://$(docker-machine ip consul-m):8500/swarm                                       time=\"2016-07-01T21:45:18Z\" level=info msg=\"Initializing discovery without TLS\"**\n**104.131.101.173:2376**\n**104.131.63.75:2376**\n**104.236.56.53:2376**\n\n```"]