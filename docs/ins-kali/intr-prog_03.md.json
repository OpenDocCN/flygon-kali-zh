["```java\nint i;\n```", "```java\n i + 2; \n```", "```java\nint j = i + 2;\n```", "```java\nint multiplyByTwo(int i){\n  int j = i * 2;\n  return j;\n}\n```", "```java\nint multiplyByTwo(int i){ \n  return i * 2;\n}\n```", "```java\nint multiplyByTwo(int i){ return i * 2; }\n```", "```java\nint giveMeFour(){ return 4; }\n```", "```java\nvoid multiplyByTwo(){ }\n```", "```java\nString doSomething(int i, String s, double a){\n  double result = Math.round(Math.sqrt(a)) * i;\n  return s + Double.toString(result);\n}\n```", "```java\nclass MyClass {\n  int multiplyByTwo(int i){ return i * 2; }\n  int giveMeFour(){ return 4;} \n}\n```", "```java\njava -cp <location of all .class files> MyGreatApplication\n```", "```java\npublic static void main(String[] args) {\n  // statements go here\n}\n```", "```java\npublic static void main(String... args) {\n  //body that does something\n}\n```", "```java\njava -cp <location of all .class files> MyGreatApplication 1 2\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public String method1(int i){\n    //statements, including return statement\n  }\n  private void method2(String s){\n    //statements without return statement\n  }\n}\n```", "```java\npublic class SomeClass {\n  private int field1;\n  public MyClass(){\n    this.field1 = 42;\n  }\n  //... other content of the class - methods\n  //    that define object behavior\n}\n\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n  //... methods here\n}\n```", "```java\npublic MyClass(int field1, String field1){\n  field1 = field1;\n  field2 = field2;\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n    method1(33);\n    method2(val2);\n  }\n  public String method1(int i){\n    //statements, including return statement\n  }\n  private void method2(String s){\n    //statements without return statement\n  }\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  //... other methods here\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n  //... other methods here\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(){ }\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n  //... other methods here\n}\n```", "```java\npublic class MyClass { // top-level class\n  class MyOtherClass { // inner class   \n    //inner class content here\n  }\n}\n```", "```java\npublic class MyClass { // top-level class\n  static class MyYetAnotherClass { // nested class\n    // nested class content here\n  }\n}\n```", "```java\npublic class MyClass { // top-level class\n  void someMethod() {\n    class MyInaccessibleAnywhereElseClass { // local class\n      // local class content here\n    }\n  }\n}\n```", "```java\npublic interface InterfaceA{\n  void doSomething();\n}\npublic class MyClass { \n  void someMethod1() {\n    System.out.println(\"1\\. Regular is called\");\n  }\n  void someMethod2(InterfaceA interfaceA) {\n    interfaceA.doSomething();\n  }\n}\n```", "```java\nMyClass myClass = new MyClass();\nmyClass.someMethod1();\nmyClass = new MyClass() {     //Anonymous class extends class MyClass\n  public void someMethod1(){              // and overrides someMethod1()\n    System.out.println(\"2\\. Anonymous is called\");\n  }\n};\nmyClass.someMethod1();\nmyClass.someMethod2(new InterfaceA() { //Anonymous class implements\n  public void doSomething(){     //  InterfaceA\n\n    System.out.println(\"3\\. Anonymous is called\");\n  }\n});\n```", "```java\n1\\. Regular is called\n2\\. Anonymous is called\n3\\. Anonymous is called\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n\n  public String method1(int i){\n    //statements, including return statement\n  }\n  //... other methods are here\n}\n```", "```java\npublic AnotherClass {\n  ...\n  public void someMethod(){\n    MyClass myClass = new MyClass(3, \"some string\");\n    String result = myClass.method1(2);\n  }\n  ...\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  public static String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n\n  public String method1(int i){\n    //statements, including return statement\n  }\n  public static void method2(){\n    //statements\n  }\n  //... other methods are here\n}\n```", "```java\nMyClass.field2 = \"any string\";\nString s = MyClass.field2 + \" and another string\";\n```", "```java\nMyClass.method2();\n```", "```java\nMyClass mc = new MyClass(3, \"any string\");\nString someResult = mc.method1(42);\n```", "```java\nMyClass mc = new MyClass(3, \"any string\");\nmc.field2 = \"Some other string\";\nmc.method2();\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public void setField1(String val){\n    this.field1 = val;\n  }\n  public String getField1(){\n    return this.field1;\n  }\n  public void setField2(String val){\n    this.field2 = val;\n  }\n  public String getField2(){\n    return this.field2;\n  }\n  //... other methods are here\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n  public String getField1(){\n    return this.field1;\n  }\n\n  public String getField2(){\n    return this.field2;\n  }\n  //... other non-setting methods are here\n}\n```", "```java\npublic class MyClass {\n  public String method(int i){\n    //statements\n  }\n  public int method(int i, String v){\n    //statements\n  }\n}\n```", "```java\npublic class MyClass {\n  public String method(int i){\n    //statements\n  }\n  public int method(int i){ //error\n    //statements\n  }\n}\n```", "```java\npublic String method(String v, int i){\n  //statements\n}\npublic String method(int i, String v){\n  //statements\n}\n```", "```java\npublic class MyClass {\n  private int field1;\n  private String field2;\n  public MyClass(int val1, String val2){\n    this.field1 = val1;\n    this.field2 = val2;\n  }\n  public String method(int i){\n    //statements\n  }\n  public int method(int i, String v){\n    //statements\n  }\n}\n```", "```java\npublic interface MyClassInterface {\n  String method(int i);\n  int method(int i, String v);\n}\n```", "```java\ninterface Car {\n  double getWeightInPounds();\n  double getMaxSpeedInMilesPerHour();\n}\n\npublic class CarImpl implements Car{\n  public double getWeightInPounds(){\n    return 2000d;\n  }\n  public double getMaxSpeedInMilesPerHour(){\n    return 100d;\n  }\n}\n```", "```java\ninterface Car {\n  double getWeightInPounds();\n  double getMaxSpeedInMilesPerHour();\n  default int getPassengersCount(){\n    return 4;\n  } \n}\n\npublic class CarImpl implements Car{\n  private int doors;\n  private double weight, speed;\n  public CarImpl(double weight, double speed, int doors){\n    this.weight = weight;\n    this.speed = speed;\n    this.dooes = doors;\n  }\n  public double getWeightInPounds(){\n    return this.weight;\n  }\n  public double getMaxSpeedInMilesPerHour(){\n    return this.speed;\n  }\n  public int getNumberOfDoors(){\n    return this.doors;\n  }\n}\n```", "```java\nCarImpl car = new CarImpl(500d, 50d, 3); \ncar.getWeightInPounds();         //Will return 500.0\ncar.getMaxSpeedInMilesPerHour(); //Will return 50.0\ncar.getNumberOfDoors();          //Will return 3\n\n```", "```java\ncar.getPassengersCount();          //Will return 4\n```", "```java\ninterface Car {\n  double getWeightInPounds();\n  double getMaxSpeedInMilesPerHour();\n  default int getPassengersCount(){\n    return 4;\n  } \n}\n\npublic class CarImpl implements Car{\n  private int doors;\n  private double weight, speed;\n  public CarImpl(double weight, double speed, int doors){\n    this.weight = weight;\n    this.speed = speed;\n    this.dooes = doors;\n  }\n  public double getWeightInPounds(){\n    return this.weight;\n  }\n  public double getMaxSpeedInMilesPerHour(){\n    return this.speed;\n  }\n  public int getNumberOfDoors(){\n    return this.doors;\n  }\n  public int getPassengersCount(){\n    return 3;\n  } \n}\n```", "```java\nCarImpl car = new CarImpl(500d, 50d, 3); \ncar.getPassengersCount();        //Will return 3 now !!!!\n```", "```java\npublic class AnotherCarImpl implements Car{\n  public double getWeightInPounds(){\n    return 2d;\n  }\n  public double getMaxSpeedInMilesPerHour(){\n    return 3d;\n  }\n  public int getNumberOfDoors(){\n    return 4;\n  }\n  public int getPassengersCount(){\n      return 5;\n\n   } \n}\n```", "```java\nCar car = new CarImpl(500d, 50d, 3); \ncar.getWeightInPounds();          //Will return 500.0\ncar.getMaxSpeedInMilesPerHour();  //Will return 50.0\ncar.getNumberOfDoors();           //Will produce compiler error\ncar.getPassengersCount();         //Still returns 3 !!!!\n\ncar = new AnotherCarImpl();\ncar.getWeightInPounds();          //Will return 2.0\ncar.getMaxSpeedInMilesPerHour();  //Will return 3.0\ncar.getNumberOfDoors();           //Will produce compiler error\ncar.getPassengersCount();         //Will return 5 \n\n```", "```java\nclass A {\n  private void m1(){...}\n  public void m2(){...}\n}\n\nclass B extends class A {\n  public void m3(){...}\n}\n\nclass C extends class B {\n}\n```", "```java\ninterface AI extends BI, CI, DI {\n  //the interface body\n}\ninterface DI extends EI, FI {\n  //the interface body\n}\n```", "```java\nclass A extends B implements AI, BI, CI, DI {\n  //the class body\n}\n```", "```java\ninterface AI extends BI, CI, DI {\n  //the interface body\n}\n\nclass A extends B implements AI {\n  //the class body\n}\n```", "```java\ninterface Vehicle {\n  double getWeightInPounds();\n}\n\ninterface Car extends Vehicle {\n  int getPassengersCount();\n}\n\npublic class CarImpl implements Car {\n  public double getWeightInPounds(){\n    return 2000d;\n  }\n  public int getPassengersCount(){\n    return 4;\n  }\n}\n```", "```java\ninterface Vehicle {\n  double getWeightInPounds();\n}\n\npublic class VehicleImpl implements Vehicle {\n  public double getWeightInPounds(){\n    return 2000d;\n  }\n}\n\ninterface Car extends Vehicle {\n  int getPassengersCount();\n}\n\npublic class CarImpl extends VehicleImpl implements Car {\n  public int getPassengersCount(){\n    return 4;\n  }\n}\n\n```", "```java\npublic class VehicleImpl {\n  public double getWeightInPounds(){\n    return 2000d;\n  }\n}\n\npublic class CarImpl extends VehicleImpl {\n  public double getWeightInPounds(){\n    return 3000d;\n  }\n  public int getPassengersCount(){\n    return 4;\n  }\n}\n```", "```java\nVehicleImpl vehicle = new CarImpl();\nvehicle.getWeightInPounds();\n\n```", "```java\npublic boolean equals(Object obj) {\n  //compares references of the current object\n  //and the reference obj \n}\n```", "```java\nCar car1 = new CarImpl();\nCar car2 = car1;\nCar car3 = new CarImpl();\ncar1.equals(car2);    //returns true\ncar1.equals(car3);    //returns false\n```", "```java\npublic int hashCode(){\n  //returns a hash code value for the object \n  //based on the integer representation of the memory address\n}\n```", "```java\npublic Class getClass(){\n  //returns object of class Class that has\n  //many methods that provide useful information\n}\n```", "```java\npublic String toString(){\n  //return string representation of the object\n}\n```", "```java\npublic String toString() {\n  return getClass().getName()+\"@\"+Integer.toHexString(hashCode());\n}\n```", "```java\nprotected Object clone(){\n  //creates copy of the object\n}\n```"]