["```\n**# show linux bridges** \n**$ sudo brctl show**\n\n```", "```\n**$ bridge name  bridge            id    STP       enabled interfaces**\n**docker0        8000.56847afe9799 no    veth44cb727    veth98c3700**\n\n```", "```\n**$ sudo iptables -t nat -L -n** \n**...** \n**Chain POSTROUTING (policy ACCEPT) target prot opt**\n**source destination MASQUERADE all -- 172.17.0.0/16**\n**!172.17.0.0/16** \n **...**\n\n```", "```\n**root@ubuntu:~# ifconfig**\n**docker0   Link encap:Ethernet  HWaddr 56:84:7a:fe:97:99**\n **inet addr:172.17.42.1  Bcast:0.0.0.0  Mask:255.255.0.0**\n **inet6 addr: fe80::5484:7aff:fefe:9799/64 Scope:Link**\n **inet6 addr: fe80::1/64 Scope:Link**\n **...**\n **collisions:0 txqueuelen:0**\n **RX bytes:516868 (516.8 KB)  TX bytes:46460483 (46.4 MB)**\n**eth0      Link encap:Ethernet  HWaddr 00:0c:29:0d:f4:2c**\n **inet addr:192.168.186.129  Bcast:192.168.186.255  \n    Mask:255.255.255.0**\n\n```", "```\n**$ apt-get install bridge-utils**\n\n```", "```\n**root@ubuntu:~# brctl show**\n**bridge name     bridge id           STP enabled   interfaces\ndocker0         8000.56847afe9799   no            veth21b2e16\n                                                  veth7092a45** \n\n```", "```\n **root@ubuntu:~# docker run -t -i --name container1 ubuntu:latest /bin/bash**\n **root@e54e9312dc04:/# ifconfig**\n **eth0 Link encap:Ethernet HWaddr 02:42:ac:11:00:07**\n **inet addr:172.17.0.7 Bcast:0.0.0.0 Mask:255.255.0.0**\n **inet6 addr: 2001:db8:1::242:ac11:7/64 Scope:Global**\n **inet6 addr: fe80::42:acff:fe11:7/64 Scope:Link**\n **UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1**\n **...**\n **root@e54e9312dc04:/# ip route**\n **default via 172.17.42.1 dev eth0**\n **172.17.0.0/16 dev eth0 proto kernel scope link src 172.17.0.7**\n\n```", "```\n**# sudo service docker stop**\n**# sudo ip link set dev docker0 down**\n**# sudo brctl delbr docker0**\n**# sudo iptables -t nat -F POSTROUTING**\n**# echo 'DOCKER_OPTS=\"-b=br0\"' >> /etc/default/docker**\n**# sudo brctl addbr br0**\n**# sudo ip addr add 192.168.10.1/24 dev br0**\n**# sudo ip link set dev br0 up**\n**# sudo service docker start**\n\n```", "```\n**root@ubuntu:~# ifconfig**\n**br0       Link encap:Ethernet  HWaddr ae:b2:dc:ed:e6:af**\n **inet addr:192.168.10.1  Bcast:0.0.0.0  Mask:255.255.255.0**\n **inet6 addr: fe80::acb2:dcff:feed:e6af/64 Scope:Link**\n **UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1**\n **RX packets:0 errors:0 dropped:0 overruns:0 frame:0**\n **TX packets:7 errors:0 dropped:0 overruns:0 carrier:0**\n **collisions:0 txqueuelen:0**\n **RX bytes:0 (0.0 B)  TX bytes:738 (738.0 B)**\n**eth0      Link encap:Ethernet  HWaddr 00:0c:29:0d:f4:2c**\n **inet addr:192.168.186.129  Bcast:192.168.186.255  Mask:255.255.255.0**\n **inet6 addr: fe80::20c:29ff:fe0d:f42c/64 Scope:Link**\n **...**\n\n```", "```\n**/etc/hostname**\n**/etc/resolv.conf**\n**/etc/hosts**\n\n```", "```\n**# docker run --dns=8.8.8.8 --net=\"bridge\" -t -i  ubuntu:latest /bin/bash**\n\n```", "```\n**#docker run --dns=8.8.8.8 --hostname=docker-vm1  -t -i  ubuntu:latest \n    /bin/bash**\n\n```", "```\n **# cat /proc/sys/net/ipv4/ip_forward**\n**0** \n**# echo 1 > /proc/sys/net/ipv4/ip_forward** \n**# cat /proc/sys/net/ipv4/ip_forward** \n**1**\n\n```", "```\n**#iptables -I DOCKER -i ext_if ! -s 10.10.10.10 -j DROP**\n\n```", "```\n     **# docker run -i -t --name c1 ubuntu:latest /bin/bash**\n     **root@7bc2b6cb1025:/# ifconfig**\n     **eth0 Link encap:Ethernet HWaddr 02:42:ac:11:00:05**\n     **inet addr:172.17.0.5 Bcast:0.0.0.0 Mask:255.255.0.0**\n     **inet6 addr: 2001:db8:1::242:ac11:5/64 Scope:Global**\n     **inet6 addr: fe80::42:acff:fe11:5/64 Scope:Link**\n     **...**\n     **# docker run -i -t --name c2 ubuntu:latest /bin/bash**\n     **root@e58a9bf7120b:/# ifconfig\n            eth0 Link encap:Ethernet HWaddr 02:42:ac:11:00:06\n             inet addr:172.17.0.6 Bcast:0.0.0.0 Mask:255.255.0.0\n             inet6 addr: 2001:db8:1::242:ac11:6/64 Scope:Global\n             inet6 addr: fe80::42:acff:fe11:6/64 Scope:Link**\n\n    ```", "```\n     **root@7bc2b6cb1025:/# ping 172.17.0.6\n            PING 172.17.0.6 (172.17.0.6) 56(84) bytes of data.\n            64 bytes from 172.17.0.6: icmp_seq=1 ttl=64 time=0.139 ms\n            64 bytes from 172.17.0.6: icmp_seq=2 ttl=64 time=0.110 ms\n            ^C\n            --- 172.17.0.6 ping statistics ---\n            2 packets transmitted, 2 received, 0% packet loss, time 999ms\n            rtt min/avg/max/mdev = 0.110/0.124/0.139/0.018 ms\n            root@7bc2b6cb1025:/#\n            root@e58a9bf7120b:/# ping 172.17.0.5\n            PING 172.17.0.5 (172.17.0.5) 56(84) bytes of data.\n            64 bytes from 172.17.0.5: icmp_seq=1 ttl=64 time=0.270 ms\n            64 bytes from 172.17.0.5: icmp_seq=2 ttl=64 time=0.107 ms\n            ^C\n            --- 172.17.0.5 ping statistics ---\n\n            2 packets transmitted, 2 received, 0% packet loss, time 1002ms\n            rtt min/avg/max/mdev = 0.107/0.188/0.270/0.082 ms\n            root@e58a9bf7120b:/#**\n\n    ```", "```\n    **#apt-get install openssh-server**\n\n    ```", "```\n     **root@ubuntu:~# iptables -L -n\n            Chain INPUT (policy ACCEPT)\n            target prot opt source destination\n            Chain FORWARD (policy ACCEPT)\n            target prot opt source destination\n            DOCKER all -- 0.0.0.0/0 0.0.0.0/0\n            ACCEPT all -- 0.0.0.0/0 0.0.0.0/0 ctstate RELATED,ESTABLISHED\n            ACCEPT all -- 0.0.0.0/0 0.0.0.0/0\n            DOCKER all -- 0.0.0.0/0 0.0.0.0/0\n            ACCEPT all -- 0.0.0.0/0 0.0.0.0/0 ctstate RELATED,ESTABLISHED\n            ACCEPT all -- 0.0.0.0/0 0.0.0.0/0\n            ACCEPT all -- 0.0.0.0/0 0.0.0.0/0** \n     **ACCEPT all -- 0.0.0.0/0 0.0.0.0/0**\n    **#service docker stop** \n    **#vi /etc/default/docker** \n\n    ```", "```\n    **#DOCKER=\"/usr/local/bin/docker\"**\n\n    ```", "```\n    **#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"** \n    **#DOCKER_OPTS=\"--icc=false --iptables=true\"**\n\n    ```", "```\n     **# service docker start**\n\n    ```", "```\n     **root@ubuntu:~# iptables -L -n**\n     **Chain INPUT (policy ACCEPT)**\n     **target prot opt source destination**\n     **Chain FORWARD (policy ACCEPT)**\n     **target prot opt source destination**\n     **DOCKER all -- 0.0.0.0/0 0.0.0.0/0**\n     **ACCEPT all -- 0.0.0.0/0 0.0.0.0/0 ctstate RELATED, ESTABLISHED**\n     **ACCEPT all -- 0.0.0.0/0 0.0.0.0/0**\n     **DOCKER all -- 0.0.0.0/0 0.0.0.0/0**\n     **ACCEPT all -- 0.0.0.0/0 0.0.0.0/0 ctstate RELATED, ESTABLISHED**\n     **ACCEPT all -- 0.0.0.0/0 0.0.0.0/0**\n     **ACCEPT all -- 0.0.0.0/0 0.0.0.0/0**\n     **DROP all -- 0.0.0.0/0 0.0.0.0/0**\n\n    ```", "```\n    **root@ubuntu:~# docker run -i -t -p 2222:22 --name sshserver ubuntu bash**\n    **root@9770be5acbab:/#**\n    **Execute the iptables command and you can find a Docker chain rule added.**\n    **#root@ubuntu:~# iptables -L -n**\n    **Chain INPUT (policy ACCEPT)**\n    **target     prot opt source               destination**\n    **Chain FORWARD (policy ACCEPT)**\n    **target     prot opt source               destination**\n    **Chain OUTPUT (policy ACCEPT)**\n    **target     prot opt source               destination**\n    **Chain DOCKER (0 references)**\n    **target     prot opt source               destination**\n    **ACCEPT     tcp  --  0.0.0.0/0            172.17.0.3           tcp dpt:22**\n\n    ```", "```\n    **root@ubuntu:~# docker run -i -t --name sshclient --link \n            sshserver:sshserver \n            ubuntu bash**\n    **root@979d46c5c6a5:/#**\n\n    ```", "```\n    **root@ubuntu:~# iptables -L -n**\n    **Chain INPUT (policy ACCEPT)**\n    **target     prot opt source               destination**\n    **Chain FORWARD (policy ACCEPT)**\n    **target     prot opt source               destination**\n    **Chain OUTPUT (policy ACCEPT)**\n    **target     prot opt source               destination**\n    **Chain DOCKER (0 references)**\n    **target     prot opt source               destination**\n    **ACCEPT     tcp  --  0.0.0.0/0            172.17.0.3           tcp dpt:22**\n    **ACCEPT     tcp  --  172.17.0.4           172.17.0.3           tcp dpt:22**\n    **ACCEPT     tcp  --  172.17.0.3           172.17.0.4           tcp spt:22**\n    **root@ubuntu:~#**\n\n    ```", "```\n    **root@ubuntu:~# docker inspect -f \"{{ .HostConfig.Links }}\" sshclient**\n    **[/sshserver:/sshclient/sshserver]**\n\n    ```", "```\n     ****#ssh root@172.17.0.3 -p 22**** \n\n    ```", "```\n    type sandbox struct {\n          id            string\n           containerID   string\n          config        containerConfig\n          osSbox        osl.Sandbox\n          controller    *controller\n          refCnt        int\n          endpoints     epHeap\n          epPriority    map[string]int\n          joinLeaveDone chan struct{}\n          dbIndex       uint64\n          dbExists      bool\n          isStub        bool\n          inDelete      bool\n          sync.Mutex\n    }\n\n```", "```\n    func (c *controller) NewSandbox(containerID string, options ...SandboxOption) \n     (Sandbox, error) {\n        .....\n    }\n\n```", "```\n    type endpoint struct { \n       name          string \n       id            string \n       network       *network \n       iface         *endpointInterface \n       joinInfo      *endpointJoinInfo \n       sandboxID     string \n       exposedPorts  []types.TransportPort \n       anonymous     bool \n       generic      map[string]interface{} \n       joinLeaveDone chan struct{} \n       prefAddress   net.IP \n       prefAddressV6 net.IP \n       ipamOptions   map[string]string \n       dbIndex       uint64 \n       dbExists      bool \n       sync.Mutex \n    }\n```", "```\n    type network struct { \n       ctrlr        *controller \n       name         string \n       networkType  string \n       id           string \n       ipamType     string \n       addrSpace    string \n       ipamV4Config []*IpamConf \n       ipamV6Config []*IpamConf \n       ipamV4Info   []*IpamInfo \n       ipamV6Info   []*IpamInfo \n       enableIPv6   bool \n       postIPv6     bool \n       epCnt        *endpointCnt \n       generic      options.Generic \n       dbIndex      uint64 \n       svcRecords   svcMap \n       dbExists     bool \n       persist      bool \n       stopWatchCh  chan struct{} \n       drvOnce      *sync.Once \n       internal     bool \n       sync.Mutex   \n    }\n```", "```\n    type controller struct { \n       id             string \n       drivers        driverTable \n       ipamDrivers    ipamTable \n       sandboxes      sandboxTable \n       cfg            *config.Config \n       stores         []datastore.DataStore \n       discovery     hostdiscovery.HostDiscovery \n       extKeyListener net.Listener \n       watchCh        chan *endpoint \n       unWatchCh      chan *endpoint \n       svcDb          map[string]svcMap \n       nmap           map[string]*netWatch \n       defOsSbox      osl.Sandbox \n       sboxOnce       sync.Once \n       sync.Mutex \n    }   \n\n```", "```\n     **$ calicoctl**\n     **Override the host:port of the ETCD server by setting the \n             environment \n            variable**\n     **ETCD_AUTHORITY [default: 127.0.0.1:2379]**\n     **Usage: calicoctl <command> [<args>...]**\n     **status            Print current status information**\n     **node              Configure the main calico/node container and \n             establish \n                              Calico**\n     **networking**\n     **container         Configure containers and their addresses**\n     **profile           Configure endpoint profiles**\n     **endpoint          Configure the endpoints assigned to existing \n             containers**\n     **pool              Configure ip-pools**\n     **bgp               Configure global bgp**\n     **ipam              Configure IP address management**\n     **checksystem       Check for incompatibilities on the host \n             system**\n     **diags             Save diagnostic information**\n     **version           Display the version of calicoctl**\n     **config            Configure low-level component configuration \n            See 'calicoctl <command> --help' to read about a specific \n             subcommand.**\n\n    ```", "```\n **$ curl -L https://github.com/docker/machine/releases/download/\n    v0.7.0/docker-machine-`uname -s`-`uname -m` > /usr/local/bin/\n    docker-machine && \\**\n **> chmod +x /usr/local/bin/docker-machine**\n **% Total\u00a0\u00a0\u00a0 % Received % Xferd\u00a0 Average Speed\u00a0\u00a0 Time\u00a0\u00a0\u00a0 Time\u00a0\u00a0\u00a0\u00a0Time\u00a0 Current**\n**\u00a0    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Dload\u00a0 Upload\u00a0\u00a0 Total\u00a0\u00a0 Spent\u00a0\u00a0 Left\u00a0 Speed**\n **100\u00a0\u00a0 601\u00a0\u00a0\u00a0 0\u00a0\u00a0 601\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0 266\u00a0\u00a0\u00a0\u00a0\u00a0 0 --:--:--\u00a0 0:00:02 --:--:--\u00a0\u00a0 266**\n **100 38.8M\u00a0 100 38.8M\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0 0\u00a0 1420k\u00a0\u00a0\u00a0\u00a0\u00a0 0\u00a0 0:00:28\u00a0 0:00:28 --:--:-- 1989k**\n **$ docker-machine version**\n **docker-machine version 0.7.0, build a650a40**\n\n```", "```\n**$ docker-machine create \\**\n**>   -d vmwarefusion \\**\n**>   swarm-consul**\n**Running pre-create checks...**\n**(swarm-consul) Default Boot2Docker ISO is out-of-date, downloading the latest \n    release...**\n**(swarm-consul) Latest release for github.com/boot2docker/boot2docker is \n    v1.12.1**\n**(swarm-consul) Downloading** \n**...**\n\n```", "```\n**$(docker-machine config swarm-consul) run \\**\n**>         -d \\**\n**>         --restart=always \\**\n**>         -p \"8500:8500\" \\**\n**>         -h \"consul\" \\**\n**>         progrium/consul -server -bootstrap**\n**Unable to find image 'progrium/consul:latest' locally**\n**latest: Pulling from progrium/consul**\n**...**\n**Digest: \n    sha256:8cc8023462905929df9a79ff67ee435a36848ce7a10f18d6d0faba9306b97274**\n**Status: Downloaded newer image for progrium/consul:latest**\n**d482c88d6a1ab3792aa4d6a3eb5e304733ff4d622956f40d6c792610ea3ed312**\n\n```", "```\n**$ docker-machine create \\**\n**>   -d vmwarefusion \\**\n**>   --swarm \\**\n**>   --swarm-master \\**\n**>   --swarm-discovery=\"consul://$(docker-machine ip swarm-\n     consul):8500\" \\**\n**>   --engine-opt=\"cluster-store=consul://$(docker-machine ip swarm-\n    consul):8500\" \\**\n**>   --engine-opt=\"cluster-advertise=eth0:2376\" \\**\n**>   swarm-0**\n**Running pre-create checks...**\n**Creating machine...**\n**(swarm-0) Copying \n     /Users/vkohli/.docker/machine/cache/boot2docker.iso to \n    /Users/vkohli/.docker/machine/machines/swarm-0/boot2docker.iso...**\n**(swarm-0) Creating SSH key...**\n**(swarm-0) Creating VM...**\n**...**\n\n```", "```\n**$ docker-machine create \\**\n**>   -d vmwarefusion \\**\n**>   --swarm \\**\n**>   --swarm-discovery=\"consul://$(docker-machine ip swarm-\n     consul):8500\" \\**\n**>   --engine-opt=\"cluster-store=consul://$(docker-machine ip swarm-\n    consul):8500\" \\**\n**>   --engine-opt=\"cluster-advertise=eth0:2376\" \\**\n**>   swarm-1**\n**Running pre-create checks...**\n**Creating machine...**\n**(swarm-1) Copying \n     /Users/vkohli/.docker/machine/cache/boot2docker.iso to \n    /Users/vkohli/.docker/machine/machines/swarm-1/boot2docker.iso...**\n**(swarm-1) Creating SSH key...**\n**(swarm-1) Creating VM...**\n**...**\n\n```", "```\n**$ eval $(docker-machine env --swarm swarm-0)**\n\n```", "```\n**$ docker $(docker-machine config swarm-0) network create --driver \n    overlay prod**\n\n```", "```\n**$ docker run -d -it --net prod --name dev-vm-1 ubuntu:12.04**\n**426f39dbcb87b35c977706c3484bee20ae3296ec83100926160a39190451e57a**\n\n```", "```\n**$ docker attach 426**\n**root@426f39dbcb87:/# ip address**\n**23: eth0@if24: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc \n     noqueue state \n    UP** \n **link/ether 02:42:0a:00:00:02 brd ff:ff:ff:ff:ff:ff**\n **inet 10.0.0.2/24 scope global eth0**\n **valid_lft forever preferred_lft forever**\n **inet6 fe80::42:aff:fe00:2/64 scope link** \n **valid_lft forever preferred_lft forever**\n**25: eth1@if26: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc \n     noqueue state \n    UP** \n **link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff**\n **inet 172.18.0.2/16 scope global eth1**\n **valid_lft forever preferred_lft forever**\n **inet6 fe80::42:acff:fe12:2/64 scope link** \n **valid_lft forever preferred_lft forever**\n\n```", "```\n**$ docker run -d -it --net prod --name dev-vm-7 ubuntu:12.04**\n**d073f52a7eaacc0e0cb925b65abffd17a588e6178c87183ae5e35b98b36c0c25**\n**$ docker attach d073**\n**root@d073f52a7eaa:/# ip address**\n**26: eth0@if27: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc \n     noqueue state \n    UP** \n **link/ether 02:42:0a:00:00:03 brd ff:ff:ff:ff:ff:ff**\n **inet 10.0.0.3/24 scope global eth0**\n **valid_lft forever preferred_lft forever**\n **inet6 fe80::42:aff:fe00:3/64 scope link** \n **valid_lft forever preferred_lft forever**\n**28: eth1@if29: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc \n     noqueue state \n    UP** \n **link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff**\n **inet 172.18.0.2/16 scope global eth1**\n **valid_lft forever preferred_lft forever**\n **inet6 fe80::42:acff:fe12:2/64 scope link** \n **valid_lft forever preferred_lft forever**\n**root@d073f52a7eaa:/#** \n\n```", "```\n    **$ sudo apt-get install openvswitch-switch** \n\n    ```", "```\n    **$ cd /usr/bin** \n    **$ wget https://raw.githubusercontent.com/openvswitch/ovs/master**\n     **/utilities/ovs-docker**\n    **$ chmod a+rwx ovs-docker**\n\n    ```", "```\n    **$ ovs-vsctl add-br ovs-br1** \n    **$ ifconfig ovs-br1 173.16.1.1 netmask 255.255.255.0 up** \n\n    ```", "```\n    **$ docker run -i-t --name container1 ubuntu /bin/bash**\n    **$ docker run -i-t --name container2 ubuntu /bin/bash**\n\n    ```", "```\n    **# ovs-docker add-port ovs-br1 eth1 container1 --\n             ipaddress=173.16.1.2/24**\n    **# ovs-docker add-port ovs-br1 eth1 container2 --\n             ipaddress=173.16.1.3/24**\n\n    ```", "```\n    **# docker exec container1 ifconfig**\n    **eth0      Link encap:Ethernet  HWaddr 02:42:ac:10:11:02**\n    **inet addr:172.16.17.2  Bcast:0.0.0.0  Mask:255.255.255.0**\n    **inet6 addr: fe80::42:acff:fe10:1102/64 Scope:Link**\n    **...**\n    **# docker exec container2 ifconfig**\n    **eth0      Link encap:Ethernet  HWaddr 02:42:ac:10:11:03**\n    **inet addr:172.16.17.3  Bcast:0.0.0.0  Mask:255.255.255.0**\n    **inet6 addr: fe80::42:acff:fe10:1103/64 Scope:Link**\n    **...**\n\n    ```", "```\n    **# docker exec container2 ping 172.16.17.2**\n    **PING 172.16.17.2 (172.16.17.2) 56(84) bytes of data.**\n    **64 bytes from 172.16.17.2: icmp_seq=1 ttl=64 time=0.257 ms**\n    **64 bytes from 172.16.17.2: icmp_seq=2 ttl=64 time=0.048 ms**\n    **64 bytes from 172.16.17.2: icmp_seq=3 ttl=64 time=0.052 ms**\n    **# docker exec container1 ping 172.16.17.2**\n    **PING 172.16.17.2 (172.16.17.2) 56(84) bytes of data.**\n    **64 bytes from 172.16.17.2: icmp_seq=1 ttl=64 time=0.060 ms**\n    **64 bytes from 172.16.17.2: icmp_seq=2 ttl=64 time=0.035 ms**\n    **64 bytes from 172.16.17.2: icmp_seq=3 ttl=64 time=0.031 ms**\n\n    ```", "```\n    **# wget -qO- https://get.docker.com/ | sh**\n    **# sudo apt-get install openvswitch-switch**\n\n    ```", "```\n    **# cd /usr/bin** \n    **# wget https://raw.githubusercontent.com/openvswitch/ovs\n            /master/utilities/ovs-docker**\n    **# chmod a+rwx ovs-docker**\n\n    ```", "```\n    **$ service docker stop**\n    **$ ip link set dev docker0 down**\n    **$ ip addr del 172.17.42.1/16 dev docker0**\n    **$ ip addr add 192.168.10.1/24 dev docker0**\n    **$ ip link set dev docker0 up**\n    **$ ip addr show docker0**\n    **$ service docker start**\n\n    ```", "```\n    **$ ovs-vsctl add-br br0** \n\n    ```", "```\n    **$ ovs-vsctl add-port br0 gre0 -- set interface gre0 type=gre \n            options:remote_ip=30.30.30.8**\n\n    ```", "```\n    **$ brctl addif docker0 br0** \n\n    ```", "```\n    **$ service docker stop**\n    **$ iptables -t nat -F POSTROUTING** \n    **$ ip link set dev docker0 down** \n    **$ ip addr del 172.17.42.1/16 dev docker0**\n    **$ ip addr add 192.168.10.2/24 dev docker0** \n    **$ ip link set dev docker0 up**\n    **$ ip addr show docker0**\n    **$ service docker start**\n\n    ```", "```\n    **$ ip link set br0 up**\n    **$ ovs-vsctl add-br br0** \n\n    ```", "```\n    **# br0 bridge  \n            $ ovs-vsctl add-port br0 gre0 -- set interface gre0 type=gre \n            options:remote_ip=30.30.30.7**\n\n    ```", "```\n    **$ brctl addif docker0 br0**\n\n    ```", "```\n    **$ ping 192.168.10.2**\n    **PING 192.168.10.2 (192.168.10.2) 56(84) bytes of data.**\n    **64 bytes from 192.168.10.2: icmp_seq=1 ttl=64 time=0.088 ms**\n    **64 bytes from 192.168.10.2: icmp_seq=2 ttl=64 time=0.032 ms**\n    **^C**\n    **--- 192.168.10.2 ping statistics ---**\n    **2 packets transmitted, 2 received, 0% packet loss, time 999ms**\n    **rtt min/avg/max/mdev = 0.032/0.060/0.088/0.028 ms**\n\n    ```", "```\n    **$ ping 192.168.10.1**\n    **PING 192.168.10.1 (192.168.10.1) 56(84) bytes of data.**\n    **64 bytes from 192.168.10.1: icmp_seq=1 ttl=64 time=0.088 ms**\n    **64 bytes from 192.168.10.1: icmp_seq=2 ttl=64 time=0.032 ms**\n    **^C**\n    **--- 192.168.10.1 ping statistics ---**\n    **2 packets transmitted, 2 received, 0% packet loss, time 999ms**\n    **rtt min/avg/max/mdev = 0.032/0.060/0.088/0.028 ms**\n\n    ```", "```\n     **$ docker run -t -i --name container1 ubuntu:latest /bin/bash** \n\n    ```", "```\n    **$ docker run -t -i --name container2 ubuntu:latest /bin/bash** \n\n    ```"]