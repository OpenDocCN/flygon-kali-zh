["```kt\n    public class MainActivity extends CardboardActivity implements CardboardView.StereoRenderer {\n    ```", "```kt\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            setContentView(R.layout.activity_main);\n\n            CardboardView cardboardView = (CardboardView) findViewById(R.id.cardboard_view);\n            cardboardView.setRenderer(this);\n            setCardboardView(cardboardView);  \n        }\n    ```", "```kt\n<.OverlayView\n   android:id=\"@+id/overlay\"\n   android:layout_width=\"fill_parent\"\n   android:layout_height=\"fill_parent\"\n   android:layout_alignParentLeft=\"true\"\n   android:layout_alignParentTop=\"true\" />\n```", "```kt\npublic class OverlayView extends LinearLayout{\n\n    public OverlayView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n\n        TextView textView = new TextView(context, attrs);\n        addView(textView);\n\n        textView.setTextColor(Color.rgb(150, 255, 180));\n        textView.setText(\"Hello Virtual World!\");\n        setVisibility(View.VISIBLE);\n    }\n}\n```", "```kt\n    public OverlayView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n\n        LayoutParams params = new LayoutParams(\n            LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1.0f);\n        params.setMargins(0, 0, 0, 0);\n\n        OverlayEye eye = new OverlayEye(context, attrs);\n        eye.setLayoutParams(params);\n        addView(eye);\n\n        eye.setColor(Color.rgb(150, 255, 180));\n        eye.addContent(\"Hello Virtual World!\");\n        setVisibility(View.VISIBLE);\n  }\n```", "```kt\n    private class OverlayEye extends ViewGroup {\n        private Context context;\n        private AttributeSet attrs;\n        private TextView textView;\n        private int textColor;\n\n        public OverlayEye(Context context, AttributeSet attrs) {\n            super(context, attrs);\n            this.context = context;\n            this.attrs = attrs;\n        }\n\n        public void setColor(int color) {\n            this.textColor = color;\n        }\n\n        public void addContent(String text) {\n            textView = new TextView(context, attrs);\n            textView.setGravity(Gravity.CENTER);\n            textView.setTextColor(textColor);\n            textView.setText(text);\n            addView(textView);\n        }\n    }\n```", "```kt\n        @Override\n        protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n            final int width = right - left;\n            final int height = bottom - top;\n\n            final float verticalTextPos = 0.52f;\n\n            float topMargin = height * verticalTextPos;\n            textView.layout(0, (int) topMargin, width, bottom);\n        }\n```", "```kt\npublic class OverlayView extends LinearLayout{\n    private final OverlayEye leftEye;\n    private final OverlayEye rightEye;\n```", "```kt\n    public CardboardOverlayView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n\n        LayoutParams params = new LayoutParams(\n                LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1.0f);\n        params.setMargins(0, 0, 0, 0);\n\n        leftEye = new OverlayEye(context, attrs);\n        leftEye.setLayoutParams(params);\n        addView(leftEye);\n\n        rightEye = new OverlayEye(context, attrs);\n        rightEye.setLayoutParams(params);\n        addView(rightEye);\n\n        setDepthFactor(0.01f);\n        setColor(Color.rgb(150, 255, 180));\n        addContent(\"Hello Virtual World!\");\n        setVisibility(View.VISIBLE);\n   }\n```", "```kt\n    public void setDepthFactor(float factor) {\n        leftEye.setDepthFactor(factor);\n        rightEye.setDepthFactor(-factor);\n    }\n\n    public void setColor(int color) {\n        leftEye.setColor(color);\n        rightEye.setColor(color);\n    }\n\n    public void addContent(String text) {\n        leftEye.addContent(text);\n        rightEye.addContent(text);\n    }\n```", "```kt\n        private int depthOffset;\n        private int viewWidth;\n```", "```kt\n            viewWidth = width;\n```", "```kt\n        public void setDepthFactor(float factor) {\n            this.depthOffset = (int)(factor * viewWidth);\n        }\n```", "```kt\n            textView.setX(depthOffset);\n            addView(textView);\n```", "```kt\npublic class MainActivity extends CardboardActivity implements CardboardView.StereoRenderer {\n    private OverlayView overlayView;\n```", "```kt\n        ...\n        setCardboardView(cardboardView);\n        overlayView = (OverlayView) findViewById(R.id.overlay);\n        overlayView.addContent(\"Hello Virtual World\");\n```", "```kt\n        setDepthOffset(0.01f);\n        setColor(Color.rgb(150, 255, 180));\n        addContent(\"Hello Virtual World!\");\n        setVisibility(View.VISIBLE); \n   }\n```", "```kt\n        ScreenParams sp = cardboardView.getHeadMountedDisplay().getScreenParams();\n        overlayView.setText(sp.toString());\n```", "```kt\n    ScreenParams sp = cardboardView.getHeadMountedDisplay().getScreenParams();\n    Log.d(TAG, \"screen width: \" + sp.getWidth());\n```", "```kt\n    FieldOfView fov = cardboardView.getHeadMountedDisplay().getCardboardDeviceParams().getLeftEyeMaxFov();\n    Log.d(TAG, \"FOV: \" + fov.getLeft());\n```", "```kt\n    private int virtualWidth; \n    private float pixelsPerRadian;\n```", "```kt\n    public void calcVirtualWidth(CardboardView cardboard) {\n        int screenWidth = cardboard.getHeadMountedDisplay().getScreenParams().getWidth() / 2;\n        float fov = cardboard.getCardboardDeviceParams().getLeftEyeMaxFov().getLeft();\n        float pixelsPerDegree = screenWidth / fov;\n\t\tpixelsPerRadian = (float) (pixelsPerDegree * 180.0 / Math.PI);\n        virtualWidth = (int) (pixelsPerDegree * 360.0);\n    }\n```", "```kt\n        overlayView.calcVirtualWidth(cardboardView);\n```", "```kt\n    public void onNewFrame(HeadTransform headTransform) {\n        final float[] angles = new float[3];\n        headTransform.getEulerAngles(angles, 0);\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                overlayView.setHeadYaw(angles[1]);\n            }\n        });\n    }\n```", "```kt\n    private int headOffset;\n\n    public void setHeadYaw(float angle) {\n        headOffset = (int)( angle * pixelsPerRadian );\n        leftEye.setHeadOffset(headOffset);\n        rightEye.setHeadOffset(headOffset);\n    }\n```", "```kt\n        public void setHeadOffset(int headOffset) {\n            textView.setX( headOffset + depthOffset );\n        }\n```", "```kt\n        Drawable icon = getResources()\n            .getDrawable(R.drawable.android_robot, null);\n        overlayView.addContent(\"Hello Virtual World!\", icon);\n```", "```kt\n    public void addContent(String text, Drawable icon) {\n        leftEye.addContent(text, icon);\n        rightEye.addContent(text, icon);\n    }\n```", "```kt\n    private class OverlayEye extends ViewGroup {\n        private TextView textView;\n        private ImageView imageView;\n```", "```kt\n        public void addContent(String text, Drawable icon) {\n            textView = new TextView(context, attrs);\n            textView.setGravity(Gravity.CENTER);\n            textView.setTextColor(textColor);\n            textView.setText(text);\n            addView(textView);\n\n            imageView = new ImageView(context, attrs);\n imageView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);\n imageView.setAdjustViewBounds(true);\n // preserve aspect ratio\n imageView.setImageDrawable(icon);\n addView(imageView);\n        }\n```", "```kt\n            final float imageSize = 0.1f;\n            final float verticalImageOffset = -0.07f;\n            float imageMargin = (1.0f - imageSize) / 2.0f;\n            topMargin = (height * (imageMargin + verticalImageOffset));\n            float botMargin = topMargin + (height * imageSize);\n            imageView.layout(0, (int) topMargin, width, (int) botMargin);\n```", "```kt\n        public void setHeadOffset(int headOffset) {\n            textView.setX( headOffset + depthOffset );\n            imageView.setX( headOffset + depthOffset );\n        }\n```", "```kt\n        getAppList();\n```", "```kt\n    private void getAppList() {\n        final Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);\n        mainIntent.addCategory(\"com.google.intent.category.CARDBOARD\");\n        mainIntent.addFlags(PackageManager.GET_INTENT_FILTERS);\n\n        final List<ResolveInfo> pkgAppsList = getPackageManager().queryIntentActivities( mainIntent, PackageManager.GET_INTENT_FILTERS);\n\n        for (ResolveInfo info : pkgAppsList) {\n            Log.d(\"getAppList\", info.loadLabel(getPackageManager()).toString());\n        }\n    }\n```", "```kt\npublic class Shortcut {\n    private static final String TAG = \"Shortcut\";\n    public String name;\n    public Drawable icon;\n    ActivityInfo info;\n\n    public Shortcut(ResolveInfo info, PackageManager packageManager){\n        name = info.loadLabel(packageManager).toString();\n        icon = info.loadIcon(packageManager);\n        this.info = info.activityInfo;\n    }\n}\n```", "```kt\n        ...\n        int count = 0;\n        for (ResolveInfo info : pkgAppsList) {\n            overlayView.addShortcut( new Shortcut(info, getPackageManager()));\n            if (++count == 24)\n                break;\n        }\n```", "```kt\npublic class OverlayView extends LinearLayout {\n    private List<Shortcut> shortcuts = new ArrayList<Shortcut>();\n    private final int maxShortcuts = 24;\n    private int shortcutWidth;\n```", "```kt\n    public void addShortcut(Shortcut shortcut){\n        shortcuts.add(shortcut);\n        leftEye.addShortcut(shortcut);\n        rightEye.addShortcut(shortcut);\n    }\n```", "```kt\n        shortcutWidth = virtualWidth / maxShortcuts;\n```", "```kt\n    private class OverlayEye extends LinearLayout {\n        private final List<TextView> textViews = new ArrayList<TextView>();\n        private final List<ImageView> imageViews = new ArrayList<ImageView>();\n```", "```kt\n        public void addShortcut(Shortcut shortcut) {\n            TextView textView = new TextView(context, attrs);\n            textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 12.0f);\n            textView.setGravity(Gravity.CENTER);\n            textView.setTextColor(textColor);\n            textView.setText(shortcut.name);\n            addView(textView);\n            textViews.add(textView);\n\n            ImageView imageView = new ImageView(context, attrs);\n            imageView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);\n            imageView.setAdjustViewBounds(true); \n            imageView.setImageDrawable(shortcut.icon);\n            addView(imageView);\n            imageViews.add(imageView);\n        }\n```", "```kt\n            for(TextView textView : textViews) {\n                textView.layout(0, (int) topMargin, width, bottom);\n            }\n```", "```kt\n            for(ImageView imageView : imageViews) {\n                imageView.layout(0, (int) topMargin, width, (int) botMargin);\n            }\n```", "```kt\n        public void setHeadOffset(int headOffset) {\n            int slot = 0;\n            for(TextView textView : textViews) {\n                textView.setX(headOffset + depthOffset + (shortcutWidth * slot));\n                slot++;\n            }\n            slot = 0;\n            for(ImageView imageView : imageViews) {\n                imageView.setX(headOffset + depthOffset + (shortcutWidth * slot));\n                slot++;\n            }\n        }\n```", "```kt\n    public int getSlot() {\n        int slotOffset = shortcutWidth/2 - headOffset;\n        slotOffset /= shortcutWidth;\n        if(slotOffset < 0)\n            slotOffset = 0;\n        if(slotOffset >= shortcuts.size())\n            slotOffset = shortcuts.size() - 1;\n        return slotOffset;\n    }\n```", "```kt\n        public void setHeadOffset(int headOffset) {\n            int currentSlot = getSlot();\n            int slot = 0;\n            for(TextView textView : textViews) {\n                textView.setX(headOffset + depthOffset + (shortcutWidth * slot));\n                if (slot==currentSlot) {\n                    textView.setTextColor(Color.WHITE);\n                } else {\n                    textView.setTextColor(textColor);\n                }\n                slot++;\n            }\n            slot = 0;\n            for(ImageView imageView : imageViews) {\n                imageView.setX(headOffset + depthOffset + (shortcutWidth * slot));\n                slot++;\n            }\n        }\n```", "```kt\n    public static MainActivity instance;\n```", "```kt\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        instance = this;\n```", "```kt\n    @Override\n    public void onCardboardTrigger(){\n        overlayView.onTrigger();\n    }\n```", "```kt\n    public void onTrigger() {\n        shortcuts.get( getSlot() ).launch();\n    }\n```", "```kt\n    public void launch() {\n        ComponentName name = new ComponentName(info.applicationInfo.packageName,\n                info.name);\n        Intent i = new Intent(Intent.ACTION_MAIN);\n\n        i.addCategory(Intent.CATEGORY_LAUNCHER);\n        i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK |\n                Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);\n        i.setComponent(name);\n\n        if(MainActivity.instance != null) {\n            MainActivity.instance.startActivity(i);\n        } else {\n            Log.e(TAG, \"Cannot find activity singleton\");\n        }\n    }\n```"]