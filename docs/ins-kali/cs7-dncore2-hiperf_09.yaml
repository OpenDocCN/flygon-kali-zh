- en: Monitoring Application Performance Using Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具监控应用程序性能
- en: Monitoring application performance is a general process in big organizations
    to continuously monitor and improve the application experience for their customers.
    This is an important factor that revolves around different tools and techniques
    to measure the application performance and make decisions quickly.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 监控应用程序性能是大型组织中的一般流程，以持续监控和改进其客户的应用程序体验。这是一个围绕不同工具和技术来测量应用程序性能并快速做出决策的重要因素。
- en: In this chapter, we will learn some key indicators that are recommended to monitor
    the .NET Core application as well as explore App Metrics to get the real-time
    analytics and telemetry information about the key indicators.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习一些建议用于监控.NET Core应用程序的关键指标，以及探索App Metrics以获取有关关键指标的实时分析和遥测信息。
- en: 'In this chapter, we will look at the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将研究以下主题：
- en: Key metrics to monitor application performance
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控应用程序性能的关键指标
- en: 'Tools and techniques to measure application performance, which includes:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于测量应用程序性能的工具和技术，其中包括：
- en: Exploring App Metrics
  id: totrans-6
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索App Metrics
- en: Setting up App Metrics used with ASP.NET Core applications
  id: totrans-7
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置用于ASP.NET Core应用程序的App Metrics
- en: Setting up Grafana and using the App Metrics dashboard
  id: totrans-8
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Grafana并使用App Metrics仪表板
- en: Setting up the InfluxDB database and integrating it with the ASP.NET Core application
  id: totrans-9
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置InfluxDB数据库并将其与ASP.NET Core应用程序集成
- en: Monitoring performance through the Grafana website
  id: totrans-10
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Grafana网站监控性能
- en: To learn more about App Metrics or to contribute to the open source project,
    you can access the GitHub repository from the following link and see the complete
    documentation with some examples: [https://github.com/AppMetrics/AppMetrics](https://github.com/AppMetrics/AppMetrics).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关App Metrics的更多信息或为开源项目做出贡献，您可以从以下链接访问GitHub存储库，并查看完整的文档和一些示例：[https://github.com/AppMetrics/AppMetrics](https://github.com/AppMetrics/AppMetrics)。
- en: Application performance key metrics
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序性能关键指标
- en: The following are some key metrics to be considered for web-based applications.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些用于考虑基于Web的应用程序的关键指标。
- en: Average response time
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平均响应时间
- en: In every web application, response time is the key metric to be considered when
    monitoring application performance. Response time is the total time taken by the
    server to process the request. It is a time which is calculated when the request
    is received by the server which the time server then takes to process it and return
    a response. It can be affected by network latency, active users, the number of
    active requests, and CPU and memory usage on the server. The average response
    time is the total average time of all the requests being processed by the server
    at a particular time.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个Web应用程序中，响应时间是在监控应用程序性能时要考虑的关键指标。响应时间是服务器处理请求所需的总时间。这是一个在服务器接收请求时计算的时间，服务器在处理请求并返回响应时所花费的时间。它可能受到网络延迟、活跃用户、活跃请求的数量以及服务器上的CPU和内存使用率的影响。平均响应时间是服务器在特定时间内处理的所有请求的总平均时间。
- en: Apdex scores
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apdex分数
- en: Apdex is a user satisfaction score that can be categorized based on the performance
    of the application. The Apdex score can be categorized as satisfactory, tolerating,
    or frustrating.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Apdex是一个可以根据应用程序的性能进行分类的用户满意度分数。Apdex分数可以被分类为令人满意的、可容忍的或令人沮丧的。
- en: Percentage of errors
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 错误百分比
- en: This is the total percentage of the errors being reported in a particular amount
    of time. The user gets an overview of the total percentage of errors the user
    came across and can rectify them immediately.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在特定时间内报告的错误总百分比。用户可以概览用户遇到的错误总百分比，并立即纠正它们。
- en: Request rate
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请求速率
- en: The request rate is a valuable metric used for scaling applications. If the
    request rate is high and the application's performance is not good, the application
    can be scaled out to support that number of requests. On the other hand, if the
    request rate is very low, that means there is an issue or that the number of active
    users are depleting and they are not using the application. In both cases, the
    decision can be taken abruptly to provide a consistent user experience.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请求速率是用于扩展应用程序的有价值的指标。如果请求速率很高，而应用程序的性能不佳，则可以扩展应用程序以支持该数量的请求。另一方面，如果请求速率非常低，这意味着存在问题，或者活跃用户的数量正在减少，他们不再使用该应用程序。在这两种情况下，可以迅速做出决定，以提供一致的用户体验。
- en: Throughput/endpoints
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 吞吐量/端点
- en: Throughput is the number of requests the application can handle for a given
    amount of time. Usually, in commercial applications, the number of requests are
    pretty high and throughput allows you to benchmark the number of responses the
    application can handle without affecting the performance.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 吞吐量是应用程序在一定时间内可以处理的请求数。通常，在商业应用程序中，请求的数量非常高，吞吐量允许您基准应用程序可以处理的响应数量，而不会影响性能。
- en: CPU and memory usage
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CPU和内存使用率
- en: CPU and memory usage is another important metric, which is used to analyse the
    peak hours where CPU or memory usage was high so that you can investigate the
    root cause.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: CPU和内存使用率是另一个重要的指标，用于分析CPU或内存使用率高的高峰时段，以便您可以调查根本原因。
- en: Tools and techniques to measure performance
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量性能的工具和技术
- en: There are various tools available on the market that can be used to measure
    and monitor application performance. In this section, we will focus on App Metrics
    and analyse HTTP traffic, errors, and network performance.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有各种工具可用于测量和监视应用程序性能。在本节中，我们将专注于App Metrics并分析HTTP流量、错误和网络性能。
- en: Introducing App Metrics
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍App Metrics
- en: App Metrics is an open source tool that can be plug in with the ASP.NET Core
    applications. It provides real-time insights about how the application is performing
    and provides a complete overview of the application's health status. It provides
    metrics in a JSON format and integrates with the Grafana dashboards for visual
    reporting. App Metrics is based on .NET Standard and runs cross-platform. It provides
    various extensions and reporting dashboards that can run on Windows and Linux
    operating system as well.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: App Metrics是一个开源工具，可以与ASP.NET Core应用程序插件。它提供有关应用程序性能的实时见解，并提供应用程序健康状态的完整概述。它以JSON格式提供指标，并与Grafana仪表板集成以进行可视化报告。App
    Metrics基于.NET Standard并可跨平台运行。它提供各种扩展和报告仪表板，可在Windows和Linux操作系统上运行。
- en: Setting up App Metrics with ASP.NET Core
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ASP.NET Core设置应用程序指标
- en: 'We can set up App Metrics in the ASP.NET Core application in three easy steps,
    which are as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下三个简单步骤在ASP.NET Core应用程序中设置App Metrics，具体如下：
- en: Install App Metrics.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装App Metrics。
- en: 'App Metrics can be installed as NuGet packages. Here are the two packages that
    can be added through NuGet in your .NET Core project:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: App Metrics可以作为NuGet包安装。以下是可以通过NuGet添加到.NET Core项目中的两个包：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Add App Metrics in `Program.cs`.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中添加App Metrics。
- en: 'Add `UseMetrics` to `Program.cs` in the `BuildWebHost` method, as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在`BuildWebHost`方法中的`Program.cs`中添加`UseMetrics`，如下所示：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Add App Metrics in `Startup.cs`.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Startup.cs`中添加App Metrics。
- en: 'Finally, we can add a metrics resource filter in the `ConfigureServices` method
    of the `Startup` class as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在`Startup`类的`ConfigureServices`方法中添加一个指标资源过滤器，如下所示：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Run your application.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行您的应用程序。
- en: 'Build and run the application. We can test whether App Metrics is running well
    by using URLs, as shown in the following table. Just append the URL to the application''s
    root URL:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行应用程序。我们可以通过使用以下表中显示的URL来测试App Metrics是否正常运行。只需将URL附加到应用程序的根URL：
- en: '| **URL** | **Description** |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| **URL** | **描述** |'
- en: '| `/metrics` | Shows metrics using the configured metrics formatter |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `/metrics` | 使用配置的指标格式显示指标 |'
- en: '| `/metrics-text` | Shows metrics using the configured text formatter |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `/metrics-text` | 使用配置的文本格式显示指标 |'
- en: '| `/env` | Shows environment information, which includes the operating system,
    machine name, assembly name, and version |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `/env` | 显示环境信息，包括操作系统、计算机名称、程序集名称和版本 |'
- en: Appending `/metrics` or `/metrics-text` to the application's root URL gives
    complete information about application metrics. `/metrics` returns the JSON response
    that can be parsed and represented in a view with some custom parsing.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 将`/metrics`或`/metrics-text`附加到应用程序的根URL，可以提供有关应用程序指标的完整信息。`/metrics`返回可以解析并在视图中表示的JSON响应，需要进行一些自定义解析。
- en: Tracking middleware
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪中间件
- en: With App Metrics, we can manually define the typical web metrics which are essential
    to record telemetry information. However, for ASP.NET Core, there is a tracking
    middleware that can be used and configured in the project, which contains some
    built-in key metrics which are specific to the web application.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用App Metrics，我们可以手动定义记录遥测信息所必需的典型Web指标。但是，对于ASP.NET Core，有一个跟踪中间件可以在项目中使用和配置，其中包含一些特定于Web应用程序的内置关键指标。
- en: 'Metrics that are recorded by the Tracking middleware are as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪中间件记录的指标如下：
- en: '**Apdex**: This is used to monitor the user''s satisfaction based on the overall
    performance of the application. Apdex is an open industry standard that measures
    the user''s satisfaction based on the application''s response time.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apdex：**这用于根据应用程序的整体性能监控用户的满意度。Apdex是一种开放的行业标准，根据应用程序的响应时间来衡量用户的满意度。'
- en: 'We can configure the threshold of time, *T,* for each request cycle, and the
    metrics are calculated based on following conditions:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为每个请求周期设置时间阈值*T*，并根据以下条件计算指标：
- en: '| **User Satisfaction** | **Description** |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: 用户满意度 | 描述
- en: '| Satisfactory | If the response time is less than or equal to the threshold
    time (*T*) |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 令人满意 | 如果响应时间小于或等于阈值时间(*T*) |'
- en: '| Tolerating | If the response time is between the threshold time (*T*) and
    *4* times that of the threshold time (*T*) in seconds |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 容忍 | 如果响应时间在阈值时间(*T*)和阈值时间(*T*)的*4*倍之间 |'
- en: '| Frustrating | If the response time is greater than *4* times that of the
    threshold time (*T*) |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 令人沮丧 | 如果响应时间大于阈值时间(*T*)的*4*倍 |'
- en: '**Response times:** This provides the overall throughput of the request being
    processed by the application and the duration it takes per route within the application.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应时间：**这提供了应用程序处理的请求的总体吞吐量以及应用程序内每个路由所需的持续时间。'
- en: '**Active requests:** This provides the list of active requests which have been
    received on the server in a particular amount of time.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动请求：**这提供了在特定时间内在服务器上收到的活动请求列表。'
- en: '**Errors:** This provides the aggregated results of errors in a percentage
    that includes the overall error request rate, the overall count of each uncaught
    exception type, the total number of error requests per HTTP status code, and so
    on.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误：**这提供了错误的聚合结果百分比，包括总体错误请求率、每种未捕获异常类型的总体计数、每个HTTP状态代码的错误请求总数等。'
- en: '**POST and PUT sizes:** This provides the request sizes for HTTP POST and PUT
    requests.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**POST和PUT大小：**这提供了HTTP POST和PUT请求的请求大小。'
- en: Adding tracking middleware
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加跟踪中间件
- en: 'We can add tracking middleware as a NuGet package as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下方式将跟踪中间件作为NuGet包添加：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Tracking middleware provides a set of middleware that is added to record telemetry
    for the specific metric. We can add the following middleware in the `Configure`
    method to measure performance metrics:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪中间件提供了一组中间件，用于记录特定指标的遥测。我们可以在`Configure`方法中添加以下中间件来测量性能指标：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Alternatively, we can also use meta-pack middleware, which adds all the available
    tracking middleware so that we have information about all the different metrics
    which are in the preceding code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们也可以使用元包中间件，它会添加所有可用的跟踪中间件，以便我们可以获取有关前面代码中所有不同指标的信息：
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we will add tracking middleware in our `ConfigureServices` method as
    follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在我们的`ConfigureServices`方法中添加跟踪中间件如下：
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In the main `Program.cs` class, we will modify the `BuildWebHost` method and
    add the `UseMetricsWebTracking` method as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在主`Program.cs`类中，我们将修改`BuildWebHost`方法并添加`UseMetricsWebTracking`方法如下：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Setting up configuration
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置配置
- en: 'Once the middleware is added, we need to set up the default threshold and other
    configuration values so that reporting can be generated accordingly. The web tracking
    properties can be configured in the `appsettings.json` file. Here is the content
    of the `appsettings.json` file that contains the `MetricWebTrackingOptions` JSON
    key:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦中间件添加完成，我们需要设置默认阈值和其他配置值，以便相应地生成报告。Web跟踪属性可以在`appsettings.json`文件中进行配置。以下是包含`MetricWebTrackingOptions`
    JSON键的`appsettings.json`文件的内容：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`ApdexTrackingEnabled` is set to true so that the customer satisfaction report
    will be generated, and `ApdexTSeconds` is the threshold that decides whether the
    request response time was satisfactory, tolerating, or frustrating. `IgnoredHttpStatusCodes`
    contains the list of status codes that will be ignored if the response returns
    a `404` status. `IgnoredRoutesRegexPatterns` are used to ignore specific URIs
    that match the regular expression, and `OAuth2TrackingEnabled` can be set to monitor
    and record the metrics for each client and provide information specific to the
    request rate, error rate, and POST and PUT sizes for each client.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`ApdexTrackingEnabled`设置为true，以便生成客户满意度报告，`ApdexTSeconds`是决定请求响应时间是否令人满意、容忍或令人沮丧的阈值。`IgnoredHttpStatusCodes`包含了如果响应返回`404`状态则将被忽略的状态码列表。`IgnoredRoutesRegexPatterns`用于忽略与正则表达式匹配的特定URI，`OAuth2TrackingEnabled`可以设置为监视和记录每个客户端的指标，并提供特定于请求速率、错误率以及每个客户端的POST和PUT大小的信息。'
- en: 'Run the application and do some navigation. Appending `/metrics-text` in your
    application URL will display the complete report in textual format. Here is the
    sample snapshot of what textual metrics looks like:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 运行应用程序并进行一些导航。在应用程序URL中添加`/metrics-text`将以文本格式显示完整报告。以下是文本指标的示例快照：
- en: '![](img/00112.gif)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00112.gif)'
- en: Adding visual reports
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加可视化报告
- en: There are various extensions and reporting plugins available that provide a
    visual reporting dashboard. Some of them are *GrafanaCloud Hosted Metrics*, *InfluxDB*,
    *Prometheus*, *ElasticSearch*, *Graphite*, *HTTP*, *Console*, and *Text File*.
    In this chapter, we will configure the *InfluxDB* extension and see how visual
    reporting can be achieved.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种扩展和报告插件可用，提供可视化报告仪表板。其中一些是*GrafanaCloud Hosted Metrics*、*InfluxDB*、*Prometheus*、*ElasticSearch*、*Graphite*、*HTTP*、*Console*和*Text
    File*。在本章中，我们将配置*InfluxDB*扩展，并看看如何实现可视化报告。
- en: Setting up InfluxDB
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置InfluxDB
- en: InfluxDB is the open source time series database developed by Influx Data. It
    is written in the *Go* language and is widely used to store time series data for
    real-time analytics. Grafana is the server that provides reporting dashboards
    that can be viewed through a browser. InfluxDB can easily be imported as an extension
    in Grafana to display visual reporting from the InfluxDB database.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: InfluxDB是由Influx Data开发的开源时序数据库。它是用*Go*语言编写的，被广泛用于存储实时分析的时间序列数据。Grafana是提供报告仪表板的服务器，可以通过浏览器查看。InfluxDB可以轻松地作为Grafana中的扩展导入，以从InfluxDB数据库显示可视化报告。
- en: Setting up the Windows subsystem for Linux
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Windows子系统以运行Linux
- en: In this section, we will set up InfluxDB on the Windows subsystem for the Linux
    operating system.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在Linux操作系统的Windows子系统上设置InfluxDB。
- en: 'First of all, we need to enable the Windows subsystem for Linux by executing
    the following command from the PowerShell as an Administrator:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要通过在PowerShell中以管理员身份执行以下命令来启用Linux的Windows子系统：
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After running the preceding command, restart your computer.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行上述命令之后，重新启动您的计算机。
- en: Next, we will install Linux distro from the Microsoft store. In our case, we
    will install Ubuntu from the Microsoft Store. Go to the Microsoft Store, search
    for Ubuntu, and install it.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将从Microsoft商店安装Linux发行版。在我们的情况下，我们将从Microsoft商店安装Ubuntu。前往Microsoft商店，搜索Ubuntu，并安装它。
- en: 'Once the installation is done, click on Launch:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，点击启动：
- en: '![](img/00113.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00113.jpeg)'
- en: This will open up the console window, which will ask you to create a user account
    for Linux OS (Operating System).
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开控制台窗口，要求您为Linux操作系统（操作系统）创建用户帐户。
- en: Specify the username and password that will be used.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定将要使用的用户名和密码。
- en: 'Run the following command to update Ubuntu to the latest stable version from
    the bash shell. To run bash, open the command prompt, write `bash`, and hit *Enter*:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以从bash shell更新Ubuntu到最新的稳定版本。要运行bash，打开命令提示符，输入`bash`，然后按*Enter*：
- en: '![](img/00114.gif)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00114.gif)'
- en: Finally, it will ask you to create an Ubuntu username and password. Specify
    the username and password and hit enter.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，它将要求您创建一个Ubuntu用户名和密码。指定用户名和密码，然后按Enter。
- en: Installing InfluxDB
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装InfluxDB
- en: 'Here, we will go through some steps to install the InfluxDB database in Ubuntu:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将通过一些步骤在Ubuntu中安装InfluxDB数据库：
- en: To set up InfluxDB, open a command prompt in Administrator mode and run the
    bash shell.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要设置InfluxDB，请以管理员模式打开命令提示符并运行bash shell。
- en: 'Execute the following commands to the InfluxDB data store on your local PC:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地PC上执行以下命令以设置InfluxDB数据存储：
- en: '[PRE10]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Install InfluxDB by executing the following command:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令来安装InfluxDB：
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Execute the following command to run InfluxDB:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令来运行InfluxDB：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Start the InfluxDB shell by running the following command:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令启动InfluxDB shell：
- en: '[PRE13]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: It will open up the shell where database-specific commands can be executed.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 它将打开一个可以执行特定于数据库的命令的shell。
- en: 'Create a database by executing the following command. Specify a meaningful
    name for the database. In our case, it is `appmetricsdb`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令创建数据库。为数据库指定一个有意义的名称。在我们的情况下，它是`appmetricsdb`：
- en: '[PRE14]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Installing Grafana
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Grafana
- en: Grafana is an open source tool used to display dashboards in a web interface.
    There are various dashboards available that can be imported from the Grafana website
    to display real-time analytics. Grafana can simply be downloaded as a zip file
    from [http://docs.grafana.org/installation/windows/](http://docs.grafana.org/installation/windows/).
    Once it is downloaded, we can start the Grafana server by clicking on the `grafana-server.exe` executable
    from the `bin` directory.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Grafana是一个用于在Web界面中显示仪表板的开源工具。可以从Grafana网站导入各种可用的仪表板，以显示实时分析。Grafana可以从[http://docs.grafana.org/installation/windows/](http://docs.grafana.org/installation/windows/)下载为zip文件。下载后，我们可以通过单击`bin`目录中的`grafana-server.exe`可执行文件来启动Grafana服务器。
- en: Grafana provides a website that listens on port *3000*. If the Grafana server
    is running, we can access the site by navigating to `http://localhost:3000`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Grafana提供了一个网站，监听端口为*3000*。如果Grafana服务器正在运行，我们可以通过导航到`http://localhost:3000`来访问该网站。
- en: Adding the InfluxDB dashboard
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加InfluxDB仪表板
- en: There is an out-of-the-box InfluxDB dashboard available in Grafana which can
    be imported from the following link: [https://grafana.com/dashboards/2125](https://grafana.com/dashboards/2125).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Grafana提供了一个现成的InfluxDB仪表板，可以从以下链接导入：[https://grafana.com/dashboards/2125](https://grafana.com/dashboards/2125)。
- en: Copy the dashboard ID and use this to import it into the Grafana website.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 复制仪表板ID并使用它将其导入Grafana网站。
- en: 'We can import the InfluxDB dashboard by going to the Manage option on the Grafana
    website, as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过转到Grafana网站上的管理选项来导入InfluxDB仪表板，如下所示：
- en: '![](img/00115.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00115.jpeg)'
- en: 'From the Manage option, click on the *+ Dashboard* button and hit the *New
    Dashboard* option. Clicking on Import Dashboard will lead to Grafana asking you
    for the dashboard ID:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 从管理选项中，单击*+ 仪表板*按钮，然后单击*新仪表板*选项。单击导入仪表板将导致Grafana要求您输入仪表板ID：
- en: '![](img/00116.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00116.jpeg)'
- en: 'Paste the dashboard ID (for example, `2125`) copied earlier into the box and
    hit *Tab*. The system will show the dashboard''s details, and clicking on the
    Import button will import it into the system:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 将之前复制的仪表板ID（例如`2125`）粘贴到框中，然后按*Tab*。系统将显示仪表板的详细信息，单击导入按钮将其导入系统：
- en: '![](img/00117.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00117.jpeg)'
- en: Configuring InfluxDB
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置InfluxDB
- en: We will now configure the InfluxDB dashboard and add a data source that connects
    to the database that we just created.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将配置InfluxDB仪表板，并添加一个连接到我们刚刚创建的数据库的数据源。
- en: 'To proceed, we will go to the Data Sources section on the Grafana website and
    click on the *Add New Datasource* option. Here is the configuration that adds
    the data source for the InfluxDB database:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续，我们将转到Grafana网站上的数据源部分，并单击*添加新数据源*选项。以下是为InfluxDB数据库添加数据源的配置：
- en: '![](img/00118.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00118.jpeg)'
- en: Modifying the Configure and ConfigureServices methods in Startup
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改Startup中的Configure和ConfigureServices方法
- en: Up to now, we have set up Ubuntu and the InfluxDB database on our machine. We
    also set up the InfluxDB data source and added a dashboard through the Grafana
    website. Next, we will configure our ASP.NET Core web application to push real-time
    information to the InfluxDB database.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经在我们的机器上设置了Ubuntu和InfluxDB数据库。我们还设置了InfluxDB数据源，并通过Grafana网站添加了一个仪表板。接下来，我们将配置我们的ASP.NET
    Core Web应用程序，以将实时信息推送到InfluxDB数据库。
- en: 'Here is the modified `ConfigureServices` method that initializes the `MetricsBuilder`
    to define the attribute related to the application name, environment, and connection
    details:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这是修改后的`ConfigureServices`方法，它初始化`MetricsBuilder`以定义与应用程序名称、环境和连接详细信息相关的属性：
- en: '[PRE15]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In the preceding code, we have set the application name `app` as the assembly
    name, and the environment `env` as the `stage`. `http://127.0.0.1:8086` is the
    URL of the InfluxDB server that listens for the telemetry being pushed by the
    application. `appmetricsdb` is the database that we created in the preceding section.
    Then, we added the `AddMetrics` middleware and specified the metrics containing
    the configuration. `AddMetricsTrackingMiddleware` is used to track the web telemetry
    information which is displayed on the dashboard, and `AddMetricsReportScheduled`
    is used to push the telemetry information to the database.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们将应用程序名称`app`设置为程序集名称，将环境`env`设置为`stage`。`http://127.0.0.1:8086`是InfluxDB服务器的URL，用于监听应用程序推送的遥测。`appmetricsdb`是我们在前一节中创建的数据库。然后，我们添加了`AddMetrics`中间件，并指定了包含配置的指标。`AddMetricsTrackingMiddleware`用于跟踪显示在仪表板上的Web遥测信息，`AddMetricsReportScheduled`用于将遥测信息推送到数据库。
- en: 'Here is the `Configure` method that contains `UseMetricsAllMiddleware` to use
    App Metrics. `UseMetricsAllMiddleware` adds all the middleware available in App
    Metrics:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这是包含`UseMetricsAllMiddleware`以使用App Metrics的`Configure`方法。`UseMetricsAllMiddleware`添加了App
    Metrics中可用的所有中间件：
- en: '[PRE16]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Rather than calling `UseAllMetricsMiddleware`, we can also add individual middleware
    explicitly based on the requirements. Here is the list of middleware that can
    be added:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据需求显式地添加单个中间件，而不是调用`UseAllMetricsMiddleware`。以下是可以添加的中间件列表：
- en: '[PRE17]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Testing the ASP.NET Core App and reporting on the Grafana dashboard
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试ASP.NET Core应用程序并在Grafana仪表板上报告
- en: 'To test the ASP.NET Core application and to see visual reporting on the Grafana
    dashboard, we will go through following steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试ASP.NET Core应用程序并在Grafana仪表板上看到可视化报告，我们将按照以下步骤进行：
- en: Start the Grafana server by going to `{installation_directory}\bin\grafana-server.exe`.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过转到`{installation_directory}\bin\grafana-server.exe`来启动Grafana服务器。
- en: Start bash from the command prompt and run the `sudo influx` command.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令提示符启动bash并运行`sudo influx`命令。
- en: Start another bash from the command prompt and run the `sudo influx` command.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令提示符启动另一个bash并运行`sudo influx`命令。
- en: Run the ASP.NET Core application.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行ASP.NET Core应用程序。
- en: Access `http://localhost:3000` and click on the App Metrics dashboard.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问`http://localhost:3000`并单击App Metrics仪表板。
- en: 'This will start gathering telemetry information and will display the performance
    metrics, as shown in the following screenshots:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将开始收集遥测信息，并显示性能指标，如下面的屏幕截图所示：
- en: 'The following graph shows the total throughput in **Request Per Minute** (**RPM**),
    error percentage, and active requests:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了**每分钟请求**（**RPM**）的总吞吐量，错误百分比和活动请求：
- en: '![](img/00119.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00119.jpeg)'
- en: 'Here is the Apdex score colorizing the user satisfaction into three different
    colors, where red is frustrating, orange is tolerating, and green is satisfactory.
    The following graph shows the blue line being drawn on the green bar, which means
    that the application performance is satisfactory:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是Apdex分数，将用户满意度分为三种不同的颜色，红色代表令人沮丧，橙色代表容忍，绿色代表满意。以下图表显示蓝线绘制在绿色条上，这意味着应用程序性能是令人满意的：
- en: '![](img/00120.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00120.jpeg)'
- en: 'The following snapshot shows the throughput graph for all the requests being
    made, and each request has been colorized with the different colors: red, orange,
    and green. In this case, there are two HTTP GET requests for the about and contact
    us pages:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下快照显示了所有请求的吞吐量图，每个请求都用不同的颜色标记：红色，橙色和绿色。在这种情况下，有两个HTTP GET请求，分别是关于和联系我们页面：
- en: '![](img/00121.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00121.jpeg)'
- en: 'Here is the response time graph showing the response time of both requests:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这是响应时间图，显示了两个请求的响应时间：
- en: '![](img/00122.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00122.jpeg)'
- en: Summary
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned some key metrics which are essential for monitoring
    application performance. We explored and set up App Metrics, which is a free tool
    that runs cross-platform and provides a lot of extensions that can be added to
    achieve more reporting. We went through the step-by-step guide on how to configure
    and set up App Metrics and related components like InfluxDb and Grafana to store
    and view telemetry in the Grafana web-based tool and integrate it with ASP.NET
    Core application.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了一些对于监控应用程序性能至关重要的关键指标。我们探索并设置了App Metrics，这是一个免费的跨平台工具，提供了许多可以添加以实现更多报告的扩展。我们逐步介绍了如何配置和设置App
    Metrics以及相关组件，如InfluxDb和Grafana，以存储和查看Grafana Web工具中的遥测，并将其与ASP.NET Core应用程序集成。
