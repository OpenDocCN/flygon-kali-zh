["```cs\nclass class-name {\n    // this is class body\n}\n```", "```cs\nclass class-name {\n // property 1\n // property 2\n // ...\n\n // method 1\n // method 2\n // ...\n}\n```", "```cs\nclass Customer\n{\n    public string firstName;\n    public string lastName;\n    public string phoneNumber;\n    public string emailAddress;\n\n    public string GetFullName()\n    {\n        return firstName + \" \" + lastName;\n    }\n}\n```", "```cs\nclass BankAccount {\n    public string bankAccountNumber;\n    public string bankAccountOwnerName;\n    public double amount;\n    public datetime openningDate;\n\n    public string Credit(){\n        // Amount credited\n    }\n\n    public string Debit(){\n        // Amount debited\n    }\n}\n```", "```cs\nCustomer customer1 = new Customer();\n```", "```cs\nCustomer jackJones = new Customer();\n```", "```cs\nusing System;\n\nnamespace Chapter2\n{\n    public class Code_2_2\n    {\n        static void Main(string[] args)\n        {\n            Customer customer1 = new Customer();\n            customer1.firstName = \"Molly\";\n            customer1.lastName = \"Dolly\";\n            customer1.phoneNumber = \"98745632\";\n            customer1.emailAddress = \"mollydolly@email.com\";\n\n            Console.WriteLine(\"First name is \" + customer1.firstName);\n            Console.ReadKey();\n        }\n    }\n\n    public class Customer\n    {\n        public string firstName;\n        public string lastName;\n        public string phoneNumber;\n        public string emailAddress;\n\n        public string GetFullName()\n        {\n            return firstName + \" \" + lastName;\n        }\n    }\n}\n```", "```cs\nConsole.WriteLine(\"First name is \" + customer1.firstName);\n```", "```cs\nFirst name is Molly\n```", "```cs\naccess-modifier return-type method-name(parameter-list) {\n    // method body\n}\n```", "```cs\npublic string GetFullName(string firstName, string lastName){\n    return firstName + lastName;\n}\n```", "```cs\naccess-modifier class-name(parameter-list) {\n    // constructor body\n}\n```", "```cs\nclass BankAccount {\n    public string owner;\n\n    public BankAccount(){\n        owner = \"Some person\";\n    }\n}\n```", "```cs\nclass BankAccount {\n    public string owner;\n\n    public BankAccount(string theOwner){\n        owner = theOwner;\n    }\n}\n```", "```cs\nBankAccount account = new BankAccount(\"Some Person\");\n```", "```cs\nclass BankAccount {\n    public string owner;\n\n    public BankAccount(){\n        owner = \"Some person\";\n    }\n\n    public BankAccount(string theOwner){\n        owner = theOwner;\n    }\n}\n```", "```cs\nclass BankAccount {\n    public string owner;\n\n    public BankAccount()\n    {\n    }\n}\n```", "```cs\npublic class Fruit {\n    public string Name { get; set; }\n    public string Color { get; set; }\n}\n\npublic class Apple : Fruit {\n    public int NumberOfSeeds { get; set; }\n}\n```", "```cs\npublic class BankAccount {\n    private double AccountBalance { get; set; }\n}\n```", "```cs\npublic class BankAccount{\n    private double AccountBalance { get; set; }\n    private double TaxRate { get; set; }\n\n    public double GetAccountBalance() {\n        double balanceAfterTax = GetBalanceAfterTax();\n        return balanceAfterTax;\n    }\n\n    private double GetBalanceAfterTax(){\n        return AccountBalance * TaxRate;\n    }\n}\n```", "```cs\npublic abstract class Vehicle {\n    public abstract int GetNumberOfTyres();\n}\n\npublic class Bicycle : Vehicle {\n    public string Company { get; set; }\n    public string Model { get; set; }\n    public int NumberOfTyres { get; set; }\n\n    public override int GetNumberOfTyres() {\n        return NumberOfTyres;\n    }\n}\n\npublic class Car : Vehicle {\n    public string Company { get; set; }\n    public string Model { get; set; }\n    public int FrontTyres { get; set; }\n    public int BackTyres { get; set; }\n\n    public override int GetNumberOfTyres() {\n        return FrontTyres + BackTyres;\n    }\n}\n```", "```cs\npublic class Calculator {\n    public int AddNumbers(int firstNum, int secondNum){\n        return firstNum + secondNum;\n    }\n\n    public double AddNumbers(double firstNum, double secondNum){\n        return firstNum + secondNum;\n    }\n}\n```", "```cs\npublic class MyCalc\n{\n    public int a;\n    public int b;\n\n    public MyCalc(int a, int b)\n    {\n        this.a = a;\n        this.b = b;\n    }\n\n    public static MyCalc operator +(MyCalc a, MyCalc b)\n    {\n        return new MyCalc(a.a * 3 ,b.b * 3);\n    }\n}\n```"]