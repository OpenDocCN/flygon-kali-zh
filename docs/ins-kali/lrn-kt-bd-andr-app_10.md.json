["```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\"com.packtpub.eunice.todolist.MainActivity\"\n    tools:showIn=\"@layout/activity_main\">\n\n    <ListView\n        android:id=\"@+id/list_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:layout_editor_absoluteX=\"4dp\"\n        tools:layout_editor_absoluteY=\"8dp\" />\n</android.support.constraint.ConstraintLayout>\n```", "```kt\nfab.setOnClickListener { view ->\n    Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n            .setAction(\"Action\", null).show()\n}\n```", "```kt\nfun showNewTaskUI() {\n}\n```", "```kt\nfab.setOnClickListener { showNewTaskUI() }\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <EditText\n        android:id=\"@+id/task\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"text\"/>\n\n</LinearLayout>\n```", "```kt\n<string name=\"add_new_task_dialog_title\">Add New Task</string>\n<string name=\"save\">Save</string>\n```", "```kt\nclass NewTaskDialogFragment: DialogFragment() {  // 1\n\n    // 2\n    interface NewTaskDialogListener {\n        fun onDialogPositiveClick(dialog: DialogFragment, task: String)\n        fun onDialogNegativeClick(dialog: DialogFragment)\n    }\n\n    var newTaskDialogListener: NewTaskDialogListener? = null  // 3\n\n    // 4\n    companion object {\n        fun newInstance(title: Int): NewTaskDialogFragment {\n\n            val newTaskDialogFragment = NewTaskDialogFragment()\n            val args = Bundle()\n            args.putInt(\"dialog_title\", title)\n            newTaskDialogFragment.arguments = args\n            return newTaskDialogFragment\n        }\n    }\n\n    override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {  // 5\n        val title = arguments.getInt(\"dialog_title\")\n        val builder = AlertDialog.Builder(activity) \n        builder.setTitle(title) \n\n        val dialogView =    \n     activity.layoutInflater.inflate(R.layout.dialog_new_task, null) \n        val task = dialogView.findViewById<EditText>(R.id.task)\n\n        builder.setView(dialogView)\n                .setPositiveButton(R.string.save, { dialog, id ->\n                    newTaskDialogListener?.onDialogPositiveClick(this, \n                 task.text.toString);\n                })\n                .setNegativeButton(android.R.string.cancel, { dialog, \n                 id ->\n                    newTaskDialogListener?.onDialogNegativeClick(this)\n                })\n        return builder.create()\n     }\n\n  override fun onAttach(activity: Activity) { // 6\n        super.onAttach(activity)\n        try {\n            newTaskDialogListener = activity as NewTaskDialogListener  \n        } catch (e: ClassCastException) {\n            throw ClassCastException(activity.toString() + \" must  \n            implement NewTaskDialogListener\")\n        }\n\n    }\n}\n```", "```kt\nclass MainActivity : AppCompatActivity(), NewTaskDialogFragment.NewTaskDialogListener {\n```", "```kt\n    override fun onDialogPositiveClick(dialog: DialogFragment, task:String) {\n    }\n\n    override fun onDialogNegativeClick(dialog: DialogFragment) {\n    }\n```", "```kt\nval newFragment = NewTaskDialogFragment.newInstance(R.string.add_new_task_dialog_title)\nnewFragment.show(fragmentManager, \"newtask\")\n```", "```kt\nSnackbar.make(fab, \"Task Added Successfully\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show()\n```", "```kt\nprivate var todoListItems = ArrayList<String>()\n```", "```kt\ntodoListItems.add(task)\nlistAdapter?.notifyDataSetChanged()\n```", "```kt\nprivate var listView: ListView? = null\n```", "```kt\nlistView = findViewById(R.id.list_view)\n```", "```kt\nprivate var listAdapter: ArrayAdapter<String>? = null\n\n```", "```kt\nprivate fun populateListView() {\n    listAdapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, todoListItems)\n    listView?.adapter = listAdapter\n}\n```", "```kt\npopulateListView()\n```", "```kt\n<string name=\"update_task_dialog_title\">Edit Task</string>\n<string name=\"edit\">Edit</string>\n<string name=\"delete\">Delete</string>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item\n        android:id=\"@+id/edit_item\"\n        android:title=\"@string/edit\"\n        android:icon=\"@android:drawable/ic_menu_edit\"\n        android:visible=\"false\"\n        app:showAsAction=\"always\"/>\n    <item\n        android:id=\"@+id/delete_item\"\n        android:title=\"@string/delete\"\n        android:icon=\"@android:drawable/ic_menu_delete\"\n        android:visible=\"false\"\n        app:showAsAction=\"always\"/>\n</menu>\n```", "```kt\nprivate var showMenuItems = false\nprivate var selectedItem = -1 \n```", "```kt\noverride fun onCreateOptionsMenu(menu: Menu): Boolean {\n    val inflater = menuInflater\n    inflater.inflate(R.menu.to_do_list_menu, menu)\n    val editItem = menu.findItem(R.id.edit_item)\n    val deleteItem = menu.findItem(R.id.delete_item)\n\n    if (showMenuItems) {\n        editItem.isVisible = true\n        deleteItem.isVisible = true\n    }\n\n    return true\n}\n```", "```kt\nprivate fun showUpdateTaskUI(selected: Int) {\n    selectedItem = selected\n    showMenuItems = true\n    invalidateOptionsMenu()\n}\n```", "```kt\nlistView?.onItemClickListener = AdapterView.OnItemClickListener { parent, view, position, id -> showUpdateTaskUI(position) }\n\n```", "```kt\nfun newInstance(title: Int, selected: String?): NewTaskDialogFragment { // 1\n    val newTaskDialogFragment = NewTaskDialogFragment()\n    val args = Bundle()\n    args.putInt(\"dialog_title\", title)\n    args.putString(\"selected_item\", selected) // 2\n    newTaskDialogFragment.arguments = args\n    return newTaskDialogFragment\n}\n```", "```kt\noverride fun onCreateDialog(savedInstanceState: Bundle?): Dialog {\n    val title = arguments.getInt(\"dialog_title\")\n    val selectedText = arguments.getString(\"selected_item\") // 1\n    val builder = AlertDialog.Builder(activity)\n    builder.setTitle(title)\n\n    val dialogView = activity.layoutInflater.inflate(R.layout.dialog_new_task, null)\n\n    val task = dialogView.findViewById<EditText>(R.id.task)\n\n    task.setText(selectedText)  // 2\n\n    builder.setView(dialogView)\n            .setPositiveButton(R.string.save, { dialog, id ->\n\n                newTaskDialogListener?.onDialogPositiveClick(this, task.text.toString());\n            })\n            .setNegativeButton(android.R.string.cancel, { dialog, id ->\n\n                newTaskDialogListener?.onDialogNegativeClick(this)\n            })\n\n    return builder.create()\n}\n```", "```kt\noverride fun onOptionsItemSelected(item: MenuItem?): Boolean {\n\nif (-1 != selectedItem) {\nif (R.id.edit_item == item?.itemId) {  // 1\n\nval updateFragment = NewTaskDialogFragment.newInstance(R.string.update_task_dialog_title, todoListItems[selectedItem])\n            updateFragment.show(fragmentManager, \"updatetask\")\n\n        } else if (R.id.delete_item == item?.itemId) {  // 2\n\ntodoListItems.removeAt(selectedItem)\nlistAdapter?.notifyDataSetChanged()\nselectedItem = -1\n            Snackbar.make(fab, \"Task deleted successfully\", \n            Snackbar.LENGTH_LONG).setAction(\"Action\", null).show()\n\n        }\n    }\nreturn super.onOptionsItemSelected(item)\n}\n```", "```kt\noverride fun onDialogPositiveClick(dialog: DialogFragment, task:String) {\n\n    if(\"newtask\" == dialog.tag) {\n        todoListItems.add(task)\n        listAdapter?.notifyDataSetChanged()\n\n        Snackbar.make(fab, \"Task Added Successfully\", \n        Snackbar.LENGTH_LONG).setAction(\"Action\", null).show()\n\n    } else if (\"updatetask\" == dialog.tag) {\n        todoListItems[selectedItem] = task\n\n        listAdapter?.notifyDataSetChanged()\n\n        selectedItem = -1\n\n        Snackbar.make(fab, \"Task Updated Successfully\", \n        Snackbar.LENGTH_LONG).setAction(\"Action\", null).show()\n    }\n}\n```"]