["```\n**$ wget https://github.com/coreos/coreos-kubernetes/releases/download/v0.1.0/kube-aws-linux-amd64.tar.gz**\n**$ tar xzvf kube-aws-linux-amd64.tar.gz**\n\n```", "```\n# Unique name of Kubernetes cluster. In order to deploy\n# more than one cluster into the same AWS account, this\n# name must not conflict with an existing cluster.\n# clusterName: kubernetes\n\n# Name of the SSH keypair already loaded into the AWS\n# account being used to deploy this cluster.\nkeyName: kube-aws-key\n\n# Region to provision Kubernetes cluster\nregion: us-east-1\n\n# Availability Zone to provision Kubernetes cluster\n#availabilityZone:\n\n# DNS name routable to the Kubernetes controller nodes\n# from worker nodes and external clients. The deployer\n# is responsible for making this name routable\nexternalDNSName: kube-aws\n# Number of worker nodes to create\n#workerCount: 1\n\n# Location of kube-aws artifacts used to deploy a new\n# Kubernetes cluster. The necessary artifacts are already\n# available in a public S3 bucket matching the version\n# of the kube-aws tool. This parameter is typically\n# overwritten only for development purposes.\n#artifactURL: https://coreos-kubernetes.s3.amazonaws.com/<VERSION>\n```", "```\n**$ ./kube-aws up --config=\"coreos-cluster.yaml\"**\n\n```", "```\n**$ vi /etc/hosts**\n\n```", "```\n**wget https://storage.googleapis.com/kubernetes-release/release/v1.0.6/bin/linux/amd64/kubectl**\n\n```", "```\n**$ kubectl --kubeconfig=clusters/kubernetes/kubeconfig get nodes**\n\n```"]