["```\nFROM docker:dind\n\nRUN apk add --no-cache bash make python3 && \\\n    pip3 install --no-cache-dir docker-compose awscli\n```", "```\n> docker build -t codebuild -f Dockerfile.codebuild .\nSending build context to Docker daemon 405.5kB\nStep 1/2 : FROM docker:dind\ndind: Pulling from library/docker\nff3a5c916c92: Already exists\n1a649ea86bca: Pull complete\nce35f4d5f86a: Pull complete\nd0600fe571bc: Pull complete\ne16e21051182: Pull complete\na3ea1dbce899: Pull complete\n133d8f8629ec: Pull complete\n71a0f0a757e5: Pull complete\n0e081d1eb121: Pull complete\n5a14be8d6d21: Pull complete\nDigest: sha256:2ca0d4ee63d8911cd72aa84ff2694d68882778a1c1f34b5a36b3f761290ee751\nStatus: Downloaded newer image for docker:dind\n ---> 1f44348b3ad5\nStep 2/2 : RUN apk add --no-cache bash make python3 && pip3 install --no-cache-dir docker-compose awscli\n ---> Running in d69027d58057\n...\n...\nSuccessfully built 25079965c64c\nSuccessfully tagged codebuild:latest\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\n\nDescription: ECR Resources\n\nResources:\n  CodebuildRepository:\n Type: AWS::ECR::Repository\n Properties:\nRepositoryName: docker-in-aws/codebuild\n RepositoryPolicyText:\n Version: '2008-10-17'\n Statement:\n - Sid: CodeBuildAccess\n Effect: Allow\n Principal:\n Service: codebuild.amazonaws.com\n Action:\n - ecr:GetDownloadUrlForLayer\n - ecr:BatchGetImage\n - ecr:BatchCheckLayerAvailability\n  TodobackendRepository:\n    Type: AWS::ECR::Repository\n  ...\n  ...\n```", "```\n> export AWS_PROFILE=docker-in-aws\n> aws cloudformation deploy --template-file ecr.yml --stack-name ecr-repositories\nEnter MFA code for arn:aws:iam::385605022855:mfa/justin.menga:\n\nWaiting for changeset to be created..\nWaiting for stack create/update to complete\nSuccessfully created/updated stack - ecr-repositories\n```", "```\n> docker tag codebuild 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/codebuild\n> eval $(aws ecr get-login --no-include-email)\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nLogin Succeeded\n> docker push 385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/codebuild\nThe push refers to repository [385605022855.dkr.ecr.us-east-1.amazonaws.com/docker-in-aws/codebuild]\n770fb042ae3b: Pushed\n0cdc6e0d843b: Pushed\n395fced17f47: Pushed\n3abf4e550e49: Pushed\n0a6dfdbcc220: Pushed\n27760475e1ac: Pushed\n5270ef39cae0: Pushed\n2c88066e123c: Pushed\nb09386d6aa0f: Pushed\n1ed7a5e2d1b3: Pushed\ncd7100a72410: Pushed\nlatest: digest:\nsha256:858becbf8c64b24e778e6997868f587b9056c1d1617e8d7aa495a3170761cf8b size: 2618\n```", "```\nversion: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --storage-driver=overlay&\n      - timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n      - export BUILD_ID=$(echo $CODEBUILD_BUILD_ID | sed 's/^[^:]*://g')\n      - export APP_VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION.$BUILD_ID\n      - make login\n  build:\n    commands:\n      - make test\n      - make release\n      - make publish\n  post_build:\n    commands:\n      - make clean\n      - make logout\n```", "```\n> git add -A\n> git commit -a -m \"Add build specification\"\n[master ab7ac16] Add build specification\n 1 file changed, 19 insertions(+)\n create mode 100644 buildspec.yml\n> git push\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 584 bytes | 584.00 KiB/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo github.com:docker-in-aws/todobackend.git\n   5fdbe62..ab7ac16 master -> master\n```", "```\n> aws ecr list-images --repository-name docker-in-aws/todobackend \\\n --query imageIds[].imageTag --output table\n-----------------------------------------------------------------------------------\n| ListImages                                                                      |\n+---------------------------------------------------------------------------------+\n| 5fdbe62                                                                         |\n| latest                                                                          |\n| ab7ac1649e8ef4d30178c7f68899628086155f1d.10f5ef52-e3ff-455b-8ffb-8b760b7b9c55   |\n+---------------------------------------------------------------------------------+\n```", "```\nversion: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --storage-driver=overlay&\n      - timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n      - export BUILD_ID=$(echo $CODEBUILD_BUILD_ID | sed 's/^[^:]*://g')\n      - export APP_VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION.$BUILD_ID\n      - make login\n  build:\n    commands:\n      - make test\n      - make release\n      - make publish\n      - make version > version.json\n  post_build:\n    commands:\n      - make clean\n      - make logout\n\nartifacts:\n files:\n - version.json\n```", "```\n{ \n  \"Parameters\": {\n    \"ApplicationDesiredCount\": \"1\",\n    \"ApplicationImageId\": \"ami-ec957491\",\n    \"ApplicationImageTag\": \"latest\",\n    \"ApplicationSubnets\": \"subnet-a5d3ecee,subnet-324e246f\",\n    \"VpcId\": \"vpc-f8233a80\"\n  }\n}\n```", "```\n> aws cloudformation deploy --template-file stack.yml --stack-name todobackend \\\n    --parameter-overrides $(cat dev.json | jq -r '.Parameters|to_entries[]|.key+\"=\"+.value') \\\n    --capabilities CAPABILITY_NAMED_IAM\n```", "```\n.PHONY: deploy\n\ndeploy/%:\n  aws cloudformation deploy --template-file stack.yml --stack-name todobackend-$* \\\n    --parameter-overrides $$(cat $*.json | jq -r '.Parameters|to_entries[]|.key+\"=\"+.value') \\\n    --capabilities CAPABILITY_NAMED_IAM\n```", "```\n{ \n  \"Parameters\": {\n    \"ApplicationDesiredCount\": \"1\",\n    \"ApplicationImageId\": \"ami-ec957491\",\n    \"ApplicationImageTag\": \"latest\",\n    \"ApplicationSubnets\": \"subnet-a5d3ecee,subnet-324e246f\",\n    \"VpcId\": \"vpc-f8233a80\"\n  }\n}\n```", "```\n...\n...\nResources:\n  ...\n  ...\n  ApplicationCluster:\n    Type: AWS::ECS::Cluster\n    Properties:\n      # ClusterName: todobackend-cluster\n      ClusterName: !Sub: ${AWS::StackName}-cluster\n  ...\n  ...\n  MigrateTaskDefinition:\n    Type: AWS::ECS::TaskDefinition\n    Properties:\n      # Family: todobackend-migrate\n      Family: !Sub ${AWS::StackName}-migrate\n      ...\n      ...\n  ApplicationTaskDefinition:\n    Type: AWS::ECS::TaskDefinition\n    Properties:\n      # Family: todobackend\n      Family: !Ref AWS::StackName\n  ...\n  ...\n```", "```\n> git add -A\n> git commit -a -m \"Add prod environment support\"\n[master a42af8d] Add prod environment support\n 2 files changed, 12 insertions(+), 3 deletions(-)\n create mode 100644 prod.json\n> git push\n...\n...\n```"]