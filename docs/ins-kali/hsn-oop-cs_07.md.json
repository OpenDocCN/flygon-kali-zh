["```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  class Price<T>\n  {\n    T ob;\n\n    public Price(T o)\n    {\n      ob = o;\n    }\n\n    public void PrintType()\n    {\n      Console.WriteLine(\"The type is \" + typeof(T));\n    }\n\n    public T GetPrice()\n    {\n      return ob;\n    }\n  }\n\n  class Code_7_1\n  {\n    static void Main(string[] args)\n    {\n      Price<int> price = new Price<int>(55);\n\n      price.PrintType();\n\n      int a = price.GetPrice();\n\n      Console.WriteLine(\"The price is \" + a);\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\nT ob;\n```", "```cs\npublic Price(T o)\n{\n    ob = o;\n}\n```", "```cs\npublic void PrintType()\n{\n    Console.WriteLine(\"The type is \" + typeof(T));\n}\n\npublic T GetPrice()\n{\n    return ob;\n}\n```", "```cs\nPrice<int> price = new Price<int>(55);\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  class Price<T>\n  {\n    T ob;\n\n    public Price(T o)\n    {\n      ob = o;\n    }\n\n    public void PrintType()\n    {\n      Console.WriteLine(\"The type is \" + typeof(T));\n    }\n\n    public T GetPrice()\n    {\n      return ob;\n    }\n  }\n\n  class Code_7_2\n  {\n    static void Main(string[] args)\n    {\n      Price<int> price = new Price<int>(55);\n\n      price.PrintType();\n\n      int a = price.GetPrice();\n\n      Console.WriteLine(\"the price is \" + a);\n\n      Price<string> priceStr = new Price<string>(\"Hello People\");\n\n      priceStr.PrintType();\n\n      string b = priceStr.GetPrice();\n\n      Console.WriteLine(\"the string is \" + b);\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  class Price\n  {\n    object ob;\n\n    public Price(object o)\n    {\n      ob = o;\n    }\n\n    public void PrintType()\n    {\n      Console.WriteLine(\"The type is \" + ob.GetType());\n    }\n\n    public object GetPrice()\n    {\n      return ob;\n    }\n  }\n\n  class Code_7_3\n  {\n    static void Main(string[] args)\n    {\n      Price price = new Price(55);\n\n      price.PrintType();\n\n      int a = (int)price.GetPrice();\n\n      Console.WriteLine(\"the price is \" + a);\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  public class Person\n  {\n    public void PrintName()\n    {\n      Console.WriteLine(\"My name is Raihan\");\n    }\n  }\n\n  public class Boy : Person\n  {\n\n  }\n\n  public class Toy\n  {\n\n  }\n\n  public class Human<T> where T : Person\n  {\n    T obj;\n\n    public Human(T o)\n    {\n      obj = o;\n    }\n\n    public void MustPrint()\n    {\n      obj.PrintName();\n    }\n  }\n\n  class Code_7_3\n  {\n    static void Main(string[] args)\n    {\n      Person person = new Person();\n      Boy boy = new Boy();\n      Toy toy = new Toy();\n\n      Human<Person> personTypeHuman = new Human<Person>(person);\n      personTypeHuman.MustPrint();\n\n      Human<Boy> boyTypeHuman = new Human<Boy>(boy);\n      boyTypeHuman.MustPrint();\n\n      /* Not allowed\n      Human<Toy> toyTypeHuman = new Human<Toy>(toy);\n      toyTypeHuman.MustPrint();\n      */\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\n... where T : class\n```", "```cs\n... where T : struct\n```", "```cs\naccess-modifier return-type method-name<type-parameter>(params){ method-body }\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  class Hello\n  {\n    public static T Larger<T>(T a, T b) where T : IComparable<T>\n    {\n      return a.CompareTo(b) > 0 ? a : b;\n    }\n  }\n\n  class Code_7_4\n  {\n    static void Main(string[] args)\n    {\n      int result = Hello.Larger<int>(3, 4);\n\n      double doubleResult = Hello.Larger<double>(4.3, 5.6);\n\n      Console.WriteLine(\"The Large value is \" + result);\n      Console.WriteLine(\"The Double Large value is \" + doubleResult);\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  class Hello\n  {\n    public static T Larger<T>(T a, T b) where T : IComparable<T>\n    {\n      return a.CompareTo(b) > 0 ? a : b;\n    }\n  }\n\n  class Code_7_5\n  {\n    static void Main(string[] args)\n    {\n      int result = Hello.Larger(3, 4);\n\n      double doubleResult = Hello.Larger(4.3, 5.6);\n\n      Console.WriteLine(\"The Large value is \" + result);\n      Console.WriteLine(\"The Double Large value is \" + doubleResult);\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\naccess-modifier interface-name<out T>{}\n```", "```cs\naccess-modifier interface interface-name<in T>{}\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chapter7\n{\n  public interface IFood<in T>\n  {\n    void PrintMyName(T obj);\n  }\n\n  class HealthyFood<T> : IFood<T>\n  {\n    public void PrintMyName(T obj)\n    {\n      Console.WriteLine(\"This is \" + obj);\n    }\n  }\n\n  class Vegetable\n  {\n    public override string ToString()\n    {\n      return \"Vegetable\";\n    }\n  }\n\n  class Potato : Vegetable\n  {\n    public override string ToString()\n    {\n      return \"Potato\";\n    }\n  }\n\n  class Code_7_6\n  {\n    static void Main(string[] args)\n    {\n      IFood<Potato> mySelf = new HealthyFood<Potato>();\n      IFood<Potato> mySelf2 = new HealthyFood<Vegetable>();\n\n      mySelf2.PrintMyName(new Potato());\n\n      Console.ReadKey();\n    }\n  }\n}\n```", "```cs\nvoid PrintMyName(T obj);\n```", "```cs\nclass HealthyFood<T> : IFood<T>\n{\n  public void PrintMyName(T obj)\n  {\n    Console.WriteLine(\"This is \" + obj);\n  }\n}\n```", "```cs\nIFood<Potato> mySelf = new HealthyFood<Potato>();\nIFood<Potato> mySelf2 = new HealthyFood<Vegetable>();\n```", "```cs\nmySelf2.PrintMyName(new Potato());\n```", "```cs\nThis is Potato\n```"]