["```java\npackage com.company.customer;\nimport java.math.BigDecimal;\nimport java.util.Locale;\n\npublic class Customer {\n  private String name;\n  private int accountNumber;\n  private Locale locale;\n  private BigDecimal balance;\n\n  public Customer() {\n    this.name = \"Default Customer\";\n    this.accountNumber = 12345;\n    this.locale = Locale.ITALY;\n    this.balance = new BigDecimal(\"0\");\n  }\n\n  public String getName() {\n    return name;\n  }\n  public void setName(String name) throws Exception {\n    if(name == null) {\n      throw new Exception(\"Names must not be null\");\n    } else {\n      this.name = name;\n    }\n  }\n\n  public int getAccountNumber() {\n    return accountNumber;\n  }\n\n  public void setAccountNumber(int accountNumber) {\n    this.accountNumber = accountNumber;\n  }\n\n  public BigDecimal getBalance() {\n    return balance;\n  }\n\n  public void setBalance(float balance) {\n    this.balance = new BigDecimal(balance);\n  }\n\n  public String toString() {\n    java.text.NumberFormat format;\n    format = java.text.NumberFormat.getCurrencyInstance(locale);\n    return format.format(balance);\n  }\n }\n\npackage com.company.customer;\npublic class CustomerDriver {\n  public static void main(String[] args) {\n    Customer customer;      // defines a reference to a Customer\n    customer = new Customer();  // Creates a new Customer object\n    customer.setBalance(12506.45f);\n    System.out.println(customer.toString());\n  }\n```", "```java\nint i;\nint j;\nint k;\n```", "```java\nint i, j, k;\n```", "```java\nfloat f = 0.1f;\nfor(int i = 0; i<9; i++) {\n   f += 0.1f;\n}\nSystem.out.println(f);\n```", "```java\n1.0000001\n\n```", "```java\nclass Person {\n  String name;\n  int age;\n  \u2026\n}\n```", "```java\nclass Person {\n  String name = \"John Doe\";\n  int age = 23;\n  \u2026\n}\n```", "```java\nlong ssn = 111_22_3333L;\nSystem.out.println(ssn);\n```", "```java\n111223333\n\n```", "```java\nlong ssn = 111_22_3333L;\nString formattedSsn = Long.toString(ssn);\nfor (int i = 0; i < formattedSsn.length(); i++) {\n    System.out.print(formattedSsn.charAt(i));\n    if (i == 2 || i == 4) {\n        System.out.print('-');\n    }\n}\nSystem.out.println();\n```", "```java\n111-22-3333\n\n```", "```java\nvalue & 0b0000_11111;\n```", "```java\nbyte value = (byte) 0b0111_1010;\nbyte result = (byte) (value & 0b0000_1111);\nSystem.out.println(\"result: \" + Integer.toBinaryString(result));\n```", "```java\nresult: 1010\n\n```", "```java\nchar letter = 'a';\nletter = 'F';\n```", "```java\nString errorMessage = \"Error \u2013 bad input file name\";\nString columnHeader = \"\\tColumn 1\\tColumn2\\n\";\n```", "```java\nfinal double PI = 3.14159;\nfinal int NUMSHIPS = 120;\nfinal float RATEOFRETURN = 0.125F;\n```", "```java\nPI = 3.14;\n```", "```java\ncannot assign a value to final variable PI\n\n```", "```java\npublic enum Directions {NORTH, SOUTH, EAST, WEST}\n```", "```java\nDirections direction;\ndirection = Directions.EAST;\nSystem.out.println(direction);\n```", "```java\nEAST\n\n```", "```java\nswitch(direction) {\ncase NORTH:\n  System.out.println(\"Going North\");\n  break;\ncase SOUTH:\n  System.out.println(\"Going South\");\n  break;\ncase EAST:\n  System.out.println(\"Going East\");\n  break;\ncase WEST:\n  System.out.println(\"Going West\");\n  break;\n}\n```", "```java\nGoing East\n\n```", "```java\nprivate static float discountPercentage;\n```", "```java\npublic class A{\n   public int  publicInt;\n   private int privateInt;\n   protected int  protectedInt;\n   int defaultInt;  // default (package)\n} \n```", "```java\nint numberWheels = 4;\nSystem.out.println(\"Hello\");\nnumberWheels = numberWheels + 1;\n```", "```java\ntotal = 0;\ntotal += 2;  // Increments total by 2\ntotal =+ 2;  // Valid but simply assigns a 2 to total!\n```", "```java\nint i;\nfloat f = 1.0F;\ndouble d = 2.0;\n\ni = (int) f;  // Cast a float to an int\ni = (int) d;  // Cast a double to an int\nf = (float) d;  // Cast a double to a float\n```", "```java\nString s = \"Constant\";\ns = s + \" and unchangeable\";\nSystem.out.println(s);\n```", "```java\ns = \"Constant\";\ns = s.concat(\" and unchangeable\");\nSystem.out.println(s);\n```", "```java\nString firstString = new String();\nString secondString = new String(\"The second string\");\nString thirdString = \"The third string\";\n```", "```java\nStringBuffer stringBuffer =new StringBuffer(\"A StringBuffer string\");\nStringBuilder stringBuilder =new StringBuilder(\"A StringBuilder string\");\nString stringBufferBasedString = new String(stringBuffer);\nString stringBuilderBasedString = new String(stringBuilder);\n```", "```java\nif (count == max) {\n  // Do something\n}\n```", "```java\nString s1 = \"street\";\nString s2;\n\ns2 = new String(\"street\");\n\nif (s1 == s2) {\n  // False\n}\n```", "```java\nString firstLiteral = \"Albacore Tuna\";\nString secondLiteral = \"Albacore Tuna\";\nString firstObject = new String(\"Albacore Tuna\");\n\nif(firstLiteral == secondLiteral) {\n  System.out.println(\n     \"firstLiteral and secondLiteral are the same object\");\n} else {\n  System.out.println(\n     \"firstLiteral and secondLiteral are not the same object\");\n}\nif(firstLiteral == firstObject) {\n  System.out.println(\n     \"firstLiteral and firstObject are the same object\");\n} else {\n  System.out.println(\n     \"firstLiteral and firstObject are not the same object\");\n}\n```", "```java\nfirstLiteral and secondLiteral are the same object\nfirstLiteral and firstObject are not the same object\n\n```", "```java\nString location = \"Iceberg City\";\nif (location.equals(\"iceberg city\"))\n  System.out.println(location + \" equals ' city'!\");\nelse\n  System.out.println(location +\" does not equal 'iceberg city'\");\n\nif (location.equals(\"Iceberg City\"))\n  System.out.println(location + \" equals 'Iceberg City'!\");\nelse\n  System.out.println(location +\" does not equal 'Iceberg City'!\");\n\nif (location.endsWith(\"City\"))\n  System.out.println(location + \" ends with 'City'!\");\nelse\n  System.out.println(location + \" does not end with 'City'!\");\n```", "```java\nIceberg City does not equal 'iceberg city'\nIceberg City equals 'Iceberg City'!\nIceberg City ends with 'City'!\n\n```", "```java `n` `e`. The second sequence combines the `e` and ```", "```java\nString secondIrene = \"Ire\\u0300ne\";\n\nif (firstIrene.equals(secondIrene)) {\n    System.out.println(\"The strings are equal.\");\n} else {\n    System.out.println(\"The strings are not equal.\");\n}\n```", "```java\nThe strings are not equal.\n\n```", "```java\nString sample = \"catalog\";\nSystem.out.println(sample.length());\nSystem.out.println(sample.charAt(0));\nSystem.out.println(sample.charAt(sample.length()-1));\nSystem.out.println(sample.substring(0,3));\nSystem.out.println(sample.substring(4));\n```", "```java\n7\nc\ng\ncat\nlog\n\n```", "```java\nString location = \"Irene\";\nSystem.out.println(location.indexOf('I'));\nSystem.out.println(location.lastIndexOf('e'));\nSystem.out.println(location.indexOf('e'));\n```", "```java\n0\n4\n2\n\n```", "```java\nString s1 = String.valueOf(304);\nString s2 = String.valueOf(778.204);\n```", "```java\nint  num1 = Integer.valueOf(\"540\").intValue();\ndouble  num2 = Double.valueOf(\"3.0654\").doubleValue();\n```", "```java\nnum1 = Integer.parseInt(\"540\");\nnum2 = Double.parseDouble(\"3.0654\");\n```", "```java\nString oldString = \" The gray fox \";\nString newString;\n\nnewString = oldString.replace(' ','.');\nSystem.out.println(newString);\n\nnewString = oldString.toLowerCase();\nSystem.out.println(newString);\n\nnewString = oldString.toUpperCase();\nSystem.out.println(newString);\n\nnewString = oldString.trim();\nSystem.out.println(\"[\" + newString +\"]\" );\n```", "```java\n.The.gray.fox.\n the gray fox\n THE GRAY FOX\n[The gray fox]\n\n```", "```java\nStringBuffer buffer = new StringBuffer();\nbuffer.append(\"World class\");\nbuffer.append(\" buffering mechanism!\");\n```", "```java\nbuffer.insert(6,\"C\");\n```", "```java\nStringBuffer buffer;\nbuffer = new StringBuffer();\nbuffer.append(\"World lass\");\nbuffer.append(\" buffering mechanism!\");\nbuffer.insert(6,\"C\");\nSystem.out.println(buffer.toString());\n```", "```java\nWorld Class buffering mechanism!\n\n```", "```java\n    public class ScopeClass{\n       private int i = 35;\n       public static void main(String argv[]){\n          int i = 45;\n          ScopeClass s = new ScopeClass ();\n          s.someMethod();\n       }\n       public static void someMethod(){\n          System.out.println(i);\n       }\n    }\n    ```", "```java\n    public class SomeClass{\n       public int i;\n       public static void main(String argv[]){\n          SomeClass sc = new SomeClass();\n          // Comment line\n       }\n    }\n    ```", "```java\n    StringBuilder sb = new StringBuilder;\n    ```", "```java\n    String s1=\"Java\";\n    String s2=\"java\";\n    if(expression) {\n       System.out.println(\"Equal\");\n    } else {\n       System.out.println(\"Not equal\");\n    }\n    ```"]