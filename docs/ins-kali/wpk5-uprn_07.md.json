["```js\nnpm install --global node-nightly\n```", "```js\nnode-nightly\n```", "```js\nnode-nightly --inspect ./node_modules/webpack/bin/webpack.js\n```", "```js\nDebugger listening on ws://127.0.0.1:9229/c624201a-250f-416e-a018-300bbec7be2c For help see https://nodejs.org/en/docs/inspector\n```", "```js\n  const path = require('path');\n  const HtmlWebpackPlugin = require('html-webpack-plugin');\n  const CleanWebpackPlugin = require('clean-webpack-plugin');\n  const webpack = require('webpack');\n\n  module.exports = {\n    entry: {\n       app: './src/index.js',\n       print: './src/print.js'\n       app: './src/index.js'\n    },\n    devtool: 'inline-source-map',\n    devServer: {\n      contentBase: './dist',\n hot: true\n    },\n    plugins: [\n      // new CleanWebpackPlugin(['dist/*']) for < v2 versions of \n      // CleanWebpackPlugin\n      new CleanWebpackPlugin(),\n      new HtmlWebpackPlugin({\n        title: 'Hot Module Replacement'\n      }),\n      new webpack.HotModuleReplacementPlugin()\n    ],\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\nwebpack-dev-server --hot \n```", "```js\n  import _ from 'lodash';\n import printMe from './print.js';\n\n  function component() {\n    const element = document.createElement('div');\n    const btn = document.createElement('button');\n\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n\n    btn.innerHTML = 'Click me and check the console!';\n    btn.onclick = printMe;\n\n    element.appendChild(btn);\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n\n if (module.hot) {\n    module.hot.accept('./print.js', function() {\n      console.log('Accepting the updated printMe module');\n      printMe();\n```", "```js\n    })\n  }\n```", "```js\n  export default function printMe() {\n    console.log('This got called from print.js!');\n    console.log('Updating print.js...')\n  }\n```", "```js\n[HMR] Waiting for update signal from WDS...\nmain.js:4395 [WDS] Hot Module Replacement enabled.\n  2main.js:4395 [WDS] App updated. Recompiling...\n  main.js:4395 [WDS] App hot update...\n  main.js:4330 [HMR] Checking for updates on the server...\n  main.js:10024 Accepting the updated printMe module!\n  0.4b8ee77\u2026.hot-update.js:10 Updating print.js...\n  main.js:4330 [HMR] Updated modules:\n  main.js:4330 [HMR]  - 20\n```", "```js\nnew WebpackDevServer(compiler, options)\n```", "```js\nconst webpackDevServer = require('webpack-dev-server');\nconst webpack = require('webpack');\n\n  const config = require('./webpack.config.js');\n  const options = {\n    contentBase: './dist',\n    hot: true,\n    host: 'localhost'\n};\n\nwebpackDevServer.addDevServerEntrypoints(config, options);\nconst compiler = webpack(config);\nconst server = new webpackDevServer(compiler, options);\n\nserver.listen(5000, 'localhost', () => {\n  console.log('dev server listening on port 5000');\n});\n```", "```js\n  import _ from 'lodash';\n  import printMe from './print.js';\n\n  function component() {\n    const element = document.createElement('div');\n    const btn = document.createElement('button');\n\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n\n    btn.innerHTML = 'Click me and view the console!';\n    btn.onclick = printMe;  // onclick event is bind to the \n                            // original printMe function\n\n    element.appendChild(btn);\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n let element = component(); // Store the element to re-render on \n                             // print.js changes\n  document.body.appendChild(element);\n\n  if (module.hot) {\n    module.hot.accept('./print.js', function() {\n      console.log('Accepting the updated printMe module!');\n      printMe();\n      document.body.removeChild(element);\n element = component(); \n      document.body.appendChild(element);\n    })\n  }\n```", "```js\nnpm install --save-dev style-loader css-loader\n```", "```js\n  const path = require('path');\n  const HtmlWebpackPlugin = require('html-webpack-plugin');\n  const CleanWebpackPlugin = require('clean-webpack-plugin');\n  const webpack = require('webpack');\n\n  module.exports = {\n    entry: {\n      app: './src/index.js'\n    },\n    devtool: 'inline-source-map',\n    devServer: {\n      contentBase: './dist',\n      hot: true\n    },\n    module: {\n      rules: [\n        {\n test: /\\.css$/,\n          use: ['style-loader', 'css-loader']\n        }\n      ]\n    },\n    plugins: [\n      // new CleanWebpackPlugin(['dist/*']) for < v2 versions of \n        // CleanWebpackPlugin\n      new CleanWebpackPlugin(),\n      new HtmlWebpackPlugin({\n        title: 'Hot Module Replacement'\n      }),\n      new webpack.HotModuleReplacementPlugin()\n    ],\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\n webpack5-demo\n  | - package.json\n  | - webpack.config.js\n  | - /dist\n    | - bundle.js\n  | - /src\n    | - index.js\n    | - print.js\n    | - styles.css\n```", "```js\nbody {\n  background: blue;\n}\n```", "```js\n  import _ from 'lodash';\n  import printMe from './print.js';\n import './styles.css'; \n  function component() {\n    const element = document.createElement('div');\n    const btn = document.createElement('button');\n\n    element.innerHTML = _.join(['Hello', 'Webpack'], ' ');\n\n    btn.innerHTML = 'Click me and check the console!';\n    btn.onclick = printMe;  // onclick event is bind to the \n                            // original printMe function\n\n    element.appendChild(btn);\n\n    return element;\n  }\n\n  let element = component();\n  document.body.appendChild(element);\n\n  if (module.hot) {\n    module.hot.accept('./print.js', function() {\n      console.log('Accepting the updated printMe module!');\n      document.body.removeChild(element);\n      element = component(); // Re-render the \"component\" to update \n                             // the click handler\n      document.body.appendChild(element);\n    })\n  }\n```", "```js\n  body {\n    background: blue;\n    background: red;\n  }\n```", "```js\nwebpack5-demo\n|- package.json\n|- webpack.config.js\n|- /dist\n  |- bundle.js\n  |- index.html\n|- /src\n  |- index.js\n  |- math.js\n|- /node_modules\n```", "```js\nexport function square(x) {\n  return x * x;\n}\n\nexport function cube(x) {\n  return x * x * x;\n}\n```", "```js\nconst path = require('path');\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  }\n  },\n  mode: 'development',\n  optimization: {\n    usedExports: true\n  }\n};\n```", "```js\n  import _ from 'lodash';\n  import { cube } from './math.js';\n\n  function component() {\n    const element = document.createElement('div');\n    const element = document.createElement('pre');\n\n    // Lodash, now imported by this script\n    element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n    element.innerHTML = [\n      'Hello Webpack!',\n      '5 cubed is equal to ' + cube(5)\n    ].join('\\n\\n');\n\n    return element;\n  }\n\n  document.body.appendChild(component());\n```", "```js\nnpm run build\n```", "```js\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n  'use strict';\n  /* unused harmony export square */\n  /* harmony export (immutable) */ __webpack_exports__['a'] = cube;\n  function square(x) {\n    return x * x;\n  }\n\n  function cube(x) {\n    return x * x * x;\n  }\n});\n```", "```js\n{\n  \"name\": \"your-project\",\n  \"sideEffects\": false\n}\n```", "```js\n{\n  \"name\": \"your-project\",\n  \"sideEffects\": [\n    \"./src/some-side-effectful-file.js\"\n  ]\n}\n```", "```js\n{\n  \"name\": \"your-project\",\n  \"sideEffects\": [\n    \"./src/some-side-effectful-file.js\",\n    \"*.css\"\n  ]\n}\n```", "```js\nconst path = require('path');\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  },\n  mode: 'development',\n  optimization: {\n    usedExports: true\n  }\n  mode: 'production'\n};\n```", "```js\nfunction r(e){return e*e*e}n.a=r\n```", "```js\nmodule.exports = {\n    mode: 'production',\n}\n```", "```js\n--mode production\n```", "```js\n--mode development\n```", "```js\nmodule.exports = {\n plugins: [\n   new NoEmitOnErrorsPlugin(),\n   new ModuleConcatenationPlugin(),\n   new DefinePlugin({ \"process.env.NODE_ENV\":\n     JSON.stringify(\"production\") })\n   new UglifyJsPlugin()\n ],\n}\n```", "```js\nmodule.exports = {\n plugins: [\n   new NamedModulesPlugin()\n ],\n}\n```", "```js\nmodule.exports = {\n plugins: [\n   new NoErrorsPlugin(),\n   new NewWatchingPlugin()\n ],\n}\n```", "```js\nmodule.exports = {\n      sayHello: () => {\n       console.log('Hello World');\n     }\n };\n```", "```js\nfunction sayHello() {\n import('./non-esm.js').then(module => {\n  module.default.sayHello();\n });\n}\n```", "```js\nmodule.exports = {\n rules: [\n  {\n    test: /config\\.json$/,\n    loader: 'special-loader',\n    type: 'javascript/auto',\n    options: {...}\n  }\n ]\n};\n```", "```js\nmodule.exports = {\n  rules: [\n   {\n     test: /\\.json$/,\n     loader: 'json-loader'\n   }\n  ]\n};\n```", "```js\noptimization.hashedModuleIds: true => optimization.moduleIds:\n  'hashed'\noptimization.namedChunks: true => optimization.chunkIds: 'named'\noptimization.namedModules: true => optimization.moduleIds: 'named'\nNamedModulesPlugin => optimization.moduleIds: 'named'\nNamedChunksPlugin => optimization.chunkIds: 'named'\nHashedModulesPlugin => optimization.moduleIds: 'hashed'\noptimization.occurrenceOrder: true => optimization: { chunkIds:\n   'total-size', moduleIds: 'size' }\noptimization.splitChunks.cacheGroups.vendors =>\n   optimization.splitChunks.cacheGroups.defaultVendors\n```", "```js\nmodule.exports = {\n // ...\n   node: {\n     Buffer: false,\n     process: false\n   }\n };\n```", "```js\nnpm: npm install webpack@next --dev\nYarn: yarn add webpack@next -D\n```", "```js\nnew IgnorePlugin({ resourceRegExp: /regExp/ }).\n```", "```js\nyarn add webpack\nyarn add webpack-cli\n```", "```js\n...\n\"webpack\": \"^5.0.0\",\n\"webpack-cli\": \"^3.2.3\",\n...\n```", "```js\nmodule.exports = {\nmode: 'development',\n```", "```js\nmodule.exports = {\nmode: 'production',\n```", "```js\nadd fork-ts-checker-notifier-webpack-plugin\nyarn add fork-ts-checker-notifier-webpack-plugin --dev\n```", "```js\n...\n\"fork-ts-checker-notifier-webpack-plugin\": \"^1.0.0\",\n...\n```", "```js\nyarn add html-webpack-plugin@next\n```", "```js\n\"html-webpack-plugin\": \"^4.0.0-beta.5\",\n```", "```js\nplugins: [\n new HtmlWebpackPlugin({\n   inject: true,\n   template: paths.appHtml\n }),\n new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw),\n```", "```js\nyarn add url-loader file-loader ts-loader\n```", "```js\n\"file-loader\": \"^1.1.11\",\n\"ts-loader\": \"4.0.0\",\n\"url-loader\": \"0.6.2\",\n```", "```js\nyarn add react-dev-utils\n```", "```js\n\"react-dev-utils\": \"6.1.1\",\n```", "```js\nyarn add mini-css-extract-plugin\n```", "```js\n\"mini-css-extract-plugin\": \"^0.5.0\",\nConfig:\n```", "```js\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nplugins: [\n ...\n new MiniCssExtractPlugin({\n   filename: \"[name].css\",\n   chunkFilename: \"[id].css\"\n }),\n ...\n ],\n module: {\n   rules: [\n    {\n     test: /\\.css$/,\n     use: [\n     {\n       loader: MiniCssExtractPlugin.loader,\n       options: {\n       // you can specify a publicPath here\n       // by default it use publicPath in webpackOptions.output\n       publicPath: '../'\n     }\n    },\n    \"css-loader\"\n   ]\n },\n```", "```js\nyarn add uglifyjs-webpack-plugin --dev\n```", "```js\n\"uglifyjs-webpack-plugin\": \"^2.1.2\"\n Config:\n```", "```js\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\nmodule.exports = {\n  ...\n  optimization: {\n    minimizer: [new UglifyJsPlugin()],\n },\n```"]