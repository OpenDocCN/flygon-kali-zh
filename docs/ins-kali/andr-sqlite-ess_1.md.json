["```kt\nCREATE TABLE table_name (column_name INTEGER);\n```", "```kt\nString databaseTable =   \"CREATE TABLE \" \n   + TABLE_CONTACTS +\"(\" \n   + KEY_ID  \n   + \" INTEGER PRIMARY KEY,\"\n   + KEY_NAME + \" TEXT,\"\n   + KEY_NUMBER + \" INTEGER\"\n   + \")\";\n```", "```kt\nString databaseTable = \n   \"CREATE TABLE \" \n   + TABLE_CONTACTS  + \"(\" \n   + KEY_ID    + \" INTEGER PRIMARY KEY,\"\n\n   + KEY_NAME + \" TEXT DEFAULT  xyz,\"\n\n   + KEY_NUMBER + \" INTEGER DEFAULT 100\" + \")\";\n```", "```kt\nDELETE FROM table WHERE {condition};\n```", "```kt\na=5\na=\"android\"\n```", "```kt\n id                   col_t\n------               ------\n1                       23\n2                     NULL\n3                     test\n```", "```kt\nSELECT date('now');\n```", "```kt\nadb shell SQLite3 --version\nSQLite 3.7.11: API 16 - 19\nSQLite 3.7.4: API 11 - 15\nSQLite 3.6.22: API 8 - 10\nSQLite 3.5.9: API 3 - 7\n\n```", "```kt\nSQLiteOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version)\n\nSQLiteOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version, DatabaseErrorHandler errorHandler)\n```", "```kt\nclass SQLiteHelperClass\n    {\n    ...\n    ...\n    public static final int VERSION_NUMBER = 1;\n\n    sqlHelper =\n       new SQLiteOpenHelper(context, \"ContactDatabase\", null,\n      VERSION_NUMBER)\n    {\n\n      @Override\n      public void onUpgrade(SQLiteDatabase db,   \n            int oldVersion, int newVersion) \n      {\n\n        //drop table on upgrade\n        db.execSQL(\"DROP TABLE IF EXISTS \" \n                + TABLE_CONTACTS);\n        // Create tables again\n        onCreate(db);\n\n      }\n\n   @Override\n   public void onCreate(SQLiteDatabase db)\n   {\n      // creating table during onCreate\n      String createContactsTable = \n \"CREATE TABLE \"\n + TABLE_CONTACTS + \"(\" \n + KEY_ID + \" INTEGER PRIMARY KEY,\" \n + KEY_NAME + \" TEXT,\"\n + KEY_NUMBER + \" INTEGER\" + \")\";\n\n        try {\n       db.execSQL(createContactsTable);\n        } catch(SQLException e) {\n          e.printStackTrace();\n        }\n   }\n\n   @Override\n   public synchronized void close()\n   {\n      super.close();\n      Log.d(\"TAG\", \"Database closed\");\n   }\n\n   @Override\n   public void onOpen(SQLiteDatabase db)\n   {\n         super.onOpen(db);\n         Log.d(\"TAG\", \"Database opened\");\n   }\n\n};\n\n...\n... \n\n//open the database in read-only mode\nSQLiteDatabase db = SQLiteOpenHelper.getWritableDatabase();\n\n...\n...\n\n//open the database in read/write mode\nSQLiteDatabase db = SQLiteOpenHelper.getWritableDatabase();\n```", "```kt\npublic void insertToSimpleDataBase() \n{\n   SQLiteDatabase db = sqlHelper.getWritableDatabase();\n\n   ContentValues cv = new ContentValues();\n   cv.put(KEY_NAME, \"John\");\n   cv.put(KEY_NUMBER, \"0000000000\");\n   // Inserting values in different columns of the table using\n   // Content Values\n   db.insert(TABLE_CONTACTS, null, cv);\n\n   cv = new ContentValues();\n   cv.put(KEY_NAME, \"Tom\");\n   cv.put(KEY_NUMBER, \"5555555\");\n   // Inserting values in different columns of the table using\n   // Content Values\n   db.insert(TABLE_CONTACTS, null, cv);\n}\n...\n...\n\npublic void getDataFromDatabase()\n{  \n   int count;\n   db = sqlHelper.getReadableDatabase();\n   // Use of normal query to fetch data\n   Cursor cr = db. query(TABLE_CONTACTS, null, null, \n                           null, null, null, null);\n\n   if(cr != null) {\n      count = cr.getCount();\n      Log.d(\"DATABASE\", \"count is : \" + count);\n   }\n\n   // Use of raw query to fetch data\n   cr = db.rawQuery(\"select * from \" + TABLE_CONTACTS, null);\n   if(cr != null) {\n      count = cr.getCount();\n      Log.d(\"DATABASE\", \"count is : \" + count);\n   }\n\n}\n...\n...\n\npublic void delete(String name)\n {\n     String whereClause = KEY_NAME + \"=?\";\n     String[] whereArgs = new String[]{name};\n     db = sqlHelper.getWritableDatabase();\n     int rowsDeleted = db.delete(TABLE_CONTACTS, whereClause, whereArgs);\n }\n...\n...\n\npublic void update(String name)\n {\n     String whereClause = KEY_NAME + \"=?\";\n     String[] whereArgs = new String[]{name};\n     ContentValues cv = new ContentValues();\n     cv.put(KEY_NAME, \"Betty\");\n     cv.put(KEY_NUMBER, \"999000\");\n     db = sqlHelper.getWritableDatabase();\n     int rowsUpdated = db.update(TABLE_CONTACTS, cv, whereClause, whereArgs);\n }\n```", "```kt\nContentValues cv = new ContentValues();\ncv.put(COL_NAME, \"john doe\");\ncv.put(COL_NUMBER, \"12345000\");\ndataBase.insert(TABLE_CONTACTS, null, cv);\n```"]