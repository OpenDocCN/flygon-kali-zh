["```\n> docker swarm init --listen-addr 192.168.2.214 --advertise-addr 192.168.2.214\nSwarm initialized: current node (jea4p57ajjalioqokvmu82q6y) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-37p6ufk5jku6tndotqlcy1w54grx5tvxb3rxphj8xkdn9lbeml-3w7e8hxfzzpt2fbf340d8phia 192.168.2.214:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n```", "```\n> docker swarm join `\n   --token SWMTKN-1-37p6ufk5jku6tndotqlcy1w54grx5tvxb3rxphj8xkdn9lbeml-3w7e8hxfzzpt2fbf340d8phia `\n   192.168.2.214:2377 \nThis node joined a swarm as a worker.\n```", "```\n> docker node ls\nID    HOSTNAME    STATUS   AVAILABILITY  MANAGER STATUS  ENGINE VERSION\nh2ripnp8hvtydewpf5h62ja7u  win2019-02      Ready Active         18.09.2\njea4p57ajjalioqokvmu82q6y * win2019-dev-02 Ready Active Leader  18.09.2\n```", "```\n> docker swarm leave\nNode left the swarm.\n```", "```\n> docker network create --driver overlay nd-swarm\n206teuqo1v14m3o88p99jklrn\n```", "```\n> docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nosuduab0ge73        ingress             overlay             swarm\n5176f181eee8        nat                 nat                 local\n206teuqo1v14        nd-swarm            overlay             swarm\n```", "```\ndocker service create `   --network nd-swarm `\n  --name message-queue ` dockeronwindows/ch05-nats:2e \n```", "```\n> docker service ps message-queue\nID    NAME      IMAGE     NODE  DESIRED  STATE  CURRENT    STATE\nxr2vyzhtlpn5 message-queue.1  dockeronwindows/ch05-nats:2e  win2019-02  Running        Running\n```", "```\ndocker service create `   --network nd-swarm `\n  --env-file db-credentials.env `\n  --name nerd-dinner-api `\n  --label \"traefik.frontend.rule=Host:api.nerddinner.swarm\"  `\n  --label \"traefik.port=80\"  `\n dockeronwindows/ch05-nerd-dinner-api:2e\n```", "```\ndocker service create `\n  --detach=true `\n  --network nd-swarm ` --constraint=node.role==manager `  --publish 80:80  --publish 8080:8080  `\n  --mount type=bind,source=C:\\certs\\client,target=C:\\certs `\n  --name reverse-proxy `\n sixeyed/traefik:v1.7.8-windowsservercore-ltsc2019 `\n  --docker --docker.swarmMode --docker.watch `\n  --docker.endpoint=tcp://win2019-dev-02:2376  ` --docker.tls.ca=/certs/ca.pem `\n  --docker.tls.cert=/certs/cert.pem `\n  --docker.tls.key=/certs/key.pem `\n  --api\n```", "```\n> .\\ch07-run-nerd-dinner.ps1\n206teuqo1v14m3o88p99jklrn\nvqnncr7c9ni75ntiwajcg05ym\n2pzc8c5rahn25l7we3bzqkqfo\n44xsmox6d8m480sok0l4b6d80\nu0uhwiakbdf6j6yemuy6ey66p\nv9ujwac67u49yenxk1albw4bt\ns30phoip8ucfja45th5olea48\n24ivvj205dti51jsigneq3z8q\nbeakbbv67shh0jhtolr35vg9r\nsc2yzqvf42z4l88d3w31ojp1c\nvx3zyxx2rubehee9p0bov4jio\nrl5irw1w933tz9b5cmxyyrthn\n```", "```\n> docker service ls\nID           NAME          MODE       REPLICAS            IMAGE \n8bme2svun122 message-queue             replicated 1/1      nats:nanoserver\ndeevh117z4jg nerd-dinner-homepage      replicated 1/1      dockeronwindows/ch03-nerd-dinner-homepage...\nlxwfb5s9erq6 nerd-dinner-db            replicated 1/1      dockeronwindows/ch06-nerd-dinner-db:latest\nol7u97cpwdcn nerd-dinner-index-handler replicated 1/1      dockeronwindows/ch05-nerd-dinner-index...\nrrgn4n3pecgf elasticsearch             replicated 1/1      sixeyed/elasticsearch:nanoserver\nw7d7svtq2k5k nerd-dinner-save-handler  replicated 1/1      dockeronwindows/ch05-nerd-dinner-save...\nydzb1z1af88g nerd-dinner-web           replicated 1/1      dockeronwindows/ch05-nerd-dinner-web:latest\nywrz3ecxvkii kibana                    replicated 1/1      sixeyed/kibana:nanoserver\n```", "```\n> docker service scale nerd-dinner-save-handler=3\nnerd-dinner-save-handler scaled to 3\noverall progress: 1 out of 3 tasks\n1/3: starting  [============================================>      ]\n2/3: starting  [============================================>      ]\n3/3: running   [==================================================>]\n```", "```\n> docker service ps nerd-dinner-save-handler\nID      NAME    IMAGE  NODE            DESIRED STATE  CURRENT STATE \nsbt4c2jof0h2  nerd-dinner-save-handler.1 dockeronwindows/ch05-nerd-dinner-save-handler:2e    win2019-dev-02      Running             Running 23 minutes ago\nbibmh984gdr9  nerd-dinner-save-handler.2 dockeronwindows/ch05-nerd-dinner-save-handler:2e    win2019-dev-02      Running             Running 3 minutes ago\n3lkz3if1vf8d  nerd-dinner-save-handler.3 dockeronwindows/ch05-nerd-dinner-save-handler:2e   win2019-02           Running             Running 3 minutes ago\n```", "```\nPS> docker service logs nerd-dinner-save-handler\nnerd-dinner-save-handler.1.sbt4c2jof0h2@win2019-dev-02\n    | Connecting to message queue url: nats://message-queue:4222\nnerd-dinner-save-handler.1.sbt4c2jof0h2@win2019-dev-02\n    | Listening on subject: events.dinner.created, queue: save-dinner-handler\nnerd-dinner-save-handler.2.bibmh984gdr9@win2019-dev-02\n    | Connecting to message queue url: nats://message-queue:4222\nnerd-dinner-save-handler.2.bibmh984gdr9@win2019-dev-02\n    | Listening on subject: events.dinner.created, queue: save-dinner-handler\n...\n```", "```\n> docker service rm nerd-dinner-index-handler\nnerd-dinner-index-handler \n```", "```\n> docker service create `\n>>  --mode=global `\n>>  --network nd-swarm `\n>>  --name nerd-dinner-index-handler `\n>>  dockeronwindows/ch05-nerd-dinner-index-handler:2e;\nq0c20sx5y25xxf0xqu5khylh7\noverall progress: 2 out of 2 tasks\nh2ripnp8hvty: running   [==================================================>]\njea4p57ajjal: running   [==================================================>]\nverify: Service converged \n```", "```\npublic  static  IConfigurationBuilder  AddProviders(IConfigurationBuilder  config) {\n  return  config.AddJsonFile(\"config/appsettings.json\")\n               .AddEnvironmentVariables()\n               .AddJsonFile(\"config/config.json\", optional: true)\n               .AddJsonFile(\"config/secrets.json\", optional: true); } \n```", "```\n{\n  \"Logging\": {\n  \"LogLevel\": {\n   \"Default\": \"Information\"\n  } \n} }\n```", "```\ndocker config create nerd-dinner-api-config .\\configs\\nerd-dinner-api-config.json\n```", "```\n> docker config inspect --pretty nerd-dinner-api-config\nID:                     yongm92k597gxfsn3q0yhnvtb\nName:                   nerd-dinner-api-config\nCreated at:             2019-02-13 22:09:04.3214402 +0000 utc\nUpdated at:             2019-02-13 22:09:04.3214402 +0000 utc\nData:\n{\n \"Logging\": {\n \"LogLevel\": {\n \"Default\": \"Information\"\n    }\n }\n}\n```", "```\n# escape=` FROM microsoft/dotnet:2.1-aspnetcore-runtime-nanoserver-1809 EXPOSE 80 WORKDIR /dinner-api ENTRYPOINT [\"dotnet\", \"NerdDinner.DinnerApi.dll\"] USER ContainerAdministrator COPY --from=dockeronwindows/ch05-nerd-dinner-builder:2e C:\\dinner-api .\n```", "```\ndocker service update `\n  --config-add src=nerd-dinner-api-config,target=C:\\dinner-api\\config\\config.json `\n  --image dockeronwindows/ch07-nerd-dinner-api:2e  `\n nerd-dinner-api;\n```", "```\n> docker service logs nerd-dinner-api\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    | Hosting environment: Production\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    | Content root path: C:\\dinner-api\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    | Now listening on: http://[::]:80\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    | Application started. Press Ctrl+C to shut down.\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    | info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    |       Request starting HTTP/1.1 GET http://api.nerddinner.swarm/api/dinners\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    | info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\nnerd-dinner-api.1.cjurm8tg1lmj@win2019-02    |       Route matched with {action = \"Get\", controller = \"Dinners\"}. Executing action NerdDinner.DinnerApi.Controllers.DinnersController.Get (NerdDinner.DinnerApi)\n```", "```\nif ($sa_password_path  -and (Test-Path  $sa_password_path)) {\n  $password  =  Get-Content  -Raw $sa_password_path\n  if ($password) {\n    $sa_password  =  $password\n    Write-Verbose  \"Using SA password from secret file: $sa_password_path\" }\n```", "```\nENV sa_password_path=\"C:\\secrets\\sa-password\"\n```", "```\ndocker secret create nerd-dinner-db-sa-password .\\secrets\\nerd-dinner-db-sa-password.txt; docker service update `\n  --secret-add src=nerd-dinner-db-sa-password,target=C:\\secrets\\sa-password `\n  --image dockeronwindows/ch07-nerd-dinner-db:2e  `\n nerd-dinner-db;\n```", "```\n> docker secret inspect --pretty nerd-dinner-db-sa-password\nID:              u2zsrjouhicjnn1fwo5x8jqpk\nName:              nerd-dinner-db-sa-password\nDriver:\nCreated at:        2019-02-14 10:33:04.0575536 +0000 utc\nUpdated at:        2019-02-14 10:33:04.0575536 +0000 utc\n```", "```\nreverse-proxy:\n  image: sixeyed/traefik:v1.7.8-windowsservercore-ltsc2019\n  networks:\n - nd-net \n```", "```\nreverse-proxy:\n  command: --docker --docker.endpoint=npipe:////./pipe/docker_engine --api\n  ports:\n  - \"80\"\n  - \"8080\"\n  volumes:\n  - type: npipe\n     source: \\\\.\\pipe\\docker_engine\n     target: \\\\.\\pipe\\docker_engine \n```", "```\nreverse-proxy:\n  command: --docker --docker.swarmMode --docker.watch --docker.endpoint=tcp://win2019-dev-02:2376  \n           --docker.tls.ca=/certs/ca.pem --docker.tls.cert=/certs/cert.pem ...\n  ports:\n   - \"80:80\"\n   - \"8080:8080\"\n  secrets:\n   - source: docker-client-ca\n      target: C:\\certs\\ca.pem\n   - source: docker-client-cert\n      target: C:\\certs\\cert.pem - source: docker-client-key target: C:\\certs\\key.pem\n  deploy:\n   placement:\n     constraints:\n      - node.role == manager\n```", "```\nnerd-dinner-api:\n  depends_on:\n   - nerd-dinner-db\n  labels:\n   - \"traefik.frontend.rule=Host:api.nerddinner.local\"\n```", "```\nnerd-dinner-api:\n  configs:\n   - source: nerd-dinner-api-config\n      target: C:\\dinner-api\\config\\config.json\n  secrets:\n   - source: nerd-dinner-api-secrets\n      target: C:\\dinner-api\\config\\secrets.json\n  deploy:\n  replicas: 2  labels:\n     - \"traefik.frontend.rule=Host:api.nerddinner.swarm\"\n     - \"traefik.port=80\" \n```", "```\nnetworks:\n  nd-net:\n    external:\n      name: nat volumes:\n  ch07-es-data: ch07-db-data:\n```", "```\nnetworks:\n  nd-net:\n    external:\n      name: nd-swarm\n```", "```\nconfigs: nerd-dinner-api-config: external: true\n  nerd-dinner-config: \n    external: true\n\nsecrets:\n  nerd-dinner-db-sa-password:\n    external: true nerd-dinner-save-handler-secrets: external: true nerd-dinner-api-secrets: external: true nerd-dinner-secrets: external: true\n```", "```\n> .\\apply-configuration.ps1\nntkafttcxvf5zjea9axuwa6u9\nrazlhn81s50wrqojwflbak6qx\nnpg65f4g8aahezqt14et3m31l\nptofylkbxcouag0hqa942dosz\ndwtn1q0idjz6apbox1kh512ns\nreecdwj5lvkeugm1v5xy8dtvb\nnyjx9jd4yzddgrb2nhwvqjgri\nb3kk0hkzykiyjnmknea64e3dk\nq1l5yp025tqnr6fd97miwii8f\n```", "```\ndocker-compose -f docker-compose.yml -f docker-compose.swarm.yml config > docker-stack.yml\n```", "```\n> docker stack deploy --compose-file docker-stack.yml nerd-dinner\nCreating service nerd-dinner_message-queue\nCreating service nerd-dinner_elasticsearch\nCreating service nerd-dinner_nerd-dinner-api\nCreating service nerd-dinner_kibana\nCreating service nerd-dinner_nerd-dinner-index-handler\nCreating service nerd-dinner_nerd-dinner-save-handler\nCreating service nerd-dinner_reverse-proxy\nCreating service nerd-dinner_nerd-dinner-web\nCreating service nerd-dinner_nerd-dinner-homepage\nCreating service nerd-dinner_nerd-dinner-db\n```", "```\n> docker stack ls\nNAME                SERVICES            ORCHESTRATOR\nnerd-dinner         10                  Swarm\n```", "```\n> docker stack services nerd-dinner\nID              NAME       MODE        REPLICAS        IMAGE\n3qc43h4djaau  nerd-dinner_nerd-dinner-homepage       replicated  2/2       dockeronwindows/ch03...\n51xrosstjd79  nerd-dinner_message-queue              replicated  1/1       dockeronwindows/ch05...\n820a4quahjlk  nerd-dinner_elasticsearch              replicated  1/1       sixeyed/elasticsearch...\neeuxydk6y8vp  nerd-dinner_nerd-dinner-web            replicated  2/2       dockeronwindows/ch07...\njlr7n6minp1v  nerd-dinner_nerd-dinner-index-handler  replicated  2/2       dockeronwindows/ch05...\nlr8u7uoqx3f8  nerd-dinner_nerd-dinner-save-handler   replicated  3/3       dockeronwindows/ch05...\npv0f37xbmz7h  nerd-dinner_reverse-proxy              replicated  1/1       sixeyed/traefik...\nqjg0262j8hwl  nerd-dinner_nerd-dinner-db             replicated  1/1       dokeronwindows/ch07...\nva4bom13tp71  nerd-dinner_kibana                     replicated  1/1       sixeyed/kibana...\nvqdaxm6rag96  nerd-dinner_nerd-dinner-api            replicated  2/2       dockeronwindows/ch07...\n```", "```\nversion: '3.7' services:\n  nerd-dinner-homepage:\n    image: dockeronwindows/ch07-nerd-dinner-homepage:2e\n```", "```\ndocker-compose `\n  -f docker-compose.yml `\n  -f docker-compose.swarm.yml `\n -f new-homepage.yml `\n config > docker-stack-2.yml\n```", "```\n> docker stack deploy -c .\\docker-stack-2.yml nerd-dinner\nUpdating service nerd-dinner_nerd-dinner-save-handler (id: 0697sstia35s7mm3wo6q5t8nu)\nUpdating service nerd-dinner_nerd-dinner-homepage (id: v555zpu00rwu734l2zpi6rwz3)\nUpdating service nerd-dinner_reverse-proxy (id: kchmkm86wk7d13eoj9t26w1hw)\nUpdating service nerd-dinner_message-queue (id: jlzt6svohv1bo4og0cbx4y5ac)\nUpdating service nerd-dinner_nerd-dinner-api (id: xhlzf3kftw49lx9f8uemhv0mo)\nUpdating service nerd-dinner_elasticsearch (id: 126s2u0j78k1c9tt9htdkup8x)\nUpdating service nerd-dinner_nerd-dinner-index-handler (id: zd651rohewgr3waud6kfvv7o0)\nUpdating service nerd-dinner_nerd-dinner-web (id: yq6c51bzrnrfkbwqv02k8shvr)\nUpdating service nerd-dinner_nerd-dinner-db (id: wilnzl0jp1n7ey7kgjyjak32q)\nUpdating service nerd-dinner_kibana (id: uugw7yfaza84k958oyg45cznp)\n```", "```\n> docker service ps nerd-dinner_nerd-dinner-homepage\nID    NAME   IMAGE   NODE  DESIRED STATE CURRENT STATE ERROR  PORTS\nis12l1gz2w72 nerd-dinner_nerd-dinner-homepage.1 win2019-02          Running Running about a minute ago\nuu0s3ihzp4lk \\_ nerd-dinner_nerd-dinner-homepage.1 win2019-02       Shutdown Shutdown 2 minutes ago\n0ruzheqp29z1 nerd-dinner_nerd-dinner-homepage.2 win2019-dev-02      Running Running 2 minutes ago\n5ivddeffrkjj \\_ nerd-dinner_nerd-dinner-homepage.2 win2019-dev-02   Shutdown  Shutdown 2 minutes ago\n```", "```\n> docker service update --rollback nerd-dinner_nerd-dinner-homepage\nnerd-dinner_nerd-dinner-homepage\n```", "```\nnerd-dinner-save-handler:\n  deploy:\n  replicas: 9\n  update_config:\n    parallelism: 3\n    delay: 10s\n...\n```", "```\n> docker node update --availability drain win2019-02\nwin-node02\n```", "```\n> docker node ps win2019-02\nID   NAME  NODE         DESIRED STATE         CURRENT                STATE              \nkjqr0b0kxoah  nerd-dinner_nerd-dinner-homepage.1      win2019-02     Shutdown Shutdown 48 seconds ago\nis12l1gz2w72 \\_ nerd-dinner_nerd-dinner-homepage.1    win2019-02     Shutdown Shutdown 8 minutes ago\nxdbsme89swha nerd-dinner_nerd-dinner-index-handler.1  win2019-02     Shutdown Shutdown 49 seconds ago\nj3ftk04x1e9j  nerd-dinner_nerd-dinner-db.1            win2019-02     Shutdown \nShutdown 47 seconds ago\nluh79mmmtwca   nerd-dinner_nerd-dinner-api.1          win2019-02     Shutdown Shutdown 47 seconds ago\n... \n```", "```\n> docker service ls\nID              NAME                                 MODE          REPLICAS   \n126s2u0j78k1  nerd-dinner_elasticsearch            replicated       1/1 \nuugw7yfaza84  nerd-dinner_kibana                   replicated       1/1 \njlzt6svohv1b  nerd-dinner_message-queue            replicated       1/1 \nxhlzf3kftw49  nerd-dinner_nerd-dinner-api          replicated       2/2  \nwilnzl0jp1n7  nerd-dinner_nerd-dinner-db           replicated       1/1   \nv555zpu00rwu nerd-dinner_nerd-dinner-homepage      replicated       2/2\nzd651rohewgr nerd-dinner_nerd-dinner-index-handler replicated       2/2  \n0697sstia35s nerd-dinner_nerd-dinner-save-handler  replicated       3/3\nyq6c51bzrnrf nerd-dinner_nerd-dinner-web           replicated       2/2 \nkchmkm86wk7d nerd-dinner_reverse-proxy             replicated       1/1 \n```", "```\ndocker node update --availability active win2019-02\n```"]