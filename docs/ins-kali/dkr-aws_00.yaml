- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Welcome to *Docker on Amazon Web Services*!  I'm very excited to have written
    this book and to share how to leverage the wonderful technologies that the Docker
    and **Amazon Web Services** (**AWS**) ecosystems provide to build truly world-class
    solutions for deploying and operating your applications in production.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎阅读《在亚马逊网络服务上使用Docker》！我非常兴奋能够写这本书，并分享如何利用Docker和亚马逊网络服务（AWS）生态系统提供的精彩技术，构建真正世界一流的解决方案，用于部署和运营您的应用程序。
- en: Docker has become the modern standard for building, packaging, publishing, and
    operating applications, leveraging the power of containers to increase the speed
    of application delivery, increase security, and reduce costs.  This book will
    show you how to supercharge your process of building Docker applications, using the
    best practices of continuous delivery to provide a fully automated, consistent,
    reliable, and portable workflow for testing, building, and publishing your Docker
    applications. In my view, this is a fundamental prerequisite before you even consider
    deploying your application to the cloud, and the first few chapters will focus
    on establishing a local Docker environment and creating a local continuous delivery
    workflow for a sample application that we will be using throughout the book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Docker已成为构建、打包、发布和运营应用程序的现代标准，利用容器的力量来提高应用程序交付速度，增加安全性并降低成本。本书将向您展示如何通过使用持续交付的最佳实践，来加速构建Docker应用程序的过程，提供一个完全自动化、一致、可靠和可移植的工作流程，用于测试、构建和发布您的Docker应用程序。在我看来，这是在考虑将应用程序部署到云端之前的基本先决条件，本书的前几章将重点介绍建立本地Docker环境，并为我们在整本书中将使用的示例应用程序创建一个本地持续交付工作流程。
- en: AWS is the world's leading public cloud provider, and provides a rich set of
    solutions for managing and operating your Docker applications. This book will
    cover all of the major services that AWS provides to support Docker and containers,
    including the **Elastic Container Service** (**ECS**), Fargate, Elastic Beanstalk,
    and **Elastic Kubernetes Service** (**EKS**), and also will discuss how you can
    leverage the Docker for AWS solution provided by Docker Inc to deploy Docker Swarm
    clusters.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: AWS是全球领先的公共云服务提供商，提供丰富的解决方案来管理和运营您的Docker应用程序。本书将涵盖AWS提供的所有主要服务，以支持Docker和容器，包括弹性容器服务（ECS）、Fargate、弹性Beanstalk和弹性Kubernetes服务（EKS），还将讨论您如何利用Docker
    Inc提供的Docker for AWS解决方案来部署Docker Swarm集群。
- en: Running a complete application environment in AWS comprises much more than your
    container platform, and this book will also describe best practices for managing
    access to your AWS account and leveraging other AWS services to support the requirements
    of your applications. For example, you will learn how to set up AWS application
    load balancers to publish highly available, load-balanced endpoints for your application,
    create AWS **Relational Database Service** (**RDS**) instances to provide a managed
    application database, integrate your applications with the AWS Secrets Manager
    to provide a secure secrets management solution, and create a complete continuous
    delivery pipeline using the AWS CodePipeline, CodeBuild, and CloudFormation services
    that will automatically test, build, and publish Docker images for any new changes
    to your application, and then automatically deploy it into development and production
    environments.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在AWS中运行完整的应用程序环境远不止您的容器平台，这本书还将描述管理访问AWS账户的最佳实践，并利用其他AWS服务来支持应用程序的要求。例如，您将学习如何设置AWS应用程序负载均衡器，为您的应用程序发布高可用、负载均衡的端点，创建AWS关系数据库服务（RDS）实例，提供托管的应用程序数据库，将您的应用程序集成到AWS
    Secrets Manager中，提供安全的秘密管理解决方案，并使用AWS CodePipeline、CodeBuild和CloudFormation服务创建完整的持续交付管道，该管道将自动测试、构建和发布Docker镜像，以适应您应用程序的任何新更改，并自动将其部署到开发和生产环境。
- en: You will build all of this supporting infrastructure using the AWS CloudFormation
    service, which provides powerful infrastructure-as-code templates that allow you
    define all of the AWS services and resources I have mentioned in a single manifest
    that you can deploy to AWS with a single click of a button.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您将使用AWS CloudFormation服务构建所有这些支持基础设施，该服务提供了强大的基础设施即代码模板，允许您定义我提到的所有AWS服务和资源，并将其部署到AWS，只需点击一个按钮。
- en: I'm sure by now you are just as excited as I am to learn about all of these
    wonderful technologies, and I'm sure by the end of this book, you will have developed
    the expert knowledge and skills required to be able to deploy and manage your
    Docker applications, using the latest cutting-edge techniques and best practices.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信现在你一定和我一样对学习所有这些美妙的技术充满了期待，我相信在读完这本书之后，你将拥有部署和管理Docker应用程序所需的专业知识和技能，使用最新的前沿技术和最佳实践。
- en: Who this book is for
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: '*Docker on Amazon Web Services* is for anybody who wants to build, deploy,
    and operate applications using the power of containers, Docker, and AWS.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 《在亚马逊网络服务上使用Docker》适用于任何希望利用容器、Docker和AWS的强大功能来构建、部署和操作应用程序的人。
- en: Readers ideally should have a basic understanding of Docker and containers,
    and have worked with AWS or another cloud provider, although no previous experience
    with containers or AWS is required, as this book takes a step-by-step approach
    and explains key concepts as you progress. An understanding of how to use the
    Linux command line, Git, and basic Python scripting knowledge will be useful,
    but is not required.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 读者最好具备对Docker和容器的基本理解，并且已经使用过AWS或其他云服务提供商，尽管不需要有容器或AWS的先前经验，因为这本书采用了一步一步的方法，并在您进展时解释关键概念。了解如何使用Linux命令行、Git和基本的Python脚本知识将是有用的，但不是必需的。
- en: See the *To get the most out of this book* section for a complete list of the
    recommended prerequisite skills.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅“充分利用本书”部分，了解推荐的先决条件技能的完整列表。
- en: What this book covers
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖了什么
- en: '[Chapter 1](3d8c99a9-f463-4891-ad1a-bc2450d91251.xhtml), *Container and Docker
    Fundamentals*, will provide a brief introduction to Docker and containers, and
    provide an overview of the various services and options available in AWS to run
    your Docker applications. You will set up your local environment, installing Docker,
    Docker Compose, and various other tools that are required to complete the examples
    in each chapter. Finally, you will download the sample application and learn how
    to test, build, and run the application locally, so that you have a good understanding
    of how the application works and specific tasks you need to perform to get the
    application up and running.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，“容器和Docker基础”，将简要介绍Docker和容器，并概述AWS中可用于运行Docker应用程序的各种服务和选项。您将设置您的本地环境，安装Docker、Docker
    Compose和其他各种工具，以完成每章中的示例。最后，您将下载示例应用程序，并学习如何在本地测试、构建和运行应用程序，以便您对应用程序的工作原理和您需要执行的特定任务有一个良好的理解，以使应用程序正常运行。
- en: '[Chapter 2](7c38379e-1429-4fc9-ad1e-03e2db20d866.xhtml), *Building Applications
    Using Docker*, will describe how to build a fully automated Docker-based workflow
    for testing, building, packaging, and publishing your applications as production-ready
    Docker release images, using Docker, Docker Compose, and other tools. This will
    establish the foundation of a portable continuous delivery workflow that you can
    consistently execute across multiple machines without having to install application-specific
    dependencies in each local environment.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，“使用Docker构建应用程序”，将描述如何构建一个完全自动化的基于Docker的工作流程，用于测试、构建、打包和发布您的应用程序作为生产就绪的Docker发布映像，使用Docker、Docker
    Compose和其他工具。这将建立一个便携式的持续交付工作流的基础，您可以在多台机器上一致地执行，而无需在每个本地环境中安装特定于应用程序的依赖项。
- en: '[Chapter 3](51513828-ebcc-470e-99b1-6e86b77be085.xhtml), *Getting Started with
    AWS*, will describe how to create a free AWS account and start using a variety
    of free-tier services that allow you to get familiar with the wide array of AWS
    services on offer. You will learn how to establish best practice administrative
    and user access patterns to your account, configuring **multi-factor authentication**
    (**MFA**) for enhanced security and installing the AWS command-line interface,
    which can be used for a wide variety of operational and automation use cases.
    You will also be introduced to CloudFormation, which is a management tool and
    service provided free by AWS that you will use throughout this book that allows
    you to deploy complex environments with a single click of a button, using a powerful
    and expressive infrastructure as code template format.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“开始使用AWS”，将描述如何创建一个免费的AWS账户，并开始使用各种免费的服务，让您熟悉AWS提供的广泛的服务。您将学习如何为您的账户建立最佳实践的管理和用户访问模式，配置增强安全性的多因素身份验证（MFA）并安装AWS命令行界面，该界面可用于各种操作和自动化用例。您还将介绍CloudFormation，这是AWS免费提供的管理工具和服务，您将在本书中使用它，它允许您使用强大而富有表现力的基础设施即代码模板格式，通过单击按钮部署复杂的环境。
- en: '[Chapter 4](3adaf097-d736-47a2-a791-b8acd7c6461b.xhtml), *Introduction to ECS*, will
    get you up and running with the **Elastic Container Service** (**ECS**), which
    is the flagship service for running your Docker applications in AWS. You will
    learn about the architecture of ECS, create your first ECS cluster, define your
    container configurations using ECS task definitions, and then deploy a Docker
    application as an ECS service.  Finally, you will be briefly introduced to the
    ECS **command-line interface** (**CLI**), which allows you to interact with local
    Docker Compose files and automatically deploy Docker Compose resources to AWS
    using ECS.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，ECS简介，将帮助您快速上手弹性容器服务（ECS），这是在AWS中运行Docker应用程序的旗舰服务。您将了解ECS的架构，创建您的第一个ECS集群，使用ECS任务定义定义您的容器配置，然后将Docker应用程序部署为ECS服务。最后，您将简要介绍ECS命令行界面（CLI），它允许您与本地Docker
    Compose文件进行交互，并使用ECS自动部署Docker Compose资源到AWS。
- en: '[Chapter 5](a00edb3f-1989-4e3c-8835-b99bb4a1b582.xhtml), *Publishing Docker
    Images Using ECR*, will teach you how to establish a private Docker registry using
    the **Elastic Container Registry** (**ECR**), authenticate to your registry using
    IAM credentials, and then publish Docker images to private repositories within
    your registry. You will also learn how to share your Docker images with other
    accounts and AWS services, and how to configure life cycle policies to automatically
    clean up orphaned images, ensuring you only pay for active and current images.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，使用ECR发布Docker镜像，将教您如何使用弹性容器注册表（ECR）建立一个私有的Docker注册表，使用IAM凭证对您的注册表进行身份验证，然后将Docker镜像发布到注册表中的私有存储库。您还将学习如何与其他账户和AWS服务共享您的Docker镜像，以及如何配置生命周期策略以自动清理孤立的镜像，确保您只支付活动和当前的镜像。
- en: '[Chapter 6](9b1ad8a7-b25d-4713-aa20-2c80f0019d4c.xhtml), *Building Custom ECS
    Container Instances*, will show you how to use a popular open source tool called
    Packer to build and publish custom **Amazon Machine Images** (**AMIs**) for the
    EC2 instances (ECS container instances) that run your container workloads in ECS
    clusters. You will install a set of helper scripts that enable your instances
    to integrate with CloudFormation and download custom provisioning actions at instance
    creation time, allowing you to dynamically configure the ECS cluster your instances
    will join, configure the CloudWatch logs groups your instances should publish
    logging information to, and finally, signal back to CloudFormation that provisioning
    has succeeded or failed.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，构建自定义ECS容器实例，将向您展示如何使用一种流行的开源工具Packer来构建和发布自定义的Amazon Machine Images（AMIs）用于在ECS集群中运行您的容器工作负载的EC2实例（ECS容器实例）。您将安装一组辅助脚本，使您的实例能够与CloudFormation集成，并在实例创建时下载自定义的配置操作，从而使您能够动态配置ECS集群，配置实例应发布日志信息的CloudWatch日志组，并最终向CloudFormation发出信号，表明配置已成功或失败。
- en: '[Chapter 7](da451bbb-7261-4215-b8b1-c8ed293c8aea.xhtml), *Creating ECS Clusters*, will
    teach you how to build ECS clusters based upon EC2 auto-scaling groups that leverage
    the features of the custom AMI you created in the previous chapter. You will define
    your EC2 auto-scaling group, ECS cluster, and other supporting resources using
    CloudFormation, and configure CloudFormation Init metadata to perform custom runtime
    configuration and provisioning of the ECS container instances that make up your
    ECS cluster.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，创建ECS集群，将教您如何基于利用上一章中创建的自定义AMI的特性来构建基于EC2自动扩展组的ECS集群。您将使用CloudFormation定义您的EC2自动扩展组、ECS集群和其他支持资源，并配置CloudFormation
    Init元数据来执行自定义运行时配置和ECS容器实例的配置。
- en: '[Chapter 8](f505427e-6997-49a4-b500-8737600ca012.xhtml), *Deploying Applications
    Using ECS*, will expand the environment created in the previous chapter, adding
    supporting resources such as **Relational Database Service** (**RDS**) instances
    and AWS **Application Load Balancers** (**ALBs**) to your CloudFormation template.
    You will then define an ECS task definition and ECS service for the sample application,
    and learn how ECS can perform automated rolling deployments and updates for your
    applications. To orchestrate required deployment tasks such as running database
    migrations, you will extend CloudFormation and write your own Lambda function
    to create an ECS task runner custom resource, providing the powerful capability
    to run any provisioning action that can be executed as an ECS task.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“使用ECS部署应用程序”，将扩展上一章创建的环境，添加支持资源，如关系数据库服务（RDS）实例和AWS应用程序负载均衡器（ALB）到您的CloudFormation模板中。然后，您将为示例应用程序定义一个ECS任务定义和ECS服务，并学习ECS如何执行应用程序的自动滚动部署和更新。为了编排所需的部署任务，如运行数据库迁移，您将扩展CloudFormation并编写自己的Lambda函数，创建一个ECS任务运行器自定义资源，提供运行任何可以作为ECS任务执行的配置操作的强大能力。
- en: '[Chapter 9](5b759c15-823d-4b2b-9c81-0e07c1432b47.xhtml), *Managing Secrets*, will
    introduce the AWS Secrets Manager, which is a fully managed service that stores
    secret data in an encrypted format that can be easily and securely accessed by
    authorized parties such as your users, AWS resources, and applications. You will
    interact with Secrets Manager using the AWS CLI, creating secrets for sensitive
    credentials such as database passwords, and then learn how to use an entrypoint
    script for your containers that injects secret values as internal environment
    variables at container startup before handing off to the main application. Finally,
    you will create a CloudFormation custom resource that exposes secrets to other
    AWS services that do not support AWS Secrets Manager, such as providing an administrative
    password for Relational Database Service (RDS) instances.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“管理机密”，将介绍AWS Secrets Manager，这是一个完全托管的服务，可以以加密格式存储机密数据，被授权方（如您的用户、AWS资源和应用程序）可以轻松安全地访问。您将使用AWS
    CLI与Secrets Manager进行交互，为敏感凭据（如数据库密码）创建机密，然后学习如何为容器创建入口脚本，在容器启动时将机密值作为内部环境变量注入，然后交给主应用程序。最后，您将创建一个CloudFormation自定义资源，将机密暴露给不支持AWS
    Secrets Manager的其他AWS服务，例如为关系数据库服务（RDS）实例提供管理密码。
- en: '[Chapter 10](c87dde0d-b505-4523-9e99-0b3df502bae6.xhtml), *Isolating Network
    Access*, describes how to use the awsvpc networking mode in your ECS task definitions
    to isolate network access and separate ECS control plane communications from your
    container and application communications. This will allow you to adopt best practice
    security patterns such as deploying your containers on private networks, and implement
    solutions for providing internet access, including the AWS VPC NAT Gateway service.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“隔离网络访问”，描述了如何在ECS任务定义中使用awsvpc网络模式，以隔离网络访问，并将ECS控制平面通信与容器和应用程序通信分开。这将使您能够采用最佳安全实践模式，例如在私有网络上部署您的容器，并实现提供互联网访问的解决方案，包括AWS
    VPC NAT网关服务。
- en: '[Chapter 11](3c6d1e30-d56e-4718-8a4d-f40990efd59d.xhtml), *Managing the ECS
    Infrastructure Life Cycle*, will provide you with an understanding of operational
    challenges when running ECS clusters, which includes taking your ECS container
    instances out of service, whether it be to scale in your auto-scaling groups or
    to replace your ECS container instances with a new Amazon machine image. You will
    learn how to leverage EC2 auto-scaling life cycle hooks to invoke an AWS Lambda
    function whenever an ECS container instance is about to be terminated, which allows
    you to perform graceful shutdown operations such as draining active containers
    to other instances in the cluster, before signaling EC2 auto-scaling to proceed
    with instance termination.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“管理ECS基础设施生命周期”，将为您提供在运行ECS集群时的操作挑战的理解，其中包括将ECS容器实例移出服务，无论是为了缩减自动扩展组还是用新的Amazon机器映像替换ECS容器实例。您将学习如何利用EC2自动扩展生命周期挂钩，在ECS容器实例即将被终止时调用AWS
    Lambda函数，这允许您执行优雅的关闭操作，例如将活动容器转移到集群中的其他实例，然后发出EC2自动扩展以继续实例终止。
- en: '[Chapter 12](42932aaa-54a7-4963-9bab-a7ea2ab8a75e.xhtml), *ECS Auto Scaling*,
    will describe how ECS clusters manage resources such as CPU, memory, and network
    ports, and how this affects the capacity of your clusters. If you want to be able
    to dynamically auto-scale your clusters, you need to dynamically monitor ECS cluster
    capacity, and scale out or scale in the cluster at capacity thresholds that ensure
    you will meet the service level expectations of your organization or use case.
    You will be implement a solution that calculates ECS cluster capacity whenever
    an ECS container instance state change event is generated via the AWS CloudWatch
    Events service, publishes capacity metrics to CloudWatch, and dynamically scales
    your cluster up or down using CloudWatch alarms. With a dynamic cluster capacity
    solution in place, you will then be able to configure the AWS application auto-scaling
    service to dynamically adjust the number of instances of service based upon appropriate
    metrics, such as CPU utilization or active connections, without needing to concern
    yourself with the effect on underlying cluster capacity.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，“ECS自动扩展”，将描述ECS集群如何管理CPU、内存和网络端口等资源，以及这如何影响您的集群容量。如果您希望能够动态自动扩展您的集群，您需要动态监视ECS集群容量，并在容量阈值处扩展或缩减集群，以确保您将满足组织或用例的服务水平期望。您将实施一个解决方案，该解决方案在通过AWS
    CloudWatch Events服务生成ECS容器实例状态更改事件时计算ECS集群容量，将容量指标发布到CloudWatch，并使用CloudWatch警报动态地扩展或缩减您的集群。有了动态集群容量解决方案，您将能够配置AWS应用程序自动扩展服务，根据适当的指标（如CPU利用率或活动连接）动态调整服务实例的数量，而无需担心对底层集群容量的影响。
- en: '[Chapter 13](71bbe190-3c41-4692-af8c-ff1e26581e7c.xhtml),  *Continuously Delivering
    ECS Applications*, will establish a continuous delivery pipeline using the AWS
    CodePipeline service that integrates with GitHub to detect changes to your application
    source code and infrastructure deployment scripts, use the AWS CodeBuild service
    to run unit tests, build application artifacts and publish a Docker image using
    the sample application Docker workflow, and continuously deploy your application
    changes to AWS using the CloudFormation templates you have used so far in this
    book.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，“持续交付ECS应用程序”，将使用AWS CodePipeline服务建立一个持续交付流水线，该流水线与GitHub集成，以侦测应用程序源代码和基础设施部署脚本的更改，使用AWS
    CodeBuild服务运行单元测试，构建应用程序构件并使用示例应用程序Docker工作流发布Docker镜像，并使用本书中迄今为止使用的CloudFormation模板持续部署您的应用程序更改到AWS。
- en: This will automatically deploy into an AWS development environment that you
    test, and then create a change set and manual approval action for deployment into
    production, providing you with a rapid and repeatable path to production for all
    of your applications new features and bug fixes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这将自动部署到一个您测试的 AWS 开发环境中，然后创建一个变更集和手动批准操作，以便将其部署到生产环境，为您的所有应用程序新功能和错误修复提供了一个快速且可重复的生产路径。
- en: '[Chapter 14](97eca0c2-eca8-4780-b83e-0c92cf55f402.xhtml), *Fargate and ECS
    Service Discovery*, will introduce AWS Fargate, which provides a solution that
    fully manages both the ECS service control plane and ECS clusters that you traditionally
    have to manage using the regular ECS service. You will deploy the AWS X-Ray daemon
    as an ECS service using Fargate, and configure ECS service discovery to dynamically
    publish your service endpoints using DNS and Route 53\. This will allow you to
    add support for X-Ray tracing to your sample application, which can be used to
    trace incoming HTTP requests to your application and monitor AWS service calls,
    database calls, and other types of calls that are made to service each incoming
    request.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第14章《Fargate 和 ECS 服务发现》将介绍 AWS Fargate，它提供了一个完全管理传统上需要使用常规 ECS 服务来管理的 ECS 服务控制平面和
    ECS 集群的解决方案。您将使用 Fargate 部署 AWS X-Ray 守护程序作为 ECS 服务，并配置 ECS 服务发现，动态发布您的服务端点使用
    DNS 和 Route 53。这将允许您为您的示例应用程序添加对 X-Ray 跟踪的支持，该跟踪可用于跟踪传入的 HTTP 请求到您的应用程序，并监视 AWS
    服务调用、数据库调用和其他类型的调用，这些调用是为了服务每个传入请求。
- en: '[Chapter 15](3184b993-b18c-49e5-be06-f732d537362d.xhtml), *Elastic Beanstalk*,
    will provide an overview of the popular **Platform-as-a-Service** (**PaaS**) offering,
    which includes support for Docker applications. You will learn how to create an
    Elastic Beanstalk multi-container Docker application, establish an environment
    that consists of a managed EC2 instance, an RDS database instance, and an **Application
    Load Balancer** (**ALB**), and then extend the environment using various techniques
    to support the requirements of your Docker applications, such as volume mounts
    and running single-shot tasks per application deployment.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 第15章《弹性 Beanstalk》将介绍流行的**平台即服务**（**PaaS**）提供的概述，其中包括对Docker应用程序的支持。您将学习如何创建一个弹性
    Beanstalk 多容器 Docker 应用程序，建立一个由托管的 EC2 实例、一个 RDS 数据库实例和一个**应用负载均衡器**（**ALB**）组成的环境，然后使用各种技术扩展环境，以支持
    Docker 应用程序的要求，例如卷挂载和在每个应用程序部署中运行单次任务。
- en: '[Chapter 16](08e2a8cc-38bf-4945-83e5-261ad7a6bb16.xhtml), *Docker Swarm in
    AWS*, will focus on how to run Docker Swarm clusters in AWS, using the Docker
    for AWS blueprint provided for Docker Swarm community edition. This blueprint
    provides you with a CloudFormation template that establishes a pre-configured
    Docker Swarm cluster in AWS within minutes, and features integrations with key
    AWS services such as the Elastic Load Balancing (ELB), Elastic File System (EFS)
    and Elastic Block Store (EBS) services. You will define a stack using Docker Compose,
    which configures a multi-service environment expressed in the familiar Docker
    Compose specification format, and learn how to configure key Docker Swarm resources
    such as services, volumes, and Docker secrets. You will learn how to create shared
    Docker volumes that are backed by EFS, relocatable Docker volumes backed by EBS
    that Docker Swarm will automatically reattach to new containers redeployed after
    a node failure, and publish an external service endpoint for your application
    using an ELB that is automatically created and managed for you by Docker Swarm.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[第16章](08e2a8cc-38bf-4945-83e5-261ad7a6bb16.xhtml)，*AWS中的Docker Swarm*，将重点介绍如何在AWS中运行Docker
    Swarm集群，使用为Docker Swarm社区版提供的Docker for AWS蓝图。该蓝图为您提供了一个CloudFormation模板，在几分钟内在AWS中建立一个预配置的Docker
    Swarm集群，并与关键的AWS服务（如弹性负载均衡（ELB）、弹性文件系统（EFS）和弹性块存储（EBS）服务）进行集成。您将使用Docker Compose定义一个堆栈，该堆栈配置了以熟悉的Docker
    Compose规范格式表示的多服务环境，并学习如何配置关键的Docker Swarm资源，如服务、卷和Docker秘密。您将学习如何创建由EFS支持的共享Docker卷，由EBS支持的可重定位Docker卷，Docker
    Swarm将在节点故障后自动重新连接到重新部署的新容器，并使用由Docker Swarm自动创建和管理的ELB为您的应用程序发布外部服务端点。'
- en: '[Chapter 17](6b944444-e255-4f19-abde-d9b69e20f0d3.xhtml), *Elastic Kubernetes
    Service, *introduces the newest container management platform offering from AWS,
    which is based on the popular open source Kubernetes platform. You will first
    set up Kubernetes in your local Docker Desktop environment, which includes native
    support for Kubernetes with the Docker 18.06 CE release, and learn how to create
    a complete environment for your Docker applications using a number of Kubernetes
    resources, including pods, deployments, services, secrets, persistent volumes,
    and jobs. You will then establish an EKS cluster in AWS, create an EC2 auto-scaling
    group that connects worker nodes to your cluster, and ensure your local Kubernetes
    client can authenticate and connect to the EKS control plane, after which you
    will deploy the Kubernetes dashboard to provide a comprehensive management interface
    for your cluster.  Finally, you will define a default storage class that uses
    the Elastic Block Store (EBS) service for persistent volumes and then deploy your
    Docker applications to AWS, leveraging the same Kubernetes definitions you created
    earlier for your local environment, providing you with a powerful solution to
    quickly deploy Docker applications locally for development purposes, and then
    deploy straight to production using EKS.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第17章，*弹性Kubernetes服务*，介绍了AWS最新的容器管理平台，该平台基于流行的开源Kubernetes平台。您将首先在本地Docker Desktop环境中设置Kubernetes，该环境包括Docker
    18.06 CE版本对Kubernetes的本机支持，并学习如何使用多个Kubernetes资源（包括pod、部署、服务、秘密、持久卷和作业）为您的Docker应用创建完整的环境。然后，您将在AWS中建立一个EKS集群，创建一个EC2自动扩展组，将工作节点连接到您的集群，并确保您的本地Kubernetes客户端可以对EKS控制平面进行身份验证和连接，之后您将部署Kubernetes仪表板，为您的集群提供全面的管理界面。最后，您将定义一个使用弹性块存储（EBS）服务的默认存储类，然后将您的Docker应用部署到AWS，利用您之前为本地环境创建的相同Kubernetes定义，为您提供一个强大的解决方案，可以快速部署用于开发目的的Docker应用程序，然后使用EKS直接部署到生产环境。
- en: To get the most out of this book
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: '**A basic, working knowledge of Docker** - if you haven''t used Docker before,
    you should learn about the basic concepts of Docker at [https://docs.docker.com/engine/docker-overview/](https://docs.docker.com/engine/docker-overview/)
    and then step through Parts 1 ([https://docs.docker.com/get-started/](https://docs.docker.com/get-started/))
    and 2 ([https://docs.docker.com/get-started/part2](https://docs.docker.com/get-started/part2)) 
    of the Docker Get Started tutorial. For a more comprehensive understanding of
    Docker, check out the [Learn Docker - Fundamentals of Docker 18.x](https://www.packtpub.com/networking-and-servers/learn-docker-fundamentals-docker-18x)
    book from Packt Publishing.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker的基本工作知识-如果您以前没有使用过Docker，您应该了解[https://docs.docker.com/engine/docker-overview/](https://docs.docker.com/engine/docker-overview/)上Docker的基本概念，然后按照Docker入门教程的第1部分([https://docs.docker.com/get-started/](https://docs.docker.com/get-started/))和第2部分([https://docs.docker.com/get-started/part2](https://docs.docker.com/get-started/part2))进行学习。要更全面地了解Docker，请查看Packt
    Publishing的[Learn Docker - Fundamentals of Docker 18.x](https://www.packtpub.com/networking-and-servers/learn-docker-fundamentals-docker-18x)书籍。
- en: '**A basic, working knowledge of Git** - if you haven''t used Git before, you
    should run through the Beginner and Getting Started tutorials at [https://www.atlassian.com/git/tutorials](https://www.atlassian.com/git/tutorials).
    For a more comprehensive understanding of Git, check out the [Git Essentials](https://www.packtpub.com/application-development/git-essentials)
    book from Packt Publishing.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git的基本工作知识-如果您以前没有使用过Git，您应该运行[https://www.atlassian.com/git/tutorials](https://www.atlassian.com/git/tutorials)上的初学者和入门教程。要更全面地了解Git，请查看Packt
    Publishing的[Git Essentials](https://www.packtpub.com/application-development/git-essentials)书籍。
- en: '**Familiarity with AWS** - if you haven''t used AWS before, running through
    the Launch a Linux Virtual Machine tutorial at [https://aws.amazon.com/getting-started/tutorials/launch-a-virtual-machine/](https://aws.amazon.com/getting-started/tutorials/launch-a-virtual-machine/)
    will provide a useful introduction.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 熟悉AWS-如果您以前没有使用过AWS，运行[https://aws.amazon.com/getting-started/tutorials/launch-a-virtual-machine/](https://aws.amazon.com/getting-started/tutorials/launch-a-virtual-machine/)上的启动Linux虚拟机教程将提供有用的介绍。
- en: '**Familiarity with the Linux/Unix command line** - if you haven''t used the
    Linux/Unix command line before, I recommend running through a basic tutorial such
    as [https://maker.pro/linux/tutorial/basic-linux-commands-for-beginners](https://maker.pro/linux/tutorial/basic-linux-commands-for-beginners),
    using the Linux Virtual Machine you created when you went through the Launch a
    Linux Virtual Machine tutorial.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 熟悉Linux/Unix命令行-如果您以前没有使用过Linux/Unix命令行，我建议您运行一个基本教程，比如[https://maker.pro/linux/tutorial/basic-linux-commands-for-beginners](https://maker.pro/linux/tutorial/basic-linux-commands-for-beginners)，使用您在完成启动Linux虚拟机教程时创建的Linux虚拟机。
- en: '**Basic understanding of Python** - the sample application for this book is
    written in Python, and some of the examples in later chapters include basic Python
    scripts.  If you have not worked with Python before, you may want to read through
    the first few lessons at [https://docs.python.org/3/tutorial/](https://docs.python.org/3/tutorial/).'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python的基本理解-本书的示例应用程序是用Python编写的，后面章节的一些示例包括基本的Python脚本。如果您以前没有使用过Python，您可能希望阅读[https://docs.python.org/3/tutorial/](https://docs.python.org/3/tutorial)的前几课。
- en: Download the example code files
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录或注册[www.packtpub.com](http://www.packtpub.com/support)。
- en: Select the SUPPORT tab.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“支持”选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“代码下载和勘误”。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，然后按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用最新版本的解压软件解压文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip适用于Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX适用于Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip适用于Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Docker-on-Amazon-Web-Services](https://github.com/PacktPublishing/Docker-on-Amazon-Web-Services). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Docker-on-Amazon-Web-Services](https://github.com/PacktPublishing/Docker-on-Amazon-Web-Services)。如果代码有更新，将在现有的GitHub存储库中进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他代码包，来自我们丰富的图书和视频目录，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上找到。去看看吧！
- en: Download the color images
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/DockeronAmazonWebServices_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/DockeronAmazonWebServices_ColorImages.pdf)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。您可以在这里下载：[https://www.packtpub.com/sites/default/files/downloads/DockeronAmazonWebServices_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/DockeronAmazonWebServices_ColorImages.pdf)
- en: Code in Action
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码演示
- en: 'Visit the following link to check out videos of the code being run:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下链接查看代码运行的视频：
- en: '[http://bit.ly/2Noqdpn](http://bit.ly/2Noqdpn)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://bit.ly/2Noqdpn](http://bit.ly/2Noqdpn)'
- en: Conventions used
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Note that the gist includes a placeholder called `PASTE_ACCOUNT_NUMBER` within
    the policy document, so you will need to replace this with your actual AWS account
    ID."'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。例如：“请注意，要点中包含了一个名为`PASTE_ACCOUNT_NUMBER`的占位符，位于策略文档中，因此您需要将其替换为您的实际AWS账户ID。”'
- en: 'A block of code is set as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "To create the admin role, select **Services** | **IAM** from the
    AWS console, select **Roles** from the left-hand menu, and click on the **Create
    role** button."'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单中的单词或对话框中的单词会以这种方式出现在文本中。例如：“要创建管理员角色，请从AWS控制台中选择**服务**|**IAM**，从左侧菜单中选择**角色**，然后单击**创建角色**按钮。”'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的样式中。提示和技巧会出现在这样的样式中。
