["```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n\u00a0\u00a0name: mysql\nspec:\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0serviceName: mysql\n\u00a0\u00a0replicas: 3\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n```", "```\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initContainers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: init-mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- bash\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- \"-c\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- |\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set -ex\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ordinal=${BASH_REMATCH[1]}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo [mysqld] > /mnt/conf.d/server-id.cnf\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if [[ $ordinal -eq 0 ]]; then\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cp /mnt/config-map/master.cnf /mnt/conf.d/\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cp /mnt/config-map/slave.cnf /mnt/conf.d/\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: conf\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /mnt/conf.d\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: config-map\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /mnt/config-map\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: clone-mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: gcr.io/google-samples/xtrabackup:1.0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- bash\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- \"-c\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- |\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0set -ex\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[[ -d /var/lib/mysql/mysql ]] && exit 0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ordinal=${BASH_REMATCH[1]}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[[ $ordinal -eq 0 ]] && exit 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xtrabackup --prepare --target-dir=/var/lib/mysql\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_ALLOW_EMPTY_PASSWORD\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"1\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 3306\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: data\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /var/lib/mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subPath: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: conf\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /etc/mysql/conf.d\n```", "```\n- name: xtrabackup\ncontainerPort: 3307\ncommand:\n- bash\n- \"-c\"\n- |\nset -ex\ncd /var/lib/mysql if [[ -f xtrabackup_slave_info && \"x$(<xtrabackup_slave_info)\" != \"x\" ]]; thencat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.inrm -f xtrabackup_slave_info xtrabackup_binlog_info\nelif [[ -f xtrabackup_binlog_info ]]; then[[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1\nrm -f xtrabackup_binlog_info xtrabackup_slave_info\necho \"CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\\\nMASTER_LOG_POS=${BASH_REMATCH[2]}\" > change_master_to.sql.in\nfi if [[ -f change_master_to.sql.in ]]; then\necho \"Waiting for mysqld to be ready (accepting connections)\"\nuntil mysql -h 127.0.0.1 -e \"SELECT 1\"; do sleep 1; done\necho \"Initializing replication from clone position\"\nmysql -h 127.0.0.1 \\\n-e \"$(<change_master_to.sql.in), \\\nMASTER_HOST='mysql-0.mysql', \\\nMASTER_USER='root', \\\nMASTER_PASSWORD='', \\\nMASTER_CONNECT_RETRY=10; \\\nSTART SLAVE;\" || exit 1\nmv change_master_to.sql.in change_master_to.sql.orig\nfi exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \\\n\"xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root\"\n```", "```\n\u00a0\u00a0volumeClaimTemplates:\n\u00a0\u00a0- metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: data\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes: [\"ReadWriteOnce\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 10Gi\n```", "```\n    (\n    \u00a0\u00a0set -x; cd \"$(mktemp -d)\" &&\n    \u00a0\u00a0curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz\" &&\n    \u00a0\u00a0tar zxvf krew.tar.gz &&\n    \u00a0\u00a0KREW=./krew-\"$(uname | tr '[:upper:]' '[:lower:]')_$(uname -m | sed -e 's/x86_64/amd64/' -e 's/arm.*$/arm/')\" &&\n    \u00a0\u00a0\"$KREW\" install krew\n    )\n    ```", "```\n    export PATH=\"${KREW_ROOT:-$HOME/.krechw}/bin:$PATH\"\n    ```", "```\n    kubectl krew install minio\n    ```", "```\n    kubectl minio init\n    ```", "```\n    CustomResourceDefinition tenants.minio.min.io: created\n    ClusterRole minio-operator-role: created\n    ServiceAccount minio-operator: created\n    ClusterRoleBinding minio-operator-binding: created\n    MinIO Operator Deployment minio-operator: created\n    ```", "```\n    kubectl get pods\n    ```", "```\nNAMESPACE\u00a0\u00a0\u00a0\u00a0 NAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 READY\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0RESTARTS\u00a0\u00a0 AGE\ndefault\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 minio-operator-85ccdcfb6-r8g8b\u00a0\u00a0\u00a0\u00a0 1/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05m37s\n```", "```\n    DIRECT_CSI_DRIVES=data{1...4}\n    DIRECT_CSI_DRIVES_DIR=/mnt\n    KUBELET_DIR_PATH=/var/lib/kubelet\n    ```", "```\n    export $(cat default.env)\n    ```", "```\n    kubectl apply -k github.com/minio/direct-csi\n    ```", "```\n    kubenamespace/direct-csi created\n    storageclass.storage.k8s.io/direct.csi.min.io created\n    serviceaccount/direct-csi-min-io created\n    clusterrole.rbac.authorization.k8s.io/direct-csi-min-io created\n    clusterrolebinding.rbac.authorization.k8s.io/direct-csi-min-io created\n    configmap/direct-csi-config created\n    secret/direct-csi-min-io created\n    service/direct-csi-min-io created\n    deployment.apps/direct-csi-controller-min-io created\n    daemonset.apps/direct-csi-min-io created\n    csidriver.storage.k8s.io/direct.csi.min.io created\n    ```", "```\n    kubectl get pods \u2013n direct-csi\n    ```", "```\n    NAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0READY\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0RESTARTS\u00a0\u00a0 AGE\n    direct-csi-controller-min-io-cd598c4b-hn9ww\u00a0\u00a0 2/2\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09m\n    direct-csi-controller-min-io-cd598c4b-knvbn\u00a0\u00a0 2/2\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09m\n    direct-csi-controller-min-io-cd598c4b-tth6q\u00a0\u00a0 2/2\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09m\n    direct-csi-min-io-4qlt7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3/3\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09m\n    direct-csi-min-io-kt7bw\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3/3\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09m\n    direct-csi-min-io-vzdkv\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3/3\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09m\n    ```", "```\n    kubectl minio tenant create --name my-tenant --servers 2 --volumes 4 --capacity 1Gi -o > my-minio-tenant.yaml\n    ```", "```\n    kubectl minio tenant create --name my-tenant --servers 2 --volumes 4 --capacity 1Gi\n    ```", "```\n    apiVersion: minio.min.io/v1\n    kind: Tenant\n    metadata:\n    \u00a0\u00a0creationTimestamp: null\n    \u00a0\u00a0name: my-tenant\n    \u00a0\u00a0namespace: default\n    scheduler:\n    \u00a0\u00a0name: \"\"\n    spec:\n    \u00a0\u00a0certConfig:\n    \u00a0\u00a0\u00a0\u00a0commonName: \"\"\n    \u00a0\u00a0\u00a0\u00a0organizationName: []\n    \u00a0\u00a0\u00a0\u00a0dnsNames: []\n    \u00a0\u00a0console:\n    \u00a0\u00a0\u00a0\u00a0consoleSecret:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: my-tenant-console-secret\n    \u00a0\u00a0\u00a0\u00a0image: minio/console:v0.3.14\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0creationTimestamp: null\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: my-tenant\n    \u00a0\u00a0\u00a0\u00a0replicas: 2\n    \u00a0\u00a0\u00a0\u00a0resources: {}\n    \u00a0\u00a0credsSecret:\n    \u00a0\u00a0\u00a0\u00a0name: my-tenant-creds-secret\n    \u00a0\u00a0image: minio/minio:RELEASE.2020-09-26T03-44-56Z\n    \u00a0\u00a0imagePullSecret: {}\n    ```", "```\n     liveness:\n    \u00a0\u00a0\u00a0\u00a0initialDelaySeconds: 10\n    \u00a0\u00a0\u00a0\u00a0periodSeconds: 1\n    \u00a0\u00a0\u00a0\u00a0timeoutSeconds: 1\n    \u00a0\u00a0mountPath: /export\n    \u00a0\u00a0requestAutoCert: true\n    \u00a0\u00a0zones:\n    \u00a0\u00a0- resources: {}\n    \u00a0\u00a0\u00a0\u00a0servers: 2\n    \u00a0\u00a0\u00a0\u00a0volumeClaimTemplate:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0apiVersion: v1\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0kind: persistentvolumeclaims\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0creationTimestamp: null\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ReadWriteOnce\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 256Mi\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0status: {}\n    \u00a0\u00a0\u00a0\u00a0volumesPerServer: 2\n    status:\n    \u00a0\u00a0availableReplicas: 0\n    \u00a0\u00a0currentState: \"\"\n    ```", "```\n    zones:\n    \u00a0\u00a0- resources: {}\n    \u00a0\u00a0\u00a0\u00a0servers: 2\n    \u00a0\u00a0\u00a0\u00a0volumeClaimTemplate:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: data\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ReadWriteOnce\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 256Mi\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storageClassName: direct.csi.min.io\n    ```", "```\n    kubectl apply -f my-updated-minio-tenant.yaml\n    ```", "```\ntenant.minio.min.io/my-tenant created\nsecret/my-tenant-creds-secret created\nsecret/my-tenant-console-secret created\n```", "```\necho $(kubectl get secret my-tenant-console-secret -o=jsonpath='{.data.CONSOLE_ACCESS_KEY}' | base64 --decode)\n```", "```\necho $(kubectl get secret my-tenant-console-secret -o=jsonpath='{.data.CONSOLE_SECRET_KEY}' | base64 --decode)\n```", "```\nkubectl port-forward service/my-tenant-console 8081:9443\n```", "```\necho $(kubectl get secret my-tenant-creds-secret -o=jsonpath='{.data.accesskey}' | base64 --decode)\n```", "```\necho $(kubectl get secret my-tenant-creds-secret -o=jsonpath='{.data.secretkey}' | base64 --decode)\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: minio-mc\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: mc\n\u00a0\u00a0\u00a0\u00a0image: minio/mc\n\u00a0\u00a0\u00a0\u00a0command: [\"/bin/sh\", \"-c\", \"sleep 10000000s\"]\n\u00a0\u00a0restartPolicy: OnFailure\n```", "```\nkubectl apply -f minio-mc-pod.yaml\n```", "```\nKubectl exec -it minio-mc -- sh\n```", "```\nmc config host add my-minio https://<MINIO TENANT POD IP>:9000 --insecure\n```", "```\nAdded `my-minio` successfully.\n```", "```\nmc mb my-minio/my-bucket-2 --insecure\n```", "```\nBucket created successfully `my-minio/my-bucket-2`.\n```", "```\nmc mv test.txt my-minio/my-bucket-2 --insecure\n```", "```\n    helm repo add cockroachdb https://charts.cockroachdb.com/\n    ```", "```\n    \"cockroachdb\" has been added to your repositories\n    ```", "```\n    storage:\n    \u00a0\u00a0persistentVolume:\n    \u00a0\u00a0\u00a0\u00a0size: 2Gi\n    statefulset:\n    \u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0limits:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"1Gi\"\n    \u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"1Gi\"\n    conf:\n    \u00a0\u00a0cache: \"256Mi\"\n    \u00a0\u00a0max-sql-memory: \"256Mi\"\n    ```", "```\n    helm install cdb --values cockroach-db-values.yaml cockroachdb/cockroachdb\n    ```", "```\n    kubectl get po \n    ```", "```\n    NAMESPACE\u00a0\u00a0\u00a0\u00a0 NAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0READY\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RESTARTS\u00a0\u00a0 AGE\n    default\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cdb-cockroachdb-0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a057s\n    default\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cdb-cockroachdb-1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a056s\n    default\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cdb-cockroachdb-2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1/1\u00a0\u00a0\u00a0\u00a0 Running\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a056s\n    default\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cdb-cockroachdb-init-8p2s2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00/1\u00a0\u00a0\u00a0\u00a0 Completed\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a057s\n    ```", "```\n    kubectl run -it --rm cockroach-client \\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--image=cockroachdb/cockroach \\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--restart=Never \\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--command -- \\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0./cockroach sql --insecure --host=cdb-cockroachdb-public.default\n    ```", "```\nroot@cdb-cockroachdb-public.default:26257/defaultdb>\n```", "```\n    CREATE DATABASE mydb;\n    ```", "```\n    CREATE TABLE mydb.users (\n    \u00a0\u00a0\u00a0\u00a0id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    \u00a0\u00a0\u00a0\u00a0first_name STRING,\n    \u00a0\u00a0\u00a0\u00a0last_name STRING,\n    \u00a0\u00a0\u00a0\u00a0email STRING\n     );\n    ```", "```\n    INSERT INTO mydb.users (first_name, last_name, email)\n    \u00a0\u00a0VALUES\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0('John', 'Smith', 'jsmith@fake.com');\n    ```", "```\n    SELECT * FROM mydb.users;\n    ```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0| first_name | last_name |\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0email\n---------------------------------------+------------+-----------+------------------\n\u00a0\u00a0e6fa342f-8fe5-47ad-adde-e543833ffd28 | John\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 | Smith\u00a0\u00a0\u00a0\u00a0 | jsmith@fake.com\n(1 row)\n```", "```\n    helm repo add bitnami https://charts.bitnami.com/bitnami\n    ```", "```\n    auth:\n    \u00a0\u00a0user: user\n    \u00a0\u00a0password: test123\n    persistence:\n    \u00a0\u00a0enabled: false\n    ```", "```\n    helm install rabbitmq bitnami/rabbitmq --values values-rabbitmq.yaml\n    ```", "```\n    kubectl port-forward --namespace default svc/rabbitmq 15672:15672\n    ```"]