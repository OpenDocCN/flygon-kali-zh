["```\nFROM jeanblanchard/java:8\n\n```", "```\nMAINTAINER authors_name\n\n```", "```\nADD <source path or URL> <destination path >\n\n```", "```\nCOPY <source path or URL> <destination path >\n\n```", "```\nCOPY [\"<source path or URL>\" \"<destination path>\"]\n\n```", "```\nFROM ubuntu \nRUN apt-get update \nRUN apt-get install -y openjdk-8-jre \n\n```", "```\nFROM ubuntu \nRUN apt-get update \nRUN apt-get install -y openjdk-8-jre \nRUN apt-get install -y nodejs \n\n```", "```\nRUN apt-get update \\\n\n&& apt-get install -y openjdk-8-jre \\\n\n&& apt-get install -y nodejs \\\n\n&& apt-get clean\n\n```", "```\nFROM jeanblanchard/java:8\n\nCOPY target/rest-example-0.1.0.jar rest-example-0.1.0.jar\n\nCMD java -jar rest-example-0.1.0.jar\n\n```", "```\n$ docker build . -t rest-example\n\n```", "```\n$ docker image ls\n\n```", "```\n$ docker run -it rest-example\n\n```", "```\nFROM java:8 \n\nRUN apt-get update\n\nRUN apt-get install -y maven\n\nWORKDIR /app\n\nCOPY pom.xml /app/pom.xml\n\nCOPY src /app/src\n\nRUN [\"mvn\", \"package\"]\n\nCMD [\"/usr/lib/jvm/java-8-openjdk-amd64/bin/java\", \n\n\"-jar\", \"target/ rest-example-0.1.0.jar\"]\n\n```", "```\ndocker run ubuntu \"echo\" \"hello world\"\n\n```", "```\nENTRYPOINT [ \"sh\", \"-c\", \"echo $HOSTNAME\" ]\n\n```", "```\nFROM ubuntu \n\nENTRYPOINT [\"/bin/bash\"]\n\n```", "```\nFROM busybox \n\nENTRYPOINT [\"/bin/ping\"] \n\nCMD [\"localhost\"]\n\n```", "```\n$ docker build -t ping-example .\n\n```", "```\n$ docker run ping-example\n\n```", "```\n$ docker run ping-example www.google.com\n\n```", "```\nFROM jeanblanchard/java:8\n\nCOPY target/rest-example-0.1.0.jar rest-example-0.1.0.jar\n\nCMD java -jar rest-example-0.1.0.jar\n\nEXPOSE 8080\n\n```", "```\n$ docker run -p 8080:8080 -it rest-example\n\n```", "```\nVOLUME [\"/var/lib/tomcat8/webapps/\"]\n\nVOLUME /var/log/mongodb /var/log/tomcat\n\n```", "```\nFROM ubuntu \n\nVOLUME /var/myVolume\n\n```", "```\nLABEL \"key\"=\"value\"\n\n```", "```\nLABEL description=\"This is my \\\n\nmultiline description of the software.\"\n\n```", "```\nLABEL key1=\"value1\" key2=\"value2\" key3=\"value3\"\n\nLABEL key1=\"value1\" \\\n\nkey2=\"value2\" \\\n\nkey3=\"value3\"\n\n```", "```\nENV JAVA_HOME /var/lib/java8\n\n```", "```\nENV CONFIG_TYPE=file CONFIG_LOCATION=\"home/Jarek/my \\app/config.json\"\n\n```", "```\nENV PATH /var/lib/tomcat8/bin:$PATH\n\n```", "```\nENV TOMCAT_VERSION_MAJOR 8\n\nENV TOMCAT_VERSION 8.5.4\n\nRUN curl -SL http://apache.uib.no/tomcat/tomcat-$TOMCAT_VERSION_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz | tar zxvf apache-tomcat-$TOMCAT_VERSION.tar.gz -c /usr/Jarek/apache-tomcat-$TOMCAT_VERSION\n\nENV PATH /usr/Jarek/apache-tomcat-$TOMCAT_VERSION/bin:$PATH\n\n```", "```\nUSER tomcat\n\n```", "```\nRUN groupadd -r tomcat && useradd -r -g tomcat tomcat\n\n```", "```\n$ docker build --build-arg <variable name>=<value> .\n\n```", "```\nFROM ubuntu \n\nARG user=jarek\n\n```", "```\nONBUILD <INSTRUCTION>\n\n```", "```\n FROM maven:3.3-jdk-8-onbuild \n\n CMD [\"java\",\"-jar\",\"/usr/src/app/target/app-1.0-SNAPSHOT-jar-with-dependencies.jar\"] \n\n```", "```\n FROM maven:3-jdk-8\n\nRUN mkdir -p /usr/src/app\n\nWORKDIR /usr/src/app\n\nONBUILD ADD . /usr/src/app\n\nONBUILD RUN mvn install \n\n```", "```\nHEALTHCHECK --interval=<interval> --timeout=<timeout> CMD <command>\n\n```", "```\nHEALTHCHECK --interval=5m --timeout=2s --retries=3 CMD curl -f http://localhost/ping || exit 1\n\n```", "```\n<plugin>\n\n <groupId>io.fabric8</groupId>\n\n <artifactId>docker-maven-plugin</artifactId>\n\n <version>0.20.1</version>\n\n <configuration>\n\n <dockerHost>http://127.0.0.1:2375</dockerHost>\n\n <verbose>true</verbose>\n\n <images>\n\n <image>\n\n <name>rest-example:${project.version}</name>\n\n <build>\n\n <dockerFile>Dockerfile</dockerFile>\n\n <assembly>\n\n <descriptorRef>artifact</descriptorRef>\n\n </assembly>\n\n </build>\n\n </image>\n\n </images>\n\n </configuration>\n\n</plugin>\n\n```", "```\n<configuration>\n\n <images>\n\n <image>\n\n <name>rest-example:${project.version}</name>\n\n <alias>rest-example</alias>\n\n <build>\n\n <from>jeanblanchard/java:8</from>\n\n <assembly>\n\n <descriptorRef>artifact</descriptorRef>\n\n </assembly>\n\n <cmd>java -jar \n\n maven/${project.name}-${project.version}.jar</cmd>\n\n </build>\n\n </image>\n\n </images>\n\n</configuration>\n\n```", "```\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n    <project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n      <modelVersion>4.0.0</modelVersion>\n\n      <groupId>pl.finsys</groupId>\n\n      <artifactId>rest-example</artifactId>\n\n      <version>0.1.0</version>\n\n      <parent>\n\n        <groupId>org.springframework.boot</groupId>\n\n        <artifactId>spring-boot-starter-\n\n         parent</artifactId>\n\n        <version>1.5.2.RELEASE</version>\n\n      </parent>\n\n      <dependencies>\n\n        <dependency>\n\n          <groupId>org.springframework.boot</groupId>\n\n          <artifactId>spring-boot-starter-web</artifactId>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>org.springframework.boot</groupId>\n\n          <artifactId>spring-boot-starter-data-\n\n           jpa</artifactId>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>org.hibernate</groupId>\n\n          <artifactId>hibernate-validator</artifactId>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>org.hsqldb</groupId>\n\n          <artifactId>hsqldb</artifactId>\n\n          <scope>runtime</scope>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>io.springfox</groupId>\n\n          <artifactId>springfox-swagger2</artifactId>\n\n          <version>2.6.1</version>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>io.springfox</groupId>\n\n          <artifactId>springfox-swagger-ui</artifactId>\n\n          <version>2.5.0</version>\n\n        </dependency>\n\n        <!--test dependencies-->\n\n        <dependency>\n\n          <groupId>org.springframework.boot</groupId>\n\n          <artifactId>spring-boot-starter-\n\n           test</artifactId>\n\n          <scope>test</scope>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>org.springframework.boot</groupId>\n\n          <artifactId>spring-boot-starter-\n\n           test</artifactId>\n\n          <scope>test</scope>\n\n        </dependency>\n\n        <dependency>\n\n          <groupId>com.jayway.jsonpath</groupId>\n\n          <artifactId>json-path</artifactId>\n\n          <scope>test</scope>\n\n        </dependency>\n\n      </dependencies>\n\n      <properties>\n\n        <java.version>1.8</java.version>\n\n      </properties>\n\n      <build>\n\n        <plugins>\n\n          <plugin>\n\n            <groupId>org.springframework.boot</groupId>\n\n            <artifactId>spring-boot-maven-\n\n             plugin</artifactId>\n\n          </plugin>\n\n          <plugin>\n\n            <groupId>org.springframework.boot</groupId>\n\n            <artifactId>spring-boot-maven-\n\n            plugin</artifactId>\n\n          </plugin>\n\n          <plugin>\n\n            <groupId>io.fabric8</groupId>\n\n            <artifactId>docker-maven-plugin</artifactId>\n\n            <version>0.20.1</version>\n\n            <configuration>\n\n              <images>\n\n                <image>\n\n                  <name>rest-example:${project.version}\n\n                  </name>\n\n                  <alias>rest-example</alias>\n\n                  <build>\n\n                    <from>openjdk:latest</from>\n\n                    <assembly>\n\n                      <descriptorRef>artifact</descriptorRef>\n\n                    </assembly>\n\n                    <cmd>java -jar maven/${project.name}-${project.version}.jar</cmd>\n\n                  </build>\n\n                  <run>\n\n                    <wait>\n\n                      <log>Hello World!</log>\n\n                    </wait>\n\n                  </run>\n\n                </image>\n\n              </images>\n\n            </configuration>\n\n          </plugin>\n\n        </plugins>\n\n      </build>\n\n      <repositories>\n\n        <repository>\n\n          <id>spring-releases</id>\n\n          <url>https://repo.spring.io/libs-release</url>\n\n        </repository>\n\n      </repositories>\n\n      <pluginRepositories>\n\n        <pluginRepository>\n\n          <id>spring-releases</id>\n\n          <url>https://repo.spring.io/libs-release</url>\n\n        </pluginRepository>\n\n      </pluginRepositories>\n\n    </project> \n\n```", "```\n$ mvn clean package docker:build\n\n```", "```\n <plugin> \n\n <configuration> \n\n    [...] \n\n    <volumes> \n\n    <volume> \n\n    <name>myVolume</name> \n\n    <driver>local</driver> \n\n    <opts> \n\n    <type>tmpfs</type> \n\n    <device>tmpfs</device> \n\n    <o>size=100m,uid=1000</o> \n\n    </opts> \n\n    <labels> \n\n    <volatileData>true</volatileData> \n\n    </labels> \n\n    </volume> \n\n    </volumes> \n\n    </configuration> \n\n  </plugin> \n\n```"]