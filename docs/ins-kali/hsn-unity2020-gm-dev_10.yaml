- en: '*Chapter 10*: Sound and Music Integration'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：声音和音乐集成'
- en: 'We just achieved good enough graphics quality, but we are missing an important
    part of the game aesthetics: the sound. Often relegated to being a final step
    in game development, sound is one of those things that if it''s there, you won''t
    notice its presence, but if you don''t have it, you will feel that something is
    missing. It will help you to reinforce the ambience you want in your game and
    must match the graphics setting.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚达到了足够好的图形质量，但我们缺少游戏美学的一个重要部分：声音。声音经常被排在游戏开发的最后一步，但它是那种如果存在，你不会注意到它的存在，但如果你没有它，你会感觉到缺少了什么。它将帮助你加强你在游戏中想要的氛围，并且必须与图形设置相匹配。
- en: 'In this chapter, we will examine the following sound concepts:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下声音概念：
- en: Importing audio
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入音频
- en: Integrating and mixing audio
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成和混合音频
- en: Importing audio
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入音频
- en: As with graphic assets, it is important to properly set up the import settings
    of audio assets, which can be resource-intensive if not done properly.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 与图形资产一样，正确设置音频资产的导入设置非常重要，如果不正确的话可能会消耗大量资源。
- en: 'In this section, we will examine the following audio importing concepts:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论以下音频导入概念：
- en: Audio types
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 音频类型
- en: Configuring import settings
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置导入设置
- en: Let's start by discussing the different kinds of audio we can use.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始讨论我们可以使用的不同类型的音频。
- en: Audio types
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频类型
- en: 'There are different types of audio present in video games, which are the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 视频游戏中存在不同类型的音频，包括以下内容：
- en: '**Music**: Music used to enhance the player''s experience according to the
    situation.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音乐**：用于根据情况增强玩家体验的音乐。'
- en: '**Sound effects (SFX)**: Sounds that happen as a reaction to player or NPC
    actions, such as clicking a button, walking, opening a door, and shooting a gun.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音效（SFX）**：作为对玩家或NPC行为的反应发生的声音，例如点击按钮、行走、打开门和开枪。'
- en: '**Ambient sound**: A game that only has sounds as reactions to events would
    feel empty. If you are recreating an apartment in the middle of the city, even
    if the player is just idle in the middle of the room doing nothing, lots of sounds
    should be heard, and the sources of most of them will be outside the room, such
    as an aeroplane flying overhead, a construction site two blocks away, and cars
    in the street. Creating objects that won''t be seen is a waste of resources. Instead,
    we can place individual sounds all over the scene to recreate the desired ambience,
    but that would be resource-intensive, requiring lots of CPU and RAM to achieve
    believable results. Considering that these sounds usually are in the second plane
    of the user''s attention, we can just combine them all into a single looping track
    and just play one audio, and that''s exactly what ambient sound is. If you want
    to create a café scene, you can simply go to a real café and record a few minutes
    of audio, using that as your ambient sound.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境声音**：一个只有作为事件反应的声音的游戏会感觉空荡。如果你正在重建城市中的公寓，即使玩家只是闲置在房间中什么也不做，应该听到很多声音，大部分声音的来源都在房间外，比如飞机在头顶飞过，两个街区外的建筑工地，和街上的汽车。创建看不见的对象是资源的浪费。相反，我们可以在整个场景中放置单独的声音来重新创建所需的氛围，但这将消耗大量的CPU和RAM来实现可信的结果。考虑到这些声音通常是用户注意力的第二个平面，我们可以将它们全部合并成一个循环轨道，只播放一个音频，这正是环境声音。如果你想创建一个咖啡馆场景，你可以简单地去一个真正的咖啡馆录制几分钟的音频，将其用作你的环境声音。'
- en: 'For almost all games, we will need at least one music track, one ambient track,
    and several SFX to start the production of the audio. As always, we have different
    sources of audio assets, but we will use the Asset Store. It has three audio categories
    to search for the assets we need:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于几乎所有的游戏，我们至少需要一条音乐曲目，一条环境曲目和几个SFX来开始音频的制作。和往常一样，我们有不同的音频资产来源，但我们将使用资产商店。它有三个音频类别，可以搜索到我们需要的资产：
- en: '![Figure 10.1 – Audio categories in the Asset Store'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.1 - 资产商店中的音频类别'
- en: '](img/Figure_10.01_B14199.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.01_B14199.jpg)'
- en: Figure 10.1 – Audio categories in the Asset Store
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 - 资产商店中的音频类别
- en: 'In my case, I also used the search bar to further filter the categories, searching
    for weather to find a rain effect. Sometimes, you can''t find the exact audio
    separately; in such cases, you will need to dig in **Packs and Libraries**, so
    have patience here. In my case, I picked the three packages you can see in the
    following figure, but importing just some of the included sounds, all of them
    would weight a lot in the project. For ambience, I picked rain. Then, I picked
    **Music – Sad Hope** for music, and for SFX, I picked one gun sound effect package
    for our future Player''s Hero Character. Of course, you can pick other packages
    to better suit your game''s needs:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况下，我还使用了搜索栏来进一步过滤类别，搜索天气以找到雨的效果。有时，你无法单独找到确切的音频；在这种情况下，你需要深入**包和库**，所以在这里要有耐心。在我的情况下，我选择了你可以在下图中看到的三个包，但是导入其中一些包含的声音，所有这些声音在项目中都会占用很大的空间。对于环境声音，我选择了雨。然后，我选择了**音乐
    - 伤感希望**作为音乐，对于SFX，我选择了一个枪声音效包，用于我们未来的玩家英雄角色。当然，你可以选择其他包以更好地满足你的游戏需求：
- en: '![Figure 10.2 – The packages for our game'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.2 - 我们游戏的包'
- en: '](img/Figure_10.02_B14199.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.02_B14199.jpg)'
- en: Figure 10.2 – The packages for our game
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 - 我们游戏的包
- en: Please remember that those exact packages might not available at the moment
    you read this. In that case, you can either download other ones, or pick the files
    I used from the GitHub repo. Now that we have the necessary audio packages, let's
    discuss how to import them.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，当你阅读这篇文章时，这些确切的包可能不可用。在这种情况下，你可以下载其他包，或者从GitHub仓库中选择我使用的文件。现在我们有了必要的音频包，让我们讨论如何导入它们。
- en: Configuring import settings
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置导入设置
- en: 'We have several import settings we can tweak, but the problem is that we need
    to consider the usage of the audio to properly set it up, so let''s see the ideal
    settings for each case. In order to see the import settings, as always, you can
    select the asset and see it in the Inspector panel, as in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几个可以调整的导入设置，但问题是我们需要考虑音频的使用情况才能正确设置它，所以让我们看看每种情况的理想设置。要查看导入设置，像往常一样，您可以选择资产并在检查器面板中查看它，如下面的截图所示：
- en: '![Figure 10.3 – Audio import settings'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.3 - 音频导入设置'
- en: '](img/Figure_10.03_B14199.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.03_B14199.jpg)'
- en: Figure 10.3 – Audio import settings
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 - 音频导入设置
- en: Let's discuss the most important ones, starting with **Force To Mono**. Some
    audio may come with stereo channels, meaning that we have one sound for the left
    ear and another one for the right ear. This means that one piece of audio can
    actually contain two different audio tracks. Stereo sound is useful for different
    effects and instrument spatialization in the case of music, so we want that in
    those scenarios, but there are other scenarios where stereo is not useful. Consider
    3D sound effects such as a shooting gun or some walking-pace steps. In those cases,
    we need the sound to be heard in the direction to the source. If the shooting
    of a gun happened to my left, I need to hear it coming from my left. In these
    cases, we can convert stereo audio to mono audio by checking the **Force To Mono**
    checkbox in the audio import settings. This will make Unity combine the two channels
    into a single one, reducing the size of the audio usually to almost half its size
    (sometimes more, sometimes less, depending on various aspects).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论最重要的几个，首先是**强制转换为单声道**。一些音频可能带有立体声声道，这意味着我们左耳和右耳分别有一个声音。这意味着一段音频实际上可以包含两个不同的音轨。立体声音对于不同的效果和乐器空间化在音乐的情况下是有用的，所以在这些情况下我们希望有这种效果，但也有其他情况下立体声并不有用。考虑3D音效，比如射击枪声或步行声音。在这些情况下，我们需要听到声音来自源头的方向。如果枪声发生在我的左边，我需要听到它来自我的左边。在这些情况下，我们可以通过在音频导入设置中勾选**强制转换为单声道**复选框来将立体声音转换为单声道音频。这将使Unity将两个声道合并为一个声道，将音频的大小通常减少到几乎一半（有时更多，有时更少，这取决于各种因素）。
- en: 'You can verify the impact of that and other settings at the bottom of the Audio
    Asset inspector, where you can see the imported audio size:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在音频资产检查器底部验证该设置和其他设置的影响，您可以在那里看到导入的音频大小：
- en: '![Figure 10.4 – Left: audio imported without Force to Mono. Right: same audio
    with Force To Mono'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.4 - 左：未强制转换为单声道的音频。右：相同的音频强制转换为单声道'
- en: '](img/Figure_10.04_B14199.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.04_B14199.jpg)'
- en: 'Figure 10.4 – Left: audio imported without Force to Mono. Right: same audio
    with Force To Mono'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4 - 左：未强制转换为单声道的音频。右：相同的音频强制转换为单声道
- en: 'The next setting to discuss, and an important one at that, is **Load Type**.
    In order to play some audio, Unity needs to read the audio from disk, decompress,
    and then play it. Load Type changes the way those three processes are handled.
    We have the following three options here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要讨论的设置是**加载类型**，这是一个重要的设置。为了播放一些音频，Unity需要从磁盘读取音频，解压缩，然后播放。加载类型改变了这三个过程的处理方式。我们在这里有以下三个选项：
- en: '**Decompress on Load**: The most memory-intensive option. This mode will make
    Unity load the audio uncompressed in memory when the scene is loaded. That means
    that the audio will take lots of space in RAM because we have the uncompressed
    version loaded. The advantage of using this mode is that playing the audio is
    easier because we have the raw audio data ready to play in RAM.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加载时解压缩**：最占用内存的选项。这种模式将使Unity在场景加载时将音频解压缩到内存中。这意味着音频将占用大量RAM空间，因为我们已经加载了未压缩的版本。使用这种模式的优势在于播放音频更容易，因为我们已经准备好在RAM中播放原始音频数据。'
- en: '**Streaming**: The total opposite of **Decompress on Load**. This mode never
    loads audio in RAM. Instead, while the audio is playing, Unity reads a piece of
    the audio asset from disk, decompresses it, plays it, and repeats, running this
    process once for each piece of audio playing in **Streaming**. This means that
    this mode will be CPU - intensive, but will consume almost zero bytes of RAM.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流式传输**：与**加载时解压缩**完全相反。这种模式从不在RAM中加载音频。相反，当音频播放时，Unity会从磁盘读取音频资产的一部分，解压缩它，播放它，然后重复这个过程，对于每个正在**流式传输**播放的音频部分运行一次。这意味着这种模式将会占用大量CPU资源，但几乎不会消耗RAM字节。'
- en: '**Compressed in Memory**: The middle ground. This mode will load the audio
    from disk when the scene is loaded but will keep it compressed in memory. When
    Unity needs to play the audio, it will just take a piece from RAM, decompress
    it, and play it. Remember that reading pieces of the audio asset from RAM is considerably
    faster than reading from disk.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存中的压缩**：中间地带。这种模式将在场景加载时从磁盘加载音频，但将保持其在内存中的压缩状态。当Unity需要播放音频时，它只会从RAM中取一部分，解压缩并播放。请记住，从RAM中读取音频资产的部分比从磁盘读取要快得多。'
- en: 'Maybe if you are an experienced developer you can easily determine which mode
    is better suited for which kind of audio, but if this is your first encounter
    with video games, it may sound confusing, so let''s discuss the best modes for
    different cases:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 也许如果您是一位经验丰富的开发者，您可以轻松确定哪种模式更适合哪种类型的音频，但如果这是您第一次接触视频游戏，可能会感到困惑，所以让我们讨论不同情况下的最佳模式：
- en: '**Frequent short audio**: This could be a shooting gun or the sound of footsteps,
    which are sounds that last less than 1 second but can occur in several instances
    and play at the same time. In such cases, we can use Decompress On Load. Uncompressed
    short audio won''t have a huge size difference from its compressed version. Also,
    since this is the most performant CPU option, having several instances won''t
    have a huge impact on performance.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**频繁的短音频**：这可能是射击枪声或脚步声等持续时间不到1秒的声音，但可能会在多个实例中发生并同时播放。在这种情况下，我们可以使用加载时解压缩。未压缩的短音频与其压缩版本的大小差异不大。而且，由于这是性能最佳的CPU选项，有多个实例不会对性能产生巨大影响。'
- en: '**Infrequent large audio**: This includes music, ambient sound, and dialog.
    These kinds of audio usually have just one instance playing, and they are usually
    big. Those cases are better suited for Streaming mode because having them compressed
    or decompressed in RAM can have a huge impact in low-end devices such as mobile
    devices (on PCs, we can use Compressed in Memory sometimes). A CPU can handle
    having two or three bits of audio playing in Streaming, but try to have no more
    than that.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不经常的大型音频**：这包括音乐、环境声音和对话。这些类型的音频通常只有一个实例在播放，而且它们通常很大。这些情况更适合于流媒体模式，因为在低端设备（如移动设备）中对它们进行压缩或解压缩可能会产生巨大影响（在PC上，有时我们可以使用内存中的压缩）。CPU可以处理两三个音频位在流媒体中播放，但尽量不要超过这个数量。'
- en: '**Frequent medium audio**: This includes pre-made voice chat dialog in multiplayer
    games, character emotes, long explosions, or any audio that is more than 500 KB
    (that is not a strict rule – this number depends a lot on the target device).
    Having this kind of audio decompressed in RAM can have a noticeable impact on
    performance, but due to the fact that this audio is fairly frequently used, we
    can have it compressed in memory. Their relatively smaller size means they usually
    won''t make a huge difference in our game and we will avoid wasting CPU resources
    in reading from disk.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**频繁的中等音频**：这包括多人游戏中预制的语音对话、角色表情、长时间的爆炸声音，或者任何超过500KB的音频（这不是一个严格的规则——这个数字在很大程度上取决于目标设备）。将这种类型的音频解压缩到RAM中可能会对性能产生明显影响，但由于这种音频相对较小，通常不会对我们的游戏产生巨大影响，并且我们将避免浪费CPU资源从磁盘读取。'
- en: There are other cases to consider, but those can be extrapolated based on the
    previous ones. Remember that the previous analysis was made by taking into account
    the requirements of the standard game, but this can vary a lot according to your
    game and your target device. Maybe you are making a game that won't consume lots
    of RAM but is pretty intensive in terms of CPU resources, in which case you can
    just put everything in Decompress on Load. It's important to consider all aspects
    of your game and to balance your resources accordingly.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他情况需要考虑，但这些可以根据前面的情况进行推断。请记住，前面的分析是根据标准游戏的要求进行的，但这可能会根据您的游戏和目标设备而有很大不同。也许你正在制作一个不会消耗大量RAM但在CPU资源方面非常密集的游戏，在这种情况下，你可以将所有内容都放在加载时解压缩。重要的是要考虑游戏的所有方面，并根据资源进行平衡。
- en: 'Finally, another thing to consider is the compression format, which will change
    the way Unity will encode the audio in the published game. Different compression
    formats will give different compression ratios in exchange for less fidelity with
    the original audio, or higher decompression times, and all this varies a lot based
    on the audio patterns and length. We have three compression formats:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有一件要考虑的事情是压缩格式，这将改变Unity在发布游戏时对音频进行编码的方式。不同的压缩格式将以不同的压缩比率换取与原始音频的保真度较低或更高的解压缩时间，所有这些都根据音频模式和长度而有很大不同。我们有三种压缩格式：
- en: '**PCM**: The uncompressed format will give you the highest audio quality, with
    no noise artifacts, but will result in a bigger asset file size.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PCM**：无压缩格式将为您提供最高的音频质量，没有噪音伪影，但会导致更大的资产文件大小。'
- en: '**ADPCM**: Compressing audio this way reduces file size and yields a fast uncompressing
    process, but this can introduce noise artifacts that can be noticeable in certain
    types of audio.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ADPCM**：以这种方式压缩音频可以减小文件大小并产生快速的解压缩过程，但这可能会引入在某些类型的音频中会明显的噪音伪影。'
- en: '**Vorbis**: A high-quality compression format that will yield almost zero artifacts
    but takes longer to decompress, so playing Vorbis audio will be slightly more
    intensive than for other formats. It also provides a quality slider to select
    the exact amount of compression aggressiveness.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vorbis**：一种高质量的压缩格式，几乎不会产生任何伪影，但解压时间较长，因此播放Vorbis音频会比其他格式稍微更加密集。它还提供了一个质量滑块，可以选择精确的压缩程度。'
- en: Which one should you use? Again, that depends on the features of your audio.
    Short smooth audio can use PCM, while long noisy audio can use ADPCM; the artifacts
    introduced by this format will be hidden in the audio itself. Maybe long smooth
    audio where compression artifacts are noticeable could benefit from using Vorbis.
    Sometimes, it's just a matter of trial and error. Maybe use Vorbis by default
    and when performance is reduced, try to switch to ADPCM, and if that causes glitches,
    just switch to PCM. Of course, the problem here is being sure that the audio processing
    is really what's responsible for the performance issues – maybe switching all
    audio to ADPCM and checking whether that made a difference is a good way to detect
    that, but a better approach would be to use the Profiler, a performance measurement
    tool that we will see later in this book.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该使用哪一个？同样，这取决于你的音频特性。短平滑的音频可以使用PCM，而长嘈杂的音频可以使用ADPCM；这种格式引入的伪影将被隐藏在音频本身中。也许长平滑的音频在压缩伪影明显时使用Vorbis会更好。有时，这只是一个试错的问题。也许默认使用Vorbis，当性能降低时，尝试切换到ADPCM，如果那导致故障，就切换到PCM。当然，问题在于确保音频处理确实是导致性能问题的原因——也许将所有音频切换到ADPCM并检查是否有所不同是检测的一个好方法，但更好的方法是使用Profiler，这是一个性能测量工具，我们将在本书后面看到。
- en: We have other settings, such as Sample Rate Setting, that again, with a little
    trial and error, you can use to detect the best setting.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他设置，比如采样率设置，再次，通过一些试错，你可以找到最佳设置。
- en: 'I have set up the audio that I downloaded from the Asset Store as you can see
    in the following screenshots. The first one shows how I set up the music and ambient
    audio files (large files):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经设置了从资产商店下载的音频，如下截图所示。第一张截图显示了我是如何设置音乐和环境音频文件的（大文件）：
- en: '![Figure 10.5 – Music and ambient settings'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.5 – 音乐和环境设置'
- en: '](img/Figure_10.05_B14199.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.05_B14199.jpg)'
- en: Figure 10.5 – Music and ambient settings
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – 音乐和环境设置
- en: Should be stereo (Force To Mono unchecked), use **Streaming Load Type** because
    they are large and will have just one instance playing and **ADPCM Compression
    Format** because Vorbis didn't result in a huge size difference.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 应该是立体声（未选中强制转换为单声道），使用**流式加载类型**，因为它们很大，只会有一个实例播放，并且使用**ADPCM压缩格式**，因为Vorbis并没有产生巨大的大小差异。
- en: 'This second screenshot shows how I set up the SFX files (small files):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个截图显示了我如何设置SFX文件（小文件）：
- en: '![Figure 10.6 – Shooting SFX settings'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.6–射击SFX设置'
- en: '](img/Figure_10.06_B14199.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.06_B14199.jpg)'
- en: Figure 10.6 – Shooting SFX settings
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6–射击SFX设置
- en: Will be a 3D sound, so Force To Mono should be checked.. Will be short, so Decompress
    on Load Load Type works better. Vorbis Compression Format reduced the ADPCM size
    by more than a half
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 将是3D声音，因此应该选中强制转换为单声道。将是短暂的，因此在加载时解压缩加载类型效果更好。Vorbis压缩格式将ADPCM大小减少了一半以上
- en: Now that we have our pieces of audio properly configured, we can start to use
    them in our scene.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的音频片段已经正确配置，我们可以开始在场景中使用它们了。
- en: Integrating and mixing audio
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成和混音音频
- en: We can just drag our bits of audio into our scene to start using it, but we
    can dig a little bit further to explore the best ways to configure them to each
    possible scenario.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '我们可以简单地将我们的音频片段拖到场景中开始使用它，但是我们可以深入挖掘一下，探索将它们配置到每种可能的场景中的最佳方法。 '
- en: 'In this section, we will examine the following audio integration concepts:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将研究以下音频集成概念：
- en: Using 2D and 3D AudioSources
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用2D和3D AudioSources
- en: Using audio mixers
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用音频混音器
- en: Let's start exploring AudioSources, objects that are in charge of audio playback.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始探索AudioSources，这些对象负责音频播放。
- en: Using 2D and 3D AudioSources
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用2D和3D AudioSources
- en: '**AudioSources** are components that can be attached to GameObjects. They are
    responsible for emitting sound in our game based on **AudioClips**, which would
    be the audio assets we downloaded previously. It''s important to differentiate
    an AudioClip from an **AudioSource**: we can have a single - explosion AudioClip,
    but lots of AudioSources playing it, simulating several explosions. In this way,
    an AudioSource can be seen as an instance of an AudioClip.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**AudioSources**是可以附加到GameObject的组件。它们负责根据**AudioClips**发出游戏中的声音，这些将是我们之前下载的音频资产。重要的是要区分**AudioClip**和**AudioSource**：我们可以有一个单一的爆炸**AudioClip**，但有很多**AudioSources**播放它，模拟多个爆炸。这样，**AudioSource**可以被视为**AudioClip**的一个实例。'
- en: 'The simplest way to create an **AudioSource** is to pick an **AudioClip** (an
    audio asset) and drag it to the **Hierarchy** window. Try to avoid dragging the
    audio into an existing object; instead, drag it between objects, so Unity will
    create a new object with the **AudioSource** instead of adding it to an existing
    object (sometimes, you want an existing object to have the **AudioSource**, but
    let''s keep things simple for now):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 创建**AudioSource**的最简单方法是选择一个**AudioClip**（音频资产）并将其拖到**Hierarchy**窗口中。尽量避免将音频拖到现有对象中；相反，将其拖动到对象之间，这样Unity将创建一个带有**AudioSource**的新对象，而不是将其添加到现有对象中（有时，您可能希望现有对象具有**AudioSource**，但现在让我们保持简单）：
- en: '![Figure 10.7 – Dragging an AudioClip to the Hierarchy window between objects'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.7–将音频剪辑拖到层次结构窗口之间的对象'
- en: '](img/Figure_10.07_B14199.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.07_B14199.jpg)'
- en: Figure 10.7 – Dragging an AudioClip to the Hierarchy window between objects
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7–将音频剪辑拖到层次结构窗口之间的对象
- en: 'The following screenshot shows the **AudioSource** generated by dragging the
    music asset to the scene. You can see that the **AudioClip** field has a reference
    to the dragged audio:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了通过将音乐资产拖到场景中生成的**AudioSource**。您可以看到**AudioClip**字段引用了拖动的音频：
- en: '![Figure 10.8 – AudioSource configured to play our music asset'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.8–配置为播放我们的音乐资产的AudioSource'
- en: '](img/Figure_10.08_B14199.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.08_B14199.jpg)'
- en: Figure 10.8 – AudioSource configured to play our music asset
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8–配置为播放我们的音乐资产的AudioSource
- en: 'As you can see, the **AudioSource** has several settings, so let''s review
    the common ones in the following list:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，**AudioSource**有几个设置，让我们在以下列表中回顾常见的设置：
- en: '**Play On Awake**: Determines whether the audio starts playing automatically
    when the game starts. We can uncheck that and play the audio via scripting, perhaps
    when the player shoots or jumps (more on that in Part 3 of the book).'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**播放时唤醒**：确定游戏启动时音频是否自动开始播放。我们可以取消选中该选项，并通过脚本播放音频，也许是玩家射击或跳跃时（有关详细信息，请参阅本书的第3部分）。'
- en: '**Loop**: Will make the audio repeat automatically when it finishes playing.
    Remember to always check this setting on the music and ambient audio clips. It
    is easy to forget this because those tracks are long and we may never reach the
    end of them in our tests.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**循环**：当音频播放完毕时会自动重复。请记住始终在音乐和环境音频剪辑上检查此设置。很容易忘记这一点，因为这些曲目很长，我们可能永远不会在测试中达到它们的结尾。'
- en: '**Volume**: Controls the audio intensity.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音量**：控制音频强度。'
- en: '**Pitch**: Controls the audio velocity. This is useful for simulating effects
    such as slow motion or the increasing revolutions of an engine.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音调**：控制音频速度。这对于模拟慢动作或引擎转速增加等效果非常有用。'
- en: '**Spatial Blend**: Controls whether our audio is 2D or 3D. In 2D mode, the
    audio will be heard at the same volume at all distances, while 3D will make the
    audio volume decrease as the distance from the camera increases.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间混合**：控制我们的音频是2D还是3D。在2D模式下，音频将在所有距离上以相同的音量听到，而3D将使音频音量随着距离增加而减小。'
- en: 'In the case of our music track, I have configured it as shown in the following
    screenshot. You can drag the ambient rain sound to add it to the scene and use
    the same settings as these because we want the same ambient effect in all our
    scenes. In complex scenes, though, you can have different 3D ambient sounds scattered
    all over the scene to change the sound according to the current environment:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的音乐曲目的情况下，我已经按照下面的截图所示进行了配置。您可以拖动环境雨声以将其添加到场景中，并使用与这些相同的设置，因为我们希望所有场景中都具有相同的环境效果。但是，在复杂的场景中，您可以在整个场景中散布不同的3D环境声音，以根据当前环境改变声音：
- en: '![Figure 10.9 – Music and ambient settings. This will loop, is set to Play
    On Awake, and is 2D'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.9 – 音乐和环境设置。这将循环播放，设置为唤醒时播放，是2D'
- en: '](img/Figure_10.09_B14199.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.09_B14199.jpg)'
- en: Figure 10.9 – Music and ambient settings. This will loop, is set to Play On
    Awake, and is 2D
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9 – 音乐和环境设置。这将循环播放，设置为唤醒时播放，是2D
- en: 'Now, you can drag the shooting effect and configure it as shown in the following
    screenshot. As you can see, the audio, in this case, won''t loop because we want
    the shooting effect to play once per bullet. Remember that, in our case, the bullet
    will be a prefab that will spawn each time we press the shoot key, so each bullet
    will have its own **AudioSource** that will play when the bullet is created. Also,
    the bullet is set to a 3D **Spatial Blend**, meaning that the effect will be transmitted
    through different speakers based on the position of the Audio Source relative
    to the position of the camera:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以拖动射击效果并按照以下截图所示进行配置。正如您所看到的，这种情况下音频不会循环，因为我们希望射击效果每发一颗子弹就播放一次。请记住，在我们的情况下，子弹将是一个预制件，每次按下射击键时都会生成一个子弹，因此每颗子弹都将有自己的**AudioSource**在创建子弹时播放。此外，子弹设置为3D
    **空间混合**，这意味着效果将根据音频源相对于摄像机位置的位置而通过不同的扬声器传输：
- en: '![Figure 10.10 – Sound effect setting. This won''t loop and is a 3D sound'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.10 – 音效设置。这不会循环，是一个3D声音'
- en: '](img/Figure_10.10_B14199.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.10_B14199.jpg)'
- en: Figure 10.10 – Sound effect setting. This won't loop and is a 3D sound
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10 – 音效设置。这不会循环，是一个3D声音
- en: Something to consider in the case of 3D sounds is the **Volume Rolloff** setting,
    which is inside the 3D sound settings section. This setting controls how the volume
    decays over distance to the camera. By default, you can see that this setting
    is set to **Logarithmic Rolloff**, the way real-life sound works, but sometimes
    you don't want real-life sound decay, because sounds in real life are usually
    heard slightly even if the source is very far away.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理3D声音时需要考虑的一点是**音量衰减**设置，它位于3D声音设置部分。此设置控制声音随着到相机的距离而衰减的方式。默认情况下，您可以看到此设置设置为**对数衰减**，这是现实生活中声音的工作方式，但有时您不希望现实生活中的声音衰减，因为现实生活中的声音通常即使源头非常遥远也会被轻微听到。
- en: 'One option is to switch to **Linear Rolloff** and configure the exact maximum
    distance with the **Max Distance** setting:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一个选项是切换到**线性衰减**并使用**最大距离**设置来配置确切的最大距离：
- en: '![Figure 10.11 – A 3D sound with a maximum distance of 10 metres, using Linear
    Rolloff'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.11 – 最大距离为10米的3D声音，使用线性衰减'
- en: '](img/Figure_10.11_B14199.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.11_B14199.jpg)'
- en: Figure 10.11 – A 3D sound with a maximum distance of 10 metres, using Linear
    Rolloff
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11 – 最大距离为10米的3D声音，使用线性衰减
- en: Now that we can configure individual pieces of audio, let's see how to apply
    effects to groups of audio instances using an **Audio Mixer**.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以配置单独的音频片段，让我们看看如何使用**音频混音器**对音频实例组应用效果。
- en: Using an Audio Mixer
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用音频混音器
- en: 'We will have several audio instances playing all over our game: the footsteps
    of characters, shooting, bonfires, explosions, rain, and so on. Controlling exactly
    which sounds are supposed to sound louder or lower depending on the case and applying
    effects to reinforce certain situations, such as being stunned due to a nearby
    explosion, is called audio mixing – the process of mixing several sounds together
    in a cohesive and controlled way.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在整个游戏中播放几个音频实例：角色的脚步声，射击声，篝火声，爆炸声，雨声等等。根据情况精确控制哪些声音应该更响或更轻，并应用效果来加强某些情况，比如因附近爆炸而受到震惊，这就是音频混音
    - 将几种声音以一种连贯和受控的方式混合在一起的过程。
- en: In Unity, we can create an Audio Mixer, an asset that we can use to define groups
    of sounds. All changes to a group will affect all sounds inside it, by raising
    or lowering the volume, perhaps, or by applying an effect. You can have SFX and
    music groups to control sounds separately – as an example, you could lower the
    SFX volume while in the **Pause** menu but not the music volume. Also, groups
    are organized in a hierarchy, where a group can also contain other groups, so
    a change in a group will also apply changes to its sub-groups. As a matter of
    fact, every group you create will always be a child group of the master group,
    the group that will affect every single sound in the game (that uses that mixer).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中，我们可以创建一个音频混音器，这是一个我们可以用来定义声音组的资产。对组的所有更改都将影响其中的所有声音，可能是通过提高或降低音量，或者应用效果。您可以拥有SFX和音乐组来分别控制声音
    - 例如，您可以在**暂停**菜单中降低SFX音量，但不降低音乐音量。此外，组是以层次结构组织的，其中一个组还可以包含其他组，因此对组的更改也将应用于其子组。事实上，您创建的每个组都将始终是主组的子组，这个组将影响游戏中使用该混音器的每一个声音。
- en: 'Let''s create a mixer with SFX and music groups:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个带有SFX和音乐组的混音器：
- en: In the Project window, using the `Main Mixer`.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目窗口中，使用`主混音器`。
- en: Double-click the created asset to open the **Audio Mixer** window:![Figure 10.12
    – Audio Mixer window
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击创建的资产以打开**音频混音器**窗口：![图10.12 – 音频混音器窗口
- en: '](img/Figure_10.12_B14199.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.12_B14199.jpg)'
- en: Figure 10.12 – Audio Mixer window
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12 – 音频混音器窗口
- en: Click the `SFX`:![Figure 10.13 – Group creation
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`SFX`：![图10.13 – 组创建
- en: '](img/Figure_10.13_B14199.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.13_B14199.jpg)'
- en: Figure 10.13 – Group creation
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.13 – 组创建
- en: Click on the `Music`. Remember to select the **Master** group before clicking
    the **+** button, because if another group is selected, the new group will be
    a child of that one. Anyway, you can rearrange a group child-parent relationship
    by dragging in the **Hierarchy** window:![Figure 10.14 – The Master, SFX, and
    Music groups
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`音乐`。记得在点击**+**按钮之前选择**主**组，因为如果选择了其他组，新组将成为该组的子组。无论如何，您可以通过在**层次结构**窗口中拖动来重新排列组的子父关系：![图10.14
    – 主、SFX和音乐组
- en: '](img/Figure_10.14_B14199.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.14_B14199.jpg)'
- en: Figure 10.14 – The Master, SFX, and Music groups
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.14 – 主、SFX和音乐组
- en: Select the **Music** GameObject in the **Hierarchy** window and look for the
    **AudioSource** component in the Inspector window.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**层次**窗口中选择**音乐**GameObject，并在检视器窗口中查找**AudioSource**组件。
- en: Click the circle to the right of the **Output** property and select the **Music**
    group in the **Audio Mixer** group selector. This will make that **AudioSource**
    be affected by the settings on the specified Mixer group:![Figure 10.15 – Making
    an AudioSource belong to an Audio Mixer group
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**输出**属性右侧的圆圈，并在**音频混音器**组选择器中选择**音乐**组。这将使该**AudioSource**受到指定混音器组的设置的影响：![图10.15
    - 使一个AudioSource属于一个音频混音器组
- en: '](img/Figure_10.15_B14199.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.15_B14199.jpg)'
- en: Figure 10.15 – Making an AudioSource belong to an Audio Mixer group
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.15 - 使一个AudioSource属于一个音频混音器组
- en: If you play the game now, you can see how the volume meters in the Audio Mixer
    start to move, indicating that the music is going through the **Music** group.
    You will also see that the **Master** group volume meter is also moving, indicating
    that the sound that is passing through the **Music** group is also passing through
    the **Master** group (the parent of the Music group) before going to the sound
    card of your computer:![Figure 10.16 – Group volume levels
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您现在玩游戏，您会看到音频混音器中的音量表开始移动，表明音乐正在通过**音乐**组。您还会看到**主**组音量表也在移动，表明通过**音乐**组传递的声音也会通过**主**组（**音乐**组的父级）传递到计算机的声卡：![图10.16
    - 组音量级别
- en: '](img/Figure_10.16_B14199.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.16_B14199.jpg)'
- en: Figure 10.16 – Group volume levels
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.16 - 组音量级别
- en: Repeat *steps 5* and *6* for the ambient and shooting sounds to make them belong
    to the **SFX** group.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤5*和*6*，使环境和射击声音属于**SFX**组。
- en: Now that we have separated our sounds into groups, we can start adjusting the
    groups' settings. But, before doing that, we need to take into account the fact
    that we won't want the same settings all the time, as in the previously mentioned
    pause menu case, where the SFX volume should be lower. To handle those scenarios,
    we can create snapshots, which are presets of our mixer that can be activated
    via scripting during our game. We will deal with the scripting steps in Part 3
    of this book, but we can create a normal snapshot for the in-game settings and
    a pause snapshot for the pause menu settings.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将我们的声音分成组，我们可以开始调整组的设置。但是，在这样做之前，我们需要考虑这样一个事实，即我们不希望始终使用相同的设置，就像之前提到的暂停菜单情况一样，其中SFX音量应该更低。为了处理这些情况，我们可以创建快照，这些快照是我们混音器的预设，可以在游戏过程中通过脚本激活。我们将在本书的第3部分处理脚本步骤，但是我们可以为游戏设置创建一个正常快照和一个暂停快照。
- en: 'If you check the **Snapshots** list, you will see that a single snapshot has
    already been created – that can be our normal snapshot. So, let''s create a pause
    snapshot by doing the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您检查**快照**列表，您会看到已经创建了一个快照 - 那可以是我们的正常快照。因此，让我们通过以下方式创建一个暂停快照：
- en: Click on the `Pause`. Remember to stop the game to edit the mixer or click the
    **Edit in Playmode** option to allow Unity to change the mixer during play. If
    you do the latter, remember that the changes will persist when you stop the game,
    unlike changes to GameObjects. Actually, if you change other assets during Play
    mode, those changes will also persist – only GameObject changes are reverted (and
    some other specific cases that we won't discuss right now):![Figure 10.17 – Snapshot
    creation
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`暂停`。记得停止游戏以编辑混音器，或者单击**在Playmode中编辑**选项允许Unity在播放过程中更改混音器。如果选择后者，请记住更改将在停止游戏时保留，不像对游戏对象的更改。实际上，如果您在播放模式下更改其他资产，这些更改也将保留
    - 只有游戏对象的更改会被还原（以及我们现在不讨论的一些其他特定情况）：![图10.17 - 快照创建
- en: '](img/Figure_10.17_B14199.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.17_B14199.jpg)'
- en: Figure 10.17 – Snapshot creation
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.17 - 快照创建
- en: Select the **Pause** snapshot and lower the volume slider of the **SFX** group:![Figure
    10.18 – Lowering the volume of the Pause snapshot
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**暂停**快照并降低**SFX**组的音量滑块：![图10.18 - 降低暂停快照的音量
- en: '](img/Figure_10.18_B14199.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.18_B14199.jpg)'
- en: Figure 10.18 – Lowering the volume of the Pause snapshot
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18 - 降低暂停快照的音量
- en: Play the game and hear how the sound is still at its normal volume. That's because
    the original snapshot is the default one – you can see that by checking for the
    star to its right. You can right-click any snapshot and make it the default one
    using the **Set as Start Snapshot** option.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 玩游戏，听听声音是否仍然保持正常音量。这是因为原始快照是默认的 - 您可以通过检查其右侧的星号来看到。您可以右键单击任何快照，并使用**设置为起始快照**选项将其设置为默认快照。
- en: Click on **Edit in** **Playmode** to enable **Audio Mixer** modification during
    runtime.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**在Playmode中编辑**以在运行时启用**音频混音器**修改。
- en: Click on the **Pause** snapshot to enable it and hear how the **Shooting** and
    **Ambient** sound volumes have decreased.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**暂停**快照以启用它，并听听**射击**和**环境**声音的音量是否已经减小。
- en: 'As you can see, one of the main uses of the mixer is to control group volume,
    especially when you see that the intensity of a group''s volume is exceeding the
    0 mark, indicating that the group is too loud. Anyway, there are other uses for
    the mixer, such as applying effects. If you''ve played any war game, you will
    have noticed that whenever a bomb explodes nearby, you hear the sound differently
    for a moment, as if the sound were located in another room. That can be accomplished
    using an effect called Low Pass, which blocks high-frequency sounds, and that''s
    exactly what happens with our ears in those scenarios: the stress of the high-volume
    sound generated by an explosion irritates our ears, making them less sensitive
    to high frequencies for a while.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，混音器的主要用途之一是控制组音量，特别是当您看到组音量超过0标记时，表明该组太响了。无论如何，混音器还有其他用途，比如应用效果。如果您玩过任何战争游戏，您会注意到每当附近有炸弹爆炸时，您会在一段时间内以不同的方式听到声音，就好像声音在另一个房间里一样。这可以通过一种称为低通的效果来实现，它会阻止高频声音，这正是在这些情景中发生的：爆炸产生的高音量声音刺激了我们的耳朵，使它们在一段时间内对高频率的声音变得不那么敏感。
- en: 'We can add effects to any channel and configure them according to the current
    snapshot, just as we did for the volume, by doing the following:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以向任何通道添加效果，并根据当前快照进行配置，就像我们为音量所做的那样，方法如下：
- en: Click on the **Add…** button at the bottom of the **Master** group and select
    **Lowpass Simple**:![Figure 10.19 – The effects list of a channel
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**主**组底部的**添加...**按钮，并选择**低通简单**：![图10.19 - 通道的效果列表
- en: '](img/Figure_10.19_B14199.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.19_B14199.jpg)'
- en: Figure 10.19 – The effects list of a channel
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.19 - 通道的效果列表
- en: Select the normal snapshot (the one called **Snapshot**) to modify it.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择正常快照（名为**快照**）进行修改。
- en: Select the **Master** group and look at the Inspector panel, where you will
    see settings for the channel and its effects.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**主**组并查看检查器面板，在那里您将看到通道及其效果的设置。
- en: Set the `22000`); this will disable the effect.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`22000`）；这将禁用该效果。
- en: Repeat *steps 3* and *4* for the **Pause** snapshot; we don't want this effect
    in that snapshot.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对**暂停**快照重复*步骤3*和*4*；我们不希望在该快照中出现这种效果。
- en: Create a new snapshot called **Bomb Stun** and select it to edit it.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**炸弹震慑**的新快照并选择它进行编辑。
- en: Set `1000`:![Figure 10.20 – Setting the cutoff frequency of the Lowpass Simple
    effect
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`1000`：![图10.20 - 设置低通简单效果的截止频率
- en: '](img/Figure_10.20_B14199.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.20_B14199.jpg)'
- en: Figure 10.20 – Setting the cutoff frequency of the Lowpass Simple effect
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.20 - 设置低通简单效果的截止频率
- en: Play the game and change between snapshots to check the difference.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 玩游戏并在快照之间切换以检查差异。
- en: Aside from the Low Pass filter, you can apply several other filters, such as
    Echo, to create an almost dreamy effect, or a combination of Send, Receive, and
    Duck to make a group lower its volume based on the intensity of another group
    (for instance, you may want to lower SFX volume when dialog is happening). I invite
    you to try those and other effects and check the results to identify potential
    uses.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 除了低通滤波器，您还可以应用其他几种滤波器，比如回声，以创建一种近乎梦幻的效果，或者使用发送、接收和减弱的组合来根据另一个组的强度降低其音量（例如，您可能希望在对话发生时降低SFX音量）。我邀请您尝试这些和其他效果，并检查结果以确定潜在用途。
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed how to import and integrate sounds, considering
    the memory impact of them and applying effects to generate different scenarios.
    Sound is a big part of achieving the desired game experience, so take the proper
    amount of time to get it right.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何导入和集成声音，考虑它们的内存影响并应用效果以生成不同的场景。声音是实现所需游戏体验的重要组成部分，因此请花足够的时间来做好它。
- en: Now that we have covered almost all of the vital aesthetic aspects in our game,
    let's create another form of visual communication, the user interface.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了游戏中几乎所有重要的美学方面，让我们创建另一种形式的视觉沟通，用户界面。
