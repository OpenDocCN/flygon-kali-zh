- en: Chapter 1. Getting Started with C#
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章 入门C#
- en: In this chapter, we will talk about the general state of the industry at the
    time when C# was first introduced, and some of the reasons that it is a great
    language. By the end of the chapter, you will have a fully working development
    environment that is ready to go through all of the examples in this book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将讨论C#首次推出时行业的一般状况，以及它成为一种优秀语言的一些原因。在本章结束时，你将拥有一个完全可用的开发环境，准备好运行本书中的所有示例。
- en: Origins
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 起源
- en: As every comic book super hero has an origin story, so does every professional
    in every walk of life. Sharing origin stories with your colleagues is great because
    it can serve as a point of reflection about how things were in the past, how they
    have evolved, and where they may go in the future. My own personal story originated
    in high school in the late nineties, watching my brother, who was five years my
    elder and in college, learning C++. With a few arcane instructions, complex programs
    came to life and were ready for action. I was fascinated.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个漫画超级英雄都有一个起源故事，每个行业的专业人士也是如此。与同事分享起源故事很棒，因为它可以作为对过去情况的反思，以及对事物如何演变和未来可能走向的思考。我的个人故事起源于上世纪90年代末的高中时期，当时我看着比我大五岁、正在上大学的哥哥学习C++。通过一些神秘的指令，复杂的程序变得生动起来，准备好行动。我着迷了。
- en: This first glimpse of power was just the beginning. Around the same time, a
    friend of mine in class started working on a game, again written in C++, in the
    style of the NES game, *The Legend of Zelda*. Although I had briefly peeked at
    old QBasic games such as *Gorillas* in the past, I was amazed at the quality that
    he was able to achieve in his small demo. I decided to start learning how to program
    in earnest, and seeing as everyone I knew was using C++, that was the default
    choice for my first programming language.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这种力量的初次体验只是开始。大约在同一时间，我班上的一个朋友开始制作一款游戏，同样是用C++编写，风格类似于NES游戏《塞尔达传说》。虽然我曾经短暂地瞥见过旧的QBasic游戏，比如《Gorillas》，但我对他在小型演示中所取得的质量感到惊讶。我决定认真学习如何编程，考虑到我认识的每个人都在使用C++，这成为了我第一门编程语言的默认选择。
- en: The first program I ever wrote was a very simple financial budgeting program.
    Having just recently started working at my first job in high school, I was keenly
    aware of the new responsibilities involved in the management of money, and so
    I wanted to write a program to help me better manage my funds. First, it asked
    for the amount of my paycheck in dollars, and then for a list of bills that I
    had to pay.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我写的第一个程序是一个非常简单的财务预算程序。当时我刚刚开始在高中的第一份工作，我非常清楚管理金钱所涉及的新责任，所以我想写一个程序来帮助我更好地管理我的资金。首先，它要求输入我的工资金额，然后输入我必须支付的账单清单。
- en: After a few basic calculations, it gave me a report of how much disposable income
    would remain after my responsibilities were taken care of. As far as programs
    go, it was not the most complex piece of software, but it helped me learn the
    basics, such as loops, conditional statements, storage of an indeterminate list
    of items, and performing aggregate operations on an array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一些基本的计算，它给我提供了一个报告，告诉我在照顾好我的责任之后还剩下多少可支配收入。就程序而言，它并不是最复杂的软件，但它帮助我学会了一些基础知识，比如循环、条件语句、存储不确定数量项目的列表，以及对数组执行聚合操作。
- en: It was a great personal triumph, but after some initial exploration with C++,
    I found myself hitting a bit of a brick wall. C++ was difficult to fully grasp
    as someone brand new to programming (and in high school). Not only did I have
    to learn about the basics of software, but I had to be constantly aware of the
    memory that I was using. Eventually, I discovered the tools of web development
    which were, to me at the time, much simpler to understand. I had moved from one
    end of the complexity spectrum to the other.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个巨大的个人胜利，但在初步探索C++后，我发现自己遇到了一些困难。对于一个刚接触编程的人（还在上高中），C++很难完全掌握。我不仅需要学习软件的基础知识，还必须时刻注意我使用的内存。最终，我发现了当时对我来说更简单的网页开发工具。我从复杂性谱的一端移动到了另一端。
- en: 'Much of the software landscape at that time was dominated by computer languages
    that sat in one of three camps: low level system languages such as C++, which
    offered the most in terms of performance and flexibility, but were also difficult
    and complex to master; interpreted languages such as JavaScript and VBScript,
    whose instructions were evaluated at runtime, were very easy to use and learn,
    but could not match the performance of low level languages; and finally a group
    of languages that come somewhere in the middle.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当时的软件领域大部分被计算机语言所主导，这些语言可以分为三大类：低级系统语言，比如C++，在性能和灵活性方面提供了最多的功能，但也很难和复杂；解释性语言，比如JavaScript和VBScript，其指令在运行时被评估，非常易于使用和学习，但无法与低级语言的性能相匹敌；最后是一组介于两者之间的语言。
- en: This middle of the road, which encompassed languages such as Java and Visual
    Basic, offered some of the best of both worlds, along with the worst of both worlds.
    In these languages you have a **garbage collector** , which means that when you
    create an object you do not have to explicitly release the used memory when you
    are done. They are also compiled to an intermediate language (for example, p-code
    for VB, and byte code for Java) which are then executed in a Virtual Machine running
    natively on the target platform. Because this intermediate language is similar
    to machine code, it is able to execute much faster than the purely interpreted
    languages. This performance, however, was still not really a match for a properly
    tuned C++ program, so Java and Visual Basic programs were often regarded as slow
    languages in comparison with C++.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这条中间路线涵盖了诸如Java和Visual Basic等语言，既提供了最好的一面，也带来了最糟糕的一面。在这些语言中，你有一个**垃圾收集器**，这意味着当你创建一个对象时，你不必在完成后显式释放已使用的内存。它们还被编译成中间语言（例如，VB的p代码和Java的字节码），然后在目标平台上本地运行的虚拟机中执行。由于这种中间语言类似于机器代码，它能够比纯解释语言执行得更快。然而，这种性能仍然不是真正与经过适当调整的C++程序相匹敌的，因此与C++相比，Java和Visual
    Basic程序通常被认为是慢语言。
- en: Despite some of these drawbacks, the benefits of having a managed memory environment
    were evident to Microsoft. Because the programmer did not have to worry about
    complex concepts such as pointers and manual memory management, programs could
    be written faster and with fewer bugs. **Rapid Application Development** (**RAD**
    for short) seemed to be the future direction for Microsoft's platforms.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在一些缺点，但对于微软来说，拥有一个受管理的内存环境的好处是显而易见的。因为程序员不必担心指针和手动内存管理等复杂概念，程序可以更快地编写，并且出现更少的错误。**快速应用程序开发**（简称**RAD**）似乎是微软平台的未来方向。
- en: In the late nineties, they developed a version of the Java Virtual Machine,
    which by many accounts was faster than some of the other implementations available
    on the market. Unfortunately due to their inclusion of some proprietary extensions,
    and the fact that they did not completely implement the Java 1.1 standard, they
    ran into some legal troubles in 1997\. This resulted ultimately in Microsoft discontinuing
    the development on their implementation of Java, and ultimately removing it from
    their platform in 2001.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在90年代末，他们开发了一个Java虚拟机的版本，据许多人说比市场上其他实现更快。不幸的是，由于他们包含了一些专有扩展，并且他们没有完全实现Java 1.1标准，他们在1997年遇到了一些法律问题。这最终导致微软停止了他们对Java实现的开发，并最终在2001年将其从他们的平台中移除。
- en: Although it is impossible to know if what happened next was a direct result
    of the legal action against the Microsoft Java Virtual Machine, what we do know
    is that in 1999 Microsoft started working on a new programming language, which
    was named **Cool** (**C-like Object Oriented Language**).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们无法知道接下来发生的事情是否是对微软Java虚拟机的法律行动的直接结果，但我们知道的是，1999年微软开始研发一种名为**Cool**（**类C对象导向语言**）的新编程语言。
- en: C# is born
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C#诞生
- en: 'And then it happened; in 2000, Microsoft announced that they were working on
    a new programming language. The language which was originally called Cool, was
    unveiled at the Professional Developers Conference 2000 in Orlando, FL as **C#**.
    Some of the highlights of this new language are:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后发生了这件事；在2000年，微软宣布他们正在开发一种新的编程语言。这种最初被称为Cool的语言在2000年奥兰多的专业开发者大会上作为**C#**公布。这种新语言的一些亮点是：
- en: It is based on the syntax of the C family of programming languages, so the syntax
    was very familiar for anyone who had experience with C++, Java, or JavaScript.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它基于C系列编程语言的语法，因此对于有C++、Java或JavaScript经验的人来说，语法非常熟悉。
- en: Memory management of C# is similar to that of Java and Visual Basic, with a
    very powerful garbage collector. This meant that the users could focus on the
    content of their application, rather than worrying about boilerplate memory management
    code.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C#的内存管理类似于Java和Visual Basic，具有非常强大的垃圾收集器。这意味着用户可以专注于他们应用程序的内容，而不必担心样板式的内存管理代码。
- en: The C# compiler along with a static type system means that certain classes of
    bugs can be caught at compile time, rather than having to deal with them at runtime
    as you would in JavaScript. This is a **Just-In-Time** compiler, which means that
    the code would be compiled to a native executable at runtime, and optimized for
    the operating system that is executing the code. Performance is an important goal
    of the new platform.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C#编译器以及静态类型系统意味着某些类别的错误可以在编译时捕获，而不必像在JavaScript中那样在运行时处理它们。这是一个**即时编译器**，这意味着代码将在运行时编译为本机可执行文件，并针对执行代码的操作系统进行优化。性能是新平台的一个重要目标。
- en: This language has a strong and extensive **base class library**, which means
    that many pieces of functionality would be built right into the framework. Aside
    from some industry standard libraries such as Boost, there were not very many
    common C/C++ libraries, which resulted in people often rewriting common functionality.
    Java, on the other hand, had a great many libraries, but they were written by
    a diverse set of developers, which meant that consistency in functionality and
    style was a problem.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种语言具有强大且广泛的**基类库**，这意味着许多功能块将直接内置到框架中。除了一些行业标准库，如Boost，没有很多常见的C/C++库，这导致人们经常重写常见功能。另一方面，Java有很多库，但它们是由不同的开发人员编写的，这意味着功能和风格的一致性是一个问题。
- en: It also has interoperability with other languages that worked on the **Common
    Language Runtime** (**CLR**). So a single program could use functionality written
    in different languages, thus using each language for what it was best at.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它还与其他在**公共语言运行时**（**CLR**）上运行的语言具有互操作性。因此，一个程序可以使用用不同语言编写的功能，从而为每种语言使用其最擅长的功能。
- en: Microsoft submitted the specification to the ISO working group. This opened
    the door to a vibrant open source community around the framework, because it meant
    that there would always be a standard to work against. A popular open source implementation
    of the .NET Framework and C# called **Mono** lets you run your code on different
    platforms.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软向ISO工作组提交了规范。这为框架周围的充满活力的开源社区打开了大门，因为这意味着总会有一个标准可供参考。一个名为**Mono**的流行开源实现了.NET
    Framework和C#，让你可以在不同的平台上运行你的代码。
- en: Although none of the elements described in this list were particularly new,
    C# aimed to take the best aspects of programming languages that came before, and
    incorporate them, namely the strength and power of C++, the simplicity of JavaScript,
    and the ease of hosting of VBScript/ASP, among other things.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个列表中描述的元素都不是特别新的，但C#的目标是吸收以前的编程语言的最佳特点，包括C++的强大和功能、JavaScript的简单性以及VBScript/ASP的易于托管等。
- en: People coming from ANY language (C, C++, or Java) could be productive in C#
    with little effort. C# found the sweet spot where productivity, features, and
    the learning curve all intersected.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 任何语言（C、C++或Java）的人都可以很轻松地在C#中提高生产力。C#找到了生产力、功能和学习曲线的完美交汇点。
- en: Over the next decade, the language would go on to evolve a very attractive set
    of features that make it easier and faster to write great programs. Now in its
    fifth iteration, the C# language has become more expressive and powerful with
    features, such as **Language Integrated Queries** (**LINQ**), **Task Parallel
    Library** (**TPL**), a **Dynamic Language Runtime** (**DLR**), and asynchronous
    programming features. What's more, with the Mono framework, you can not only target
    Windows, but also every other mainstream platform such as Linux, Mac OS, Android,
    iOS, and even game consoles such as the Playstation Vita.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的十年里，这种语言将继续发展出一套非常有吸引力的功能，使编写优秀的程序变得更加容易和快速。现在在其第五个版本中，C#语言已经变得更加表达力和强大，具有**语言集成查询**（**LINQ**）、**任务并行库**（**TPL**）、**动态语言运行时**（**DLR**）和异步编程功能等特性。更重要的是，通过Mono框架，你不仅可以针对Windows，还可以针对其他主流平台，如Linux、Mac
    OS、Android、iOS，甚至游戏主机，如Playstation Vita。
- en: Whether you have been writing C# for the last decade, or are just picking it
    up now, this book will take you through all of the features of the latest version
    5.0\. We will also explore the evolution and history of C# so that you can understand
    why certain features developed the way they did, and how you can use them to their
    full potential.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你过去十年是否一直在写C#，还是刚刚开始学习，这本书都会带你了解最新版本5.0的所有功能。我们还将探讨C#的演变和历史，以便你了解为什么某些功能会以这种方式发展，以及如何充分利用它们。
- en: Before we begin though, we need to configure your computer to be able to compile
    all of the samples. This chapter will guide you through installing everything
    you need to go through every example in this book.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，在我们开始之前，我们需要配置你的计算机，以便能够编译所有的示例。本章将指导你安装所有你需要的东西，以便你能够完成本书中的每个示例。
- en: The tools
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具
- en: 'Whenever you approach a new programming language, or a tool, there are several
    questions that you can ask yourself in order to quickly become proficient in that
    environment, such as:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你接触一个新的编程语言或工具时，你可以问自己几个问题，以便快速熟练掌握这个环境，比如：
- en: How do you build a program, or otherwise prepare it for deployment?
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你如何构建一个程序，或者为部署做好准备？
- en: How do you debug a program? Quickly figuring out what the problem is, and where
    it is when there is one. This is just as important as writing the program in the
    first place.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你如何调试一个程序？快速找出问题所在以及问题出现的位置。这和一开始编写程序一样重要。
- en: In the following sections, we will review several tools that are available to
    you in order to get a development environment up and running on your local machine.
    These options vary across a number of different licensing terms and cost structures.
    No matter your situation or preferences, you will able to get a development environment
    up and running and you will be able to answer the previous questions by the end
    of the chapter.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将回顾一些可用的工具，以便在你的本地计算机上建立一个开发环境。这些选项在许多不同的许可条款和成本结构之间变化。无论你的情况或偏好如何，你都能够建立一个开发环境，并且在本章结束时你将能够回答之前的问题。
- en: Visual Studio
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Visual Studio
- en: Microsoft provides the de facto compiler and development environment for the
    C# language. Although the compiler is available as a command-line executable since
    the first release of the .NET Framework, most developers will stay within the
    confines of Visual Studio, which is Microsoft's **Integrated Development Environment**
    (**IDE**).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 微软为C#语言提供了事实上的编译器和开发环境。尽管自.NET Framework首次发布以来，编译器就作为一个命令行可执行文件可用，但大多数开发人员会留在Visual
    Studio的范围内，这是微软的**集成开发环境**（**IDE**）。
- en: Full versions of Visual Studio
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Visual Studio的完整版本
- en: Microsoft's full commercial offerings of Visual Studio come in several different
    versions, each with a cumulative number of features as you move up the ladder.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 微软的Visual Studio完整商业版本有几个不同的版本，每个版本都有累积的功能数量，随着你的提升而增加。
- en: '**Professional**: This is the base commercial package. It allows you to build
    all available projects, in all available languages. In the context of C#, some
    of the project types available are ASP.NET WebForms, ASP.NET MVC, Windows 8 App,
    Windows Phone, Silverlight, Library, Console, along with a robust testing framework.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专业版**：这是基本的商业套餐。它允许你在所有可用的语言中构建所有可用的项目。在C#的上下文中，一些可用的项目类型包括ASP.NET WebForms、ASP.NET
    MVC、Windows 8应用、Windows Phone、Silverlight、库、控制台，以及一个强大的测试框架。'
- en: '**Premium**: In this version, all professional features are included, in addition
    to the code metrics, expanded testing tools, architecture diagramming, lab management,
    and project management features.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级版**：在这个版本中，除了包括所有专业功能外，还包括了代码度量、扩展测试工具、架构图、实验室管理和项目管理功能。'
- en: '**Ultimate**: This version includes code clone analysis, more testing tools
    (including Microsoft Fakes), and IntelliTrace, in addition to all the features
    of the previous levels.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ultimate**：此版本包括代码克隆分析、更多测试工具（包括Microsoft Fakes）和IntelliTrace，以及所有先前级别的功能。'
- en: Check out these versions at [http://www.microsoft.com/visualstudio/11/enus/products/visualstudio](http://www.microsoft.com/visualstudio/11/enus/products/visualstudio).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在[http://www.microsoft.com/visualstudio/11/enus/products/visualstudio](http://www.microsoft.com/visualstudio/11/enus/products/visualstudio)上查看这些版本。
- en: Licensing
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 许可证
- en: There are several different options for licensing the full version of Visual
    Studio.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 完整版本的Visual Studio有几种不同的许可证选项。
- en: '**MSDN Subscription**: The Microsoft Developer Network provides a subscription
    service where you can pay an annual fee to gain access to versions of Visual Studio.
    Additionally, you can get an MSDN Subscription as part of Microsoft''s MVP program,
    which rewards the active community members in the development community. You can
    find more information about purchasing an MSDN Subscription at [https://msdn.microsoft.com/en-us/subscriptions/buy/buy.aspx](https://msdn.microsoft.com/en-us/subscriptions/buy/buy.aspx).'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MSDN订阅**：微软开发人员网络提供订阅服务，您可以支付年费以获得Visual Studio的各个版本。此外，您可以作为微软MVP计划的一部分获得MSDN订阅，该计划奖励开发社区中的活跃成员。您可以在[https://msdn.microsoft.com/en-us/subscriptions/buy/buy.aspx](https://msdn.microsoft.com/en-us/subscriptions/buy/buy.aspx)找到有关购买MSDN订阅的更多信息。'
- en: '**BizSpark**: If you are creating a startup, Microsoft offers the BizSpark
    program to give you access to Microsoft software (including Visual Studio) at
    no cost for three years. After your graduation date, you keep the licenses that
    you''ve downloaded over the course of the program, and get discounts on MSDN Subscriptions,
    in addition to other alumni benefits. BizSpark is a great option for any entrepreneur
    that wants to use the Microsoft technology stack. Find out if you qualify for
    the BizSpark program at [http://www.microsoft.com/bizspark](http://www.microsoft.com/bizspark).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BizSpark**：如果您正在创建一家初创公司，微软提供BizSpark计划，让您在三年内免费获得Microsoft软件（包括Visual Studio）的访问权限。毕业后，您可以保留在计划过程中下载的许可证，并获得MSDN订阅的折扣，以及其他校友福利。BizSpark是任何想要使用微软技术堆栈的企业家的绝佳选择。在[http://www.microsoft.com/bizspark](http://www.microsoft.com/bizspark)上查看您是否符合BizSpark计划的资格。'
- en: '**DreamSpark**: Students can enroll in the DreamSpark program, which lets you
    download Visual Studio Professional (in addition to other applications and servers).
    As long as you are a student in a valid academic institution, you will have access
    to everything you need to develop applications using C#.Students. Sign up today
    at [https://www.dreamspark.com/](https://www.dreamspark.com/).'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DreamSpark**：学生可以参加DreamSpark计划，该计划允许您下载Visual Studio Professional（以及其他应用程序和服务器）。只要您是有效学术机构的学生，您就可以访问使用C#编写应用程序所需的一切。立即在[https://www.dreamspark.com/](https://www.dreamspark.com/)注册。'
- en: '**Individual and Volume licensing**: If none of the previous options for the
    commercial version of Visual Studio are appropriate, then you can always purchase
    licenses directly from Microsoft or various resellers at [http://www.microsoft.com/visualstudio/en-us/buy/small-midsize-business](http://www.microsoft.com/visualstudio/en-us/buy/small-midsize-business).'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个人和批量许可**：如果之前的商业版Visual Studio的选项都不合适，那么您可以直接从微软或各种经销商购买许可证，网址为[http://www.microsoft.com/visualstudio/en-us/buy/small-midsize-business](http://www.microsoft.com/visualstudio/en-us/buy/small-midsize-business)。'
- en: Express
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Express
- en: The **Visual Studio Express** product line is a nearly fully featured version
    of Visual Studio that is free of cost. Anyone can download these products and
    begin learning and developing at no charge.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**Visual Studio Express**产品系列是一个几乎完整功能的Visual Studio版本，而且是免费的。任何人都可以下载这些产品并开始学习和开发，而无需付费。'
- en: 'The available versions are as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的版本如下：
- en: '**Visual Studio Express 2012 for Windows 8**: This is for creating Metro style
    applications for Windows 8'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Express 2012 for Windows 8**：用于创建Windows 8的Metro样式应用程序'
- en: '**Visual Studio Express 2012 for Windows Phone**: This lets you write programs
    for Microsoft''s Windows Phone devices'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Express 2012 for Windows Phone**：这让您为微软的Windows Phone设备编写程序。'
- en: '**Visual Studio Express 2012 for Web**: All web applications can be built using
    this version of Visual Studio, from ASP.NET (forms and MVC), to Azure hosted projects'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Express 2012 for Web**：所有Web应用程序都可以使用这个版本的Visual Studio构建，从ASP.NET（表单和MVC）到Azure托管项目'
- en: '**Visual Studio Express 2012 for Desktop**: Applications that target the *classic*
    Windows 8 Desktop environment can be built with this version.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Express 2012 for Desktop**：可以使用这个版本构建针对*经典*Windows 8桌面环境的应用程序。'
- en: 'It''s a common misconception that Visual Studio Express may only be used for
    non-commercial projects, but this is not the case. You are entirely free to develop
    and release a commercial product while still adhering to the EULA. The only limitations
    are technical, as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 人们普遍误解Visual Studio Express只能用于非商业项目，但事实并非如此。您完全可以在遵守最终用户许可协议的情况下开发和发布商业产品。唯一的限制是技术上的，如下所示：
- en: Express versions of Visual Studio are limited by vertical stack, meaning you
    have to install a separate product for each project type that is supported (Web,
    desktop, phone, and so on). This is hardly a huge limitation though, and would
    only be a burden in the most complex of solutions.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio的Express版本受垂直堆栈的限制，这意味着您必须为每种受支持的项目类型（Web、桌面、手机等）安装单独的产品。不过，这几乎不是一个巨大的限制，在最复杂的解决方案中才会成为负担。
- en: There are no plugins. There are many productivity enhancing plugins that are
    available for the full version of Visual Studio, so for some users this exclusion
    can be a big deal. However, the good news is that one of the most popular plugins
    in recent memory, **NuGet**, is now being shipped with all versions of Visual
    Studio 2012\. NuGet helps you manage your project's library dependencies. You
    can browse through the NuGet catalog and add open source third-party libraries,
    in addition to libraries from Microsoft.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有插件。对于全版本的Visual Studio，有许多提高生产力的插件可用，因此对于一些用户来说，这种排除可能是一个大问题。然而，好消息是，最近记忆中最受欢迎的插件之一，**NuGet**，现在已经随Visual
    Studio 2012的所有版本一起发布。NuGet帮助您管理项目的库依赖关系。您可以浏览NuGet目录，并添加开源第三方库，以及来自Microsoft的库。
- en: The express versions of Visual Studio can be downloaded from [http://www.microsoft.com/visualstudio/11/en-us/products/express](http://www.microsoft.com/visualstudio/11/en-us/products/express).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio的Express版本可以从[http://www.microsoft.com/visualstudio/11/en-us/products/express](http://www.microsoft.com/visualstudio/11/en-us/products/express)下载。
- en: Using Visual Studio
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Visual Studio
- en: 'Regardless of which version of Visual Studio you decide to use, getting started
    is very simple once the product has been installed. The following are the steps:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您决定使用哪个版本的Visual Studio，一旦产品安装完成，入门都非常简单。以下是步骤：
- en: Launch Visual Studio, or if you are using Express, launch Visual Studio Express
    for Desktop.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Visual Studio，或者如果您使用Express版本，则启动Visual Studio Express for Desktop。
- en: Create a new project by clicking on **File** | **New Project…**.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**文件** | **新建项目...**来创建一个新项目。
- en: Choose **Console Application** from **Installed** | **Templates** | **Visual
    C#**.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**已安装** | **模板** | **Visual C#**中选择**控制台应用程序**。
- en: Give the project a name such as `program`, and click on **OK**.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给项目取一个名称，比如`program`，然后点击**确定**。
- en: 'Add a line of code in the `Main` method as follows:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Main`方法中添加一行代码如下：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Run the program by choosing **Debug** | **Run without Debugger**.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**调试** | **无调试运行**来运行程序。
- en: You will see the expected **Hello World** output and you are now ready to start
    using Visual Studio.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到预期的**Hello World**输出，现在可以开始使用Visual Studio了。
- en: Command-line compiler
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 命令行编译器
- en: If you prefer to work at a lower level than with an IDE like Visual Studio,
    you can always opt to simply use the command-line compiler directly. Microsoft
    provides everything you need to compile C# code entirely for free by downloading
    and installing the .NET 4.5 Redistributable package from [http://www.microsoft.com/en-us/download/details.aspx?id=8483](http://www.microsoft.com/en-us/download/details.aspx?id=8483).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢以比Visual Studio这样的IDE更低的级别工作，您总是可以选择直接使用命令行编译器。微软通过从[http://www.microsoft.com/en-us/download/details.aspx?id=8483](http://www.microsoft.com/en-us/download/details.aspx?id=8483)下载和安装.NET
    4.5可再发行包，为您提供了免费编译C#代码所需的一切。
- en: 'Once that''s downloaded and installed, you can find the compiler at `C:\windows\microsoft.net\Framework\v4.0.30319\csc.exe`,
    assuming you maintain all of the default installation options:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦下载并安装了，您可以在`C:\windows\microsoft.net\Framework\v4.0.30319\csc.exe`找到编译器，假设您保留了所有默认安装选项：
- en: Note
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the .NET 4.5 version of the .NET Framework will actually replace the
    4.0 framework if you have that installed. That's why the path mentioned previously
    shows as `v4.0.30319`. You won't be the first person confused by versions in the
    .NET Framework.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果您安装了.NET Framework 4.5版本，它实际上会替换4.0框架。这就是为什么之前提到的路径显示为`v4.0.30319`。你不会是第一个被.NET
    Framework版本搞糊涂的人。
- en: 'A small tip that will make working with the command-line compiler much easier
    is to simply add it to the environment''s `Path` variable. If you''re using PowerShell
    (which I highly encourage), you can easily do so by running the following command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使命令行编译器更容易使用的一个小技巧是将其添加到环境的`Path`变量中。如果您使用PowerShell（我强烈鼓励），您可以通过运行以下命令轻松实现：
- en: '[PRE1]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'That makes it so you can just type `csc` instead of the whole path. Usage of
    the command-line compiler is very simple, take the following class:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这样你就可以只输入`csc`而不是整个路径。命令行编译器的使用非常简单，看下面的类：
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Save this class as a file named `program.cs` using your favorite text editor.
    Once saved, you can compile it from the command line using the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 将此类保存为名为`program.cs`的文件，使用您喜欢的文本编辑器。保存后，您可以使用以下命令从命令行编译它：
- en: '[PRE3]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will produce an executable file named `ch1_hello.exe`, which when executed,
    will produce a familiar greeting as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成一个名为`ch1_hello.exe`的可执行文件，当执行时，将产生一个熟悉的问候，如下所示：
- en: '[PRE4]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'By default, `csc` will output an executable file. However, you can also produce
    libraries using the target argument. Consider the following class:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`csc`将输出一个可执行文件。但是，您也可以使用目标参数来生成库。考虑以下类：
- en: '[PRE5]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This class encapsulates the functionality of the previous program, and even
    makes it reusable by letting you define the name to be greeted. Although this
    is a somewhat trite example, the point is to show how to create a `.dll` file
    that you can use from multiple programs.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类封装了前一个程序的功能，并且通过让您定义要问候的名称，甚至使其可重用。尽管这是一个有点陈词滥调的例子，但重点是要展示如何创建一个`.dll`文件，您可以从多个程序中使用。
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'An assembly named `ch1_greeter.dll` will be generated, which you can then use
    from a slightly modified version of the previous program as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成一个名为`ch1_greeter.dll`的程序集，然后您可以从稍微修改过的前一个程序中使用它，如下所示：
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you try to compile the previous program just as you did before, the compiler
    will rightly complain about not knowing anything about the `Greeter` class as
    follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尝试像以前一样编译前一个程序，编译器将正确地抱怨不知道`Greeter`类的任何信息，如下所示：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Any time you have an error in your programs, it will be shown in the output,
    along with information about the file it was found in, and the line, so you can
    find it easily. In order for this to work, you will have to tell the compiler
    to use the `ch1_greeter.dll` file that you created using the `/r:` argument as
    follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 每当程序出现错误时，它将显示在输出中，并提供有关发现错误的文件和行的信息，因此您可以轻松找到它。为了使其工作，您将不得不告诉编译器使用使用`/r:`参数创建的`ch1_greeter.dll`文件，如下所示：
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: And now when you run the resulting `ch1_greeter_program.exe` program, you will
    see the output say, **Hello, Componentized World**.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当您运行生成的`ch1_greeter_program.exe`程序时，您将看到输出显示**Hello, Componentized World**。
- en: Though most developers will not use the command-line compiler directly these
    days, it is good to know that it is available and also how to use it, especially
    if you have to support advanced scenarios such as merging multiple modules into
    a single assembly.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大多数开发人员现在不会直接使用命令行编译器，但了解它的可用性以及如何使用它是很好的，特别是如果您必须支持高级场景，例如将多个模块合并为单个程序集。
- en: SharpDevelop
  id: totrans-91
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SharpDevelop
- en: When you launch SharpDevelop, the tagline on the loading screen, **The Open
    Source .NET IDE**, is a concise description. since the very early days of the
    .NET Framework, it provided developers a free option for writing C# before Microsoft
    shipped the Express versions. Since that time, it has continued to mature, and
    add features, and as of version 4.2, SharpDevelop supports targeting the .NET
    4.5, and more specifically, compilation and debugging of C# 5.0\. Although Visual
    Studio Express is a compelling option, the lack of source control plugins can
    be a deal breaker for some users. Thankfully, SharpDevelop will gladly let you
    integrate with a source control server in the IDE. Additionally, some of the more
    niche project types such as creating Windows Services (one of the few project
    types not supported by Express) are fully supported with SharpDevelop.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动SharpDevelop时，加载屏幕上的标语**The Open Source .NET IDE**是一个简洁的描述。自.NET Framework的早期，它为开发人员提供了一个免费的选项来编写C#，在Microsoft发布Express版本之前。自那时起，它一直在不断成熟和增加功能，截至4.2版本，SharpDevelop支持针对.NET
    4.5的目标，更具体地说，支持C# 5.0的编译和调试。虽然Visual Studio Express是一个引人注目的选择，但缺乏源代码控制插件可能会成为一些用户的断档因素。幸运的是，SharpDevelop将乐意让您在IDE中集成源代码控制服务器。此外，一些更为专业的项目类型，如创建Windows服务（Express不支持的少数项目类型之一），在SharpDevelop中得到了充分支持。
- en: Projects use the same format (`.sln`, `.csproj`) as Visual Studio, so project
    portability is high. You can usually take a project written in Visual Studio and
    open it in SharpDevelop.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 项目使用与Visual Studio相同的格式（.sln，.csproj），因此项目的可移植性很高。通常可以将在Visual Studio中编写的项目打开在SharpDevelop中。
- en: Download the application from [http://www.icsharpcode.net/OpenSource/SD/](http://www.icsharpcode.net/OpenSource/SD/).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 从[http://www.icsharpcode.net/OpenSource/SD/](http://www.icsharpcode.net/OpenSource/SD/)下载应用程序。
- en: 'Installation is straightforward, and you can verify correct installation by
    creating the following sample program:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 安装非常简单，您可以通过创建以下示例程序来验证正确的安装：
- en: Start SharpDevelop.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动SharpDevelop。
- en: Create a new project by clicking on **File** | **New** | **Solution**.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击**文件** | **新建** | **解决方案**来创建一个新项目。
- en: Choose **Console Application** from **C#** | **Windows Application**.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**C#** | **Windows应用程序**中选择**控制台应用程序**。
- en: Give the project a name such as `program`, and click on **Create**.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给项目取一个名称，如`program`，然后单击**创建**。
- en: Right-click on the project node in the **Projects** window, and choose the **Properties**
    menu item; check the **Compiling** tab to see if the **Target Framework** says
    **.NET Framework 4.0 Client Profile**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**项目**窗口中的项目节点，选择**属性**菜单项；检查**编译**选项卡，看看**目标框架**是否说**.NET Framework 4.0
    Client Profile**。
- en: If it does, then simply click on the **Change** button, select **.NET Framework
    4.5** in the **Change Target Framework** drop-down menu, and finally click on
    the **Convert** button.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果是这样，只需单击**更改**按钮，在**更改目标框架**下拉菜单中选择**.NET Framework 4.5**，最后单击**转换**按钮。
- en: Run the program by choosing **Debug** | **Run without Debugger**.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**调试** | **无调试运行**来运行程序。
- en: You will see the expected **Hello World** output.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到预期的**Hello World**输出。
- en: MonoDevelop
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: MonoDevelop
- en: The **Mono** framework is an open source version of the Common Language Runtime
    and C#. It has had over a decade of active development, and as a result, is very
    mature and stable. There are versions of Mono for just about any platform you
    might be interested in developing for Windows, OS X, Unix/Linux, Android, iOS,
    PlayStation Vita, Wii, and Xbox 360.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mono**框架是Common Language Runtime和C#的开源版本。它经过了十多年的积极开发，因此非常成熟和稳定。Mono有适用于几乎任何平台的版本，包括Windows，OS
    X，Unix/Linux，Android，iOS，PlayStation Vita，Wii和Xbox 360。'
- en: MonoDevelop is based on SharpDevelop, but was forked some time ago to specifically
    act as a development environment for Mono that would run on multiple platforms.
    It runs on Windows, OS X, Ubuntu, Debian, SLE, and openSUSE; so, as a developer,
    you can truly choose what platform you want to work on.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: MonoDevelop基于SharpDevelop，但在一段时间前分叉，专门作为运行在多个平台上的Mono的开发环境。它可以在Windows，OS X，Ubuntu，Debian，SLE和openSUSE上运行；因此，作为开发人员，您可以真正选择要在哪个平台上工作。
- en: You can get started by installing the Mono Development Kit 2.11 or higher from
    [http://www.go-mono.com/mono-downloads/download.html](http://www.go-mono.com/mono-downloads/download.html).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过从[http://www.go-mono.com/mono-downloads/download.html](http://www.go-mono.com/mono-downloads/download.html)安装Mono
    Development Kit 2.11或更高版本来开始。
- en: Once you have installed that for your platform, you can go ahead and install
    the latest version of MonoDevelop from [http://monodevelop.com/](http://monodevelop.com/).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了适用于您平台的软件后，您可以继续从[http://monodevelop.com/](http://monodevelop.com/)安装最新版本的MonoDevelop。
- en: 'Using the C# 5.0 compiler is but a few short steps away:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 使用C# 5.0编译器只需几个简单的步骤：
- en: Start MonoDevelop.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动MonoDevelop。
- en: Create a new project by clicking on **File** | **New** | **Solution…**.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击**文件** | **新建** | **解决方案…**来创建一个新项目。
- en: Choose **Console Application** from the **C#** menu.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**C#**菜单中选择**控制台应用程序**。
- en: Give the project a name such as `program`, and click on **Forward**, then on
    **OK**.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给项目命名为“program”，然后单击“前进”，然后单击“确定”。
- en: Right-click on the project node in the **Solution** window, and choose the **Options**
    menu item. Now go to **Build** | **General** to see if the **Target Framework**
    says **Mono / .NET 4.0**.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“解决方案”窗口中右键单击项目节点，然后选择“选项”菜单项。现在转到“生成”|“常规”以查看“目标框架”是否为“Mono/.NET 4.0”。
- en: If it does, then simply choose **.NET Framework 4.5** from the dropdown and
    click on the **OK** button.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果是这样，那么只需从下拉菜单中选择“.NET Framework 4.5”，然后单击“确定”按钮。
- en: Run the program by choosing **Run** | **Start without Debugging**.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择“运行”|“开始调试”来运行程序。
- en: If all goes well, you will see a terminal window (if running on OS X, for example)
    with the **Hello World** text.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您将看到一个终端窗口（例如在OS X上运行），显示“Hello World”文本。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: When it was introduced, C# came as a breath of fresh air at just the right time.
    It is a modern object oriented language, which takes the best qualities of many
    that came before it. Low-level power with just-in-time compilation, the simplicity
    of a garbage collected environment, and the flexibility of runtime that allows
    for easy interoperability with other languages, not to mention a great base class
    library, thriving open source community, and the ability to target multiple platforms
    make C# a compelling option.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: C#语言的引入正好是在合适的时候，它是一种现代的面向对象的语言，汲取了之前许多语言的优点。具有低级别的强大功能和即时编译，垃圾回收环境的简单性，以及运行时的灵活性，可以轻松与其他语言进行互操作，还有一个出色的基类库、蓬勃发展的开源社区，以及能够针对多个平台进行开发的能力，这些都使C#成为一个引人注目的选择。
- en: 'In this chapter, we discussed setting up your development environment and downloading
    all of the relevant tools and runtimes:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了设置开发环境并下载所有相关工具和运行时的步骤。
- en: Visual Studio, both commercial and free options.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio有商业和免费选项。
- en: Command line, useful for plugging directly into automated tools that use shell
    commands.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令行对于直接插入使用shell命令的自动化工具非常有用。
- en: SharpDevelop, an open source alternative to Visual Studio.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SharpDevelop是Visual Studio的开源替代品。
- en: MonoDevelop, the official IDE of the open source implementation of the .NET
    Framework and C#. This allows you to target multiple platforms.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MonoDevelop是.NET Framework和C#的开源实现的官方IDE。这使您可以针对多个平台进行开发。
- en: Once you have chosen a preferred development environment, and followed the steps
    detailed in this chapter, you will be ready to go through the rest of the book
    and all of the samples contained therein.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了首选的开发环境，并按照本章详细介绍的步骤进行操作，您就可以继续阅读本书的其余部分以及其中包含的所有示例。
- en: In the next chapter, we will talk about the evolution of the language, which,
    in turn, will help you understand the feature that was introduced along the way
    and contributes to where we stand today with C# 5.0.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论语言的演变，这将帮助您了解沿途引入的功能，并有助于我们如今拥有C# 5.0的地位。
