- en: Chapter 1. Getting Started with NumPy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章：NumPy 入门
- en: Let's get started. We will install NumPy and related software on different operating
    sytems and have a look at some simple code that uses NumPy. As mentioned in the
    *Preface*, SciPy is closely related to NumPy, so you will see the name SciPy appearing
    throughout the chapter. At the end of this chapter, you will find pointers on
    how to find additional information online if you get stuck or are uncertain about
    the best way to solve problems.
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。 我们将在不同的操作系统上安装 NumPy 和相关软件，并查看一些使用 NumPy 的简单代码。 正如“序言”所述，SciPy 与 NumPy
    密切相关，因此您会在本章中看到 SciPy 这个名字。 在本章的最后，您将找到有关如何在线获取更多信息的指南，如果您陷入困境或不确定解决问题的最佳方法。
- en: 'In this chapter, we shall learn the following skills:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下技能：
- en: Installing Python, SciPy, Matplotlib, IPython, and NumPy on Windows, Linux,
    and Macintosh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows，Linux 和 Macintosh 上安装 Python，SciPy，Matplotlib，IPython 和 NumPy
- en: Writing simple NumPy code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写简单的 NumPy 代码
- en: Adding arrays
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相加数组
- en: Making use of online resources and help
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用在线资源和帮助
- en: Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python
- en: NumPy is based on Python, so it is required to have Python installed. On some
    operating systems, Python is already installed. You, however, need to check whether
    the Python version is compatible with the NumPy version you want to install. There
    are many implementations of Python, including commercial implementations and distributions.
    In this book, we will focus on the standard CPython implementation, which is guaranteed
    to be compatible with NumPy.
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 基于 Python，因此需要安装 Python。 在某些操作系统上，已经安装了 Python 。 但是，您需要检查 Python 版本是否与要安装的
    NumPy 版本兼容。 Python 有许多实现，包括商业实现和发行版。 在本书中，我们将重点介绍标准的 CPython 实现，该实现可保证与 NumPy
    兼容。
- en: NumPy has binary installers for Windows, various Linux distributions, and Mac
    OS X. There is also a source distribution, if you prefer that. You need to have
    Python 2.4.x or above installed on your system. Python 2.7.6 is currently the
    best Python version to have because most scientific Python libraries support it.
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 具有适用于 Windows，各种 Linux 发行版和 Mac OS X 的二进制安装程序。如果您愿意，还可以提供源代码发行版。 您需要在系统上安装
    Python 2.4.x 或更高版本。 Python 2.7.6 是目前拥有的最好的 Python 版本，因为大多数科学的 Python 库都支持它。
- en: Installing NumPy, Matplotlib, SciPy, and IPython on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython
- en: 'Installing NumPy on Windows is a necessary but, fortunately, straightforward
    task that we will cover in detail. You only need to download an installer, and
    a wizard will guide you through the installation steps. It is recommended that
    Matplotlib, SciPy, and IPython be installed. However, this is not required to
    enjoy this book. The actions we will take are as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 NumPy 是必需的，但幸运的是，我们将详细介绍简单的任务。 您只需要下载安装程序，向导就会指导您完成安装步骤。 建议安装
    Matplotlib，SciPy 和 IPython。 但是，这不是享受本书所必需的。 我们将采取的行动如下：
- en: '![Installing NumPy, Matplotlib, SciPy, and IPython on Windows](img/00002.jpeg)'
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython](img/00002.jpeg)'
- en: Choose the appropriate version. In this example, we chose `numpy-1.8.0-win32-superpack-python2.7.exe`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择适当的版本。 在此示例中，我们选择了`numpy-1.8.0-win32-superpack-python2.7.exe`。'
- en: Open the EXE installer by double-clicking on it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '双击打开 EXE 安装程序。'
- en: '![Installing NumPy, Matplotlib,
    SciPy, and IPython on Windows](img/00003.jpeg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '![在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython](img/00003.jpeg)'
- en: Now, we can see a description of NumPy and its features, as shown in the previous
    screenshot. Click on the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '现在，我们可以看到 NumPy 及其功能的描述，如上一个屏幕截图所示。 单击**下一步**按钮。'
- en: If you have Python installed, it should automatically be detected. If it is
    not detected, maybe your path settings are wrong. At the end of this chapter,
    resources are listed in case you have problems installing NumPy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '如果您安装了 Python，则应自动检测到它。如果未检测到，则可能是您的路径设置错误。 本章最后列出了资源，以防您在安装 NumPy 时遇到问题。'
- en: '![Installing NumPy,
    Matplotlib, SciPy, and IPython on Windows](img/00004.jpeg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '![在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython](img/00004.jpeg)'
- en: In this example, Python 2.7 was found. Click on the **Next** button if Python
    is found, otherwise, click on the **Cancel** button and install Python (NumPy
    cannot be installed without Python). Click on the **Next** button. This is the
    point of no return. Well, kind of, but it is best to make sure that you are installing
    to the proper directory and so on and so forth. Now the real installation starts.
    This may take a while.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在此示例中，找到了 Python 2.7。 如果找到 Python，请单击**下一步**按钮，否则，单击**取消**按钮并安装 Python（如果没有，则无法安装
    NumPy）。 单击**下一步**按钮上的。 这是无可挽回的意义。 很好，但是最好确保要安装到正确的目录，依此类推。 现在开始真正的安装。 可能还要等一下。'
- en: Install SciPy and Matplotlib with the Enthought distribution at [http://www.enthought.com/products/epd.php](http://www.enthought.com/products/epd.php).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在以下位置安装带有 Enthought 发行版的 SciPy 和 Matplotlib：[`www.enthought.com/products/epd.php`](http://www.enthought.com/products/epd.php)。'
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '注意'
- en: The situation around installers is rapidly evolving. Other alternatives exist
    in various stage of maturity (see [http://www.scipy.org/install.html](http://www.scipy.org/install.html)).
    It might be necessary to put the `msvcp71.dll` file in your `C:\Windows\system32`
    directory. You can get it at [http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71](http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71).
    A Windows IPython installer is available on the IPython website (see [http://ipython.scipy.org/Wiki/IpythonOnWindows](http://ipython.scipy.org/Wiki/IpythonOnWindows)).
  prefs: []
  type: TYPE_NORMAL
  zh: '安装程序的相关情况正在迅速发展。 在成熟的各个阶段都存在其他替代方法（见[`www.scipy.org/install.htm`](http://www.scipy.org/install.html)）。 可能需要将`msvcp71.dll`文件放在您的`C:\Windows\system32`目录中。
    您可以在[`www.dll-files.com/dllindex/dll-files.shtml?msvcp71`](http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71)上获得它。 IPython
    网站上提供了 Windows IPython 安装程序（见[`ipython.scipy.org/Wiki/IpythonOnWindows`](http://ipython.scipy.org/Wiki/IpythonOnWindows)）。'
- en: Installing NumPy, Matplotlib, SciPy, and IPython on Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '在 Linux 上安装 NumPy，Matplotlib，SciPy 和 IPython'
- en: Installing NumPy and related recommended software on Linux depends on the distribution
    you have. We will discuss how you would install NumPy from the command line although
    you could probably use graphical installers; it depends on your distribution (distro).
    The commands to install Matplotlib, SciPy, and IPython are the same—only the package
    names are different. Installing Matplotlib, SciPy, and IPython is recommended,
    but optional.
  prefs: []
  type: TYPE_NORMAL
  zh: '在 Linux 上安装 NumPy 和相关的推荐软件取决于您所拥有的发行版。 我们将讨论如何从命令行安装 NumPy，尽管您可能会使用图形化安装程序。
    这取决于您的发行版（发行版）。 安装 Matplotlib，SciPy，和 IPython 的命令是相同的-仅包名称不同。 建议安装 Matplotlib，SciPy
    和 IPython，但这是可选的。'
- en: 'Most Linux distributions have NumPy packages. We will go through the necessary
    steps for some of the popular Linux distros:'
  prefs: []
  type: TYPE_NORMAL
  zh: '大多数 Linux 发行版都有 NumPy 包。 我们将为一些受欢迎的 Linux 发行版进行必要的步骤：'
- en: 'Run the following instructions from the command line for installing NumPy on
    Red Hat:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '从命令行运行以下指令以在 RedHat 上安装 NumPy：'
- en: '[PRE0]'
  prefs:
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To install NumPy on Mandriva, run the following command-line instruction:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '要在 Mandriva 上安装 NumPy，请运行以下命令行指令：'
- en: '[PRE1]'
  prefs: 
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To install NumPy on Gentoo, run the following command-line instruction:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '要在 Gentoo 上安装 NumPy，请运行以下命令行指令：'
- en: '[PRE2]'
  prefs: 
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To install NumPy on Debian or Ubuntu, we need to type the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '要在 Debian 或 Ubuntu 上安装 NumPy，我们需要输入以下内容：'
- en: '[PRE3]'
  prefs: 
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following table gives an overview of the Linux distributions and corresponding
    package names for NumPy, SciPy, Matplotlib, and IPython:'
  prefs: []
  type: TYPE_NORMAL
  zh: '下表概述了 Linux 发行版以及 NumPy，SciPy，Matplotlib 和 IPython 的相应包名称：'
- en: '| Linux distribution | NumPy | SciPy | Matplotlib | IPython |'
  prefs: []
  type: TYPE_TB
  zh: '| Linux 发行版 | NumPy | SciPy | Matplotlib | IPython |'
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| Arch Linux | `python-numpy` | `python-scipy` | `python-matplotlib` | `ipython`
    |'
  prefs: []
  type: TYPE_TB
  zh: '| Arch Linux | `python-numpy` | `python-scipy` | `python-matplotlib` | `ipython` |'
- en: '| Debian | `python-numpy` | `python-scipy` | `python-matplotlib` | `ipython` |'
  prefs: []
  type: TYPE_TB
  zh: '| Debian | `python-numpy` | `python-scipy` | `python-matplotlib` | `ipython` |'
- en: '| Fedora | `numpy` | `python-scipy` | `python-matplotlib` | `ipython` |'
  prefs: []
  type: TYPE_TB
  zh: '| Fedora | `numpy` | `python-scipy` | `python-matplotlib` | `ipython` |'
- en: '| Gentoo | `dev-python/numpy` | `scipy` | `matplotlib` | `ipython` |'
  prefs: []
  type: TYPE_TB
  zh: '| Gentoo | `dev-python/numpy` | `scipy` | `matplotlib` | `ipython` |'
- en: '| OpenSUSE | `python-numpy, python-numpy-devel` | `python-scipy` | `python-matplotlib`
    | `ipython` |'
  prefs: []
  type: TYPE_TB
  zh: '| OpenSUSE | `python-numpy, python-numpy-devel` | `python-scipy` | `python-matplotlib`
    | `ipython` |'
- en: '| Slackware | `numpy` | `scipy` | `matplotlib` | `ipython` |'
  prefs: []
  type: TYPE_TB
  zh: '| Slackware | `numpy` | `scipy` | `matplotlib` | `ipython` |'
- en: Installing NumPy, Matplotlib, and SciPy on Mac OS X
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '在 MacOSX 上安装 NumPy，Matplotlib 和 SciPy'
- en: You can install NumPy, Matplotlib, and SciPy on the Mac with a graphical installer
    or from the command line with a port manager, such as MacPorts or Fink, depending
    on your preference.
  prefs: []
  type: TYPE_NORMAL
  zh: '您可以根据需要，在 Mac 上使用图形安装程序来安装 NumPy， Matplotlib 和 SciPy，也可以在命令行中使用端口管理器（例如 MacPorts
    或 Fink）来安装 NumPy， Matplotlib 和 SciPy。'
- en: Note
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '注意'
- en: We can get a NumPy installer from the SourceForge website at [http://sourceforge.net/projects/numpy/files/](http://sourceforge.net/projects/numpy/files/).
    Similar files exist for Matplotlib and SciPy. Just change `numpy` in the previous
    URL to `scipy` or `matplotlib`. IPython didn't have a GUI installer at the time
    of writing. Download the appropriate DMG file as shown in the following screenshot;
    usually the latest one is the best. Another alternative is the SciPy Superpack
    ([https://github.com/fonnesbeck/ScipySuperpack](https://github.com/fonnesbeck/ScipySuperpack)).
    Whichever option you choose, it is important to make sure that updates which impact
    the system Python library don't negatively influence the already installed software
    by not building against the Python library provided by Apple.
  prefs: []
  type: TYPE_NORMAL
  zh: '我们可以从 SourceForge 网站（位于[`sourceforge.net/projects/numpy/files`](http://sourceforge.net/projects/numpy/files/)）上获取 NumPy
    安装程序。 Matplotlib 和 SciPy 也存在类似的文件。 只需将前一个 URL 中的`numpy`更改为`scipy`或`matplotlib`即可。
    在撰写本文时，IPython 还没有 GUI 安装程序。 下载适当的 DMG 文件，如以下屏幕截图所示； 通常最新的是最好的。 另一种选择是 SciPy
    Superpack（[`github.com/fonnesbeck/ScipySuperpack`](https://github.com/fonnesbeck/ScipySuperpack)）。 无论选择哪个选项，确保不影响苹果
    提供的 Python 库都不会影响到系统 Python 库的更新不会对已经安装的软件产生负面影响，这一点很重要。'
- en: '![Installing NumPy, Matplotlib, and SciPy on Mac OS X](img/00005.jpeg)'
  prefs: []
  type: TYPE_IMG
  zh: '![在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython](img/00005.jpeg)'
- en: 'We will install NumPy with a GUI installer using the following steps:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过以下步骤使用 GUI 安装程序安装 NumPy：
- en: 'Open the DMG file as shown in the following screenshot (in this example, `numpy-1.8.0-py2.7-python.org-macosx10.6.dmg`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 
- en: '![Installing
    NumPy, Matplotlib, and SciPy on Mac OS X](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
  zh: '![在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython](img/00006.jpeg)'
- en: Double-click on the icon of the opened box, that is, the one having a subscript
    that ends with `.mpkg`. We will be presented with the welcome screen of the installer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '双击，即打开的框的图标，即下标以`.mpkg`结尾的下标。 我们将看到安装程序的欢迎屏幕。'
- en: 'Click on the **Continue** button to go to the **Read Me** screen, where we will
    be presented with a short description of NumPy, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '单击**继续**按钮转到**自述文件**屏幕，在该屏幕上，我们将简要介绍 NumPy，如以下屏幕截图所示：'
- en: '![Installing
    NumPy, Matplotlib, and SciPy on Mac OS X](img/00007.jpeg)'
  prefs: 
  - PREF_OL
  type: TYPE_IMG
  zh: '![在 Windows 上安装 NumPy，Matplotlib，SciPy 和 IPython](img/00007.jpeg)'
- en: Click on the **Continue** button to go to the **License** screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '单击**继续**按钮转到**许可证**屏幕。'
- en: Read the license, click on the **Continue** button, and then on the **Accept**
    button, when prompted to accept the license. Continue through the next screens
    and click on the **Finish** button at the end.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '阅读许可证，在提示您接受许可证时，单击**继续**按钮，然后单击**接受**按钮。 继续浏览下一个屏幕，最后单击**完成**按钮。'
- en: Alternatively, we can install NumPy, SciPy, Matplotlib, and IPython through
    the MacPorts route or with Fink. The following installation steps install all
    these packages. We only need NumPy for the tutorials in this book, so please omit
    the packages you are not interested in.
  prefs: []
  type: TYPE_NORMAL
  zh: '另外，我们可以通过 MacPorts 路由或使用 Fink 安装 NumPy，SciPy，Matplotlib，和 IPython。 以下安装步骤将安装所有这些包。
    本书中的教程仅需要 NumPy，因此请省略您不感兴趣的包。'
- en: 'To install with MacPorts, type the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用 MacPorts 进行安装，请键入以下命令：
- en: '[PRE4]'
  prefs:
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Fink also has packages for NumPy: `scipy-core-py24`, `scipy-core-py25`, and
    `scipy-core-py26`. The SciPy packages are: `scipy-py24`, `scipy-py25`, and `scipy-py26`.
    We can install NumPy and the other recommended packages that we will be using
    in this book for Python 2.6 with the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fink 还具有用于 NumPy 的包：`scipy-core-py24`，`scipy-core-py25`和`scipy-core-py26`。 SciPy
    包为：`scipy-py24`，`scipy-py25`和`scipy-py26`。 我们可以使用以下命令安装 NumPy 和本书将在 Python 2.6
    中使用的其他推荐包：
- en: '[PRE5]'
  prefs: 
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Building from source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从源代码构建
- en: As a last resort or if we want to have the latest code, we can build from source.
    In practice it shouldn't be that hard although, depending on your operating system,
    you might run into problems. As operating systems and related software are rapidly
    evolving, the best you can do is search online or ask for help. In this chapter,
    we give pointers on good places to look for help.
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后的方法，或者如果我们想获得最新的代码，则可以从源代码构建。 在实践中，这并不难，但是根据您的操作系统，您可能会遇到问题。 随着操作系统和相关软件的迅速发展，您最好的办法就是在线搜索或寻求帮助。
    在本章中，我们为寻求帮助的好地方提供了指导。
- en: 'The steps to install NumPy from source are straightforward and given here.
    We can retrieve the source code for NumPy with `.git` as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 从源代码安装 NumPy 的步骤很简单，并在此处给出。 我们可以使用`.git`检索 NumPy 的源代码，如下所示：
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Install on `/usr/local` with the following command:'
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令在`/usr/local`上安装：
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: To build, we need a C compiler such as GCC and the Python header files in the
    `python-dev` or `python-devel` package.
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建，我们需要一个 C 编译器，例如 GCC 和`python-dev`或`python-devel`包中的 Python 头文件。
- en: NumPy arrays
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 数组
- en: After going through the installation of NumPy, it's time to have a look at NumPy
    arrays. NumPy arrays are more efficient than Python lists when it comes to numerical
    operations. NumPy arrays are in fact specialized objects with extensive optimizations.
    NumPy code requires less explicit loops than the equivalent Python code. This
    is based on vectorization.
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成 NumPy 的安装之后，该看看 NumPy 数组了。 在进行数值运算时，NumPy 数组比 Python 列表更有效。 NumPy 数组实际上是经过广泛优化的专用对象。
    与等效的 Python 代码相比，NumPy 代码需要更少的显式循环。 这是基于向量化的。
- en: If we go back to high school mathematics, then we should remember the concepts
    of scalars and vectors. The number 2 for instance is a scalar. When we add 2 and
    2, we are performing scalar addition. We can form a vector out of a group of scalars.
    In Python programming terms, we will then have a one-dimensional array. This concept
    can of course be extended to higher dimensions. Performing an operation on two
    arrays such as addition can be reduced to a group of scalar operations. In straight
    Python, we will do that with loops going through each element in the first array
    and adding it to the corresponding element in the second array. However, this
    is more verbose than the way it is done in mathematics. In mathematics, we treat
    the addition of two vectors as a single operation. That's the way NumPy arrays
    do it too and there are certain optimizations using low-level C routines, which
    make these basic operations more efficient. We will cover NumPy arrays in more
    detail in the next chapter.
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回到高中数学，那么我们应该记住标量和向量的概念。 例如，数字 2 是标量。 当我们加 2 和 2 时，我们正在执行标量加法。 我们可以从一组标量中形成一个向量。
    用 Python 编程术语，我们将得到一维数组。 这个概念当然可以扩展到更高的维度。 对两个数组执行加法之类的运算可以简化为一组标量运算。 在直接的 Python
    中，我们将通过遍历第一个数组中的每个元素并将其添加到第二个数组中的相应元素的循环来实现。 但是，这比数学中的方法更为冗长。 在数学中，我们将两个向量的加法视为单个运算。
    NumPy 数组也是这样做的方式，并且使用低级 C 例程进行了某些优化，这使这些基本操作更加有效。 在下一章中，我们将更详细地介绍 NumPy 数组。
- en: Adding arrays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相加数组
- en: Imagine that we want to add two vectors called `a` and `b`. A vector is used
    here in the mathematical sense, which means a one-dimensional array. We will learn
    in [Chapter 4](part0047_split_000.html#page "Chapter 4. Simple Predictive Analytics
    with NumPy"), *Simple Predictive Analytics with NumPy*, about specialized NumPy
    arrays that represent matrices. The vector `a` holds the squares of integers `0`
    to `n`, for instance. If `n` is equal to `3`, then `a` contains `0`, `1`, or `4`.
    The vector `b` holds the cubes of integers `0` to `n`, so if `n` is equal to `3`,
    then the vector `b` is equal to `0`, `1`, or `8`. How would you do that using
    plain Python? After we come up with a solution, we will compare it with the NumPy
    equivalent.
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下我们要添加两个向量`a`和`b`。 这里在数学上使用向量，即一维数组。 我们将在第四章，“在 NumPy 中进行简单的预测分析”，了解代表矩阵的专用
    NumPy 数组。 例如，向量`a`保持整数`0`至`n`的平方。 如果`n`等于`3`，则`a`包含`0`，`1`或`4`。 向量`b`包含整数`0`至`n`的立方，因此，如果`n`等于`3`，则向量`b`等于`0`，`1`或`8`。
    您将如何使用普通 Python 做到这一点？ 在提出解决方案之后，我们将其与等效的 NumPy 进行比较。
- en: 'The following function solves the vector addition problem using pure Python
    without NumPy:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数使用不带 NumPy 的纯 Python 解决了向量加法问题：
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following is a function that achieves the same with NumPy:'
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用 NumPy 实现的函数：
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Notice that `numpysum()` does not need a `for` loop. Also, we used the `arange`
    function from NumPy, which creates a NumPy array for us with integers `0` to `n`.
    The `arange` function was imported; that is why it is prefixed with `numpy`.
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`numpysum()`不需要`for`循环。 另外，我们使用了 NumPy 的`arange`函数，该函数为我们创建了一个整数`0`至`n`的
    NumPy 数组。 `arange`函数已导入； 这就是为什么它以`numpy`为前缀的原因。
- en: 'Now comes the fun part. Remember that it is mentioned in the *Preface* that
    NumPy is faster when it comes to array operations. How much faster is Numpy, though?
    The following program will show us by measuring the elapsed time in microseconds,
    for the `numpysum` and `pythonsum` functions. It also prints the last two elements
    of the vector sum. Let''s check that we get the same answers when using Python
    and NumPy:'
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的来了。 请记住，在“序言”中提到，关于数组操作，NumPy 更快。 但是，Numpy 快了多少？ 以下程序将通过测量`numpysum`和`pythonsum`函数的经过时间（以微秒为单位）向我们展示。
    它还打印向量和的最后两个元素。 让我们检查一下在使用 Python 和 NumPy 时我们得到的答案是否相同：
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output of the program for the `1000`, `2000`, and `3000` vector elements
    is as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: '`1000`，`2000`和`3000`向量元素的程序输出如下：'
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '提示'
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[`www.PacktPub.com`](http://www.PacktPub.com).从你的账户下载所有你已经购买的 Packt 书籍的实力代码。如果你在别的地方买了这本书，你可以访问[`www.PacktPub.com/support`](http://www.PacktPub.com/support)并注册，让文件直接通过电子邮件发送给您。
- en: 'Clearly, NumPy is much faster than the equivalent normal Python code. One thing
    is certain: we get the same results whether we are using NumPy or not. However,
    the result that is printed differs in representation. Notice that the result from
    the `numpysum` function does not have any commas. How come? Obviously we are not
    dealing with a Python list, but with a NumPy array. It was mentioned in the *Preface*
    that NumPy arrays are specialized data structures for numerical data. We will
    learn more about NumPy arrays in [Chapter 2](part0022_split_000.html#page "Chapter 2. NumPy
    Basics"), *NumPy Basics*.'
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，NumPy 比等效的普通 Python 代码快得多。 可以肯定的是，无论是否使用 NumPy，我们都会得到相同的结果。 但是，打印结果在表示形式上有所不同。
    请注意，`numpysum`函数的结果没有任何逗号。 怎么会？ 显然，我们不是在处理 Python 列表，而是在处理 NumPy 数组。 在“序言”中提到，NumPy
    数组是用于数值数据的专用数据结构。 我们将在第二章， “NumPy 基础知识”中了解有关 NumPy 数组的更多信息。
- en: Online resources and help
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '在线资源和帮助'
- en: The main documentation website for NumPy and SciPy is at [http://docs.scipy.org/doc/](http://docs.scipy.org/doc/).
    On this web page, we can browse the NumPy reference at [http://docs.scipy.org/doc/numpy/reference/](http://docs.scipy.org/doc/numpy/reference/)
    and the user guide, as well as several tutorials.
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 和 SciPy 的主要文档网站位于[`docs.scipy.org/doc`](http://docs.scipy.org/doc/)。 在此网页上，我们可以在[`docs.scipy.org/doc/numpy/reference`](http://docs.scipy.org/doc/numpy/reference/)和用户指南以及一些教程中浏览
    NumPy 参考。
- en: NumPy has a wiki with lots of documentation at [http://docs.scipy.org/numpy/Front%20Page/](http://docs.scipy.org/numpy/Front%20Page/).
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 在[`docs.scipy.org/numpy/Front%20Page`](http://docs.scipy.org/numpy/Front%20Page/)上有一个包含大量文档的百科。
- en: The NumPy and SciPy forum can be found at [http://ask.scipy.org/en](http://ask.scipy.org/en).
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 和 SciPy 论坛可以在[`ask.scipy.org/en`](http://ask.scipy.org/en)上找到。
- en: The popular Stack Overflow software development forum has hundreds of questions
    tagged as `numpy`. To view them, go to [http://stackoverflow.com/questions/tagged/numpy](http://stackoverflow.com/questions/tagged/numpy).
  prefs: []
  type: TYPE_NORMAL
  zh: 流行的 StackOverflow 软件开发论坛上有数百个标记为`numpy`的问题。 要查看它们，请转到[`stackoverflow.com/questions/tagged/numpy`](http://stackoverflow.com/questions/tagged/numpy)。
- en: If you are really stuck with a problem or you want to be kept informed of NumPy's
    development, you can subscribe to the NumPy discussion mailing list. The e-mail
    address is `<[numpy-discussion@scipy.org](mailto:numpy-discussion@scipy.org)>`.
    The number of e-mails per day is not too high, and there is almost no spam to
    speak of. Most importantly, developers actively involved with NumPy also answer
    questions asked on the discussion group. The complete list can be found at [http://www.scipy.org/Mailing_Lists](http://www.scipy.org/Mailing_Lists).
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您确实遇到问题，或者想随时了解 NumPy 的发展，可以订阅 NumPy 讨论邮件列表。 电子邮件地址为`<numpy-discussion@scipy.org>`。
    每天的电子邮件数量不是很高，而且几乎没有垃圾邮件可言。 最重要的是，积极参与 NumPy 的开发人员还会回答讨论组提出的问题。 完整列表可以在[`www.scipy.org/Mailing_Lists`](http://www.scipy.org/Mailing_Lists)中找到。
- en: For IRC users, there is an IRC channel on [irc://irc.freenode.net](http://irc://irc.freenode.net).
    The channel is called `#scipy`, but you can also ask NumPy questions since SciPy
    users also have knowledge of NumPy, as SciPy is based on NumPy. There are at least
    50 members on the SciPy channel at all times.
  prefs: []
  type: TYPE_NORMAL
  zh: '对于 IRC 用户，在 [`irc://irc.freenode.net`](http://irc://irc.freenode.net) 上有一个 IRC 通道。 通道名为，称为`#scipy`，但是您也可以问
    NumPy 问题，因为 SciPy 基于 NumPy，因此 SciPy 用户也了解 NumPy。 任何时候，SciPy 频道上至少有 50 名成员。'
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '总结'
- en: In this chapter, we installed NumPy and other recommended software that we will
    be using in some tutorials. We got a vector addition program working and convinced
    ourselves that NumPy has superior performance. In addition, we explored the available
    NumPy documentation and online resources.
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章中，我们安装了 NumPy 和其他推荐软件，这些软件将在某些教程中使用。 我们启动了向量加法程序，并确信 NumPy 具有出色的性能。 此外，我们还探索了可用的
    NumPy 文档和在线资源。'
- en: In the next chapter, we will take a look under the hood and explore some fundamental
    concepts, including arrays and data types.
  prefs: []
  type: TYPE_NORMAL
  zh: '在下一章中，我们将深入研究并探索一些基本概念，包括数组和数据类型。'
