- en: Chapter 12. Exploratory and Predictive Data Analysis with NumPy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第十二章：使用 NumPy 进行探索性和预测性数据分析
- en: 'In this chapter, we cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖以下秘籍：
- en: Exploring atmospheric pressure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索气压
- en: Exploring the day-to-day pressure range
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索日常气压范围
- en: Studying annual atmospheric pressure averages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 研究年度气压平均值
- en: Analyzing maximum visibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析最大可见度
- en: Predicting pressure with an autoregressive model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用自回归模型预测气压
- en: Predicting pressure with a moving average model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用移动平均模型预测气压
- en: Studying intrayear average pressure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 研究年内平均气压
- en: Studying extreme values of atmospheric pressure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 研究气压的极值
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Data analysis is one of the most important use cases of NumPy. Depending on
    our goals, we can distinguish between many phases and types of data analysis.
    In this chapter, we will talk about **exploratory** and **predictive data analysis**.
    Exploratory data analysis probes the data for clues. At this stage, we are probably
    unfamiliar with the dataset. Predictive analysis tries to predict something about
    the data using a model.
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析是 NumPy 最重要的用例之一。 根据我们的目标，我们可以区分数据分析的许多阶段和类型。 在本章中，我们将讨论**探索性**和**预测性数据分析**。
    探索性数据分析可探查数据的线索。 在此阶段，我们可能不熟悉数据集。 预测分析试图使用模型来预测有关数据的某些信息。
- en: The data comes from the Dutch meteorological institute KNMI. It is specifically
    about the weather station at De Bilt, where the KNMI headquarters is located.
    In these recipes, we will inspect atmospheric pressure and maximum visibility
    (see [http://www.knmi.nl/climatology/daily_data/download.html](http://www.knmi.nl/climatology/daily_data/download.html)).
  prefs: []
  type: TYPE_NORMAL
  zh: 数据来自荷兰气象局 KNMI。 特别是 KNMI 总部位于德比尔特的气象站。 在这些秘籍中，我们将检查气压和最大可见度（见[`www.knmi.nl/climatology/daily_data/download.html`](http://www.knmi.nl/climatology/daily_data/download.html)）。
- en: 'I modified and converted the textual data from the KNMI to the NumPy-specific
    `.npy` format, saved as a 40996 x 5 array. The array contains daily values for
    five variables:'
  prefs: []
  type: TYPE_NORMAL
  zh: 我修改了文本数据并将其从 KNMI 转换为 NumPy 特定的`.npy`格式，并保存为`40996 x 5`数组。 该数组包含五个变量的每日值：
- en: The date in the `YYYYMMDD` format
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YYYYMMDD`格式的日期'
- en: The average daily atmospheric pressure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每日平均气压
- en: The highest daily atmospheric pressure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每日最高气压
- en: The lowest daily atmospheric pressure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每日最低气压
- en: The maximum daily visibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每日最大可见度
- en: Exploring atmospheric pressure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索气压
- en: In this recipe, we will take a look at the daily mean sea level pressure (in
    0.1 hPa) calculated from 24 hourly values. This includes printing descriptive
    statistics and visualizing the probability distribution. In nature, we often deal
    with the normal distribution, so the normality test from [Chapter 10](ch10.xhtml
    "Chapter 10. Fun with Scikits"), *Fun with Scikits*, will come in handy.
  prefs: []
  type: TYPE_NORMAL
  zh: 在此秘籍中，我们将查看由 24 小时值计算出的每日平均海平面气压（0.1 hPa）。 这包括打印描述性统计数据和可视化概率分布。 在自然界中，我们经常处理正态分布，因此使用第
    10 章，“使用 Scikits 进行正态性检验”会派上用场。
- en: 'The complete code is in the `exploring.py` file in this book''s code bundle:'
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的代码在本书代码包的`exploring.py`文件中：
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: Install `statsmodels`, if you haven't installed already, for the normality test
    (see the *Installing scikits-statsmodels* recipe [Chapter 10](ch10.xhtml "Chapter 10. Fun
    with Scikits"), *Fun with Scikits*).
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未安装  ，请安装`statsmodels`以进行正态性测试（请参阅第 10 章，“Scikits 的乐趣”的“安装 scikits-statsmodels”秘籍）。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'Follow these steps to explore the daily atmospheric pressure:'
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤探索每日气压：
- en: 'Load the data with the `load()` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`load()`函数加载数据：
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Normally data needs to be processed and cleaned up. In this case, multiply
    the values to get values in `hPa` and remove `0` values corresponding to the missing
    values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，数据需要进行处理和清理。 在这种情况下，将这些值相乘以获得`hPa`中的值，然后删除与缺失值相对应的`0`值：
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Get descriptive statistics, including maximum, minimum, arithmetic mean, median,
    and standard deviation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取描述性统计信息，包括最大值，最小值，算术平均值，中位数和标准差：
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You should see the following values:'
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下值：
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Apply the normality test from [Chapter 10](ch10.xhtml "Chapter 10. Fun with
    Scikits"), *Fun with Scikits*, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下应用第 10 章“Scikits 的乐趣”的正态性检验：
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following values appear on the screen:'
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上显示以下值：
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'It is also nice to visualize the distribution of values with a histogram and
    a box plot. Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 用直方图和箱形图可视化值的分布也很好。 最终结果请参考以下图表：
- en: '![How to do it...](img/0945_12_01.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_01.jpg)'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Performing a normality test with statsmodels* recipe from [Chapter 10](ch10.xhtml
    "Chapter 10. Fun with Scikits"), *Fun with Scikits*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “使用 Statsmodels”秘籍执行正态性测试，该秘籍来自第 10 章，“Scikits 的乐趣”
- en: For an explanation of box plots, see the *Random sampling with numpy.random.choice()*
    recipe from [Chapter 11](ch11.xhtml "Chapter 11. Latest and Greatest NumPy"),
    *Latest and Greatest NumPy*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关箱形图的说明，请参见第 11 章“最新最强的 NumPy”
- en: The documentation of the `load()` function is at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.load.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.load.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`load()`函数的文档位于[`docs.scipy.org/doc/numpy/reference/generated/numpy.load.html`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.load.html)'
- en: Exploring the day-to-day pressure range
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索日常气压范围
- en: The daily pressure range is the difference of the daily highs and lows. With
    real-world data, we sometimes have missing values. Here, we can potentially lack
    values for the high and/or low pressures of a given day. It's possible to fill
    those gaps with a smart algorithm. However, let's keep it simple and just ignore
    them. After calculating the ranges, we will do a similar analysis as in the previous
    recipe, but we will use functions that can deal with `NaN` values. Also, we will
    look at the relation between months and ranges.
  prefs: []
  type: TYPE_NORMAL
  zh: 每日气压范围是每日最高点和最低点之差。 使用实际数据，有时我们会缺少一些值。 在这里，我们可能会缺少给定一天的高压和/或低压值。 可以通过智能算法来填补这些空白。
    但是，让我们保持简单，而忽略它们。 在计算了范围之后，我们将进行与前面的秘籍类似的分析，但是我们将使用可以处理`NaN`值的函数。 另外，我们将研究月份和范围之间的关系。
- en: 'The corresponding code is in the `day_range.py` file in this book''s code bundle:'
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包中的`day_range.py`文件位于对应的代码中：
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'The first steps of this recipe are almost the same as those of the previous
    recipe, so we will skip them. Follow along for the analysis of the daily pressure
    range:'
  prefs: []
  type: TYPE_NORMAL
  zh: 此秘籍的第一步与先前的秘籍几乎相同，因此我们将跳过它们。 继续分析每日气压范围：
- en: 'We could leave missing values at their current `0` value. However, it is usually
    safer to set them to `NaN` to avoid confusion. Set the missing values to `NaN`,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以将缺失值保留为当前的`0`值。 但是，通常将它们设置为`NaN`较为安全，以避免造成混淆。 将缺失值设置为`NaN`，如下所示：
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Compute the ranges, minima, maxima, mean, and standard deviations with the
    `nanmin()`, `nanmax()`, `nanmean()`, and `nanstd()` functions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`nanmin()`，`nanmax()`，`nanmean()`和`nanstd()`函数计算范围，最小值，最大值，均值和标准差：
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The result appears on the screen:'
  prefs: []
  type: TYPE_NORMAL
  zh: 结果出现在屏幕上：
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'As I mentioned previously, the dates are given in the `YYYYMMDD` format. With
    a bit of arithmetic, we can easily get the months. Also, we ignore the month values
    corresponding to the `NaN` range values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所述，日期以`YYYYMMDD`格式给出。 有了一点算术，我们就可以轻松地得到几个月。 此外，我们忽略与`NaN`范围值相对应的月份值：
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Average the ranges by month, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按月对范围进行平均，如下所示：
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In the last step, we draw a `matplotlib` bar chart of monthly average values
    of daily pressure ranges. Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一步中，我们绘制了`matplotlib`条形图，显示了每日气压范围的每月平均值。 最终结果请参考以下图表：
- en: '![How to do it...](img/0945_12_02.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_02.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: We analyzed the daily ranges of atmospheric pressure. Further, we visualized
    the monthly averages of the daily range. There seems to be a pattern leading to
    smaller daily atmospheric pressure ranges in summer. Of course, more work is necessary
    to make certain.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们分析了气压的每日范围。 此外，我们可视化了每日范围的每月平均值。 似乎有一种模式导致夏季的每日气压范围变小。 当然，需要做更多的工作来确定。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: Studying annual atmospheric pressure averages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 研究年度气压平均值
- en: 'You may have heard of global warming, which claims that temperature is rising
    steadily each year. Since pressure is another thermodynamic variable, we may expect
    pressure also to follow a trend. The complete code for this recipe is in the `annual.py`
    file in this book''s code bundle:'
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能听说过，全球变暖表明温度逐年稳定上升。 由于气压是另一个热力学变量，因此我们可以预期气压也会跟随趋势。 该秘籍的完整代码在本书代码包的`annual.py`文件中：
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'To check for a trend, let''s plot the average, maximum, and minimum annual
    atmospheric pressures with the following steps:'
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查趋势，让我们按以下步骤绘制平均，最大和最小年度气气压：
- en: 'Initialize the annual statistics arrays:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化年度统计数据数组：
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Compute the annual statistics:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算年度统计数据：
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Plot, ignoring the `NaN` values, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制，忽略`NaN`值，如下所示：
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果请参考以下图表：
- en: '![How to do it...](img/0945_12_03.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_03.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The average annual pressure seems to be flat or fluctuating a bit, but without
    any trend. We used the `isfinite()` function to ignore the `NaN` values in the
    final plot. This function checks for infinite and `NaN` values.
  prefs: []
  type: TYPE_NORMAL
  zh: 年平均气压似乎持平或有所波动，但没有任何趋势。 我们使用`isfinite()`函数忽略了最终图中的`NaN`值。 此函数检查无限值和`NaN`值。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: The `isfinite()` function documentation is at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.isfinite.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.isfinite.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isfinite()`函数的文档位于[`docs.scipy.org/doc/numpy/reference/generated/numpy.isfinite.html`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.isfinite.html)'
- en: Analyzing maximum visibility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析最大可见度
- en: 'If you''ve gone through all the recipes in this chapter so far, you might need
    a break from atmospheric pressure. So let''s look into visibility instead. The
    data file has a column for a maximum visibility, which the KNMI describes as follows:'
  prefs: []
  type: TYPE_NORMAL
  zh: 如果到目前为止，您在本章的所有秘籍中均未使用  ，则可能需要突破气压。 因此，让我们来看看能见度。 数据文件具有一列，以提供最大的可视性，KNMI 描述如下：
- en: '*"Maximum visibility; 0: <100 m, 1:100-200 m, 2:200-300 m,..., 49:4900-5000
    m, 50:5-6 km, 56:6-7 km, 57:7-8 km,..., 79:29-30 km, 80:30-35 km, 81:35-40 km,...,
    89: >70 km)"*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Maximum visibility; 0: <100 m, 1:100-200 m, 2:200-300 m,..., 49:4900-5000
    m, 50:5-6 km, 56:6-7 km, 57:7-8 km,..., 79:29-30 km, 80:30-35 km, 81:35-40 km,...,
    89: >70 km)`'
- en: Visibility here is a discrete variable, so averaging values may not make sense.
    Also, it seems that we have a lot of `0` values for the period between 1901 and
    1950 for almost every day. I don't believe that De Bilt was extra foggy in that
    period. For the purpose of this recipe, we define mist as visibility between 1
    and 2 km, which corresponds to the values of `10` and `20` in the data file. Let's
    also define haze as visibility between 2 and 5 km. This in turn corresponds to
    `20` and `50` in our data file.
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的能见度是一个离散变量，因此取平均值可能没有意义。 此外，似乎我们几乎每天都有 1901 年到 1950 年之间的`0`值。 我不相信 De Bilt
    在那个时期会更加迷雾重重。 出于本秘籍的目的，我们将雾定义为 1 至 2 公里之间的能见度，这对应于数据文件中的`10`和`20`值。 让我们还将雾度定义为
    2 至 5 公里之间的能见度。 这又对应于我们数据文件中的`20`和`50`。
- en: 'Air pollution could reduce visibility, especially on clear days. We can define
    clear days as those with visibility higher than 30 km, or the value of `79` in
    our data file. Ideally, we should use air pollution data, but unfortunately, we
    don''t have that. As far as I know, the air pollution levels around this particular
    weather station are not very high. It is interesting to know the number of clear
    days per year. The code for the analysis is in the `visibility.py` file in this
    book''s code bundle:'
  prefs: []
  type: TYPE_NORMAL
  zh: 空气污染会降低能见度，尤其是在晴天。 我们可以将晴天定义为能见度高于 30km 的晴天，或数据文件中`79`的值。 理想情况下，我们应该使用空气污染数据，但不幸的是，我们没有这些数据。
    据我所知，这个特殊气象站周围的空气污染水平不是很高。 知道每年的晴天数很有趣。 分析的代码在本书的代码包的`visibility.py`文件中：
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'Follow these steps to plot annual counts of clear days, the day of year (1-366)
    against the probability of haze and mist:'
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤来绘制晴天的年度计数，即一年中的某一天（1-366）对霾和薄雾的可能性：
- en: 'Compute the probability of haze and mist with following code block:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码块计算雾霾的可能性：
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Get the annual counts using this snippet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用此代码段获取年度计数：
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 'Refer to the following plot for the end result:'
- en: '![How to do it...](img/0945_12_04.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_04.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: As you can see, we start getting clear days after 1950\. This is not due to
    extra foggy weather before 1950, but because of the phenomenon of missing or invalid
    data. The drop in the last year is also due to incomplete data. After 1980, we
    see a definite rise of clear days. This is supposed to be the period when global
    warming and climate change increased too. Unfortunately, we don't have data directly
    linked to air pollution, but our exploratory analysis indicates the existence
    of a trend.
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们在 1950 年以后开始变得晴朗。这不是由于 1950 年之前的大雾天气，而是由于数据丢失或无效的现象。 去年的下降也是由于数据不完整。
    1980 年以后，晴天明显增加。 这应该是全球变暖和气候变化也加剧的时期。 不幸的是，我们没有与空气污染直接相关的数据，但是我们的探索性分析表明存在趋势。
- en: Mist seems to occur mostly in the first and last two months of the year. You
    can draw similar conclusions about haze. Obviously, haze is more probable than
    mist, which is probably a good thing. You could also plot a histogram to make
    sure. However, keep in mind that you need to ignore `0` values as I mentioned
    earlier.
  prefs: []
  type: TYPE_NORMAL
  zh: 薄雾似乎主要发生在一年的头两个月中  。 您可以得出有关雾霾的类似结论。 显然，雾气比雾气更有可能，这可能是一件好事。 您也可以绘制直方图以确保。 但是，请记住，正如我之前提到的，您需要忽略`0`值。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring* *atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: The *Studying annual atmospheric pressure averages* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “研究年度气压平均值”秘籍
- en: The relevant Wikipedia page at [http://en.wikipedia.org/wiki/Visibility](http://en.wikipedia.org/wiki/Visibility)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '相关维基百科页面位于[`en.wikipedia.org/wiki/Visibility`](http://en.wikipedia.org/wiki/Visibility)'
- en: Predicting pressure with an autoregressive model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自回归模型预测气压
- en: A very simple predictive model takes the current value of a variable and extrapolates
    it to the next period. To extrapolate, we can use a simple mathematical function.
    Since a variety of functions can be approximated by polynomials as in the Taylor
    series, polynomials of low degree might do the trick. What this boils down to
    is regression of the previous values to the next values. The corresponding models
    are therefore called **autoregressive**.
  prefs: []
  type: TYPE_NORMAL
  zh: 非常简单的预测模型会获取变量的当前值，并将其外推到下一个周期。 为了推断，我们可以使用一个简单的数学函数。 由于可以通过多项式近似泰勒级数中的多项式，因此低阶多项式可以解决问题。
    归结为将先前值回归到下一个值。 因此，相应的模型称为**自回归**。
- en: 'We have to be careful about **overfitting**. **Cross-validation** is a common
    approach to split the data into **train** and **test** sets. We fit the data using
    the train set and test the fit with the test set. This should reduce bias (see
    the `autoregressive.py` file in this book''s code bundle):'
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须对此谨慎，以免**过拟合**。 **交叉验证**是一种常见的方法，将数据分为**训练**和**测试**集。 我们使用训练集拟合数据，并使用测试集测试拟合度。
    这样可以减少偏差（请参见本书代码包中的`autoregressive.py`文件）：
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'With the following steps, we will fit atmospheric pressure using polynomials
    of varying degrees:'
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行以下  ，我们将使用不同程度的多项式拟合气压：
- en: 'Define a cutoff for the test and train sets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义测试和训练集的截止：
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Fit the data with the `polyfit()` and `polyval()` functions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`polyfit()`和`polyval()`函数拟合数据：
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Calculate the relative error:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算相对误差：
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This code prints the following output:'
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码输出以下输出：
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 'Refer to the following plot for the end result:'
- en: '![How to do it...](img/0945_12_05.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_05.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The mean relative errors for the three polynomials are very close—around .004—so
    we see a single line in the plot (it would be interesting to know what the typical
    measurement error is for atmospheric pressure), which is smaller than a percent.
    We see some potential outliers, but not too many. Most of the heavy lifting was
    done by the `polyfit()` and `polyval()` functions, which respectively fit data
    to a polynomial and evaluate the polynomial.
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个多项式的平均相对误差非常接近——约 .004——因此我们在图中看到一条线（很有趣的是知道气压的典型测量误差是多少）， 小于百分之一。 我们看到了一些潜在的异常值，但是没有太多。
    大部分繁重的工作都是通过`polyfit()`和`polyval()`函数完成的，它们分别将数据拟合到多项式并求值该多项式。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: The Wikipedia page about cross-validation at [http://en.wikipedia.org/wiki/Cross-validation_%28statistics%29](http://en.wikipedia.org/wiki/Cross-validation_%28statistics%29)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '交叉验证的维基百科页面位于[`en.wikipedia.org/wiki/Cross-validation_%28statistics%29`](http://en.wikipedia.org/wiki/Cross-validation_%28statistics%29)'
- en: The documentation for `polyfit()` is at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polyfit()`的文档位于[`docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html)'
- en: The documentation for `polyval()` is at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polyval()`的文档位于[`docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html)'
- en: Predicting pressure with a moving average model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用移动平均模型预测气压
- en: 'A simple way to model atmospheric pressure is to assume that values dance around
    a mean **μ**. We then assume in the simplest case that **deviations of consecutive
    values** **ε** from the mean follow this equation:'
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟气压的简单方法是假设值围绕均值`μ`跳动。 然后，在最简单的情况下，我们假设连续值**与平均值的偏差**`ε`遵循以下公式：
- en: '![Predicting pressure with a moving average model](img/0945_12_09.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![使用移动均值模型预测气压](img/0945_12_09.jpg)'
- en: 'The relation is linear and in the simplest case, we need to estimate only one
    parameter—**θ**. To do so, we will require SciPy functionality. The full code
    for this recipe is in the `moving_average.py` file in this book''s code bundle:'
  prefs: []
  type: TYPE_NORMAL
  zh: 该关系是线性的，在最简单的情况下，我们只需要估计一个参数——`θ`。 为此，我们将需要 SciPy 功能。 该秘籍的完整代码在本书代码包的`moving_average.py`文件中：
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Getting started
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: If necessary, install SciPy by following the instructions in the *Installing
    SciPy* recipe of [Chapter 2](ch02.xhtml "Chapter 2. Advanced Indexing and Array
    Concepts"), *Advanced Indexing and Array Concepts*.
  prefs: []
  type: TYPE_NORMAL
  zh: 如有必要，请按照第二章，“高级索引和数组概念”的“安装 SciPy”秘籍中的说明安装 SciPy。
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: The following steps apply the moving average model to atmospheric pressure.
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将移动平均模型应用于气压。
- en: 'Define the following functions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义以下函数：
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Use the functions from the previous step to fit a moving average model with
    the `leastsq()` function and initial guess of `0.9` for the model parameter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用上一步中的函数将移动平均模型与`leastsq()`函数拟合，并将`0.9`的初始猜测作为模型参数：
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Compute the absolute error after fitting using the test dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用测试数据集拟合后计算绝对误差：
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Refer to the following plot of the absolute error for each data point in the
    dataset:'
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下数据集中每个数据点的绝对误差图：
- en: '![How to do it...](img/0945_12_06.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_06.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The `leastsq()` function fits a model by minimizing errors. It requires a function
    that computes the error of the fit and an initial guess for model parameters.
  prefs: []
  type: TYPE_NORMAL
  zh: '`leastsq()`函数通过最小化误差来拟合模型。 它需要一个函数来计算拟合误差和模型参数的初始猜测。'
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: The Wikipedia page about the moving average model at [http://en.wikipedia.org/wiki/Moving-average_model](http://en.wikipedia.org/wiki/Moving-average_model)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '移动平均模型的维基百科页面位于[`en.wikipedia.org/wiki/Moving-average_model`](http://en.wikipedia.org/wiki/Moving-average_model)'
- en: The documentation for `leastsq()` is at [http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.leastsq.html](http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.leastsq.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`leastsq()`的文档位于[`docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.leastsq.html`](http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.leastsq.html)'
- en: Studying intrayear average pressure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 研究年内平均气压
- en: It's interesting to explore the atmospheric pressure within a year. In particular,
    it may be informative to check for patterns related with variability, and therefore,
    predictability. The reason is that atmospheric pressure in some months can vary
    much, and reduce predictability. In this recipe, we will plot monthly box plots
    and monthly variance of atmospheric pressure.
  prefs: []
  type: TYPE_NORMAL
  zh: 在一年内探索气压很有趣。 特别地，检查与变异性相关的模式可能是有益的，因此，与可预测性相关。 原因是几个月中的气气压会发生很大变化，从而降低了可预测性。
    在此秘籍中，我们将绘制每月的箱形图和每月的气气压方差。
- en: 'The recipe code is in the `intrayear.py` file in this book''s code bundle.
    Please pay extra attention to the highlighted sections:'
  prefs: []
  type: TYPE_NORMAL
  zh: 秘籍代码在本书代码包的`intrayear.py`文件中。 请特别注意突出显示的部分：
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'While we are exploring, the steps tend to be repeated, and there is an overlap
    between this recipe and the other recipes in this book. The following steps are
    new in this recipe:'
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们探索时，往往会重复这些步骤，并且此秘籍与本书中的其他秘籍之间存在重叠。 以下是此秘籍中的新步骤：
- en: 'Display error bars using the standard deviation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用标准差显示误差线：
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Shade the region of the plot with values above the median:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用高于中值的值对图的区域进行着色：
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 'Refer to the following plot for the end result:'
- en: '![How to do it...](img/0945_12_07.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_07.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: We matched months to measurements of atmospheric pressure. We used the matches
    to draw box plots and visualize monthly variance. This study shows that the atmospheric
    pressure variance is above the median in the coldest months of January, February,
    November, and December. From the plots, we see that the pressure ranges narrow
    in the warm summer months. This is consistent with the results from the other
    recipes.
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将几个月与气气压的测量相匹配。 我们使用匹配来绘制箱形图并可视化每月变化。 这项研究表明，在 1 月，2 月，11 月和  12 月的最冷月份，气压变化高于中值。
    从图中可以看出，在温暖的夏季，气压范围狭窄。 这与其他秘籍的结果一致。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: The *Studying annual atmospheric pressure averages* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “研究年度气压平均值”秘籍
- en: The documentation for `var()` is at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.var.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.var.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`var()`的文档位于[`docs.scipy.org/doc/numpy/reference/generated/numpy.var.html`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.var.html)'
- en: Studying extreme values of atmospheric pressure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 研究气压的极值
- en: 'Outliers are a problem because they influence our understanding of data. In
    this recipe, we define outliers to be away from the first or third quartile of
    the data by at least 1.5 times the **interquartile range**. The interquartile
    range is the distance between the first and third quartiles. Let''s count the
    outliers for each month of the year. The complete code is in the `extreme.py`
    file in this book''s code bundle:'
  prefs: []
  type: TYPE_NORMAL
  zh: 异常值是一个问题，因为它们会影响我们对数据的理解。 在此秘籍中，我们将异常值定义为与数据的第一或第三四分位数相差至少**四分位数范围**的 1.5 倍。
    四分位数间距是第一和第三四分位数之间的距离。 让我们计算一年中每个月的异常值。 完整的代码在本书代码包的`extreme.py`文件中：
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'To plot the number of outliers for each month of the year, do the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
  zh: 要绘制一年中每个月的异常数，请执行以下步骤：
- en: 'Compute the quartiles and the interquartile range with the `percentile()` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`percentile()`函数计算四分位数和四分位数间距：
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Count the number of outliers, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算异常值的数量，如下所示：
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Refer to the following plot for the end result:'
  prefs: []
  type: TYPE_NORMAL
  zh: 'Refer to the following plot for the end result:'
- en: '![How to do it...](img/0945_12_08.jpg)'
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤](img/0945_12_08.jpg)'
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: It looks like we got outliers mostly on the lower side and they are less probable
    in summer. The outliers on the higher side seem to occur only during certain months.
    We found the quartiles with the `percentile()` function, using the fact that a
    quarter corresponds to 25 percent.
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来异常值大多在下侧，并且夏天不太可能出现。 较高端的异常值似乎仅在某些月份内发生。 我们发现四分位数具有`percentile()`函数，因为四分之一对应
    25%。
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Exploring atmospheric pressure* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “探索气压”秘籍
- en: The documentation for the `percentile()` function is at [http://docs.scipy.org/doc/numpy-dev/reference/generated/numpy.percentile.html](http://docs.scipy.org/doc/numpy-dev/reference/generated/numpy.percentile.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percentile()`函数的文档位于[`docs.scipy.org/doc/numpy-dev/reference/generated/numpy.percentile.htm`](http://docs.scipy.org/doc/numpy-dev/reference/generated/numpy.percentile.html)'
