- en: Assessments
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章
- en: What international group maintains the official specification for JavaScript?
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个国际组织维护JavaScript的官方规范？
- en: W3C
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: W3C
- en: '**Ecma International**'
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Ecma International**'
- en: Netscape
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网景
- en: Sun
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太阳
- en: Which backends can communicate with JavaScript?
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪些后端可以与JavaScript通信？
- en: PHP
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PHP
- en: Python
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python
- en: Java
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Java
- en: '**All of the above**'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以上所有**'
- en: Who was the original author of JavaScript?
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 谁是JavaScript的原始作者？
- en: Tim Berners-Lee
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 蒂姆·伯纳斯-李
- en: '**Brendan Eich**'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**布兰登·艾奇**'
- en: Linus Torvalds
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linus Torvalds
- en: Bill Gates
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比尔·盖茨
- en: What is the DOM?
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DOM是什么？
- en: JavaScript's representation of HTML in memory
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JavaScript在内存中对HTML的表示
- en: An API to allow JavaScript to modify the page
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许JavaScript修改页面的API
- en: '**Both of the above**'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以上两者**'
- en: None of the above
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不是
- en: What is the primary use of Ajax?
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ajax的主要用途是什么？
- en: Communication with the DOM
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与DOM通信
- en: Manipulation of the DOM
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DOM的操作
- en: Listening for user input
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监听用户输入
- en: '**Communication with a backend**'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**与后端通信**'
- en: Chapter 2
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: '**True** or false: Node.js is single-threaded.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**真**或假：Node.js是单线程的。'
- en: 'True or **false**: The architecture of Node.js makes it impervious to **Distributed
    Denial of Service** (**DDoS**) attacks.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或**假**：Node.js的架构使其不受**分布式拒绝服务**（**DDoS**）攻击的影响。
- en: Who originally created Node.js?
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 谁最初创建了Node.js？
- en: Brendan Eich
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 布兰登·艾奇
- en: Linux Torvalds
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linux Torvalds
- en: Ada Lovelace
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阿达·洛夫莱斯
- en: '**Ryan Dahl**'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Ryan Dahl**'
- en: 'True or **false**: JavaScript on the server side is inherently insecure because
    the code is exposed on the frontend.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或**假**：服务器端的JavaScript本质上是不安全的，因为代码在前端暴露。
- en: 'True or **false**: Node.js is inherently superior to Python.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或**假**：Node.js本质上优于Python。
- en: Chapter 3
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章
- en: Which of these is not a valid JavaScript variable declaration?
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不是有效的JavaScript变量声明？
- en: var myVar = 'hello';
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: var myVar = 'hello';
- en: const myVar = "hello"
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: const myVar = "hello"
- en: '**String myVar = "hello";**'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**String myVar = "hello";**'
- en: let myVar = "hello"
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: let myVar = "hello"
- en: Which of these starts a function declaration?
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个开始了函数声明？
- en: '**function**'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**功能**'
- en: const
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: const
- en: func
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 功能
- en: def
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: def
- en: Which of these is not a basic loop type?
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不是基本循环类型？
- en: for..in
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: for..in
- en: for
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为
- en: while
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当
- en: '**map**'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**映射**'
- en: 'JavaScript *requires* line delineation with semicolons:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JavaScript *需要*使用分号进行行分隔：
- en: 'True'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真
- en: '**False**'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假**'
- en: 'Whitespace *never* counts in JavaScript:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在JavaScript中，空格*永远*不计算：
- en: 'True'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真
- en: '**False**'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假**'
- en: Chapter 4
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章
- en: 'JavaScript is inherently:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JavaScript本质上是：
- en: Synchronous
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同步
- en: Asynchronous
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 异步
- en: '**Both**'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**两者**'
- en: 'A `fetch()` call returns a:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个`fetch()`调用返回：
- en: '`then`'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`then`'
- en: '`next`'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`next`'
- en: '`finally`'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`最后`'
- en: '**Promise**'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Promise**'
- en: 'With prototypal inheritance, we can (select all options that apply):'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用原型继承，我们可以（选择所有适用的选项）：
- en: '**Add methods to a base data type.**'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在基本数据类型中添加方法。**'
- en: '**Subtract methods from a base data type.**'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**从基本数据类型中减去方法。**'
- en: Rename our data type.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重命名我们的数据类型。
- en: Cast our data into another format.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们的数据转换为另一种格式。
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Given the preceding code, what will be the expected output?
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在给定的代码中，预期的输出是什么？
- en: '1'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1'
- en: 'false'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假
- en: '0'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '0'
- en: '**true**'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**真**'
- en: '[PRE1]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Given this code, what's the best way to output "Will Riker"?
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这段代码中，输出“威尔·莱克”最好的方法是什么？
- en: '**`Riker.sayHello() `***'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**`Riker.sayHello() `***'
- en: '`console.log(Riker.name)`'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`console.log(Riker.name)`'
- en: '`console.log(Riker.this.name)`'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`console.log(Riker.this.name)`'
- en: '`Officer.Riker.name()`'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Officer.Riker.name()`'
- en: Chapter 5
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章
- en: 'Consider the following code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下代码：
- en: '[PRE2]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How would you get an alert of `'Hello Bob'`?
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何获得警报`'你好，鲍勃'`？
- en: '`sayHello()(''Bob'')`'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sayHello()(''Bob'')`'
- en: '`sayHello(''Bob'')()`*****'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sayHello(''Bob'')()`*****'
- en: '`sayHello(''Bob'')`'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sayHello(''Bob'')`'
- en: '`someFunc()(sayHello(''Bob''))`'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc()(sayHello(''Bob''))`'
- en: What will `alert(greeting)` do in the preceding code?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上述代码中，`alert(greeting)`会做什么？
- en: Alert `'greeting'`
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 警报`'问候'`
- en: Alert `'Hello Alice'`
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 警报`'你好，爱丽丝'`
- en: '**Throw an error**'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**抛出错误**'
- en: None of the above
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不是
- en: How would we get an alert message of `1`?
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何获得警报消息`1`？
- en: '`someFunc()()`*****'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc()()`*****'
- en: '`sayHello().sayZip()`'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sayHello().sayZip()`'
- en: '`alert(someFunc.bar)`'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`alert(someFunc.bar)`'
- en: '`sayZip()`'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sayZip()`'
- en: How would we get an alert message of `2`?
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何获得警报消息`2`？
- en: '`someFunc().foo()`'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc().foo()`'
- en: '`someFunc()().beep`'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc()().beep`'
- en: '**We can''t, because it''s not in scope**'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**我们不能，因为它不在范围内**'
- en: We can't, because it's not defined
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不能，因为它没有定义
- en: How can we change `someFunc` to alert 1 1 2?
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何将`someFunc`更改为警报1 1 2？
- en: We can't.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不能。
- en: Add `return foo` after `return zip`.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`return zip`之后添加`return foo`。
- en: Change `return zip` to `return foo`.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`return zip`更改为`return foo`。
- en: '**Add `return foo` after the `foo` declaration**.'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在`foo`声明之后添加`return foo`**。'
- en: Given a correct solution to the preceding question, how would we actually get
    three alerts of 1, 1, 2?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在给定上一个问题的正确解决方案的情况下，我们如何实际获得三个警报，即1、1、2？
- en: '`someFunc()()()`*****'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc()()()`*****'
- en: '`someFunc()().foo()`'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc()().foo()`'
- en: '`someFunc.foo()`'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`someFunc.foo()`'
- en: '`alert(someFunc)`'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`alert(someFunc)`'
- en: Chapter 6
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章
- en: 'Consider the following code:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下代码：
- en: '[PRE3]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: What is the correct syntax to select the button?
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择按钮的正确语法是什么？
- en: document.querySelector('Click me!')
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('点击我！')
- en: document.querySelector('.button')
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('.button')
- en: document.querySelector('#button')
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('#button')
- en: '**document.querySelector(''button'')**'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**document.querySelector(''button'')**'
- en: 'Take a look at this code:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这段代码：
- en: '[PRE4]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'True or **False**: document.querySelector(''button'') will serve our needs
    to place a click handler on each button.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或**假**：document.querySelector('button')将满足我们对每个按钮放置点击处理程序的需求。
- en: To change the text of the button from "Click me!" to "Click me first!", what
    should we use?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将按钮的文本从“点击我！”更改为“先点我！”，我们应该使用什么？
- en: '**document.querySelectorAll(''button'')[0].innerHTML = "Click me first!"**'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**document.querySelectorAll(''button'')[0].innerHTML = "先点我！"**'
- en: document.querySelector('button')[0].innerHTML = "Click me first!"
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('button')[0].innerHTML = "先点我！"
- en: document.querySelector('button').innerHTML = "Click me first!"
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('button').innerHTML = "先点我！"
- en: document.querySelectorAll('#button')[0].innerHTML = "Click me first!"
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelectorAll('#button')[0].innerHTML = "先点我！"
- en: What method could we use to add another button?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用哪种方法添加另一个按钮？
- en: document.appendChild('button')
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.appendChild('button')
- en: document.appendChild('<button>')
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.appendChild('<button>')
- en: '**document.appendChild(document.createElement(''button''))**'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**document.appendChild(document.createElement(''button''))**'
- en: document.appendChild(document.querySelector('button'))
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.appendChild(document.querySelector('button'))
- en: How can we change the class of the third button to "third"?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何将第三个按钮的类更改为“third”？
- en: document.querySelector('button')[3].className = 'third'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('button')[3].className = 'third'
- en: '**document.querySelectorAll(''button'')[2].className = ''third''**'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**document.querySelectorAll(''button'')[2].className = ''third''**'
- en: document.querySelector('button[2]').className = 'third'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelector('button[2]').className = 'third'
- en: document.querySelectorAll('button')[3].className = 'third'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: document.querySelectorAll('button')[3].className = 'third'
- en: Chapter 7
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: 'Answer the following questions to gauge your understanding of events:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 回答以下问题以衡量您对事件的理解：
- en: Which of these is the second phase of the event lifecycle?
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个是事件生命周期的第二阶段？
- en: Capturing
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 捕获
- en: '**Targeting**'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定位**'
- en: Bubbling
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 冒泡
- en: (Choose all the correct answers) What does the event object provide us with?
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: （选择所有正确答案）事件对象为我们提供了什么？
- en: '**The type of event that is triggered**'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**触发的事件类型**'
- en: '**The target DOM node, if applicable**'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**目标DOM节点（如果适用）**'
- en: '**The mouse coordinates, if applicable**'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**鼠标坐标（如果适用）**'
- en: The parent DOM node, if applicable
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 父DOM节点（如果适用）
- en: 'Look at this code:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这段代码：
- en: '[PRE5]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Which JavaScript features is it using? Select all the answers that apply:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它使用了哪些JavaScript特性？选择所有适用的答案：
- en: '**DOM manipulation**'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**DOM操作**'
- en: '**Event delegation**'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**事件委托**'
- en: '**Event registration**'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**事件注册**'
- en: '**Style changes**'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**样式更改**'
- en: What will happen when the container is clicked?
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当容器被点击时会发生什么？
- en: '`box` will be visible.'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`box` 将可见。'
- en: '`#color` will be red.'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`#color` 将是红色的。'
- en: Both options 1 and 2.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选项1和2都是。
- en: '**There is not enough context to say.**'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**没有足够的上下文来说。**'
- en: In which phase of the event lifecycle do we typically take action?
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在事件生命周期的哪个阶段我们通常采取行动？
- en: '**Targeting**'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定位**'
- en: Capturing
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 捕获
- en: Bubbling
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 冒泡
- en: Chapter 9
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: What is the root cause of memory problems?
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内存问题的根本原因是什么？
- en: The variables in your program are global.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 程序中的变量是全局的。
- en: '**Inefficient code.**'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**低效的代码。**'
- en: JavaScript's performance limitations.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JavaScript的性能限制。
- en: Hardware inadequacies.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 硬件不足。
- en: When using DOM elements, you should store references to them locally versus
    always accessing the DOM.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用DOM元素时，应该将对它们的引用存储在本地，而不是总是访问DOM。
- en: 'True'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真
- en: 'False'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假
- en: '**True when using them more than once**'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**当多次使用它们时为真**'
- en: JavaScript is pre-processed on the server side, and thus more efficient than
    Python.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JavaScript在服务器端进行预处理，因此比Python更有效。
- en: 'True'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真
- en: '**False**'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假**'
- en: Setting breakpoints can't find memory leaks.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置断点无法找到内存泄漏。
- en: 'True'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真
- en: '**False**'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假**'
- en: It's a good idea to store all variables in the global namespace as they're more
    efficient to reference.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有变量存储在全局命名空间中是一个好主意，因为它们更有效地引用。
- en: 'True'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真
- en: '**False**'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假**'
