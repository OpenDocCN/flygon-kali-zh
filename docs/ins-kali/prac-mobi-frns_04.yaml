- en: Data Acquisition from iOS Devices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS设备的数据采集
- en: An iOS device that's been recovered from a crime scene can be a rich source
    of evidence. Think about how personal a smartphone is to a user; nothing else
    that's digital comes close. We rarely leave our homes or even walk around outside
    them without our smartphones within arm's reach. It's literally a glimpse into
    the most personal aspects of a human, almost like a diary of our everyday activity.
    According to several news references, Oscar Pistorius' iPads were examined by
    a mobile expert and presented during his trial to show his internet activity hours
    before the death of his girlfriend. When an iOS device can provide access to a
    so-called *smoking gun*, you, as the examiner, must ensure that you know how to
    properly handle, acquire, and analyze the device.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 从犯罪现场找到的iOS设备可能是证据的丰富来源。想想智能手机对用户来说有多么私人化；没有其他数字设备能够与之相提并论。我们很少离开家或者在家附近走动时不离开我们的智能手机。它实际上是一个窥视人类最私人方面的东西，几乎就像我们日常活动的日记。根据几个新闻报道，奥斯卡·皮斯托里斯的iPad被一位移动专家检查，并在他的审判中展示，以展示他女友去世前几个小时的互联网活动。当iOS设备可以提供所谓的“关键证据”时，作为检查员，您必须确保自己知道如何正确处理、获取和分析设备。
- en: There are different ways to acquire forensic data from an iOS device. Though
    each method will have its pluses and minuses, the fundamental principle of any
    acquisition method is to obtain as much data as possible.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以从iOS设备中获取取证数据。尽管每种方法都有其优势和劣势，但任何获取方法的基本原则是尽可能获取尽可能多的数据。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: iOS device operating modes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS设备的操作模式
- en: Password protection and potential bypasses
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码保护和潜在的绕过
- en: Logical acquisition
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑采集
- en: Filesystem acquisition
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件系统获取
- en: Operating modes of iOS devices
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS设备的操作模式
- en: Before we dive into forensic techniques and acquisition methods, it's important
    to know the different operating modes of an iOS device. Many forensic tools and
    methods require you to place the device in one of the operating modes. Understanding
    the iOS device's operating modes is required in order to perform a particular
    action on the device.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入研究取证技术和获取方法之前，了解iOS设备的不同操作模式非常重要。许多取证工具和方法要求您将设备置于其中一个操作模式。了解iOS设备的操作模式是执行设备上的特定操作所必需的。
- en: 'While most commercial tools will demonstrate the proper steps to get the device
    in a particular mode, you must understand what that mode represents. iOS devices
    are capable of running in different operating modes: normal mode, recovery mode,
    and **Device Firmware Update** (**DFU**) mode. Some forensic tools require you
    to know which mode the device is currently utilizing. We will define each mode
    in this section.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大多数商业工具将演示将设备置于特定模式的正确步骤，但您必须了解该模式代表什么。iOS设备能够以不同的操作模式运行：正常模式、恢复模式和**设备固件更新**（DFU）模式。一些取证工具要求您知道设备当前使用的模式。我们将在本节中定义每种模式。
- en: Note that when the term *iPhone* is mentioned, it should be understood that
    the statement remains true for all iOS devices.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当提到*iPhone*时，应理解该说法对所有iOS设备都适用。
- en: Normal mode
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正常模式
- en: When an iPhone is switched on, its operating system is booted; this mode is
    known as normal mode. Most regular activities (calling, texting, and so on) that
    are performed on an iPhone will be run in normal mode.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当iPhone打开时，它的操作系统被引导；这种模式称为正常模式。在iPhone上执行的大多数常规活动（通话、发短信等）都将在正常模式下运行。
- en: 'When an iPhone is turned on, internally, it goes through a *secure boot chain*,
    as shown in the following diagram. This does not occur for jailbroken devices.
    Each step in the boot-up process contains software components that are cryptographically
    signed by Apple to ensure integrity:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当iPhone打开时，内部上，它会通过一个*安全引导链*，如下图所示。越狱设备不会发生这种情况。引导过程中的每个步骤都包含由苹果加密签名的软件组件，以确保完整性：
- en: '![](img/c0a280cd-095e-427c-997b-87d5fd796bd5.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c0a280cd-095e-427c-997b-87d5fd796bd5.png)'
- en: A secure boot chain of an iPhone in normal mode
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone在正常模式下的安全引导链
- en: '*The boot ROM, in turn, verifies whether the Low-Level Bootloader (LLB) is
    signed by Apple and loads it. The LLB is loaded and verified by the boot ROM,
    but this only occurs on devices with an A9 or earlier A-series processor'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*引导ROM然后验证低级引导加载程序（LLB）是否由苹果签名并加载它。LLB由引导ROM加载和验证，但这仅发生在A9或更早的A系列处理器设备上'
- en: 'The *boot ROM**,* known as the *secure ROM*, is **read-only memory** (**ROM**)
    and is the first significant piece of code that runs on an iPhone ([https://www.apple.com/business/docs/iOS_Security_Guide.pdf](https://www.apple.com/business/docs/iOS_Security_Guide.pdf)).
    An explanation of the boot process for iOS devices is defined in the following
    steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*引导ROM*，也称为*安全ROM*，是**只读存储器**（ROM）的第一个重要代码片段，它在iPhone上运行（[https://www.apple.com/business/docs/iOS_Security_Guide.pdf](https://www.apple.com/business/docs/iOS_Security_Guide.pdf)）。iOS设备的引导过程在以下步骤中定义：'
- en: The boot ROM code contains the Apple root **certificate authority** (**CA**)
    public key, which is used to verify the signature of the next stage before allowing
    it to load.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引导ROM代码包含苹果根**证书颁发机构**（CA）公钥，用于在允许加载之前验证下一阶段的签名。
- en: When the iPhone is started, the application processor executes the code from
    the boot ROM.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当iPhone启动时，应用处理器执行引导ROM的代码。
- en: The boot ROM, in turn, verifies whether the **Low-Level Bootloader** (**LLB**)
    is signed by Apple and loads it. The LLB is loaded and verified by the boot ROM,
    but this only occurs on devices with an A9 or earlier A-series processor.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，引导ROM验证**低级引导加载程序**（LLB）是否由苹果签名并加载它。LLB由引导ROM加载和验证，但这仅发生在A9或更早的A系列处理器设备上。
- en: When the LLB finishes its tasks, it verifies and loads the second-stage boot
    loader (iBoot). iBoot verifies and loads the iOS kernel.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当LLB完成其任务时，它会验证并加载第二阶段引导加载程序（iBoot）。iBoot验证并加载iOS内核。
- en: The iOS kernel, in turn, verifies and runs all the user applications.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: iOS内核然后验证并运行所有用户应用程序。
- en: When an iOS device is in this state, it's possible to gain a part that is accessible
    to the user through forensic acquisition. Most often, this includes a logical
    acquisition, which will be discussed later in this chapter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当iOS设备处于此状态时，可以通过取证获取用户可访问的部分。通常情况下，这包括逻辑获取，稍后将在本章中讨论。
- en: Recovery mode
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恢复模式
- en: 'During the boot-up process, if one step is unable to load or verify the next
    step, then the boot-up is stopped and the iPhone displays the screen shown in
    the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，如果一步无法加载或验证下一步，则启动过程将停止，并且iPhone将显示以下截图中显示的屏幕：
- en: '![](img/e76ee9a8-c570-4b6a-a1b4-b8bf3a0dba6d.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e76ee9a8-c570-4b6a-a1b4-b8bf3a0dba6d.png)'
- en: iOS device recovery mode
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: iOS设备恢复模式
- en: 'This mode is known as recovery mode and is required to perform upgrades or
    restore the iPhone. To enter recovery mode, perform the following steps:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式称为恢复模式，用于执行iPhone的升级或恢复。要进入恢复模式，请执行以下步骤：
- en: Turn off the device.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭设备。
- en: Hold down the iPhone Home button and connect the device to a computer via a
    USB cable. The device should turn on.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住iPhone的Home按钮，并通过USB电缆将设备连接到计算机。设备应该会开机。
- en: Continue holding the Home button until the Connect to iTunes screen appears. Then,
    you can release the Home button (on a jailbroken iOS device, this screen may appear
    with different icons). Most forensic tools and extraction methods will alert you
    regarding the current state of the iOS device.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续按住Home按钮，直到出现“连接到iTunes”屏幕。然后，您可以释放Home按钮（在越狱的iOS设备上，此屏幕可能显示不同的图标）。大多数取证工具和提取方法都会提醒您关于iOS设备当前状态的信息。
- en: To exit recovery mode, reboot the iPhone. On iPhone 6s and earlier, this can
    be completed by holding down the Home and Sleep/Power buttons until the Apple
    logo appears. On iPhone 7 and iPhone 7 Plus, this can be done by holding the Side
    button and Volume Down button together. On iPhone 8 and later, you do this by
    clicking the Volume Up button, then clicking the Volume Down button, and then
    holding down the Side button.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要退出恢复模式，请重新启动iPhone。在iPhone 6s及更早版本上，可以通过按住Home和睡眠/电源按钮直到出现苹果标志来完成此操作。在iPhone
    7和iPhone 7 Plus上，可以通过同时按住侧面按钮和音量减小按钮来完成此操作。在iPhone 8及更高版本上，可以通过点击音量增大按钮，然后点击音量减小按钮，然后按住侧面按钮来完成此操作。
- en: You can read more about recovery mode on iOS devices at [https://support.apple.com/en-in/HT201263](https://support.apple.com/en-in/HT201263).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://support.apple.com/en-in/HT201263](https://support.apple.com/en-in/HT201263)上阅读有关iOS设备恢复模式的更多信息。
- en: Normally, the process of rebooting returns the iPhone from recovery mode to
    normal mode. This same methodology applies to the Apple Watch. You may experience
    a situation where the iPhone constantly reboots into recovery mode. This is known
    as a recovery loop. A recovery loop may occur when the user or examiner attempts
    to jailbreak the iOS device and an error occurs. To get the device out of a recovery
    loop, the device must be connected to iTunes so that a backup can be restored
    to the device.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，重新启动的过程将使iPhone从恢复模式返回到正常模式。这种方法也适用于Apple Watch。您可能会遇到iPhone不断重新启动进入恢复模式的情况。这称为恢复循环。当用户或检查员尝试越狱iOS设备并出现错误时，可能会发生恢复循环。要使设备退出恢复循环，必须将设备连接到iTunes，以便可以将备份恢复到设备上。
- en: This makes changes to the evidence, so ensure that you have validated your acquisition
    methods on a test device prior to attempting to use your methods on real evidence.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这会对证据进行更改，因此请确保在尝试在真实证据上使用方法之前，已经在测试设备上验证了您的获取方法。
- en: DFU mode
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DFU模式
- en: During the boot-up process, if the Boot ROM is unable to load or verify the
    LLB or iBoot (on newer devices), the iPhone enters **Device Firmware Upgrade**
    (**DFU**) mode. DFU mode is a low-level diagnostic mode and is designed to perform
    firmware upgrades for iPhones.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，如果引导ROM无法加载或验证LLB或iBoot（在较新的设备上），iPhone将进入**设备固件升级**（**DFU**）模式。DFU模式是一种低级诊断模式，旨在为iPhone执行固件升级。
- en: 'To enter DFU mode, perform the following steps for iPhone 8 and later:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入DFU模式，请按照以下步骤进行iPhone 8及更高版本：
- en: Connect the device to your workstation via a USB cable.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过USB电缆将设备连接到您的工作站。
- en: Press the Volume Up button and quickly release it.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下音量增大按钮并快速释放它。
- en: Press the Volume Down button and quickly release it.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住音量减小按钮并快速释放它。
- en: Hold the Side button and press the Volume Down button again.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住侧面按钮并再次按下音量减小按钮。
- en: After 5 seconds, release the Side button, but continue holding the Volume Down
    button until you see the Recovery screen.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5秒后，释放侧面按钮，但继续按住音量减小按钮，直到看到恢复屏幕。
- en: 'Follow these steps for iPhone 7:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行iPhone 7：
- en: Connect the device to your workstation via a USB cable.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过USB电缆将设备连接到您的工作站。
- en: At the same time, press and hold the Side and Volume Down buttons.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时按住侧面和音量减小按钮。
- en: Release the Side button, but continue to hold the Volume Down button until you
    see the Recovery screen.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 释放侧面按钮，但继续按住音量减小按钮，直到看到恢复屏幕。
- en: 'Follow these steps for iPhone 6s and earlier:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行iPhone 6s及更早版本：
- en: Connect the device to your workstation via a USB cable.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过USB电缆将设备连接到您的工作站。
- en: At the same time, press and hold the Home and the Top (or Side) buttons.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时按住Home和顶部（或侧面）按钮。
- en: Release the Top (or Side) button and continue holding the Home button.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 释放顶部（或侧面）按钮，继续按住Home按钮。
- en: On iPhone 6s and earlier, nothing will be displayed on the screen when the device
    is in DFU mode.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在iPhone 6s及更早版本上，当设备处于DFU模式时，屏幕上不会显示任何内容。
- en: 'To verify whether the iPhone is in DFU mode on macOS, launch a System Reportand
    go to the USB option. You should see something similar to the following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证iPhone在macOS上是否处于DFU模式，请启动“系统报告”，然后转到USB选项。您应该会看到类似以下截图的内容：
- en: '![](img/653124b3-6f3d-4e98-a6de-4888459f9038.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/653124b3-6f3d-4e98-a6de-4888459f9038.png)'
- en: The MacBook system information displaying a device in DFU mode
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: MacBook系统信息显示处于DFU模式的设备
- en: Next, we will have a quick look at the tools that are required to set up the
    forensic environment.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将快速查看设置取证环境所需的工具。
- en: Setting up the forensic environment
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置取证环境
- en: Nowadays, we have a few tools that can be used by mobile forensic examiners
    to acquire and analyze iOS devices using both macOS and Windows systems as the
    hosts. For example,* Elcomsoft iOS Forensic Toolkit* has both macOS and Windows
    versions; as for free and open source tools, the `libimobiledevice` library can
    be used – not only on macOS and Windows forensic workstations, but even on Linux!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一些工具可以供移动取证人员使用，使用macOS和Windows系统作为主机来获取和分析iOS设备。例如，*Elcomsoft iOS Forensic
    Toolkit*有macOS和Windows版本；至于免费和开源工具，`libimobiledevice`库可以使用 - 不仅在macOS和Windows取证工作站上，甚至在Linux上也可以使用！
- en: We are going to introduce you to these tools with hands-on exercises, of course,
    including practical logical and filesystem acquisitions, and even jailbreaking,
    later in this chapter. But let's start with password protection and potential
    bypasses, since, without the passcode, we can't extract anything from a modern
    iOS device.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面介绍这些工具，并进行实际的逻辑和文件系统获取，甚至越狱。但让我们从密码保护和潜在的绕过开始，因为没有密码，我们无法从现代iOS设备中提取任何内容。
- en: Password protection and potential bypasses
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码保护和潜在的绕过
- en: We want to start with the bad news: if you are examining an iPhone that runs
    iOS 8 or newer, and especially if it's a newer device, for example, the iPhone
    6s, your chances of unlocking it are not good at all.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先说说坏消息：如果你要检查运行iOS 8或更新版本的iPhone，尤其是较新的设备，比如iPhone 6s，你几乎没有解锁的机会。
- en: Of course, there are some hardware-based solutions, such as IP-BOX 3, but all
    of them work only occasionally, and using one of them can even result in bricking
    the device. With iOS 11, this problem becomes even more severe – even if the device
    under examination is not passcode protected, you will need the passcode anyway
    as it must be entered to confirm the trust between the device and your workstation.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，也有一些基于硬件的解决方案，比如IP-BOX 3，但它们都只能偶尔起作用，使用其中一个甚至可能导致设备变砖。随着iOS 11的推出，这个问题变得更加严重
    - 即使被审查的设备没有密码保护，你也需要输入密码来确认设备和工作站之间的信任关系。
- en: So, what should a mobile forensic examiner do? Use the lockdown files! The lockdown
    files, which are stored as a `plist` file on *trusted computers*, allow you to
    trick the device into believing it's unlocked or *trusted* on the forensic workstation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，移动取证人员应该怎么做？使用锁定文件！锁定文件存储在*受信任的计算机*上，以`plist`文件的形式存在，可以让你欺骗设备相信它在取证工作站上是解锁的或*受信任的*。
- en: 'The lockdown files are located in the following locations:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 锁定文件位于以下位置：
- en: '`/var/db/lockdown` on macOS'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS上的`/var/db/lockdown`
- en: '`C:\ProgramData\Apple\Lockdown` on Windows 7 and later releases'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7及更高版本上的`C:\ProgramData\Apple\Lockdown`
- en: You must be aware that unlocking with a lockdown file only works if the device
    was unlocked with a passcode at least once after the last reboot.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须意识到，只有在设备在最后一次重启后至少解锁过一次的情况下，使用锁定文件解锁才有效。
- en: There are also some advanced techniques that exist. These include fingerprint
    molds to trick Touch ID, masks to trick Face ID, and NAND mirroring to bypass
    passcode entry limits.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些高级技术存在。这些包括指纹模具来欺骗Touch ID，面具来欺骗Face ID，以及NAND镜像来绕过密码输入限制。
- en: The first technique was first demonstrated by Jason Chaikin. He demonstrated
    how to bypass Touch ID by lifting another person's fingerprint with common molding
    materials, such as dental mold and Play-Doh.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种技术是由Jason Chaikin首次展示的。他演示了如何通过使用常见的成型材料，如牙科模具和橡皮泥，提取另一个人的指纹来绕过Touch ID。
- en: The second technique was demonstrated as a proof of concept by the Vietnamese
    cybersecurity firm Bkav. They created a mask that can be used to trick the Face
    ID feature using a combination of three-dimensional printing, makeup, and two-dimensional
    images.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种技术是由越南网络安全公司Bkav作为概念验证首次展示的。他们制作了一个面具，可以使用三维打印、化妆和二维图像的组合来欺骗Face ID功能。
- en: The last technique was demonstrated by Sergei Skorobogatov, a senior research
    associate at the Cambridge Computer Laboratory's Security Group. This technique
    allows you to bypass passcode entry limits by soldering off the iPhone's flash
    memory chip and cloning it. This technique should work on any iOS device up to
    iPhone 6s Plus.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一种技术是由剑桥大学计算机实验室安全组的高级研究员Sergei Skorobogatov首次展示的。这种技术允许你通过焊接iPhone的闪存芯片并克隆它来绕过密码输入限制。这种技术应该适用于iPhone
    6s Plus及以下的任何iOS设备。
- en: Logical acquisition
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 逻辑获取
- en: A logical acquisition captures a part of what is accessible to the user; in
    other words, what is included in an iTunes backup. It means that we won't get
    any deleted files, but, thanks to SQLite databases' free lists and unallocated
    space, we can recover deleted records, including SMS and other chats, browsing
    history, and so on. We will discuss recovering SQLite data and deleted artifacts
    in [Chapter 5](4f92f4a2-f8f9-4274-96eb-da9174fc6772.xhtml), *iOS Data Analysis
    and Recovery.*
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑获取捕获了用户可访问的部分内容；换句话说，就是包括在iTunes备份中的内容。这意味着我们无法获得任何已删除的文件，但由于SQLite数据库的空闲列表和未分配空间，我们可以恢复已删除的记录，包括短信和其他聊天记录，浏览历史等。我们将在《iOS数据分析和恢复》[第5章](4f92f4a2-f8f9-4274-96eb-da9174fc6772.xhtml)中讨论恢复SQLite数据和已删除的证据。
- en: Logical acquisition is the simplest way to ascertain whether the device is unlocked
    as it simply uses the built-in backup mechanism. Most tools and methods that support
    the logical acquisition of iOS devices will fail if the device is locked. Some
    think that if a physical image is captured, there is little to no need for a logical
    acquisition. However, not all data is parsed in a physical image, which is why
    having access to a logical image, which results in readable data, will assist
    you in digging deep into the physical image for artifacts to support your forensic
    investigation.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑获取是确定设备是否解锁的最简单方法，因为它只是使用内置的备份机制。大多数支持iOS设备逻辑获取的工具和方法在设备被锁定时会失败。有些人认为，如果捕获了物理镜像，就几乎不需要逻辑获取。然而，并非所有数据都在物理镜像中解析，这就是为什么可以访问逻辑镜像，从而得到可读数据，这将帮助您深入挖掘物理镜像中的证据，以支持您的取证调查。
- en: Logical acquisition is the fastest, easiest, and cheapest way to gain access
    to data stored on an iOS device. There are a variety of tools, ranging from commercial
    to free, that are capable of capturing logical images. Most of these tools require
    that the device be unlocked, or access to the `plist` file from the host machine
    be readily available.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑获取是获得存储在iOS设备上的数据的最快、最简单和最便宜的方法。有各种各样的工具，从商业到免费，都能够捕获逻辑镜像。其中大多数工具要求设备解锁，或者要求主机机器上的`plist`文件可读。
- en: Practical logical acquisition with libimobiledevice
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用libimobiledevice进行实际逻辑获取
- en: Having the theory under your belt is good, but putting this into practice is
    much better. Let's create a logical image of an iPhone running iOS 13.2 with `libimobiledevice`,
    which should already be installed on your workstation, as we used it for device
    information gathering in the previous chapter.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握理论是好的，但将其付诸实践更好。让我们创建一个运行iOS 13.2的iPhone的逻辑镜像，使用`libimobiledevice`，这应该已经安装在您的工作站上，因为我们在上一章中用它进行了设备信息收集。
- en: 'OK, let''s start:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们开始：
- en: 'First of all, let''s make our backups encrypted. Connect the iOS device to
    your workstation and start the Command Prompt. Change the directory to the one
    containing `libimobiledevice` and type in the following command:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们加密我们的备份。将iOS设备连接到您的工作站并启动命令提示符。将目录更改为包含`libimobiledevice`的目录，并输入以下命令：
- en: '[PRE0]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you see Backup encryption has been enabled successfully, then you've done
    everything right and the backups will be encrypted. This will help you, the forensics
    examiner, to gain more information regarding users' passwords, Safari browsing
    history, and much more.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果看到备份加密已成功启用，则您已经做对了，备份将被加密。这将帮助您，取证人员，获取有关用户密码、Safari浏览历史等更多信息。
- en: 'It''s time to create the backup—our iOS device logical image. To do this, type
    in the following command:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是时候创建备份了——我们的iOS设备逻辑镜像。要做到这一点，请输入以下命令：
- en: '[PRE1]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'That''s it. You can see the logical imaging process in the following screenshot:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。您可以在以下截图中看到逻辑成像过程：
- en: '![](img/8eb26ad2-4dd8-4db9-8f43-edc5f7f7ec0f.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8eb26ad2-4dd8-4db9-8f43-edc5f7f7ec0f.png)'
- en: iPhone logical imaging with libimobiledevice
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用libimobiledevice进行iPhone逻辑成像
- en: Next, let's look at logical acquisition with the Belkasoft Acquisition Tool.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看一下使用Belkasoft获取工具进行逻辑获取。
- en: Practical logical acquisition with the Belkasoft Acquisition Tool
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Belkasoft获取工具进行实际逻辑获取
- en: Since logical acquisition is the most common option for modern iOS devices,
    we'll demonstrate how to use a few more free tools. The first one is the Belkasoft
    Acquisition Tool. This tool can be used not only for iOS device acquisition, but
    also for hard drives, and even cloud data.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由于逻辑获取是现代iOS设备最常见的选项，我们将演示如何使用一些更多的免费工具。第一个是Belkasoft获取工具。这个工具不仅可以用于iOS设备获取，还可以用于硬盘甚至云数据。
- en: 'Let''s acquire an iPhone running iOS 13.2.3 using the Belkasoft Acquisition
    Tool:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Belkasoft获取工具获取运行iOS 13.2.3的iPhone：
- en: 'Launch the Belkasoft Acquisition Tool and choose the Mobile device option:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Belkasoft获取工具并选择移动设备选项：
- en: '![](img/ecc44deb-2c74-48a8-a99f-cd8f54f2b210.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecc44deb-2c74-48a8-a99f-cd8f54f2b210.png)'
- en: Choosing the source
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 选择来源
- en: 'In the next window, choose the Apple option:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，选择苹果选项：
- en: '![](img/155f47fb-e14f-495e-b7a0-15458c26170d.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/155f47fb-e14f-495e-b7a0-15458c26170d.png)'
- en: Choosing the mobile type
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 选择移动类型
- en: 'Now, choose the acquisition method and the image path:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择获取方法和镜像路径：
- en: '![](img/29aefeb1-0419-4b44-8286-768b480a10fa.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/29aefeb1-0419-4b44-8286-768b480a10fa.png)'
- en: Choosing the acquisition method
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 选择获取方法
- en: The tool is able to create an iTunes backup if the device isn't jailbroken and
    perform filesystem extraction if it is.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具能够在设备未越狱时创建iTunes备份，并在设备越狱时执行文件系统提取。
- en: 'Wait for the task to finish successfully. You will find your device''s logical
    image in the folder you chose in the previous step:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待任务成功完成。您将在上一步中选择的文件夹中找到设备的逻辑镜像：
- en: '![](img/db5d235f-d6a8-4255-8e6d-ac10d055f52e.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db5d235f-d6a8-4255-8e6d-ac10d055f52e.png)'
- en: Creating the backup
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 创建备份
- en: The backup can be analyzed both by Belkasoft Evidence Center and by many other
    mobile forensic tools.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 备份可以被Belkasoft证据中心和许多其他移动取证工具分析。
- en: Practical logical acquisition with Magnet ACQUIRE
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Magnet ACQUIRE进行实际逻辑获取
- en: 'Another free tool capable of logical acquisition is **ACQUIRE** from Magnet
    Forensics. Let''s perform a logical acquisition again, this time using a device
    running iOS 12.2:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个能够进行逻辑获取的免费工具是来自Magnet Forensics的**ACQUIRE**。让我们再次执行逻辑获取，这次使用运行iOS 12.2的设备：
- en: 'Launch Magnet ACQUIRE and choose the device you want to image from the list:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Magnet ACQUIRE并从列表中选择要镜像的设备：
- en: '![](img/dd1fe238-1247-4534-9970-2ae71a92c6a0.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd1fe238-1247-4534-9970-2ae71a92c6a0.png)'
- en: Choosing the device
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 选择设备
- en: 'Choose the type of image you want to acquire. We want to acquire a logical
    image and our device is not jailbroken, so we are going to choose the Quick option:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要获取的镜像类型。我们想获取逻辑镜像，而我们的设备没有越狱，所以我们将选择快速选项：
- en: '![](img/d166b841-324a-4737-a783-b36cc82d6b66.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d166b841-324a-4737-a783-b36cc82d6b66.png)'
- en: Choosing the image type
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 选择图像类型
- en: 'You can add a description of the evidence source if needed, and choose the
    folder where you want the image to be saved:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，您可以添加证据来源的描述，并选择要保存图像的文件夹：
- en: '![](img/3f8d9f8a-86c8-40ed-8bd2-df086b08afb5.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3f8d9f8a-86c8-40ed-8bd2-df086b08afb5.png)'
- en: Choosing the destination folder, image name, and image information
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 选择目标文件夹、图像名称和图像信息
- en: 'Wait for the tasks to finish successfully; you''ll see a summary of the acquisition
    process:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待任务成功完成；您将看到获取过程的摘要：
- en: '![](img/11f2a674-f0b8-4a30-81f7-563be3b440f4.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11f2a674-f0b8-4a30-81f7-563be3b440f4.png)'
- en: Creating the image
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 创建图像
- en: All extracted data will be saved to the destination folder in a ZIP archive.
    Also, the destination folder will contain a TXT file with the acquisition's process
    log and image information.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 所有提取的数据将保存在ZIP存档中的目标文件夹中。此外，目标文件夹还将包含一个带有获取过程日志和图像信息的TXT文件。
- en: The next section will walk you through jailbreaking and filesystem acquisition.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将指导您进行越狱和文件系统获取。
- en: Filesystem acquisition
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统获取
- en: Secure Enclave has brought new challenges to iOS forensic examiners. We can't
    extract the encryption keys that are required to decrypt the device image, so
    performing physical acquisition is useless. But there is filesystem acquisition.
    Unfortunately, in most cases, it requires the iOS device to be jailbroken. The
    next section will show you how to jailbreak an iPhone running iOS 11.4.1 with
    Electra and an iPhone running iOS 13.2 with Checkra1n.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 安全区域给iOS取证人员带来了新的挑战。我们无法提取解密设备镜像所需的加密密钥，因此进行物理获取是无用的。但有文件系统获取。不幸的是，在大多数情况下，这需要iOS设备越狱。下一节将向您展示如何使用Electra越狱运行iOS
    11.4.1的iPhone，以及如何使用Checkra1n越狱运行iOS 13.2的iPhone。
- en: Practical jailbreaking
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际越狱
- en: 'To perform filesystem acquisition, we need our iOS device to be jailbroken.
    The steps to jailbreak an iOS device running 11.4.1 are as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行文件系统获取，我们需要我们的iOS设备越狱。运行iOS 11.4.1的iOS设备越狱的步骤如下：
- en: Download `Electra` from: [https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa](https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa).
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa](https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa)下载`Electra`。
- en: 'Download `Cydia Impactor` ([http://www.cydiaimpactor.com/](http://www.cydiaimpactor.com/)),
    run it, and connect the device to your workstation:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载`Cydia Impactor` ([http://www.cydiaimpactor.com/](http://www.cydiaimpactor.com/))，运行它，并将设备连接到您的工作站：
- en: '![](img/3a5e89f6-befb-4614-b972-5a33885ecc2a.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a5e89f6-befb-4614-b972-5a33885ecc2a.png)'
- en: Running Cydia Impactor
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Cydia Impactor
- en: Drag and drop the `Electra IPA` file to the `Cydia Impactor` window.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Electra IPA`文件拖放到`Cydia Impactor`窗口中。
- en: Type any Apple ID in the new window (you can register a new one for every device
    you examine).
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新窗口中输入任何Apple ID（您可以为您检查的每个设备注册一个新的）。
- en: Log on with this Apple ID to [https://appleid.apple.com/](https://appleid.apple.com/) and
    generate an app-specific password under the Security section. Paste this password
    into the next window. Wait for the process to finish.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用此Apple ID登录[https://appleid.apple.com/](https://appleid.apple.com/)，并在安全部分生成一个特定于应用程序的密码。将此密码粘贴到下一个窗口中。等待过程完成。
- en: 'On the phone, go to Settings | General | Device Management | Apple ID and tap
    Trust:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在手机上，转到设置|通用|设备管理|Apple ID，并点击信任：
- en: '![](img/d529bb5c-bf6f-4e21-8ad2-1946a8cd8648.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d529bb5c-bf6f-4e21-8ad2-1946a8cd8648.png)'
- en: Verifying the developer
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 验证开发者
- en: Put the phone into Airplane mode, turn Siri off, and reboot the device.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将手机设置为飞行模式，关闭Siri，并重新启动设备。
- en: 'Tap the Electra icon on the Springboard and then choose Jailbreak. If the process
    finishes successfully, you will find the Cydia icon on the Springboard:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Springboard上点击Electra图标，然后选择Jailbreak。如果过程成功完成，你会在Springboard上找到Cydia图标：
- en: '![](img/611a08f6-bede-4da9-b57b-06bca3b79384.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/611a08f6-bede-4da9-b57b-06bca3b79384.png)'
- en: Jailbreaking the device
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 越狱设备
- en: Now, the phone is jailbroken and ready for filesystem acquisition.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，手机已经越狱并准备好进行文件系统获取。
- en: '`Checkra1n` is based on a bootrom vulnerability and exploit and supports a
    wide range of iOS devices, even those running the latest (at the time of writing)
    iOS 13.2\. Here are the steps to jailbreak an iOS device running 13.2:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`Checkra1n`基于bootrom漏洞和利用，并支持各种iOS设备，甚至是运行最新（撰写时）的iOS 13.2的设备。以下是运行iOS 13.2的iOS设备越狱的步骤：'
- en: Download `Checkra1n` from: [https://checkra.in/](https://checkra.in/).
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://checkra.in/](https://checkra.in/)下载`Checkra1n`。
- en: Run the application. At the time of writing, `Checkra1n` is only available for
    macOS.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行应用程序。撰写时，`Checkra1n`仅适用于macOS。
- en: 'Connect the device and put it into DFU mode:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接设备并将其放入DFU模式：
- en: '![](img/370be42e-f715-49dc-8ad7-06e0135ec1ec.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/370be42e-f715-49dc-8ad7-06e0135ec1ec.png)'
- en: Putting the device into DFU mode
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 将设备放入DFU模式
- en: 'Wait for the exploitation process to finish:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待利用过程完成：
- en: '![](img/e16ecd22-6179-4e31-a1aa-3c84fd7a289a.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e16ecd22-6179-4e31-a1aa-3c84fd7a289a.png)'
- en: Exploitation process
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 利用过程
- en: Once the device has been rebooted, you will find the checkra1n icon on the Springboard
    – the device is now jailbroken and ready for filesystem acquisition.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设备重新启动，您将在Springboard上找到checkra1n图标 - 设备现在已经越狱并准备好进行文件系统获取。
- en: For more jailbreaking techniques, please refer to the *Jailbreaking* section
    of [Chapter 2](acc4800c-2775-4ca6-9f5f-e447fa5ac0a8.xhtml), *Understanding the
    Internals of iOS Devices*.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多越狱技术，请参阅《第2章》（acc4800c-2775-4ca6-9f5f-e447fa5ac0a8.xhtml）的“越狱”部分，《了解iOS设备的内部》。
- en: Practical filesystem acquisition with free tools
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用免费工具进行实际文件系统获取
- en: 'It''s time to perform filesystem acquisition. All we''ll need is `iproxy` from
    `libimobiledevice`:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候进行文件系统获取了。我们只需要`libimobiledevice`中的`iproxy`：
- en: 'Open a Command Prompt window and run `iproxy` with the following parameters:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符窗口，并使用以下参数运行`iproxy`：
- en: '![](img/8c762d32-cd21-496e-bbf8-773ff72e3413.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8c762d32-cd21-496e-bbf8-773ff72e3413.png)'
- en: 'Open another Command Prompt window, change the directory to the one you want
    your image to be stored in, and run the following command:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开另一个命令提示符窗口，将目录更改为您希望存储图像的目录，并运行以下命令：
- en: '[PRE2]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To connect via SSH, you will be prompted for the necessary password. The default
    password for SSH is *alpine*.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过SSH连接，您将被提示输入必要的密码。SSH的默认密码是*alpine*。
- en: 'Once the process has finished, you''ll find the created filesystem image in
    the directory you changed to before running the preceding command. It''s a TAR
    archive and can be opened with many archivers, such as 7-Zip:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦过程完成，您将在更改为之前运行上述命令的目录中找到创建的文件系统镜像。它是一个TAR存档，可以用许多解档程序打开，比如7-Zip：
- en: '![](img/f5ba6cb7-7d36-4f65-8ea7-bd0da366cb7e.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5ba6cb7-7d36-4f65-8ea7-bd0da366cb7e.png)'
- en: Filesystem image contents
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统镜像内容
- en: Next, let's look at the *Elcomsoft iOS Forensic Toolkit*.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看*Elcomsoft iOS Forensic Toolkit*。
- en: Practical filesystem acquisition with Elcomsoft iOS Forensic Toolkit
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Elcomsoft iOS Forensic Toolkit进行实际文件系统获取
- en: Of course, commercial tools are more stable and reliable. One of the tools that's
    capable of filesystem acquisition is the Elcomsoft iOS Forensic Toolkit. Here,
    we are going to acquire a jailbroken iOS device running iOS 12.4.3.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，商业工具更加稳定可靠。其中一个能够进行文件系统获取的工具是Elcomsoft iOS Forensic Toolkit。在这里，我们将获取一个运行iOS
    12.4.3的越狱iOS设备。
- en: 'The steps to do this are as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的步骤如下：
- en: Connect the device to your workstation and start `Toolkit.cmd`.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将设备连接到您的工作站并启动`Toolkit.cmd`。
- en: 'Choose the port to use for SSH connection (the default is `22`, but since we
    used checkra1n for jailbreaking, the port is `44` instead) and type in the password
    (the default is `alpine`):'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择用于SSH连接的端口（默认为`22`，但由于我们使用checkra1n进行越狱，端口改为`44`），并输入密码（默认为`alpine`）：
- en: '![](img/a87928bc-2348-4f86-9cd2-36c9f4301088.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a87928bc-2348-4f86-9cd2-36c9f4301088.png)'
- en: 'To acquire the device filesystem, type *F*:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取设备文件系统，请键入*F*：
- en: '![](img/cdbd5f6d-d1da-4e92-8184-2f13d900bdca.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cdbd5f6d-d1da-4e92-8184-2f13d900bdca.png)'
- en: Choose the image name and start the process.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择图像名称并开始该过程。
- en: Once the process has finished, we'll have a filesystem image ready to be analyzed
    with a mobile forensic tool of our choice.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦过程完成，我们将拥有一个准备好用我们选择的移动取证工具分析的文件系统镜像。
- en: Summary
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The first step in iOS device forensic examination is to acquire the data from
    the device. There are several different ways to acquire data from an iOS device.
    This chapter covered logical and filesystem acquisition techniques, as well as
    jailbreaking and methods to bypass passcodes.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: iOS设备取证检查的第一步是从设备中获取数据。有几种不同的方法可以从iOS设备中获取数据。本章涵盖了逻辑和文件系统获取技术，以及越狱和绕过密码的方法。
- en: While filesystem acquisition is the best method for forensically obtaining a
    majority of the data from iOS devices, backup files may exist or be the only method
    to extract data from the device.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然文件系统获取是从iOS设备中取得大部分数据的法医最佳方法，但备份文件可能存在或者是从设备中提取数据的唯一方法。
- en: The next chapter will discuss iOS device backup files in detail, including user,
    forensic, encrypted, and iCloud backup files, and the methods that you can perform
    to conduct your forensic examination.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将详细讨论iOS设备备份文件，包括用户、法医、加密和iCloud备份文件，以及您可以执行的取证检查方法。
