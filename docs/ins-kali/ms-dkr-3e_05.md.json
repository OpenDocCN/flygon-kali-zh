["```\n$ docker image pull redis:alpine\n$ docker image pull russmckendrick/moby-counter\n$ docker network create moby-counter\n$ docker container run -d --name redis --network moby-counter redis:alpine\n$ docker container run -d --name moby-counter --network moby-counter -p 8080:80 russmckendrick/moby-counter\n```", "```\n$ orchard hosts create\n$ orchard docker run -p 6379:6379 -d orchardup/redis\n```", "```\nversion: \"3\"\n\nservices:\n redis:\n image: redis:alpine\n volumes:\n - redis_data:/data\n restart: always\n mobycounter:\n depends_on:\n - redis\n image: russmckendrick/moby-counter\n ports:\n - \"8080:80\"\n restart: always\n\nvolumes:\n redis_data:\n```", "```\n$ docker-compose up\n```", "```\nversion: \"3\"\n```", "```\nservices: --> container name: ----> container options --> container name: ----> container options\n```", "```\nservices:\n redis:\n image: redis:alpine\n volumes:\n - redis_data:/data\n restart: always\n mobycounter:\n depends_on:\n - redis\n image: russmckendrick/moby-counter\n ports:\n - \"8080:80\"\n restart: always\n```", "```\nvolume:\n redis_data:\n```", "```\nversion: \"3\"\n\nservices:\n```", "```\n vote:\n build: ./vote\n command: python app.py\n volumes:\n - ./vote:/app\n ports:\n - \"5000:80\"\n networks:\n - front-tier\n - back-tier\n```", "```\n result:\n build: ./result\n command: nodemon server.js\n volumes:\n - ./result:/app\n ports:\n - \"5001:80\"\n - \"5858:5858\"\n networks:\n - front-tier\n - back-tier\n```", "```\n worker:\n build:\n context: ./worker\n depends_on:\n - \"redis\"\n networks:\n - back-tier\n```", "```\n redis:\n image: redis:alpine\n container_name: redis\n ports: [\"6379\"]\n networks:\n - back-tier\n```", "```\n db:\n image: postgres:9.4\n container_name: db\n volumes:\n - \"db-data:/var/lib/postgresql/data\"\n networks:\n - back-tier\n```", "```\nvolumes:\n db-data:\n```", "```\nnetworks:\n front-tier:\n back-tier:\n```", "```\nCreating network \"example-voting-app_front-tier\" with the default driver\nCreating network \"example-voting-app_back-tier\" with the default driver\nCreating volume \"example-voting-app_db-data\" with default driver\n```", "```\nBuilding vote\nStep 1/7 : FROM python:2.7-alpine\n2.7-alpine: Pulling from library/python\n8e3ba11ec2a2: Pull complete\nea489525e565: Pull complete\nf0d8a8560df7: Pull complete\n8971431029b9: Pull complete\nDigest: sha256:c9f17d63ea49a186d899cb9856a5cc1c601783f2c9fa9b776b4582a49ceac548\nStatus: Downloaded newer image for python:2.7-alpine\n ---> 5082b69714da\nStep 2/7 : WORKDIR /app\n ---> Running in 663db929990a\nRemoving intermediate container 663db929990a\n ---> 45fe48ea8e4c\nStep 3/7 : ADD requirements.txt /app/requirements.txt\n ---> 2df3b3211688\nStep 4/7 : RUN pip install -r requirements.txt\n ---> Running in 23ad90b81e6b\n[lots of python build output here]\nStep 5/7 : ADD . /app\n ---> cebab4f80850\nStep 6/7 : EXPOSE 80\n ---> Running in b28d426e3516\nRemoving intermediate container b28d426e3516\n ---> bb951ea7dffc\nStep 7/7 : CMD [\"gunicorn\", \"app:app\", \"-b\", \"0.0.0.0:80\", \"--log-file\", \"-\", \"--access-logfile\", \"-\", \"--workers\", \"4\", \"--keep-alive\", \"0\"]\n ---> Running in 2e97ca847f8a\nRemoving intermediate container 2e97ca847f8a\n ---> 638c74fab05e\nSuccessfully built 638c74fab05e\nSuccessfully tagged example-voting-app_vote:latest\nWARNING: Image for service vote was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\n```", "```\nBuilding worker\nStep 1/5 : FROM microsoft/dotnet:2.0.0-sdk\n2.0.0-sdk: Pulling from microsoft/dotnet\n3e17c6eae66c: Pull complete\n74d44b20f851: Pull complete\na156217f3fa4: Pull complete\n4a1ed13b6faa: Pull complete\n18842ff6b0bf: Pull complete\ne857bd06f538: Pull complete\nb800e4c6f9e9: Pull complete\nDigest: sha256:f4ea9cdf980bb9512523a3fb88e30f2b83cce4b0cddd2972bc36685461081e2f\nStatus: Downloaded newer image for microsoft/dotnet:2.0.0-sdk\n ---> fde8197d13f4\nStep 2/5 : WORKDIR /code\n ---> Running in 1ca2374cff99\nRemoving intermediate container 1ca2374cff99\n ---> 37f9b05325f9\nStep 3/5 : ADD src/Worker /code/src/Worker\n ---> 9d393c6bd48c\nStep 4/5 : RUN dotnet restore -v minimal src/Worker && dotnet publish -c Release -o \"./\" \"src/Worker/\"\n ---> Running in ab9fe7820062\n Restoring packages for /code/src/Worker/Worker.csproj...\n [lots of .net build output here]\n Restore completed in 8.86 sec for /code/src/Worker/Worker.csproj.\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\nCopyright (C) Microsoft Corporation. All rights reserved.\n Worker -> /code/src/Worker/bin/Release/netcoreapp2.0/Worker.dll\n Worker -> /code/src/Worker/\nRemoving intermediate container ab9fe7820062\n ---> cf369fbb11dd\nStep 5/5 : CMD dotnet src/Worker/Worker.dll\n ---> Running in 232416405e3a\nRemoving intermediate container 232416405e3a\n ---> d355a73a45c9\nSuccessfully built d355a73a45c9\nSuccessfully tagged example-voting-app_worker:latest\nWARNING: Image for service worker was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\n```", "```\nPulling redis (redis:alpine)...\nalpine: Pulling from library/redis\n8e3ba11ec2a2: Already exists\n1f20bd2a5c23: Pull complete\n782ff7702b5c: Pull complete\n82d1d664c6a7: Pull complete\n69f8979cc310: Pull complete\n3ff30b3bc148: Pull complete\nDigest: sha256:43e4d14fcffa05a5967c353dd7061564f130d6021725dd219f0c6fcbcc6b5076\nStatus: Downloaded newer image for redis:alpine\n```", "```\nPulling db (postgres:9.4)...\n9.4: Pulling from library/postgres\nbe8881be8156: Pull complete\n01d7a10e8228: Pull complete\nf8968e0fd5ca: Pull complete\n69add08e7e51: Pull complete\n954fe1f9e4e8: Pull complete\n9ace39987bb3: Pull complete\n9020931bcc5d: Pull complete\n71f421dd7dcd: Pull complete\na909f41228ab: Pull complete\ncb62befcd007: Pull complete\n4fea257fde1a: Pull complete\nf00651fb0fbf: Pull complete\n0ace3ceac779: Pull complete\nb64ee32577de: Pull complete\nDigest: sha256:7430585790921d82a56c4cbe62fdf50f03e00b89d39cbf881afa1ef82eefd61c\nStatus: Downloaded newer image for postgres:9.4\n```", "```\nBuilding result\nStep 1/11 : FROM node:8.9-alpine\n8.9-alpine: Pulling from library/node\n605ce1bd3f31: Pull complete\n79b85b1676b5: Pull complete\n20865485d0c2: Pull complete\nDigest: sha256:6bb963d58da845cf66a22bc5a48bb8c686f91d30240f0798feb0d61a2832fc46\nStatus: Downloaded newer image for node:8.9-alpine\n ---> 406f227b21f5\nStep 2/11 : RUN mkdir -p /app\n ---> Running in 4af9c85c67ee\nRemoving intermediate container 4af9c85c67ee\n ---> f722dde47fcf\nStep 3/11 : WORKDIR /app\n ---> Running in 8ad29a42f32f\nRemoving intermediate container 8ad29a42f32f\n ---> 32a05580f2ec\nStep 4/11 : RUN npm install -g nodemon\n[lots and lots of nodejs output]\nStep 8/11 : COPY . /app\n ---> 725966c2314f\nStep 9/11 : ENV PORT 80\n ---> Running in 6f402a073bf4\nRemoving intermediate container 6f402a073bf4\n ---> e3c426b5a6c8\nStep 10/11 : EXPOSE 80\n ---> Running in 13db57b3c5ca\nRemoving intermediate container 13db57b3c5ca\n ---> 1305ea7102cf\nStep 11/11 : CMD [\"node\", \"server.js\"]\n ---> Running in a27700087403\nRemoving intermediate container a27700087403\n ---> 679c16721a7f\nSuccessfully built 679c16721a7f\nSuccessfully tagged example-voting-app_result:latest\nWARNING: Image for service result was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\n```", "```\n$ docker-compose up -d\n```", "```\n$ docker-compose ps\n```", "```\n$ docker-compose config\n```", "```\n$ docker-compose config -q\n```", "```\nERROR: yaml.parser.ParserError: while parsing a block mapping in \"./docker-compose.yml\", line 1, column 1 expected <block end>, but found '<block mapping start>' in \"./docker-compose.yml\", line 27, column 3\n```", "```\n$ docker-compose pull\n```", "```\n$ docker-compose build\n```", "```\n$ docker-compose create\n```", "```\n$ docker-compose start\n$ docker-compose stop\n$ docker-compose restart\n$ docker-compose pause\n$ docker-compose unpause\n```", "```\n$ docker-compose pause db\n$ docker-compose unpause db\n```", "```\n$ docker-compose top\n```", "```\n$ docker-compose top db\n```", "```\n$ docker-compose logs\n```", "```\n$ docker-compose events\n```", "```\n$ docker-compose exec worker ping -c 3 db\n```", "```\n$ docker-compose run --volume data_volume:/app composer install\n```", "```\n$ docker-compose scale worker=3\n```", "```\nWARNING: The scale command is deprecated. Use the up command with the -scale flag instead.\n```", "```\n$ docker-compose up -d --scale worker=3\n```", "```\n$ docker-compose up -d --scale vote=3\n```", "```\n$ docker-compose kill\n```", "```\n$ docker-compose rm\n```", "```\n$ docker-compose down\n```", "```\n$ docker-compose down --rmi all --volumes\n```", "```\n$ VERSION=v0.4.1\n```", "```\n$ curl -SL https://github.com/docker/app/releases/download/$VERSION/docker-app-darwin.tar.gz | tar xJ -C /usr/local/bin/\n$ mv /usr/local/bin/docker-app-darwin /usr/local/bin/docker-app\n$ chmod +x /usr/local/bin/docker-app\n```", "```\n$ docker-app version\n```", "```\nError: unsupported Compose file version: 3\n```", "```\n$ docker-app init --single-file mobycounter\n```", "```\nversion: latest\nname: mobycounter\ndescription: An example Docker App file which packages up the Moby Counter application\nnamespace: masteringdockerthirdedition\nmaintainers:\n - name: Russ McKendrick\n email: russ@mckendrick.io\n\n---\nversion: \"3.6\"\n\nservices:\n redis:\n image: redis:alpine\n volumes:\n - redis_data:/data\n restart: always\n mobycounter:\n depends_on:\n - redis\n image: russmckendrick/moby-counter\n ports:\n - \"${port}:80\"\n restart: always\n\nvolumes:\n redis_data:\n\n---\n\n{ \"port\":\"8080\" }\n```", "```\n$ docker-app save\n```", "```\n$ docker-app ls\n```", "```\n$ docker image ls\n```", "```\n$ docker-app inspect masteringdockerthirdedition/mobycounter.dockerapp:latest\n```", "```\n$ docker-app push\n```", "```\n$ docker image rm masteringdockerthirdedition/mobycounter.dockerapp:latest\n```", "```\n$ cd ~/\n```", "```\n$ docker-app render masteringdockerthirdedition/mobycounter:latest --set port=\"9090\" | docker-compose -f - up\n```", "```\n$ docker-app render masteringdockerthirdedition/mobycounter:latest --set port=\"9090\" | docker-compose -f - ps $ docker-app render masteringdockerthirdedition/mobycounter:latest --set port=\"9090\" | docker-compose -f - down --rmi all --volumes\n```"]