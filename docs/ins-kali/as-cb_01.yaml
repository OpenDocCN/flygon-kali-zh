- en: Chapter 1. Welcome to Android Studio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。欢迎来到Android Studio
- en: In this chapter, we will cover some basic tasks related to Android Studio. While
    reading this and the other chapters, you will learn how to use Android Studio
    efficiently.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖与Android Studio相关的一些基本任务。在阅读本章和其他章节时，您将学习如何有效地使用Android Studio。
- en: 'In this chapter, you will learn the following recipes:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下配方：
- en: Creating your first app called `Hello Android Studio`.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建您的第一个名为`Hello Android Studio`的应用程序。
- en: The use of Gradle build scripts
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Gradle构建脚本
- en: Testing your app with an emulator called Genymotion
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用名为Genymotion的模拟器测试您的应用程序
- en: Refactoring your code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重构您的代码
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: This chapter is an introduction to Android Studio and provides a helicopter
    view of the different tools that come with this **Integrated Development Environment
    (IDE)**. In addition to this, some other important tools will be discussed here,
    such as Genymotion, the emulator that I highly recommend you to use to test your
    app on different kinds of devices.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是对Android Studio的介绍，并提供了这个**集成开发环境（IDE）**所配备的不同工具的概览。除此之外，还将在这里讨论一些其他重要的工具，比如Genymotion，我强烈建议您使用它来测试您的应用在不同类型的设备上。
- en: Using Android Studio, you can create any app you like. Apps for phones, phablets,
    tablets, watches and other wearables, Google Glass, TV apps, and even auto apps.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Android Studio，您可以创建任何您喜欢的应用程序。手机应用程序、平板电脑应用程序、手表和其他可穿戴设备应用程序、谷歌眼镜、电视应用程序，甚至汽车应用程序。
- en: If you already have mobile programming experience or even have worked with Android
    apps and Eclipse before and you want to discover how to create apps that take
    pictures, play media, work on any device, connect to a cloud, or anything else
    that you can think of, then this book is for you!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有移动编程经验，甚至以前使用过Android应用程序和Eclipse，并且想要了解如何创建拍照、播放媒体、在任何设备上工作、连接到云端或者您能想到的其他任何功能的应用程序，那么这本书就适合您！
- en: All recipes described in this book are based on Android Studio for Mac; however,
    it is not a problem at all if you are using Android Studio for Windows or Linux
    instead. The terminology is the same for all platforms. Just the screenshots provided
    with each recipe may look a little bit different, but I am pretty sure you can
    figure that out with a little effort. If there are any significant differences
    for Windows, I will let you know.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中描述的所有配方都是基于Mac上的Android Studio；但是，如果您使用的是Windows或Linux上的Android Studio，这一点完全没有问题。所有平台的术语都是相同的。只是每个配方提供的截图可能看起来有点不同，但我相信您可以通过一点努力找出来。如果Windows有任何重大差异，我会告诉您的。
- en: Reasons why we should use Android Studio
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么我们应该使用Android Studio
- en: Android Studio is the recommended IDE to develop Android apps and is available
    for free for anyone who develops professional Android apps. Android Studio is
    based on the JetBrains IntelliJ IDEA software, which might explain why even the
    preview and beta versions of Android studio were already better than Eclipse and
    why many Android developers were using it as their IDE from the beginning.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio是开发Android应用程序的推荐IDE，对于任何开发专业Android应用程序的人来说都是免费的。Android Studio基于JetBrains
    IntelliJ IDEA软件，这可能解释了为什么即使Android Studio的预览和测试版本都比Eclipse更好，以及为什么许多Android开发人员从一开始就使用它作为他们的IDE。
- en: The first stable build of Android Studio was released in December 2014 and has
    replaced Eclipse (with Android Development Tools) as the primary IDE for Android
    development. Now, with Android Studio, we do not just have a more stable and faster
    IDE, but it also comes with cool stuff such as Gradle, better refactoring methods,
    and a much better layout editor to name just a few of them.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio的第一个稳定版本于2014年12月发布，取代了Eclipse（带有Android开发工具）成为Android开发的主要IDE。现在，有了Android
    Studio，我们不仅拥有了一个更稳定和更快的IDE，而且还有了一些很酷的东西，比如Gradle、更好的重构方法和更好的布局编辑器，仅举几例。
- en: Okay, I still have some weird issues every now and then (I guess that is what
    life as a mobile developer is all about sometimes) but I certainly do not feel
    the frustration that I had felt when I was working with Eclipse. If you are using
    Eclipse for plain Java development, it is just fine I guess; however, it does
    not play nicely with Android. If you have been using IntelliJ IDEA for Java development
    tasks before, then Android Studio will look pretty familiar to you.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我偶尔还是会遇到一些奇怪的问题（我想这就是作为移动开发人员有时会遇到的情况），但我肯定不会像在使用Eclipse时那样感到沮丧。如果您只是使用Eclipse进行普通的Java开发，我想那也还好；但是，它与Android不兼容。如果您以前在Java开发任务中使用过IntelliJ
    IDEA，那么Android Studio对您来说会看起来非常熟悉。
- en: Android Studio really brought back the fun of mobile development. If you are
    using Eclipse currently, then you should switch to Android Studio instantly! To
    see it for yourself, get it from [https://developer.android.com/sdk/index.html](https://developer.android.com/sdk/index.html)
    and start building cool apps using Android Studio right away.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio真的让移动开发变得有趣起来。如果您目前正在使用Eclipse，那么您应该立即切换到Android Studio！要亲自看看，请从[https://developer.android.com/sdk/index.html](https://developer.android.com/sdk/index.html)获取它，并立即开始使用Android
    Studio构建酷炫的应用程序。
- en: Fragmentation
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 碎片化
- en: What has remained is the fragmentation challenge that you need to deal with
    when it comes to Android development. There are many devices running on many Android
    flavors and versions.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 留下的是Android开发中需要处理的碎片化挑战。有许多设备运行在许多Android版本和版本上。
- en: There are a lot of Android versions, resulting in fragmentation. Because of
    this, you cannot expect that all devices will run on the latest Android version.
    In fact, most do not. Many devices still run on Android 4.x (or even older versions),
    for example.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多Android版本，导致了碎片化。因此，您不能期望所有设备都能运行在最新的Android版本上。事实上，大多数设备都没有。许多设备仍在运行Android
    4.x（甚至更旧的版本）。
- en: Here, you can see a table with all the relevant Android versions and distribution
    numbers. The numbers in this table indicate that if you decide to support Android
    4.0 and later releases, you will reach 88.7 percent of all Android users. In this
    example, the numbers for Q2 2015 are shown, which explains why **Android Marshmallow
    (6.0)** is not being listed here. If you create a new project in Android Studio,
    you can get the actual numbers by clicking on a **Help me** **Choose** link in
    the **Create New project** wizard dialog, as we will find out in the next chapters.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到一个包含所有相关Android版本和分发数字的表格。这个表格中的数字表明，如果您决定支持Android 4.0及以后的版本，您将能够触及88.7%的所有Android用户。在这个例子中，显示了2015年第二季度的数字，这解释了为什么**Android
    Marshmallow (6.0)**在这里没有列出。如果您在Android Studio中创建一个新项目，您可以通过在**创建新项目**向导对话框中点击**帮助我选择**链接来获取实际的数字，这将在接下来的章节中找出。
- en: 'Let''s have a look at the following screenshot which describes the cumulative
    distribution of different Android platform version along with their API level:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下下面的屏幕截图，描述了不同Android平台版本的累积分布以及它们的API级别：
- en: '![Fragmentation](img/B04299_01_05.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![碎片化](img/B04299_01_05.jpg)'
- en: In addition to software fragmentation, there is also a lot of hardware fragmentation
    that you should be aware of. Writing an Android app is not that hard but writing
    an app that functions well on any Android device actually is.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了软件碎片化之外，还有许多硬件碎片化需要注意。编写Android应用程序并不难，但编写一个能够在任何Android设备上正常运行的应用程序确实很难。
- en: A good app should be able to run on as many different devices as possible. For
    example, think of an app that takes pictures. Android devices do have a camera
    or multiple ones or no camera at all. Depending on other functionalities that
    your app provides, you might need to worry about other things as well, such as
    whether a device is able to record sound or not.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的应用程序应该能够在尽可能多的不同设备上运行。例如，想象一个拍照的应用程序。Android设备可能有一个摄像头，多个摄像头，或者根本没有摄像头。根据您的应用程序提供的其他功能，您可能还需要担心其他事情，比如设备是否能够录制声音等。
- en: I can imagine you want to reach an audience as large as possible so you should
    always ask yourself which of your app feature demands will or will not have to
    be mandatory. If a device does not have a camera, the user might not be able to
    take pictures, but should that really be a reason for not allowing the user to
    use the app at all?
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以想象你想要触及尽可能多的受众，所以你应该始终问自己，你的应用功能需求中哪些是必须的，哪些是不必要的。如果设备没有摄像头，用户可能无法拍照，但这真的是不允许用户使用应用的理由吗？
- en: The introduction of runtime permissions in Android Marshmallow (6.0) makes it
    even more important for you to provide some kind of a fallback functionality in
    your app. At least you need to explain why a particular functionality is not available
    in your app. For example, the user device does not support it or the user did
    not gave permission for it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android Marshmallow (6.0)中引入运行时权限使您更加重视在应用程序中提供某种后备功能。至少您需要解释为什么某个特定功能在您的应用程序中不可用。例如，用户设备不支持它或用户没有为其授予权限。
- en: This book is going to help you deal with Android fragmentation and other issues.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书将帮助您处理Android碎片化和其他问题。
- en: Creating your first app called Hello Android Studio
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的第一个名为Hello Android Studio的应用程序
- en: After downloading Android Studio, install it and go through the setup wizards.
    The wizard checks for some requirements, whether the **Java Development Kit**
    (**JDK**) is available, and other important elements that the installation wizards
    guide you through.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下载Android Studio后，安装并按照设置向导进行操作。向导会检查一些要求，例如**Java开发工具包**（JDK）是否可用，以及其他重要的元素，安装向导会引导您完成这些操作。
- en: Once the installation is complete, it is time to develop your first Android
    app using Android Studio, just to check whether everything has been installed
    correctly and works the way it should. It probably will be no surprise that this
    is where the Hello Android Studio recipe comes in.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，是时候使用Android Studio开发您的第一个Android应用程序了，只是为了检查一切是否已正确安装并且正常运行。这可能不会让人感到意外，这就是Hello
    Android Studio教程的用武之地。
- en: Getting ready
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To go through this recipe, you will need a running Android Studio IDE, an Android
    **Software Development Kit** (**SDK**), and an Android device. No other prerequisites
    are required.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个教程，你需要一个运行中的Android Studio IDE，一个Android软件开发工具包（SDK）和一个Android设备。不需要其他先决条件。
- en: How to do it...
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s create our first Android app using Android Studio to check whether everything
    works fine with the help of the following steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Android Studio创建我们的第一个Android应用程序，以检查一切是否正常运行，以下是帮助的步骤：
- en: Start Android Studio. The **Welcome to Android Studio** dialog will be shown
    to you after a few seconds.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Android Studio。几秒钟后，**欢迎使用Android Studio**对话框将显示给您。
- en: Select the **Start a new Android Studio project** option. Then, the **Configure
    your new project** dialog appears.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**开始一个新的Android Studio项目**选项。然后，**配置您的新项目**对话框将出现。
- en: For **Application name**, enter `HelloAndroidStudio`; and for the **Company
    domain** field, enter `packtpub.com` (or use the domain name of your own company
    if you prefer to do so).
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**应用程序名称**，输入`HelloAndroidStudio`；对于**公司域**字段，输入`packtpub.com`（或者如果您愿意，可以使用您自己公司的域名）。
- en: Package names such as `packtpub.com` and `helloandroidstudio` are suggested
    and updated while you type. If you wish, you can edit the **Project location**
    before you click on the **Next** button.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建议使用`packtpub.com`和`helloandroidstudio`等包名称，并在输入时进行更新。如果愿意，可以在单击“下一步”按钮之前编辑**项目位置**。
- en: In the **Target Android Devices** dialog box, check the **Phone and Tablet**
    option. Leave the other options unchecked. We will create some of those other
    interesting targets, such as an Android Wear app, later. For the **Minimum SDK**,
    choose **API 14**. If that one is not (yet) available, click on any of the other
    available SDKs. We will install more SDKs later. Click on the **Next** button
    to continue.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**目标Android设备**对话框中，选中**手机和平板电脑**选项。不要选择其他选项。稍后我们将创建一些其他有趣的目标，比如Android Wear应用程序。对于**最低SDK**，请选择**API
    14**。如果该选项尚未（尚）可用，请单击其他可用的SDK。单击**下一步**按钮继续。
- en: In the next dialog box, **Add an activity to Mobile**, choose the **Blank Activity**
    option and click on the **Next** button.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个对话框中**为移动设备添加活动**，选择**空白活动**选项，然后单击**下一步**按钮。
- en: The final dialog **Customize the activity** will be displayed after this. Leave
    all the values the way they are and click on the **Finish** button.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此之后将显示最终对话框**自定义活动**。保持所有值不变，然后单击**完成**按钮。
- en: Android Studio is now going to create this new app for you. After a while, the
    project view, a **MainActivity** class, and an **activity_main.xml** layout are
    displayed. If you change the perspective of the project view on the left-hand
    side of your Android Studio by clicking on the button, that displays the little
    green Android guy and the text that reads **Android**, from **Android** to **Project**,
    the layout will look a little bit more like you are used to, that is, if you have
    used Eclipse before.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Android Studio现在将为您创建这个新应用程序。过一会儿，项目视图、一个**MainActivity**类和一个**activity_main.xml**布局将显示出来。如果您通过单击左侧Android
    Studio上显示绿色小安卓人和文字为**Android**的按钮，将项目视图的视角从**Android**更改为**项目**，布局看起来会更像您习惯的样子，也就是说，如果您以前使用过Eclipse。
- en: Double-click on the **app** folder to expand it. You will notice a file called
    the `build.gradle` file (note that this file also exists on the root level).
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**app**文件夹以展开它。您会注意到一个名为`build.gradle`的文件（请注意，此文件也存在于根级别）。
- en: Double-click on the `build.gradle` file to open it and have a look at the values
    for `compileSdkVersion`, `minSdkVersion`, and `targetSdkVersion`. By default,
    the `compileSdkVersion` value is always related to the latest (available) SDK.
    The value for `minSdkVersion` is the one that you have chosen in the **Target
    Android devices** dialog box.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击`build.gradle`文件以打开它，并查看`compileSdkVersion`、`minSdkVersion`和`targetSdkVersion`的值。默认情况下，`compileSdkVersion`的值始终与最新（可用）的SDK相关。`minSdkVersion`的值是您在**目标Android设备**对话框中选择的值。
- en: Note
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want, use a different SDK to compile against; you must change the value
    for `compileSdkVersion`. The version you choose might need to be installed first.
    If you are happy with the current configuration, go to step 14 right away.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望使用不同的SDK进行编译，您必须更改`compileSdkVersion`的值。您选择的版本可能需要先安装。如果您对当前的配置满意，请立即转到第14步。
- en: If you want to check which SDKs are installed, go the **Tools** option from
    the main menu and choose **Android** from the **SDK Manager** submenu.![How to
    do it...](img/B04299_01_04.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想要检查已安装了哪些SDK，请从主菜单中选择**工具**选项，然后从**SDK Manager**子菜单中选择**Android**。![如何操作...](img/B04299_01_04.jpg)
- en: The **Android** **SDK Manager** dialog box displays which SDKs are installed.
    If you need to install a different SDK, you can check the elements you need and
    click on the **Install n packages…** button.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Android** **SDK Manager**对话框显示了已安装的SDK。如果您需要安装其他SDK，您可以选中所需的元素，然后单击**安装n个软件包...**按钮。'
- en: After installing the SDKs that you need and having configured your `build.gradle`
    file, you can now run your app.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装所需的SDK并配置好您的`build.gradle`文件后，您现在可以运行您的应用程序了。
- en: If you are using a physical device for Android development, you need to unlock
    the developer options first. On your device, start the **Settings** app and go
    to the **Device info** option. (This option may be on the **General** tab or section
    or at another place, depending on the version and flavor of Android that your
    device is running on).
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您要用物理设备进行Android开发，您需要先解锁开发者选项。在您的设备上，启动**设置**应用程序，然后转到**设备信息**选项。（此选项可能位于**常规**选项卡或部分，或者根据您的设备运行的Android版本和风格而在其他位置）。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not have a real device, I strongly recommend you get one as soon as
    possible. To get started, you can use an emulator for now. You can use the emulator
    that comes with the Android SDK or you can read the recipe about Genymotion first
    to find out how to use emulated devices.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有真实设备，我强烈建议您尽快获取一个。您现在可以使用模拟器。您可以使用Android SDK附带的模拟器，或者您可以先阅读有关Genymotion的教程，了解如何使用模拟设备。
- en: In the **Device Info** view, scroll all the way down until you see the **Build
    number** option. Now, click seven (7) times on **Build number** to unlock (enable)
    the developer mode. (No, this is not a joke). You now have the developer's menu
    unlocked.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设备信息**视图中，向下滚动直到看到**构建号**选项。现在，点击七（7）次**构建号**以解锁（启用）开发者模式。（不，这不是一个玩笑）。您现在已经解锁了开发者菜单。
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: On older Android versions (below 4.2), this step may be skipped, or if the developer
    options are already available as a menu item in the settings app, this step may
    be skipped.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在较旧的Android版本（4.2以下），此步骤可能会被跳过，或者如果开发者选项已经作为设置应用程序中的菜单项可用，此步骤可能会被跳过。
- en: Now that you have got a new option in your **Settings** app, called **Developer
    options**, click on it and have a look at it. It is important that you enable
    the **USB debugging** option within this menu. In addition, you might want to
    enable or disable some of the other options.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您的**设置**应用程序中有一个名为**开发者选项**的新选项，请单击它并查看。重要的是您在此菜单中启用**USB调试**选项。此外，您可能希望启用或禁用其他一些选项。
- en: Connect your device and run your app from Android Studio by clicking on the
    green triangle next to the drop-down box that reads the app. Or, choose the **Run...**
    option from the **Run** menu. Then, the **Choose Device** dialog box appears.
    Your device should now appear in the list of the **Choose a running device** option.
    ( If your device does not appear in the list, reconnect your device).
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击Android Studio旁边的下拉框中读取应用程序的绿色三角形，连接您的设备并从Android Studio运行您的应用程序。或者，从**运行**菜单中选择**运行...**选项。然后，**选择设备**对话框将出现。您的设备现在应该出现在**选择运行设备**选项的列表中。（如果您的设备未出现在列表中，请重新连接您的设备。）
- en: Click on the **OK** button. (For Windows, before you are able to connect your
    device, it is often necessary to install a driver first.)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。（对于Windows，在您能够连接设备之前，通常需要先安装驱动程序。）
- en: On your device, a dialog box may pop up, requiring you to accept the finger
    print. Choose **Allow** in order to continue.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的设备上，可能会弹出一个对话框，要求您接受指纹。选择**允许**以继续。
- en: The app is now being deployed on your device. If everything goes well, your
    new app is now shown on your device that says **Hello world!** Hurrah! I admit
    this is not really a very exciting app, but at least we know now that Android
    Studio and your device have been configured correctly.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序现在正在部署到您的设备上。如果一切顺利，您的新应用程序现在将显示在您的设备上，上面写着**Hello world!**万岁！我承认这并不是一个非常令人兴奋的应用程序，但至少我们现在知道Android
    Studio和您的设备已经正确配置。
- en: How it works...
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Android Studio will take care of the basic parts of your app setup. All you
    need to do is choose the target and minimal SDK for your app. Using the API level
    14 (Android 4.0) is currently the best option, as this will allow your app to
    run on most Android devices.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio将处理应用程序设置的基本部分。您只需要选择应用程序的目标和最低SDK。目前使用API级别14（Android 4.0）是最佳选择，因为这将使您的应用程序能够在大多数Android设备上运行。
- en: The app will be compiled against the chosen (compile) SDK by Android Studio.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序将由Android Studio针对所选择的（编译）SDK进行编译。
- en: The app will be copied to your device. Having the **USB debugging** option enabled
    will help you troubleshoot any issues, as we will find out later.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序将被复制到您的设备上。启用**USB调试**选项将有助于您解决任何问题，我们稍后将会发现。
- en: The use of Gradle build scripts
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gradle构建脚本的使用
- en: Android Studio uses Gradle build scripts. It is a project automation tool and
    uses a **Domain-specific Language** (**DSL**) instead of the more common XML form
    to create the configuration of a project.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio使用Gradle构建脚本。它是一个项目自动化工具，使用**领域特定语言**（**DSL**）而不是更常见的XML形式来创建项目的配置。
- en: Projects come with a top-level build file and a build file for each module.
    These files are called `build.gradle`. Most of the time, it is only the build
    file for the app module that needs your attention.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 项目附带一个顶级构建文件和每个模块的构建文件。这些文件称为`build.gradle`。大多数情况下，只有应用程序模块的构建文件需要您的注意。
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may note that some properties that you could find in the Android manifest
    file previously, such as the target SDK and versioning properties, are now defined
    in a build file and should reside in the build file only.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到，以前在Android清单文件中找到的一些属性，例如目标SDK和版本属性，现在在构建文件中定义，并且应该仅驻留在构建文件中。
- en: 'A typical `build.gradle` file may look like this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的`build.gradle`文件可能如下所示：
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Gradle build system is not something that you need to worry too much about
    right now. In later recipes, we will see what the real power of it will be. The
    system is also designed to support complex scenarios that may be faced while creating
    Android applications, such as handling customized versions of the same app for
    various customers (build flavors) or creating multiple APK files for different
    device types or different Android OS versions.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Gradle构建系统现在不是您需要过多担心的东西。在以后的教程中，我们将看到它的真正威力。该系统还设计用于支持在创建Android应用程序时可能面临的复杂场景，例如处理为各种客户定制的相同应用程序的版本（构建风格）或为不同设备类型或不同Android
    OS版本创建多个APK文件。
- en: For now, it is ok just to know that this is the place where we will define `compileSdkVersion`,
    `targetSdkVersion`, and `minSdkVersion`, just like we did in the manifest file
    previously in case you have been using Eclipse.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，只需知道这是我们将定义`compileSdkVersion`，`targetSdkVersion`和`minSdkVersion`的地方，就像您之前在使用Eclipse时在清单文件中所做的那样。
- en: Also, this is the place where we define `versionCode` and `versionName`, which
    reflect the version of your app that is useful if someone is going to update the
    app you wrote.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这也是我们定义`versionCode`和`versionName`的地方，这反映了您的应用程序的版本，如果有人要更新您编写的应用程序，这将非常有用。
- en: Another interesting key element of the Gradle functionality is that of dependencies.
    Dependencies can be local or remote libraries and JAR files. The project depends
    on them in order to be able to compile and run. In the `build.gradle` file that
    you will find in the previous folder the `app` folder you will find the defined
    repository in which the libraries reside. `jCenter` is the default repository.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Gradle功能的另一个有趣的关键元素是依赖关系。依赖关系可以是本地或远程库和JAR文件。项目依赖于它们以便能够编译和运行。在您将在上一个文件夹中找到的`app`文件夹中的`build.gradle`文件中，您将找到库所在的定义的存储库。`jCenter`是默认存储库。
- en: 'If for example you wish to add the `Parse` functionality, which is something
    that we will do in the recipes found in the next chapter, the following dependency
    declaration will add the local Parse library to your project:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您希望添加`Parse`功能，这是我们将在下一章的教程中做的事情，以下依赖声明将向您的项目添加本地Parse库：
- en: '[PRE1]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Using external libraries has become much easier. For example, if you want to
    add `UniversalImageLoader`, a well-known library to load images from the Internet,
    or if you want to use the functionality from the `Gson` library, which basically
    is an object wrapper for JSON data, to your app, the following dependency declaration
    will make these libraries available to the project:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用外部库变得更加容易。例如，如果你想添加`UniversalImageLoader`，一个用于从互联网加载图像的知名库，或者如果你想要使用`Gson`库的功能，它基本上是JSON数据的对象包装器，那么以下依赖声明将使这些库可用于项目：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There's more...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Some other Gradle concepts will be explained in the recipes of the next chapters.
    Gradle is a topic that one could write a book about on, and you can find many
    interesting in-depth tutorials on the Internet if you would like to know more
    about it.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章的食谱中将解释一些其他Gradle概念。Gradle是一个可以写一本书的话题，如果你想了解更多关于它的信息，你可以在互联网上找到许多有趣的深入教程。
- en: See also
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: For more information about Gradle build scripts, refer to [Chapter 2](ch02.html
    "Chapter 2. Applications with a Cloud-based Backend"), *Applications with a Cloud-based
    Backend*
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Gradle构建脚本的更多信息，请参阅[第2章](ch02.html "第2章。带有基于云的后端的应用程序")，*带有基于云的后端的应用程序*
- en: Testing your app with an emulator called Genymotion
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用名为Genymotion的模拟器测试你的应用程序
- en: The best way to test your app is by using a real device. The Android emulator
    is pretty slow and does not provide you with all the features that come with a
    real device, such as a camera and all kinds of sensors.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 测试你的应用程序的最佳方法是使用真实设备。Android模拟器非常慢，而且没有提供真实设备所具有的所有功能，比如相机和各种传感器。
- en: I can image that you do have just one or perhaps a few devices. With thousands
    of Android devices being available and many brands and models that run on a customized
    (for example, the Samsung devices) or a plain (like the Nexus devices) flavor
    of the Android OS and on any Android version that you can think of, testing on
    real devices only would become pretty expensive.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以想象你可能只有一个或几个设备。有成千上万的Android设备可用，许多品牌和型号都在定制的（例如三星设备）或纯净的（如Nexus设备）Android
    OS版本上运行，而且你能想到的任何Android版本上进行真机测试都会变得非常昂贵。
- en: If, for example, you are creating an app that should run well on Android 2.3,
    Android 4.x, and Android 5.x, using emulated devices can be handy. Unfortunately,
    the default emulator is terribly slow. It takes ages to start Android on the emulator,
    and debugging can be very slow on it as well. To make the emulator a little bit
    faster, you could try to install **Hardware Accelerated Execution Manager** (**HAXM**).
    There are some topics on the Internet that tell you how to do this; however, there
    is a much better solution, Genymotion.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你正在创建一个应该在Android 2.3、Android 4.x和Android 5.x上运行良好的应用程序，使用模拟设备可能会很方便。不幸的是，默认的模拟器非常慢。在模拟器上启动Android需要很长时间，调试也可能非常慢。为了让模拟器快一点，你可以尝试安装**硬件加速执行管理器**（**HAXM**）。有一些关于如何做到这一点的主题在互联网上，然而，有一个更好的解决方案，那就是Genymotion。
- en: Genymotion is a real, fast, and easy-to-use emulator and comes with many real-world
    device configurations. You can read more about Genymotion on its website at [www.genymotion.com](http://www.genymotion.com).
    It is available as a free or paid solution. The free one will be all right to
    start with.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Genymotion是一个真实、快速、易于使用的模拟器，并且具有许多真实设备配置。你可以在其网站[www.genymotion.com](http://www.genymotion.com)上了解更多关于Genymotion的信息。它有免费和付费版本可用。免费版本对于起步来说是可以的。
- en: Getting ready
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have Internet access and sufficient space on your hard drive.
    We will need to download both VirtualBox and Genymotion. After this, you are ready
    to create your first virtual device. Let the magic begin.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你有互联网访问权限和足够的硬盘空间。我们需要下载VirtualBox和Genymotion。之后，你就可以准备创建你的第一个虚拟设备了。让魔法开始吧。
- en: How to do it...
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s install Genymotion to prepare Android Studio to work with smoothly running
    emulated devices:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们安装Genymotion以准备Android Studio与运行流畅的模拟设备一起使用：
- en: Both Oracle's VirtualBox and the Genymotion app need to be installed. This is
    because Genymotion virtualizes various Android operating systems using the virtualization
    techniques of **Oracle Virtual Machine** (**VM**) VirtualBox in the background.
    If you do not already have Oracle VM VirtualBox installed on your computer (or
    if you have a version of VirtualBox that is below 4.1.1 which is not compatible
    with Genymotion), you need to install it first.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要安装Oracle的VirtualBox和Genymotion应用程序。这是因为Genymotion在后台使用**Oracle虚拟机**（**VM**）VirtualBox的虚拟化技术来虚拟化各种Android操作系统。如果你的计算机上还没有安装Oracle
    VM VirtualBox（或者你的VirtualBox版本低于4.1.1，不兼容Genymotion），你需要先安装它。
- en: Download VirtualBox for OS X hosts (or for Windows) from the VirtualBox download
    page at [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 从VirtualBox下载页面下载适用于OS X主机（或Windows）的VirtualBox，网址为[https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)。
- en: Install VirtualBox, and after that, reboot your computer.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 安装VirtualBox，然后重新启动计算机。
- en: Download Genymotion from its web page at [https://www.genymotion.com/#!/download](https://www.genymotion.com/#!/download).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从Genymotion的网页[https://www.genymotion.com/#!/download](https://www.genymotion.com/#!/download)下载Genymotion。
- en: Now, open and install the downloaded file.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开并安装下载的文件。
- en: Run Genymotion. A dialog box then asks you whether you want to create a new
    device. Click on the **Yes** button to do so. Later, you can create additional
    devices by clicking on the *+* (plus) button on the main screen.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行Genymotion。然后会有一个对话框询问你是否要创建一个新设备。点击**是**按钮来创建。之后，你可以通过在主屏幕上点击*+*（加号）按钮来创建额外的设备。
- en: Select the Android OS version from the drop-down list on the left-hand side
    of dialog box.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对话框的左侧下拉列表中选择Android OS版本。
- en: Select a virtual device (brand and model) from the drop-down list on the center
    and click on the **Next** button.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从中心的下拉列表中选择一个虚拟设备（品牌和型号），然后点击**下一步**按钮。
- en: Name your device. It's recommended that you include both the device and the
    OS version in your device name so what you are testing on can be easily recognized
    when you want to use it later.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的设备命名。建议您在设备名称中包括设备和操作系统版本，以便在以后使用时可以轻松识别您正在测试的内容。
- en: Click on the **Next** button to confirm the name. Your virtual device will be
    created, and it will appear in the list on the main screen of Genymotion. Create
    as many virtual devices as you need.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**下一步**按钮确认名称。您的虚拟设备将被创建，并出现在Genymotion主屏幕的列表中。根据需要创建多个虚拟设备。
- en: To run a virtual device, select it and click on the **Play** button. It will
    launch the Genymotion emulator so that you can use it together with Android Studio.
    When it is launched, you can unlock the device so that it is ready to use.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要运行虚拟设备，请选择它，然后单击**播放**按钮。它将启动Genymotion模拟器，以便您可以与Android Studio一起使用。启动后，您可以解锁设备，使其准备好使用。
- en: If you hit the **Run** button in Android Studio again, you will notice that
    the running virtual device is shown in the list of available devices in the **Choose
    Device** dialog box. Just click on the **OK** button to let the magic begin. Your
    Android app will be launched on the emulator.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您再次点击Android Studio中的**运行**按钮，您会注意到正在运行的虚拟设备显示在**选择设备**对话框中的可用设备列表中。只需单击**确定**按钮，魔法就会开始。您的Android应用程序将在模拟器上启动。
- en: And it is running fast and smooth! Pretty cool, isn't it?
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 它运行得又快又顺畅！相当酷，不是吗？
- en: 'The following is an example of the main screen of Genymotion listing a couple
    of virtual devices that have been created:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Genymotion主屏幕的示例，列出了已创建的一些虚拟设备：
- en: '![How to do it...](img/B04299_01_01.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04299_01_01.jpg)'
- en: There's more...
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Genymotion comes with emulated front and/or backend cameras, depending on the
    chosen configuration. To enable them, click on the camera icon. A new dialog box
    appears in which you can change the slider to **On** and choose a real camera
    for the front and backend camera of your virtual device.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Genymotion配备了模拟的前端和/或后端摄像头，具体取决于所选择的配置。要启用它们，请单击相机图标。一个新的对话框出现，您可以在其中将滑块更改为**打开**，并为虚拟设备的前端和后端摄像头选择一个真实相机。
- en: After selecting a camera, you can close the dialog box. A green checkbox will
    now appear next to the Camera button. Now, whenever an app needs to use a camera,
    it will use the selected camera, which in my case is the webcam on the laptop.
    To check whether this is working, choose the Camera app on the virtual device.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 选择相机后，您可以关闭对话框。相机按钮旁边现在会出现一个绿色复选框。现在，每当应用程序需要使用相机时，它将使用所选的相机，我这里是笔记本电脑上的网络摄像头。要检查这是否有效，请在虚拟设备上选择相机应用程序。
- en: The paid version of Genymotion has additional features available, including
    emulated sensors such as GPS and accelerometers. If you like, you can check out
    the differences at [https://www.genymotion.com/#!/store](https://www.genymotion.com/#!/store).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Genymotion的付费版本提供了额外的功能，包括模拟传感器，如GPS和加速计。如果愿意，您可以在[https://www.genymotion.com/#!/store](https://www.genymotion.com/#!/store)上查看差异。
- en: Remember that although using virtual devices for testing purposes works really
    great with Genymotion, it is important to always test it on multiple real devices.
    Some issues, in particular the ones that are related to memory management that
    we will see later in this book, are easy to reproduce on real devices, but may
    be somewhat harder to reproduce on virtual devices.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，虽然使用虚拟设备进行测试目的在Genymotion上非常出色，但始终重要的是在多个真实设备上进行测试。一些问题，特别是与内存管理相关的问题，稍后在本书中我们将看到，很容易在真实设备上重现，但在虚拟设备上可能会更难一些。
- en: In addition to this, real devices are much more pixel perfect and some issues
    may appear only on a particular device so when it comes to see how the artwork
    looks, you are going to need a couple of them.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，真实设备更加像素完美，一些问题可能只会出现在特定设备上，因此在查看艺术品外观时，您将需要一些设备。
- en: By the time your app is nearly complete, you might be interested in the (paid)
    services from Testdroid, a cloud-based service that allows to run (automated)
    tests on many real devices. Visit [www.testdroid.com](http://www.testdroid.com)
    to learn more about this great service!
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的应用程序几乎完成时，您可能会对Testdroid的（付费）服务感兴趣，这是一个基于云的服务，允许在许多真实设备上运行（自动化）测试。访问[www.testdroid.com](http://www.testdroid.com)了解更多关于这项伟大服务的信息！
- en: 'The following screenshot provides an example of the Hello Android Studio app
    running on a virtual Nexus 5 device using Genymotion:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图提供了一个示例，显示了在Genymotion上运行的虚拟Nexus 5设备上运行的Hello Android Studio应用程序：
- en: '![There''s more...](img/B04299_01_02.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/B04299_01_02.jpg)'
- en: Refactoring your code
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重构您的代码
- en: Good software engineers refactor their work continuously. Names of methods and
    members should always indicate what they are doing. Since business requirements
    often change during the development process, in particular when agile methodologies
    come in, so do your apps.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的软件工程师会不断地重构他们的工作。方法和成员的名称应始终指示它们正在做什么。由于业务需求在开发过程中经常发生变化，特别是在采用敏捷方法时，您的应用程序也会发生变化。
- en: If you choose the right names and stick to the rule that the length of methods
    must be limited to, well let's say, scrolling one page at most to view the whole
    method, often you do not need many comments to explain what your code is doing.
    If it is hard to come up with a good name for a particular method, then it is
    probably doing too much.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择正确的名称，并遵守方法长度必须限制在最多一页滚动以查看整个方法的规则，通常您不需要许多注释来解释您的代码在做什么。如果很难为特定方法想出一个好的名称，那么它可能做得太多了。
- en: Since changing names could be scary, as it could break your code, developers
    often choose not to do so. Or, they decide to do it later. You save yourself a
    few minutes by doing so in advance. Your code could be hard to understand if some
    one else has a look at your code or if you have a look at your code one year later.
    Going through the code to find out what a method does can be very time consuming.
    A descriptive name for your method can solve this.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 由于更改名称可能令人恐惧，因为它可能破坏你的代码，开发人员通常选择不这样做。或者，他们决定以后再做。提前这样做可以节省几分钟。如果其他人查看你的代码，或者一年后再看你的代码，你的代码可能很难理解。查找方法的功能可能非常耗时。方法的描述性名称可以解决这个问题。
- en: The good news is that using Android Studio, refactoring is painless and pretty
    easy. Just highlight the name of a member or method, right-click on it, and pick
    the **Refactor** item from the context menu that pops up.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，使用Android Studio，重构是轻松而相当容易的。只需高亮显示成员或方法的名称，右键单击它，然后从弹出的上下文菜单中选择**重构**项目。
- en: In the **Refactor** submenu that appears when you choose the **Refactor** item,
    you will find many interesting options. The one option that you will use here
    and which you will be using the most is the **Rename…** option.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择**重构**项目时出现的**重构**子菜单中，你会发现许多有趣的选项。在这里你将使用的一个选项，也是你将经常使用的选项是**重命名…**选项。
- en: How to do it…
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'The following steps describe how to rename a method in the Refactor submenu:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤描述了如何在“重构”子菜单中重命名方法：
- en: Highlight the name of the method you would like to rename.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 高亮显示您想要重命名的方法的名称。
- en: From the context menu, choose **Refactor**.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从上下文菜单中选择**重构**。
- en: From the submenu, choose **Rename** (or use the shortcut *Shift* + *F6*).
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从子菜单中选择**重命名** (或使用快捷键*Shift* + *F6*)。
- en: Now, you can rename your method or member in place and apply the changes by
    hitting the *Enter* button. Android Studio provides you with some suggestions
    that you can accept or you can type the name you want.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以就地重命名你的方法或成员，并通过按下*Enter*按钮应用更改。Android Studio会为你提供一些建议，你可以接受这些建议，或者你可以输入你想要的名称。
- en: Tip
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you repeat step 2 and 3, a dialog box appears in which you can edit the name.
    (Or use the shortcut *Shift* + *F6* twice).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果重复步骤2和3，将会出现一个对话框，你可以在其中编辑名称。(或者使用快捷键*Shift* + *F6*两次)。
- en: Click on the **Preview** button to see what the effect of the renaming will
    be.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**预览**按钮，查看重命名的效果。
- en: At the bottom of your screen, a new view appears, which shows you the impact
    of the renaming in each file (class, resource, or otherwise).
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在屏幕底部，会出现一个新视图，显示重命名在每个文件（类、资源或其他）中的影响。
- en: Click on the **Do refactor** button in that view to apply all the changes.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该视图中单击**执行重构**按钮以应用所有更改。
- en: The following screenshot shows an example of an in-place refactoring (renaming).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了就地重构(重命名)的示例。
- en: '![How to do it…](img/B04299_01_03.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤…](img/B04299_01_03.jpg)'
- en: How it works...
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Android Studio will take care of renaming a method or member and any references
    to it everywhere in the project. This includes Java classes, layouts, drawables,
    and anything else that you can think of.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio会负责在整个项目中重命名方法或成员以及对它的任何引用。这包括Java类、布局、可绘制对象，以及你能想到的任何其他东西。
- en: There are many other interesting options available from the **Refactor** menu
    that you can use. Some of them will be discussed in the next chapters in the recipes
    where they will come in handy.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**重构**菜单中还有许多其他有趣的选项可供使用。其中一些将在下一章的示例中讨论，它们将会派上用场。'
- en: Now, let's move on to the next chapter and build a real app, shall we?
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续下一章，构建一个真正的应用程序，好吗？
- en: See also
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: For more information about refactoring code, refer to [Chapter 8](ch08.html
    "Chapter 8. Improving Quality"), *Improving qua**lity*.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关重构代码的更多信息，请参阅[第8章](ch08.html "第8章。提高质量"), *提高质量*。
