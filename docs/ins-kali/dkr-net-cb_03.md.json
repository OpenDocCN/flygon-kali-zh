["```\nuser@docker1:~$ docker network --help\n\ndocker network --help\n\nUsage:  docker network COMMAND\n\nManage Docker networks\n\nOptions:\n      --help   Print usage\n\nCommands:\n  connect     Connect a container to a network\n  create      Create a network\n  disconnect  Disconnect a container from a network\n  inspect     Display detailed information on one or more networks\n  ls          List networks\n  rm          Remove one or more networks\n\nRun 'docker network COMMAND --help' for more information on a command.\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n200d5292d5db        **bridge**              **bridge**              **local**\n12e399864b79        **host**                **host**                **local**\ncb6922b8b84f        **none**                **null**                **local**\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network inspect bridge\n[\n    {\n        \"Name\": \"bridge\",\n        \"Id\": \"62fcda0787f2be01e65992e2a5a636f095970ea83c59fdf0980da3f3f555c24e\",\n        \"Scope\": \"local\",\n **\"Driver\": \"bridge\",**\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": [\n                {\n **\"Subnet\": \"172.17.0.0/16\"**\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Containers\": {},\n        \"Options\": {\n **\"com.docker.network.bridge.default_bridge\": \"true\",**\n **\"com.docker.network.bridge.enable_icc\": \"true\",**\n **\"com.docker.network.bridge.enable_ip_masquerade\": \"true\",**\n **\"com.docker.network.bridge.host_binding_ipv4\": \"0.0.0.0\",**\n **\"com.docker.network.bridge.name\": \"docker0\",**\n **\"com.docker.network.driver.mtu\": \"1500\"**\n        },\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$  \n```", "```\nuser@docker1:~$ docker network inspect none\n[\n    {\n        \"Name\": \"none\",\n        \"Id\": \"a191c26b7dad643ca77fe6548c2480b1644a86dcc95cde0c09c6033d4eaff7f2\",\n        \"Scope\": \"local\",\n        \"Driver\": \"null\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": []\n        },\n        \"Internal\": false,\n        \"Containers\": {},\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network inspect host\n[\n    {\n        \"Name\": \"host\",\n        \"Id\": \"4b94353d158cef25b9c9244ca9b03b148406a608b4fd85f3421c93af3be6fe4b\",\n        \"Scope\": \"local\",\n        \"Driver\": \"host\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": []\n        },\n        \"Internal\": false,\n        \"Containers\": {},\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network ls -f type=custom\nNETWORK ID          NAME                DRIVER              SCOPE\na09b7617c550        mynetwork           bridge              local\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network ls -f id=158\nNETWORK ID          NAME                DRIVER              SCOPE\n4b94353d158c        host                host                local\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network create --help\n\nUsage:  docker network create [OPTIONS] NETWORK\n\nCreate a network\n\nOptions:\n**--aux-address value**    Auxiliary IPv4 or IPv6 addresses used by Network driver (default map[])\n**-d, --driver string**    Driver to manage the Network (default \"bridge\")\n**--gateway value**        IPv4 or IPv6 Gateway for the master subnet (default [])\n--help                 Print usage\n**--internal**             Restrict external access to the network\n**--ip-range value**       Allocate container ip from a sub-range (default [])\n**--ipam-driver string**   IP Address Management Driver (default \"default\")\n**--ipam-opt value**       Set IPAM driver specific options (default map[])\n**--ipv6**                 Enable IPv6 networking\n**--label value**          Set metadata on a network (default [])\n**-o, --opt value**        Set driver specific options (default map[])\n**--subnet value**         Subnet in CIDR format that represents a network segment (default [])\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network create mynetwork\n3fea20c313e8880538ab50fd591398bdfdac2378abac29aacb1be131cbfab40f\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network inspect mynetwork\n[\n    {\n        \"Name\": \"mynetwork\",\n        \"Id\": \"a09b7617c5504d4afd80c26b82587000c64046f1483de604c51fa4ba53463b50\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.18.0.0/16\",\n                    \"Gateway\": \"172.18.0.1/16\"\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Containers\": {},\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network rm mynetwork\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network connect --help\nUsage:  docker network connect [OPTIONS] NETWORK CONTAINER\nConnects a container to a network\n  --alias=[]         Add network-scoped alias for the container\n  --help             Print usage\n  --ip               IP Address\n  --ip6              IPv6 Address\n  --link=[]          Add link to another container\nuser@docker1:~$\n```", "```\nuser@docker1:~$ **docker run --name web1 -d jonlangemak/web_server_1**\ne112a2ab8197ec70c5ee49161613f2244f4353359b27643f28a18be47698bf59\nuser@docker1:~$\nuser@docker1:~$ **docker exec web1 ip addr**\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n8: **eth0**@if9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n    inet **172.17.0.2/16** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe11:2/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker1:~$ **docker network connect mynetwork web1**\nuser@docker1:~$\nuser@docker1:~$ docker exec web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n8: **eth0**@if9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n    inet **172.17.0.2/16** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe11:2/64 scope link\n       valid_lft forever preferred_lft forever\n10: **eth1**@if11: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff\n    inet **172.18.0.2/16** scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:2/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network inspect mynetwork\n[\n    {\n        \"Name\": \"mynetwork\",\n        \"Id\": \"a09b7617c5504d4afd80c26b82587000c64046f1483de604c51fa4ba53463b50\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.18.0.0/16\",\n                    \"Gateway\": \"172.18.0.1/16\"\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Containers\": {           **\"e112a2ab8197ec70c5ee49161613f2244f4353359b27643f28a18be47698bf59\": {**\n **\"Name\": \"web1\",**\n **\"EndpointID\": \"678b07162dc958599bf7d463da81a4c031229028ebcecb1af37ee7d448b54e3d\",**\n **\"MacAddress\": \"02:42:ac:12:00:02\",**\n **\"IPv4Address\": \"172.18.0.2/16\",**\n **\"IPv6Address\": \"\"**\n            }\n        },\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\nuser@docker1:~$ **docker network disconnect bridge web1**\nuser@docker1:~$\nuser@docker1:~$ docker exec web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n10: **eth1**@if11: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff\n    inet **172.18.0.2/16** scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:2/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker exec web1 ip route\n**default via 172.17.0.1 dev eth0**\n172.17.0.0/16 dev eth2  proto kernel  scope link  src 172.17.0.2\n172.18.0.0/16 dev eth1  proto kernel  scope link  src 172.18.0.2\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker exec web1 ip route\n**default via 172.18.0.1 dev eth1**\n172.18.0.0/16 dev eth1  proto kernel  scope link  src 172.18.0.2\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker run --net=none --name web1 -d jonlangemak/web_server_1\n9f5d73c55ee859335cd2449b058b68354f5b71cf37e57b72f5c984afcafb4b21\nuser@docker1:~$ docker exec web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network connect mynetwork web1\nError response from daemon: Container cannot be connected to multiple networks with one of the networks in private (none) mode\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker network inspect none\n[\n    {\n        \"Name\": \"none\",\n        \"Id\": \"a191c26b7dad643ca77fe6548c2480b1644a86dcc95cde0c09c6033d4eaff7f2\",\n        \"Scope\": \"local\",\n        \"Driver\": \"null\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": []\n        },\n        \"Internal\": false,\n        \"Containers\": {            **\"931a0d7ad9244c135a19de6e23de314698112ccd00bc3856f4fab9b8cb241e60\": {**\n **\"Name\": \"web1\",**\n **\"EndpointID\": \"6a046449576e0e0a1e8fd828daa7028bacba8de335954bff2c6b21e01c78baf8\",**\n **\"MacAddress\": \"\",**\n **\"IPv4Address\": \"\",**\n **\"IPv6Address\": \"\"**\n            }\n        },\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\nuser@docker1:~$ **docker network disconnect none web1**\nuser@docker1:~$ **docker network connect mynetwork web1**\nuser@docker1:~$ docker exec web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n18: **eth0**@if19: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff\n    inet **172.18.0.2/16** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:2/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker1:~$\n```", "```\ndocker network create --driver bridge \\\n--subnet=10.15.20.0/24 \\\n--gateway=10.15.20.1 \\\n--aux-address 1=10.15.20.2 --aux-address 2=10.15.20.3 \\\n--opt com.docker.network.bridge.host_binding_ipv4=10.10.10.101 \\\n--opt com.docker.network.bridge.name=linuxbridge1 \\\ntestbridge1\n```", "```\nuser@docker1:~$ docker network inspect testbridge1\n[\n    {\n **\"Name\": \"testbridge1\",**\n        \"Id\": \"97e38457e68b9311113bc327e042445d49ff26f85ac7854106172c8884d08a9f\",\n        \"Scope\": \"local\",\n **\"Driver\": \"bridge\",**\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n **\"Subnet\": \"10.15.20.0/24\",**\n **\"Gateway\": \"10.15.20.1\",**\n                    \"AuxiliaryAddresses\": {\n **\"1\": \"10.15.20.2\",**\n **\"2\": \"10.15.20.3\"**\n                    }\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Containers\": {},\n        \"Options\": {\n **\"com.docker.network.bridge.host_binding_ipv4\": \"10.10.10.101\",**\n **\"com.docker.network.bridge.name\": \"linuxbridge1\"**\n        },\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\ndocker network create \\\n--subnet=192.168.50.0/24 \\\n--ip-range=192.168.50.128/25 \\\n--opt com.docker.network.bridge.enable_ip_masquearde=false \\\ntestbridge2\n```", "```\nuser@docker1:~$ docker network inspect testbridge2\n[\n    {\n **\"Name\": \"testbridge2\",**\n        \"Id\": \"2c8270425b14dab74300d8769f84813363a9ff15e6ed700fa55d7d2c3b3c1504\",\n        \"Scope\": \"local\",\n **\"Driver\": \"bridge\",**\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n **\"Subnet\": \"192.168.50.0/24\",**\n **\"IPRange\": \"192.168.50.128/25\"**\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Containers\": {},\n        \"Options\": {\n            **\"com.docker.network.bridge.enable_ip_masquearde\": \"false\"**\n        },\n        \"Labels\": {}\n    }\n]\nuser@docker1:~$\n```", "```\nuser@docker1:~$ docker run -d -p 8500:8500 -h consul \\\n--name consul progrium/consul -server -bootstrap\n```", "```\nuser@docker1:~$ uname -r\n4.2.0-34-generic\nuser@docker1:~$ \n```", "```\nExecStart=/usr/bin/dockerd --cluster-store=consul://10.10.10.101:8500/network --cluster-advertise=eth0:0\n```", "```\nuser@docker2:~$ docker info\n\u2026<Additional output removed for brevity>\u2026\nCluster store: **consul://10.10.10.101:8500/network**\nCluster advertise: **10.10.10.102:0**\n\u2026<Additional output removed for brevity>\u2026\n```", "```\nuser@docker2:~$ docker network create -d overlay myoverlay\ne4bdaa0d6f3afe1ae007a07fe6a1f49f1f963a5ddc8247e716b2bd218352b90e\nuser@docker2:~$\n```", "```\nuser@docker3:~$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n55f86ddf18d5        bridge              bridge              local\n8faef9d2a7cc        host                host                local\n**3ad850433ed9        myoverlay           overlay             global**\n453ad78e11fe        none                null                local\nuser@docker3:~$\n\nuser@docker4:~$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n3afd680b6ce1        bridge              bridge              local\na92fe912af1d        host                host                local\n**3ad850433ed9        myoverlay           overlay             global**\n7dbc77e5f782        none                null                local\nuser@docker4:~$\n```", "```\nuser@docker4:~$ **docker network rm myoverlay**\nmyoverlay\nuser@docker4:~$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n3afd680b6ce1        bridge              bridge              local\na92fe912af1d        host                host                local\n7dbc77e5f782        none                null                local\nuser@docker4:~$\n```", "```\nuser@docker4:~$ docker network create -d overlay \\\n--subnet 172.16.16.0/24  --aux-address ip2=172.16.16.2 \\\n--ip-range=172.16.16.128/25 myoverlay\n```", "```\nuser@docker2:~$ docker run --net=myoverlay --name web1 \\\n-d -P jonlangemak/web_server_1\n3d767d2d2bda91300827f444aa6c4a0762a95ce36a26537aac7770395b5ff673\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker exec web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n7: **eth0@if8**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP\n    link/ether 02:42:ac:10:10:81 brd ff:ff:ff:ff:ff:ff\n    inet **172.16.16.129/24** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe10:1081/64 scope link\n       valid_lft forever preferred_lft forever\n10: **eth1**@if11: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff\n    inet **172.18.0.2/16** scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:2/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker2:~$\n```", "```\n<interface name>@if<peers interface ID>\n```", "```\nuser@docker2:~$ ip addr show\n\u2026<Additional output removed for brevity>\u2026\n9: docker_gwbridge: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:af:5e:26:cc brd ff:ff:ff:ff:ff:ff\n    inet 172.18.0.1/16 scope global docker_gwbridge\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:afff:fe5e:26cc/64 scope link\n       valid_lft forever preferred_lft forever\n**11: veth02e6ea5@if10:** <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue **master docker_gwbridge** state UP group default\n    link/ether ba:c7:df:7c:f4:48 brd ff:ff:ff:ff:ff:ff\n    inet6 fe80::b8c7:dfff:fe7c:f448/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker network ls\nNETWORK ID          NAME                DRIVER\n9c91f85550b3        **myoverlay**           **overlay**\nb3143542e9ed        none                null\n323e5e3be7e4        host                host\n6f60ea0df1ba        bridge              bridge\ne637f106f633        **docker_gwbridge**     **bridge**\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker network inspect docker_gwbridge\n[\n    {\n        \"Name\": \"docker_gwbridge\",\n        \"Id\": \"10a75e3638b999d7180e1c8310bf3a26b7d3ec7b4e0a7657d9f69d3b5d515389\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.18.0.0/16\",\n                    \"Gateway\": \"172.18.0.1/16\"\n                }\n            ]\n        },\n        \"Internal\": false,\n        \"Containers\": {\n            **\"e3ae95368057f24fefe1a0358b570848d8798ddfd1c98472ca7ea250087df452\": {**\n **\"Name\": \"gateway_e3ae95368057\",**\n **\"EndpointID\": \"4cdfc1fb130de499eefe350b78f4f2f92797df9fe7392aeadb94d136abc7f7cd\",**\n **\"MacAddress\": \"02:42:ac:12:00:02\",**\n **\"IPv4Address\": \"172.18.0.2/16\",**\n **\"IPv6Address\": \"\"**\n **}**\n        },\n        \"Options\": {\n **\"com.docker.network.bridge.enable_icc\": \"false\",**\n **\"com.docker.network.bridge.enable_ip_masquerade\": \"true\",**\n **\"com.docker.network.bridge.name\": \"docker_gwbridge\"**\n        },\n        \"Labels\": {}\n    }\n]\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker exec web1 ip route\n**default via 172.18.0.1 dev eth1**\n172.16.16.0/24 dev eth0  proto kernel  scope link  src 172.16.16.129\n172.18.0.0/16 dev eth1  proto kernel  scope link  src 172.18.0.2\nuser@docker2:~$ \n```", "```\nuser@docker2:~$ docker exec -it web1 ping **4.2.2.2**\nPING 4.2.2.2 (4.2.2.2): 48 data bytes\n**56 bytes from 4.2.2.2: icmp_seq=0 ttl=50 time=27.473 ms**\n**56 bytes from 4.2.2.2: icmp_seq=1 ttl=50 time=37.736 ms**\n--- 4.2.2.2 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max/stddev = 27.473/32.605/37.736/5.132 ms\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker port web1\n80/tcp -> 0.0.0.0:32768\nuser@docker2:~$\n```", "```\nuser@docker2:~$ sudo iptables -t nat -L\n\u2026<Additional output removed for brevity>\u2026\nChain DOCKER (2 references)\ntarget     prot opt source      destination\nRETURN     all  --  anywhere    anywhere\nRETURN     all  --  anywhere    anywhere\n**DNAT       tcp  --  anywhere    anywhere  tcp dpt:32768 to:172.18.0.2:80**\nuser@docker2:~$\n```", "```\nuser@docker3:~$ **docker run --net=myoverlay --name web2 -d jonlangemak/web_server_2**\nda14844598d5a6623de089674367d31c8e721c05d3454119ca8b4e8984b91957\nuser@docker3:~$\nuser@docker4:~$  **docker run --net=myoverlay --name web2 -d jonlangemak/web_server_2**\nbe67548994d7865ea69151f4797e9f2abc28a39a737eef48337f1db9f72e380c\n**docker: Error response from daemon: service endpoint with name web2 already exists.**\nuser@docker4:~$\n```", "```\nuser@docker4:~$ docker run --net=myoverlay --name **web2-2** -d jonlangemak/web_server_2\ne64d00093da3f20c52fca52be2c7393f541935da0a9c86752a2f517254496e26\nuser@docker4:~$\n```", "```\nuser@docker2:~$ docker exec web1 curl -s http://172.16.16.130\n<body>\n  <html>\n    <h1><span style=\"color:#FF0000;font-size:72px;\">**Web Server #2 - Running on port 80**</span></h1>\n</body>\n  </html>\nuser@docker2:~$\n```", "```\nuser@**docker2**:~$ docker exec web1 arp -n\nAddress         HWtype  HWaddress         Flags Mask            Iface\n**172.16.16.130   ether   02:42:ac:10:10:82 C                     eth0**\n172.18.0.1      ether   02:42:07:3d:f3:2c C                     eth1\nuser@docker2:~$\n\nuser@docker3:~$ docker exec web2 ip link show dev eth0\n6: eth0@if7: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP\n    link/ether **02:42:ac:10:10:82** brd ff:ff:ff:ff:ff:ff\nuser@docker3:~$ \n```", "```\nuser@docker4:~$ docker exec -it web2-2 ping **172.16.16.129** -c 2\nPING 172.16.16.129 (172.16.16.129): 48 data bytes\n**56 bytes from 172.16.16.129: icmp_seq=0 ttl=64 time=0.642 ms**\n**56 bytes from 172.16.16.129: icmp_seq=1 ttl=64 time=0.777 ms**\n--- 172.16.16.129 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max/stddev = 0.642/0.710/0.777/0.068 ms\n\nuser@docker4:~$ docker exec -it web2-2 ping **172.16.16.130** -c 2\nPING 172.16.16.130 (172.16.16.130): 48 data bytes\n**56 bytes from 172.16.16.130: icmp_seq=0 ttl=64 time=0.477 ms**\n**56 bytes from 172.16.16.130: icmp_seq=1 ttl=64 time=0.605 ms**\n--- 172.16.16.130 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max/stddev = 0.477/0.541/0.605/0.064 ms\n\nuser@docker4:~$ docker exec -it web2-2 arp -n\nAddress         HWtype  HWaddress         Flags Mask            Iface\n**172.16.16.129   ether   02:42:ac:10:10:81 C                     eth0**\n**172.16.16.130   ether   02:42:ac:10:10:82 C                     eth0**\nuser@docker4:~$\n```", "```\nuser@docker4:~$ cd /var/run\nuser@docker4:/var/run$ sudo ln -s /var/run/docker/netns netns\nuser@docker4:/var/run$ sudo ip netns list\neb40d6527d17 (id: 2)\n2-4695c5484e (id: 1) \nuser@docker4:/var/run$ \n```", "```\nuser@docker4:/var/run$ **sudo ip netns exec 2-4695c5484e ip link show**\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: **br0**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP mode DEFAULT group default\n    link/ether a6:1e:2a:c4:cb:14 brd ff:ff:ff:ff:ff:ff\n11: **vxlan1**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue **master br0** state UNKNOWN mode DEFAULT group default\n    link/ether a6:1e:2a:c4:cb:14 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n13: **veth2@if12**: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue master br0 state UP mode DEFAULT group default\n    link/ether b2:fa:2d:cc:8b:51 brd ff:ff:ff:ff:ff:ff link-netnsid 1\nuser@docker4:/var/run$ \n```", "```\nuser@docker4:/var/run$ **docker exec web2-2 ip link show**\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n**12: eth0@if13:** <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP\n    link/ether 02:42:ac:10:10:83 brd ff:ff:ff:ff:ff:ff\n14: eth1@if15: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\n    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff\nuser@docker4:/var/run$ \n```", "```\nuser@docker4:/var/run$ sudo ip netns exec 2-4695c5484e \\\nbridge fdb show dev vxlan1\na6:1e:2a:c4:cb:14 master br0 permanent\na6:1e:2a:c4:cb:14 vlan 1 master br0 permanent\n**02:42:ac:10:10:82 dst 192.168.50.101 link-netnsid 0 self permanent**\n**02:42:ac:10:10:81 dst 10.10.10.102 link-netnsid 0 self permanent**\nuser@docker4:/var/run$\n```", "```\nuser@docker2:~$ ip addr show dev eth0\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether f2:e8:00:24:e2:de brd ff:ff:ff:ff:ff:ff\n    inet **10.10.10.102/24** brd 10.10.10.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::f0e8:ff:fe24:e2de/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker2:~$\nuser@docker2:~$ **docker exec web1 ip link show dev eth0**\n7: eth0@if8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP\n    link/ether **02:42:ac:10:10:81** brd ff:ff:ff:ff:ff:ff\nuser@docker2:~$\n```", "```\nuser@docker2:~$ **docker network create --internal \\**\n**-o com.docker.network.bridge.name=mybridge1 myinternalbridge**\naa990a5436fb2b01f92ffc4d47c5f76c94f3c239f6e9005081ff5c5ecdc4059a\nuser@docker2:~$\n```", "```\nuser@docker2:~$ ip addr show dev mybridge1\n13: mybridge1: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default\n    link/ether 02:42:b5:c7:0e:63 brd ff:ff:ff:ff:ff:ff\n    inet **172.19.0.1/16** scope global mybridge1\n       valid_lft forever preferred_lft forever\nuser@docker2:~$\n```", "```\nuser@docker2:~$ sudo iptables-save\n# Generated by iptables-save v1.4.21\n\u2026<Additional output removed for brevity>\u2026 \n**-A DOCKER-ISOLATION ! -s 172.19.0.0/16 -o mybridge1 -j DROP**\n**-A DOCKER-ISOLATION ! -d 172.19.0.0/16 -i mybridge1 -j DROP** \n-A DOCKER-ISOLATION -j RETURN\nCOMMIT\n# Completed on Tue Oct  4 23:45:24 2016\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker run --net=myinternalbridge --name web1 -d -P jonlangemak/web_server_1\nb5f069a40a527813184c7156633c1e28342e0b3f1d1dbb567f94072bc27a5934\nuser@docker2:~$ docker port web1\nuser@docker2:~$\n```", "```\nuser@docker2:~$ **docker network create -d overlay \\**\n**--subnet 192.10.10.0/24 --internal myinternaloverlay**\n1677f2c313f21e58de256d9686fd2d872699601898fd5f2a3391b94c5c4cd2ec\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker run --net=myinternaloverlay --name web1 -d -P jonlangemak/web_server_1\nc5b05a3c829dfc04ecc91dd7091ad7145cbce96fc7aa0e5ad1f1cf3fd34bb02b\nuser@docker2:~$\n```", "```\nuser@docker2:~$ docker exec -it web1 ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n11: **eth0**@if12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP\n    link/ether 02:42:c0:0a:0a:02 brd ff:ff:ff:ff:ff:ff\n    inet **192.10.10.2/24** scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:c0ff:fe0a:a02/64 scope link\n       valid_lft forever preferred_lft forever\nuser@docker2:~$ \n```"]