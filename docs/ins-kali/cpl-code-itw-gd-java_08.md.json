["```java\npublic interface Car {\n\u00a0\u00a0\u00a0\u00a0public void speedUp();\n\u00a0\u00a0\u00a0\u00a0public void slowDown();\n\u00a0\u00a0\u00a0\u00a0public void turnRight();\n\u00a0\u00a0\u00a0\u00a0public void turnLeft();\n\u00a0\u00a0\u00a0\u00a0public String getCarType();\n}\n```", "```java\npublic class ElectricCar implements Car {\n\u00a0\u00a0\u00a0\u00a0private final String carType;\n\u00a0\u00a0\u00a0\u00a0public ElectricCar(String carType) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.carType = carType;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void speedUp() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Speed up the electric car\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void slowDown() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Slow down the electric car\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void turnRight() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Turn right the electric car\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void turnLeft() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Turn left the electric car\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public String getCarType() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.carType;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic class Main {\n\u00a0\u00a0\u00a0\u00a0public static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Car electricCar = new ElectricCar(\"BMW\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Driving the electric car: \" \n\t\t\u00a0\u00a0+ electricCar.getCarType() + \"\\n\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0electricCar.speedUp();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0electricCar.turnLeft();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0electricCar.slowDown();\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\nDriving the electric car: BMW\nSpeed up the electric car\nTurn left the electric car\nSlow down the electric car\n```", "```java\npublic class Cat {\n\u00a0\u00a0\u00a0\u00a0private int mood = 50;\n\u00a0\u00a0\u00a0\u00a0private int hungry = 50;\n\u00a0\u00a0\u00a0\u00a0private int energy = 50;\n\u00a0\u00a0\u00a0\u00a0public void sleep() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Sleep ...\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0energy++;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hungry++;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void play() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Play ...\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mood++;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0energy--;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0meow();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void feed() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Feed ...\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0hungry--;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mood++;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0meow();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0private void meow() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Meow!\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public int getMood() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return mood;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public int getHungry() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return hungry;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public int getEnergy() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return energy;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Cat cat = new Cat();\n\u00a0\u00a0\u00a0\u00a0cat.feed();\n\u00a0\u00a0\u00a0\u00a0cat.play();\n\u00a0\u00a0\u00a0\u00a0cat.feed();\n\u00a0\u00a0\u00a0\u00a0cat.sleep();\n\u00a0\u00a0\u00a0\u00a0System.out.println(\"Energy: \" + cat.getEnergy());\n\u00a0\u00a0\u00a0\u00a0System.out.println(\"Mood: \" + cat.getMood());\n\u00a0\u00a0\u00a0\u00a0System.out.println(\"Hungry: \" + cat.getHungry());\n}\n```", "```java\nFeed ...Meow!Play ...Meow!Feed ...Meow!Sleep ...\nEnergy: 50\nMood: 53\nHungry: 49\n```", "```java\npublic class Employee {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0public Employee(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic class Programmer extends Employee {\n\u00a0\u00a0\u00a0\u00a0private String team;\n\u00a0\u00a0\u00a0\u00a0public Programmer(String name, String team) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(name);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.team = team;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Programmer p = new Programmer(\"Joana Nimar\", \"Toronto\");\n\u00a0\u00a0\u00a0\u00a0String name = p.getName();\n\u00a0\u00a0\u00a0\u00a0String team = p.getTeam();\n\u00a0\u00a0\u00a0\u00a0System.out.println(name + \" is assigned to the \" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ team + \" team\");\n}\n```", "```java\nJoana Nimar is assigned to the Toronto team\n```", "```java\npublic class Triangle {\n\u00a0\u00a0\u00a0\u00a0public void draw() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Draw default triangle ...\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void draw(String color) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Draw a triangle of color \" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ color);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void draw(int size, String color) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Draw a triangle of color \" + color\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ \" and scale it up with the new size of \" + size);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Triangle triangle = new Triangle();\n\u00a0\u00a0\u00a0\u00a0triangle.draw();\n\u00a0\u00a0\u00a0\u00a0triangle.draw(\"red\");\n\u00a0\u00a0\u00a0\u00a0triangle.draw(10, \"blue\");\n}\n```", "```java\nDraw default triangle ...\nDraw a triangle of color red\nDraw a triangle of color blue and scale it up \nwith the new size of 10\n```", "```java\npublic interface Shape {\n\u00a0\u00a0\u00a0\u00a0public void draw();\n}\n```", "```java\npublic class Triangle implements Shape {\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void draw() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Draw a triangle ...\");\n\u00a0\u00a0\u00a0\u00a0}\n}\npublic class Rectangle implements Shape {\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void draw() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Draw a rectangle ...\");\n\u00a0\u00a0\u00a0\u00a0}\n}\npublic class Circle implements Shape {\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void draw() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Draw a circle ...\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Shape triangle = new Triangle();\n\u00a0\u00a0\u00a0\u00a0Shape rectangle = new Rectangle();\n\u00a0\u00a0\u00a0\u00a0Shape circle = new Circle();\n\u00a0\u00a0\u00a0\u00a0triangle.draw();\n\u00a0\u00a0\u00a0\u00a0rectangle.draw();\n\u00a0\u00a0\u00a0\u00a0circle.draw();\n}\n```", "```java\nDraw a triangle ...\nDraw a rectangle ...\nDraw a circle ...\n```", "```java\npublic class Person {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0public Person(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\npublic class Address {\n\u00a0\u00a0\u00a0\u00a0private String city;\n\u00a0\u00a0\u00a0\u00a0private String zip;\n\u00a0\u00a0\u00a0\u00a0public Address(String city, String zip) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.city = city;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.zip = zip;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Person p1 = new Person(\"Andrei\");\n\u00a0\u00a0\u00a0\u00a0Person p2 = new Person(\"Marin\");\n\u00a0\u00a0\u00a0\u00a0Address a1 = new Address(\"Banesti\", \"107050\");\n\u00a0\u00a0\u00a0\u00a0Address a2 = new Address(\"Bucuresti\", \"229344\");\n\u00a0\u00a0\u00a0\u00a0// Association between classes in the main method \n\u00a0\u00a0\u00a0\u00a0System.out.println(p1.getName() + \" lives at address \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ a2.getCity() + \", \" + a2.getZip()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ \" but it also has an address at \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ a1.getCity() + \", \" + a1.getZip());\n\u00a0\u00a0\u00a0\u00a0System.out.println(p2.getName() + \" lives at address \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ a1.getCity() + \", \" + a1.getZip()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ \" but it also has an address at \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ a2.getCity() + \", \" + a2.getZip());\n}\n```", "```java\nAndrei lives at address Bucuresti, 229344 but it also has an address at Banesti, 107050\nMarin lives at address Banesti, 107050 but it also has an address at Bucuresti, 229344\n```", "```java\npublic class Racket {\n\u00a0\u00a0\u00a0\u00a0private String type;\n\u00a0\u00a0\u00a0\u00a0private int size;\n\u00a0\u00a0\u00a0\u00a0private int weight;\n\u00a0\u00a0\u00a0\u00a0public Racket(String type, int size, int weight) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.size = size;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.weight = weight;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic class TennisPlayer {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0private Racket racket;\n\u00a0\u00a0\u00a0\u00a0public TennisPlayer(String name, Racket racket) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.racket = racket;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Racket racket = new Racket(\"Babolat Pure Aero\", 100, 300);\n\u00a0\u00a0\u00a0\u00a0TennisPlayer player = new TennisPlayer(\"Rafael Nadal\", \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0racket);\n\u00a0\u00a0\u00a0\u00a0System.out.println(\"Player \" + player.getName() \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ \" plays with \" + player.getRacket().getType());\n}\n```", "```java\nPlayer Rafael Nadal plays with Babolat Pure Aero\n```", "```java\npublic class Engine {\n\u00a0\u00a0\u00a0\u00a0private String type;\n\u00a0\u00a0\u00a0\u00a0private int horsepower;\n\u00a0\u00a0\u00a0\u00a0public Engine(String type, int horsepower) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.horsepower = horsepower;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic class Car {\n\u00a0\u00a0\u00a0\u00a0private final String name;\n\u00a0\u00a0\u00a0\u00a0private final Engine engine;\n\u00a0\u00a0\u00a0\u00a0public Car(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Engine engine = new Engine(\"petrol\", 300);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.engine=engine;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public int getHorsepower() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return engine.getHorsepower();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public String getName() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return name;\n\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Car car = new Car(\"MyCar\");\n\u00a0\u00a0\u00a0\u00a0System.out.println(\"Horsepower: \" + car.getHorsepower());\n}\n```", "```java\nHorsepower: 300\n```", "```java\npublic class RectangleAreaCalculator {\n\u00a0\u00a0\u00a0\u00a0private static final double INCH_TERM = 0.0254d;\n\u00a0\u00a0\u00a0\u00a0private final int width;\n\u00a0\u00a0\u00a0\u00a0private final int height;\n\u00a0\u00a0\u00a0\u00a0public RectangleAreaCalculator(int width, int height) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.width = width;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.height = height;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public int area() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return width * height;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// this method breaks SRP\n\u00a0\u00a0\u00a0\u00a0public double metersToInches(int area) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return area / INCH_TERM;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic class RectangleAreaCalculator {\n\u00a0\u00a0\u00a0\u00a0private final int width;\n\u00a0\u00a0\u00a0\u00a0private final int height;\n\u00a0\u00a0\u00a0\u00a0public RectangleAreaCalculator(int width, int height) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.width = width;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.height = height;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public int area() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return width * height;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic class AreaConverter {\n\u00a0\u00a0\u00a0\u00a0private static final double INCH_TERM = 0.0254d;\n\u00a0\u00a0\u00a0\u00a0private static final double FEET_TERM = 0.3048d;\n\u00a0\u00a0\u00a0\u00a0public double metersToInches(int area) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return area / INCH_TERM;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public double metersToFeet(int area) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return area / FEET_TERM;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic interface Shape {\u00a0\u00a0\u00a0\u00a0\n}\npublic class Rectangle implements Shape {\n\u00a0\u00a0\u00a0\u00a0private final int width;\n\u00a0\u00a0\u00a0\u00a0private final int height;\n\u00a0\u00a0\u00a0\u00a0// constructor and getters omitted for brevity\n}\npublic class Circle implements Shape {\n\u00a0\u00a0\u00a0\u00a0private final int radius;\n\u00a0\u00a0\u00a0\u00a0// constructor and getter omitted for brevity\n}\n```", "```java\npublic class AreaCalculator {\n\u00a0\u00a0\u00a0\u00a0private final List<Shape> shapes;\n\u00a0\u00a0\u00a0\u00a0public AreaCalculator(List<Shape> shapes) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.shapes = shapes;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// adding more shapes requires us to modify this class\n\u00a0\u00a0\u00a0\u00a0// this code is not OCP compliant\n\u00a0\u00a0\u00a0\u00a0public double sum() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int sum = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (Shape shape : shapes) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (shape.getClass().equals(Circle.class)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sum += Math.PI * Math.pow(((Circle) shape)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.getRadius(), 2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(shape.getClass().equals(Rectangle.class)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sum += ((Rectangle) shape).getHeight() \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* ((Rectangle) shape).getWidth();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return sum;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic interface Shape { \n\u00a0\u00a0\u00a0\u00a0public double area();\n}\n```", "```java\npublic class Rectangle implements Shape {\n\u00a0\u00a0\u00a0\u00a0private final int width;\n\u00a0\u00a0\u00a0\u00a0private final int height;\n\u00a0\u00a0\u00a0\u00a0public Rectangle(int width, int height) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.width = width;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.height = height;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public double area() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return width * height;\n\u00a0\u00a0\u00a0\u00a0}\n}\npublic class Circle implements Shape {\n\u00a0\u00a0\u00a0\u00a0private final int radius;\n\u00a0\u00a0\u00a0\u00a0public Circle(int radius) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.radius = radius;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public double area() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return Math.PI * Math.pow(radius, 2);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class AreaCalculator {\n\u00a0\u00a0\u00a0\u00a0private final List<Shape> shapes;\n\u00a0\u00a0\u00a0\u00a0public AreaCalculator(List<Shape> shapes) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.shapes = shapes;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public double sum() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int sum = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (Shape shape : shapes) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sum += shape.area();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return sum;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic abstract class Member {\n\u00a0\u00a0\u00a0\u00a0private final String name;\n\u00a0\u00a0\u00a0\u00a0public Member(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public abstract void joinTournament();\n\u00a0\u00a0\u00a0\u00a0public abstract void organizeTournament();\n}\n```", "```java\npublic class PremiumMember extends Member {\n\u00a0\u00a0\u00a0\u00a0public PremiumMember(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(name);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void joinTournament() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Premium member joins tournament\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void organizeTournament() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Premium member organize \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tournament\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class FreeMember extends Member {\n\u00a0\u00a0\u00a0\u00a0public FreeMember(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(name);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void joinTournament() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Classic member joins tournament \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...\");\n\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// this method breaks Liskov's Substitution Principle\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void organizeTournament() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"A free member cannot organize \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tournaments\");\n\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\nList<Member> members = List.of(\n\u00a0\u00a0\u00a0\u00a0new PremiumMember(\"Jack Hores\"),\n\u00a0\u00a0\u00a0\u00a0new VipMember(\"Tom Johns\"),\n\u00a0\u00a0\u00a0\u00a0new FreeMember(\"Martin Vilop\")\n); \n```", "```java\nfor (Member member : members) {\n\u00a0\u00a0\u00a0\u00a0member.organizeTournament();\n}\n```", "```java\npublic interface TournamentJoiner {\n\u00a0\u00a0\u00a0\u00a0public void joinTournament();\n}\npublic interface TournamentOrganizer {\n\u00a0\u00a0\u00a0\u00a0public void organizeTournament();\n}\n```", "```java\npublic abstract class Member \n\u00a0\u00a0\u00a0\u00a0implements TournamentJoiner, TournamentOrganizer {\n\u00a0\u00a0\u00a0\u00a0private final String name;\n\u00a0\u00a0\u00a0\u00a0public Member(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\n}\n```", "```java\npublic class FreeMember implements TournamentJoiner {\n\u00a0\u00a0\u00a0\u00a0private final String name;\n\u00a0\u00a0\u00a0\u00a0public FreeMember(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void joinTournament() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Free member joins tournament ...\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\nList<TournamentJoiner> members = List.of(\n\u00a0\u00a0\u00a0\u00a0new PremiumMember(\"Jack Hores\"),\n\u00a0\u00a0\u00a0\u00a0new PremiumMember(\"Tom Johns\"),\n\u00a0\u00a0\u00a0\u00a0new FreeMember(\"Martin Vilop\")\n);\n```", "```java\n// this code respects LSP\nfor (TournamentJoiner member : members) {\n\u00a0\u00a0\u00a0\u00a0member.joinTournament();\n}\u00a0\u00a0\u00a0\n```", "```java\nList<TournamentOrganizer> members = List.of(\n\u00a0\u00a0\u00a0\u00a0new PremiumMember(\"Jack Hores\"),\n\u00a0\u00a0\u00a0\u00a0new VipMember(\"Tom Johns\")\n);\n```", "```java\n// this code respects LSP\nfor (TournamentOrganizer member : members) {\n\u00a0\u00a0\u00a0\u00a0member.organizeTournament();\n}\n```", "```java\npublic interface Connection {\n\u00a0\u00a0\u00a0\u00a0public void socket();\n\u00a0\u00a0\u00a0\u00a0public void http();\n\u00a0\u00a0\u00a0\u00a0public void connect();\n}\n```", "```java\npublic class WwwPingConnection implements Connection {\n\u00a0\u00a0\u00a0\u00a0private final String www;\n\u00a0\u00a0\u00a0\u00a0public WwwPingConnection(String www) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.www = www;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void http() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Setup an HTTP connection to \" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ www);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void connect() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Connect to \" + www);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// this method breaks Interface Segregation Principle\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void socket() {\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\nWwwPingConnection www \n\u00a0\u00a0\u00a0\u00a0= new WwwPingConnection 'www.yahoo.com');\nwww.socket(); // we can call this method!\nwww.connect();\n```", "```java\npublic interface Connection {\n\u00a0\u00a0\u00a0\u00a0public void connect();\n}\n```", "```java\npublic interface HttpConnection extends Connection {\n\u00a0\u00a0\u00a0\u00a0public void http();\n}\npublic interface SocketConnection extends Connection {\n\u00a0\u00a0\u00a0\u00a0public void socket();\n}\n```", "```java\npublic class WwwPingConnection implements HttpConnection {\n\u00a0\u00a0\u00a0\u00a0private final String www;\n\u00a0\u00a0\u00a0\u00a0public WwwPingConnection(String www) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.www = www;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void http() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Setup an HTTP connection to \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ www);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void connect() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Connect to \" + www);\n\u00a0\u00a0\u00a0\u00a0} \n}\n```", "```java\npublic class PostgreSQLJdbcUrl {\n\u00a0\u00a0\u00a0\u00a0private final String dbName;\n\u00a0\u00a0\u00a0\u00a0public PostgreSQLJdbcUrl(String dbName) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.dbName = dbName;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public String get() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"jdbc:// ... \" + this.dbName;\n\u00a0\u00a0\u00a0\u00a0}\n}\npublic class ConnectToDatabase {\n\u00a0\u00a0\u00a0\u00a0public void connect(PostgreSQLJdbcUrl postgresql) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Connecting to \"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ postgresql.get());\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic interface JdbcUrl {\n\u00a0\u00a0\u00a0\u00a0public String get();\n}\n```", "```java\npublic class PostgreSQLJdbcUrl implements JdbcUrl {\n\u00a0\u00a0\u00a0\u00a0private final String dbName;\n\u00a0\u00a0\u00a0\u00a0public PostgreSQLJdbcUrl(String dbName) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.dbName = dbName;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public String get() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"jdbc:// ... \" + this.dbName;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class ConnectToDatabase {\n\u00a0\u00a0\u00a0\u00a0public void connect(JdbcUrl jdbcUrl) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Connecting to \" + jdbcUrl.get());\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class Rectangle implements Cloneable {\n\u00a0\u00a0\u00a0\u00a0...\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0protected Rectangle clone() \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throws CloneNotSupportedException {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Rectangle clone = (Rectangle) super.clone();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return clone;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\nRectangle r = new Rectangle(4, 3);\nRectangle clone = r.clone();\n```", "```java\npublic interface Vehicle {\n\u00a0\u00a0\u00a0\u00a0public void speedUp();\n\u00a0\u00a0\u00a0\u00a0public void slowDown();\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic class SteamCar implements Vehicle {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0// constructor and getter omitted for brevity\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void speedUp() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Speed up the steam car ...\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void slowDown() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Slow down the steam car ...\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic interface Vehicle {\n\u00a0\u00a0\u00a0\u00a0public void speedUp();\n\u00a0\u00a0\u00a0\u00a0public void slowDown();\n\u00a0\u00a0\u00a0\u00a0default double computeConsumption(int fuel, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int distance, int horsePower) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// simulate the computation \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return Math.random() * 10d;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic class ElectricCar implements Vehicle {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0private int horsePower;\n\u00a0\u00a0\u00a0\u00a0// constructor and getters omitted for brevity\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void speedUp() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Speed up the electric car ...\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void slowDown() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Slow down the electric car ...\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public double computeConsumption(int fuel, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int distance, int horsePower) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// simulate the computation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return Math.random()*60d / Math.pow(Math.random(), 3);\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic interface Vehicle {\n\u00a0\u00a0\u00a0\u00a0public void speedUp();\n\u00a0\u00a0\u00a0\u00a0public void slowDown();\n\u00a0\u00a0\u00a0\u00a0default double computeConsumption(int fuel, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int distance, int horsePower) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return Math.random() * 10d;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0static void description() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"This interface control\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0steam, petrol and electric cars\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class Vehicle {\n\u00a0\u00a0\u00a0\u00a0public static void move() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Moving a vehicle\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class Car extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0// this method hides Vehicle#move()\n\u00a0\u00a0\u00a0\u00a0public static void move() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Moving a car\");\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0Vehicle.move(); // call Vehicle#move()\n\u00a0\u00a0\u00a0\u00a0Car.move();\u00a0\u00a0\u00a0\u00a0\u00a0// call Car#move()\n}\n```", "```java\nMoving a vehicle\nMoving a car\n```", "```java\npublic interface Selector {\n\u00a0\u00a0\u00a0\u00a0public void nextSongBtn();\n\u00a0\u00a0\u00a0\u00a0public void prevSongBtn();\n\u00a0\u00a0\u00a0\u00a0public void addSongToPlaylistBtn(Song song);\n\u00a0\u00a0\u00a0\u00a0public void removeSongFromPlaylistBtn(Song song);\n\u00a0\u00a0\u00a0\u00a0public void shuffleBtn();\n}\npublic class Jukebox implements Selector {\n\u00a0\u00a0\u00a0\u00a0private final CDPlayer cdPlayer;\n\u00a0\u00a0\u00a0\u00a0public Jukebox(CDPlayer cdPlayer) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cdPlayer = cdPlayer;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public void nextSongBtn() {...}\n\u00a0\u00a0\u00a0\u00a0// rest of Selector methods omitted for brevity\n}\n```", "```java\npublic class CDPlayer {\n\u00a0\u00a0\u00a0\u00a0private CD cd;\n\u00a0\u00a0\u00a0\u00a0private final Set<CD> cds;\n\u00a0\u00a0\u00a0\u00a0private final Playlist playlist;\n\u00a0\u00a0\u00a0\u00a0public CDPlayer(Playlist playlist, Set<CD> cds) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.playlist = playlist;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cds = cds;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0protected void playNextSong() {...}\n\u00a0\u00a0\u00a0\u00a0protected void playPrevSong() {...}\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0protected void addCD(CD cd) {...}\n\u00a0\u00a0\u00a0\u00a0protected void removeCD(CD cd) {...}\n\u00a0\u00a0\u00a0\u00a0// getters omitted for brevity\n}\n```", "```java\npublic class Playlist {\n\u00a0\u00a0\u00a0\u00a0private Song song;\n\u00a0\u00a0\u00a0\u00a0private final List<Song> songs; // or Queue\n\u00a0\u00a0\u00a0\u00a0public Playlist(List<Song> songs) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.songs = songs;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0public Playlist(Song song, List<Song> songs) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.song = song;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.songs = songs;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0protected void addSong(Song song) {...}\n\u00a0\u00a0\u00a0\u00a0protected void removeSong(Song song) {...}\n\u00a0\u00a0\u00a0\u00a0protected void shuffle() {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0protected Song getNextSong() {...};\n\u00a0\u00a0\u00a0\u00a0protected Song getPrevSong() {...};\n\u00a0\u00a0\u00a0\u00a0// setters and getters omitted for brevity\n}\n```", "```java\npublic enum Coin {\n\u00a0\u00a0\u00a0\u00a0PENNY(1), NICKEL(5), DIME(10), QUARTER(25);\n\u00a0\u00a0\u00a0\u00a0...\n}\npublic enum Item {\n\u00a0\u00a0\u00a0\u00a0SKITTLES(\"Skittles\", 15), TWIX(\"Twix\", 35) ...\n\u00a0\u00a0\u00a0\u00a0...\n}\n```", "```java\npublic final class Inventory<T> {\n\u00a0\u00a0\u00a0\u00a0private Map<T, Integer> inventory = new HashMap<>();\n\u00a0\u00a0\u00a0\u00a0protected int getQuantity(T item) {...}\n\u00a0\u00a0\u00a0\u00a0protected boolean hasItem(T item) {...}\n\u00a0\u00a0\u00a0\u00a0protected void clear() {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0protected void add(T item) {...}\n\u00a0\u00a0\u00a0\u00a0protected void put(T item, int quantity) {...}\n\u00a0\u00a0\u00a0\u00a0protected void deduct(T item) {...}\n}\n```", "```java\npublic interface Selector {\n\u00a0\u00a0\u00a0\u00a0public int checkPriceBtn(Item item);\n\u00a0\u00a0\u00a0\u00a0public void insertCoinBtn(Coin coin);\n\u00a0\u00a0\u00a0\u00a0public Map<Item, List<Coin>> buyBtn();\n\u00a0\u00a0\u00a0\u00a0public List<Coin> refundBtn();\n\u00a0\u00a0\u00a0\u00a0public void resetBtn();\u00a0\u00a0\u00a0\u00a0\n}\n```", "```java\npublic class VendingMachine implements Selector {\n\u00a0\u00a0\u00a0\u00a0private final Inventory<Coin> coinInventory\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= new Inventory<>();\n\u00a0\u00a0\u00a0\u00a0private final Inventory<Item> itemInventory\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= new Inventory<>();\n\u00a0\u00a0private int totalSales;\n\u00a0\u00a0\u00a0\u00a0private int currentBalance;\n\u00a0\u00a0\u00a0\u00a0private Item currentItem;\n\u00a0\u00a0\u00a0\u00a0public VendingMachine() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initMachine();\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void initMachine() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0System.out.println(\"Initializing the\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vending machine with coins and items ...\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// override Selector methods omitted for brevity\n}\n```", "```java\npublic enum StandardSuit {\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0SPADES, HEARTS, DIAMONDS, CLUBS;\n}\npublic abstract class Card {\n\u00a0\u00a0\u00a0\u00a0private final Enum suit;\n\u00a0\u00a0\u00a0\u00a0private final int value;\n\u00a0\u00a0\u00a0\u00a0private boolean available = Boolean.TRUE;\n\u00a0\u00a0\u00a0\u00a0public Card(Enum suit, int value) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.suit = suit;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.value = value;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// code omitted for brevity\n}\npublic class StandardCard extends Card {\n\u00a0\u00a0\u00a0\u00a0private static final int MIN_VALUE = 1;\n\u00a0\u00a0\u00a0\u00a0private static final int MAX_VALUE = 13;\n\u00a0\u00a0\u00a0\u00a0public StandardCard(StandardSuit suit, int value) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(suit, value);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// code omitted for brevity\n}\n```", "```java\npublic abstract class Pack<T extends Card> {\n\u00a0\u00a0\u00a0\u00a0private List<T> cards;\n\u00a0\u00a0\u00a0\u00a0protected abstract List<T> build();\n\u00a0\u00a0public int packSize() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return cards.size();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public List<T> getCards() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new ArrayList<>(cards);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected void setCards(List<T> cards) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cards = cards;\n\u00a0\u00a0\u00a0\u00a0}\n}\npublic final class StandardPack extends Pack {\n\u00a0\u00a0\u00a0\u00a0public StandardPack() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super.setCards(build());\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0protected List<StandardCard> build() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0List<StandardCard> cards = new ArrayList<>();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// code omitted for brevity\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return cards;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class Deck<T extends Card> implements Iterable<T> {\n\u00a0\u00a0\u00a0\u00a0private final List<T> cards;\n\u00a0\u00a0\u00a0\u00a0public Deck(Pack pack) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cards = pack.getCards();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void shuffle() {...}\n\u00a0\u00a0\u00a0\u00a0public List<T> dealHand(int numberOfCards) {...}\n\u00a0\u00a0\u00a0\u00a0public T dealCard() {...}\n\u00a0\u00a0\u00a0\u00a0public int remainingCards() {...}\n\u00a0\u00a0\u00a0\u00a0public void removeCards(List<T> cards) {...}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public Iterator<T> iterator() {...}\n}\n```", "```java\n// create a single classical card\nCard sevenHeart = new StandardCard(StandardSuit.HEARTS, 7);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n// create a complete deck of standards cards\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nPack cp = new StandardPack();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nDeck deck = new Deck(cp);\nSystem.out.println(\"Remaining cards: \" \n\u00a0\u00a0\u00a0\u00a0+ deck.remainingCards());\n```", "```java\npublic enum VehicleType {\n\u00a0\u00a0\u00a0\u00a0CAR(1), VAN(2), TRUCK(5);\n}\npublic class Vehicle {\n\u00a0\u00a0\u00a0\u00a0private final String licensePlate;\n\u00a0\u00a0\u00a0\u00a0private final int spotsNeeded;\n\u00a0\u00a0\u00a0\u00a0private final VehicleType type;\n\u00a0\u00a0\u00a0\u00a0public Vehicle(String licensePlate, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int spotsNeeded, VehicleType type) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.licensePlate = licensePlate;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.spotsNeeded = spotsNeeded;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.type = type;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0// getters omitted for brevity\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0// equals() and hashCode() omitted for brevity\n}\n```", "```java\npublic class ParkingLot {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0private Map<String, ParkingFloor> floors;\n\u00a0\u00a0\u00a0\u00a0public ParkingLot(String name) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public ParkingLot(String name, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Map<String, ParkingFloor> floors) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.floors = floors;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0// delegate to the proper ParkingFloor\n\u00a0\u00a0\u00a0\u00a0public ParkingTicket parkVehicle(Vehicle vehicle) {...}\n\u00a0\u00a0\u00a0\u00a0// we have to find the vehicle by looping floors\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0public boolean unparkVehicle(Vehicle vehicle) {...} \n\u00a0\u00a0\u00a0\u00a0// we have the ticket, so we have the needed information\n\u00a0\u00a0\u00a0\u00a0public boolean unparkVehicle\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParkingTicket parkingTicket) {...} \n\u00a0\u00a0\u00a0\u00a0public boolean isFull() {...}\n\u00a0\u00a0\u00a0\u00a0protected boolean isFull(VehicleType type) {...}\n\u00a0\u00a0\u00a0\u00a0// getters and setters omitted for brevity\n}\n```", "```java\npublic class ParkingFloor{\n\u00a0\u00a0\u00a0\u00a0private final String name;\n\u00a0\u00a0\u00a0\u00a0private final int totalSpots;\n\u00a0\u00a0\u00a0\u00a0private final Map<String, ParkingSpot>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parkingSpots = new LinkedHashMap<>();\n\u00a0\u00a0\u00a0\u00a0// here, I use a Set, but you may want to hold the parking \n\u00a0\u00a0\u00a0\u00a0// tickets in a certain order to optimize search\n\u00a0\u00a0\u00a0\u00a0private final Set<ParkingTicket>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parkingTickets = new HashSet<>();\nprivate int totalFreeSpots;\n\u00a0\u00a0\u00a0\u00a0public ParkingFloor(String name, int totalSpots) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.totalSpots = totalSpots;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initialize(); // create the parking spots\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected ParkingTicket parkVehicle(Vehicle vehicle) {...}\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0//we have to find the vehicle by looping the parking spots\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0protected boolean unparkVehicle(Vehicle vehicle) {...} \n\u00a0\u00a0\u00a0\u00a0// we have the ticket, so we have the needed information\n\u00a0\u00a0\u00a0\u00a0protected boolean unparkVehicle(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParkingTicket parkingTicket) {...} \n\u00a0\u00a0\u00a0\u00a0protected boolean isFull(VehicleType type) {...}\n\u00a0\u00a0\u00a0\u00a0protected int countFreeSpots(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0VehicleType vehicleType) {...}\n\u00a0\u00a0\u00a0\u00a0// getters omitted for brevity\n\u00a0\u00a0\u00a0\u00a0private List<ParkingSpot> findSpotsToFitVehicle(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Vehicle vehicle) {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void assignVehicleToParkingSpots(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0List<ParkingSpot> spots, Vehicle vehicle) {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private ParkingTicket releaseParkingTicket(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Vehicle vehicle) {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private ParkingTicket findParkingTicket(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Vehicle vehicle) {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void registerParkingTicket(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParkingTicket parkingTicket) {...}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private boolean unregisterParkingTicket(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParkingTicket parkingTicket) {...}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void initialize() {...}\n}\n```", "```java\npublic class ParkingSpot {\n\u00a0\u00a0\u00a0\u00a0private boolean free = true;\n\u00a0\u00a0\u00a0\u00a0private Vehicle vehicle;\n\u00a0\u00a0\u00a0\u00a0private final String label;\n\u00a0\u00a0\u00a0\u00a0private final ParkingFloor parkingFloor;\n\u00a0\u00a0\u00a0\u00a0protected ParkingSpot(ParkingFloor parkingFloor, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String label) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.parkingFloor = parkingFloor;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.label = label;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected boolean assignVehicle(Vehicle vehicle) {...}\n\u00a0\u00a0\u00a0\u00a0protected boolean removeVehicle() {...}\n\u00a0\u00a0\u00a0\u00a0// getters omitted for brevity\n}\n```", "```java\npublic class ParkingSystem implements Parking {\n\n\u00a0\u00a0\u00a0\u00a0private final String id;\n\u00a0\u00a0\u00a0\u00a0private final ParkingLot parkingLot;\n\u00a0\u00a0\u00a0\u00a0public ParkingSystem(String id, ParkingLot parkingLot) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.id = id;\n\u00a0this.parkingLot = parkingLot;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public ParkingTicket parkVehicleBtn(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String licensePlate, VehicleType type) {...}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public boolean unparkVehicleBtn(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String licensePlate, VehicleType type) {...}\n\u00a0\u00a0\u00a0\u00a0@Override\n\u00a0\u00a0\u00a0\u00a0public boolean unparkVehicleBtn(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParkingTicket parkingTicket) {...}\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0// getters omitted for brevity\n}\n```", "```java\npublic class Reader {\n\u00a0\u00a0\u00a0\u00a0private String name;\n\u00a0\u00a0\u00a0\u00a0private String email;\n\u00a0\u00a0\u00a0\u00a0// constructor omitted for brevity\n\u00a0\u00a0\u00a0\u00a0// getters, equals() and hashCode() omitted for brevity\n}\npublic class Book {\n\u00a0\u00a0\u00a0\u00a0private final String author;\n\u00a0\u00a0\u00a0\u00a0private final String title;\n\u00a0\u00a0\u00a0\u00a0private final String isbn;\n\u00a0\u00a0\u00a0\u00a0// constructor omitted for brevity\n\u00a0\u00a0\u00a0\u00a0public String fetchPage(int pageNr) {...}\n\u00a0\u00a0\u00a0\u00a0// getters, equals() and hashCode() omitted for brevity\n}\n```", "```java\npublic class Library {\n\u00a0\u00a0\u00a0\u00a0private final Map<String, Book> books = new HashMap<>();\n\u00a0\u00a0\u00a0\u00a0protected void addBook(Book book) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0books.putIfAbsent(book.getIsbn(), book);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected boolean remove(Book book) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return books.remove(book.getIsbn(), book);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected Book find(String isbn) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return books.get(isbn);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class Displayer {\n\u00a0\u00a0\u00a0\u00a0private Book book;\n\u00a0\u00a0\u00a0\u00a0private Reader reader;\n\u00a0\u00a0\u00a0\u00a0private String page;\n\u00a0\u00a0\u00a0\u00a0private int pageNumber;\n\u00a0\u00a0\u00a0\u00a0protected void displayReader(Reader reader) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.reader = reader;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0refreshReader();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected void displayBook(Book book) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.book = book;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0refreshBook();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected void nextPage() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0page = book.fetchPage(++pageNumber);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0refreshPage();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0protected void previousPage() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0page = book.fetchPage(--pageNumber);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0refreshPage();\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void refreshReader() {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void refreshBook() {...}\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0private void refreshPage() {...}\n}\n```", "```java\npublic class OnlineReaderSystem {\n\u00a0\u00a0\u00a0\u00a0private final Displayer displayer;\n\u00a0\u00a0\u00a0\u00a0private final Library library;\n\u00a0\u00a0\u00a0\u00a0private final ReaderManager readerManager;\n\u00a0\u00a0\u00a0\u00a0private Reader reader;\n\u00a0\u00a0\u00a0\u00a0private Book book;\n\u00a0\u00a0\u00a0\u00a0public OnlineReaderSystem() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer = new Displayer();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0library = new Library();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0readerManager = new ReaderManager();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void displayReader(Reader reader) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.reader = reader;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer.displayReader(reader);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void displayReader(String email) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.reader = readerManager.find(email);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.reader != null) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer.displayReader(reader);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void displayBook(Book book) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.book = book;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer.displayBook(book);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void displayBook(String isbn) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.book = library.find(isbn);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (this.book != null) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer.displayBook(book);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void nextPage() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer.nextPage();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void previousPage() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0displayer.previousPage();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void addBook(Book book) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0library.addBook(book);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public boolean deleteBook(Book book) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!book.equals(this.book)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return library.remove(book);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public void addReader(Reader reader) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0readerManager.addReader(reader);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public boolean deleteReader(Reader reader) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!reader.equals(this.reader)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return readerManager.remove(reader);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public Reader getReader() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return reader;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public Book getBook() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return book;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```java\npublic class HashTable<K, V> {\n\u00a0\u00a0\u00a0\u00a0private static final int SIZE = 10;\n\u00a0\u00a0\u00a0\u00a0private static class HashEntry<K, V> {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0K key;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0V value;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HashEntry <K, V> next;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HashEntry(K k, V v) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.key = k;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.value = v;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.next = null;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0...\n```", "```java\nprivate final HashEntry[] entries \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= new HashEntry[SIZE];\n\u00a0\u00a0\u00a0\u00a0...\n```", "```java\n\u00a0\u00a0\u00a0\u00a0public void put(K key, V value) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int hash = getHash(key);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0final HashEntry hashEntry = new HashEntry(key, value);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (entries[hash] == null) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0entries[hash] = hashEntry;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else { // collision => chaining\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HashEntry currentEntry = entries[hash];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while (currentEntry.next != null) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0currentEntry = currentEntry.next;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0currentEntry.next = hashEntry;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public V get(K key) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int hash = getHash(key);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (entries[hash] != null) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HashEntry currentEntry = entries[hash];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Loop the entry linked list for matching \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// the given 'key'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while (currentEntry != null) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (currentEntry.key.equals(key)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return (V) currentEntry.value;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0currentEntry = currentEntry.next;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return null;\n\u00a0\u00a0\u00a0\u00a0}\n```", "```java\n\u00a0\u00a0\u00a0\u00a0private int getHash(K key) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return Math.abs(key.hashCode() % SIZE);\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\n}\n```"]