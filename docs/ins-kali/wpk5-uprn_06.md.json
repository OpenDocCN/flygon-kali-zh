["```js\nnpm install --save-dev *webpack-merge*\n```", "```js\n webpack5-demo\n  |- package.json\n  |- webpack.config.js\n  |- webpack.common.js\n  |- webpack.dev.js\n  |- webpack.prod.js\n  |- /dist\n  |- /src\n    |- index.js\n    |- math.js\n  |- /node_modules\n```", "```js\n  const path = require('path');\n  const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n  const HtmlWebpackPlugin = require('html-webpack-plugin');\n\n  module.exports = {\n    entry: {\n      app: './src/index.js'\n    },\n    plugins: [\n      // new CleanWebpackPlugin(['dist/*']) for < v2 versions of \n      // CleanWebpackPlugin\n      new CleanWebpackPlugin(),\n      new HtmlWebpackPlugin({\n        title: 'Production'\n      })\n    ],\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  };\n```", "```js\n  const merge = require('webpack-merge');\n  const common = require('./webpack.common.js');\n\n  module.exports = merge(common, {\n    mode: 'development',\n    devtool: 'inline-source-map',\n    devServer: {\n      contentBase: './dist'\n    }\n  });\n```", "```js\n  const merge = require('webpack-merge');\n  const common = require('./webpack.common.js');\n\n  module.exports = merge(common, {\n    mode: 'production',\n  });\n```", "```js\n  { \n   \"name\": \"development\", \n   \"version\": \"1.0.0\", \n   \"description\": \"\", \n   \"main\": \"src/index.js\",\n   \"scripts\": { \n   \"start\": \"webpack-dev-server --open --config webpack.dev.js\", \n   \"build\": \"webpack --config webpack.prod.js\" \n  }, \n    \"keywords\": [], \n    \"author\": \"\", \n    \"license\": \"ISC\", \n    \"devDependencies\": { \n      \"clean-webpack-plugin\": \"^0.1.17\", \n      \"css-loader\": \"^0.28.4\", \n      \"csv-loader\": \"^2.1.1\", \n      \"express\": \"^4.15.3\",\n      \"file-loader\": \"^0.11.2\", \n      \"html-webpack-plugin\": \"^2.29.0\", \n      \"style-loader\": \"^0.18.2\", \n      \"webpack\": \"^5.0.0\",\n      \"webpack-dev-middleware\": \"^1.12.0\",\n      \"webpack-dev-server\": \"^2.9.1\", \n      \"webpack-merge\": \"^4.1.0\", \n      \"xml-loader\": \"^1.2.1\"\n   } \n }\n```", "```js\n document.body.appendChild(component());\n```", "```js\n  if ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-\n      worker.js').then(registration => {\n       console.log('SW registered: ', registration);\n    }).catch(registrationError => {\n     console.log('SW registration failed: ', registrationError);\n    });\n  });\n }\n```", "```js\nSW registered\n```", "```js\nnpm install workbox-webpack-plugin --save-dev\n```", "```js\nconst WorkboxPlugin = require('workbox-webpack-plugin');\nnew WorkboxPlugin.GenerateSW({\n clientsClaim: true,\n skipWaiting: true,\n }),\n```", "```js\nconst gulp = require('gulp'); \nconst webpack = require('webpack-stream'); \ngulp.task('default', function() { \n   return gulp.src('src/entry.js') \n    .pipe(webpack({ \n // Any configuration options... \n    })) \n .pipe(gulp.dest('dist/')); \n});\n```", "```js\nnpm install --save-dev *webpack mocha mocha-webpack*\n*mocha-webpack* 'test/**/*.js'\n```", "```js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      { pattern: 'test/*_test.js', watched: false },\n      { pattern: 'test/**/*_test.js', watched: false }\n    ],\n    preprocessors: {\n      'test/*_test.js': [ 'webpack' ],\n      'test/**/*_test.js': [ 'webpack' ]\n    },\n    webpack: {\n      // Any custom webpack configuration...\n    },\n    webpackMiddleware: {\n      // Any custom webpack-dev-middleware configuration...\n    }\n  });\n};\n```", "```js\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst ModuleFederationPlugin =\n   require(\"webpack/lib/container/ModuleFederationPlugin\");\n\nmodule.exports = {\n  plugins: [\n   new ModuleFederationPlugin({\n    name: \"app_one_remote\",\n    remotes: {\n      app_two: \"app_two_remote\",\n      app_three: \"app_three_remote\"\n },\n exposes: {\n   'AppContainer':'./src/App'\n },\n shared: [\"react\", \"react-dom\",\"react-router-dom\"]\n }),\n new HtmlWebpackPlugin({\n   template: \"./public/index.html\",\n   chunks: [\"main\"]\n  })\n ]\n} \n```", "```js\n<head>\n  <script src=\"img/app_one_remote.js\"></script>\n  <script src=\"img/app_two_remote.js\"></script>\n</head>\n<body>\n  <div id=\"root\"></div>\n</body>\n```", "```js\nconst Dialog = React.lazy(() => import(\"app_two_remote/Dialogue\")); \nconst Page1 = () => { \n  return ( \n    <div> \n      <h1>Page 1</h1> \n        <React.Suspense fallback=\"Loading User Dialogue...\"> \n          <Dialog /> \n        </React.Suspense> \n    </div> \n  ); \n}\n```", "```js\nimport { Route, Switch } from \"react-router-dom\";\nimport Page1 from \"./pages/page1\";\nimport Page2 from \"./pages/page2\";\nimport React from \"react\";\n   const Routes = () => (\n     <Switch>\n       <Route path=\"/page1\">\n        <Page1 />\n       </Route>\n       <Route path=\"/page2\">\n        <Page2 />\n       </Route>\n     </Switch>\n  );\n```", "```js\n const HtmlWebpackPlugin = require(\"html-webpack-plugin\");\n const ModuleFederationPlugin =\n   require(\"webpack/lib/container/ModuleFederationPlugin\");\n module.exports = {\n   plugins: [\n     new ModuleFederationPlugin({\n     name: \"app_two_remote\",\n     library: { type: \"var\", name: \"app_two_remote\" },\n     filename: \"remoteEntry.js\",\n     exposes: {\n       Dialog: \"./src/Dialogue\"\n },\n   remotes: {\n     app_one: \"app_one_remote\",\n },\n   shared: [\"react\", \"react-dom\",\"react-router-dom\"]\n }),\n new HtmlWebpackPlugin({\n   template: \"./public/index.html\",\n   chunks: [\"main\"]\n  })\n ]\n};\n```", "```js\nimport React from \"react\";\nimport Routes from './Routes'\nconst AppContainer = React.lazy(() =>\n  import(\"app_one_remote/AppContainer\"));\n\nconst App = () => {\n  return (\n   <div>\n     <React.Suspense fallback=\"Loading App Container from Host\">\n       <AppContainer routes={Routes}/>\n     </React.Suspense>\n   </div>\n  );\n}\n```", "```js\nimport React from 'react'\nimport {ThemeProvider} from \"@material-ui/core\";\nimport {theme} from \"./theme\";\nimport Dialog from \"./Dialogue\";\n\nfunction MainPage() {\n   return (\n     <ThemeProvider theme={theme}>\n       <div>\n         <h1>Material User Iinterface App</h1>\n         <Dialog />\n      </div>\n     </ThemeProvider>\n  );\n}\n```", "```js\nnew ModuleFederationPlugin({\n   name: \"app_three_remote\",\n   library: { type: \"var\", name: \"app_three_remote\" },\n   filename: \"remoteEntry.js\",\n   exposes: {\n     Button: \"./src/Button\"\n },\n shared: [\"react\", \"react-dom\"]\n}),\n```", "```js\nmodule.exports = {\n plugins: [\n  new ModuleFederationPlugin({\n    name: \"container\",\n    library: { type: \"commonjs-module\" },\n    filename: \"container.js\",\n    remotes: {\n      containerB: \"../1-container-full/container.js\"\n },\n   shared: [\"react\"]\n  })\n ]\n};\n```"]