- en: Chapter 3. Connecting Sensors - Measure the Real Things
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 连接传感器-测量真实的事物
- en: The objectives of this book are to build a Home Security System, control domestic
    appliances by electronically controlled systems with sensors, and monitor them
    from a dashboard. First, we need to consider that our sensors are connected to
    an end device that can read the signals and transmit them to the network.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是建立一个家庭安全系统，通过电子控制系统和传感器控制家用电器，并从仪表板监控它们。首先，我们需要考虑我们的传感器连接到一个可以读取信号并将其传输到网络的终端设备。
- en: For the end devices, we will use Arduino boards to acquire the readings from
    the sensors. We can see that the Raspberry Pi doesn't have analog inputs. For
    this reason, we use an Arduino board to read that signals.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于终端设备，我们将使用Arduino板从传感器中获取读数。我们可以看到树莓派没有模拟输入。因此，我们使用Arduino板来读取这些信号。
- en: 'In the previous chapter, we talked about how to connect devices to the Raspberry
    Pi; in this section, we will see how to interface sensors with Arduino boards
    to see how to read real signals from different applications for real measurements.
    We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了如何将设备连接到树莓派；在本节中，我们将看到如何将传感器与Arduino板进行接口，以了解如何从不同应用程序中读取真实信号进行实际测量。本章将涵盖以下主题：
- en: Using a flow sensor to calculate the volume of water
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用流量传感器计算水的体积
- en: Measuring the concentration of gas with a sensor
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用传感器测量气体浓度
- en: Measuring the level of alcohol with a sensor
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用传感器测量酒精浓度
- en: Detecting fire with a sensor
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用传感器检测火灾
- en: Measuring the humidity for plants
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为植物测量湿度
- en: Measuring the level of water in a recipient
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量容器中的水位
- en: Measuring temperature, humidity and light and display data in an LCD
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量温度、湿度和光，并在LCD中显示数据
- en: Detecting motion with a PIR sensor
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PIR传感器检测运动
- en: Detecting if the door is open with a reed switch
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用铁磁开关检测门是否打开
- en: Detecting who can get in the house with a fingerprint sensor
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用指纹传感器检测谁可以进入房屋
- en: It's important to consider the fact that we need to communicate our system to
    the real world. Since we are working on building a home security system, we need
    to learn how to connect and interact with some necessary sensors to use them in
    our system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要考虑到我们需要将我们的系统与现实世界进行通信。由于我们正在建立一个家庭安全系统，我们需要学习如何连接和与一些必要的传感器进行交互，以在我们的系统中使用它们。
- en: In the next section, we will cover the sensors that you will need to read the
    data you use in the domotics and security system.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍您在家居自动化和安全系统中需要读取的数据的传感器。
- en: Measuring flow sensor to calculate the volume of water
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量流量传感器以计算水的体积
- en: We need to take automatic measurements from the water that we're using in the
    home. For this project, we will use a sensor to perform this reading and make
    the reading of measurement automatic.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要对家中使用的水进行自动测量。为此项目，我们将使用传感器进行此读数，并使测量自动化。
- en: 'To make this project, we need the following materials:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个项目，我们需要以下材料：
- en: 'Flow Water Sensor and Arduino UNO board:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 流水传感器和Arduino UNO板：
- en: '![Measuring flow sensor to calculate the volume of water](graphics/image_03_001.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![测量流量传感器以计算水的体积](graphics/image_03_001.jpg)'
- en: Hardware connections
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件连接
- en: 'Now we have the connections for out flow sensor. We can see that it has three
    pins -- the red pin is connected to **+VCC 5** volts, the black one is connected
    to **GND,** and the yellow pin is connected to pin number **2** of the Arduino
    board as seen in the following image:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了流量传感器的连接。我们可以看到它有三个引脚--红色引脚连接到+VCC 5伏特，黑色引脚连接到GND，黄色引脚连接到Arduino板的引脚2，如下图所示：
- en: '![Hardware connections](graphics/image_03_002.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![硬件连接](graphics/image_03_002.jpg)'
- en: Reading the sensor signal
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取传感器信号
- en: 'An interrupt is used for the pulses generated by the passage of water to be
    accounted as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 中断用于计算通过水流的脉冲，如下所示：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The interruption is of type `RISING` counts the pulses that pass from a low
    state to a high:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 中断类型为`RISING`，计算从低状态到高状态的脉冲：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Reading and counting pulses with Arduino
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Arduino读取和计数脉冲
- en: 'In this part of the code, we explain that it counts the signals from the sensor
    using an interrupt, executes, and we have configured it as `RISING`, so it counts
    the pulses from digital signal zero to digital signal one:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码的这一部分中，我们解释了它如何使用中断来计算传感器的信号，我们已将其配置为`RISING`，因此它会计算从数字信号零到数字信号一的脉冲：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Open the Arduino Serial Monitor, and blow air through the water flow sensor
    using your mouth. The number of pulses per second will be printed on the Arduino
    Serial Monitor for each loop, as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Arduino串行监视器，并用嘴对水流传感器吹气。每个循环中每秒脉冲的数量将打印在Arduino串行监视器上，如下截图所示：
- en: '![Reading and counting pulses with Arduino](graphics/B05170_03_03-1.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![使用Arduino读取和计数脉冲](graphics/B05170_03_03-1.jpg)'
- en: Calculating water flow rate based on the pulses counted
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据计数的脉冲计算水流速
- en: 'In this part, we measure the pulses and convert them to the flow of water using
    the following steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分中，我们测量脉冲并将其转换为水流，步骤如下：
- en: Open a new Arduino IDE, and copy the following sketch.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开新的Arduino IDE，并复制以下草图。
- en: Verify and upload the sketch on the Arduino board.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证并上传Arduino板上的草图。
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following code will calculate the pulses that are reading from the sensor;
    we divide the number of pulses counted in one second, and we have pulses per liter:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将计算从传感器读取的脉冲；我们将每秒计数的脉冲数除以脉冲数：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Open the Arduino Serial Monitor, and blow air through the water flow sensor
    using your mouth. The number of pulses per second and the water flow rate in milliliters
    per second will be printed on the Arduino Serial Monitor for each loop, as shown
    in the following screenshot:![Calculating water flow rate based on the pulses
    counted](graphics/B05170_03_04-1.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Arduino串行监视器，并用嘴吹气通过水流传感器。每个循环中脉冲的数量和每秒的水流速将打印在Arduino串行监视器上，如下截图所示：![基于计数的水流速率计算](graphics/B05170_03_04-1.jpg)
- en: 'Calculating flow and volume of water:'
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算水流和水的体积：
- en: You can now either copy the code inside a file called `Flow_sensor_measure_volume.ino`,
    or just get the complete code from the folder for this project.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将代码复制到一个名为`Flow_sensor_measure_volume.ino`的文件中，或者直接从这个项目的文件夹中获取完整的代码。
- en: 'In this part, we calculate the flow and volume from the sensor:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分中，我们从传感器计算流量和体积：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We set up the interrupt:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置中断：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Start the interrupt:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 启动中断：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then we display the flow rate of the sensor:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们显示传感器的流速：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We calculate the volume of the sensor:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们计算传感器的体积：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We display the volume in milliliters:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们显示毫升的体积：
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The function to count the pulses is as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 计算脉冲的函数如下：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The result can be seen in the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可以在下面的截图中看到：
- en: '![Calculating flow and volume of water:](graphics/B05170_03_05-1.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![计算水流和水的体积：](graphics/B05170_03_05-1.jpg)'
- en: Displaying the parameters measured on an LCD
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在LCD上显示测量参数
- en: You can add an LCD screen to your newly built water meter to display readings
    rather than displaying them on the Arduino serial monitor. You can then disconnect
    your water meter from the computer after uploading the sketch onto your Arduino.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在新建的水表上添加LCD屏幕，以显示读数，而不是在Arduino串行监视器上显示它们。然后，在将草图上传到Arduino后，您可以将水表从计算机上断开连接。
- en: 'First, we define the LCD library:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们定义LCD库：
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then we define the variables that we will use in the program:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们定义程序中将使用的变量：
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We define the LCD pins:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义LCD引脚：
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We define the interrupt for sensing:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义传感的中断：
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now we display the message on LCD:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在LCD上显示消息：
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We now define the interrupt in the main loop:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在主循环中定义中断：
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We display the value on the LCD:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在LCD上显示数值：
- en: '[PRE18]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then we display the value of the flow rate:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们显示传感器的流速：
- en: '[PRE19]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We now display the value of the volume:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在显示体积的值：
- en: '[PRE20]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Then we define the function for counting the pulses:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们定义计算脉冲的函数：
- en: '[PRE21]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Connections with the water flow are shown in the following image:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 水流的连接如下图所示：
- en: '![Displaying the parameters measured on an LCD](graphics/image_03_006.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![在LCD上显示测量参数](graphics/image_03_006.jpg)'
- en: 'The following picture shows the measurements on an LCD:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了LCD上的测量结果：
- en: '![Displaying the parameters measured on an LCD](graphics/image_03_007.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![在LCD上显示测量参数](graphics/image_03_007.jpg)'
- en: You can see some information on the LCD screen, such as pulses per second, water
    flow rate, and the total volume of water from the beginning of the time.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在LCD屏幕上看到一些信息，例如每秒脉冲、水流速和从时间开始的总水量。
- en: Measuring the concentration of gas
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量气体浓度
- en: It's important to have in our system a sensor that detects gas so we can apply
    it in our home in order to detect a gas leak. Now we´re going to describe how
    to connect to an Arduino board and read the concentration of gas.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的系统中有一个检测气体的传感器是很重要的，这样我们就可以将其应用在家里，以便检测气体泄漏。现在我们将描述如何连接到Arduino板并读取气体浓度。
- en: In this section, we will use a gas sensor and Methane CH4\. In this case, we
    will use an MQ-4 sensor that can detect concentrations from 200 to 10000 ppm.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将使用一个气体传感器和甲烷CH4。在这种情况下，我们将使用一个可以检测200到10000ppm浓度的MQ-4传感器。
- en: 'This sensor has an analog resistance in its output and can connect to an ADC;
    it needs a coil energize of 5 volts. The image for the sensor can be seen as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 该传感器在输出中具有模拟电阻，并可以连接到ADC；它需要5伏的线圈激励。传感器的图像如下所示：
- en: '![Measuring the concentration of gas](graphics/B05170_03_08-1.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![测量气体浓度](graphics/B05170_03_08-1.jpg)'
- en: We can find information for the MQ-4 sensor at [https://www.sparkfun.com/products/9404](https://www.sparkfun.com/products/9404).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在[https://www.sparkfun.com/products/9404](https://www.sparkfun.com/products/9404)找到MQ-4传感器的信息。
- en: '![Measuring the concentration of gas](graphics/B05170_03_09-1.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![测量气体浓度](graphics/B05170_03_09-1.jpg)'
- en: Connections with the sensor and Arduino board
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传感器和Arduino板的连接
- en: 'According to the preceding diagram, we will now see the connections made in
    the following image:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的图表，我们现在将在下面的图像中看到所做的连接：
- en: '![Connections with the sensor and Arduino board](graphics/B05170_03_10-1.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![传感器和Arduino板的连接](graphics/B05170_03_10-1.jpg)'
- en: 'Open the Arduino IDE, and copy the following sketch:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Arduino IDE，并复制以下草图：
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We see the following results on the screen:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在屏幕上看到以下结果：
- en: '![Connections with the sensor and Arduino board](graphics/B05170_03_11-1.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![传感器和Arduino板的连接](graphics/B05170_03_11-1.jpg)'
- en: Measuring the level of alcohol with a sensor
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用传感器测量酒精的浓度
- en: 'In this section, we will build a very cool project: Your very own **Alcohol**
    **Breath Analyser**. To do that, we are going to use a simple Arduino Uno board
    along with an ethanol gas sensor:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将构建一个非常酷的项目：您自己的**酒精** **呼吸分析仪**。为此，我们将使用一个简单的Arduino Uno板以及一个乙醇气体传感器：
- en: '![Measuring the level of alcohol with a sensor](graphics/B05170_03_12-1.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![用传感器测量酒精的浓度](graphics/B05170_03_12-1.jpg)'
- en: 'The following diagram shows the connection of the sensor with the Arduino:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了传感器与Arduino的连接：
- en: '![Measuring the level of alcohol with a sensor](graphics/B05170_03_13-1.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![用传感器测量酒精的浓度](graphics/B05170_03_13-1.jpg)'
- en: We are now going to write the code for the project. Here, we are simply going
    to go over the most important parts of the code.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将为项目编写代码。在这里，我们将简单地介绍代码的最重要部分。
- en: 'You can now either copy the code inside a file called `Sensor_alcohol.ino`,
    or just get the complete code from the folder for this project:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将代码复制到名为`Sensor_alcohol.ino`的文件中，或者直接从该项目的文件夹中获取完整的代码：
- en: '[PRE23]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'When it doesn''t detect alcohol, we can see the number of values that the Arduino
    reads:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当它没有检测到酒精时，我们可以看到Arduino读取的数值：
- en: '![Measuring the level of alcohol with a sensor](graphics/B05170_03_14-1.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![使用传感器测量酒精含量](graphics/B05170_03_14-1.jpg)'
- en: 'If it detects alcohol, we see values from the analog read from Arduino as shown
    in the following screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检测到酒精，我们可以看到Arduino从模拟读取的数值，如下截图所示：
- en: '![Measuring the level of alcohol with a sensor](graphics/B05170_03_15-1.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![使用传感器测量酒精含量](graphics/B05170_03_15-1.jpg)'
- en: Detecting fire with a sensor
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用传感器检测火灾
- en: If there's a fire in our home, it's vital to detect it; so in the next section,
    we will create a project that detects fire with a sensor.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们家中有火灾，及时检测是至关重要的；因此，在下一节中，我们将创建一个使用传感器检测火灾的项目。
- en: 'In the following image, we see of the fire sensor module:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们看到了火灾传感器模块：
- en: '![Detecting fire with a sensor](graphics/B05170_03_16-1.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![使用传感器检测火灾](graphics/B05170_03_16-1.jpg)'
- en: You can now either copy the code inside a file called `Sensor_fire.ino`, or
    just get the complete code from the folder for this project.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将代码复制到名为`Sensor_fire.ino`的文件中，或者直接从该项目的文件夹中获取完整的代码。
- en: 'We define the variables for our program at the beginning:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在程序开始时为程序定义变量：
- en: '[PRE24]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We define the output signals and the serial communication:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义输出信号和串行通信：
- en: '[PRE25]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now we display the value of the digital signal:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们显示数字信号的值：
- en: '[PRE26]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Then we compare: If the value detects a high logic state, it turns off the
    output; if it reads the opposite, it turns on the digital signal; this means that
    it has detected fire:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们进行比较：如果数值检测到高逻辑状态，它会关闭输出；如果读取相反的数值，它会打开数字信号；这意味着它已经检测到火灾：
- en: '[PRE27]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'When the Arduino board detects fire, it will read `*1*` in the digital input,
    which means no fire detection:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当Arduino板检测到火灾时，它将在数字输入中读取`*1*`，这意味着没有检测到火灾：
- en: '![Detecting fire with a sensor](graphics/B05170_03_17-1.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![使用传感器检测火灾](graphics/B05170_03_17-1.jpg)'
- en: 'If it detects fire, the digital input reads `*0*` logic from the digital input:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检测到火灾，数字输入从数字输入读取`*0*`逻辑：
- en: '![Detecting fire with a sensor](graphics/B05170_03_18-1.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![使用传感器检测火灾](graphics/B05170_03_18-1.jpg)'
- en: Measuring the humidity for plants
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量植物的湿度
- en: '![Measuring the humidity for plants](graphics/B05170_03_19-1.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![测量植物的湿度](graphics/B05170_03_19-1.jpg)'
- en: 'In this section, we will see the testing of humidity inside a plant and the
    soil using a sensor:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到使用传感器测试植物和土壤中的湿度：
- en: '![Measuring the humidity for plants](graphics/B05170_03_20-1.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![测量植物的湿度](graphics/B05170_03_20-1.jpg)'
- en: 'I will now go through the main parts of this first piece of code. Then we set
    up the serial communication:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在将介绍这段代码的主要部分。然后我们设置串行通信：
- en: '[PRE28]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In the main loop, we will read the analog signal from the sensor:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在主循环中，我们将从传感器读取模拟信号：
- en: '[PRE29]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We compare the value of the sensor and display the result on the serial interface:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们比较传感器的数值，并在串行接口上显示结果：
- en: '[PRE30]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Here, the screenshot shows the results of the readings:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，截图显示了读数的结果：
- en: '![Measuring the humidity for plants](graphics/B05170_03_21-1.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![测量植物的湿度](graphics/B05170_03_21-1.jpg)'
- en: 'The following screenshot shows that the plant doesn''t require water;  because
    it has enough moisture in the soil already:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示植物不需要水；因为土壤中已经有足够的湿度：
- en: '![Measuring the humidity for plants](graphics/B05170_03_22-1.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![测量植物的湿度](graphics/B05170_03_22-1.jpg)'
- en: Measuring the level of water in a recipient
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量容器中的水位
- en: Somtimes, we need to measure the level of water in a recipient, or if you want
    to see the level of water in a tank, it is a requirement to measure the levels
    of water that it has; so in this section, we will explain how to do this.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们需要测量容器中的水位，或者如果你想看到水箱中的水位，测量它所含水量是必要的；因此，在本节中，我们将解释如何做到这一点。
- en: 'The sensor is Normally Open. When the water is over the limit, the contact
    opens, and it sends a signal to the Arduino board. We use pin number `2`, which
    is a digital input:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器通常是打开的。当水超过限制时，接点打开，并向Arduino板发送信号。我们使用数字输入的引脚号`2`：
- en: '![Measuring the level of water in a recipient](graphics/B05170_03_23-1.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![测量容器中的水位](graphics/B05170_03_23-1.jpg)'
- en: 'We declare the variables and `const` in the program:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在程序中声明变量和`const`：
- en: '[PRE31]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We also define the states of the digital signals:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还定义数字信号的状态：
- en: '[PRE32]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We configure the signals of the program, inputs, and outputs:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们配置程序的信号、输入和输出：
- en: '[PRE33]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'We read the state of the digital input:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 读取数字输入的状态：
- en: '[PRE34]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We make the comparisons for the sensor:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对传感器进行比较：
- en: '[PRE35]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'If the sensor detects a **LOW** level, the recipient is empty:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传感器检测到**低**水平，容器是空的：
- en: '[PRE36]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The following screenshot shows the result when the recipient is empty:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了容器为空时的结果：
- en: '![Measuring the level of water in a recipient](graphics/B05170_03_24-1.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![测量容器中的水位](graphics/B05170_03_24-1.jpg)'
- en: 'The water is over the limit:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 水超过限制：
- en: '![Measuring the level of water in a recipient](graphics/B05170_03_25-1.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![测量容器中的水位](graphics/B05170_03_25-1.jpg)'
- en: Measuring temperature, humidity, and light and displaying data on an LCD
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量温度、湿度和光线，并在LCD上显示数据
- en: In this section, I will teach you how to monitor temperature, humidity, and
    light detection on an LCD screen.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我将教你如何在LCD屏幕上监测温度、湿度和光线检测。
- en: Hardware and software requirements
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件和软件要求
- en: In this project, you will use an Arduino UNO board; but you can also use an
    Arduino MEGA, which also works perfectly.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将使用Arduino UNO板；但你也可以使用Arduino MEGA，它也可以完美地工作。
- en: For temperature reading,  we require a DHT11 sensor, a resistor of 4.7k, a photoresistor
    (light sensor), and a 10k resistor.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 对于温度读数，我们需要一个DHT11传感器、一个4.7k电阻、一个光敏电阻（光传感器）和一个10k电阻。
- en: 'It also requires a 16 x 2 LCD screen, where you performed the tests; I used
    an I2C communication module for the screen interfaced with Arduino card. I recommend
    using this communication since only two pins of Arduino are required for sending
    data:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要一个16 x 2的LCD屏幕，您可以在其中进行测试；我使用了一个I2C通信模块，用于与Arduino板接口的屏幕。我建议使用这种通信，因为只需要Arduino的两个引脚来发送数据：
- en: '![Hardware and software requirements](graphics/B05170_03_26-1.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![硬件和软件要求](graphics/B05170_03_26-1.jpg)'
- en: Finally, it requires a breadboard and male-male and female-male cables for connections.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它需要一个面包板和公对公和母对公的电缆进行连接。
- en: 'Here is the list of components for the project:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是项目的组件清单：
- en: Arduino UNO
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino UNO
- en: Temperature and humidity sensor DHT11
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 温湿度传感器DHT11
- en: LCD Screen 16 x 2
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LCD屏幕16 x 2
- en: Module I2C for LCD
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LCD的I2C模块
- en: A breadboard
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个面包板
- en: Cables
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电缆
- en: 'We connect the different components:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们连接不同的组件：
- en: '![Hardware and software requirements](graphics/B05170_03_27-1.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![硬件和软件要求](graphics/B05170_03_27-1.jpg)'
- en: 'Here, we can see the image of the temperature and humidityDHT11 sensor:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到温湿度DHT11传感器的图像：
- en: '![Hardware and software requirements](graphics/B05170_03_40.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![硬件和软件要求](graphics/B05170_03_40.jpg)'
- en: Then connect the pin number **1** of the **DHT11 sensor (VCC)** sensor to the
    red line on the breadboard and pin **4** (GND) to the blue line. Also, connect
    pin number **2** of the sensor to pin number **7** of the Arduino board. To end
    the DHT11 sensor, connect the resistance of 4.7k Ohms between pin number **1**
    and **2** of the sensor.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将**DHT11传感器（VCC）**的引脚号**1**连接到面包板上的红线，引脚**4**（GND）连接到蓝线。还要将传感器的引脚号**2**连接到Arduino板的引脚号**7**。最后，将4.7k欧姆的电阻连接到传感器的引脚号**1**和**2**之间。
- en: Place in series with the 10k Ohm resistance in the breadboard. Then connect
    the other end of the photoresistor to red on the breadboard and the other end
    of the resistance to the blue line (ground). Finally, connect the common pin between
    the photoresistor and resistance to the Arduino analog pin **A0**.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在面包板上串联一个10k欧姆的电阻。然后将光敏电阻的另一端连接到面包板上的红线，电阻的另一端连接到蓝线（地线）。最后，将光敏电阻和电阻之间的公共引脚连接到Arduino模拟引脚**A0**。
- en: 'Now let''s connect the LCD screen. Since we are using an LCD screen with an
    I2C interface, there are only two cables needed to connect to the signal and two
    for energy. Connect the pin of the I2C module called **VDC** to the red line on
    the breadboard and **GND** pin to the blue line on the breadboard. Then connect
    the **SDA** pin module to Arduino pin **A4,** and **A5 SCL** pin to pin the Arduino:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们连接LCD屏幕。由于我们使用的是带有I2C接口的LCD屏幕，因此只需要连接两根信号线和两根电源线。将I2C模块的引脚**VDC**连接到面包板上的红线，**GND**引脚连接到面包板上的蓝线。然后将**SDA**引脚模块连接到Arduino引脚**A4**，**A5
    SCL**引脚连接到Arduino的引脚：
- en: '![Hardware and software requirements](graphics/B05170_03_29-1.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![硬件和软件要求](graphics/B05170_03_29-1.jpg)'
- en: 'Here is an image of the project, fully assembled, so you can have an idea as
    to what the whole project will be:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这是项目的完全组装图像，这样您就可以对整个项目有一个概念：
- en: '![Hardware and software requirements](graphics/B05170_03_30-1.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![硬件和软件要求](graphics/B05170_03_30-1.jpg)'
- en: Testing sensors
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试传感器
- en: Now that the hardware project is fully assembled, we will test the different
    sensors. To do this, we will write a simple sketch in Arduino. We're just going
    to read the sensor data and print these data on the serial port.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在硬件项目已经完全组装好，我们将测试不同的传感器。为此，我们将在Arduino中编写一个简单的草图。我们只会读取传感器数据，并将这些数据打印在串行端口上。
- en: You can now either copy the code inside a file called `Testing_sensors_Temp_Hum.ino`,
    or just get the complete code from the folder for this project.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以将代码复制到名为`Testing_sensors_Temp_Hum.ino`的文件中，或者只需从此项目的文件夹中获取完整的代码。
- en: 'First we define the libraries:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们定义库：
- en: '[PRE37]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We define the type of sensor:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义传感器的类型：
- en: '[PRE38]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then we configure the serial communication:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们配置串行通信：
- en: '[PRE39]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'We read the sensor values:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们读取传感器数值：
- en: '[PRE40]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'We display the values on the serial interface:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在串行接口上显示数值：
- en: '[PRE41]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Download the code onto the Arduino board, and open the serial monitor to display
    the data sent. It is important to check the transmission speed serial port, which
    must be to 9600\. Here is what you should see:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 将代码下载到Arduino板上，并打开串行监视器以显示发送的数据。重要的是要检查串行端口的传输速度，必须为9600。您应该看到以下内容：
- en: '![Testing sensors](graphics/B05170_03_31-1.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![测试传感器](graphics/B05170_03_31-1.jpg)'
- en: Displaying data on the LCD
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在LCD上显示数据
- en: Now the next step is to integrate our information to display on the LCD screen.
    The portion of sensor readings will be the same, only detailed with regard to
    communication and to display data on the LCD. The following is the complete code
    for this part, together with an explained.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在下一步是将我们的信息集成到LCD屏幕上显示。传感器读数部分将保持不变，只是在通信和在LCD上显示数据方面进行了详细说明。以下是这部分的完整代码，以及解释。
- en: You can now either copy the code inside a file called `LCD_sensors_temp_hum.ino`,
    or just get the complete code from the folder for this project.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以将代码复制到名为`LCD_sensors_temp_hum.ino`的文件中，或者只需从此项目的文件夹中获取完整的代码。
- en: 'We include the libraries for the program:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为程序包括库：
- en: '[PRE42]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We define the LCD address for the LCD:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为LCD定义LCD地址：
- en: '[PRE43]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'We start the LCD screen:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们启动LCD屏幕：
- en: '[PRE44]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'We define the beginning of the `dht` sensor:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义`dht`传感器的开始：
- en: '[PRE45]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'We read the sensor and save the values in the variables:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 我们读取传感器并将数值保存在变量中：
- en: '[PRE46]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'We display the values on the LCD screen:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在LCD屏幕上显示数值：
- en: '[PRE47]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The next step is to download the example on the Arduino board; wait a little
    bit, and you will get display readings on the LCD. Here is an image of the project
    in action:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在Arduino板上下载示例；稍等片刻，您将在LCD上看到显示读数。以下是项目运行的图像：
- en: '![Displaying data on the LCD](graphics/B05170_03_32-1.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![在LCD上显示数据](graphics/B05170_03_32-1.jpg)'
- en: Detecting motion with a PIR sensor
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PIR传感器检测运动
- en: 'We will build a project with a common home automation sensor: a motion sensor
    (PIR). Have you ever noticed those little white plastic modules that are in the
    top corners in some rooms of the houses, the modules that change color to red
    when someone walks in front of them? That''s exactly what we will do in this project.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将建立一个带有常见家庭自动化传感器的项目：运动传感器（PIR）。你是否注意到过那些安装在房屋某些房间顶角的小白色塑料模块，当有人走过时会变成红色的模块？这正是我们这个项目要做的事情。
- en: 'The motion sensor must have three pins: two for the power supply and one for
    the signal. You should also use a 5V voltage level to be compatible with the Arduino
    card, which also operates at 5V. The following image shows a simple motion sensor:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 运动传感器必须有三个引脚：两个用于电源供应，一个用于信号。你还应该使用5V电压级别以与Arduino卡兼容，Arduino卡也是在5V下运行的。以下图片显示了一个简单的运动传感器：
- en: '![Detecting motion with a PIR sensor](graphics/B05170_03_33-1.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![使用PIR传感器检测运动](graphics/B05170_03_33-1.jpg)'
- en: For practical purposes, we will use the signal input 8 for connecting the motion
    sensor, the signal voltage of 5 volts and ground **GND.**
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 出于实际目的，我们将使用信号输入8来连接运动传感器，5伏特的信号电压和地**GND**。
- en: PIR sensor interfaced with Arduino
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PIR传感器与Arduino接口
- en: PIR sensors detect body heat (infrared energy). Passive infrared sensors are
    the most widely used motion detectors in home security systems. Once the sensor
    warms up, it can detect heat and movement in the surrounding areas, creating a
    protective grid. If a moving object blocks too many grid zones and the infrared
    energy levels change rapidly, the sensors are tripped.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: PIR传感器检测体热（红外能量）。被动红外传感器是家庭安全系统中最常用的运动检测器。一旦传感器变热，它就可以检测周围区域的热量和运动，形成一个保护网格。如果移动物体阻挡了太多的网格区域，并且红外能量水平迅速变化，传感器就会被触发。
- en: At this point, we will test the communication between the Arduino and the motion
    sensor.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们将测试Arduino和运动传感器之间的通信。
- en: 'We define the variable and the serial communication, define digital pin 8,
    input signal, read the state of the signal, and display the status signal of the
    sensor:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义变量和串行通信，定义数字引脚8，输入信号，读取信号状态，并显示传感器的状态信号：
- en: '[PRE48]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Detecting if the door is open with a reed switch
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用铁簧管检测门是否打开
- en: An example has been added as an option to implement a magnetic sensor in order
    to detect when a door or window is open or closed.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 已添加一个示例作为选项，以实现磁传感器来检测门或窗户何时打开或关闭。
- en: '![Detecting if the door is open with a reed switch](graphics/B05170_03_34-1.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: 使用铁簧管检测门是否打开
- en: The sensor outputs a `0` when it detects the magnetic field and when the field
    is far away the output would be a `1`; so you can determine when the door is open
    or closed.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器在检测到磁场时输出`0`，当磁场远离时输出为`1`；因此你可以确定门是打开还是关闭。
- en: 'The program in the Arduino is performed as follows:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino中的程序执行如下：
- en: 'We define the input signal of the sensor, and configure the serial communication:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义传感器的输入信号，并配置串行通信：
- en: '[PRE49]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'We read the state of the sensor:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们读取传感器的状态：
- en: '[PRE50]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'It compares the digital input and displays the status of the door in the serial
    interface:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 它比较数字输入并在串行接口中显示门的状态：
- en: '[PRE51]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Detecting who can get in the house with a fingerprint sensor
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用指纹传感器检测谁可以进入房屋
- en: 'In this section, we will create a project that can help us make a complete
    security system. In this project, the fingerprint access will be addressed by
    reading the fingerprint using a fingerprint sensor as shown in the following image:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个可以帮助我们建立完整安全系统的项目。在这个项目中，指纹访问将通过使用指纹传感器读取指纹来实现，如下图所示：
- en: '![Detecting who can get in the house with a fingerprint sensor](graphics/B05170_03_35-1.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![使用指纹传感器检测谁可以进入房屋](graphics/B05170_03_35-1.jpg)'
- en: In this part, we will see how to connect and configure our hardware in order
    to activate our relay.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分，我们将看到如何连接和配置我们的硬件，以便激活继电器。
- en: 'Hardware configuration:'
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件配置：
- en: As usual, we will use an Arduino Uno board as the brain of the project. The
    most important part of this project is the fingerprint sensor.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，我们将使用Arduino Uno板作为项目的大脑。这个项目最重要的部分是指纹传感器。
- en: We are first going to see how to assemble the different parts of this project.
    Let's start by connecting the power supply. Connect the **5V** pin from the Arduino
    board to the red power rail and the **GND** from Arduino to the blue power rail
    on the breadboard.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将看到如何组装这个项目的不同部分。让我们从连接电源开始。将Arduino板上的**5V**引脚连接到红色电源轨，将Arduino的**GND**连接到面包板上的蓝色电源轨。
- en: Now, let's connect the fingerprint sensor. First, connect the power by connecting
    the cables to their respective color on the breadboard. Then, connect the white
    wire from the sensor to Arduino pin 3 and the green wire to pin number 2.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们连接指纹传感器。首先，通过将电缆连接到面包板上的相应颜色来连接电源。然后，将传感器的白色线连接到Arduino引脚3，将绿色线连接到引脚2。
- en: 'After that, we are going to connect the relay module. Connect the **VCC** pin
    to the red power rail, **GND** pin to the blue power rail, and the **EN** pin
    to Arduino pin 7:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将连接继电器模块。将**VCC**引脚连接到红色电源轨，**GND**引脚连接到蓝色电源轨，将**EN**引脚连接到Arduino引脚7：
- en: '![Hardware configuration:](graphics/B05170_03_36-1.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![硬件配置：](graphics/B05170_03_36-1.jpg)'
- en: 'Save the fingerprint:'
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存指纹：
- en: The following example is presented to register the ID's fingerprints directly
    from the library `Adafruit_Fingerprint`.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例用于直接从库`Adafruit_Fingerprint`注册ID的指纹。
- en: 'Firstly, we define the libraries:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们定义库：
- en: '[PRE52]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'We define the ID of the reading and the function of the enroll process:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义读取的ID和注册过程的功能：
- en: '[PRE53]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'We define the serial communication with the device:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义与设备的串行通信：
- en: '[PRE54]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'We declare the instance of the sensor:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们声明传感器的实例：
- en: '[PRE55]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'We set up and display if the sensor is being configured:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置并显示传感器是否正在配置：
- en: '[PRE56]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'We display the sensor confirmation:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 我们显示传感器确认：
- en: '[PRE57]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'We identify the sensor if it detects:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们识别传感器是否检测到：
- en: '[PRE58]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'We display the enrolling ID:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 我们显示注册ID：
- en: '[PRE59]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The function for enrolling is as follows:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 注册的功能如下：
- en: '[PRE60]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'If the sensor successfully reads the image you see the following:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传感器成功读取图像，您将看到以下内容：
- en: '[PRE61]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: If it cannot find the fingerprint features, you see the following:Serial.println("Could
    not find fingerprint features");
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法找到指纹特征，您将看到以下内容：Serial.println("无法找到指纹特征");
- en: '[PRE62]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Remove the fingerprint sensor:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 移除指纹传感器：
- en: '[PRE63]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Image for the fingerprint sensor:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹传感器的图像：
- en: '[PRE64]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'If it is correct, you see the following:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正确，您将看到以下内容：
- en: '[PRE65]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Display the result of the sensor:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 显示传感器的结果：
- en: '[PRE66]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Testing the sensor
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试传感器
- en: 'Open the serial monitor, then type the ID number saved in the previous step:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 打开串行监视器，然后输入在上一步保存的ID号码：
- en: '![Testing the sensor](graphics/B05170_03_37-1.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![测试传感器](graphics/B05170_03_37-1.jpg)'
- en: 'The following screenshot indicates that you should put the same finger on the
    sensor again:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图表明您应该再次将同一手指放在传感器上：
- en: '![Testing the sensor](graphics/B05170_03_38-1.jpg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![测试传感器](graphics/B05170_03_38-1.jpg)'
- en: 'The following screenshot shows that the sensor responses indicates that the
    digital fingerprint has been successfully saved:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示传感器响应表明数字指纹已成功保存：
- en: '![Testing the sensor](graphics/B05170_03_39-1.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![测试传感器](graphics/B05170_03_39-1.jpg)'
- en: Summary
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw how to interact with different sensors connected to
    the Arduino board, such as flow current for energy consumption, detecting a risk
    in the home, implementing a gas sensor, implementing flow water sensor to measure
    the water volume, making a security system, and controlling access with a fingerprint
    sensor. All of these sensors can be integrate a complete system for monitoring
    and controlling everything you work on any project.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到如何与连接到Arduino板的不同传感器进行交互，例如用于能源消耗的流量电流，检测家庭风险，实施气体传感器，实施流水传感器以测量水量，制作安全系统，并使用指纹传感器控制访问。所有这些传感器都可以集成到一个完整的系统中，用于监控和控制您在任何项目上工作的一切。
- en: In the next chapter, we will see how to integrate everything for monitoring
    and controlling a complete system, and reading the sensors and actuators in a
    dashboard using your Arduino board and the Raspberry Pi Zero as a central interface.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何集成所有内容，监控和控制一个完整的系统，并在仪表板上读取Arduino板和树莓派Zero作为中央接口的传感器和执行器。
