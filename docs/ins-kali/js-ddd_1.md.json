["```js\n**$ npm install \u2013g express**\n**$ express --ejs inmatr**\n\n```", "```js\nvar Dungeon = function(cells) {\n  this.cells = cells\n  this.bookedCells = 0\n}\n```", "```js\nvar dungeons = {}\n**Dungeon.find = function(id, callback) {**\n  if(!dungeons[id]) {\n    dungeons[id] = new Dungeon(100)\n  }\n  callback(null, dungeons[id])\n}\n```", "```js\nfunction(req, res, next) {\n  req.context = req.context || {}\n  Dungeon.find('main', function(err, dungeon) {\n    req.context.dungeon = dungeon\n    next()\n  })\n}\n```", "```js\n<h1>Inmatr</h1>\n<p>You currently have <%= dungeon.free %> of\n<%= dungeon.cells %> cells available.</p>\n\n<form action=\"/cells/book\" method=\"post\">\n  <select name=\"cells\">\n    <% for(var i = 1; i < 11; i++) { %>\n    <option value=\"<%= i %>\"><%= i %></option>\n  <% } %>\n  </select>\n  <button type=\"submit\" name=\"book\" value=\"book\">\n  Book cells</button>\n  <button type=\"submit\" name=\"free\" value=\"free\">\n  Free cells</button>\n</form>\n```", "```js\napp.get('/', routes.index)\napp.post('/cells/book', routes.cells.book)\n```", "```js\nvar routes = {\n  index: function(req, res){\n    res.render('index', req.context)\n  },\n\ncells: {\n  book: function(req, res){\n    var dungeon = req.context.dungeon\n    var cells = parseInt(req.body.cells)\n    if (req.body.book) {\n    dungeon.book(cells)\n  } else {\n    dungeon.unbook(cells)\n  }\n\n      res.redirect('/')\n    }\n  }\n}\n```", "```js\nfunction Dungeon(cells) {\n  this.freeCells = cells\n}\n```", "```js\nvar dungeon = new Dungeon(100)\ndungeon.freeCells -= 5\ndungeon.freeCells += 3\n```", "```js\nDungeon.prototype.inPrison = function (number) {\n  this.freeCells -= number\n}\n\nDungeon.prototype.free = function (number) {\n  this.freeCells += number\n}\n```", "```js\nvar dungeon = new Dungeon(100)\ndungeon.inPrison(5)\ndungeon.free(3)\n```"]