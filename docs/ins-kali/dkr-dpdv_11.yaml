- en: '9: Deploying Apps with Docker Compose'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9：使用Docker Compose部署应用程序
- en: In this chapter, we’ll look at how to deploy multi-container applications using
    Docker Compose.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看看如何使用Docker Compose部署多容器应用程序。
- en: Docker Compose and Docker Stacks are very similar. In this chapter we’ll focus
    on Docker Compose, which deploys and manages multi-container applications on Docker
    nodes operating in **single-engine mode**. In a later chapter, we’ll focus on
    Docker Stacks. Stacks deploy and manage multi-container apps on Docker nodes operating
    in **Swarm mode**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Compose和Docker Stacks非常相似。在本章中，我们将专注于Docker Compose，它在**单引擎模式**下部署和管理多容器应用程序在Docker节点上运行。在后面的章节中，我们将专注于Docker
    Stacks。Stacks在**Swarm模式**下部署和管理多容器应用程序。
- en: 'We’ll split this chapter into the usual three parts:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这一章分成通常的三个部分：
- en: The TLDR
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简而言之
- en: The deep dive
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入研究
- en: The commands
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令
- en: Deploying apps with Compose - The TLDR
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Compose部署应用程序-简而言之
- en: 'Most modern apps are made of multiple smaller services that interact to form
    a useful app. We call this microservices. A simple example might be an app with
    the following four services:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代应用程序由多个较小的服务组成，这些服务相互交互形成一个有用的应用程序。我们称之为微服务。一个简单的例子可能是一个具有以下四个服务的应用程序：
- en: web front-end
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web前端
- en: ordering
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序
- en: catalog
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录
- en: back-end database
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端数据库
- en: Put all of these together, and you have a *useful application*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 把所有这些放在一起，你就有了一个*有用的应用程序*。
- en: Deploying and managing lots of services can be hard. This is where *Docker Compose*
    comes in to play.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 部署和管理大量服务可能很困难。这就是*Docker Compose*发挥作用的地方。
- en: Instead of gluing everything together with scripts and long `docker` commands,
    Docker Compose lets you describe an entire app in a single declarative configuration
    file. You then deploy it with a single command.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 与使用脚本和冗长的`docker`命令将所有内容粘合在一起不同，Docker Compose允许你在一个声明性的配置文件中描述整个应用程序。然后你可以用一个命令部署它。
- en: Once the app is *deployed*, you can *manage* its entire lifecycle with a simple
    set of commands. You can even store and manage the configuration file in a version
    control system! It’s all very grown-up :-D
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用程序被*部署*，你可以用一组简单的命令*管理*它的整个生命周期。你甚至可以将配置文件存储和管理在版本控制系统中！这一切都非常成熟 :-D
- en: That’s the basics. Let’s dig deeper.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是基础知识。让我们深入了解一下。
- en: Deploying apps with Compose - The Deep Dive
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Compose部署应用程序-深入研究
- en: 'We’ll divide the Deep Dive section as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把深入研究部分分为以下几个部分：
- en: Compose background
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compose背景
- en: Installing Compose
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Compose
- en: Compose files
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compose文件
- en: Deploying an app with Compose
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Compose部署应用程序
- en: Managing an app with Compose
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Compose管理应用程序
- en: Compose background
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Compose背景
- en: In the beginning was *Fig*. Fig was a powerful tool, created by a company called
    *Orchard*, and it was the best way to manage multi-container Docker apps. It was
    a Python tool that sat on top of Docker, and allowed you to define entire multi-container
    apps in a single YAML file. You could then deploy the app with the `fig` command-line
    tool. Fig could even manage the entire life-cycle of the app.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始是*Fig*。Fig是一个强大的工具，由一个叫做*Orchard*的公司创建，它是管理多容器Docker应用程序的最佳方式。它是一个Python工具，位于Docker之上，允许你在一个单独的YAML文件中定义整个多容器应用程序。然后你可以用`fig`命令行工具部署应用程序。Fig甚至可以管理整个应用程序的生命周期。
- en: Behind the scenes, Fig would read the YAML file and deploy and manage the app
    via the Docker API. It was a good thing!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，Fig会读取YAML文件，并通过Docker API部署和管理应用程序。这是一件好事！
- en: In fact, it was so good, that in 2014, Docker, Inc. acquired Orchard and re-branded
    Fig as *Docker Compose*. The command-line tool was renamed from `fig` to `docker-compose`,
    and ever since the acquisition, it’s been an external tool that gets bolted on
    top of the Docker Engine. Even though it’s never been fully integrated into the
    Docker Engine, it’s always been immensely popular and very widely used.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，2014年，Docker公司收购了Orchard并将Fig重新命名为*Docker Compose*。命令行工具从`fig`改名为`docker-compose`，自收购以来，它一直是一个外部工具，可以附加到Docker
    Engine上。尽管它从未完全集成到Docker Engine中，但它一直非常受欢迎并被广泛使用。
- en: As things stand today, Compose is still an external Python binary that you have
    to install on a host running the Docker Engine. You define multi-container (multi-service)
    apps in a YAML file, pass the YAML file to the `docker-compose` binary, and Compose
    deploys it via the Docker Engine API.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 就目前而言，Compose仍然是一个外部的Python二进制文件，您必须在运行Docker Engine的主机上安装它。您可以在YAML文件中定义多容器（多服务）应用程序，将YAML文件传递给`docker-compose`二进制文件，然后Compose通过Docker
    Engine API部署它。
- en: Time to see it in action.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候看它的表现了。
- en: Installing Compose
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装Compose
- en: Docker Compose is available on multiple platforms. In this section we’ll demonstrate
    *some* of the ways to install it on Windows, Mac, and Linux. More installation
    methods exist, but the ones we show here will get you started.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Compose在多个平台上都可用。在本节中，我们将演示在Windows、Mac和Linux上安装它的*一些*方法。还有更多的安装方法，但我们在这里展示的方法可以让您开始。
- en: Installing Compose on Windows 10
  id: totrans-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在Windows 10上安装Compose
- en: The recommended way to run Docker on Windows 10 is *Docker for Windows (DfW)*.
    Docker Compose is included as part of the standard DfW installation. So if you’ve
    got DfW, you’ve got Docker Compose.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows 10上运行Docker的推荐方式是*Docker for Windows (DfW)*。Docker Compose包含在标准的DfW安装中。因此，如果您安装了DfW，您就有了Docker
    Compose。
- en: Use the following command to check that Compose is installed. You can run this
    command from a PowerShell or CMD terminal.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令检查是否已安装Compose。您可以从PowerShell或CMD终端运行此命令。
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`See **Chapter 3: Installing Docker** if you need more information on installing
    *Docker for Windows* on Windows 10.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要有关在Windows 10上安装*Docker for Windows*的更多信息，请参阅**第3章：安装Docker**。
- en: Installing Compose on Mac
  id: totrans-38
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在Mac上安装Compose
- en: As with Windows 10, Docker Compose is installed as part of *Docker for Mac (DfM)*.
    So if you have DfM, you have Docker Compose.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 与Windows 10一样，Docker Compose作为*Docker for Mac (DfM)*的一部分安装。因此，如果您安装了DfM，您就有了Docker
    Compose。
- en: Run the following command from a terminal window to verify you have Docker Compose.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从终端窗口运行以下命令以验证您是否安装了Docker Compose。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`See **Chapter 3: Installing Docker** if you need more information on installing
    *Docker for Mac*.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要有关在Mac上安装*Docker for Mac*的更多信息，请参阅**第3章：安装Docker**。
- en: Installing Compose on Windows Server
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在Windows Server上安装Compose
- en: Docker Compose is installed on Windows Server as a separate binary. To use it,
    you will need an up-to-date working installation of Docker on your Windows Server.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Compose作为一个独立的二进制文件安装在Windows Server上。要使用它，您需要在Windows Server上安装最新的Docker。
- en: Type the following command into a PowerShell terminal to install Docker Compose.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在PowerShell终端中键入以下命令以安装Docker Compose。
- en: For readability, the command uses backticks (`) to escape carriage returns and
    wrap the command over multiple lines.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可读性，该命令使用反引号（`）来转义回车并将命令包装在多行上。
- en: 'The following commands installs version `1.18.0` of Docker Compose. You can
    install any version listed here: https://github.com/docker/compose/releases. Just
    replace the `1.18.0` in the URL with the version you want to install.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令安装了Docker Compose的`1.18.0`版本。您可以安装此处列出的任何版本：https://github.com/docker/compose/releases。只需用您想要安装的版本替换URL中的`1.18.0`。
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`Use the `docker-compose --version` command to verify the installation.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`docker-compose --version`命令验证安装。
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`Compose is now installed. As long as your Windows Server machine has an up-to-date
    installation of the Docker Engine, you’re ready to go.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Compose现在已安装。只要您的Windows Server机器安装了最新版本的Docker Engine，您就可以开始了。
- en: Installing Compose on Linux
  id: totrans-52
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在Linux上安装Compose
- en: Installing Docker Compose on Linux is a two-step process. First, you download
    the binary using the `curl` command. Then you make it executable using `chmod`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上安装Docker Compose是一个两步过程。首先，您使用`curl`命令下载二进制文件。然后使用`chmod`使其可执行。
- en: For Docker Compose to work on Linux, you’ll need a working version of the Docker
    Engine.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要使Docker Compose在Linux上工作，您需要一个可用的Docker Engine版本。
- en: The following command will download version `1.18.0` of Docker Compose and copy
    it to `/usr/bin/local`. You can check the releases page on [GitHub](https://github.com/docker/compose/releases)
    for the latest version and replace the `1.18.0` in the URL with the version you
    want to install.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将下载Docker Compose的版本`1.18.0`并将其复制到`/usr/bin/local`。您可以在[GitHub](https://github.com/docker/compose/releases)的发布页面上检查最新版本，并将URL中的`1.18.0`替换为您想要安装的版本。
- en: The command may wrap over multiple lines in the book. If you run the command
    on a single line you will need to remove any backslashes (`\`).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令可能会在书中跨越多行。如果您在一行上运行该命令，您需要删除任何反斜杠（`\`）。
- en: '[PRE4]``\`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4]```'
- en: '`uname` `-``s[PRE5]uname` `-``m[PRE6][PRE7]`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`uname` `-``s[PRE5]uname` `-``m[PRE6][PRE7]`'
