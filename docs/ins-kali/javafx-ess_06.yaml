- en: Chapter 6. Running JavaFX Applications on the Raspberry Pi
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 在树莓派上运行JavaFX应用程序
- en: 'Welcome to the **IoT** (**Internet of Things**) world. There is no doubt that
    you hear this term around all the time. IoT has become a hot topic of late, and
    for good reason too. Some estimates put the number of connected small devices
    somewhere around 9 billion currently; it''s projected to jump to 24 billion devices
    by 2020\. While the projections vary, the assessment really doesn''t: in terms
    of sheer numbers, the IoT is going to dwarf any computing models ever seen.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到**物联网**（**Internet of Things**）世界。毫无疑问，你总是听到这个术语。物联网最近成为一个热门话题，也是有充分理由的。一些估计将当前连接的小型设备数量约为90亿台；预计到2020年将跃升至240亿台。尽管预测各不相同，但评估确实如此：就数量而言，物联网将超越以往任何计算模型。
- en: Very closely related to the IoT world, we have the Raspberry Pi—a credit card-sized
    microcomputer designed by the Raspberry Pi Foundation for experimentation and
    education.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与物联网世界密切相关的是树莓派——由树莓派基金会设计的一款信用卡大小的微型计算机，用于实验和教育。
- en: What you should know about the Raspberry Pi is that it is nothing but a small
    computer. Small power requirements, small physical size, small memory, and most
    importantly a low-cost device. Everything about it is small, but it is still just
    a computer and it uses Linux.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 关于树莓派，你应该知道的是它只是一台小型计算机。小功率需求，小物理尺寸，小内存，最重要的是低成本设备。关于它的一切都很小，但它仍然只是一台计算机，它使用Linux。
- en: 'Java was made for IoT from the first day of its invention. Java was created
    with a clear vision in mind: to control small devices such as television set-top
    boxes. With the explosion of IoT, Java returns to its roots.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Java从诞生的第一天起就是为物联网而生的。Java的创造是有着明确的愿景：控制电视机顶盒等小型设备。随着物联网的爆发，Java回归到了它的根基。
- en: 'You may think that JavaFX, a platform for rich-client development, would miss
    the IoT party—but it is not so! According to the *JavaFX Overview* page on the
    Oracle Technology Network:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会认为JavaFX，一个用于丰富客户端开发的平台，会错过物联网的盛会——但事实并非如此！根据Oracle技术网络上的*JavaFX概述*页面：
- en: '*"It is designed to provide a lightweight, hardware-accelerated Java UI platform"*'
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"它旨在提供一个轻量级、硬件加速的Java UI平台"*'
- en: 'This statement holds the key to graphically rich-and-powerful JavaFX: hardware
    acceleration and; luckily, the Raspberry Pi comes with a powerful GPU.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这个声明揭示了图形丰富和强大的JavaFX的关键：硬件加速；幸运的是，树莓派配备了强大的GPU。
- en: 'In this chapter, we will learn about:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将学习关于：
- en: Buying, preparing, and configuring the Raspberry Pi
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 购买、准备和配置树莓派
- en: Preparing the Raspberry Pi for JavaFX 8
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为JavaFX 8准备树莓派
- en: Connecting to the Raspberry Pi remotely
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程连接到树莓派
- en: Installing and configuring Java SE 8 on the Raspberry Pi
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在树莓派上安装和配置Java SE 8
- en: Developing and running JavaFX 8 applications on the Raspberry Pi
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在树莓派上开发和运行JavaFX 8应用程序
- en: Using NetBeans with the Raspberry Pi
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NetBeans与树莓派
- en: Excited? Need to have fun! Right, let's dive straight in and play with our Raspberry
    Pi.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 激动吗？需要玩得开心！好的，让我们直接开始玩我们的树莓派吧。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since the release of JDK 8u33 for ARM version on January 2015, Oracle has removed
    JavaFX Embedded from the ARM distribution. See [http://www.oracle.com/technetwork/java/javase/jdk-8u33-arm-relnotes-2406696.html#CACHGFJC](http://www.oracle.com/technetwork/java/javase/jdk-8u33-arm-relnotes-2406696.html#CACHGFJC)
    and [http://jaxenter.com/jdk-arm-without-javafx-end-javafx-embedded-114212.html](http://jaxenter.com/jdk-arm-without-javafx-end-javafx-embedded-114212.html).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 自2015年1月发布ARM版本的JDK 8u33以来，Oracle已经从ARM发行版中移除了JavaFX嵌入式。请参阅[http://www.oracle.com/technetwork/java/javase/jdk-8u33-arm-relnotes-2406696.html#CACHGFJC](http://www.oracle.com/technetwork/java/javase/jdk-8u33-arm-relnotes-2406696.html#CACHGFJC)和[http://jaxenter.com/jdk-arm-without-javafx-end-javafx-embedded-114212.html](http://jaxenter.com/jdk-arm-without-javafx-end-javafx-embedded-114212.html)。
- en: Code for JavaFX Embedded has been given to the open source project OpenJFX ([https://wiki.openjdk.java.net/display/OpenJFX/Main](https://wiki.openjdk.java.net/display/OpenJFX/Main)).
    It is recommended that developers who are looking for alternatives to JavaFX Embedded
    come out and contribute to the project.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: JavaFX嵌入式的代码已经提供给了开源项目OpenJFX（[https://wiki.openjdk.java.net/display/OpenJFX/Main](https://wiki.openjdk.java.net/display/OpenJFX/Main)）。建议寻找JavaFX嵌入式替代方案的开发人员加入并为该项目做出贡献。
- en: In this chapter, we will learn a few ways to overcome this problem.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将学习一些克服这个问题的方法。
- en: What is the Raspberry Pi?
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是树莓派？
- en: As we mentioned previously, the Raspberry Pi is a computer a very small and
    low-cost computer. In fact, it is roughly the size of a credit card. Do not be
    fooled by its size; as we know, good things come in small packages. However, the
    Raspberry Pi does not come in a package at all.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，树莓派是一台非常小型和低成本的计算机。事实上，它大约是信用卡大小。不要被它的大小所欺骗；正如我们所知，好东西都是包装在小盒子里的。然而，树莓派根本没有包装。
- en: It does not come in a case and its circuit board and chips are fully visible,
    as you can see in the following image. You can plug a Raspberry Pi into a digital
    TV or monitor and use a USB keyboard and mouse with it, making it very easy to
    use. Because of its small size, you can easily transport it anywhere.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 它没有外壳，其电路板和芯片完全可见，如下图所示。你可以将树莓派插入数字电视或显示器，并使用USB键盘和鼠标，非常容易使用。由于其小巧的尺寸，你可以轻松地将它带到任何地方。
- en: The Raspberry Pi is a capable device that allows people of all ages to explore
    computing, and to learn how to program in languages such as Java, JavaFX, Python,
    and Scratch. In addition, it will do everything a desktop computer can do—from
    browsing the Internet and playing high-definition videos or games to working with
    spreadsheets or word processing software.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派是一台功能强大的设备，可以让各个年龄段的人探索计算，并学习如何使用Java、JavaFX、Python和Scratch等语言进行编程。此外，它可以做任何台式电脑可以做的事情——从浏览互联网和播放高清视频或游戏到处理电子表格或文字处理软件。
- en: '![What is the Raspberry Pi?](img/B03998_06_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![什么是树莓派？](img/B03998_06_01.jpg)'
- en: The new Raspberry Pi 2 model B
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 新的树莓派2型B
- en: What can you do with it?
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你可以用它做什么？
- en: The Raspberry Pi gives you the opportunity to build and control a device that
    does what you want it to do. For example, you can deploy your very own robot arm,
    controlled by a program that you have written. You can design and create your
    own role-playing game, or produce beautiful computer art or music—all by using
    code.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派为您提供了构建和控制设备的机会，使其按照您的意愿进行操作。例如，您可以部署自己的机器人手臂，由您编写的程序控制。您可以设计和创建自己的角色扮演游戏，或者通过编写代码制作美丽的计算机艺术或音乐。
- en: Moreover, the Raspberry Pi Foundation's main aim is to make it fun for kids
    all over the world to learn to program and understand how computers work.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，树莓派基金会的主要目标是让全世界的孩子们学会编程并了解计算机的工作原理，让学习变得有趣。
- en: Why is the Raspberry Pi a perfect fit for JavaFX?
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么树莓派是JavaFX的完美选择？
- en: 'So what makes the Raspberry Pi such a perfect fit for Java and JavaFX? The
    answer can be found in the following points:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，树莓派为何如此适合Java和JavaFX？答案可以从以下几点中找到：
- en: It is faster than the specifications seem to indicate. As noted, the default
    clock speed for the Pi is 900 MHz. But with its 900 MHz clock speed that can be
    safely overclocked to 1 GHz and its 1 GB RAM, this small computer can run really
    bigger and powerful applications.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它比规格表所显示的要快。正如所述，树莓派的默认时钟速度为900 MHz。但是，凭借其900 MHz的时钟速度，可以安全地超频到1 GHz以及1GB的RAM，这台小型计算机可以运行更大更强大的应用程序。
- en: Very wisely, the Foundation chose a CPU with floating-point support, often referred
    to as hard float, which offers greater performance than so-called soft float-only
    chips. Operating systems available for the Pi take advantage of that extra power
    and speed.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常明智地，基金会选择了一个带有浮点支持的CPU，通常被称为硬浮点，它比所谓的仅支持软浮点的芯片具有更高的性能。树莓派可用的操作系统利用了这种额外的功率和速度。
- en: Finally, the Pi has a fairly beefy Graphics Processing Unit (GPU) with a fast
    3D core that is capable of BluRay quality playback, using H.264 at 40MBits/s ([https://www.raspberrypi.org/help/faqs/#generalSoCUsed](https://www.raspberrypi.org/help/faqs/#generalSoCUsed)).
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，树莓派具有相当强大的图形处理单元（GPU），具有快速的3D核心，能够以40MBits/s的速度使用H.264进行蓝光质量的播放（[https://www.raspberrypi.org/help/faqs/#generalSoCUsed](https://www.raspberrypi.org/help/faqs/#generalSoCUsed)）。
- en: Which module should you buy?
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您应该购买哪个模块？
- en: 'At the time of writing, there are five models of the Raspberry Pi: A, A+, B,
    B+, and since February 2015 the new model Pi 2 model B. Here is a comparison between
    the versions A+ and 2 B.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，树莓派有五个型号：A，A+，B，B+，以及自2015年2月以来的新型号Pi 2 B型号。以下是A+和2B型号之间的比较。
- en: '| Model A+ | Model 2 B |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| A+型号 | 2B型号 |'
- en: '| --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Costs ~$25 | Costs ~$35 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 成本约25美元 | 成本约35美元 |'
- en: '| One USB port | Four USB ports |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 一个USB端口 | 四个USB端口 |'
- en: '| No Ethernet | Standard Ethernet connection |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 没有以太网 | 标准以太网连接 |'
- en: '| 256 MB RAM | 1 GB RAM |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 256MB RAM | 1GB RAM |'
- en: The model A+ is cheaper, but only has one USB port and no Ethernet connection.
    This may not be a problem. If you connect a powered USB hub to the Model A+ and
    then employ a USB-to-WiFi adapter, you have all the networking capabilities of
    Model B+. One main difference between the two models is the amount of RAM. Model
    A+ has 256 MB of RAM. The model B+ has a 512 MB RAM and 2 B has a 1 GB RAM. This
    is not upgradable on either model.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: A+型号更便宜，但只有一个USB端口和没有以太网连接。这可能不是问题。如果您将一个带电源的USB集线器连接到A+型号，然后使用USB到WiFi适配器，您就拥有了B+型号的所有网络功能。两个型号之间的一个主要区别是RAM的数量。A+型号有256MB的RAM。B+型号有512MB的RAM，2B型号有1GB的RAM。这两个型号都无法升级。
- en: All Raspberry Pi microcomputers come with a slot for an SD memory card, audio
    out-jack, video ports for RCA and HDMI, and a row of pins for general purpose
    input and output. There are two additional connectors for display and a camera,
    but both require highly specialized hardware. Given a small price difference,
    typically $10 to $25, I recommend getting the model 2 B to start with. If you
    are purchasing more than one for, say, a classroom, the model A+ may be sufficient.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 所有树莓派微型计算机都配备了一个SD存储卡插槽，音频输出插孔，RCA和HDMI的视频端口，以及一排用于通用输入和输出的引脚。还有两个用于显示和摄像头的附加连接器，但两者都需要高度专门化的硬件。鉴于价格上的小差异，通常为10到25美元，我建议首先购买2B型号。如果您要购买多个，比如用于教室，A+型号可能就足够了。
- en: 'You can buy a kit with all you need to start from any online store for no more
    than $100, and it would include:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从任何在线商店购买一个包含所有所需物品的套件，价格不会超过100美元，其中包括：
- en: The new Raspberry Pi 2 (RPi2) quad-core 900 MHz 1GB RAM and CanaKit WiFi adapter
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的树莓派2（RPi2）四核900 MHz 1GB RAM和CanaKit WiFi适配器
- en: Premium-quality 6-foot HDMI cable, GPIO to breadboard interface board, ribbon
    cable, breadboard, jumper wires, GPIO Quick Reference Card, and Resistor Colors
    Quick Reference Card
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高品质的6英尺HDMI电缆，GPIO到面包板接口板，排线，面包板，跳线，GPIO快速参考卡和电阻颜色快速参考卡
- en: 8 GB Samsung MicroSD card (a Raspberry Pi Foundation-recommended MicroSD card
    preloaded with NOOBS), a high-quality Raspberry Pi 2 case, and heat sink
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8GB三星MicroSD卡（树莓派基金会推荐的预装有NOOBS的MicroSD卡），高质量的树莓派2外壳和散热片
- en: RGB LED, 8 LEDs (blue/red/yellow/green), 15 resistors, 2 push button switches,
    and General Guide for Beginners to Electronic Components
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RGB LED，8个LED（蓝色/红色/黄色/绿色），15个电阻，2个按钮开关，以及初学者电子元件通用指南
- en: 2.5A USB power supply with 5-foot micro USB cable specially designed for the
    Raspberry Pi 2 (UL listed)
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2.5A USB电源适配器，带5英尺的micro USB电缆，专为树莓派2设计（UL认证）
- en: '![Which module should you buy?](img/B03998_06_02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![您应该购买哪个模块？](img/B03998_06_02.jpg)'
- en: Typical kit components for a Raspberry Pi B Model 2
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派B型2的典型套件组件
- en: Buying the Raspberry Pi
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 购买树莓派
- en: The Raspberry Pi Foundation in the United Kingdom makes the Raspberry Pi. Unfortunately,
    it has a history of being back-ordered. Fortunately, you can buy from several
    vendors and a few of them are listed on the main page of [https://www.raspberrypi.org/](https://www.raspberrypi.org/).
    You can also buy it from [http://www.amazon.com](http://www.amazon.com), although
    you will have to pay a bit more. Prices vary from what you will see here.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 英国的树莓派基金会制造了树莓派。不幸的是，它有一段时间的缺货历史。幸运的是，您可以从几家供应商那里购买，其中一些列在[https://www.raspberrypi.org/](https://www.raspberrypi.org/)的主页上。您也可以从[http://www.amazon.com](http://www.amazon.com)购买，尽管价格会稍高一些。价格会有所不同。
- en: Finally, check out [http://www.adafruit.com](http://www.adafruit.com). They
    are reasonably priced and also carry some useful accessories that you will need
    in your future projects. In these stores you can also find starter kits including
    the Raspberry Pi and the necessary components to start.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，查看[http://www.adafruit.com](http://www.adafruit.com)。它们价格合理，还提供一些您未来项目中需要的有用配件。在这些商店中，您还可以找到包括树莓派和启动所需组件的入门套件。
- en: Related websites and documentation
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关网站和文档
- en: The Internet contains a wealth of information about the Raspberry Pi. As you
    work on more advanced topics, you will find it helpful to know where to find answers.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上有大量关于树莓派的信息。当您研究更高级的主题时，知道在哪里找到答案将会很有帮助。
- en: The official website for the Raspberry Pi Foundation is [http://www.rasberrypi.org](http://www.rasberrypi.org).
    It lists sources from which to purchase the Raspberry Pi microcomputer. It has
    a variety of tutorials and helpful forums.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派基金会的官方网站是[http://www.rasberrypi.org](http://www.rasberrypi.org)。它列出了购买树莓派微型计算机的来源。它有各种教程和有用的论坛。
- en: For more information about the version of Linux running on the Raspberry Pi,
    visit [http://elinux.org/index.php?title=RPi_Hub&redirect=no](http://elinux.org/index.php?title=RPi_Hub&redirect=no).
    There is information about the general-purpose and input/output pins; Raspbian
    Wheezy, the version of Linux designed for the Raspberry Pi; and sample projects.
    You will also find information about other embedded systems, such as the **Minnow
    board** and **BeagleBoard**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有关树莓派上运行的Linux版本的更多信息，请访问[http://elinux.org/index.php?title=RPi_Hub&redirect=no](http://elinux.org/index.php?title=RPi_Hub&redirect=no)。这里有关于通用和输入/输出引脚的信息；Raspbian
    Wheezy，专为树莓派设计的Linux版本；以及示例项目的信息。您还会找到有关其他嵌入式系统的信息，如**Minnow board**和**BeagleBoard**。
- en: Neil Black has created a stellar beginner's guide to the Raspberry Pi and deserves
    a round of applause. Please visit [http://neil-black.co.uk/the-updated-raspberry-pi-beginners-guide](http://neil-black.co.uk/the-updated-raspberry-pi-beginners-guide)
    if you ever find yourself confused during the setup process.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Neil Black创建了一份出色的树莓派初学者指南，值得一致好评。如果在设置过程中感到困惑，请访问[http://neil-black.co.uk/the-updated-raspberry-pi-beginners-guide](http://neil-black.co.uk/the-updated-raspberry-pi-beginners-guide)。
- en: Finally, visit [http://www.adafruit.com](http://www.adafruit.com) to buy the
    Raspberry Pi as well as power supplies, motor control boards, and experimentation
    kits. If you cannot buy parts locally, this group is an excellent place to purchase
    accessories and other components.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，访问[http://www.adafruit.com](http://www.adafruit.com)购买树莓派以及电源适配器、电机控制板和实验套件。如果您无法在当地购买零件，这个网站是购买配件和其他组件的绝佳地方。
- en: Preparing the Raspberry Pi for JavaFX 8
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为JavaFX 8准备树莓派
- en: Your Raspberry Pi will do nothing without an operating system, which is loaded
    from the SD Card. We need a way to interact with it by first installing the supported
    operating system, which in our case is Raspbian Wheezy; all official supported
    operating systems for the Pi are listed and can be downloaded from the link [http://www.raspberrypi.org/downloads/](http://www.raspberrypi.org/downloads/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 没有操作系统，您的树莓派将无法运行，操作系统是从SD卡加载的。我们需要一种方法来与之交互，首先安装支持的操作系统，我们的情况下是Raspbian Wheezy；所有Pi的官方支持操作系统都在链接[http://www.raspberrypi.org/downloads/](http://www.raspberrypi.org/downloads)上列出并可从中下载。
- en: Then, we will configure the network settings for our Pi to connect it remotely.
    Finally, we will check the Java SE 8 version installed by default and proceed
    to check for updates, if not prepackaged with OS already.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将配置我们的Pi的网络设置，以便远程连接。最后，我们将检查默认安装的Java SE 8版本，并继续检查更新，如果操作系统没有预先打包。
- en: As mentioned before, the last update doesn't include JavaFX so we will find
    a way to add it. Let's start preparing our SD card to install the Raspbian Wheezy
    operating system and have the Raspberry Pi up and running.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，最新更新不包括JavaFX，因此我们将找到一种方法来添加它。让我们开始准备我们的SD卡，安装Raspbian Wheezy操作系统，让树莓派运行起来。
- en: Creating a bootable SD card
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建可启动的SD卡
- en: 'Now, we are going to prepare our SD card with the Raspbian Wheezy OS, which
    will allow us to interact with our Raspberry Pi. This is a very important step.
    There are two ways to do this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将准备我们的SD卡，安装Raspbian Wheezy操作系统，这将允许我们与我们的树莓派进行交互。这是一个非常重要的步骤。有两种方法可以做到这一点：
- en: Using NOOBS
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用NOOBS
- en: NOOBS is an easy operating system installer that contains Raspbian. But the
    lite version doesn't bundle a Raspbian. It also provides a selection of alternative
    operating systems, which are then downloaded from the Internet and installed.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: NOOBS是一个简单的操作系统安装程序，其中包含Raspbian。但是精简版不包含Raspbian。它还提供了一系列备选操作系统，然后从互联网上下载并安装。
- en: Beginners should start with the NOOBS method, but it requires an Internet connection
    with good speed to download the preferred OS.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 初学者应该从NOOBS方法开始，但它需要一个速度良好的互联网连接来下载首选操作系统。
- en: If you have bought a kit that comes with a preinstalled NOOBS SD card, you can
    skip to the next step. Alternatively, if you need an SD card, you can order one
    from the Swag store at [http://swag.raspberrypi.org/products/noobs-8gb-sd-card](http://swag.raspberrypi.org/products/noobs-8gb-sd-card)
    or even download and set it up to your SD card yourself. All steps are provided
    at the link [http://www.raspberrypi.org/help/noobs-setup/](http://www.raspberrypi.org/help/noobs-setup/).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你购买的套件配有预装的NOOBS SD卡，你可以跳到下一步。或者，如果你需要一个SD卡，你可以从Swag商店[http://swag.raspberrypi.org/products/noobs-8gb-sd-card](http://swag.raspberrypi.org/products/noobs-8gb-sd-card)订购，甚至自己下载并设置到你的SD卡上。所有步骤都在链接[http://www.raspberrypi.org/help/noobs-setup/](http://www.raspberrypi.org/help/noobs-setup/)中提供。
- en: 'Burning Raspbian Wheezy OS to your SD card:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 将Raspbian Wheezy操作系统烧录到你的SD卡：
- en: 'This is my favorite setup as I have already downloaded the OS and will burn
    it directly to my SD card; here are the steps to do it from Mac OS X (make sure
    you have a valid SD card, with 4/8/16 GB memory and of class 10):'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我最喜欢的设置，因为我已经下载了操作系统，将直接将其烧录到我的SD卡上；以下是在Mac OS X上执行此操作的步骤（确保你有一个有效的SD卡，容量为4/8/16GB，等级为10）：
- en: We need to have our SD card formatted in FAT32\. We will do this easily with
    SD Formatter 4.0 for either Windows or Mac, which is available for download from
    the SD Association's site at [https://www.sdcard.org/downloads/formatter_4/eula_mac/index.html](https://www.sdcard.org/downloads/formatter_4/eula_mac/index.html).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将SD卡格式化为FAT32。我们可以使用SD Formatter 4.0轻松实现这一点，它适用于Windows或Mac，可以从SD协会的网站[https://www.sdcard.org/downloads/formatter_4/eula_mac/index.html](https://www.sdcard.org/downloads/formatter_4/eula_mac/index.html)下载。
- en: 'Follow the instructions to install the software package:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 按照安装软件包的说明进行操作：
- en: Insert your SD card into the computer or laptop's SD card reader and *make a
    note of the drive letter* allocated to it—for example, `/disk2` in my case.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的SD卡插入计算机或笔记本电脑的SD卡读卡器，并*记下*分配给它的驱动器号—例如，在我的情况下是`/disk2`。
- en: In **SDFormatter**, select the drive letter for your SD card, go to **Format
    Option** and select **Overwrite format**, name it `RaspWheezy` (optional), and
    click on **Format**. It may take a while to format the SD depending on the size
    of the card.![Using NOOBS](img/B03998_06_03.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**SDFormatter**中，选择你的SD卡的驱动器号，转到**格式选项**并选择**覆盖格式**，命名为`RaspWheezy`（可选），然后点击**格式化**。根据卡的大小，格式化SD可能需要一些时间。![使用NOOBS](img/B03998_06_03.jpg)
- en: Formatting SD card with SDFormatter application
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SDFormatter应用程序格式化SD卡
- en: 'Once the format is completed, close SDFormatter. If you are on Mac or Linux,
    run the following command line from your terminal to check the disk letter and
    format type:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 格式化完成后，关闭SDFormatter。如果你在Mac或Linux上，从终端运行以下命令行来检查磁盘号和格式类型：
- en: '[PRE0]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this case, the SD card is `/dev/disk2`, with the `DOS_FAT_32` format type
    and `RASPWHEEZY` as the name. On Windows. Open Windows Explorer and check the
    drive.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，SD卡是`/dev/disk2`，格式类型为`DOS_FAT_32`，名称为`RASPWHEEZY`。在Windows上，打开Windows资源管理器并检查驱动器。
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Do not get this wrong, or you may destroy all the data on the wrong `disk/card/drive`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 不要搞错了，否则可能会破坏错误的`磁盘/卡/驱动器`上的所有数据。
- en: Download Raspbian Wheezy OS from the link [http://downloads.raspberrypi.org/raspbian_latest](http://downloads.raspberrypi.org/raspbian_latest),
    unzip it, and you should have the `2015-02-16-raspbian-wheezy.img` file.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从链接[http://downloads.raspberrypi.org/raspbian_latest](http://downloads.raspberrypi.org/raspbian_latest)下载Raspbian
    Wheezy操作系统，解压缩，你应该会得到`2015-02-16-raspbian-wheezy.img`文件。
- en: 'From the command line on Mac or Linux, unmount the disk but don''t eject:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Mac或Linux的命令行上，卸载磁盘但不要弹出：
- en: '[PRE1]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then write the image to the SD card with the `dd` command line:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后使用`dd`命令将镜像写入SD卡：
- en: '[PRE2]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once you have typed your password, the writing process begins and you have to
    wait till you get the prompt again. As this will take a few minutes, on Windows,
    you can use Win32DiskImager (It can be downloaded from [http://www.raspberry-projects.com/pi/pi-operating-systems/win32diskimager](http://www.raspberry-projects.com/pi/pi-operating-systems/win32diskimager)).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密码后，写入过程开始，你需要等待直到再次获得提示。由于这将需要几分钟，在Windows上，你可以使用Win32DiskImager（可以从[http://www.raspberry-projects.com/pi/pi-operating-systems/win32diskimager](http://www.raspberry-projects.com/pi/pi-operating-systems/win32diskimager)下载）。
- en: 'After the `dd` command finishes, eject the card:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`dd`命令完成后，弹出卡：'
- en: '[PRE3]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that `dd` will not feedback any information until there is an error or
    it is finished; information will be shown and the disk will remount when complete.
    However, if you wish to view the progress, you can use the *Ctrl* + *T* shortcut.
    This generates **SIGINFO**, the status argument of your `tty`, and will display
    information about the process.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`dd`在没有错误或完成之前不会反馈任何信息；完成后将显示信息并重新挂载磁盘。但是，如果你希望查看进度，可以使用*Ctrl* + *T*快捷键。这会生成**SIGINFO**，你的`tty`的状态参数，并显示有关该进程的信息。
- en: Congratulations, now mount your SD card to the Raspberry Pi and connect it to
    a proper monitor to start it up.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，现在将你的SD卡安装到树莓派上，并连接到合适的显示器上启动它。
- en: Configuring the Raspberry Pi
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置树莓派
- en: 'Now, we need to set up the Pi for the first booting time and also configure
    a static IP in order to connect to it from our laptop and remotely:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要为第一次启动设置Pi，并配置一个静态IP以便从我们的笔记本电脑和远程连接到它：
- en: Mount the SD card we prepared previously.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 挂载我们之前准备好的SD卡。
- en: Plug in your keyboard, mouse, and monitor cables.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接键盘、鼠标和显示器电缆。
- en: Plug your WiFi Adapter into one of the USB ports.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将WiFi适配器插入其中一个USB端口。
- en: Now, plug in the power cable to your Pi.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将电源线插入Pi。
- en: You should see some verbose output on the screen booting up the Raspbian OS.
    Proceed boldly and with no fear.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该在屏幕上看到一些详细的输出，启动Raspbian操作系统。大胆前行，毫无畏惧。
- en: On the first boot, the Raspberry Pi configuration screen will show up and will
    gave you a series of options that you can use to configure your Raspberry Pi.
    Basically, you will want to set up your time-zone and own locale configuration.
    Review the settings of memory split between CPU and GPU, or enable SSH. But for
    the most part, you can simply ignore them, move to the last step with the arrow
    keys, and hit Return.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一次启动时，树莓派配置屏幕将显示，并为你提供一系列选项，你可以用它们来配置你的树莓派。基本上，你会想要设置你的时区和本地配置。查看在CPU和GPU之间的内存分配设置，或者启用SSH。但在大部分情况下，你可以简单地忽略它们，用箭头键移动到最后一步，然后按回车键。
- en: If you selected something you don't like during the configuration process, you
    can restart the configuration by typing from the console `sudo raspi-config`.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在配置过程中选择了你不喜欢的东西，你可以通过在控制台中输入`sudo raspi-config`来重新启动配置。
- en: If the Raspberry Pi was correctly configured, you'll see a series of Linux boot
    messages scroll by followed by a request to log in. The default user log in is
    `pi` and the password is `raspberry`. Now, you'll be presented with a standard
    Linux prop. Congratulations, your Raspberry Pi is up-and-running.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果树莓派配置正确，你会看到一系列Linux启动消息滚动，然后会出现一个登录请求。默认用户登录是`pi`，密码是`raspberry`。现在，你将看到一个标准的Linux提示符。恭喜，你的树莓派已经启动运行。
- en: Wheezy comes with a graphical user interface. Simply type `sudo startx` and
    you'll see a colorful user interface complete with games, word processors, and
    web browsers, as shown in the following screenshot:![Configuring the Raspberry
    Pi](img/B03998_06_04.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wheezy带有图形用户界面。只需输入`sudo startx`，你就会看到一个色彩丰富的用户界面，包括游戏、文字处理器和网页浏览器，如下面的截图所示：![配置树莓派](img/B03998_06_04.jpg)
- en: Raspberry Pi Desktop
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派桌面
- en: The Raspberry Pi Desktop is the **Lightweight X11 Desktop Environment** (**LXDE**).
    Spend some time exploring it. You'll find it very familiar, although a bit slower
    than your high-powered desktop computer.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派桌面是**轻量级X11桌面环境**（**LXDE**）。花一些时间来探索它。你会发现它非常熟悉，尽管比你的高性能台式电脑慢一些。
- en: 'When you''re done with LXDE, simply log out and you''ll be back at the Linux
    prompt. For the sake of the information on your SD card, it''s important to gracefully
    shut down your Raspberry Pi. Before you yank out the power cord, issue a shutdown
    command:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成LXDE后，只需注销，你就会回到Linux提示符。为了保存在SD卡上的信息，优雅地关闭你的树莓派是很重要的。在你拔掉电源线之前，发出一个关闭命令：
- en: '[PRE4]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will make sure that everything is written to the SD card before all the
    processes are shut down. Now, you can safely pull out the power cord and that's
    the extent of the on/off switch for the Raspberry Pi.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保在关闭所有进程之前将所有内容写入SD卡。现在，你可以安全地拔掉电源线，这就是树莓派的开关的全部功能。
- en: Congratulations, you have finished your first session with your Raspberry Pi.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，你已经完成了你的第一个树莓派会话。
- en: Connecting to the Raspberry Pi remotely
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 远程连接到树莓派
- en: Usually, you will connect to your Raspberry Pi using peripherals and monitor,
    but this will not always be the case since you will need to control your Pi from
    your computer, browser, or even mobile at the development stage or when the Pi
    itself is used as a cool server controlling your home appliances.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你会使用外围设备和显示器连接到你的树莓派，但这并不总是情况，因为在开发阶段或树莓派本身被用作控制家用电器的酷炫服务器时，你需要从你的计算机、浏览器甚至移动设备上控制你的树莓派。
- en: Giving your Raspberry Pi a fixed network address isn't necessary, but it is
    strongly recommended. Doing so means you always connect to your Pi using the same
    address (or name, if you create an entry in your hosts file), and thus it removes
    one potential variable from your development process.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 给树莓派分配固定的网络地址并不是必需的，但强烈建议这样做。这样做意味着你总是使用相同的地址（或名称，如果你在主机文件中创建了一个条目）连接到你的树莓派，因此它会从你的开发过程中删除一个潜在的变量。
- en: It's also a good idea to update your network DHCP device/router with the Pi's
    IP address so that it doesn't try to assign it to another device on your network.
    The steps required to do so will vary by switch/router manufacturer.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 更新网络DHCP设备/路由器与树莓派的IP地址也是一个好主意，这样它就不会尝试将其分配给网络上的另一个设备。执行此操作所需的步骤将因交换机/路由器制造商而异。
- en: We will install VNC server on our Raspberry Pi. **Virtual Network Computing**
    (**VNC**) allows you to control one computer from another over a network. It provides
    a graphical user interface, including the mouse and keyboard. In our case, it
    will allow us to see and use the Raspberry Pi GUI without the need for a physical
    keyboard and mouse connected to the Raspberry Pi.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在树莓派上安装VNC服务器。**虚拟网络计算**（**VNC**）允许你通过网络控制一台计算机。它提供了一个图形用户界面，包括鼠标和键盘。在我们的情况下，它将允许我们看到和使用树莓派的GUI，而无需连接到树莓派的物理键盘和鼠标。
- en: Right now, this is a convenience and if you're happy with your current mouse,
    keyboard, and monitor setup, you can skip this part. When you begin experimenting
    with devices that require one or more USB ports, VNC will become a necessity.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，这是一个便利，如果你对当前的鼠标、键盘和显示器设置满意，你可以跳过这一部分。当你开始尝试需要一个或多个USB端口的设备时，VNC将成为必需品。
- en: 'There are five steps to set up VNC:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 设置VNC有五个步骤：
- en: Connect to a home WiFi Internet connection.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到家庭WiFi互联网。
- en: Install VNC on the Raspberry Pi.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在树莓派上安装VNC。
- en: Set up to start at boot.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置开机启动。
- en: Set up a static IP address.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置静态IP地址。
- en: Connect to VNC with a client.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用客户端连接VNC。
- en: Connecting to WiFi Internet connection, Raspbian Wheezy includes a WiFi configuration
    utility. Also, all Raspbians released after October 28, 2012 are prebundled with
    this utility.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 远程连接到WiFi互联网，Raspbian Wheezy包括一个WiFi配置实用程序。此外，2012年10月28日之后发布的所有Raspbian都预装了此实用程序。
- en: Note
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Setting up WiFi requires that your router is broadcasting the SSID. Make sure
    you have *Broadcast SSID* set up on your router! This will not work with private
    SSID setups.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 设置WiFi要求你的路由器正在广播SSID。确保你的路由器上设置了*广播SSID*！这不适用于私人SSID设置。
- en: 'Now, Let''s connect to the Raspberry Pi remotely:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们远程连接树莓派：
- en: From the Raspbian desktop, go to **Menu** | **Preferences** | **WiFi Configuration**,
    as shown in the following screenshot:![Connecting to the Raspberry Pi remotely](img/B03998_06_05.jpg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Raspbian桌面，转到**菜单** | **首选项** | **WiFi配置**，如下屏幕截图所示：![远程连接树莓派](img/B03998_06_05.jpg)
- en: Choosing the WiFi Configuration utility
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 选择WiFi配置实用程序
- en: Double-click on the icon and you will see the following window:![Connecting
    to the Raspberry Pi remotely](img/B03998_06_06.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击图标，您将看到以下窗口：![远程连接树莓派](img/B03998_06_06.jpg)
- en: WiFi Configuration utility GUI
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: WiFi配置实用程序GUI
- en: Click on the **Scan** button and a second window will open. Find your wireless
    access point in the list and double-click on it. This will open another window:![Connecting
    to the Raspberry Pi remotely](img/B03998_06_07.jpg)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**扫描**按钮，将打开第二个窗口。在列表中找到您的无线接入点，并双击它。这将打开另一个窗口：![远程连接树莓派](img/B03998_06_07.jpg)
- en: List of access points
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接入点列表
- en: Enter your password in the `PSK` field and then click on **Add**. When you look
    at the first window, you should see that the connection is all set up for use.![Connecting
    to the Raspberry Pi remotely](img/B03998_06_08.jpg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`PSK`字段中输入密码，然后单击**添加**。当您查看第一个窗口时，您应该看到连接已经设置好可以使用。![远程连接树莓派](img/B03998_06_08.jpg)
- en: Final status in adding an access point
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 添加接入点的最终状态
- en: You can connect or disconnect using the buttons. You can see in the preceding
    screenshot that the IP address of the Pi is shown at the bottom of the window.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用按钮连接或断开连接。您可以在前面的屏幕截图中看到树莓派的IP地址显示在窗口底部。
- en: Note that there's a manual procedure to set up the WiFi connection on a terminal.
    This requires editing the `config` files and manually adding the SSID and password
    of the network. For more information, go to [https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md](https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，有一个手动程序可以在终端上设置WiFi连接。这需要编辑`config`文件并手动添加网络的SSID和密码。有关更多信息，请访问[https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md](https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md)。
- en: Congratulations, your Pi is connected to Internet. Now let's install a VNC server.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您的树莓派已连接到互联网。现在让我们安装VNC服务器。
- en: Installing VNC on the Raspberry Pi
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在树莓派上安装VNC
- en: 'Now that you have an Internet connection, you can install a VNC server on your
    Raspberry Pi. If you''re using Raspbian Wheezy, this is simple. At a command prompt,
    enter the following line:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经连接到互联网，可以在树莓派上安装VNC服务器。如果您使用的是Raspbian Wheezy，这很简单。在命令提示符下，输入以下命令：
- en: '[PRE5]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You''ll get the message: **Do you want to continue? Yes or No?**'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您将收到消息：**您想继续吗？是或否？**
- en: 'Let''s answer with a capital *Y* and take a break. When the installation is
    complete, enter the following command:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用大写*Y*回答并休息一下。安装完成后，输入以下命令：
- en: '[PRE6]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You''ll be asked to create a password, I use *raspberry*. It notes that the
    password is longer than eight characters; go ahead and retype `raspberry`. Next,
    you''ll be asked: **Would you like to enter a view only password?** Enter *N*
    for no.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被要求创建一个密码，我使用*raspberry*。它指出密码长度超过八个字符；继续重新输入`raspberry`。接下来，您将被问到：**您想输入只读密码吗？**输入*N*表示否。
- en: Congratulations, you're running VNC on your Raspberry Pi.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您已在树莓派上运行VNC。
- en: Setting up VNC to start at boot
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置VNC在启动时启动
- en: 'As you become more advanced, you may not always need VNC but let''s assume
    you want VNC to run every time you start your Raspberry Pi:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 随着您变得更加高级，您可能并不总是需要VNC，但让我们假设您希望每次启动树莓派时都运行VNC：
- en: 'Edit the `rc.local` file using the following command from the Pi **LX Terminal**:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令从Pi **LX终端**编辑`rc.local`文件：
- en: '[PRE7]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Scroll to the bottom and add the following line above `exit 0`:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到底部，在`exit 0`上面添加以下行：
- en: '[PRE8]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Save the file and restart your Raspberry Pi using the following command:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并使用以下命令重新启动树莓派：
- en: '[PRE9]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, every time you start your Raspberry Pi, VNC will be available.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，每次启动树莓派时，VNC都将可用。
- en: Setting up a static IP address
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置静态IP地址
- en: 'Connecting with the Raspberry Pi over VNC requires a static IP address, one
    that doesn''t change. I''ll show you how to get that for wired and wireless networking
    in the next few steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 通过VNC连接树莓派需要一个静态IP地址，即不会更改的IP地址。我将向您展示如何在接下来的几个步骤中为有线和无线网络获取静态IP地址：
- en: 'If you are on a home network, you''ll need to discover a usable IP address.
    To do this, turn to your Raspberry Pi, open Pi LX Terminal, and type:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在家庭网络上，您需要发现一个可用的IP地址。为此，转到您的树莓派，打开Pi LX终端，然后输入：
- en: '[PRE10]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, type the following command:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，输入以下命令：
- en: '[PRE11]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Gather the following information: *current IP* (if you want to keep it), *netmask*,
    *gateway*, *destination*, and *broadcast*. Write these down, you''ll need them
    soon!'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集以下信息：*当前IP*（如果您想保留它），*子网掩码*，*网关*，*目的地*和*广播*。记下这些，您很快会需要它们！
- en: 'On the Pi, make a backup of `/etc/network/interfaces` by running the following
    command:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在树莓派上，通过运行以下命令备份`/etc/network/interfaces`：
- en: '[PRE12]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Modify the `interfaces` file with the following command:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令修改`interfaces`文件：
- en: '[PRE13]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Change the `interfaces` file from:![Setting up a static IP address](img/B03998_06_09.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下更改`interfaces`文件：![设置静态IP地址](img/B03998_06_09.jpg)
- en: Interfaces file before editing
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑前的interfaces文件
- en: Select the IP numbers that suit your network; also change `wpa-ssid` to your
    wireless network name and `wpa-psk` to wireless password:![Setting up a static
    IP address](img/B03998_06_10.jpg)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择适合您网络的IP号码；还要将`wpa-ssid`更改为您的无线网络名称，将`wpa-psk`更改为无线密码：![设置静态IP地址](img/B03998_06_10.jpg)
- en: Interfaces file after editing
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑后的interfaces文件
- en: Save the file and restart your Raspberry Pi. These settings work for both wired
    and wireless connections. Congratulations, you can now connect to your Pi with
    the VNC client.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并重新启动树莓派。这些设置适用于有线和无线连接。恭喜，您现在可以使用VNC客户端连接到您的树莓派。
- en: Auto login in the Raspberry Pi
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 树莓派的自动登录
- en: Like most people, you might have bought the Raspberry Pi to build your own appliance
    for home or office. The next thing you should do is set up the Raspberry Pi, connect
    your peripherals, and install or develop the necessary software.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 像大多数人一样，你可能买了树莓派来为家庭或办公室构建自己的设备。接下来你应该做的是设置树莓派，连接你的外围设备，并安装或开发必要的软件。
- en: What you want at the end of your project is to power on the appliance and have
    it should show you all the magic you were expecting.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 你在项目结束时想要的是打开设备并看到你期望的所有魔术。
- en: 'The spoiler comes when the Pi boots to the login prompt and waits for you to
    enter the username and password. So, let''s automate the Raspberry Pi login:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 当Pi引导到登录提示并等待你输入用户名和密码时，问题就来了。所以，让我们自动化树莓派登录：
- en: 'From your Pi, open a terminal and edit the `inittab` file with the following
    command:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的Pi上，打开一个终端并使用以下命令编辑`inittab`文件：
- en: '[PRE14]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Disable the `getty` program by navigating to the following line in `inittab`:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到`inittab`中的以下行来禁用`getty`程序：
- en: '[PRE15]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Add a `#` at the beginning of the line to comment it out, as shown in the following
    line:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该行的开头添加`#`来注释掉它，如下一行所示：
- en: '[PRE16]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add a login program to `inittab` just below the commented line:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在注释行下方添加一个登录程序到`inittab`：
- en: '[PRE17]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This will run the login program with `pi` user and without any authentication.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将使用`pi`用户运行登录程序，而无需任何身份验证。
- en: Save and exit by pressing *Ctrl* + *X*, followed by *Y* to save the file, and
    then press *Enter* to confirm the filename.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl* + *X*保存并退出，然后按*Y*保存文件，然后按*Enter*确认文件名。
- en: Reboot the Pi and it will boot straight to the shell prompt `pi@raspberrypi`
    without prompting you to enter your username or password.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动Pi，它将直接引导到shell提示符`pi@raspberrypi`，而不会提示你输入用户名或密码。
- en: Connecting to VNC with a client
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用客户端连接VNC
- en: Before going any further, let's make sure everything is working correctly. To
    do this, you'll need a VNC client. If you're using a Macintosh with a recent version
    of Mac OS X, this is simple.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们确保一切都正常工作。为此，你需要一个VNC客户端。如果你使用的是带有最新版本Mac OS X的Macintosh，这很简单。
- en: Go to **Finder** | **Go** | **Connect to Server**. Enter `vnc://` and the IP
    address you have given to your Raspberry Pi. In my case, it was 192.168.2.150
    followed by a colon and the number 5901, as shown in the following screenshot.
    The full URL should be **vnc://192.168.2.150:5901**.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 转到**Finder** | **前往** | **连接到服务器**。输入`vnc://`和你给树莓派分配的IP地址。在我的情况下，是192.168.2.150后跟一个冒号和数字5901，如下截图所示。完整的URL应该是**vnc://192.168.2.150:5901**。
- en: '![Connecting to VNC with a client](img/B03998_06_11.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![使用客户端连接VNC](img/B03998_06_11.jpg)'
- en: Connect to the Pi VNC server.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到Pi VNC服务器。
- en: As shown in the image `5901` is the number of the port the Raspberry Pi VNC
    server is listening to. Hit **Connect**. Don't worry about the screen sharing
    encryption, hit **Connect** again. Now type in the password you created earlier
    (`raspberry`). If everything is working correctly, you'll see a large raspberry.
    Congratulations!
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，`5901`是树莓派VNC服务器正在监听的端口号。点击**连接**。不用担心屏幕共享加密，再次点击**连接**。现在输入之前创建的密码（`raspberry`）。如果一切正常，你会看到一个大的树莓。恭喜！
- en: If you're not on a Macintosh computer, you'll need to download a VNC client.
    You can obtain free viewers from [http://realvnc.com/](http://realvnc.com/). There
    are clients for Windows, iOS, Android, and the Chrome browser. Yes, you can control
    your Raspberry Pi from your cell phone.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不是在Macintosh电脑上，你需要下载一个VNC客户端。你可以从[http://realvnc.com/](http://realvnc.com/)获取免费的查看器。有Windows、iOS、Android和Chrome浏览器的客户端。是的，你可以用手机控制你的树莓派。
- en: JavaFX 8 development prerequisites
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaFX 8开发先决条件
- en: Now as we have set up and configured our Raspberry Pi for development, we need
    to install the same correct matching JDK 8 build version on both our development
    machine and the Pi. This is very important to avoid library/versioning issues
    when running our JavaFX 8 application, and this is what we are going to do next.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经为开发设置和配置了我们的树莓派，我们需要在我们的开发机器和Pi上安装相同正确匹配的JDK 8构建版本。这对于在运行我们的JavaFX 8应用程序时避免库/版本问题非常重要，这就是我们接下来要做的事情。
- en: Installing Java SE 8 on the Raspberry Pi
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在树莓派上安装Java SE 8
- en: 'At the time of writing, Raspbian Wheezy is shipped with JDK 8 preinstalled.
    To check, simply type the following at your Pi command prompt:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Raspbian Wheezy预装了JDK 8。要检查，只需在Pi命令提示符下输入以下内容：
- en: '[PRE18]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You will see something like this, depending upon the version that is currently
    installed and accessible:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到类似于这样的东西，取决于当前安装和可访问的版本：
- en: '![Installing Java SE 8 on the Raspberry Pi](img/B03998_06_12.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![在树莓派上安装Java SE 8](img/B03998_06_12.jpg)'
- en: Raspbian Wheezy Java version on Raspberry Pi
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派Wheezy上的Java版本
- en: 'The important bit is the second line: if it doesn''t say 1.8.n, you''ll need
    to install JDK8.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是第二行：如果它不是1.8.n，你需要安装JDK8。
- en: Installing Java SE 8
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Java SE 8
- en: We have already installed our JDK 8 before and all necessary steps are described
    in the *Installing Java SE 8 JDK* section in [Chapter 1](ch01.html "Chapter 1. Getting
    Started with JavaFX 8"), *Getting Started with JavaFX 8*.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在之前安装了我们的JDK 8，并且所有必要的步骤都在[第1章](ch01.html "第1章。开始使用JavaFX 8")的*安装Java SE
    8 JDK*部分中描述。
- en: Adding JavaFX
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加JavaFX
- en: As mentioned previously, Oracle has withdrawn its support for JavaFX Embedded.
    If you have installed JDK 8u45 or the prebundled version installed on Raspbian
    Wheezy, there is no `jfxrt.jar` bundled, so we need to provide it in order to
    run JavaFX applications on our Pi.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Oracle已经撤销了对JavaFX嵌入式的支持。如果你安装了JDK 8u45或预装在Raspbian Wheezy上的版本，没有`jfxrt.jar`捆绑，所以我们需要提供它以便在我们的Pi上运行JavaFX应用程序。
- en: One-way to do this is to follow the tutorial at [https://wiki.openjdk.java.net/display/OpenJFX/Cross+Building+for+ARM+Hard+Float](https://wiki.openjdk.java.net/display/OpenJFX/Cross+Building+for+ARM+Hard+Float)),
    cross-building OpenJFX for ARM. This is for really advanced developers.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是按照[https://wiki.openjdk.java.net/display/OpenJFX/Cross+Building+for+ARM+Hard+Float](https://wiki.openjdk.java.net/display/OpenJFX/Cross+Building+for+ARM+Hard+Float)上的教程，为ARM交叉构建OpenJFX。这是给非常高级的开发者。
- en: An easier way is to download a prebuilt distribution such as `armv6hf-sdk.zip`
    hosted on the JavaFXPorts project ([https://bitbucket.org/javafxports/arm/downloads](https://bitbucket.org/javafxports/arm/downloads)).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更简单的方法是下载一个预构建的发行版，比如托管在JavaFXPorts项目上的`armv6hf-sdk.zip`（[https://bitbucket.org/javafxports/arm/downloads](https://bitbucket.org/javafxports/arm/downloads)）。
- en: 'Once you have downloaded `armv6hf-sdk.zip`, unzip it and add this command-line
    option to attach the external source to the `classpath` with the extension mechanism:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你下载了`armv6hf-sdk.zip`，解压它并添加这个命令行选项，将外部源附加到`classpath`上，使用扩展机制：
- en: '[PRE19]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Alternatively, you can copy the contents of `rt/lib/ext` and `rt/lib/arm` from
    this zip into your JVM folders, avoiding the use of the extension mechanism.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以将这个zip文件中`rt/lib/ext`和`rt/lib/arm`的内容复制到你的JVM文件夹中，避免使用扩展机制。
- en: Configuring NetBeans for the Raspberry Pi
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为树莓派配置NetBeans
- en: 'NetBeans 8 adds the capability to point to a remote JDK and use it to debug
    and execute programs remotely that you write locally on your development machine.
    It even deploys your applications automatically and seamlessly. As documented
    by José Pereda in his article at [http://netbeans.dzone.com/articles/nb-8-raspberry-pi-end2end](http://netbeans.dzone.com/articles/nb-8-raspberry-pi-end2end),
    you can enable this capability with the following steps:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: NetBeans 8增加了指向远程JDK并使用它来远程调试和执行你在本地开发机器上编写的程序的能力。它甚至可以自动无缝地部署你的应用程序。正如José
    Pereda在他的文章[http://netbeans.dzone.com/articles/nb-8-raspberry-pi-end2end](http://netbeans.dzone.com/articles/nb-8-raspberry-pi-end2end)中所记录的，你可以通过以下步骤启用这个功能。
- en: Start NetBeans on your machine.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的机器上启动NetBeans。
- en: Choose **Tools** from the menu bar and then select **Java Platforms**. Click
    on the **Add Platform** button.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单栏选择**工具**，然后选择**Java平台**。点击**添加平台**按钮。
- en: Select the **Remote Java Standard Edition** radio button and click on **Next**.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**远程Java标准版**单选按钮，然后点击**下一步**。
- en: 'Provide the following entries (shown in the following screenshot as an example):'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供以下条目（如下截图所示）：
- en: '**Platform Name**: `JavaFX on Raspberry Pi JDK 8`'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台名称**：`JavaFX on Raspberry Pi JDK 8`'
- en: '**Host**: Enter the static IP address or hostname of your Raspberry Pi you
    already assigned before'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '**主机**：输入你之前分配的树莓派的静态IP地址或主机名'
- en: '**Username**: `pi`'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户名**：`pi`'
- en: '**Password**: `raspberry`'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '**密码**：`raspberry`'
- en: '**Remote JRE Path**: `/usr/lib/jvm/jdk-8-oracle-arm-vfp-hflt/jre`'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**远程JRE路径**：`/usr/lib/jvm/jdk-8-oracle-arm-vfp-hflt/jre`'
- en: '![Configuring NetBeans for the Raspberry Pi](img/B03998_06_13.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![为树莓派配置NetBeans](img/B03998_06_13.jpg)'
- en: Setting up a remote platform for Pi
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 为Pi设置远程平台
- en: Click on the **Finish** button and wait for NetBeans to establish and configure
    the remote JDK connection.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮，等待NetBeans建立和配置远程JDK连接。
- en: Click on the **Close** button once the remote JDK is in place.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦远程JDK就位，点击**关闭**按钮。
- en: Now that we've completed the setup, you should have a development environment
    that is among the best available to develop JavaFX 8 applications for the Raspberry
    Pi. So let's get started!
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了设置，你应该拥有一个开发环境，它是为开发JavaFX 8应用程序为树莓派提供的最好的之一。那么让我们开始吧！
- en: The switch application
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开关应用程序
- en: 'The switch application is very simple in its nature, but the idea is mainly
    divided into two main points: how to run JavaFX 8 applications on Raspberry Pi
    and how to control the outside world from the Raspberry Pi **General-purpose input/output**
    (**GPIO**). We will use a project called **Pi4j** for such purpose.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 开关应用程序在其本质上非常简单，但主要分为两个要点：如何在树莓派上运行JavaFX 8应用程序，以及如何从树莓派的**通用输入/输出**（**GPIO**）控制外部世界。我们将使用一个名为**Pi4j**的项目来实现这个目的。
- en: The idea is simple; we are going to create a JavaFX application that will act
    as a switch controller to control a LED associated to an electrical circuit connected
    to your Raspberry Pi.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法很简单；我们将创建一个JavaFX应用程序，它将充当一个开关控制器，用于控制连接到你的树莓派的电路上的LED。
- en: 'The following screenshots show the application in the ON and OFF states:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了应用程序处于开启和关闭状态：
- en: '![The switch application](img/B03998_06_14.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![开关应用程序](img/B03998_06_14.jpg)'
- en: Switch Application ON state
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 开启应用程序开关状态
- en: .
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 为树莓派配置NetBeans
- en: '![The switch application](img/B03998_06_15.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![开关应用程序](img/B03998_06_15.jpg)'
- en: Switch Application OFF state
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭应用程序开关状态
- en: What is the Pi4J library?
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是Pi4J库？
- en: The Pi4j library ([http://pi4j.com](http://pi4j.com)) is a project intended
    to provide a bridge between the native libraries and Java for full access to the
    Raspberry Pi features and controls, so you can easily access the GPIO pins for
    your Java project.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: Pi4j库（[http://pi4j.com](http://pi4j.com)）是一个旨在提供本地库和Java之间的桥梁，以完全访问树莓派功能和控制的项目，因此你可以轻松地访问GPIO引脚用于你的Java项目。
- en: Visit [http://pi4j.com/pins/model-2b-rev1.html](http://pi4j.com/pins/model-2b-rev1.html)
    for Raspberry Pi 2 model B (J8 header) for GPIO pin numbering. Also, your kit's
    GPIO adapter may come with a GPIO header quick reference.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[http://pi4j.com/pins/model-2b-rev1.html](http://pi4j.com/pins/model-2b-rev1.html)查看树莓派2型B（J8头）的GPIO引脚编号。此外，你的套件的GPIO适配器可能附带GPIO引脚头的快速参考。
- en: For this example, you will need some basic electronic components such as a LED,
    a resistor, and a breadboard. If those are not included in your kit, you can acquire
    them from online stores.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，你将需要一些基本的电子元件，比如LED、电阻和面包板。如果你的套件中没有包括这些，你可以从网上商店购买。
- en: Circuit setup
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 电路设置
- en: 'Now we need to set up our circuit by adding a LED with a 220 Ohms pull-up resistor
    in a breadboard, and connect the anode to GPIO pin #1 and cathode to the GPIO
    GND pin, as shown in the following figure (CanaKit comes with a general assembly
    guide for the most commonly used electronic parts):'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要通过在面包板上添加一个带有220欧姆上拉电阻的LED来设置我们的电路，并将阳极连接到GPIO引脚＃1，阴极连接到GPIO GND引脚，如下图所示（CanaKit附带了一个常用电子零件的通用组装指南）：
- en: '![Circuit setup](img/B03998_06_16.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![电路设置](img/B03998_06_16.jpg)'
- en: Switcher application circuit setup
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 开关器应用电路设置
- en: The application
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序
- en: 'As previously mentioned, the application UI contains two buttons. **Exit Me!**
    is responsible for shutting down the GPIO controller and closing the application.
    The second button is a toggle button (**ON**/**OFF**) that works as a switch.
    It has two states: when selected, its state is true and it becomes false when
    not selected. Additionally, we change its label programmatically to indicate the
    state of the current controlled LED.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，应用程序UI包含两个按钮。**退出！**负责关闭GPIO控制器并关闭应用程序。第二个按钮是一个切换按钮（**开**/**关**），可以作为开关使用。它有两种状态：选中时，其状态为true，当未选中时，其状态为false。此外，我们通过编程方式更改其标签，以指示当前受控LED的状态。
- en: In addition, there is one circle shape that mimics the physical LED state. So,
    when the toggle button is ON, then the circle will be filled with red. OFF turns
    it to black, which is the default state.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个圆形形状，模仿了物理LED状态。因此，当切换按钮打开时，圆圈将填充为红色。关闭时，它变成黑色，这是默认状态。
- en: Finally, at the bottom of the application scene, we add a `TitledPane` labeled
    Pi Information displaying some Raspberry Pi information.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在应用程序场景的底部，我们添加一个名为Pi信息的`TitledPane`，显示一些树莓派信息。
- en: 'By looking at the `SwitchUIController.java` class, you will find that we have
    very important fields to declare before interacting with the `Pi4J` library:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看`SwitchUIController.java`类，您会发现在与`Pi4J`库交互之前，我们有一些非常重要的字段要声明：
- en: '[PRE20]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The first line is responsible for creating a new GPIO controller instance,
    which is done in the `initialize()` method via `GpioFactory` as it includes a
    `createInstance` method to create the GPIO controller:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行负责创建一个新的GPIO控制器实例，这是通过`initialize()`方法通过`GpioFactory`完成的，因为它包括一个`createInstance`方法来创建GPIO控制器：
- en: '[PRE21]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Your project should only instantiate a single GPIO controller instance and that
    instance should be shared across your project.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 您的项目应该只实例化一个GPIO控制器实例，并且该实例应该在整个项目中共享。
- en: 'To access a GPIO pin, you must first provision the pin. Provisioning configures
    the pin based on how you intend to use it. Provisioning can automatically export
    the pin, set its direction, and set up any edge detection for interrupt-based
    events:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问GPIO引脚，必须首先配置引脚。配置根据您打算如何使用它来配置引脚。配置可以自动导出引脚，设置其方向，并为基于中断的事件设置任何边缘检测：
- en: '[PRE22]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This is how to provision an output pin #1\. Your program will be able to control
    the state only of those pins that are provisioned as output pins. Output pins
    are used for controlling relays, LEDs, and transistors.'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这是如何配置输出引脚＃1。您的程序将只能控制那些配置为输出引脚的引脚的状态。输出引脚用于控制继电器、LED和晶体管。
- en: 'Now all we want to do is to control the LED from our application using the
    toggle button. This is done via the `doOnOff()` event function that is registered
    to toggle the button, as shown in the following code:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要做的就是使用切换按钮从我们的应用程序控制LED。这是通过注册到切换按钮的`doOnOff()`事件函数来完成的，如下面的代码所示：
- en: '[PRE23]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `P14J` library provides a number of convenience methods for controlling
    or writing a state to a GPIO pin. In our application, we use `pin.high()` to turn
    the LED on and `pin.low()` to turn the LED off.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`P14J`库提供了许多方便的方法来控制或向GPIO引脚写入状态。在我们的应用程序中，我们使用`pin.high()`来打开LED，使用`pin.low()`来关闭LED。'
- en: Finally, when the application exits, we have to shut down the GPIO controller.
    The Pi4J project provides an implementation to automatically set GPIO pin states
    as inactive when the application is terminated.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当应用程序退出时，我们必须关闭GPIO控制器。Pi4J项目提供了一个实现，可以在应用程序终止时自动将GPIO引脚状态设置为非活动状态。
- en: 'This is useful to ensure that the GPIO pins states are not active or leaving
    some activity engaged if the program is shutdown. We can simply do this with the
    following line of code from the GPIO instance we have created previously:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于确保GPIO引脚状态在程序关闭时不活动或保持某些活动是有用的。我们可以简单地使用我们之前创建的GPIO实例的以下代码行来实现这一点：
- en: '[PRE24]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: When you press the toggle button to turn ON the LED, you will see your green
    LED glows. When it is OFF, you will see that the LED is faded.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 当您按下切换按钮以打开LED时，您会看到绿色LED发光。当它关闭时，您会看到LED变暗。
- en: '![The application](img/B03998_06_17.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![应用程序](img/B03998_06_17.jpg)'
- en: Application circuit—LED OFF
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 应用电路-LED关闭
- en: '![The application](img/B03998_06_18.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![应用程序](img/B03998_06_18.jpg)'
- en: Application circuit—LED ON
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 应用电路-LED开启
- en: Next, let's configure our project to run our JavaFX switch application directly
    on the Raspberry Pi from NetBeans.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们配置我们的项目，从NetBeans直接在树莓派上运行我们的JavaFX开关应用程序。
- en: Using NetBeans with the Pi
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在NetBeans中使用Pi
- en: 'After discussing our application logic and seeing how it works, it''s time
    for the best part: building your application and running it on the Raspberry Pi
    using NetBeans. The steps are as follows:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了我们的应用程序逻辑并了解了它的工作原理之后，现在是最好的部分：使用NetBeans构建您的应用程序并在树莓派上运行它。步骤如下：
- en: Right-click on the `Chapter6` project in NetBeans **Projects** tab and select
    **Properties**.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在NetBeans的**项目**选项卡中右键单击`Chapter6`项目，然后选择**属性**。
- en: From the **Project Properties** box, select **Run** from the **Categories**
    menu to the left. You will see a dialog similar to the following screenshot:![Using
    NetBeans with the Pi](img/B03998_06_19.jpg)
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目属性**框中，从左侧的**类别**菜单中选择**运行**。您将看到一个类似于以下截图的对话框：![在NetBeans中使用Pi](img/B03998_06_19.jpg)
- en: Project Properties dialog and the Run incarnation
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 项目属性对话框和运行实例
- en: Click on the **New** button to the right of the selected **Configuration**.
    Set a name for the **New Configuration** (`Pi Remote Config`) and click on the
    **OK** button, as shown in the following screenshot:![Using NetBeans with the
    Pi](img/B03998_06_20.jpg)
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击所选“配置”右侧的“新建”按钮。为“新配置”（`Pi Remote Config`）设置一个名称，然后单击“确定”按钮，如下面的屏幕截图所示：![使用NetBeans与Pi](img/B03998_06_20.jpg)
- en: New Configuration
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 新配置
- en: Now you have to associate a remote JDK with your remote configuration. To do
    so, click on the combo box labeled **Runtime Platform** and select `JavaFX on
    Raspberry Pi JDK 8` that you configured earlier. Don't forget to add the path
    for `jfxrt.jar` in **VM Options**:![Using NetBeans with the Pi](img/B03998_06_21.jpg)
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您必须将远程JDK与远程配置关联起来。要这样做，单击标记为“运行平台”的组合框，并选择您之前配置的“JavaFX on Raspberry Pi JDK
    8”。不要忘记在“VM选项”中添加`jfxrt.jar`的路径：![使用NetBeans与Pi](img/B03998_06_21.jpg)
- en: Remote Pi JDK association
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 远程Pi JDK关联
- en: 'The final step is to build and deploy the application to the Raspberry Pi.
    To do so, go to the **Run** menu, select **Run Project,** and watch the NetBeans
    Output window/tab. If you keep an eye on the Pi''s screen when running the application,
    you will see the following output messages:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是构建并部署应用程序到树莓派。要这样做，转到“运行”菜单，选择“运行项目”，并观看NetBeans输出窗口/选项卡。在运行应用程序时，如果您留意Pi的屏幕，您将看到以下输出消息：
- en: '[PRE25]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Summary
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we took a credit card-sized microcomputer no larger than a
    deck of playing cards and transformed it into a JavaFX Switch controller machine.
    Along the way, you learned about the Raspberry Pi, how to create a bootable SD
    card, how to install an operating system to it, how to configure it for best performance
    and remote connectivity, how to give it a fixed network (IP) address, and how
    to connect to the Pi from your development machine.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将信用卡大小的微型计算机（不大于一副扑克牌）转变为一个JavaFX开关控制器机。在此过程中，您学会了关于树莓派的知识，如何创建可引导的SD卡，如何将操作系统安装到其中，如何为其配置最佳性能和远程连接性，如何为其分配固定的网络（IP）地址，以及如何从开发机连接到Pi。
- en: We also revisited how to install JDK 8/ JavaFX 8 to both the Raspberry Pi and
    your development machine, and you learned how to install and configure NetBeans
    on your development machine so that it can use the JDK on the Pi as a remote platform
    for debugging and execution.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还重新讨论了如何在树莓派和开发机上安装JDK 8/ JavaFX 8，并学会了如何在开发机上安装和配置NetBeans，以便它可以使用Pi上的JDK作为远程平台进行调试和执行。
- en: With both your development machine and the Raspberry Pi ready for action, we
    discussed the principles needed to develop a simple but great application to control
    the outside world from the Raspberry Pi using JavaFX and a few select tools/APIs,
    including Pi4j, to control GPIO.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的开发机和树莓派都准备就绪后，我们讨论了使用JavaFX和一些选择的工具/ API（包括Pi4j）开发一个简单但很棒的应用程序来控制树莓派外部世界所需的原则。
- en: Finally, you saw how to remotely deploy your application from NetBeans to your
    Raspberry Pi, all with just a few clicks.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您学会了如何从NetBeans远程部署应用程序到树莓派，只需点击几下即可。
- en: In the next chapter, we are going to monitor a temperature sensor, measuring
    how hot your blood is from an Arduino board.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将监控一个温度传感器，从Arduino板上测量您的血液有多热。
