["```js\n<style type=\"text/css\">\n  @import\"http://js.arcgis.com/3.7/js/dojo/dijit/themes/claro/claro.css\";\n    .zoominIcon{ background-image:url(images/nav_zoomin.png);width:16px; height:16px; }\n **.zoomoutIcon{ background-image:url(images/nav_zoomout.png);width:16px; height:16px; }**\n    .zoomfullextIcon{ background-image:url(images/nav_fullextent.png); width:16px;height:16px; }\n    .zoomprevIcon{ background-image:url(images/nav_previous.png); width:16px;height:16px; }\n    .zoomnextIcon{ background-image:url(images/nav_next.png);width:16px; height:16px; }\n    .panIcon{ background-image:url(images/nav_pan.png);width:16px; height:16px; }\n    .deactivateIcon{ background-image:url(images/nav_decline.png); width:16px;height:16px; }\n</style>\n```", "```js\n<div id=\"mainWindow\" data-dojo-type=\"dijit/layout/BorderContainer\"data-dojo-props=\"design:'headline'\">\n  <div id=\"header\"data-dojo-type=\"dijit/layout/ContentPane\"data-dojo-props=\"region:'top'\">\n    <button data-dojo-type=\"dijit/form/Button\"iconClass=\"zoominIcon\">Zoom In</button>\n **<button data-dojo-type=\"dijit/form/Button\"iconClass=\"zoomoutIcon\" >Zoom Out</button>**\n    <button data-dojo-type=\"dijit/form/Button\"iconClass=\"zoomfullextIcon\" >Full Extent</button>\n    <button data-dojo-type =\"dijit/form/Button\"iconClass=\"zoomprevIcon\" >Prev Extent</button>\n    <button data-dojo-type=\"dijit/form/Button\"iconClass=\"zoomnextIcon\" >Next Extent</button>\n    <button data-dojo-type=\"dijit/form/Button\"iconClass=\"panIcon\">Pan</button>\n    <button data-dojo-type=\"dijit/form/Button\"iconClass=\"deactivateIcon\" >Deactivate</button>\n  </div>\n</div>\n```", "```js\n<script>\n  var map, **toolbar**, symbol, geomTask;\n\n    require([\n      \"esri/map\", \n      **\"esri/toolbars/navigation\",**\n      \"dojo/parser\", \"dijit/registry\",\n\n    \"dijit/layout/BorderContainer\", \"dijit/layout/ContentPane\", \n      \"dijit/form/Button\", \"dojo/domReady!\"\n      ], function(\n      Map, **Navigation**,\n      parser, registry\n    ) {\n      parser.parse();\n\n    map = new Map(\"map\", {\n      basemap: \"streets\",\n      center: [-15.469, 36.428],\n      zoom: 3\n      });\n\n      map.on(\"load\", createToolbar);\n\n    **// loop through all dijits, connect onClick event**\n **// listeners for buttons to activate navigation tools**\n      **registry.forEach(function(d) {**\n **// d is a reference to a dijit**\n **// could be a layout container or a button**\n **if ( d.declaredClass === \"dijit.form.Button\" ) {**\n **d.on(\"click\", activateTool);**\n **}**\n **});**\n\n    **//activate tools**\n      **function activateTool() {**\n **var tool = this.label.toUpperCase().replace(/ /g, \"_\");**\n **toolbar.activate(Navigation[tool]);**\n **}**\n\n      **//create the Navigation toolbar**\n      **function createToolbar(themap) {**\n **toolbar = new Navigation(map);**\n\n      });\n    </script>\n```", "```js\nrequire([\"esri/dijit/Basemap\", ... \n], function(Basemap, ... ) {\n     var basemaps = [];\n     var waterBasemap = new Basemap({\n       layers: [waterTemplateLayer],\n       title: \"Water Template\",\n       thumbnailUrl: \"images/waterThumb.png\"\n     });\n     basemaps.push(waterBasemap);\n...\n});\n```", "```js\nrequire([\n\"esri/map\", \"esri/dijit/Bookmarks\", \"dojo/dom\", ... \n], function(Map, Bookmarks, dom, ... ) {\n     var map = new Map( ... );\n     var bookmarks = new Bookmarks({\n       map: map, \n       bookmarks: bookmarks\n     }, dom.byId('bookmarks'));\n...\n});\n```", "```js\nrequire([\n\"esri/map\", \"esri/dijit/Print\", \"dojo/dom\"... \n], function(Map, Print, dom, ... ) {\n     var map = new Map( ... );\n     var printer = new Print({\n       map: map,\n       url: \"    http://servicesbeta4.esri.com/arcgis/rest/services/Utilities/ExportWebMap/GPServer/Export%20Web%20Map%20Task\"\n    }, dom.byId(\"printButton\"));\n...\n});\n```", "```js\n    <style>\n    html, body, #mapDiv {\n    height:100%;\n    width:100%;\n    margin:0;\n    padding:0;\n    }\n    body {\n    background-color:#FFF;\n    overflow:hidden;\n    font-family:\"Trebuchet MS\";\n    }\n    #search {\n    display: block;\n    position: absolute;\n    z-index: 2;\n    top: 20px;\n    left: 75px;\n    }\n    </style>\n    ```", "```js\n    <script>\n    **dojo.require(\"esri.map\");**\n\n    **function init(){**\n    **var map = new esri.Map(\"mapDiv\", {**\n    **center: [-56.049, 38.485],**\n    **zoom: 3,**\n    **basemap: \"streets\"**\n     **});**\n     **}**\n    **dojo.ready(init);**\n    </script>\n    ```", "```js\n    <body class=\"tundra\">\n      <**div id=\"search\"></div>**\n      <div id=\"mapDiv\"></div>\n    </body>\n    ```", "```js\n    <script>\n    **var map, geocoder;**\n    </script>\n    ```", "```js\n    <script>\n    var map, geocoder;\n\n    **require([**\n     **\"esri/map\", \"esri/dijit/Geocoder\", \"dojo/domReady!\"**\n     **], function(Map, Geocoder) {**\n    **map = new Map(\"mapDiv\",{**\n    **basemap: \"streets\",**\n    **center:[-98.496,29.430], //long, lat**\n    **zoom: 13** \n     **});**\n     **});**\n    </script>\n    ```", "```js\n    require([\n        \"esri/map\", \"esri/dijit/Geocoder\", \"dojo/domReady!\"\n      ], function(Map, Geocoder) {\n        map = new Map(\"map\",{\n            basemap: \"streets\",\n            center:[-98.496,29.430], //long, lat\n            zoom: 13 \n        });\n\n     **var geocoder = new Geocoder({**\n     **map: map,**\n     **autoComplete: true,**\n     **arcgisGeocoder: {**\n     **name: \"Esri World Geocoder\",**\n     **suffix: \" San Antonio, TX\"**\n     **}**\n     **},\"search\");**\n     **geocoder.startup();**\n\n    });\n    ```", "```js\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=7, IE=9,IE=10\">\n    <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"/>\n    <title>Geocoding Widget API for JavaScript | SimpleGeocoding</title>\n    <link rel=\"stylesheet\"href=\"http://js.arcgis.com/3.7/js/esri/css/esri.css\">\n    <style>\n    html, body, #mapDiv {\n    height:100%;\n    width:100%;\n    margin:0;\n    padding:0;\n          }\n          #search {\n    display: block;\n    position: absolute;\n    z-index: 2;\n    top: 20px;\n    left: 74px;\n          }\n    </style>\n    <script src=\"http://js.arcgis.com/3.7/\"></script>\n    <script>\n    var map, geocoder;\n\n    require([\n            \"esri/map\", \"esri/dijit/Geocoder\", \"dojo/domReady!\"\n          ], function(Map, Geocoder) {\n    map = new Map(\"mapDiv\",{\n    basemap: \"streets\",\n    center:[-98.496,29.430], //long, lat\n    zoom: 13 \n            });\n\n    var geocoder = new Geocoder({\n    map: map,\n    autoComplete: true,\n    arcgisGeocoder: {\n    name: \"Esri World Geocoder\",\n    suffix: \" San Antonio, TX\"\n              }\n            },\"search\");\n    geocoder.startup();\n\n          });\n    </script>\n    </head>\n    <body>\n    <div id=\"search\"></div>\n    <div id=\"mapDiv\"></div>\n    </body>\n    </html>\n    ```", "```js\nrequire([\n  \"esri/dijit/Gauge\", ... \n], function(Gauge, ... ) {\nvar gaugeParams = {\n    \"caption\": \"Hurricane windspeed.\",\n    \"color\": \"#c0c\",\n    \"dataField\": \"WINDSPEED\", \n    \"dataFormat\": \"value\",\n    \"dataLabelField\": \"EVENTID\",\n    \"layer\": fl, //fl previously defined as FeatureLayer\n    \"maxDataValue\": 120, \n    \"noFeatureLabel\": \"No name\",\n    \"title\": \"Atlantic Hurricanes(2000)\",\n    \"unitLabel\": \"MPH\"\n  };\nvar gauge = new Gauge(gaugeParams, \"gaugeDiv\");\n  ...\n});\n```", "```js\nvar measurement = new Measurement({\n  map: map\n}, dom.byId(\"measurementDiv\"));\nmeasurement.startup();\n```", "```js\n//define custom popup options\nvar popupOptions = {\n  markerSymbol: new SimpleMarkerSymbol(\"circle\", 32, null, new Color([0, 0, 0, 0.25])),\n  marginLeft: \"20\", \n  marginTop: \"20\"\n};\n//create a popup to replace the map's info window\nvar popup = new Popup(popupOptions, dojo.create(\"div\"));\n\nmap = new Map(\"map\", {\n  basemap: \"topo\",\n  center: [-122.448, 37.788],\n  zoom: 17,\n  infoWindow: popup\n});\n```", "```js\nvar layerInfo = dojo.map(results, function(layer,index){return {layer: layer.layer,title: layer.layer.name};});if(layerInfo.length > 0){var legendDijit = new Legend({map: map,layerInfos: layerInfo},\"legendDiv\");legendDijit.startup();}\n```", "```js\nvar overviewMapDijit = new OverviewMap({map:map, visible:true});\noverviewMapDijit.startup();\n```", "```js\nvar scalebar = new esri.dijit.Scalebar({map:map,scalebarUnit:'english'});\n```", "```js\nvar directions = new Directions({\nmap: map\n},\"dir\");\n\ndirections.startup();\n```", "```js\nrequire([\"esri/dijit/HistogramTimeSlider\", ... ],\nfunction(HistogramTimeSlider, ... ){\n  var slider = new HistogramTimeSlider({\n    dateFormat: \"DateFormat(selector: 'date', fullYear: true)\",\n    layers : [ layer ],\n    mode: \"show_all\",\n    timeInterval: \"esriTimeUnitsYears\"\n  }, dojo.byId(\"histogram\"));\n  map.setTimeSlider(slider);\n});\n```", "```js\nrequire([\n      \"esri/map\", \n**\"esri/dijit/HomeButton\"**,\n      \"dojo/domReady!\"\n    ], function(\n      Map, **HomeButton**\n    )  {\n\nvar map = new Map(\"map\", {\ncenter: [-56.049, 38.485],\nzoom: 3,\nbasemap: \"streets\"\n      });\n\n**var home = new HomeButton({**\n**map: map**\n **}, \"HomeButton\");**\n**home.startup();**\n\n    });\n```", "```js\ngeoLocate = new LocateButton({\nmap: map,\nhighlightLocation: false\n}, \"LocateButton\");\ngeoLocate.startup();\n```", "```js\nvar timeSlider = new TimeSlider({\nstyle: \"width: 100%;\"\n}, dom.byId(\"timeSliderDiv\"));\nmap.setTimeSlider(timeSlider);\n\nvar timeExtent = new TimeExtent();\ntimeExtent.startTime = new Date(\"1/1/1921 UTC\");\ntimeExtent.endTime = new Date(\"12/31/2009 UTC\");\ntimeSlider.setThumbCount(2);\ntimeSlider.createTimeStopsByTimeInterval(timeExtent, 2, \"esriTimeUnitsYears\");\ntimeSlider.setThumbIndexes([0,1]);\ntimeSlider.setThumbMovingRate(2000);\ntimeSlider.startup\n```", "```js\nvarswipeWidget = new LayerSwipe({\ntype: \"vertical\",\nmap: map,\nlayers: [swipeLayer]\n}, \"swipeDiv\");\nswipeWidget.startup();\n```", "```js\nvar settings = {map: map,\n  geometryService: new GeometryService(\"http://servicesbeta.esri.com/arcgis/rest/services/Geometry/GeometryServer\"),layerInfos:featureLayerInfos};\n\nvar params = {settings: settings};**var editorWidget = new Editor(params);editorWidget.startup();**\n\n```", "```js\nfunction initEditing(results) {var templateLayers = dojo.map(results,function(result){return result.layer;});**var templatePicker = new TemplatePicker({featureLayers: templateLayers,grouping: false,rows: 'auto',columns: 3},'editorDiv');templatePicker.startup();**var layerInfos = dojo.map(results, function(result) {return {'featureLayer':result.layer};});var settings = {map: map,**templatePicker: templatePicker,**layerInfos:layerInfos};var params = {settings: settings};var editorWidget = new Editor(params);editorWidget.startup();}\n```", "```js\nvar layerInfos = [{\n  'featureLayer': petroFieldsFL,\n  'showAttachments': false,\n  'isEditable': true,\n  'fieldInfos': [\n  {'fieldName': 'activeprod', 'isEditable':true, 'tooltip': 'Current Status', 'label':'Status:'},\n  {'fieldName': 'field_name', 'isEditable':true, 'tooltip': 'The name of this oil field', 'label':'Field Name:'},\n  {'fieldName': 'approxacre', 'isEditable':false,'label':'Acreage:'},\n  {'fieldName': 'avgdepth', 'isEditable':false,'label':'Average Depth:'},\n  {'fieldName': 'cumm_oil', 'isEditable':false,'label':'Cummulative Oil:'},\n  {'fieldName': 'cumm_gas', 'isEditable':false,'label':'Cummulative Gas:'}\n]\n  }];\n\n **var attInspector = new AttributeInspector({**\n **layerInfos:layerInfos**\n **}, domConstruct.create(\"div\"));**\n\n  //add a save button next to the delete button\n  var saveButton = new Button({ label: \"Save\", \"class\":\"saveButton\"});\n domConstruct.place(saveButton.domNode,attInspector.deleteBtn.domNode, \"after\");\n\nsaveButton.on(\"click\", function(){\n  updateFeature.getLayer().applyEdits(null, [updateFeature], null);    \n});\n\n**attInspector.on(\"attribute-change\", function(evt) {**\n **//store the updates to apply when the save button is clicked** \n **updateFeature.attributes[evt.fieldName] = evt.fieldValue;**\n**});**\n\n**attInspector.on(\"next\", function(evt) {**\n **updateFeature = evt.feature;**\n **console.log(\"Next \" + updateFeature.attributes.objectid);**\n**});**\n\n**attInspector.on(\"delete\", function(evt){**\n **evt.feature.getLayer().applyEdits(null,null,[feature]);**\n **map.infoWindow.hide();**\n**});**\n\nmap.infoWindow.setContent(attInspector.domNode);\nmap.infoWindow.resize(350, 240);\n```", "```js\n   var map;require([\"esri/map\",\"esri/layers/FeatureLayer\",**\"esri/dijit/editing/AttachmentEditor\",**\"esri/config\",\"dojo/parser\", \"dojo/dom\",\"dijit/layout/BorderContainer\", \"dijit/layout/ContentPane\", \"dojo/domReady!\"], function(Map, FeatureLayer, **AttachmentEditor**, esriConfig,parser, dom) {parser.parse();// a proxy page is required to upload attachments// refer to \"Using the Proxy Page\" for more information:https://developers.arcgis.com/en/javascript/jshelp/ags_proxy.htmlesriConfig.defaults.io.proxyUrl = \"/proxy\";map = new Map(\"map\", { basemap: \"streets\",center: [-122.427, 37.769],zoom: 17});map.on(\"load\", mapLoaded);function mapLoaded() {var featureLayer = new FeatureLayer(\"http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/SanFrancisco/311Incidents/FeatureServer/0\",{mode: FeatureLayer.MODE_ONDEMAND});map.infoWindow.setContent(\"<div id='content' style='width:100%'></div>\");map.infoWindow.resize(350,200);**var attachmentEditor = new AttachmentEditor({}, dom.byId(\"content\"));attachmentEditor.startup();**featureLayer.on(\"click\", function(evt) {var objectId = evt.graphic.attributes[featureLayer.objectIdField];map.infoWindow.setTitle(objectId);**attachmentEditor.showAttachments(evt.graphic,featureLayer);**map.infoWindow.show(evt.screenPoint, map.getInfoWindowAnchor(evt.screenPoint));});map.addLayer(featureLayer);}});\n```"]