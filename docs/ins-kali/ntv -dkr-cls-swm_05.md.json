["```\n**docker-machine create -d DRIVER --engine-install-url \n    https://test.docker.com mymachine**\n\n```", "```\n**#!/bin/bash**\n**for i in `seq 0 9`; do**\n**docker-machine create -d amazonec2 --engine-install-url \n    https://test.docker.com --amazonec2-instance-type \"t2.large\" swarm-\n    worker-$i**\n**done**\n\n```", "```\n**#!/bin/bash**\n**SWARMWORKER=\"swarm-worker-\"**\n**for machine in `docker-machine ls --format {{.Name}} | grep \n    $SWARMWORKER`;**\n**do**\n**docker-machine ssh $machine sudo docker swarm join --token SWMTKN-\n    1-5c3mlb7rqytm0nk795th0z0eocmcmt7i743ybsffad5e04yvxt-\n    9m54q8xx8m1wa1g68im8srcme \\**\n **172.31.10.250:2377**\n**done**\n\n```", "```\n**# Set $GOPATH here**\n**go get https://github.com/chanwit/belt**\n\n```", "```\n**digitalocean:**\n **image: \"docker-1.12-rc4\"**\n **region: nyc3**\n **ssh_key_fingerprint: \"your SSH ID\"**\n **ssh_user: root**\n\n```", "```\n**$ belt create 16gb mg[0:2]**\n **NAME      IPv4         MEMORY  REGION         IMAGE           STATUS**\n**mg2   104.236.231.136  16384   nyc3    Ubuntu docker-1.12-rc4  active**\n **mg1   45.55.136.207    16384   nyc3    Ubuntu docker-1.12-rc4  active**\n**mg0   45.55.145.205    16384   nyc3    Ubuntu docker-1.12-rc4  active**\n\n```", "```\n**$ belt status --wait active=3**\n**STATUS  #NODES  NAMES**\n**active      3   mg2, mg1, mg0**\n\n```", "```\n**$ belt create 512mb node[1:10]**\n**$ belt status --wait active=13**\n\n```", "```\n**STATUS  #NODES  NAMES**\n**active      3   node10, node9, node8, node7**\n\n```", "```\n**git clone https://github.com/fsoppelsa/ansible-swarm**\n**cd ansible-swarm/library**\n**go build docker-machine.go**\n **go build docker_swarm.go**\n**cd ..**\n\n```", "```\n    ---    \n **name: Join the Swarm2k project**\n **hosts: localhost**\n **connection: local**\n **gather_facts: False**\n**#mg0 104.236.18.183**\n**#mg1 104.236.78.154**\n**#mg2 104.236.87.10**\n **tasks:**\n**name: Load shell variables**\n **shell: >**\n **eval $(docker-machine env \"{{ machine_name }}\")**\n **echo $DOCKER_TLS_VERIFY &&**\n **echo $DOCKER_HOST &&**\n **echo $DOCKER_CERT_PATH &&**\n **echo $DOCKER_MACHINE_NAME**\n **register: worker**\n**name: Set facts**\n **set_fact:**\n **whost: \"{{ worker.stdout_lines[0] }}\"**\n **wcert: \"{{ worker.stdout_lines[1] }}\"**\n**name: Join a worker to Swarm2k**\n **docker_swarm:**\n **role: \"worker\"**\n **operation: \"join\"**\n **join_url: [\"tcp://104.236.78.154:2377\"]**\n **secret: \"d0cker_swarm_2k\"**\n **docker_url: \"{{ whost }}\"**\n **tls_path: \"{{ wcert }}\"**\n **register: swarm_result**\n**name: Print final msg**\n **debug: msg=\"{{ swarm_result.msg }}\"**\n\n```", "```\n**#!/bin/bash**\n**SWARMWORKER=\"swarm-worker-\"**\n**for machine in `docker-machine ls --format {{.Name}} | grep \n    $SWARMWORKER`;**\n**do**\n**ansible-playbook -M library --extra-vars \"{machine_name: $machine}\" \n    playbook.yaml**\n**done**\n\n```", "```\n**docker node promote worker0**\n**docker node promote worker1**\n\n```", "```\n**docker node update --label-add type=ssd --label-add type=mysql \n    worker1**\n**docker node update --label-add type=ssd --label-add type=mysql \n    worker2**\n**docker node update --label-add type=ssd --label-add type=mysql \n    worker3**\n\n```", "```\n**docker service create --replicas 3 --constraint 'node.type == \n    mysql' --name mysql-service mysql:5.5.**\n\n```", "```\n**docker node rm worker9**\n\n```", "```\n**docker node update --availability drain worker9**\n\n```", "```\n**docker node demote manager3**\n**docker node update --availability drain manager3**\n**# Node shutdown**\n**docker node rm manager3**\n\n```", "```\n**docker node ls**\n\n```", "```\n**docker node ls --filter name=manager # prints nodes named *manager***\n**docker node ls --filter \"type=mysql\" # prints nodes with a label \n    type tagged \"mysql\"**\n\n```", "```\n**docker inspect worker1**\n\n```", "```\n**docker node inspect --format '{{ .Description.Resources }}' worker2**\n**{1000000000 1044140032}**\n\n```", "```\n**curl -sSL https://shipyard-project.com/deploy | bash -s**\n\n```", "```\n**curl -L \n    https://github.com/docker/compose/releases/download/1.8.0/docker-\n    compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \n    chmod +x /usr/local/bin/docker-compose**\n\n```", "```\n**docker-compose up -d < docker-compose.yml**\n\n```", "```\n**docker run -d -p 9000:9000 -v /var/run/:/var/run \n    portainer/portainer**\n\n```"]