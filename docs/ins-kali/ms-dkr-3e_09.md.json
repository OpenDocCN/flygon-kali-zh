["```\n$ docker container ls -a\n```", "```\n$ docker image ls\n```", "```\n$ docker container ls -a\n```", "```\n$ docker container ls --format {{.Names}}\n```", "```\n$ kubectl version\n```", "```\n$ kubectl get nodes\n```", "```\n$ kubectl get namespaces\n```", "```\n$ kubectl get --namespace kube-system pods\n```", "```\n$ kubectl describe --namespace kube-system pods kube-scheduler-docker-for-desktop \n```", "```\nName: kube-scheduler-docker-for-desktop\nNamespace: kube-system\nNode: docker-for-desktop/192.168.65.3\nStart Time: Sat, 22 Sep 2018 14:10:14 +0100\nLabels: component=kube-scheduler\n tier=control-plane\nAnnotations: kubernetes.io/config.hash=6d5c9cb98205e46b85b941c8a44fc236\n kubernetes.io/config.mirror=6d5c9cb98205e46b85b941c8a44fc236\n kubernetes.io/config.seen=2018-09-22T11:07:47.025395325Z\n kubernetes.io/config.source=file\n scheduler.alpha.kubernetes.io/critical-pod=\nStatus: Running\nIP: 192.168.65.3\nContainers:\n kube-scheduler:\n Container ID: docker://7616b003b3c94ca6e7fd1bc3ec63f41fcb4b7ce845ef7a1fb8af1a2447e45859\n Image: k8s.gcr.io/kube-scheduler-amd64:v1.10.3\n Image ID: docker-pullable://k8s.gcr.io/kube-scheduler-amd64@sha256:4770e1f1eef2229138e45a2b813c927e971da9c40256a7e2321ccf825af56916\n Port: <none>\n Host Port: <none>\n Command:\n kube-scheduler\n --kubeconfig=/etc/kubernetes/scheduler.conf\n --address=127.0.0.1\n --leader-elect=true\n State: Running\n Started: Sat, 22 Sep 2018 14:10:16 +0100\n Ready: True\n Restart Count: 0\n Requests:\n cpu: 100m\n Liveness: http-get http://127.0.0.1:10251/healthz delay=15s timeout=15s period=10s #success=1 #failure=8\n Environment: <none>\n Mounts:\n /etc/kubernetes/scheduler.conf from kubeconfig (ro)\nConditions:\n Type Status\n Initialized True\n Ready True\n PodScheduled True\nVolumes:\n kubeconfig:\n Type: HostPath (bare host directory volume)\n Path: /etc/kubernetes/scheduler.conf\n HostPathType: FileOrCreate\nQoS Class: Burstable\nNode-Selectors: <none>\nTolerations: :NoExecute\nEvents: <none>\n```", "```\n$ kubectl logs --namespace kube-system kube-scheduler-docker-for-desktop -c kube-scheduler \n```", "```\n$ kubectl logs --namespace kube-system kube-scheduler-docker-for-desktop\n```", "```\n$ kubectl exec --namespace kube-system kube-scheduler-docker-for-desktop -c kube-scheduler -- uname -a\n$ kubectl exec --namespace kube-system kube-scheduler-docker-for-desktop -- uname -a\n```", "```\n$ kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml\n```", "```\n$ kubectl get deployments --namespace kube-system\n$ kubectl get services --namespace kube-system\n```", "```\n$ kubectl proxy\n```", "```\nversion: \"3\"\nservices:\n cluster:\n image: russmckendrick/cluster\n ports:\n - \"80:80\"\n deploy:\n replicas: 6\n restart_policy:\n condition: on-failure\n placement:\n constraints:\n - node.role == worker\n```", "```\nversion: \"3\"\nservices:\n cluster:\n image: russmckendrick/cluster\n ports:\n - \"80:80\"\n deploy:\n replicas: 6\n restart_policy:\n condition: on-failure\n```", "```\n$ docker stack deploy --compose-file=docker-compose.yml cluster\n```", "```\n$ docker stack ls\n$ docker stack services cluster\n$ docker stack ps cluster\n```", "```\n$ kubectl get deployments\n**$ kubectl get services**\n```", "```\n$ docker stack rm cluster\n```", "```\n$ curl -L https://github.com/kubernetes/kompose/releases/download/v1.16.0/kompose-darwin-amd64 -o /usr/local/bin/kompose\n$ chmod +x /usr/local/bin/kompose\n```", "```\n$ choco install kubernetes-kompose\n```", "```\n$ curl -L https://github.com/kubernetes/kompose/releases/download/v1.16.0/kompose-linux-amd64 -o /usr/local/bin/kompose\n$ chmod +x /usr/local/bin/kompose\n```", "```\n$ kompose up\n```", "```\n$ kubectl get deployment,svc,pods,pvc\n```", "```\n$ kompose down\n```", "```\n$ kompose convert\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n creationTimestamp: null\n labels:\n io.kompose.service: cluster\n name: cluster\nspec:\n containers:\n - image: russmckendrick/cluster\n name: cluster\n ports:\n - containerPort: 80\n resources: {}\n restartPolicy: OnFailure\nstatus: {}\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n annotations:\n kompose.cmd: kompose convert\n kompose.version: 1.16.0 (0c01309)\n creationTimestamp: null\n labels:\n io.kompose.service: cluster\n name: cluster\nspec:\n ports:\n - name: \"80\"\n port: 80\n targetPort: 80\n selector:\n io.kompose.service: cluster\nstatus:\n loadBalancer: {}\n```", "```\n$ kubectl create -f cluster-pod.yaml\n$ kubectl create -f cluster-service.yaml\n$ kubectl get deployment,svc,pods,pvc\n```", "```\n$ kubectl delete service/cluster pod/cluster\n```"]