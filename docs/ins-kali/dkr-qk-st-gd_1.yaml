- en: Setting up a Docker Development Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Docker开发环境
- en: '"Suddenly it occurred to me: Would it not be great if my trailer could simply
    be lifted up and placed on the ship without its contents being touched?"     
                                                               - Malcolm McLean, American
    trucking entrepreneur'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “突然间我想到：如果我的拖车可以被简单地吊起并放在船上，而不触及其中的货物，那不是很好吗？” - Malcolm McLean，美国卡车企业家
- en: In this chapter, we are going to get everything set up for Docker development
    on our workstation. We will learn how to set up a Docker development environment
    on Linux, Windows, and OS X workstations. Then we will handle some post-installation
    steps for each OS. Lastly, we will learn how using Docker on each OS differs and
    what to watch out for between them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将为我们的工作站设置Docker开发环境。我们将学习如何在Linux、Windows和OS X工作站上设置Docker开发环境。然后，我们将处理每个操作系统的一些后安装步骤。最后，我们将了解在每个操作系统上使用Docker的区别以及在它们之间需要注意的事项。
- en: 'By the end of this chapter, you will know the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将了解以下内容：
- en: 'How to set up your Docker development environment, irrespective of whether
    your workstation is running on the following:'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何设置您的Docker开发环境，无论您的工作站运行在以下哪种操作系统上：
- en: CentOS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS
- en: Ubuntu
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu
- en: Windows
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows
- en: OS X
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OS X
- en: The differences to be aware of when using Docker on different OSes
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同操作系统上使用Docker时需要注意的差异
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will need a development workstation using the OS of your choice, including
    Linux, Windows, or OS X. You will need sudo or admin access on the workstation.
    And since you will be installing Docker software that will be pulled from the
    internet, you will need basic internet connectivity on your workstation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要使用您选择的操作系统（包括Linux、Windows或OS X）的开发工作站。您需要在工作站上拥有sudo或管理员访问权限。由于您将安装从互联网上拉取的Docker软件，因此您需要工作站上的基本互联网连接。
- en: 'The code files of this chapter can be found on GitHub:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在GitHub上找到：
- en: '[https://github.com/PacktPublishing/Docker-Quick-Start-Guide/tree/master/Chapter01](https://github.com/PacktPublishing/Docker-Quick-Start-Guide/tree/master/Chapter01)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Docker-Quick-Start-Guide/tree/master/Chapter01](https://github.com/PacktPublishing/Docker-Quick-Start-Guide/tree/master/Chapter01)'
- en: 'Check out the following video to see the code in action: [http://bit.ly/2rbGXqy](http://bit.ly/2rbGXqy)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的运行情况：[http://bit.ly/2rbGXqy](http://bit.ly/2rbGXqy)
- en: Setting up your Docker development environment
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置您的Docker开发环境
- en: It's time to get our hands dirty. Let's dive in and set up our workstation.
    No matter what your preferred OS might be, there's a Docker for that. Using the
    following as a guide, we will walk you through the setup of Docker on your workstation.
    We can begin with setting up your Linux workstation, then we'll tackle a Windows
    system, and finish up with what is probably the most common developer option,
    the OS X workstation. While OS X may be the most popular developer option, I would
    recommend that you consider a Linux distribution for your workstation of choice.
    We'll talk more about why I make that recommendation later in the *Installing
    Docker on an OS X workstation* section. But for now, just pay close attention
    during the Linux install discussion in case you are persuaded to develop on Linux.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候动手了。让我们开始设置我们的工作站。无论您的首选操作系统是什么，都有相应的Docker。使用以下内容作为指南，我们将带您完成在工作站上设置Docker的过程。我们可以从设置Linux工作站开始，然后解决Windows系统的问题，最后完成可能是最常见的开发者选项，即OS
    X工作站。虽然OS X可能是最受欢迎的开发者选项，但我建议您考虑将Linux发行版作为您的首选工作站。稍后在*在OS X工作站上安装Docker*部分中，我们将更多地讨论我为什么做出这样的建议。但现在，如果您被说服在Linux上开发，请在Linux安装讨论期间仔细关注。
- en: 'Generally speaking, there are two flavors of Docker to consider: Docker Enterprise
    Edition, or Docker EE, and Docker Community Edition, or Docker CE. Typically,
    in an enterprise, you would opt for the Enterprise Edition, especially for the
    production environments. It is intended for business-critical use cases, and Docker
    EE, as the name suggests, is certified, secured, and supported at an enterprise-grade
    level. It is a commercial solution that is supported by and purchased from Docker.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，有两种Docker可供选择：Docker企业版或Docker EE，以及Docker社区版或Docker CE。通常，在企业中，你会选择企业版，特别是对于生产环境。它适用于业务关键的用例，Docker
    EE正如其名，是经过认证、安全且在企业级别得到支持的。这是一个商业解决方案，由Docker提供支持并购买。
- en: The other flavor, Docker CE, is a community-supported product. CE is available
    free and is often the choice for production environments of small businesses,
    and for developer workstations. Docker CE is a fully capable solution that allows
    the developer to create containers that can be shared with team members, used
    with automated build tools for CI/CD, and, if desired, shared with the Docker
    community at large. As such, it is the ideal option for a developer's workstation.
    It is worth noting that Docker CE has two release paths: stable and edge. We will
    be using the stable release path of Docker CE for all of the installation examples
    in this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种类型，Docker CE，是一个社区支持的产品。CE是免费提供的，通常是小型企业的生产环境和开发人员工作站的选择。Docker CE是一个完全有能力的解决方案，允许开发人员创建可以与团队成员共享、用于CI/CD的自动构建工具，并且如果需要，可以与Docker社区大规模共享的容器。因此，它是开发人员工作站的理想选择。值得注意的是，Docker
    CE有两种发布路径：稳定版和测试版。在本章的所有安装示例中，我们将使用Docker CE的稳定发布路径。
- en: We are going to start off the installation discussion with CentOS Linux, but
    feel free to skip ahead to the Ubuntu, Windows, or Mac section if you are in a
    hurry.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从CentOS Linux开始安装讨论，但如果你赶时间，可以直接跳到Ubuntu、Windows或Mac部分。
- en: Installing Docker on a Linux workstation
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux工作站上安装Docker
- en: We will be executing the Linux installation steps of Docker for both an RPM-based
    workstation (using CentOS) and a DEB-based workstation (using Ubuntu) so that
    you will have instructions that fit the Linux distribution that most closely matches
    what you are currently using, or plan on using at some point in the future. We
    will begin our installation journey with CentOS.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行Docker的Linux安装步骤，分别针对基于RPM的工作站（使用CentOS）和基于DEB的工作站（使用Ubuntu），这样你就会得到最符合你当前使用的Linux发行版或将来打算使用的指导。我们将从CentOS开始我们的安装之旅。
- en: You can find all of the download links used in the installation of all OSes
    in the *References* section.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*参考*部分找到所有操作系统安装中使用的下载链接。
- en: Installing Docker on a CentOS workstation
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS工作站上安装Docker
- en: Docker CE for CentOS requires a maintained version of CentOS 7\. Although installation
    may work on archived versions, they are neither tested nor supported.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS上的Docker CE需要一个维护的CentOS 7版本。虽然安装可能在存档版本上运行，但它们既没有经过测试也没有得到支持。
- en: 'There are three methods to install Docker CE on CentOS:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上安装Docker CE有三种方法：
- en: Via Docker repositories
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Docker仓库
- en: Downloading and manually installing the RPMs
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并手动安装RPM包
- en: Running Docker's convenience scripts
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行Docker的便利脚本
- en: The most common method used is via Docker repositories, so let's begin there.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的方法是通过Docker仓库，所以让我们从那里开始。
- en: Installing Docker CE via the Docker Repository
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Docker仓库安装Docker CE
- en: 'First, we will need to install some required packages. Open a terminal window
    and enter the following command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装一些必需的软件包。打开终端窗口，输入以下命令：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will make sure that we have both the `yum-config-manager` utility and
    the device mapper storage driver installed on the system. It is illustrated in
    the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保我们在系统上安装了`yum-config-manager`实用程序和设备映射器存储驱动程序。如下截图所示：
- en: Note that your installation of CentOS 7 may already have these installed, and
    in that case the `yum install` command will report that there is nothing to do.![](Images/bbfeed5a-dfc3-4cdb-800d-8f2b7d425e18.png)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你的CentOS 7安装可能已经安装了这些，并且在这种情况下，`yum install`命令将报告没有需要安装的内容。![](Images/bbfeed5a-dfc3-4cdb-800d-8f2b7d425e18.png)
- en: Next, we will set up the CentOS stable repository for Docker CE.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为Docker CE设置CentOS稳定存储库。
- en: It is worth noting that you will still need to set up the stable repository
    even if you want to install the edge releases.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，即使你想安装边缘版本，你仍然需要设置稳定的存储库。
- en: 'Enter the following command to set up the stable repository:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下命令设置稳定的存储库：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Optionally, if you want to use the edge release, you can enable it with the
    following command:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用边缘版本，可以使用以下命令启用它：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Similarly, you can disable access to the edge release with this command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以使用这个命令禁用对边缘版本的访问：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now the fun begins... We are going to install Docker CE. To do so, enter the
    following command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始有趣的部分...我们将安装Docker CE。要这样做，请输入以下命令：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you get an error about the need to have `container-selinux` installed, use
    this command to install it, then try again:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现关于需要安装`container-selinux`的错误，请使用以下命令进行安装，然后重试：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There you have it! Installing Docker CE was way easier than you thought it was
    going to be, right?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！安装Docker CE比你想象的要容易得多，对吧？
- en: Let's use the most basic method to confirm a successful install, by issuing
    the version command.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用最基本的方法来确认安装成功，通过发出版本命令。
- en: 'This command validates that we installed Docker CE, and shows us what version
    of Docker was just installed. Enter the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令验证了我们安装了Docker CE，并显示了刚刚安装的Docker的版本。输入以下命令：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The latest version of Docker CE, at the time of writing, is 18.03.1:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，最新版本的Docker CE是18.03.1：
- en: '![](Images/93abb062-6714-4a13-83d1-a131bb53546f.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/93abb062-6714-4a13-83d1-a131bb53546f.png)'
- en: 'We have one more critical step. Although Docker CE is installed, the Docker
    daemon has not yet been started. To start it, we need to issue the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一个关键的步骤。虽然Docker CE已安装，但Docker守护程序尚未启动。要启动它，我们需要发出以下命令：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'It should quietly start up, looking something like this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该悄悄地启动，看起来像这样：
- en: '![](Images/24b47ec6-3c2d-4073-8ccd-c2ce213ba130.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/24b47ec6-3c2d-4073-8ccd-c2ce213ba130.png)'
- en: We saw how to validate that Docker installed using the version command. That
    is a great quick test, but there is an easy way to confirm not just the install,
    but that everything started and is working as expected, which is by running our
    first Docker container.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何使用版本命令验证Docker的安装。这是一个很好的快速测试，但有一种简单的方法来确认不仅安装，而且一切都按预期启动和工作，那就是运行我们的第一个Docker容器。
- en: 'Let''s issue the following command to run the hello-world container:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们发出以下命令来运行hello-world容器：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If all is well, you will see something like the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你会看到类似以下的内容：
- en: '![](Images/154e15a3-d7a5-430c-b866-1864ba153fa9.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/154e15a3-d7a5-430c-b866-1864ba153fa9.png)'
- en: We've got Docker CE installed on our CentOS workstation, and it is already working
    and running containers. We are off to a great start. Now that we know how to do
    an install using the Docker repositories, let's have a look at how to manually
    install using a downloaded RPM.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在我们的CentOS工作站上安装了Docker CE，并且它已经在运行容器。我们有了一个很好的开始。现在我们知道如何使用Docker存储库进行安装，让我们看看如何手动使用下载的RPM进行安装。
- en: Installing Docker CE manually using a downloaded RPM
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用下载的RPM手动安装Docker CE
- en: 'Another way to install Docker CE is to use a downloaded RPM. This method involves
    downloading the Docker CE RPM for the version you wish to install. You need to
    browse to the Docker CE Stable RPM downloads site. The URL for this is [https://download.docker.com/linux/centos/7/x86_64/stable/Packages](https://download.docker.com/linux/centos/7/x86_64/stable/Packages):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Docker CE的另一种方法是使用下载的RPM。这种方法涉及下载您希望安装的版本的Docker CE RPM。您需要浏览Docker CE稳定版RPM下载站点。其URL为[https://download.docker.com/linux/centos/7/x86_64/stable/Packages](https://download.docker.com/linux/centos/7/x86_64/stable/Packages)：
- en: '![](Images/70e0eff2-2b78-4c29-836e-8528b8afb3d9.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/70e0eff2-2b78-4c29-836e-8528b8afb3d9.png)'
- en: 'Click on the version of Docker CE you want to download, and when prompted,
    tell your browser to save the file. Next, issue the `yum install` command, providing
    the path and filename for the downloaded RPM file. Your command should look something
    like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 单击要下载的Docker CE版本，并在提示时告诉浏览器保存文件。接下来，发出`yum install`命令，提供已下载的RPM文件的路径和文件名。您的命令应该类似于这样：
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You will need to start the Docker daemon. You''ll use the preceding command
    in the repo section:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要启动Docker守护程序。您将在存储库部分使用前面的命令：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And, as we learned before, you can validate the functionality of your installation
    with the following commands:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，正如我们之前学到的，您可以使用以下命令验证安装的功能：
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: While this method might seem simpler and easier to execute, it is less desirable
    because it is more of a manual process, especially when it comes time to update
    your version of Docker CE. You have to again browse to the downloads page, find
    the later version, download it, then do the `yum install`. Using the Docker Repository
    method described earlier, upgrades are as simple as issuing a `yum upgrade` command.
    Let's now take a look at one more method of installing Docker CE on your CentOS
    workstation.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种方法可能看起来更简单、更容易执行，但它不太理想，因为它更多地是一个手动过程，特别是在更新Docker CE版本时。您必须再次浏览下载页面，找到更新版本，下载它，然后执行`yum
    install`。使用之前描述的Docker存储库方法，升级只需发出`yum upgrade`命令。现在让我们再看一种在您的CentOS工作站上安装Docker
    CE的方法。
- en: Installing Docker CE by running convenience scripts
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过运行便利脚本安装Docker CE
- en: The third way to install Docker is to use the convenience scripts provided by
    Docker. The scripts allow you to install either the latest edge version or the
    latest test version of Docker. It is not recommended that either of these is used
    in a production environment, but they do serve a purpose for testing and developing
    the latest Docker versions. The scripts are somewhat limited in that they do not
    allow you to customize any options during the install. The same scripts can be
    used across a variety of Linux distributions as they determine the base distro
    you are running and then do the install based on that determination. The process
    is simple.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Docker的第三种方法是使用Docker提供的便利脚本。这些脚本允许您安装Docker的最新边缘版本或最新测试版本。不建议在生产环境中使用其中任何一个，但它们确实在测试和开发最新的Docker版本时起到作用。这些脚本在某种程度上受限，因为它们不允许您在安装过程中自定义任何选项。相同的脚本可以用于各种Linux发行版，因为它们确定您正在运行的基本发行版，然后根据该确定进行安装。该过程很简单。
- en: Use `curl` to pull down the desired script, and then use sudo to run the script.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`curl`下载所需的脚本，然后使用sudo运行脚本。
- en: 'The commands to run the latest edge version are as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 运行最新的边缘版本的命令如下：
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Executing the script will result in output that looks like the following:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 执行脚本将产生以下输出：
- en: '![](Images/a09ba16c-6262-4ae3-b391-a43c0c768ff5.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/a09ba16c-6262-4ae3-b391-a43c0c768ff5.png)'
- en: 'The docker group has been created for you by the script, but since CentOS is
    RPM centric, you still need to start the Docker service yourself:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: docker组已经由脚本为您创建，但由于CentOS是以RPM为中心，您仍需要自己启动Docker服务：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If this were a Debian-based system, the Docker service would have been started
    automatically by the script.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是一个基于Debian的系统，Docker服务将会被脚本自动启动。
- en: Now that we have examined the three ways to install Docker on your CentOS workstation,
    it is a good time to discuss a few additional steps that are recommended in your
    post-installation setup.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经检查了在CentOS工作站上安装Docker的三种方法，现在是时候讨论一些推荐的后续安装设置。
- en: Post-install steps you might want to consider
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您可能要考虑的后续安装步骤
- en: All three of the install methods automatically create a docker group for you,
    but if you want to be able to run Docker commands without using `root` or sudo,
    then you will want to add your user to the docker group.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 所有三种安装方法都会自动为您创建一个docker组，但如果您希望能够在不使用`root`或sudo的情况下运行Docker命令，则需要将用户添加到docker组中。
- en: Be aware that many Docker commands require full admin access to execute, so
    adding a user to the docker group is comparable to granting them root access,
    and the security implications should be considered. If the user already has root
    access on their workstation, adding them to the docker group is only providing
    them a convenience.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，许多Docker命令需要完整的管理员访问权限才能执行，因此将用户添加到docker组相当于授予他们root访问权限，应考虑安全影响。如果用户已经在其工作站上具有root访问权限，则将其添加到docker组只是为其提供方便。
- en: 'Adding the current user to the docker group is easily accomplished with the
    following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下命令轻松将当前用户添加到docker组：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You will need to log out and log back in to update the group memberships on
    your account, but once you have done that, you should be all set to execute any
    Docker commands without using sudo.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要注销并重新登录以更新您帐户的组成员资格，但一旦您这样做了，您应该可以执行任何Docker命令而不使用sudo。
- en: 'This can be validated by running the hello-world container without sudo:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在不使用sudo的情况下运行hello-world容器来验证：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, you will want to configure your system to have the Docker service start
    on system-boot:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将希望配置系统在系统启动时启动Docker服务：
- en: '[PRE16]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Another post-install step you should consider is installing docker-compose.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能要考虑的另一个后续安装步骤是安装docker-compose。
- en: 'This tool can be an important addition to your Docker tool belt and we will
    be discussing its use in [Chapter 7](1a206f3a-faf8-43cb-9413-d1e451bd2a35.xhtml),
    *Docker Stacks*. The command to install docker-compose is:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具可以成为您的Docker工具箱的重要补充，我们将在[第7章](1a206f3a-faf8-43cb-9413-d1e451bd2a35.xhtml)中讨论其用途，*Docker
    Stacks*。安装docker-compose的命令是：
- en: '[PRE17]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Congratulations, your CentOS workstation is now ready to start developing your
    Docker images and deploying your Docker containers. Next up, we will learn how
    to install Docker onto a DEB-based system using an Ubuntu workstation. If you're
    ready, read on.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您的CentOS工作站现在已准备好开始开发您的Docker镜像并部署您的Docker容器。接下来，我们将学习如何在Ubuntu工作站上使用DEB-based系统安装Docker。如果您准备好了，请继续阅读。
- en: Installing Docker on an Ubuntu workstation
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Ubuntu工作站上安装Docker
- en: As we did on the CentOS workstation, we are going to install Docker CE on our
    Ubuntu workstation. The requirement for installing Docker CE on Ubuntu is that
    you have to be running a 64-bit recent LTS release, such as Bionic, Xenial, or
    Trusty. You can install an edge version of Docker CE onto the Artful version of
    Ubuntu.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 与在CentOS工作站上一样，我们将在Ubuntu工作站上安装Docker CE。在Ubuntu上安装Docker CE的要求是您必须运行64位的最新LTS版本，例如Bionic、Xenial或Trusty。您可以在Artful版本的Ubuntu上安装Docker
    CE的边缘版本。
- en: 'There are three methods to install Docker CE on Ubuntu:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu上安装Docker CE有三种方法：
- en: Via Docker repositories
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Docker仓库
- en: Downloading and manually installing the DEB packages
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并手动安装DEB软件包
- en: Running convenience scripts
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行方便脚本
- en: The most common method used is via Docker repositories, so let's begin there.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的方法是通过Docker存储库，所以让我们从那里开始。
- en: Installing Docker CE via the Docker Repository
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Docker存储库安装Docker CE
- en: We need to set up the Docker repository first, and then we can do the installation,
    so let's take care of the repo now.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要设置Docker存储库，然后我们可以进行安装，所以让我们现在处理存储库。
- en: 'The first step will be to update the apt package index. Use the following command
    to do that:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是更新apt软件包索引。使用以下命令来执行：
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now we need to install some supporting packages:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要安装一些支持软件包：
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next, we need to get the GPG key for Docker:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要获取Docker的GPG密钥：
- en: '[PRE20]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: You can confirm that you have added Docker's GPG key successfully; it will have
    a fingerprint of `9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以确认已成功添加了Docker的GPG密钥；它将具有`9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88`的指纹。
- en: 'You can verify the key by checking the last eight characters match `0EBFCD88`
    with this command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用以下命令检查最后八个字符是否与`0EBFCD88`匹配来验证密钥：
- en: '[PRE21]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Finally, we need to actually set up the repository. We will be focusing on the
    stable repo for our examples.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要实际设置存储库。我们将专注于我们的示例中的稳定存储库。
- en: 'If you want to install the edge or test versions of Docker CE, be sure to add
    the word `edge` or `test` after the word `stable` (do not replace the word `stable`)
    in the following command:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要安装Docker CE的边缘或测试版本，请确保在以下命令中的`stable`单词后添加`edge`或`test`（不要替换`stable`单词）：
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Now that our system is set up with the correct repository for installing Docker
    CE, let's install it.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的系统已经设置了正确的存储库来安装Docker CE，让我们来安装它。
- en: 'Start by making sure that all of the packages are up to date by issuing the `apt-get
    update` command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 首先确保所有软件包都是最新的，通过发出`apt-get update`命令：
- en: '[PRE23]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'And now we will actually install Docker CE:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将实际安装Docker CE：
- en: '[PRE24]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Docker is installed. You can check the Docker version after the install to
    confirm a successful installation:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Docker已安装。安装后，您可以检查Docker版本以确认安装成功：
- en: '[PRE25]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The version command should look something like this:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 版本命令应该类似于这样：
- en: '![](Images/51eddd17-1070-4a6e-891c-16df43cb1920.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/51eddd17-1070-4a6e-891c-16df43cb1920.png)'
- en: 'Now, let''s validate that the Docker installation is working as desired. To
    do this, we will run the hello-world Docker image using the following command:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们验证Docker安装是否按预期工作。为此，我们将使用以下命令运行hello-world Docker镜像：
- en: '[PRE26]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](Images/4abbab91-b0ea-4fc9-bf7c-6928739f5e36.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/4abbab91-b0ea-4fc9-bf7c-6928739f5e36.png)'
- en: Did you notice something interesting happened?
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 您注意到了一些有趣的事情吗？
- en: We did not have to start Docker after the installation as we did in the CentOS
    installation. That is because, on DEB-based Linux systems, the install process
    also starts Docker for us. Additionally, the Ubuntu workstation is configured
    to start Docker on boot. So both of the Docker start steps are handled for you
    during the installation. Nice! Your Ubuntu workstation now has Docker installed
    and we've verified it is working as desired.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装后，我们不需要像在CentOS安装中那样启动Docker。这是因为在基于DEB的Linux系统上，安装过程也会为我们启动Docker。此外，Ubuntu工作站已配置为在启动时启动Docker。因此，在安装过程中，这两个Docker启动步骤都已为您处理。太棒了！您的Ubuntu工作站现在已安装了Docker，并且我们已经验证它正在按预期工作。
- en: Although using the Docker repository is the best way to install Docker on your
    workstation, let's take a quick look at another way to install Docker CE on an
    Ubuntu workstation, that being by manually installing it with a DEB package.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然使用Docker存储库是在工作站上安装Docker的最佳方法，但让我们快速看一下在Ubuntu工作站上手动安装Docker CE的另一种方法，即通过使用DEB软件包手动安装它。
- en: Installing Docker CE manually using a DEB package
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DEB软件包手动安装Docker CE
- en: Now we will show you how to download and install the Docker CE DEB package.
    You should consider using this method if, for whatever reason, the repositories
    are not available for your workstation.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将向您展示如何下载和安装Docker CE DEB软件包。如果由于某种原因，软件库对您的工作站不可用，您应该考虑使用此方法。
- en: You will need to download the Docker CE package, so start by opening your browser
    and going to the Ubuntu Docker CE packages download site at [https://download.docker.com/linux/ubuntu/dists/.](https://download.docker.com/linux/ubuntu/dists/)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要下载Docker CE软件包，所以首先打开浏览器，访问Ubuntu Docker CE软件包下载站点[https://download.docker.com/linux/ubuntu/dists/.](https://download.docker.com/linux/ubuntu/dists/)
- en: 'There, you will find a list of Ubuntu version folders listed, which looks something
    like this:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里，您将找到列出的Ubuntu版本文件夹的列表，看起来像这样：
- en: '![](Images/22e51e24-f5fb-4fec-986b-3ba7eed038b9.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/22e51e24-f5fb-4fec-986b-3ba7eed038b9.png)'
- en: You want to select the folder that matches the version of Ubuntu installed on
    your workstation, which in my case is the `xenial` folder.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要选择与工作站上安装的Ubuntu版本相匹配的文件夹，对我来说是`xenial`文件夹。
- en: 'Continue browsing to `/pool/stable/` and then to the processor folder that
    matches your workstation hardware. For me that is amd64, and it looks like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 继续浏览到`/pool/stable/`，然后转到与您的工作站硬件相匹配的处理器文件夹。对我来说，那是amd64，看起来是这样的：
- en: '![](Images/2b78a600-e4fb-47a6-95d5-0332af65eebf.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/2b78a600-e4fb-47a6-95d5-0332af65eebf.png)'
- en: Now click on the version of Docker CE you want to download and install.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在单击要下载和安装的Docker CE版本。
- en: Be sure to select the Save File option before you click OK.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在单击“确定”之前，请务必选择“保存文件”选项。
- en: Once the package has been downloaded to your workstation, to install it, just use
    the `dpkg` command for manually installing a package.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦软件包已下载到您的工作站，只需使用`dpkg`命令手动安装软件包即可安装它。
- en: 'You provide the path and filename for the downloaded Docker CE package as a
    parameter to `dpkg`. Here is the command I used for the package that was just
    downloaded:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您将下载的Docker CE软件包的路径和文件名作为参数提供给`dpkg`。以下是我用于刚刚下载的软件包的命令：
- en: '[PRE27]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Executing the command looks like this:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 执行该命令如下：
- en: '![](Images/d1bfd0e2-c566-4b4e-ac1a-6e904bec3ff5.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/d1bfd0e2-c566-4b4e-ac1a-6e904bec3ff5.png)'
- en: 'Now that Docker is installed, let''s use the version command to confirm successful
    install, and then run the hello-world container to validate that Docker is working
    as desired:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Docker已安装，让我们使用版本命令来确认成功安装，然后运行hello-world容器来验证Docker是否按预期工作：
- en: '[PRE28]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This is good. Just like the repository installation, your docker group has been
    created and both of the start steps are handled for you in the manual package
    installation. You do not have to start Docker, and you do not have to configure
    Docker to start on boot. So, you are ready to start creating Docker images and
    running Docker containers.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好。就像仓库安装一样，您的docker组已创建，并且在手动软件包安装中，这两个启动步骤都已为您处理。您不必启动Docker，也不必配置Docker在启动时启动。因此，您已准备好开始创建Docker镜像和运行Docker容器。
- en: However, before we get going with creating and running, there is one more method
    of installing Docker on an Ubuntu workstation that we will cover. You can use
    Docker's convenience scripts to install the latest edge or test versions of Docker
    CE. Let's take a look at how to do that now.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我们开始创建和运行之前，还有一种在Ubuntu工作站上安装Docker的方法，我们将介绍。您可以使用Docker的便利脚本来安装Docker CE的最新边缘或测试版本。现在让我们看看如何做到这一点。
- en: Installing Docker CE by running convenience scripts
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过运行便利脚本安装Docker CE
- en: Another method of installing Docker is to use the convenience scripts provided
    by Docker. The scripts allow you to install either the latest edge version or
    the latest test version of Docker. It is not recommended that either of these
    is used in a production environment, however, they do serve a purpose for testing
    and developing the latest Docker versions. The scripts are somewhat limited in
    that they do not allow you to customize any options in the install. The same scripts
    can be used across a variety of Linux distributions as they determine the base
    distro you are running, and then do the install based on that determination. The
    process is simple. Use `curl` to pull down the desired script, and then use sudo
    to run the script. The commands to run the latest edge version are as follows.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Docker的另一种方法是使用Docker提供的便利脚本。这些脚本允许您安装最新的边缘版本或最新的测试版本的Docker。不建议在生产环境中使用其中任何一个，但它们确实在测试和开发最新的Docker版本时起到作用。这些脚本有一定的局限性，因为它们不允许您在安装中自定义任何选项。相同的脚本可以用于各种Linux发行版，因为它们确定您正在运行的基本发行版，然后根据该确定进行安装。这个过程很简单。使用`curl`拉取所需的脚本，然后使用sudo运行脚本。运行最新的边缘版本的命令如下。
- en: 'Use the following command to install curl:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装curl：
- en: '[PRE29]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now get the script and run the docker script to install:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在获取脚本并运行docker脚本进行安装：
- en: '[PRE30]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Executing the script will result in output that looks like the following:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 执行脚本将产生以下输出：
- en: '![](Images/ab1d1aed-aa83-49e9-978f-f71095f9d532.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/ab1d1aed-aa83-49e9-978f-f71095f9d532.png)'
- en: The docker group has been created for you by the script. The Docker service
    has been started, and the workstation has been configured to run Docker on boot.
    So, once again, you are ready to start using Docker.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本已为您创建了docker组。 Docker服务已启动，并且工作站已配置为在启动时运行Docker。因此，您又一次准备好开始使用Docker。
- en: We have examined the three ways to install Docker on your Ubuntu workstation,
    so now is a good time to discuss an additional step that is recommended for your
    post-installation setup.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经研究了在Ubuntu工作站上安装Docker的三种方法，现在是讨论建议的后安装设置的好时机。
- en: Post-install steps you might want to consider
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您可能要考虑的后安装步骤
- en: All three of these install methods automatically create a docker group for you,
    but if you want to be able to run Docker commands without using `root` or sudo,
    you will want to add your user to the docker group.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这三种安装方法都会自动为您创建一个docker组，但如果您想要能够在不使用`root`或sudo的情况下运行Docker命令，您将需要将您的用户添加到docker组中。
- en: Be aware that many Docker commands require full admin access to execute, so
    adding a user to the docker group is comparable to granting them root access,
    and the security implications should be considered. If the user already has root
    access on their workstation, adding them to the docker group is only providing
    them a convenience.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，许多Docker命令需要完全的管理员访问权限才能执行，因此将用户添加到docker组相当于授予他们root访问权限，应考虑安全性影响。如果用户已经在他们的工作站上具有root访问权限，则将他们添加到docker组只是为他们提供方便。
- en: 'Adding the current user to the docker group is easily accomplished with the
    following command:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 将当前用户添加到docker组中很容易通过以下命令完成：
- en: '[PRE31]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: You will need to log out and log back in to update the group memberships on
    your account, but once you have done that, you should be all set to execute any
    Docker commands without using sudo.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要注销并重新登录以更新您帐户的组成员资格，但一旦您这样做了，您就可以执行任何Docker命令而不使用sudo。
- en: 'This can be validated with the hello-world container:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过hello-world容器进行验证：
- en: '[PRE32]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Another post-install step you should consider is installing docker-compose.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该考虑的另一个后安装步骤是安装docker-compose。
- en: 'This tool can be an important addition to your Docker tool belt and we will
    be discussing its use in [Chapter 7](1a206f3a-faf8-43cb-9413-d1e451bd2a35.xhtml),
    *Docker Stacks*. The command to install docker-compose is:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具可以成为您的Docker工具箱的重要补充，我们将在第7章《Docker Stacks》中讨论其用途。安装docker-compose的命令是：
- en: '[PRE33]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Congratulations, your Ubuntu workstation is now ready to start developing your
    Docker images and deploying your Docker containers. Next up, we will learn how
    to install Docker onto a Windows-based workstation. If you're ready, read on.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您的Ubuntu工作站现在已准备好开始开发Docker镜像并部署Docker容器。接下来，我们将学习如何在基于Windows的工作站上安装Docker。如果您准备好了，请继续阅读。
- en: Installing Docker on a Windows workstation
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows工作站上安装Docker
- en: The Windows version of Docker CE is compatible with Windows 10 Pro or Enterprise
    editions. Docker CE on Windows provides a complete Docker development solution
    by integrating with Windows Hyper-V virtualization and networking. Docker CE on
    Windows supports creating and running both Windows and Linux containers. Docker
    CE on Windows is available from the Docker store at [https://store.docker.com/editions/community/docker-ce-desktop-windows](https://store.docker.com/editions/community/docker-ce-desktop-windows).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Docker CE的Windows版本与Windows 10专业版或企业版兼容。Windows上的Docker CE通过与Windows Hyper-V虚拟化和网络集成，提供了完整的Docker开发解决方案。Windows上的Docker
    CE支持创建和运行Windows和Linux容器。Windows上的Docker CE可以从Docker商店下载：[https://store.docker.com/editions/community/docker-ce-desktop-windows](https://store.docker.com/editions/community/docker-ce-desktop-windows)。
- en: You will need to log in to the Docker store to download the Docker CE for Windows
    installer, so if you don't already have an account, go ahead and create one now
    and then log in to it.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要登录Docker商店以下载Docker CE for Windows安装程序，因此，如果您还没有帐户，请立即创建一个然后登录。
- en: Be sure to save your Docker credentials securely as you will be using them a
    lot in the future.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 请务必安全地保存您的Docker凭据，因为您将在将来经常使用它们。
- en: After logging in, you should see the Get Docker download button. Click on the
    download button and allow the installer to download to your workstation. Once
    the installer has finished downloading, you can click the Run button to begin
    the installation. If you get the security check, confirm that you want to run
    the installer executable by clicking the Run button. If you have UAC enabled on
    your workstation, you may see the User Account Control warning asking you to confirm
    that you want to allow the Docker CE installer to make changes to your device.
    You have to check Yes to continue, so go ahead and click it now.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，您应该会看到“获取Docker”下载按钮。单击下载按钮，允许安装程序下载到您的工作站。一旦安装程序下载完成，您可以单击“运行”按钮开始安装。如果出现安全检查，请确认您要运行安装程序可执行文件，然后单击“运行”按钮。如果您的工作站启用了UAC，您可能会看到用户账户控制警告，询问您是否要允许Docker
    CE安装程序对设备进行更改。您必须选择“是”才能继续，所以请立即单击。
- en: 'The Docker CE installer will run and it will begin downloading Docker. Once
    the Docker installation files have been successfully downloaded, the installer
    will ask you to confirm your desired configuration. The options here are few.
    It is my recommendation that you add the shortcut to the desktop and that you
    do not check the Use Windows containers instead of Linux containers option:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Docker CE安装程序将运行，并开始下载Docker。一旦Docker安装文件成功下载，安装程序将要求您确认所需的配置。这里的选项很少。我建议您将快捷方式添加到桌面，并且不要选择使用Windows容器而不是Linux容器的选项：
- en: '![](Images/5b9ae48a-1a9d-4633-a64a-c799e62d9895.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/5b9ae48a-1a9d-4633-a64a-c799e62d9895.png)'
- en: The installer will unpack the Docker CE files. When the files are unpacked,
    you will get the Installation succeeded notification. According to the current
    documentation, the installer will run Docker for you at the end of the installation.
    It has been my experience that it does not always happen. Be patient and give
    it time, but if it does not start that first time you may have to run Docker manually.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 安装程序将解压Docker CE文件。当文件解压缩后，您将收到安装成功的通知。根据当前的文档，安装程序将在安装结束时为您运行Docker。根据我的经验，这并不总是发生。请耐心等待，但如果第一次它没有启动，您可能需要手动运行Docker。
- en: If you selected the configuration option to add a shortcut for Docker to your
    desktop, you will now be able to double-click that shortcut icon and start Docker
    for the first time.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择了将Docker添加到桌面的快捷方式配置选项，现在您可以双击该快捷方式图标，第一次启动Docker。
- en: Docker will run and you will get a Welcome screen that lets you know that Docker
    is up and running. It is recommended that you provide your Docker credentials
    and log in at this time.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Docker将运行，并且您将看到一个欢迎屏幕，告诉您Docker已经启动。建议您在此时提供您的Docker凭据并登录。
- en: 'Whenever Docker is running, you will see a whale icon in the taskbar notifications
    area. If you mouse over that icon, you can get the status of the Docker process.
    You will see such statuses as Docker is starting and Docker is running. You can
    right-click on the icon to bring up the Docker for Windows menu:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 每当Docker运行时，您将在任务栏通知区域看到一个鲸鱼图标。如果您将鼠标悬停在该图标上，您可以获取Docker进程的状态。您将看到诸如Docker正在启动和Docker正在运行等状态。您可以右键单击该图标以打开Docker
    for Windows菜单：
- en: '![](Images/705619cd-d82e-4c3a-a00a-1b846bd3e499.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/705619cd-d82e-4c3a-a00a-1b846bd3e499.png)'
- en: 'Once you have Docker running on your Windows workstation, you can open up a
    Windows PowerShell command window and start using Docker. To verify that the installation
    was completed successfully, open a PowerShell window and enter the version command.
    To confirm that Docker is working as desired, run the hello-world Docker container:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在Windows工作站上运行Docker，您可以打开Windows PowerShell命令窗口并开始使用Docker。要验证安装是否成功，请打开PowerShell窗口并输入版本命令。为了确认Docker是否按预期工作，请运行hello-world
    Docker容器：
- en: '[PRE34]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Your Windows 10 workstation is now set up to create Docker images and run Docker
    containers. Docker should also be configured to start up on boot so that when
    you need to reboot your workstation, it will start up automatically.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您的Windows 10工作站现在已设置好，可以创建Docker镜像并运行Docker容器。Docker也应该配置为在启动时启动，这样当您需要重新启动工作站时，它将自动启动。
- en: Be aware that using Docker CE on a Windows workstation is not exactly like using
    Docker CE on a Linux workstation. There is an additional layer of virtualization
    this is hidden behind the scenes. Docker is running a small Linux VM in Hyper-V
    and all of your Docker interactions are passed through, to, and from, this Linux
    VM. For most use cases, this is never going to present any issues, but it does
    affect performance. We will talk more about this in the *Discovering the differences
    to watch out for between OSes* section.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在Windows工作站上使用Docker CE并不完全像在Linux工作站上使用Docker CE那样。在幕后隐藏着一个额外的虚拟化层。Docker在Hyper-V中运行一个小型的Linux虚拟机，并且您所有的Docker交互都会通过这个Linux虚拟机进行。对于大多数用例，这永远不会出现任何问题，但它确实会影响性能。我们将在*发现操作系统之间需要注意的差异*部分详细讨论这一点。
- en: There is one more bit of setup that we want to take a look at, so if you are
    ready, jump right into the next section.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还想看一下另一个设置，所以如果您准备好了，就直接进入下一节。
- en: Post-install steps you might want to consider
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您可能想考虑的安装后步骤
- en: Here are a couple of post-install steps I recommend for your Docker Windows
    workstation.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我建议您在Docker Windows工作站上进行的一些安装后步骤。
- en: Installing Kitematic
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Kitematic
- en: The Windows installation of Docker CE integrates with a graphical user interface
    tool called Kitematic. If you are a graphical interface kind of person (and since
    you are using Windows for Docker, I will guess that you are), you will want to
    install this tool.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Docker CE的Windows安装集成了一个名为Kitematic的图形用户界面工具。如果您是图形界面类型的人（并且由于您正在使用Windows进行Docker，我猜您是），您会想要安装此工具。
- en: 'Find the `Docker` icon in the taskbar notifications area and right-click on
    it to bring up the Docker for Windows menu. Click on the Kitematic menu option.
    Kitematic is not installed by default. You have to download the archive that contains
    the application. When you click the Kitematic menu option for the first time,
    you will be prompted to download it. Click the Download button, and save the archive
    file to your workstation:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在任务栏通知区域找到`Docker`图标，右键单击它以打开Windows菜单。单击Kitematic菜单选项。Kitematic不是默认安装的。您必须下载包含应用程序的存档。当您第一次单击Kitematic菜单选项时，将提示您下载它。单击下载按钮，并将存档文件保存到您的工作站。
- en: '![](Images/b4ee253f-bc5c-4952-b206-a2dab0761e12.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b4ee253f-bc5c-4952-b206-a2dab0761e12.png)'
- en: You will need to unzip the Kitematic archive to use it. The uncompressed Kitematic
    folder needs to be in the `C:\Program Files\Docker` folder with a folder name
    of `Kitematic` for the Docker submenu integration to work correctly. Once you
    have Kitematic installed in the correct path on your Windows workstation, you
    can right-click the `Docker` icon in the task bar notifications area and select
    the Kitematic option again.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要解压Kitematic存档才能使用它。未压缩的Kitematic文件夹需要位于`C:\Program Files\Docker`文件夹中，并且文件夹名称为`Kitematic`，以便Docker子菜单集成能够正常工作。一旦您在Windows工作站的正确路径上安装了Kitematic，您可以右键单击任务栏通知区域中的`Docker`图标，然后再次选择Kitematic选项。
- en: You will be prompted to enter your Docker credentials again to connect to Docker
    Hub. You can skip this step, but it is my recommendation that you go ahead and
    log in now. Once you log in (or skip the login step), you will see the Kitematic
    user interface. It allows you to download and run Docker containers on your workstation.
    Go ahead and try one, such as the *hello-world-nginx* container, or if you want
    to play a game, try the Minecraft container.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示再次输入您的Docker凭据以连接到Docker Hub。您可以跳过此步骤，但我建议您现在就登录。一旦您登录（或跳过登录步骤），您将看到Kitematic用户界面。它允许您在工作站上下载和运行Docker容器。尝试一个，比如*hello-world-nginx*容器，或者如果您想玩游戏，可以尝试Minecraft容器。
- en: You are now ready to create Docker images and run Docker containers in your
    Windows 10 workstation, but we have one more workstation OS to learn how to install
    Docker CE on. Let's look at installing it on an OS X workstation next.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以在Windows 10工作站上创建Docker镜像并运行Docker容器，但我们还有一个工作站操作系统需要学习如何在其上安装Docker CE。让我们看看如何在OS
    X工作站上安装它。
- en: Setting up DockerCompletion for PowerShell
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为PowerShell设置DockerCompletion
- en: 'If you have ever used command-line completion, you will want to consider installing
    DockerCompletion for PowerShell. This tool provides command-line completion for
    Docker commands. It is fairly easy to install. You will need your system set up
    to allow the execution of the downloaded module. To do this, open a PowerShell
    command window with Run as Administrator, and issue the following command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您曾经使用过命令行完成，您可能会考虑为PowerShell安装DockerCompletion。此工具为Docker命令提供了命令行完成。它相当容易安装。您需要设置系统以允许执行已下载的模块。为此，请以管理员身份打开PowerShell命令窗口，并发出以下命令：
- en: '[PRE35]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You can now close the Administrator command window and open a normal user PowerShell
    command window. To install the `DockerCompletion` module, issue this command:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以关闭管理员命令窗口，并打开普通用户PowerShell命令窗口。要安装`DockerCompletion`模块，请发出以下命令：
- en: '[PRE36]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'And finally, to activate the module in your current PowerShell window, use
    this command:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在当前的PowerShell窗口中激活模块，请使用以下命令：
- en: '[PRE37]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Now you can use the features of command completion for all your Docker commands.
    This is a great keystroke saver!
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以为所有Docker命令使用命令完成功能。这是一个很好的节省按键的功能！
- en: Note that the Import-Module command is only active in the current PowerShell
    command window. If you want to have it available to all future PowerShell sessions,
    you will need to add the `Import-Module DockerCompletion` to your PowerShell profile.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Import-Module命令仅在当前的PowerShell命令窗口中有效。如果您希望在所有未来的PowerShell会话中都可用，您需要将`Import-Module
    DockerCompletion`添加到您的PowerShell配置文件中。
- en: 'You can easily edit your PowerShell profile (or create a new one if you haven''t
    already) with this command:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下命令轻松编辑您的PowerShell配置文件（如果尚未创建，则创建一个新的）：
- en: '[PRE38]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Enter the `Import-Module DockerCompletion` command and save the profile. Now
    your Docker command-line completion feature will be active in all future PowerShell
    sessions.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`Import-Module DockerCompletion`命令并保存配置文件。现在您的Docker命令行完成功能将在所有未来的PowerShell会话中激活。
- en: Installing Docker on an OS X workstation
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在OS X工作站上安装Docker
- en: 'The story for Docker on Mac has advanced a lot in recent years, and it is now
    a real, usable development solution for your Mac workstation. Docker CE for Mac
    requires OS X El Capitan 10.11 or newer macOS releases. The Docker CE app integrates
    with the hypervisor, network, and filesystem built into OS X. The installation
    process is simple: download the Docker installer image and launch it. You can
    download the installer image from the Docker store. You must log in to the Docker
    store be able to download the install image, so, create an account there if you
    don''t have one already.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，Mac上的Docker故事有了很大进展，现在它是Mac工作站的一个真正可用的开发解决方案。Docker CE for Mac需要OS X El
    Capitan 10.11或更新的macOS版本。Docker CE应用程序与OS X中内置的hypervisor、网络和文件系统集成。安装过程很简单：下载Docker安装程序镜像并启动它。您可以从Docker商店下载安装程序镜像。您必须登录Docker商店才能下载安装镜像，因此，如果尚未拥有帐户，请在那里创建一个。
- en: Be sure to save your credentials securely as you will need them later.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 请务必安全地保存您的凭据，因为以后会需要它们。
- en: Browse to the Docker store page for Docker CE for Mac at [https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac).
    Remember that you must log into the Docker store to be able to download the installer
    image.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览到Docker CE for Mac的Docker商店页面[https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)。请记住，您必须登录Docker商店才能下载安装程序镜像。
- en: 'Once logged in to the Docker store, the Get Docker button will be available
    to click. Go ahead and click on it to start the download. The Docker CE for Mac
    install image may take some time to download. When the download has completed,
    double-click on the `Docker.dmg` image file to mount and open it:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦登录到Docker商店，Get Docker按钮将可供单击。继续单击它开始下载。Docker CE for Mac安装镜像可能需要一些时间来下载。下载完成后，双击`Docker.dmg`镜像文件以挂载和打开它：
- en: '![](Images/b5757407-1b67-4886-96a8-7857bf6cd463.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b5757407-1b67-4886-96a8-7857bf6cd463.png)'
- en: Once the Docker CE for Mac image has mounted and opened, click the `Docker`
    icon and drag it onto the `Applications` icon to complete the install. The copying `Docker`
    to `Applications` action will be initiated. And when the copy process completes,
    the Docker application will be available to run from your `Applications` folder.
    Double-click on your `Docker` icon to launch it. Launching Docker for the first
    time will caution you that you are running an application downloaded from the
    internet to make sure you really want to open it. When the Docker app opens, you
    will be greeted with a friendly Welcome to Docker message.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Docker CE for Mac 镜像已挂载并打开，点击`Docker`图标并将其拖放到`应用程序`图标上以完成安装。将启动复制`Docker`到`应用程序`的操作。当复制过程完成时，Docker
    应用程序将可以从您的`应用程序`文件夹中运行。双击您的`Docker`图标来启动它。第一次启动 Docker 时，会警告您正在运行从互联网下载的应用程序，以确保您真的想要打开它。当
    Docker 应用程序打开时，您将收到友好的欢迎消息。
- en: Clicking next on the welcome message will warn you that Docker requires elevated
    privileges to run and will inform you that you must provide your credentials to
    install Docker's networking and app links. Enter your username and password. The
    Docker application will launch, adding a whale icon to the menu-notification area.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在欢迎消息上点击下一步，会警告您 Docker 需要提升的权限才能运行，并告知您必须提供凭据来安装 Docker 的网络和应用链接。输入您的用户名和密码。Docker
    应用程序将启动，将鲸鱼图标添加到菜单通知区域。
- en: You will also be prompted to enter Docker store credentials to allow Docker
    for Mac to log in to the store. Enter your credentials and click on the `Log In`
    button. You will get a confirmation showing that you are currently logged in.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将被提示输入 Docker 商店凭据，以允许 Docker for Mac 登录商店。输入您的凭据，然后点击“登录”按钮。您将收到确认消息，显示您当前已登录。
- en: 'To validate that our installation was successful and confirm the functionality
    of our installation, we will issue the version command and then run Docker''s
    hello-world container:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证我们的安装成功并确认我们的安装功能，我们将发出版本命令，然后运行 Docker 的 hello-world 容器：
- en: '[PRE39]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Your macOS workstation is now set up to create Docker images and run Docker
    containers. You are ready to containerize your apps! You can easily use your terminal
    window for all of your Docker work, but you may be interested in the graphical
    UI tool that is available for Mac, called **Kitematic**. Let's install Kitematic
    next.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 macOS 工作站现在已设置好，可以创建 Docker 镜像和运行 Docker 容器。您已经准备好将应用程序容器化了！您可以轻松使用终端窗口进行所有
    Docker 工作，但您可能对 Mac 上可用的图形 UI 工具**Kitematic**感兴趣。让我们接下来安装 Kitematic。
- en: Post-install steps you might want to consider
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装后你可能想考虑的步骤
- en: Here are a couple of post-install steps I recommend for your Docker OS X workstation.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我建议您的 Docker OS X 工作站的一些安装后步骤。
- en: Installing Kitematic
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Kitematic
- en: 'Although you can use the Docker CLI in your OS X terminal window, and probably
    will do so for most of your Docker development work, you have the option of using
    a graphical UI tool called Kitematic instead. To install Kitematic, right-click
    on the whale icon in the OS X menu-notification area to open the Docker for Mac
    menu. Click on the Kitematic menu option to download (and later to run) the Kitematic
    application. If you have not yet installed Kitematic, when you click on the Docker
    for Mac menu for it, you will be shown a message that includes a download link.
    The message also reminds you that you must install Kitematic into your `Applications`
    folder to enable Docker menu-integration. Click the here link to download the
    Kitematic application:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您可以在OS X终端窗口中使用Docker CLI，并且可能会在大部分Docker开发工作中使用它，但您也可以选择使用名为Kitematic的图形UI工具。要安装Kitematic，请右键单击OS
    X菜单通知区域中的鲸鱼图标以打开Docker for Mac菜单。单击Kitematic菜单选项以下载（以及后来运行）Kitematic应用程序。如果您尚未安装Kitematic，当您单击Docker
    for Mac菜单时，将显示包含下载链接的消息。该消息还提醒您必须将Kitematic安装到您的`Applications`文件夹中以启用Docker菜单集成。单击此处链接下载Kitematic应用程序：
- en: '![](Images/dbf3a805-51e9-448a-9656-e50c242ad008.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/dbf3a805-51e9-448a-9656-e50c242ad008.png)'
- en: Once the download completes, move the downloaded application into your `Applications`
    folder, as directed earlier. Then, using the Docker for Mac menu, click on the
    Kitematic menu option again. This time it will run the Kitematic application.
    The first time you run the application, you will get the standard warning that
    you are running something that has been downloaded from the internet, asking if
    you really want to open it. Click on the Open button to do so.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，将下载的应用程序移动到您的`Applications`文件夹中，如之前所述。然后，使用Docker for Mac菜单，再次单击Kitematic菜单选项。这次它将运行Kitematic应用程序。第一次运行应用程序时，您将收到标准警告，询问您是否真的要打开它。单击“打开”按钮以打开。
- en: Once you have Kitematic installed on your Mac workstation, you can click the Docker
    whale icon in the menu bar notifications area and select the Kitematic option
    again.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在您的Mac工作站上安装了Kitematic，您可以单击菜单栏通知区域中的Docker鲸鱼图标，然后再选择Kitematic选项。
- en: You will be prompted to enter your Docker credentials to connect Kitematic to
    Docker Hub. You can skip this step, but it is my recommendation that you go ahead
    and log in now. Once you log in (or skip the login step), you will see the Kitematic
    user interface. This allows you to download and run Docker containers on your
    workstation. Go ahead and try one, such as the *hello-world-nginx* container,
    or if you want to play a game, try the Minecraft container.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示输入您的Docker凭据以将Kitematic连接到Docker Hub。您可以跳过此步骤，但我建议您现在登录。一旦您登录（或跳过登录步骤），您将看到Kitematic用户界面。这允许您在您的工作站上下载和运行Docker容器。尝试一个，比如*hello-world-nginx*容器，或者如果您想玩游戏，可以尝试Minecraft容器。
- en: Congratulations! You are now set up to use both the Docker CLI and the Kitematic
    graphical UI to run your Docker containers and manage your Docker images. However,
    you will do your Docker image creation using the OS X terminal and your favorite
    code editor.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您现在已经设置好了使用Docker CLI和Kitematic图形用户界面来运行Docker容器和管理Docker镜像。但是，您将使用OS X终端和您喜欢的代码编辑器来创建Docker镜像。
- en: Installing Docker command-line completion
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Docker命令行完成
- en: 'Install Homebrew. You may (probably) already have Homebrew installed on your
    Mac, but if not, you should install it now. Here is the command to install it:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Homebrew。您的Mac上可能已经安装了Homebrew，但如果没有，现在应该安装它。以下是安装它的命令：
- en: '[PRE40]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Next, use Homebrew to install `bash-completion`. Here is the command:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用Homebrew安装`bash-completion`。以下是命令：
- en: '[PRE41]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The installation of `bash-completion` will instruct you to add the following
    line to your `~/.bash_profile` file:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 安装`bash-completion`会指导你将以下行添加到你的`~/.bash_profile`文件中：
- en: '[PRE42]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now, create the links necessary to enable the Docker command-line completion
    feature. There is one link for each of the Docker toolsets. Here are the link
    commands for bash (if you use `zsh`, check the next code block for the link commands):'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建必要的链接以启用Docker命令行补全功能。每个Docker工具集都有一个链接。以下是bash的链接命令（如果你使用`zsh`，请查看下一个代码块中的链接命令）：
- en: '[PRE43]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Note that if you are using `zsh` instead of bash, the link commands are different.
    Here are the link commands for `zsh`:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你使用的是`zsh`而不是bash，链接命令是不同的。以下是`zsh`的链接命令：
- en: '[PRE44]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Finally, restart your terminal session—you can now use Docker command completion!
    Try it by typing `docker` and hitting the *Tab* key twice.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重新启动你的终端会话——现在你可以使用Docker命令补全了！尝试输入`docker`并按两次*Tab*键。
- en: References
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考
- en: Docker Enterprise Edition data: [https://www.docker.com/enterprise-edition](https://www.docker.com/enterprise-edition)
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker企业版数据：[https://www.docker.com/enterprise-edition](https://www.docker.com/enterprise-edition)
- en: Docker Community Edition data: [https://www.docker.com/community-edition](https://www.docker.com/community-edition)
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker社区版数据：[https://www.docker.com/community-edition](https://www.docker.com/community-edition)
- en: Download Docker CE for CentOS: [https://store.docker.com/editions/community/docker-ce-server-centos](https://store.docker.com/editions/community/docker-ce-server-centos)
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载CentOS版的Docker CE：[https://store.docker.com/editions/community/docker-ce-server-centos](https://store.docker.com/editions/community/docker-ce-server-centos)
- en: Download Docker CE for Ubuntu: [https://store.docker.com/editions/community/docker-ce-server-ubuntu](https://store.docker.com/editions/community/docker-ce-server-ubuntu)
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载Ubuntu版的Docker CE：[https://store.docker.com/editions/community/docker-ce-server-ubuntu](https://store.docker.com/editions/community/docker-ce-server-ubuntu)
- en: Download Docker CE for Windows: [https://store.docker.com/editions/community/docker-ce-desktop-windows](https://store.docker.com/editions/community/docker-ce-desktop-windows)
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载Windows版的Docker CE：[https://store.docker.com/editions/community/docker-ce-desktop-windows](https://store.docker.com/editions/community/docker-ce-desktop-windows)
- en: Download Docker CE for Mac: [https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载Mac版的Docker CE：[https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)
- en: The Docker CE Stable RPM download site for CentOS: [https://download.docker.com/linux/centos/7/x86_64/stable/Packages](https://download.docker.com/linux/centos/7/x86_64/stable/Packages)
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS版Docker CE稳定版RPM下载站点：[https://download.docker.com/linux/centos/7/x86_64/stable/Packages](https://download.docker.com/linux/centos/7/x86_64/stable/Packages)
- en: The Docker Install Repo: [https://github.com/docker/docker-install](https://github.com/docker/docker-install)
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker安装Repo：[https://github.com/docker/docker-install](https://github.com/docker/docker-install)
- en: The Docker CE DEB package download site for Ubuntu: [https://download.docker.com/linux/ubuntu/dists/](https://download.docker.com/linux/ubuntu/dists/)
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu版Docker CE DEB包下载站点：[https://download.docker.com/linux/ubuntu/dists/](https://download.docker.com/linux/ubuntu/dists/)
- en: Running Windows Docker containers on Windows: [https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/](https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/)
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上运行Windows Docker容器：[https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/](https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/)
- en: DockerCompletion for PowerShell: [https://github.com/matt9ucci/DockerCompletion](https://github.com/matt9ucci/DockerCompletion)
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell的DockerCompletion：[https://github.com/matt9ucci/DockerCompletion](https://github.com/matt9ucci/DockerCompletion)
- en: Docker CE for Mac: [https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac版的Docker CE：[https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)
- en: Command-line completion for Mac: [https://docs.docker.com/docker-for-mac/#install-shell-completion](https://docs.docker.com/docker-for-mac/#install-shell-completion)
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac的命令行完成：[https://docs.docker.com/docker-for-mac/#install-shell-completion](https://docs.docker.com/docker-for-mac/#install-shell-completion)
- en: Installing Homebrew on your Mac: [https://brew.sh/](https://brew.sh/)
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的Mac上安装Homebrew：[https://brew.sh/](https://brew.sh/)
- en: What differences to watch out for between OSes
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统之间需要注意的差异
- en: Docker images, by design, are self-contained packages that include everything
    needed to run the application they are designed to execute. One of the great strengths
    of Docker is that Docker images can be run on almost any operating system. That
    being said, there are some differences in the experience of running Docker images
    on different OSes. Docker was created on Linux and is deeply integrated with some
    key Linux constructs. So, as you would expect, when you run Docker on Linux, everything
    integrates directly and seamlessly with the OS. Docker leverages the Linux kernel and
    filesystem natively.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: Docker镜像是自包含的软件包，包括运行它们所设计的应用程序所需的一切。Docker的一个巨大优势是，Docker镜像可以在几乎任何操作系统上运行。也就是说，在不同的操作系统上运行Docker镜像的体验会有一些差异。Docker是在Linux上创建的，并且与一些关键的Linux构造深度集成。因此，当您在Linux上运行Docker时，一切都会直接无缝地与操作系统集成。Docker原生地利用Linux内核和文件系统。
- en: Unfortunately, when you run Docker for Windows or Docker for Mac, Docker cannot
    leverage the same constructs that it does natively on Linux because they just
    do not exist on these other OSes. Docker handles this by creating a small, efficient
    Linux VM in a hypervisor for the non-Linux OS. With Docker for Windows, this Linux
    VM is created in Hyper-V. On macOS, the VM is created in a custom hypervisor,
    called **hyperkit**.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，当您在Windows或Mac上运行Docker时，Docker无法利用与Linux上原生支持的相同构造，因为这些构造在这些其他操作系统上不存在。Docker通过在非Linux操作系统中的虚拟机中创建一个小型、高效的Linux
    VM来处理这个问题。在Windows上，这个Linux VM是在Hyper-V中创建的。在macOS上，这个VM是在一个名为**hyperkit**的自定义虚拟机中创建的。
- en: As you might expect, there is a performance overhead associated with the helper
    VMs. However, if you do use Windows or OS X for your development workstation,
    you will be pleased to know that Docker has made a lot of positive strides on
    both platforms, reducing the overhead and improving performance significantly
    with each new major version released. There are a lot of reports of high CPU utilization
    for the hyperkit hypervisor on OS X, but I have not personally experienced the
    issue. With the current stable versions of Docker CE, I believe that both Windows
    and OS X can be successfully used for Docker development.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所期望的，辅助虚拟机会带来性能开销。然而，如果您确实使用Windows或OS X作为开发工作站，您会高兴地知道，Docker在这两个平台上都取得了很多积极的进展，减少了开销，并且随着每个新的主要版本的发布，性能得到了显著改善。有很多关于OS
    X上hyperkit虚拟机高CPU利用率的报告，但我个人没有遇到这个问题。我相信，使用当前稳定版本的Docker CE，Windows和OS X都可以成功用于Docker开发。
- en: 'Still, there are other differences, besides processing performance, to consider.
    There are two that you should be aware of: file mounts and endpoints.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 除了处理性能之外，还有其他一些差异需要考虑。有两个你应该知道的：文件挂载和端点。
- en: Docker CE on a Linux OS is able to directly use the filesystem for its file
    mounts in the running containers—this provides native-disk-performance levels.
    You also can change the filesystem drivers used to achieve different levels of
    performance. This is not available for Docker on Windows or Docker on Mac. For
    both Windows and OS X, there is an additional filesystem tool that handles the
    file mounts. On Windows, you will be using Windows shared files, and on OS X it
    is **osxfs**. Unfortunately for the Windows and OS X users, the performance hit
    on the file mounts is significant. Even though Docker has made leaps and bounds
    in improving the file mount story for Windows and for OS X with version 17 and
    later, both are still measurably slower compared to running natively on a Linux
    OS. For Windows specifically, the file mount options are very restrictive. If
    you are developing an application that is disk-utilization heavy, this difference
    might be enough to have you immediately consider switching to a Linux development
    workstation.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux操作系统上，Docker CE能够直接使用文件系统来进行运行容器中的文件挂载，从而提供本地磁盘性能水平。您还可以更改文件系统驱动程序以实现不同级别的性能。这在Windows或Mac上不可用。对于Windows和OS
    X，还有一个额外的文件系统工具来处理文件挂载。在Windows上，您将使用Windows共享文件，在OS X上则使用osxfs。不幸的是，对于Windows和OS
    X用户来说，文件挂载的性能损失是显著的。尽管Docker在改进Windows和OS X的文件挂载故事方面取得了长足进步，但与在Linux操作系统上本地运行相比，两者仍然明显较慢。特别是对于Windows，文件挂载选项非常受限制。如果您正在开发一个对磁盘利用率很高的应用程序，这种差异可能足以让您立即考虑切换到Linux开发工作站。
- en: One other area that differs between Docker on Linux and Docker for Windows or
    Docker for Mac is the utilization of endpoint ports. One example is with Docker
    for Windows; you are not able to access a container's endpoint from its the host
    using localhost. This is a known bug, but the only workaround is to access your
    container's endpoints from a different host than you are running them on. With
    Docker for Mac, there are other endpoint limitations, such as not being able to
    ping a container (because Docker for Mac cannot route the ping traffic to and
    from the container) and you cannot have per-container IP addressing (because the
    Docker bridge network is not reachable from macOS).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: Linux上的Docker和Windows或Mac上的Docker之间的另一个区别是端口的利用。例如，在Windows上使用Docker时，无法使用localhost从主机访问容器的端点。这是一个已知的bug，但唯一的解决方法是从与运行它们的主机不同的主机访问容器的端点。在Mac上使用Docker时，还存在其他端点限制，比如无法ping容器（因为Docker
    for Mac无法将ping流量路由到容器内部），也无法使用每个容器的IP地址（因为Docker桥接网络无法从macOS访问）。
- en: Any of these limitations might be enough for you to consider switching your
    development workstation to an Ubuntu or CentOS operating system. It was for me,
    and you will find that most of the examples found in this book will be executed
    on my Ubuntu workstation. I will try to point out any areas that may be significantly
    different if you are using Windows or OS X.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 这些任何限制可能足以让您考虑将开发工作站切换到Ubuntu或CentOS操作系统。对我来说是这样，您会发现本书中大多数示例都是在我的Ubuntu工作站上执行的。我会尽量指出如果您使用Windows或OS
    X可能会有显著不同的地方。
- en: Summary
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Wow! We covered a lot in this first chapter. You should now be able to install
    Docker on your workstation, regardless of the OS that it is running. You should
    be able to install Docker onto a Linux workstation using three different methods,
    and know some of the differences between installing on an RPM-based system and
    a DEB-based system.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！我们在这第一章涵盖了很多内容。现在，您应该能够在您的工作站上安装Docker，无论它运行的是哪种操作系统。您应该能够使用三种不同的方法在Linux工作站上安装Docker，并了解在基于RPM的系统和基于DEB的系统上安装之间的一些区别。
- en: We also covered some very significant reasons why you might consider using a
    Linux workstation for your development, instead of using a Windows or macOS workstation.
    And by now, you should be able to easily validate the successful installation
    of Docker by checking the version of Docker installed.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了一些非常重要的原因，为什么您可能会考虑使用 Linux 工作站进行开发，而不是使用 Windows 或 macOS 工作站。到目前为止，您应该能够通过检查安装的
    Docker 版本轻松验证 Docker 的成功安装。
- en: You should be able to easily confirm that Docker is working as desired by running
    a hello-world container. Not bad for your first chapter, right? Well, with this
    foundation, and your newly Docker-ready workstation, let's move right into [Chapter
    2](e66034ed-dcc0-48a8-a2ec-9466669e6649.xhtml), *Learning Docker Commands*, where
    we will learn about many Docker commands you'll use every day.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够通过运行一个 hello-world 容器轻松确认 Docker 是否按预期工作。对于你的第一章来说还不错，对吧？好了，有了这个基础和你新准备好的
    Docker 工作站，让我们直接进入[第二章](e66034ed-dcc0-48a8-a2ec-9466669e6649.xhtml) *学习 Docker
    命令*，在那里我们将学习许多你每天都会使用的 Docker 命令。
- en: References
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: Docker for Windows limitations: [https://docs.docker.com/docker-for-windows/troubleshoot/#limitations-of-windows-containers-for-localhost-and-published-ports](https://docs.docker.com/docker-for-windows/troubleshoot/#limitations-of-windows-containers-for-localhost-and-published-ports)
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker for Windows 限制：[https://docs.docker.com/docker-for-windows/troubleshoot/#limitations-of-windows-containers-for-localhost-and-published-ports](https://docs.docker.com/docker-for-windows/troubleshoot/#limitations-of-windows-containers-for-localhost-and-published-ports)
- en: Docker for Mac limitations: [https://docs.docker.com/v17.09/docker-for-mac/networking/#known-limitations-use-cases-and-workarounds](https://docs.docker.com/v17.09/docker-for-mac/networking/#known-limitations-use-cases-and-workarounds)
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker for Mac 限制：[https://docs.docker.com/v17.09/docker-for-mac/networking/#known-limitations-use-cases-and-workarounds](https://docs.docker.com/v17.09/docker-for-mac/networking/#known-limitations-use-cases-and-workarounds)
