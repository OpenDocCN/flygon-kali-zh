["```js\nsetTimeout(function(){alert(\"Hello from the past\")}, 5 * 1000);\n```", "```js\nlet xmlhttp = new XMLHttpRequest()\nxmlhttp.onreadystatechange = function()\nif (xmlhttp.readyState==4 && xmlhttp.status==200){\n  //process returned data\n}\n};\nxmlhttp.open(\"GET\", http://some.external.resource, true);\nxmlhttp.send();\n```", "```js\nlet xmlhttp;\nfunction requestData(){\n  xmlhttp = new XMLHttpRequest()\n  xmlhttp.onreadystatechange=processData;\n  xmlhttp.open(\"GET\", http://some.external.resource, true);\n  xmlhttp.send();\n}\n\nfunction processData(){\n  if (xmlhttp.readyState==4 &&xmlhttp.status==200){\n    //process returned data\n  }\n}\n```", "```js\n$.getJSON('http://some.external.resource', function(json){\n  //process returned data\n});\n```", "```js\n$.ajax('http://some.external.resource',\n  { success: function(json){\n      //process returned data\n    },\n    error: function(){\n      //process failure\n    },\n    dataType: \"json\"\n});\n```", "```js\nexport class HamiltonianTourOptions{\n  onTourStart: Function;\n  onEntryToAttraction: Function;\n  onExitFromAttraction: Function;\n  onTourCompletion: Function;\n}\n```", "```js\nclass HamiltonianTour {\n  constructor(options) {\n    this.options = options;\n  }\n  StartTour() {\n    if (this.options.onTourStart && typeof (this.options.onTourStart) === \"function\")\n      this.options.onTourStart();\n      this.VisitAttraction(\"King's Landing\");\n      this.VisitAttraction(\"Winterfell\");\n      this.VisitAttraction(\"Mountains of Dorne\");\n      this.VisitAttraction(\"Eyrie\");\n    if (this.options.onTourCompletion && typeof (this.options.onTourCompletion) === \"function\")\n      this.options.onTourCompletion();\n  }\n  VisitAttraction(AttractionName) {\n    if (this.options.onEntryToAttraction && typeof (this.options.onEntryToAttraction) === \"function\")\n      this.options.onEntryToAttraction(AttractionName);\n      //do whatever one does in a Attraction\n    if (this.options.onExitFromAttraction && typeof (this.options.onExitFromAttraction) === \"function\")\n      this.options.onExitFromAttraction(AttractionName);\n  }\n}\n```", "```js\nvar tour = new HamiltonianTour({\n  onEntryToAttraction: function(cityname){console.log(\"I'm delighted to be in \" + cityname)}});\n      tour.StartTour();\n```", "```js\nI'm delighted to be in King's Landing\nI'm delighted to be in Winterfell\nI'm delighted to be in Mountains of Dorne\nI'm delighted to be in Eyrie\n```", "```js\nls|sort|grep \"^[gb].*f$\"\n```", "```js\n **stimms@ubuntu1:/etc$ ls|sort|grep \"^[gb].*f$\"** \n\nblkid.conf\nbogofilter.cf\nbrltty.conf\ngai.conf\ngconf\ngroff\ngssapi_mech.conf\n```", "```js\n[1..10] |>List.filter (fun n -> n% 2 = 0);;\n```", "```js\n10.5 |> float |>Math.Sqrt |>Math.Round\n```", "```js\nMath.Round(Math.Sqrt((float)10.5))\n```", "```js\nArray.prototype.where = function (inclusionTest) {\n  let results = [];\n  for (let i = 0; i<this.length; i++) {\n    if (inclusionTest(this[i]))\n      results.push(this[i]);\n  }\n  return results;\n};\n```", "```js\nvar items = [1,2,3,4,5,6,7,8,9,10];\nitems.where(function(thing){ return thing % 2 ==0;});\n```", "```js\nitems.where(function(thing){ return thing % 2 ==0;})\n  .where(function(thing){ return thing % 3 == 0;});\n```", "```js\nArray.prototype.select=function(projection){\n  let results = [];\n  for(let i = 0; i<this.length;i++){\n    results.push(projection(this[i]));\n  }\n  return results;\n};\n```", "```js\nlet children = [{ id: 1, Name: \"Rob\" },\n{ id: 2, Name: \"Sansa\" },\n{ id: 3, Name: \"Arya\" },\n{ id: 4, Name: \"Brandon\" },\n{ id: 5, Name: \"Rickon\" }];\nlet filteredChildren = children.where(function (x) {\n  return x.id % 2 == 0;\n}).select(function (x) {\n  return x.Name;\n});\n```", "```js\nlet children = [{ id: 1, Name: \"Rob\" },\n{ id: 2, Name: \"Sansa\" },\n{ id: 3, Name: \"Arya\" },\n{ id: 4, Name: \"Brandon\" },\n{ id: 5, Name: \"Rickon\" }];\nlet evenIds = [];\nfor(let i=0; i<children.length;i++)\n{\n  if(children[i].id%2==0)\n    evenIds.push(children[i]);\n}\nlet names = [];\nfor(let i=0; i< evenIds.length;i++)\n{\n  names.push(evenIds[i].name);\n}\n```", "```js\nlet result = \"\";\nlet multiArray = [[1,2,3], [\"a\", \"b\", \"c\"]];\nfor(vari=0; i<multiArray.length; i++)\n  for(var j=0; i<multiArray[i].length; j++)\n    result += multiArray[i][j];\n```", "```js\nlet result = \"\";\nlet multiArray = [[1,2,3], [\"a\", \"b\", \"c\"]];\nfor(let i=0; i<multiArray.length; i++)\n  for(let j=0; j<multiArray[i].length; j++)\n    result +=multiArray[i][j];\n```", "```js\nlet peasants = [\n  {name: \"Jory Cassel\", taxesOwed: 11, bankBalance: 50},\n  {name: \"VardisEgen\", taxesOwed: 15, bankBalance: 20}];\n```", "```js\nTaxCollector.prototype.collect = function (items, value, projection) {\n  if (items.length> 1)\n    return projection(items[0]) + this.collect(items.slice(1), value, projection);\n  return projection(items[0]);\n};\n```", "```js\nfunction (item) {\n  return Math.min(item.moneyOwed, item.bankBalance);\n}\n```", "```js\nlet Fibonacci = (function () {\n  function Fibonacci() {\n  }\n  Fibonacci.prototype.NaieveFib = function (n) {\n    if (n == 0)\n      return 0;\n    if (n <= 2)\n      return 1;\n    return this.NaieveFib(n - 1) + this.NaieveFib(n - 2);\n  };\n  return Fibonacci;\n})();\n```", "```js\nlet Fibonacci = (function () {\n  function Fibonacci() {\n    this.memoizedValues = [];\n  }\n\n  Fibonacci.prototype.MemetoFib = function (n) {\n    if (n == 0)\n      return 0;\n    if (n <= 2)\n      return 1;\n    if (!this. memoizedValues[n])\n      this. memoizedValues[n] = this.MemetoFib(n - 1) + this.MemetoFib(n - 2);\n    return this. memoizedValues[n];\n  };\n  return Fibonacci;\n})();\n```", "```js\nlet numberOfQueens = 1;\nconst numberOfKings = 1;\nnumberOfQueens++;\nnumberOfKings++;\nconsole.log(numberOfQueens);\nconsole.log(numberOfKings);\n```", "```js\n2\n1\n```", "```js\nlet consts = Object.freeze({ pi : 3.141});\nconsts.pi = 7;\nconsole.log(consts.pi);//outputs 3.141\n```", "```js\n\"use strict\";\nvar consts = Object.freeze({ pi : 3.141});\nconsts.pi = 7;\n```", "```js\nconsts.pi = 7;\n          ^\nTypeError: Cannot assign to read only property 'pi' of #<Object>\n```", "```js\nvar t = Object.create(Object.prototype,\n{ value: { writable: false,\n  value: 10}\n});\nt.value = 7;\nconsole.log(t.value);//prints 10\n```", "```js\nclass Bakery {\n  constructor() {\n    this.requiredBreads = [];\n  }\n  orderBreadType(breadType) {\n    this.requiredBreads.push(breadType);\n  }\n}\n```", "```js\nvar Bakery = (function () {\n  function Bakery() {\n    this.requiredBreads = [];\n  }\n  Bakery.prototype.orderBreadType = function (breadType) {\n    this.requiredBreads.push(breadType);\n  };\n```", "```js\npickUpBread(breadType) {\n  console.log(\"Picup of bread \" + breadType + \" requested\");\n  if (!this.breads) {\n    this.createBreads();\n  }\n  for (var i = 0; i < this.breads.length; i++) {\n    if (this.breads[i].breadType == breadType)\n      return this.breads[i];\n  }\n}\ncreateBreads() {\n  this.breads = [];\n  for (var i = 0; i < this.requiredBreads.length; i++) {\n    this.breads.push(new Bread(this.requiredBreads[i]));\n  }\n}\n```", "```js\nlet bakery = new Westeros.FoodSuppliers.Bakery();\nbakery.orderBreadType(\"Brioche\");\nbakery.orderBreadType(\"Anadama bread\");\nbakery.orderBreadType(\"Chapati\");\nbakery.orderBreadType(\"Focaccia\");\n\nconsole.log(bakery.pickUpBread(\"Brioche\").breadType + \"picked up\");\n```", "```js\nPickup of bread Brioche requested.\nBread Brioche created.\nBread Anadama bread created.\nBread Chapati created.\nBread Focaccia created.\nBrioche picked up\n```", "```js\nvar item = document.getElementById(\"item1\");\nitem. addEventListener(\"click\", function(event){ /*do something */ });\n```", "```js\n[1, 4, 6, 9, 34, 56, 77, 1, 2, 3, 6, 10]\n```", "```js\n[1, 4, 6, 9, 34, 56, 77, 1, 2, 3, 6, 10].filter((x)=>x%2==0) =>\n[4, 6, 34, 56, 2, 6, 10]\n```", "```js\n<body>\n  <button id=\"button\"> Click Me!</button>\n  <span id=\"output\"></span>\n</body>\n```", "```js\n<script>\n  var counter = 0;\n  var button = document.getElementById('button');\n  var source = Rx.Observable.fromEvent(button, 'click');\n  var subscription = source.subscribe(function (e) {\n    counter++;\n    output.innerHTML = \"Clicked \" + counter + \" time\" + (counter > 1 ? \"s\" : \"\");\n  });\n</script>\n```", "```js\nvar incrementSubscription = source.subscribe(() => counter++);\nvar subscription = source.filter(x=>counter%2==0).subscribe(function (e) {\n  output.innerHTML = \"Clicked \" + counter + \" time\" +(counter > 1 ? \"s\" : \"\");\n});\n```", "```js\nsource.buffer(() => source.debounce(250))\n.map((list) => list.length)\n.filter((x) => x >= 2)\n.subscribe((x)=> {\n  counter++;\n  output.innerHTML = \"Clicked \" + counter + \" time\" + (counter > 1 ? \"s\" : \"\");\n});\n```", "```js\nRx.Observable.FromEvent(button, \"click\")\n.debounce(1000).subscribe((x)=>doSomething());\n```", "```js\nvar deaths = [\n  {\n    Name:\"Stannis\",\n    Cause: \"Cold\"\n  },\n  {\n    Name: \"Tyrion\",\n    Cause: \"Stabbing\"\n  },\n\u2026\n}\n```", "```js\nfunction generateDeathsStream(deaths) {\n  return Rx.Observable.from(deaths).zip(Rx.Observable.interval(500), (death,_)=>death);\n}\n```", "```js\ngenerateDeathsStream(deaths).sample(1500).subscribe((item) => { /*do something */ });\n```", "```js\nVar counter = 0;\ngenerateDeathsStream(deaths).subscribe((item) => { counter++ });\n```", "```js\nvar button1 = document.getElementById(\"button1\");\nvar button2 = document.getElementById(\"button2\");\nvar button3 = document.getElementById(\"button3\");\nvar button1Stream = Rx.Observable.fromEvent(button1, 'click');\nvar button2Stream = Rx.Observable.fromEvent(button2, 'click');\nvar button3Stream = Rx.Observable.fromEvent(button3, 'click');\nvar messageStream = Rx.Observable.merge(button1Stream, button2Stream, button3Stream);\nmessageStream.subscribe(function (x) { return console.log(x.type + \" on \" + x.srcElement.id); });\n```", "```js\nvar worker = Rx.DOM.fromWorker(\"worker.js\");\nbutton4Stream.subscribe(function (_) {\n  worker.onNext({ cmd: \"start\", number: 35 });\n});\n```", "```js\nvar messageStream = Rx.Observable.merge(button1Stream, button2Stream, button3Stream, worker);\nmessageStream.subscribe(function (x) {\n  appendToOutput(x.type + (x.srcElement.id === undefined ? \" with \" + x.data : \" on \" + x.srcElement.id));\n},\nfunction (err) { return appendToOutput(err, true); }\n);\n```", "```js\nvar messageStream = Rx.Observable.merge(button1Stream, button2Stream, button3Stream, worker);\nvar intervalStream = Rx.Observable.interval(5000);\nmessageStream.zip(intervalStream, function (x, _) {\n  return x;})\n.subscribe(function (x) {\n  toastr.info(x.type + (x.srcElement.id === undefined ? \" with \" + x.data : \" on \" + x.srcElement.id));\n},\nfunction (err) { return toastr.error(err); }\n);\n```", "```js\nvar processors = Rx.Observable.amb(processorStream1, processorStream2);\n```", "```js\nclass LoginModel{\n  UserName: string;\n  Password: string;\n  RememberMe: bool;\n  LoginSuccessful: bool;\n  LoginErrorMessage: string;\n}\n```", "```js\nclass LoginController {\n  constructor(model) {\n    this.model = model;\n  }\n  Login(userName, password, rememberMe) {\n    this.model.UserName = userName;\n    this.model.Password = password;\n    this.model.RememberMe = rememberMe;\n    if (this.checkPassword(userName, password))\n      this.model.LoginSuccessful;\n    else {\n      this.model.LoginSuccessful = false;\n      this.model.LoginErrorMessage = \"Incorrect username or password\";\n    }\n  }\n};\n```", "```js\nclass CreateCastleView {\n  constructor(document, controller, model, validationResult) {\n    this.document = document;\n    this.controller = controller;\n    this.model = model;\n    this.validationResult = validationResult;\n    this.document.getElementById(\"saveButton\").addEventListener(\"click\", () => this.saveCastle());\n    this.document.getElementById(\"castleName\").value = model.name;\n    this.document.getElementById(\"description\").value = model.description;\n    this.document.getElementById(\"outerWallThickness\").value = model.outerWallThickness;\n    this.document.getElementById(\"numberOfTowers\").value = model.numberOfTowers;\n    this.document.getElementById(\"moat\").value = model.moat;\n  }\n  saveCastle() {\n    var data = {\n      name: this.document.getElementById(\"castleName\").value,\n      description: this.document.getElementById(\"description\").value,\n      outerWallThickness: this.document.getElementById(\"outerWallThickness\").value,\n      numberOfTowers: this.document.getElementById(\"numberOfTowers\").value,\n      moat: this.document.getElementById(\"moat\").value\n    };\n    this.controller.saveCastle(data);\n  }\n}\n```", "```js\nclass ValidationResult{\n  public IsValid: boolean;\n  public Errors: Array<String>;\n  public constructor(){\n    this.Errors = new Array<String>();\n  }\n}\n```", "```js\nclass Controller {\n  constructor(document) {\n    this.document = document;\n  }\n  createCastle() {\n    this.setView(new CreateCastleView(this.document, this));\n  }\n  saveCastle(data) {\n    var validationResult = this.validate(data);\n    if (validationResult.IsValid) {\n      //save castle to storage\n      this.saveCastleSuccess(data);\n    }\n    else {\n      this.setView(new CreateCastleView(this.document, this, data, validationResult));\n    }\n  }\n  saveCastleSuccess(data) {\n    this.setView(new CreateCastleSuccess(this.document, this, data));\n  }\n  setView(view) {\n    //send the view to the browser\n  }\n  validate(model) {\n    var validationResult = new validationResult();\n    if (!model.name || model.name === \"\") {\n      validationResult.IsValid = false;\n      validationResult.Errors.push(\"Name is required\");\n    }\n    return;\n  }\n}\n```", "```js\nclass Model {\n  constructor(name, description, outerWallThickness, numberOfTowers, moat) {\n    this.name = name;\n    this.description = description;\n    this.outerWallThickness = outerWallThickness;\n    this.numberOfTowers = numberOfTowers;\n    this.moat = moat;\n  }\n}\n```", "```js\nclass CreateCastleView {\n  constructor(document, presenter) {\n    this.document = document;\n    this.presenter = presenter;\n    this.document.getElementById(\"saveButton\").addEventListener(\"click\", this.saveCastle);\n  }\n  setCastleName(name) {\n    this.document.getElementById(\"castleName\").value = name;\n  }\n  getCastleName() {\n    return this.document.getElementById(\"castleName\").value;\n  }\n  setDescription(description) {\n    this.document.getElementById(\"description\").value = description;\n  }\n  getDescription() {\n    return this.document.getElementById(\"description\").value;\n  }\n  setOuterWallThickness(outerWallThickness) {\n    this.document.getElementById(\"outerWallThickness\").value = outerWallThickness;\n  }\n  getOuterWallThickness() {\n    return this.document.getElementById(\"outerWallThickness\").value;\n  }\n  setNumberOfTowers(numberOfTowers) {\n    this.document.getElementById(\"numberOfTowers\").value = numberOfTowers;\n  }\n  getNumberOfTowers() {\n    return parseInt(this.document.getElementById(\"numberOfTowers\").value);\n  }\n  setMoat(moat) {\n    this.document.getElementById(\"moat\").value = moat;\n  }\n  getMoat() {\n    return this.document.getElementById(\"moat\").value;\n  }\n  setValid(validationResult) {\n  }\n  saveCastle() {\n    this.presenter.saveCastle();\n  }\n}\n```", "```js\nclass CreateCastlePresenter {\n  constructor(document) {\n    this.document = document;\n    this.model = new CreateCastleModel();\n    this.view = new CreateCastleView(document, this);\n  }\n  saveCastle() {\n    var data = {\n      name: this.view.getCastleName(),\n      description: this.view.getDescription(),\n      outerWallThickness: this.view.getOuterWallThickness(),\n      numberOfTowers: this.view.getNumberOfTowers(),\n      moat: this.view.getMoat()\n    };\n    var validationResult = this.validate(data);\n    if (validationResult.IsValid) {\n      //write to the model\n      this.saveCastleSuccess(data);\n    }\n    else {\n      this.view.setValid(validationResult);\n    }\n  }\n  saveCastleSuccess(data) {\n    //redirect to different presenter\n  }\n  validate(model) {\n    var validationResult = new validationResult();\n    if (!model.name || model.name === \"\") {\n      validationResult.IsValid = false;\n      validationResult.Errors.push(\"Name is required\");\n    }\n    return;\n  }\n}\n```", "```js\nvar CreateCastleView = (function () {\n  function CreateCastleView(document, viewModel) {\n    this.document = document;\n    this.viewModel = viewModel;\n    var _this = this;\n    this.document.getElementById(\"saveButton\").addEventListener(\"click\", function () {\n    return _this.saveCastle();\n  });\n  this.document.getElementById(\"name\").addEventListener(\"change\", this.nameChangedInView);\n  this.document.getElementById(\"description\").addEventListener(\"change\", this.descriptionChangedInView);\n  this.document.getElementById(\"outerWallThickness\").addEventListener(\"change\", this.outerWallThicknessChangedInView);\n  this.document.getElementById(\"numberOfTowers\").addEventListener(\"change\", this.numberOfTowersChangedInView);\n  this.document.getElementById(\"moat\").addEventListener(\"change\",this.moatChangedInView);\n}\nCreateCastleView.prototype.nameChangedInView = function (name) {\n  this.viewModel.nameChangedInView(name);\n};\n\nCreateCastleView.prototype.nameChangedInViewModel = function (name) {\n  this.document.getElementById(\"name\").value = name;\n};\n//snipped more of the same\nCreateCastleView.prototype.isValidChangedInViewModel = function (validationResult) {\n  this.document.getElementById(\"validationWarning\").innerHtml = validationResult.Errors;\n  this.document.getElementById(\"validationWarning\").className = \"visible\";\n};\nCreateCastleView.prototype.saveCastle = function () {\n  this.viewModel.saveCastle();\n};\nreturn CreateCastleView;\n})();\nCastleDesign.CreateCastleView = CreateCastleView;\n```", "```js\nvar CreateCastleViewModel = (function () {\n  function CreateCastleViewModel(document) {\n    this.document = document;\n    this.model = new CreateCastleModel();\n    this.view = new CreateCastleView(document, this);\n  }\n  CreateCastleViewModel.prototype.nameChangedInView = function (name) {\n    this.name = name;\n  };\n\n  CreateCastleViewModel.prototype.nameChangedInViewModel = function (name) {\n    this.view.nameChangedInViewModel(name);\n  };\n  //snip\n  CreateCastleViewModel.prototype.saveCastle = function () {\n    var validationResult = this.validate();\n    if (validationResult.IsValid) {\n      //write to the model\n      this.saveCastleSuccess();\n    } else {\n      this.view.isValidChangedInViewModel(validationResult);\n    }\n  };\n\n  CreateCastleViewModel.prototype.saveCastleSuccess = function () {\n    //do whatever is needed when save is successful.\n    //Possibly update the view model\n  };\n\n  CreateCastleViewModel.prototype.validate = function () {\n    var validationResult = new validationResult();\n    if (!this.name || this.name === \"\") {\n      validationResult.IsValid = false;\n        validationResult.Errors.push(\"Name is required\");\n    }\n    return;\n  };\n  return CreateCastleViewModel;\n})();\n```", "```js\nvar CreateCastleModel = (function () {\n  function CreateCastleModel(name, description, outerWallThickness, numberOfTowers, moat) {\n    this.name = name;\n    this.description = description;\n    this.outerWallThickness = outerWallThickness;\n    this.numberOfTowers = numberOfTowers;\n    this.moat = moat;\n  }\n  return CreateCastleModel;\n})();\n```", "```js\nvar CreateCastleModel = (function () {\n  function CreateCastleModel(name, description, outerWallThickness, numberOfTowers, moat) {\n    this.name = ko.observable(name);\n    this.description = ko.observable(description);\n    this.outerWallThickness = ko.observable(outerWallThickness);\n    this.numberOfTowers = ko.observable(numberOfTowers);\n    this.moat = ko.observable(moat);\n  }\n  return CreateCastleModel;\n})();\n```", "```js\nvar model = new CreateCastleModel();\nmodel.name(\"Winterfell\"); //set\nmodel.name(); //get\n```", "```js\nvar model = { };\nObject.observe(model, function(changes){\n  changes.forEach(function(change) {\n    console.log(\"A \" + change.type + \" occured on \" +  change.name + \".\");\n    if(change.type==\"update\")\n      console.log(\"\\tOld value was \" + change.oldValue );\n  });\n});\nmodel.item = 7;\nmodel.item = 8;\ndelete model.item;\n```", "```js\nvar Westeros;\n(function (Westeros) {\n  (function (Religion) {\n      \u2026\n  })(Westeros.Religion || (Westeros.Religion = {}));\n  var Religion = Westeros.Religion;\n})(Westeros || (Westeros = {}));\n(function (Westeros) {\n  var Tournament = (function () {\n    function Tournament() {\n  }\n  return Tournament;\n})();\nWesteros.Tournament = Tournament;\n\u2026\n})();\nWesteros.Attendee = Attendee;\n})(Westeros || (Westeros = {}));\n```", "```js\nvar Westros;(function(Westros){(function(Food){var SimpleIngredient=(function(){function SimpleIngredient(name,calories,ironContent,vitaminCContent){this.name=name;this.calories=calories;this.ironContent=ironContent;this.vitaminCContent=vitaminCContent}SimpleIngredient.prototype.GetName=function(){return this.name};SimpleIngredient.prototype.GetCalories=function(){return this.calories};SimpleIngredient.prototype.GetIronContent=function(){return this.ironContent};SimpleIngredient.prototype.GetVitaminCContent=function(){return this.vitaminCContent};return SimpleIngredient})();Food.SimpleIngredient=SimpleIngredient;var CompoundIngredient=(function(){function CompoundIngredient(name){this.name=name;this.ingredients=new Array()}CompoundIngredient.prototype.AddIngredient=function(ingredient){this.ingredients.push(ingredient)};CompoundIngredient.prototype.GetName=function(){return this.name};CompoundIngredient.prototype.GetCalories=function(){var total=0;for(var i=0;i<this.ingredients.length;i++){total+=this.ingredients[i].GetCalories()}return total};CompoundIngredient.prototype.GetIronContent=function(){var total=0;for(var i=0;i<this.ingredients.length;i++){total+=this.ingredients[i].GetIronContent()}return total};CompoundIngredient.prototype.GetVitaminCContent=function(){var total=0;for(var i=0;i<this.ingredients.length;i++){total+=this.ingredients[i].GetVitaminCContent()}return total};return CompoundIngredient})();Food.CompoundIngredient=CompoundIngredient})(Westros.Food||(Westros.Food={}));var Food=Westros.Food})(Westros||(Westros={}));\n```", "```js\n$(\":input\").css(\"background-color\", \"blue\");\n```", "```js\n$($(\":input\")[2]).css(\"background-color\", \"blue\");\n```", "```js\n$.fn.yeller = function(){\n  this.each(function(_, item){\n    $(item).val($(item).val().toUpperCase());\n    return this;\n  });\n};\n```", "```js\n$(function(){$(\"input\").yeller();});\n```", "```js\n(function($){\n  $.fn.yeller2 = function(){\n    this.each(function(_, item){\n      $(item).val($(item).val().toUpperCase());\n      return this;\n    });\n  };\n})(jQuery);\n```", "```js\n$(\u00ab.dialog\u00bb).dialog(\u00abopen\u00bb);\n$(\u00ab.dialog\u00bb).dialog(\u00abclose\u00bb);\n```", "```js\n$(\u00ab.dialog\u00bb).dialog().open();\n$(\u00ab.dialog\u00bb).dialog().close();\n```", "```js\nvar svg = d3.select(containerId).append(\"svg\")\nvar bar = svg.selectAll(\"g\").data(data).enter().append(\"g\");\nbar.append(\"rect\")\n.attr(\"height\", yScale.rangeBand()).attr(\"fill\", function (d, _) {\n  return colorScale.getColor(d);\n})\n.attr(\"stroke\", function (d, _) {\n  return colorScale.getColor(d);\n})\n.attr(\"y\", function (d, i) {\n  return yScale(d.Id) + margins.height;\n})\n```", "```js\nd3.scale.groupedColorScale = function () {\n  var domain, range;\n\n  function scale(x) {\n    var rangeIndex = 0;\n    domain.forEach(function (item, index) {\n      if (item.indexOf(x) > 0)\n        rangeIndex = index;\n    });\n    return range[rangeIndex];\n  }\n\n  scale.domain = function (x) {\n    if (!arguments.length)\n      return domain;\n    domain = x;\n    return scale;\n  };\n\n  scale.range = function (x) {\n    if (!arguments.length)\n      return range;\n    range = x;\n    return scale;\n  };\n  return scale;\n};\n```", "```js\nvar s = d3.scale.groupedColorScale().domain([[1, 2, 3], [4, 5]]).range([\"#111111\", \"#222222\"]);\ns(3); //#111111\ns(4); //#222222\n```", "```js\nself.addEventListener('message', function(e) {\n  var data = e.data;\n  if(data.cmd == 'startCalculation'){\n    self.postMessage({event: 'calculationStarted'});\n    var result = fib(data.parameters.number);\n    self.postMessage({event: 'calculationComplete', result: result});\n  };\n}, false);\n```", "```js\nfunction startThread(){\n  worker =  new Worker(\"worker.js\");\n  worker.addEventListener('message', function(message) {\n    logEvent(message.data.event);\n    if(message.data.event == \"calculationComplete\"){\n      writeResult(message.data.result);\n    }\n    if(message.data.event == \"calculationStarted\"){\n      document.getElementById(\"result\").innerHTML = \"working\";\n    }\n  });\n};\n```", "```js\nworker.postMessage({cmd: 'startCalculation', parameters: { number: 40}});\n```", "```js\n$.ajax({\n  url : 'someurl',\n  type : 'POST',\n  data :  ....,\n  tryCount : 0,\n  retryLimit : 3,\n  success : function(json) {\n    //do something\n  },\n  error : function(xhr, textStatus, errorThrown ) {\n    if (textStatus == 'timeout') {\n      this.tryCount++;\n      **if (this.tryCount <= this.retryLimit) {** \n\n **//try again** \n\n **$.ajax(this);** \n\n **return;** \n\n      }\n      return;\n    }\n    if (xhr.status == 500) {\n      //handle error\n    } else {\n      //handle error\n    }\n  }\n});\n```", "```js\nvar xmlhttp = new XMLHttpRequest(); \nxmlhttp.onreadystatechange = function() { \n  if (xmlhttp.readyState === 4){ \n    alert(xmlhttp.readyState); \n  }\n;};\n```", "```js\n$.ajax(\"/some/url\",\n{ success: function(data, status){},\n  error: function(jqXHR, status){}\n});\n```", "```js\n$.ajax(\"/some/url\").then(successFunction, errorFunction);\n```", "```js\n$.ajax(\"/some/url\").then(\n  function(data, status){},\n  function(jqXHR, status){\n    //handle the error here and return a new promise\n  }\n).then(/*continue*/);\n```", "```js\n$.ajax(\"/some/url\").then(function(data, status){})\n.catch(function(jqXHR, status){\n  //handle the error here and return a new promise\n})\n.then(/*continue*/);\n```", "```js\nwhen(function(){return 2+2;})\n.delay(1000)\n.then(function(promise){ console.log(promise());})\n```", "```js\ndocument.getElementById(\"button1\").addEventListener(\"click\", doSomething);\n```", "```js\nvar IsHiredSalary = { __name: \"isHiredSalary\",\n  __alsoCall: [\"isHired\"],\n  employeeId: 77,\n  \u2026\n}\n```", "```js\nclass CrowMailBus {\n  constructor(requestor) {\n    this.requestor = requestor;\n    this.responder = new CrowMailResponder(this);\n  }\n  Send(message) {\n    if (message.__from == \"requestor\") {\n      this.responder.processMessage(message);\n    }\n    else {\n      this.requestor.processMessage(message);\n    }\n  }\n}\n```", "```js\nclass CrowMailRequestor {\n  Request() {\n    var message = { __messageDate: new Date(),\n    __from: \"requestor\",\n    __corrolationId: Math.random(),\n    body: \"Hello there. What is the square root of 9?\" };\n    var bus = new CrowMailBus(this);\n    bus.Send(message);\n    console.log(\"message sent!\");\n  }\n  processMessage(message) {\n    console.dir(message);\n  }\n}\n```", "```js\nclass CrowMailResponder {\n  constructor(bus) {\n    this.bus = bus;\n  }\n  processMessage(message) {\n    var response = { __messageDate: new Date(),\n    __from: \"responder\",\n    __corrolationId: message.__corrolationId,\n    body: \"Okay invaded.\" };\n    this.bus.Send(response);\n    console.log(\"Reply sent\");\n  }\n}\n```", "```js\nclass CrowMailBus {\n  constructor(requestor) {\n    this.requestor = requestor;\n    this.responder = new CrowMailResponder(this);\n  }\n  Send(message) {\n    if (message.__from == \"requestor\") {\n      process.nextTick(() => this.responder.processMessage(message));\n    }\n    else {\n      process.nextTick(() => this.requestor.processMessage(message));\n    }\n  }\n}\n```", "```js\nRequest sent!\nReply sent\n{ __messageDate: Mon Aug 11 2014 22:43:07 GMT-0600 (MDT),\n  __from: 'responder',\n  __corrolationId: 0.5604551520664245,\n  body: 'Okay, invaded.' }\n```", "```js\nCrowMailBus.prototype.Subscribe = function (messageName, subscriber) {\n  this.responders.push({ messageName: messageName, subscriber: subscriber });\n};\n```", "```js\nPublish(message) {\n  for (let i = 0; i < this.responders.length; i++) {\n    if (this.responders[i].messageName == message.__messageName) {\n      (function (b) {\n        process.nextTick(() => b.subscriber.processMessage(message));\n      })(this.responders[i]);\n    }\n  }\n}\n```", "```js\nprocessMessage(message) {\n  var response = { __messageDate: new Date(),\n  __from: \"responder\",\n  __corrolationId: message.__corrolationId,\n  __messageName: \"SquareRootFound\",\n  body: \"Pretty sure it is 3.\" };\n  this.bus.Publish(response);\n  console.log(\"Reply published\");\n}\n```", "```js\nvar bus = new CrowMailBus();\nbus.Subscribe(\"KingdomInvaded\", new TestResponder1());\nbus.Subscribe(\"KingdomInvaded\", new TestResponder2());\nvar requestor = new CrowMailRequestor(bus);\nrequestor.Request();\n```", "```js\nvar TestResponder1 = (function () {\n  function TestResponder1() {}\n  TestResponder1.prototype.processMessage = function (message) {\n    console.log(\"Test responder 1: got a message\");\n  };\n  return TestResponder1;\n})();\n```", "```js\nMessage sent!\nReply published\nTest responder 1: got a message\nTest responder 2: got a message\nCrow mail responder: got a message\n```", "```js\nradio(\"KingdomInvalid\").subscribe(new TestResponder1().processMessage);\nradio(\"KingdomInvalid\").subscribe(new TestResponder2().processMessage);\n```", "```js\nradio(\"KingdomInvalid\").broadcast(message);\n```", "```js\nclass Combiner {\n  constructor() {\n    this.waitingForChunks = 0;\n  }\n  combine(ingredients) {\n    console.log(\"Starting combination\");\n    if (ingredients.length > 10) {\n      for (let i = 0; i < Math.ceil(ingredients.length / 2); i++) {\n        this.waitingForChunks++;\n        console.log(\"Dispatched chunks count at: \" + this.waitingForChunks);\n        var worker = new Worker(\"FanOutInWebWorker.js\");\n        worker.addEventListener('message', (message) => this.complete(message));\n        worker.postMessage({ ingredients: ingredients.slice(i, i * 2) });\n      }\n    }\n  }\n  complete(message) {\n    this.waitingForChunks--;\n    console.log(\"Outstanding chunks count at: \" + this.waitingForChunks);\n    if (this.waitingForChunks == 0)\n      console.log(\"All chunks received\");\n  }\n};\n```", "```js\nself.addEventListener('message', function (e) {\n  var data = e.data;\n  var ingredients = data.ingredients;\n  combinedIngredient = new Westeros.Potion.CombinedIngredient();\n  for (let i = 0; i < ingredients.length; i++) {\n    combinedIngredient.Add(ingredients[i]);\n  }\n  console.log(\"calculating combination\");\n  setTimeout(combinationComplete, 2000);\n}, false);\n\nfunction combinationComplete() {\n  console.log(\"combination complete\");\n  (self).postMessage({ event: 'combinationComplete', result: combinedIngredient });\n}\n```", "```js\nclass CreateUserv1Message implements IMessage{\n  __messageName: string\n  UserName: string;\n  FirstName: string;\n  LastName: string;\n  EMail: string;\n}\n```", "```js\nclass CreateUserv2Message extends CreateUserv1Message implements IMessage{\n  UserTitle: string;\n}\n```", "```js\nvar CreateUserv2tov1Downgrader = (function () {\n  function CreateUserv2tov1Downgrader (bus) {\n    this.bus = bus;\n  }\n  CreateUserv2tov1Downgrader.prototype.processMessage = function (message) {\n    message.__messageName = \"CreateUserv1Message\";\n    delete message.UserTitle;\n    this.bus.publish(message);\n  };\n  return CreateUserv2tov1Downgrader;\n})();\n```", "```js\n **ls -1| cut -d \\. -f 2 -s | sort |uniq** \n\n```", "```js\n **| Company Id| Name | Address | City | Postal Code | Phone Number |** \n\n```", "```js\n **| Company Id| Name | Address | City | Postal Code | Phone Number | 2016 orders Total |** \n\n```", "```js\n **| Company Id| Name | Address | City | Postal Code | Phone Number | 2016 orders Total | 2017 Sales Estimate |** \n\n```", "```js\n **| Name | Address | City | Postal Code | Phone Number | 2016 orders Total | 2017 Sales Estimate |** \n\n```", "```js\nclass CastleBuilder {\n  buildCastle(size) {\n    var castle = new Castle();\n    castle.size = size;\n    return castle;\n  }\n}\n```", "```js\nfunction When_building_a_castle_size_should_be_correctly_set() {\n  var castleBuilder = new CastleBuilder();\n  var expectedSize = 10;\n  var builtCastle = castleBuilder.buildCastle(10);\n  assertEqual(expectedSize, builtCastle.size);\n}\n```", "```js\nfunction assertEqual(expected, actual){\n  if(expected !== actual)\n  throw \"Got \" + actual + \" but expected \" + expected;\n}\n```", "```js\nvar SpyUpon = (function () {\n  function SpyUpon() {\n  }\n  SpyUpon.prototype.write = function (toWrite) {\n    console.log(toWrite);\n  };\n  return SpyUpon;\n})();\n```", "```js\nvar spyUpon = new SpyUpon();\nspyUpon._write = spyUpon.write;\nspyUpon.write = function (arg1) {\n  console.log(\"intercepted\");\n  this.called = true;\n  this.args = arguments;\n  this.result = this._write(arg1, arg2, arg3, arg4, arg5);\n  return this.result;\n};\n```", "```js\nconsole.log(spyUpon.write(\"hello world\"));\nconsole.log(spyUpon.called);\nconsole.log(spyUpon.args);\nconsole.log(spyUpon.result);\n```", "```js\nhello world\n7\ntrue\n{ '0': 'hello world' }\n7\n```", "```js\nclass Knight {\n  constructor(credentialFactory) {\n    this.credentialFactory = credentialFactory;\n  }\n  presentCredentials(toRoyalty) {\n    console.log(\"Presenting credentials to \" + toRoyalty);\n    toRoyalty.send(this.credentialFactory.Create());\n    return {};\n  }\n}\n```", "```js\nclass StubCredentialFactory {\n  constructor() {\n    this.callCounter = 0;\n  }\n  Create() {\n    //manually create a credential\n  };\n}\n```", "```js\nclass StubCredentialFactory {\n  constructor() {\n    this.callCounter = 0;\n  }\n  Create() {\n    if (this.callCounter == 0)\n      return new SimpleCredential();\n    if (this.callCounter == 1)\n      return new CredentialWithSeal();\n    if (this.callCounter == 2)\n      return null;\n    this.callCounter++;\n  }\n}\n```", "```js\nvar knight = new Knight(new StubCredentialFactory());\nknight.presentCredentials(\"Queen Cersei\");\n```", "```js\nvar knight = new Knight(new StubCredentialFactory());\nvar credentials = knight.presentCredentials(\"Lord Snow\");\nassert(credentials.type === \"SimpleCredentials\");\ncredentials = knight.presentCredentials(\"Queen Cersei\");\nassert(credentials.type === \"CredentialWithSeal\");\ncredentials = knight.presentCredentials(\"Lord Stark\");\nassert(credentials == null);\n```", "```js\nclass MockCredentialFactory {\n  constructor() {\n    this.timesCalled = 0;\n  }\n  Create() {\n    this.timesCalled++;\n  }\n  Verify() {\n    assert(this.timesCalled == 3);\n  }\n}\n```", "```js\nvar credentialFactory = new MockCredentialFactory();\nvar knight = new Knight(credentialFactory);\nvar credentials = knight.presentCredentials(\"Lord Snow\");\ncredentials = knight.presentCredentials(\"Queen Cersei\");\ncredentials = knight.presentCredentials(\"Lord Stark\");\ncredentialFactory.Verify();\n```", "```js\nvar mock = sinon.mock(myAPI);\nmock.expects(\"method\").once().throws();\n```", "```js\nvar casper = require('casper').create();\ncasper.start('http://google.com', function() {\n  assert.false($(\"#gbqfq\").attr(\"aria-haspopup\"));\n  $(\"#gbqfq\").val(\"redis\");\n  assert.true($(\"#gbqfq\").attr(\"aria-haspopup\"));\n});\n```", "```js\nvar jsdom = require(\"jsdom\");\njsdom.env( '<p><a class=\"the-link\" ref=\"https://github.com/tmpvar/jsdom\">jsdom!</a></p>',[\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    assert.equal(window.$(\"a.the-link\").text(), \"jsdom!\");\n  }\n);\n```", "```js\nclass PageModel{\n  titleVisible: boolean;\n  users: Array<User>;\n}\n```", "```js\nvar model = new PageModel();\nmodel.titleVisible = false;\nvar controller = new UserListPageController(model);\ncontroller.AddUser(new User());\nassert.true(model.titleVisible);\n```", "```js\nfunction testMapping(){\n  //Arrange\n  \u2026\n  //Act\n  \u2026\n  //Assert\n  \u2026\n}\n```", "```js\nvar UserManager = (function () {\n  function UserManager(database, userEmailer) {\n    this.database = database;\n    this.userEmailer = userEmailer;\n  }\n  return UserManager;\n})();\n```", "```js\nUserManager.toString()\n```", "```js\n@Inject(CoffeeMaker, Skillet, Stove, Fridge, Dishwasher)\nexport class Kitchen {\n  constructor(coffeeMaker, skillet, stove, fridge, dishwasher) {\n    this.coffeeMaker = coffeeMaker;\n    this.skillet = skillet;\n    this.stove = stove;\n    this.fridge = fridge;\n    this.dishwasher = dishwasher;\n  }\n}\n```", "```js\n@Provide(CoffeeMaker)\n@Inject(Filter, Container)\nexport class BodumCoffeeMaker{\n  constructor(filter, container){\n  \u2026\n  }\n}\n```", "```js\nclass Axe{\n  constructor(public handleLength, public headHeight){}\n}\n```", "```js\nvar Axe = (function () {\n  function Axe(handleLength, headHeight) {\n    this.handleLength = handleLength;\n    this.headHeight = headHeight;\n  }\n  return Axe;\n})();\n```", "```js\nclass Axe{\n  constructor(handleLength, /*public*/ headHeight){}\n}\n```", "```js\nfunction publicParameters(func){\n  var stringRepresentation = func.toString();\n  var parameterString = stringRepresentation.match(/^function .*\\((.*)\\)/)[1];\n  var parameters = parameterString.split(\",\");\n  var setterString = \"\";\n  for(var i = 0; i < parameters.length; i++){\n    if(parameters[i].indexOf(\"public\") >= 0){\n      var parameterName = parameters[i].split('/')[parameters[i].split('/').length-1].trim();\n      setterString += \"this.\" +  parameterName + \" = \" + parameterName + \";\\n\";\n    }\n  }\n  var functionParts = stringRepresentation.match(/(^.*{)([\\s\\S]*)/);\n  return functionParts[1] + setterString + functionParts[2];\n}\n\nconsole.log(publicParameters(Axe));\n```", "```js\nvar GoldTransfer = (function () {\n  function GoldTransfer() {\n  }\n  GoldTransfer.prototype.SendPaymentOfGold = function (amountOfGold, destination) {\n    var user = Security.GetCurrentUser();\n    if (Security.IsAuthorized(user, \"SendPaymentOfGold\")) {\n      //send actual payment\n    } else {\n      return { success: 0, message: \"Unauthorized\" };\n    }\n  };\n  return GoldTransfer;\n})();\n```", "```js\nclass GoldTransfer {\n  SendPaymentOfGold(amountOfGold, destination) {\n    var user = Security.GetCurrentUser();\n    if (Security.IsAuthorized(user, \"SendPaymentOfGold\")) {\n    }\n    else {\n     return { success: 0, message: \"Unauthorized\" };\n    }\n  }\n}\n```", "```js\nclass ToWeaveIn {\n   BeforeCall() {\n    console.log(\"Before!\");\n  }\n  AfterCall() {\n    console.log(\"After!\");\n  }\n}\n```", "```js\nfunction weave(toWeave, toWeaveIn, toWeaveInName) {\n  for (var property in toWeave.prototype) {\n    var stringRepresentation = toWeave.prototype[property].toString();\n    console.log(stringRepresentation);\n    if (stringRepresentation.indexOf(\"@aspect(\" + toWeaveInName + \")\")>= 0) {\n      toWeave.prototype[property + \"_wrapped\"] = toWeave.prototype[property];\n      toWeave.prototype[property] = function () {\n      toWeaveIn.BeforeCall();\n      toWeave.prototype[property + \"_wrapped\"]();\n      toWeaveIn.AfterCall();\n    };\n    }\n  }\n}\n```", "```js\nvar _ = require(\"underscore\");\nexport class Person{\n}\nexport class ReanimatedPerson{\n}\nexport class RideHorseMixin{\n  public Ride(){\n    console.log(\"I'm on a horse!\");\n  }\n}\n\nvar person = new Person();\nvar reanimatedPerson = new ReanimatedPerson();\n_.extend(person, new RideHorseMixin());\n_.extend(reanimatedPerson, new RideHorseMixin());\n\nperson.Ride();\nreanimatedPerson.Ride();\n```", "```js\nlet var = macro {\n  rule { [$var (,) ...] = $obj:expr } => {\n    var i = 0;\n    var arr = $obj;\n    $(var $var = arr[i++]) (;) ...\n  }\n\n  rule { $id } => {\n    var $id\n  }\n}\n```", "```js\nvar [foo, bar, baz] = arr;\n```", "```js\nvar i = 0;\nvar arr$2 = arr;\nvar foo = arr$2[i++];\nvar bar = arr$2[i++];\nvar baz = arr$2[i++];\n```", "```js\nclass CrowMessenger {\n  @spy\n  public SendMessage(message: string) {\n    console.log(`Send message is ${message}`);\n  }\n}\nvar c = new CrowMessenger();\nvar r = c.SendMessage(\"Attack at dawn\");\n```", "```js\nfunction spy(target: any, key: string, descriptor?: any) {\n  if(descriptor === undefined) {\n    descriptor = Object.getOwnPropertyDescriptor(target, key);\n  }\n  var originalMethod = descriptor.value;\n\n  descriptor.value =  function (...args: any[]) {\n    var arguments = args.map(a => JSON.stringify(a)).join();\n    var result = originalMethod.apply(this, args);\n    console.log(`Message sent was: ${arguments}`);\n    return result;\n  }\n  return descriptor;\n}\n```", "```js\ndescriptor.value =  function (...args: any[]) {\n  var arguments = args.map(a => JSON.stringify(a)).join();\n  **var result = \"Retreat at once\";** \n\n  console.log(`Message sent was: ${arguments}`);\n  return result;\n}\n```", "```js\n$.post(\"someurl\", function(){\n  $.post(\"someotherurl\", function(){\n    $.get(\"yetanotherurl\", function(){\n      navigator.geolocation.getCurrentPosition(function(location){\n        ...\n      })\n    })\n  })\n})\n```", "```js\nnavigator.geolocation.getCurrentPosition(function(location){\n  $.post(\"/post/url\", function(result){\n    $.get(\"/get/url\", function(){\n   });\n  });\n});\n```", "```js\nasync function getPosition(){\n  return await navigator.geolocation.getCurrentPosition();\n}\nasync function postUrl(geoLocationResult){\n  return await $.post(\"/post/url\");\n}\nasync function getUrl(postResult){\n  return await $.get(\"/get/url\");\n}\nasync function performAction(){\n  var position = await getPosition();\n  var postResult = await postUrl(position);\n  var getResult = await getUrl(postResult);\n}\n```", "```js\nvar a_number: number;\nvar a_string: string;\nvar an_html_element: HTMLElement;\n```", "```js\nvar numbers: Array<number> = [];\nnumbers.push(7);\nnumbers.push(9);\nvar unknown = numbers.pop();\n```", "```js\nconsole.log(unknown.substr(0,1));\n```", "```js\n **npm install \u2013g babel-cli** \n\n```", "```js\n **babel  input.js --o output.js** \n\n```", "```js\nexport class BaseStructure {\n  constructor() {\n    console.log(\"Structure built\");\n  }\n}\n\nexport class Castle extends BaseStructure {\n  constructor(name){\n    this.name = name;\n    super();\n  }\n  Build(){\n    console.log(\"Castle built: \" + this.name);\n  }\n}\n```", "```js\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeofcall === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BaseStructure = exports.BaseStructure = function BaseStructure() {\n  _classCallCheck(this, BaseStructure);\n  console.log(\"Structure built\");\n};\n\nvar Castle = exports.Castle = function (_BaseStructure) {\n  _inherits(Castle, _BaseStructure);\n  function Castle(name) {\n    _classCallCheck(this, Castle);\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Castle).call(this));\n    _this.name = name;\n    return _this;\n  }\n  _createClass(Castle, [{\n    key: \"Build\",\n    value: function Build() {\n      console.log(\"Castle built: \" + this.name);\n    }\n  }]);\n  return Castle;\n}(BaseStructure);\n```", "```js\nx = 22;\n```", "```js\nvar x = 22;\n```", "```js\nfunction CreateFeast(meat, drink = \"wine\"){\n  console.log(\"The meat is: \" + meat);\n  console.log(\"The drink is: \" + drink);\n}\nCreateFeast(\"Boar\", \"Beer\");\nCreateFeast(\"Venison\");\n```", "```js\nThe meat is: Boar\nThe drink is: Beer\nThe meat is: Venison\nThe drink is: wine\n```", "```js\n\"use strict\";\nfunction CreateFeast(meat) {\n  var drink = arguments.length <= 1 || arguments[1] === undefined ? \"wine\" : arguments[1];\n  console.log(\"The meat is: \" + meat);\n  console.log(\"The drink is: \" + drink);\n}\nCreateFeast(\"Boar\", \"Beer\");\nCreateFeast(\"Venison\");\n```", "```js\nname= \"Stannis\";\nprint \"The one true king is ${name}\"\n```", "```js\nvar name = \"Stannis\";\nconsole.log(`The one true king is ${name}`);\n```", "```js\nvar army1Size = 5000;\nvar army2Size = 3578;\nconsole.log(`The surviving army will be ${army1Size > army2Size ? \"Army 1\": \"Army 2\"}`);\n```", "```js\nvar army1Size = 5000;\nvar army2Size = 3578;\nconsole.log((\"The surviving army will be \" + (army1Size > army2Size ? \"Army 1\" : \"Army 2\")));\n```", "```js\nif(true)\n{\n  var outside = 9;\n}\nconsole.log(outside);\n```", "```js\nif(true)\n{\n  var outside = 9;\n  et inside = 7;\n}\nconsole.log(outside);\nconsole.log(inside);\n```", "```js\nvar inside$__0;\nif (true) {\n  var outside = 9;\n  inside$__0 = 7;\n}\nconsole.log(outside);\nconsole.log(inside);\n```", "```js\n_.filter(collection, (item) => item.Id > 3);\n```"]