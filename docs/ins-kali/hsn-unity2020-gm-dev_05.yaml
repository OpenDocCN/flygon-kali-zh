- en: '*Chapter 5*: Importing and Integrating Assets'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第5章*：导入和整合资产'
- en: In the previous chapter, we created the prototype of our level. Now, let's suppose
    that we have coded the game and tested it, validating the idea. With that, it's
    time to change the prototype art to the real finished art. Actually, we are going
    to code the game in Part 3, but for learning purposes, let's just skip that part
    for now. In order to use final assets, we need to learn how to get them (images,
    3D models, and so on), how to import them into Unity, and how to use them in our
    scene.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了我们的关卡的原型。现在，假设我们已经编写了游戏并对其进行了测试，验证了这个想法。因此，现在是时候将原型艺术改为真正的完成艺术了。实际上，我们将在第3部分编写游戏，但出于学习目的，让我们暂时跳过这部分。为了使用最终资产，我们需要学习如何获取它们（图像、3D模型等），如何将它们导入Unity，并如何在我们的场景中使用它们。
- en: 'In this chapter, we will examine the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将研究以下主题：
- en: Importing assets
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入资产
- en: Integrating assets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合资产
- en: Configuring assets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置资产
- en: Importing assets
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入资产
- en: We have different sources of assets we can use in our project. We can simply
    get a file from our artist, download them from different free and paid assets
    sites, or we can use the Asset Store, Unity's official virtual asset store, where
    we can get free and paid assets ready to use with Unity. We will use a mix of
    downloading an asset from the internet and from the Asset Store, just to get all
    possible resources.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在项目中使用不同的资产来源。我们可以简单地从我们的艺术家那里获取文件，从不同的免费和付费资产网站下载它们，或者我们可以使用资产商店，Unity的官方虚拟资产商店，在那里我们可以获取准备在Unity中使用的免费和付费资产。我们将使用从互联网和资产商店下载资产的混合方式，以获取所有可能的资源。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖与导入资产相关的以下概念：
- en: Importing assets from the internet
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从互联网导入资产
- en: Importing assets from the Asset Store
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从资产商店导入资产
- en: Downloading and importing assets into our project from the internet
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从互联网下载并导入我们项目中的资产
- en: Importing assets from the internet
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从互联网导入资产
- en: 'In terms of getting art assets for our project, let''s start with our terrain
    textures. Remember that we have our terrain painted with a grid pattern, so the
    idea is to replace that with grass, mud, rock, and other kinds of textures. To
    do that, we must get images. In this case, these kinds of images are usually top-down
    views of different terrain patterns, and they have the requirement of being "tileable."
    You can see an example of this in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取项目的艺术资产方面，让我们从地形纹理开始。请记住，我们的地形上有一个网格图案，所以想法是用草、泥土、岩石和其他类型的纹理替换它。为此，我们必须获取图像。在这种情况下，这些图像通常是不同地形图案的俯视图，并且它们必须是“可平铺的”。您可以在以下截图中看到一个示例：
- en: '![Figure 5.1 – Left: grass patch; right: the same grass patch separated to
    highlight the texture tiling'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.1 – 左：草块；右：将同一草块分开以突出纹理平铺'
- en: '](img/Figure_5.01_B14199(Merged).jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.01_B14199(Merged).jpg)'
- en: 'Figure 5.1 – Left: grass patch; right: the same grass patch separated to highlight
    the texture tiling'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 – 左：草块；右：将同一草块分开以突出纹理平铺
- en: The grass on the left seems to be one single big image, but if you pay attention,
    you should be able to see some patterns repeating themselves. In this case, this
    grass is just a single image repeated four times in a grid, like the one on the
    right. This way, you can cover large areas by repeating a single small image,
    saving lots on RAM on your computer.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 左边的草看起来是一个单一的大图像，但如果您留意，应该能够看到一些重复出现的图案。在这种情况下，这种草只是一个在网格中重复四次的单个图像，就像右边的那个。这样，您可以通过重复单个小图像来覆盖大面积，从而节省计算机内存。
- en: 'The idea is to get these kinds of images to paint our terrain. You can get
    them from several places, but the easiest way is to use Google Images or any Image
    Search Engine. To do this, follow these steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 想法是获取这些类型的图像来绘制我们的地形。你可以从几个地方获取它们，但最简单的方法是使用Google图片或任何图片搜索引擎。要做到这一点，请按照以下步骤操作：
- en: Open your browser (Chrome, Safari, Edge, and so on).
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的浏览器（Chrome、Safari、Edge等）。
- en: Go to your preferred search engine. In this case, I will use Google.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到您喜欢的搜索引擎。在这种情况下，我将使用Google。
- en: Use the keywords `PATTERN tileable texture`, replacing `PATTERN` with the kind
    of terrain you are looking for, such as `grass tileable texture` or `mud tileable
    texture`. In this case, I am going to type `grass tileable texture` and then press
    *Enter* to search.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用关键词`PATTERN tileable texture`，将`PATTERN`替换为您正在寻找的地形类型，例如`grass tileable texture`或`mud
    tileable texture`。在这种情况下，我将输入`grass tileable texture`，然后按*Enter*进行搜索。
- en: Switch to image search mode:![Figure 5.2 – Google Search for images
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到图像搜索模式：![图5.2 – Google图像搜索
- en: '](img/Figure_5.02_B14199.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.02_B14199.jpg)'
- en: Figure 5.2 – Google Search for images
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2 – Google图像搜索
- en: Find any texture you find suitable for the kind of grass you need and click
    it. Remember that the texture must be a top-down view of the grass and must repeat.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到任何您认为适合所需草坪的纹理并单击它。请记住，纹理必须是草的俯视图，并且必须重复。
- en: Important Note
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Try to check the image's resolution before picking it. Try to select squared
    images that have a resolution less than 1024 x 1024 for now.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择图像之前，请尝试检查图像的分辨率。现在，请尝试选择分辨率小于1024 x 1024的正方形图像。
- en: Right-click the opened image and select **Save image as…**:![Figure 5.3 – Save
    image as… option
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击打开的图像，然后选择**另存为图像…**：![图5.3 – 另存为图像…选项
- en: '](img/Figure_5.03_B14199.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.03_B14199.jpg)'
- en: Figure 5.3 – Save image as… option
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.3 – 另存为图像…选项
- en: Save the image in any folder you will remember.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图像保存在您记得的任何文件夹中。
- en: 'Now that you have downloaded the image, you can add it to your project in several
    ways. The simplest one would be doing the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经下载了图像，可以通过几种方式将其添加到您的项目中。最简单的方法是执行以下操作：
- en: Locate your image using **File Explorer** (**Finder** in Mac).
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**文件资源管理器**（Mac中的**Finder**）找到您的图像。
- en: Locate or create the `Textures` folder in the Project window in Unity.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity的项目窗口中找到或创建`Textures`文件夹。
- en: Put both File Explorer and Unity Project Window next to each other.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件资源管理器和Unity项目窗口并排放置。
- en: 'Drag the file from File Explorer to the `Textures` folder in the Unity Project
    Window:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件从文件资源管理器拖到Unity项目窗口的`Textures`文件夹中：
- en: '![Figure 5.4 – Texture being dragged from File Explorer to Unity´s Project
    View'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.4 - 从文件资源管理器拖动纹理到Unity项目视图'
- en: '](img/Figure_5.04_B14199.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.04_B14199.jpg)'
- en: Figure 5.4 – Texture being dragged from File Explorer to Unity´s Project View
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.4 - 从文件资源管理器拖动纹理到Unity项目视图
- en: For simple textures like these ones, any search engine can be helpful, but if
    you want to replace the Player´s Base geometry with detailed walls and doors or
    place enemies in your scene, you need to get 3D models. If you search for those
    in any search engine using keywords such as "free zombie 3D model," you will find
    endless free and paid 3D models sites such as TurboSquid and Mixamo, but those
    sites can be problematic because those meshes are usually not prepared for being
    used in Unity, or even in games. You will find models with very high polygon counts,
    incorrect sizes or orientations, unoptimized textures, and so on. To prevent those
    problems, we'll want to use a better source, and in this case, we will use Unity´s
    Asset Store, so let's explore it.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些简单的纹理，任何搜索引擎都可以帮助，但如果你想用详细的墙壁和门替换玩家的基础几何图形，或者在场景中放置敌人，你需要获取3D模型。如果你使用关键词如“免费僵尸3D模型”在任何搜索引擎中搜索，你会找到无数的免费和付费3D模型网站，如TurboSquid和Mixamo，但这些网站可能存在问题，因为这些网格通常没有准备好在Unity中使用，甚至在游戏中使用。你会发现模型的多边形数量非常高，尺寸或方向不正确，纹理未经优化等等。为了避免这些问题，我们需要使用更好的来源，在这种情况下，我们将使用Unity的资产商店，所以让我们来探索一下。
- en: Importing assets from the Asset Store
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从资产商店导入资产
- en: The Asset Store is Unity's official asset marketplace where you can find lots
    of models, textures, sounds, and even entire Unity plugins to extend the capabilities
    of the engine. In this case, we will limit ourselves to downloading 3D models
    to replace the Player´s Base prototype. You will want to get 3D models with a
    modular design, meaning that you will get several pieces such as walls, floors,
    corners, and so on. You can connect them to create any kind of scenario.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 资产商店是Unity的官方资产市场，你可以在那里找到很多模型、纹理、声音，甚至整个Unity插件，以扩展引擎的功能。在这种情况下，我们将限制自己下载3D模型来替换玩家的基础原型。你会想要获取模块化设计的3D模型，意味着你会得到几个部分，如墙壁、地板、角落等等。你可以连接它们来创建任何类型的场景。
- en: 'In order to do that, you must follow these steps:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，你必须按照以下步骤进行：
- en: Click on **Window | Asset Store** in Unity, which will open a new window saying
    the Asset Store has moved. In previous versions of Unity, you could see the Asset
    Store directly inside the editor, but now it is recommended to open it in a regular
    web browser, so just click the **Search online** button:![Figure 5.5 – Asset Store
    moved message
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity中点击**窗口|资产商店**，这将打开一个新窗口，显示资产商店已经移动。在之前的Unity版本中，你可以直接在编辑器中看到资产商店，但现在建议在常规网络浏览器中打开它，所以只需点击**在线搜索**按钮：![图5.5
    - 资产商店已移动消息
- en: '](img/Figure_5.05_B14199.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.05_B14199.jpg)'
- en: Figure 5.5 – Asset Store moved message
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5 - 资产商店已移动消息
- en: Your browser will open showing a site similar to the one in the following screenshot:![Figure
    5.6 – Asset Store home page
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的浏览器将打开一个类似于以下截图的网站：![图5.6 - 资产商店首页
- en: '](img/Figure_5.06_B14199.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.06_B14199.jpg)'
- en: Figure 5.6 – Asset Store home page
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.6 - 资产商店首页
- en: In the right panel, open the 3D category by clicking the arrow to its right.
    Then, open **Environments** and check the **Sci-Fi** mark. As you can see, there
    are several categories for finding different types of assets, and you can pick
    another one if you want to. In **Environments**, you will find 3D models that
    can be used to generate the scenery for your game.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧面板中，点击其右侧的箭头打开3D类别。然后，打开**环境**并勾选**科幻**标记。如你所见，有几个类别可以找到不同类型的资产，如果你愿意，你可以选择另一个。在**环境**中，你会找到可以用来生成游戏场景的3D模型。
- en: If you need to, you can pay for an asset, but let's hide the paid ones for now.
    You can do that by searching through the **Pricing** section on the sidebar, opening
    it using the plus (**+**) symbol on its right, and then checking the **Free Assets**
    checkbox:![Figure 5.7 – Free Assets option
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要的话，你可以为资产付费，但现在让我们先隐藏付费的资产。你可以通过侧边栏的**定价**部分进行搜索，使用其右侧的加号（**+**）符号打开它，然后勾选**免费资产**复选框：![图5.7
    - 免费资产选项
- en: '](img/Figure_5.07_B14199.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.07_B14199.jpg)'
- en: Figure 5.7 – Free Assets option
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.7 - 免费资产选项
- en: In the search area, find any asset that seems to have the aesthetic you are
    looking for and click it. Remember to look out for outdoors assets, because most
    environment packs are usually interiors only. In my case, I have picked one called
    **Sci-Fi Styled Modular Pack** that serves for both interiors and exteriors. Take
    into account that that package might not exist by the time you are reading this,
    so you might need to choose another one. If you don't find a suitable package,
    you can download the asset files we used in the GitHub repository. Please refer
    to the preface instructions of how to access the it.![Figure 5.8 – Preview of
    Asset Store searched packages
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索区域，找到任何看起来具有你所寻找美学的资产，并点击它。记得留意户外资产，因为大多数环境包通常只有室内。在我的情况下，我选择了一个名为**科幻风格模块化包**的资产，它适用于室内和室外。请注意，到你阅读本书时，该包可能已经不存在，所以你可能需要选择另一个。如果你找不到合适的包，你可以下载我们在GitHub存储库中使用的资产文件。请参考如何访问它的前言说明。![图5.8
    - 资产商店搜索包的预览
- en: '](img/Figure_5.08_B14199.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.08_B14199.jpg)'
- en: Figure 5.8 – Preview of Asset Store searched packages
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.8 - 资产商店搜索包的预览
- en: Important Note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: At the time of writing this book, Unity is releasing the "Snaps" packages, which
    are a set of official Unity 3D models that can be used for the modular design
    of different kinds of environments. Some of them are paid, while others are free
    – I recommend that you try them out.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，Unity正在发布“Snaps”包，这是一组官方Unity 3D模型，可用于不同类型环境的模块化设计。其中一些是付费的，而另一些是免费的
    - 我建议你试试看。
- en: Now, you will see the package details in the Asset Store window. Here, you can
    find information regarding the package's description, videos/images, the package's
    contents, and the most important part, the reviews, where you can check whether
    the package is worth buying if it's a paid one:![Figure 5.9 – Asset Store package
    details
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将在资产商店窗口中看到包的详细信息。在这里，你可以找到关于包的描述、视频/图片、包的内容，以及最重要的部分，评论，你可以查看包是否值得购买，如果是付费的话：![图5.9
    – 资产商店包详情
- en: '](img/Figure_5.09_B14199.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.09_B14199.jpg)'
- en: Figure 5.9 – Asset Store package details
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.9 – 资产商店包详情
- en: If you are OK with this package, click the **Add To My Assets** button, log
    in to Unity if requested and then click **Open In Unity** button. You might be
    prompted to accept a switch of apps to Unity – just accept:![Figure 5.10 – Switching
    apps
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你对这个包满意，点击**添加到我的资产**按钮，如果需要的话登录Unity，然后点击**在Unity中打开**按钮。你可能会被提示接受切换到Unity应用程序
    – 只需接受：![图5.10 – 切换应用程序
- en: '](img/Figure_5.10_B14199.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.10_B14199.jpg)'
- en: Figure 5.10 – Switching apps
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.10 – 切换应用程序
- en: This will open the **Package Manger** again, but this time in **My Assets**
    mode, showing a list of all the assets you have ever downloaded from the Asset
    Store, and the one you just selected highlighted in the list. You might need to
    log again in Unity clicking the Sign In button if you are not logged in Unity
    Hub.![Figure 5.11 – Package Manager showing assets
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将再次打开**包管理器**，但这次是以**我的资产**模式，显示你从资产商店下载过的所有资产的列表，以及你刚刚在列表中选择的那个被突出显示的资产。如果你没有在Unity
    Hub中登录，你可能需要点击登录按钮重新登录Unity。![图5.11 – 包管理器显示资产
- en: '](img/Figure_5.11_B14199.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.11_B14199.jpg)'
- en: Figure 5.11 – Package Manager showing assets
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.11 – 包管理器显示资产
- en: Click on **Download** at the bottom-right part of the window and wait for it
    to end. Then hit **Import.** Double check that you have the proper asset package
    selected from the list.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击窗口右下角的**下载**，等待下载完成。然后点击**导入**。双重检查你是否从列表中选择了正确的资产包。
- en: After a while, the **Package Contents** Window will show up, allowing you to
    select exactly which assets of the package you want in your project. For now,
    leave it as-is and click **Import**:![Figure 5.12 – Assets to import
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过了一会儿，**包内容** 窗口将会出现，允许你选择包中的哪些资产要放入你的项目中。现在，保持原样，点击**导入**：![图5.12 – 要导入的资产
- en: '](img/Figure_5.12_B14199.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.12_B14199.jpg)'
- en: Figure 5.12 – Assets to import
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.12 – 要导入的资产
- en: After some importing time, you will see all the package files in your Project
    Window.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一段时间后导入，你将在项目窗口中看到所有的包文件。
- en: 'Take into account that importing lots of full packages will increase your project''s
    size considerably, and that, later, you will probably want to remove the assets
    that you didn''t use. Also, if you import assets that generate errors that prevent
    you from playing the scene, just delete all the `.cs` files that come with the
    package. They are usually in folders called `Scripts`. Those are code files that
    might not be compatible with your Unity version. In *Part 3*, we will learn how
    to make our own so that those are not necessary:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，导入大量完整的包将大大增加你项目的大小，而且以后你可能想要删除你没有使用的资产。另外，如果导入的资产生成了错误，阻止你播放场景，只需删除包中附带的所有`.cs`文件。它们通常在名为`Scripts`的文件夹中。这些是可能与你的Unity版本不兼容的代码文件。在*第3部分*中，我们将学习如何制作我们自己的，这样就不需要这些了：
- en: '![Figure 5.13 – Code error warning when hitting play'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.13 – 点击播放时的代码错误警告'
- en: '](img/Figure_5.13_B14199.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.13_B14199.jpg)'
- en: Figure 5.13 – Code error warning when hitting play
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.13 – 点击播放时的代码错误警告
- en: Important Note
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The Asset Store is prone to changes, even if you are using the same Unity version
    I am using, so the previous steps may be changed by Unity without notice. Also,
    its contents change often, and you may not find the same packages used in this
    book. In such case, you can find another similar package, or take the files i
    used from the GitHub repo (links and instructions in the Preface).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 资产商店容易发生变化，即使你使用的是和我一样的Unity版本，所以之前的步骤可能会被Unity改变而没有通知。而且，它的内容经常变化，你可能找不到本书中使用的相同的包。在这种情况下，你可以找到另一个类似的包，或者从GitHub仓库中获取我使用的文件（在前言中有链接和说明）。
- en: Before you continue with this chapter, try to download an enemy character using
    the Asset Store, following the previous steps. In order to solve this exercise,
    you must complete the same steps as before but look in the **3D | Characters |
    Humanoid** category of the Asset Store.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续本章之前，尝试使用资产商店下载一个敌人角色，按照之前的步骤。为了解决这个练习，你必须完成之前的相同步骤，但是在资产商店的**3D | 人物 | 人形**类别中查找。
- en: Now that we have imported lots of art assets, let's learn how to use them in
    our scene.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了大量的艺术资产，让我们学习如何在场景中使用它们。
- en: Integrating assets
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 整合资产
- en: We have just imported lots of files that can be used in several ways, so the
    idea of this section is to see how Unity integrates those assets with the GameObjects
    and components that need them.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚导入了许多可以以多种方式使用的文件，所以这一部分的目的是看看Unity如何将这些资产与需要它们的游戏对象和组件整合在一起。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖与导入资产相关的以下概念：
- en: Integrating terrain textures
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合地形纹理
- en: Integrating meshes
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合网格
- en: Integrating materials
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合材质
- en: Let's start using tileable textures to cover the terrain.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用平铺纹理来覆盖地形。
- en: Integrating terrain textures
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 整合地形纹理
- en: 'In order to apply textures to our terrain, do the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将纹理应用到我们的地形，做如下操作：
- en: Select the **Terrain** object.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**地形**对象。
- en: In the **Inspector**, click the brush icon of the **Terrain** component (second
    button).
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**检视器**中，点击**地形**组件的刷子图标（第二个按钮）。
- en: From the drop-down menu, select **Paint Texture**:![Figure 5.14 – The Paint
    Texture option
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择**油漆纹理**：![图5.14 – 油漆纹理选项
- en: '](img/Figure_5.14_B14199.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.14_B14199.jpg)'
- en: Figure 5.14 – The Paint Texture option
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.14 – 油漆纹理选项
- en: Click the **Edit Terrain Layers… | Create Layer** option.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编辑地形层… | 创建层**选项。
- en: Look for the terrain texture you downloaded previously in the texture picker
    window that appears:![Figure 5.15 – Texture picker
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在纹理选择器窗口中查找之前下载的地形纹理：![图5.15-纹理选择器
- en: '](img/Figure_5.15_B14199.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.15_B14199.jpg)'
- en: Figure 5.15 – Texture picker
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.15-纹理选择器
- en: You will see how the texture will be immediately applied to the whole terrain.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到纹理将立即应用于整个地形。
- en: Repeat *steps 4* and *5* to add other textures. This time, you will see that
    that texture is not immediately applied.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*和*5*来添加其他纹理。这一次，您会发现该纹理不会立即应用。
- en: In the **Terrain Layers** section, select the new texture you have created to
    start painting with that. I used a mud texture in my case.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**地形层**部分，选择您创建的新纹理开始绘制。在我的案例中，我使用了泥浆纹理。
- en: Like when you edited the terrain, in the **Brushes** section, you can select
    and configure a brush to paint the terrain.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像编辑地形时，在**画笔**部分，您可以选择并配置一个画笔来绘制地形。
- en: In the Scene view, paint the areas you want to have that texture applied to.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在场景视图中，绘制您希望应用该纹理的区域。
- en: If your texture patterns are too obvious, select your texture in the Terrains
    Layer box and then, open the **NewLayer N** where N is a number that depends on
    the layers you have created.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的纹理图案太明显，选择地形层框中的纹理，然后打开**NewLayer N**，其中N是您创建的层数所依赖的数字。
- en: Important Note
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Each time you add a texture to the terrain, you will see that a new asset called
    "NewLayer N" is created in the Project view. It holds data of the terrain layer
    you have created, and you can use that one in other terrains if you need to. You
    can also rename that asset to give it a meaningful name. Also, you can reorganize
    those assets in their own folder.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 每次向地形添加纹理，您会看到在项目视图中创建了一个名为“NewLayer N”的新资产。它保存了您创建的地形层的数据，如果需要，您可以在其他地形中使用它。您还可以重命名该资产以赋予其有意义的名称。此外，您还可以将这些资产重新组织到它们自己的文件夹中。
- en: Open the section using the triangle to its left and increase the **Size** property
    in the **Tiling Settings** section until you find a suitable size where the pattern
    is not that obvious:![Figure 5.16 – Painting texture options
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用左侧的三角形打开该部分，并在**平铺设置**部分中增加**大小**属性，直到找到一个合适的大小，其中图案不那么明显：![图5.16-绘画纹理选项
- en: '](img/Figure_5.16_B14199.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.16_B14199.jpg)'
- en: Figure 5.16 – Painting texture options
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.16-绘画纹理选项
- en: 'Repeat steps *4* to *12* until you have applied all the textures you wanted
    to add to your terrain. In my case, I applied the mud texture to the river basin
    and used a rock texture for the hills. For the texture of the rocks, I reduced
    the **Opacity** property of the brush to blend it better with the grass in the
    mountains. You can try to add a layer of snow at the top just for fun:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*至*12*，直到您应用了所有想要添加到地形的纹理。在我的案例中，我将泥浆纹理应用于河流盆地，并在山丘上使用了岩石纹理。对于岩石的纹理，我减少了画笔的**不透明度**属性，以更好地与山上的草地融合。您可以尝试在顶部添加一层雪，只是为了好玩：
- en: '![Figure 5.17 – Results of painting our terrain with three different textures'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.17-用三种不同的纹理绘制我们的地形的结果'
- en: '](img/Figure_5.17_B14199.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.17_B14199.jpg)'
- en: Figure 5.17 – Results of painting our terrain with three different textures
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.17-用三种不同的纹理绘制我们的地形的结果
- en: Of course, we can improve this a lot using lots of the advanced tools of the
    system, but let's keep things simple for now. Now, let's see how we can integrate
    the 3D models.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以使用系统的许多高级工具来大大改进这一点，但让我们现在保持简单。现在，让我们看看如何集成3D模型。
- en: Integrating meshes
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成网格
- en: 'If you select one of the 3D assets we have configured previously and click
    the arrow to its right, one or more sub-assets will appear in the Project Window.
    This means that FBX is not a 3D model, but a container of assets that defines
    the 3D model:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择我们之前配置过的3D资产之一并单击其右侧的箭头，则一个或多个子资产将出现在项目窗口中。这意味着FBX不是一个3D模型，而是定义3D模型的资产容器：
- en: '![Figure 5.18 – Mesh picker'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.18-网格选择器'
- en: '](img/Figure_5.18_B14199.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.18_B14199.jpg)'
- en: Figure 5.18 – Mesh picker
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.18-网格选择器
- en: Some of those sub-assets are meshes, which is a collection of triangles that
    defines the geometry of your model. You can find at least one of those inside
    the file, but you can also find several, and that can happen if your model is
    composed of lots of pieces. For example, a car can be a single rigid mesh, but
    that won't allow you to rotate its wheels or open its doors; it will be just a
    static car, and that can be enough if the car is just a prop in the scene, but
    if the player will be able to control it, you will probably need to modify it.
    The idea is that all the pieces of your car are different GameObjects parented
    with one another, in such a way that if you move one, all of them will move, but
    you can still rotate the pieces independently.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些子资产是网格，这是定义模型几何形状的三角形集合。您可以在文件中找到至少一个这样的网格，但也可以找到多个，如果您的模型由许多部分组成，那就可能会发生。例如，汽车可以是一个单一的刚性网格，但这不允许您旋转其车轮或打开其车门；它只是一个静态的汽车，如果汽车只是场景中的道具，那可能足够了，但如果玩家能够控制它，您可能需要对其进行修改。这个想法是您的汽车的所有部分都是不同的游戏对象，彼此之间是父子关系，这样如果您移动一个，所有的都会移动，但您仍然可以独立旋转这些部分。
- en: 'When you drag the 3D model file to the scene, Unity will automatically create
    all the objects for each piece and its proper parenting based on how the artist
    created them. You can select the object in the **Hierarchy** and explore all its
    children to see this:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将3D模型文件拖到场景中时，Unity将根据艺术家的创建方式自动为每个部分创建所有对象及其适当的父子关系。您可以在**层次结构**中选择对象并探索其所有子对象来查看这一点：
- en: '![Figure 5.19 – Sub-object selection'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.19-子对象选择'
- en: '](img/Figure_5.19_B14199.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.19_B14199.jpg)'
- en: Figure 5.19 – Sub-object selection
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.19-子对象选择
- en: 'Also, you will find that each of those objects will have their own `MeshFilter`
    and `MeshRenderer` components, each one rendering just that piece of the car.
    Remember that the mesh filter is a component that has a reference to the mesh
    asset to render, so the Mesh Filter is the one using those mesh Sub-Assets we
    talked about previously:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您会发现每个对象都有自己的`MeshFilter`和`MeshRenderer`组件，每个组件只渲染汽车的一部分。请记住，网格过滤器是一个具有对要渲染的网格资产的引用的组件，因此网格过滤器是使用我们之前讨论过的那些网格子资产的组件：
- en: '![Figure 5.20 – Mesh Filter current mesh selection'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.20 – 网格过滤器当前网格选择'
- en: '](img/Figure_5.20_B14199.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.20_B14199.jpg)'
- en: Figure 5.20 – Mesh Filter current mesh selection
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.20 – 网格过滤器当前网格选择
- en: Now, if you drag the 3D model file into the scene, you will get a similar result
    as if the model were a Prefab and you were instancing it. But 3D model files are
    more limited than Prefabs, because you can't apply changes to the model, so after
    you've dragged the object onto the scene and edited it to have the behavior you
    want, I suggest that you create a Prefab to get all the benefits we discussed
    in [*Chapter 3*](B14199_03_Final_SK_ePub.xhtml#_idTextAnchor052), *Working with
    Scenes and GameObjects*, such as applying changes to all the instances of the
    Prefab and so on. Never create lots of instances of a model from its model file
    – always create them from the Prefab you created based on that file.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您将3D模型文件拖入场景，您将获得与模型为Prefab且您正在实例化它时类似的结果。但是3D模型文件比Prefab更有限，因为您无法对模型应用更改，因此在将对象拖入场景并编辑以获得所需的行为后，我建议您创建一个Prefab，以获得我们在[*第3章*](B14199_03_Final_SK_ePub.xhtml#_idTextAnchor052)中讨论的所有好处，*使用场景和游戏对象*，例如对所有Prefab实例应用更改等。永远不要从模型文件创建大量实例
    – 总是从基于该文件创建的Prefab创建它们。
- en: That's the basic usage of 3D meshes. Now, let's explore the texture integration
    process, which will make our 3D models have more detail.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这是3D网格的基本用法。现在，让我们来探讨纹理集成过程，这将使我们的3D模型更加详细。
- en: Integrating textures
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成纹理
- en: 'Maybe your model already has a texture applied, or maybe it has magenta applied
    to it. In the latter case, that means the asset wasn''t prepared to work with
    the URP template you selected when creating the project. Some assets in the Asset
    Store are meant to be used in older versions of Unity:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 也许您的模型已经应用了纹理，或者它已经应用了品红色。在后一种情况下，这意味着该资产未准备好与您在创建项目时选择的URP模板一起使用。Asset Store中的一些资产是为旧版本的Unity而设计的：
- en: '![Figure 5.21 – Mesh being rendered with erroneous or no material at all'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.21 – 使用错误或没有材质渲染的网格'
- en: '](img/Figure_5.21_B14199.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.21_B14199.jpg)'
- en: Figure 5.21 – Mesh being rendered with erroneous or no material at all
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.21 – 使用错误或没有材质渲染的网格
- en: 'One option to fix that is using **Edit | Render Pipeline | Universal Render
    Pipeline | Upgrade Project Materials to UniversalRP Materials**. This will try
    to upgrade all your materials to the current version of Unity:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 修复的一个选项是使用**编辑 | 渲染管线 | 通用渲染管线 | 将项目材质升级到UniversalRP材质**。这将尝试将所有材质升级到Unity的当前版本：
- en: '![Figure 5.22 – Upgrading materials to URP'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.22 – 将材质升级到URP'
- en: '](img/Figure_5.22_B14199.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.22_B14199.jpg)'
- en: Figure 5.22 – Upgrading materials to URP
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.22 – 将材质升级到URP
- en: The con of this method is that, sometimes, it won't upgrade the materials properly.
    Luckily, we can fix this by reapplying the textures of the objects in this new
    way. Even if your assets work just fine, I suggest that you reapply your textures
    anyway, just to learn more about the concept of materials.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的缺点是，有时它无法正确升级材质。幸运的是，我们可以通过以这种新方式重新应用对象的纹理来解决这个问题。即使您的资产工作正常，我建议您无论如何重新应用纹理，只是为了更多地了解材质的概念。
- en: A texture is applied directly to an object. That's because the texture is just
    one single configuration of all the ones that control the aspect of your model.
    In order to change the appearance of a model, you must create a material. A material
    is a separate asset that contains lots of settings about how Unity should render
    your object. You can apply that asset to several objects that share the same graphics
    settings, and if you change the settings of the material, it will affect all the
    objects that are using it. It works like a graphics profile.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理直接应用于对象。这是因为纹理只是控制模型外观的所有配置中的一个。为了改变模型的外观，您必须创建一个材质。材质是一个单独的资产，包含有关Unity应该如何渲染您的对象的许多设置。您可以将该资产应用于共享相同图形设置的多个对象，如果更改材质的设置，它将影响使用它的所有对象。它的工作原理类似于图形配置文件。
- en: 'In order to create a material to apply the textures of your object, you need
    to follow these steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个可以应用纹理的材质，您需要按照以下步骤进行：
- en: In the Project Window, click the plus (**+**) button at the top-left part of
    the window.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目窗口中，单击窗口左上角的加号（**+**）按钮。
- en: Find the **Material** option in that menu and click it.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单中找到**Material**选项并单击它。
- en: Name your material. This is usually the name of the asset you are creating (for
    example, Car, Ship, Character, and so on).
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的材质命名。这通常是您正在创建的资产的名称（例如，汽车，船，角色等）。
- en: Drag this material asset you created to the model instance on your scene. At
    the moment, if you move the mouse with the dragged asset over the object, you
    will be able to see a preview of how it will look with that material. You can
    confirm this by releasing the mouse.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您创建的材质资产拖到场景中的模型实例上。目前，如果您将鼠标与拖动的资产一起移动到对象上，您将能够预览使用该材质的外观。释放鼠标即可确认。
- en: Maybe your object has several parts. In that case, you will need to drag the
    material to each part of the object.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 也许您的对象有几个部分。在这种情况下，您需要将材质拖到对象的每个部分。
- en: Important Note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Dragging the material will just change the materials property of the `MeshRenderer`
    component of the object you have dragged.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 拖动材质只会改变您拖动的对象的`MeshRenderer`组件的材质属性。
- en: Select the material and click the circle to the left of the **Base Map** property.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择材质并单击**Base Map**属性左侧的圆圈。
- en: 'In the **Texture Selector**, click on the texture of your model. It can be
    complicated to locate the texture. Usually, the name of the texture will match
    the model name. If not, you will need to try different textures until you see
    one that fits your object. Also, you may find several textures with the same name
    as your model. Just pick the one that seems to have the proper colors instead
    of the ones that look black and white or light blue; we will use those later:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**纹理选择器**中，点击模型的纹理。定位纹理可能有些复杂。通常，纹理的名称将与模型名称匹配。如果不匹配，您将需要尝试不同的纹理，直到找到适合您对象的纹理。此外，您可能会发现几个与您的模型同名的纹理。只需选择看起来颜色合适的纹理，而不是看起来是黑白或浅蓝色的纹理；我们稍后会用到它们：
- en: '![Figure 5.23 – Base Map property of URP materials'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.23 – URP材质的基本贴图属性'
- en: '](img/Figure_5.23_B14199.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.23_B14199.jpg)'
- en: Figure 5.23 – Base Map property of URP materials
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.23 – URP材质的基本贴图属性
- en: With this, you have successfully applied the texture to the object through a
    material. For each object that uses the same texture, just drag the same material.
    Now that we have a basic understanding of how to apply the model textures, let's
    learn how to properly configure the import settings before spreading models all
    over the scene.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，您已成功通过材质将纹理应用到对象上。对于每个使用相同纹理的对象，只需拖动相同的材质。现在我们已经基本了解了如何应用模型纹理，让我们学习如何在将模型传播到整个场景之前正确配置导入设置。
- en: Configuring assets
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置资产
- en: As we mentioned earlier, artists are used to creating art assets outside Unity,
    and that can cause differences between how the asset is seen from that tool and
    how Unity will import it. As an example, 3D Studio can work in centimetres, inches,
    and so on, while Unity works in meters. We have just downloaded and used lots
    of assets, but we have skipped the configuration step to solve those discrepancies,
    so let's take a look at this now.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，艺术家习惯于在Unity之外创建艺术资产，这可能导致从该工具中看到的资产与Unity导入的方式之间存在差异。例如，3D Studio可以使用厘米、英寸等单位，而Unity使用米。我们刚刚下载并使用了大量资产，但我们跳过了解决这些差异的配置步骤，所以现在让我们来看看这个。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖与导入资产相关的以下概念：
- en: Configuring meshes
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置网格
- en: Configuring textures
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置纹理
- en: Let's start discussing how to configure 3D meshes.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始讨论如何配置3D网格。
- en: Configuring meshes
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置网格
- en: 'In order to change the model''s import settings, you need to locate the model
    file you have downloaded. There are several file extensions that contain 3D models,
    with the most common one being the `.fbx` file, but you can encounter others such
    as `.obj`,`.3ds`, `.blender`, `.mb`, and so on. You can identify whether the file
    is a 3D mesh via its extension:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更改模型的导入设置，您需要定位您下载的模型文件。包含3D模型的文件扩展名有几种，最常见的是`.fbx`文件，但您可能会遇到其他扩展名，如`.obj`、`.3ds`、`.blender`、`.mb`等。您可以通过其扩展名来识别文件是否为3D网格：
- en: '![Figure 5.24 – Selected asset path extension'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.24 – 选择的资产路径扩展'
- en: '](img/Figure_5.24_B14199.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.24_B14199.jpg)'
- en: Figure 5.24 – Selected asset path extension
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.24 – 选择的资产路径扩展
- en: 'Also, you can click the **Asset** and check in the Inspector for the tabs you
    can see in the following screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以点击**资产**，并在检查器中查看以下截图中可以看到的选项卡：
- en: '![Figure 5.25 – Mesh materials settings'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.25 – 网格材质设置'
- en: '](img/Figure_5.25_B14199.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.25_B14199.jpg)'
- en: Figure 5.25 – Mesh materials settings
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.25 – 网格材质设置
- en: Now that you have located the 3D mesh files, you can configure them properly.
    Right now, the only thing we should take into account is the proper scale of the
    model. Artists are used to working with different software with different setups;
    maybe one artist created the model using meters as its metric unit, while other
    artists used inches, feet, and so on. When importing assets that have been created
    in different units, they will probably be unproportioned, which means we will
    get results such as humans being bigger than buildings and so on.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经找到了3D网格文件，可以正确配置它们。现在，我们应该考虑的唯一事情是模型的适当比例。艺术家习惯于使用不同设置的不同软件工作；也许一个艺术家使用米作为其度量单位创建了模型，而其他艺术家使用英寸、英尺等。当导入使用不同单位创建的资产时，它们可能会不成比例，这意味着我们将得到诸如人类比建筑物更大等结果。
- en: 'The best solution is to just ask the artist to fix that. If all the assets
    were authored in your company, or if you used an external asset, you can ask the
    artist to fix it to the way your company works, but right now, you are probably
    a single developer learning Unity by yourself. Luckily, Unity has a setting that
    allows you to rescale the original asset before using it in Unity. In order to
    change the scale factor of an object, you must do the following:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的解决方案是询问艺术家来解决这个问题。如果所有的资产都是由您公司创建的，或者您使用了外部资产，您可以要求艺术家将其修复为您公司的工作方式，但现在，您可能是一个独立学习Unity的开发人员。幸运的是，Unity有一个设置，允许您在在Unity中使用原始资产之前重新调整其比例。为了改变对象的比例因子，您必须执行以下操作：
- en: Locate the 3D mesh in your Project Window.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目窗口中找到3D网格。
- en: Drag it to the scene. You will see that an object will appear in your scene.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其拖到场景中。您会看到一个对象出现在您的场景中。
- en: Create a capsule using the **GameObject | 3D Object | Capsule** option.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**GameObject | 3D Object | Capsule**选项创建一个胶囊。
- en: Put the capsule next to the model you dragged into the Editor. See whether the
    scale makes sense. The idea is that the capsule is representing a human being
    (2 meters tall) so that you have a reference for the scale:![Figure 5.26 – Unproportioned
    asset
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将胶囊放在您拖入编辑器的模型旁边。看看比例是否合理。这样做的目的是让胶囊代表一个人（2米高），这样您就有了比例的参考：![图5.26 – 不成比例的资产
- en: '](img/Figure_5.26_B14199.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.26_B14199.jpg)'
- en: Figure 5.26 – Unproportioned asset
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.26 – 不成比例的资产
- en: If the model is bigger or smaller than expected, select the mesh again in the
    Project Window (not the GameObject instance you dragged to the Editor) and you
    will see some import settings in the Inspector.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果模型比预期的要大或小，请在项目窗口中再次选择网格（而不是您拖到编辑器中的GameObject实例），您将在检查器中看到一些导入设置。
- en: Look for the **Scale Factor** property and modify it, increasing it if your
    model is smaller than expected or reducing it in the opposite case:![Figure 5.27
    –  Model mesh options
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找**比例因子**属性并修改它，如果您的模型比预期的要小，则增加它，或者在相反的情况下减小它：![图5.27-模型网格选项
- en: '](img/Figure_5.27_B14199.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.27_B14199.jpg)'
- en: Figure 5.27 – Model mesh options
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.27-模型网格选项
- en: Click the **Apply** button at the bottom of the Inspector.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击检查器底部的**应用**按钮。
- en: Repeat *steps 6* and *7* until you get the desired result.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤6*和*7*，直到获得所需的结果。
- en: There are plenty of other options to configure, but let's stop here for now.
    Now, let's discuss how to properly configure the textures of our models.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多其他选项要配置，但现在让我们暂停一下。现在，让我们讨论如何正确配置我们模型的纹理。
- en: Configuring textures
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置纹理
- en: 'Again, there are several settings to configure here, but let''s focus on the
    texture size for now. The idea is to use the size that best fits the usage of
    that texture, and that depends on lots of factors. The first factor to take into
    account is the distance from which the object will be seen. If you are creating
    a first person game, you will probably see lots of objects near enough to justify
    a big texture, but maybe you have lots of distant objects, such as billboards
    at the top of buildings, that you will never be near enough to see the details
    of, so you can use smaller textures for that. Another thing to take into account
    is the importance of the object. If you are creating a racing game, you will probably
    have lots of 3D models that will be on-screen for a few seconds and the player
    will never focus on them; they will be paying attention to the road and other
    cars. In this case, an object such as a trash can on the street can have a little
    texture and a low-polygon model and the user will never notice that (unless they
    stop to appreciate the scenery, but that''s acceptable). Finally, you can have
    a game with a top-down view that will never zoom in on the scene, so the same
    object that has a big texture in first person games would have a less detailed
    texture here. In the next figure, you can see that the smaller ship could use
    a smaller texture:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，这里有几个设置要配置，但让我们现在专注于纹理大小。想法是使用最适合该纹理使用的大小，这取决于许多因素。要考虑的第一个因素是从对象将被看到的距离。如果您正在创建第一人称游戏，您可能会看到足够接近的许多对象，以证明大纹理的必要性，但也许您有许多远处的对象，例如建筑物顶部的广告牌，您永远不会靠近到足以看到细节，因此您可以为此使用较小的纹理。还要考虑的是对象的重要性。如果您正在创建赛车游戏，您可能会有许多只会在屏幕上出现几秒钟且玩家永远不会关注的3D模型；他们将会注意道路和其他汽车。在这种情况下，街上的垃圾箱之类的对象可以有一个小纹理和低多边形模型，用户永远不会注意到（除非他们停下来欣赏风景，但这是可以接受的）。最后，您可以有一个从顶部向下查看的游戏，永远不会放大场景，因此在第一人称游戏中具有大纹理的相同对象在这里会有一个不太详细的纹理。在下一张图中，您可以看到较小的船可以使用较小的纹理：
- en: '![Figure 5.28 – The same model being seen at different distances'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.28-在不同距离下看到相同的模型'
- en: '](img/Figure_5.28_B14199(Merged).jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.28_B14199(Merged).jpg)'
- en: Figure 5.28 – The same model being seen at different distances
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.28-在不同距离下看到相同的模型
- en: 'The ideal size of the texture is relative. The usual way to find it is by changing
    its size until you find the smallest possible size with a decent quality when
    the object is seen from the nearest position possible in the game. This is a trial
    and error method. In order to do that, you can do the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理的理想尺寸是相对的。找到它的常规方法是通过改变其大小，直到在游戏中以可能的最近位置看到对象时找到最小可能的尺寸并保持良好的质量。这是一种反复试验的方法。为了做到这一点，您可以执行以下操作：
- en: Locate the 3D model and put it into the scene.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到3D模型并将其放入场景中。
- en: Put the Scene view camera in a position that shows the object at its biggest
    possible in-game size. As an example, in an FPS game, it would be almost right
    next to the object, while in a top-down game, it would be a few meters above the
    object. Again, that depends on your game.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将场景视图相机放置在一个位置，以便以游戏中最大的尺寸显示对象。例如，在FPS游戏中，它几乎会在对象旁边，而在俯视游戏中，它会在对象上方几米处。同样，这取决于您的游戏。
- en: Find and select the texture that the object is using in the folders that were
    imported with the package or from the material you created previously. They usually
    have the `.png`, `.jpg`, or `.tif` extensions.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入包或之前创建的材质中的文件夹中找到并选择对象使用的纹理。它们通常具有`.png`、`.jpg`或`.tif`扩展名。
- en: In the Inspector, look at the **Max Size** property and reduce it, trying the
    next smallest value. For example, if the texture is at 2,048, try 1,024.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器中，查看**最大尺寸**属性并减小它，尝试下一个更小的值。例如，如果纹理为2,048，请尝试1,024。
- en: Click **Apply** and check the Scene view to see whether the quality has decreased
    dramatically or if the change isn't noticeable. You will be surprised.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**应用**并检查场景视图，看看质量是否急剧下降或更改是否不明显。您会感到惊讶。
- en: Repeat *steps 4* to *5* until you get a bad-quality result. In that case, just
    increase the previous resolution to get an acceptable quality. Of course, if you
    are targeting PC games, you can expect higher resolutions than mobile games.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*至*5*，直到获得低质量的结果。在这种情况下，只需增加先前的分辨率以获得可接受的质量。当然，如果您的目标是PC游戏，您可以期望比移动游戏更高的分辨率。
- en: Now that you have imported, integrated, and configured your objects, let's just
    create our Player's Base with those assets.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经导入，集成和配置了您的对象，让我们用这些资产创建我们的玩家基地。
- en: Assembling the scene
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组装场景
- en: 'Let''s start replacing our prototype base using the environment pack we have
    downloaded. To do that, you must do the following:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用我们下载的环境包替换我们的原型基地。为此，您必须执行以下操作：
- en: In the `corner` keyword:![Figure 5.29 – Mesh picker
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`corner`关键字中：![图5.29-网格选择器
- en: '](img/Figure_5.29_B14199.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.29_B14199.jpg)'
- en: Figure 5.29 – Mesh picker
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.29 - 网格选择器
- en: In my specific case, I have the outer and inner side of the corner as separate
    models, so I need to put them together.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我的特定情况下，我有角落的外侧和内侧作为单独的模型，所以我需要将它们放在一起。
- en: Position it in the same position as any corner of your prototype base:![Figure
    5.30 – Positioning the mesh on a placeholder for replacement
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其放置在原型基地的任何一个角落的相同位置：![图5.30 - 在替换占位符上放置网格
- en: '](img/Figure_5.30_B14199.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.30_B14199.jpg)'
- en: Figure 5.30 – Positioning the mesh on a placeholder for replacement
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.30 - 在替换占位符上放置网格
- en: Find the proper model that will connect with that corner to create walls. Again,
    you can try searching for the `wall` keyword in the Project Window.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到适合与角落连接以创建墙壁的合适模型。同样，你可以尝试在项目窗口中搜索`wall`关键字。
- en: Instance it and position it so that it's connected to the corner. Don't worry
    if it doesn't fit perfectly; you will go over the scene when necessary later.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化它并将其定位，使其与角落相连。如果不完全匹配，不要担心；以后可以随时调整场景。
- en: Important Note
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'You can select an object and press the *V* key to select a vertex of the selected
    object to drag it to a vertex of another object. This is called vertex snapping.
    It allows you to connect two pieces of a scene exactly as you intend:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择一个对象，按下*V*键选择所选对象的顶点，将其拖动到另一个对象的顶点。这被称为顶点捕捉。它允许你精确地连接场景中的两个部分：
- en: '![Figure 5.31 – Connecting two modules'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.31 - 连接两个模块'
- en: '](img/Figure_5.31_B14199.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.31_B14199.jpg)'
- en: Figure 5.31 – Connecting two modules
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.31 - 连接两个模块
- en: Repeat the walls until you reach the other end of the Player Base and position
    another corner. You might get a wall that's a little bit larger or smaller than
    the original prototype, but that's fine:![Figure 5.32 – Chain of connected modules
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复墙壁，直到达到玩家基地的另一端，并放置另一个角落。你可能会得到一个比原型稍大或稍小的墙壁，但没关系：![图5.32 - 连接模块的链
- en: '](img/Figure_5.32_B14199.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.32_B14199.jpg)'
- en: Figure 5.32 – Chain of connected modules
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.32 - 连接模块的链
- en: Important Note
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Remember that you can move an object while pressing the *Ctrl* key (*Control*
    on Mac) to snap the object´s position so that the clones of the wall can be easily
    located right next to the others.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，你可以按住*Ctrl*键（Mac上的*Control*）移动一个对象，以便将对象的位置捕捉到墙壁的克隆物可以轻松地定位在其他墙壁旁边。
- en: Complete the rest of the walls and destroy the prototype. Remember that this
    process is slow and you will need to be patient.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成其余的墙壁并摧毁原型。记住这个过程很慢，你需要耐心。
- en: Add floors by looking for floor tiles and repeating them all over the surface:![Figure
    5.33 – Floor modules with a hole for the pit
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过寻找地板砖并在整个表面重复它们来添加地板：！[图5.33 - 带有坑洞的地板模块
- en: '](img/Figure_5.33_B14199.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.33_B14199.jpg)'
- en: Figure 5.33 – Floor modules with a hole for the pit
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.33 - 带有坑洞的地板模块
- en: Add whatever details you want to add with other modular pieces in the package.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用包中的其他模块化部件添加任何你想要添加的细节。
- en: 'Put all those pieces in a container object called `Base`. Remember to create
    an empty object and drag the base pieces into it:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有这些部件放入一个名为`Base`的容器对象中。记得创建一个空对象，然后将基础部件拖放到其中：
- en: '![Figure 5.34 – Mesh Sub-Assets'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.34 - 网格子资产'
- en: '](img/Figure_5.34_B14199.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_5.34_B14199.jpg)'
- en: Figure 5.34 – Mesh Sub-Assets
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.34 - 网格子资产
- en: After a lot of practice doing this, you will slowly gain experience with the
    common pitfalls and good practices of modular scene design. All the packages have
    different modular designs in mind, so you will need to adapt to them.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 经过多次练习，你将慢慢积累关于模块化场景设计的常见问题和良好实践的经验。所有的包都有不同的模块化设计，所以你需要适应它们。
- en: Summary
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to import models and textures and integrate
    them into our scene. We discussed how to apply textures to the terrain, how to
    replace our prototype mesh with modular models, how to apply textures to those,
    and how to properly configure the assets, all while taking several criteria into
    account according to the usage of the object.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何导入模型和纹理，并将它们整合到我们的场景中。我们讨论了如何将纹理应用到地形上，如何用模块化模型替换我们的原型网格，如何将纹理应用到这些模型上，以及如何根据对象的使用情况考虑多个标准来正确配置资产。
- en: With this, we have finished Part 1 of this book and have discussed several basic
    Unity concepts. In Part 2, we will start to deep dive into several Unity systems
    that allow us to improve the graphics and sound quality of our game. We will start
    to learn how to create custom material types to create interesting visual effects
    and animations.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，我们已经完成了本书的第一部分，并讨论了几个基本的Unity概念。在第二部分中，我们将开始深入研究几个Unity系统，这些系统可以帮助我们改善游戏的图形和声音质量。我们将开始学习如何创建自定义材质类型，以创建有趣的视觉效果和动画。
