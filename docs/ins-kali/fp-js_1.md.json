["```js\n// create some objects to store the data.\nvar columbian = {\n  name: 'columbian',\n  basePrice: 5\n};\nvar frenchRoast = {\n  name: 'french roast',\n  basePrice: 8\n};\nvar decaf = {\n  name: 'decaf',\n  basePrice: 6\n};\n\n// we'll use a helper function to calculate the cost \n// according to the size and print it to an HTML list\nfunction printPrice(coffee, size) {\n  if (size == 'small') {\n    var price = coffee.basePrice + 2;\n  }\n  else if (size == 'medium') {\n    var price = coffee.basePrice + 4;\n  }\n  else {\n    var price = coffee.basePrice + 6;\n  }\n\n// create the new html list item\n  var node = document.createElement(\"li\");\n  var label = coffee.name + ' ' + size;\n  var textnode = document.createTextNode(label+' price: $'+price);\n  node.appendChild(textnode);\n  document.getElementById('products').appendChild(node);\n}\n\n// now all we need to do is call the printPrice function\n// for every single combination of coffee type and size\nprintPrice(columbian, 'small');\nprintPrice(columbian, 'medium');\nprintPrice(columbian, 'large');\nprintPrice(frenchRoast, 'small');\nprintPrice(frenchRoast, 'medium');\nprintPrice(frenchRoast, 'large');\nprintPrice(decaf, 'small');\nprintPrice(decaf, 'medium');\nprintPrice(decaf, 'large');\n```", "```js\n// separate the data and logic from the interface\nvar printPrice = function(price, label) {\n  var node = document.createElement(\"li\");\n  var textnode = document.createTextNode(label+' price: $'+price);\n  node.appendChild(textnode);\n  document.getElementById('products 2').appendChild(node);\n}\n\n// create function objects for each type of coffee\nvar columbian = function(){\n  this.name = 'columbian'; \n  this.basePrice = 5;\n};\nvar frenchRoast = function(){\n  this.name = 'french roast'; \n  this.basePrice = 8;\n};\nvar decaf = function(){\n  this.name = 'decaf'; \n  this.basePrice = 6;\n};\n\n// create object literals for the different sizes\nvar small = {\n  getPrice: function(){return this.basePrice + 2},\n  getLabel: function(){return this.name + ' small'}\n};\nvar medium = {\n  getPrice: function(){return this.basePrice + 4},\n  getLabel: function(){return this.name + ' medium'}\n};\nvar large = {\n  getPrice: function(){return this.basePrice + 6},\n  getLabel: function(){return this.name + ' large'}\n};\n\n// put all the coffee types and sizes into arrays\nvar coffeeTypes = [columbian, frenchRoast, decaf];\nvar coffeeSizes = [small, medium, large];\n\n// build new objects that are combinations of the above\n// and put them into a new array\nvar coffees = coffeeTypes.reduce(function(previous, current) {\n  var newCoffee = coffeeSizes.map(function(mixin) {\n    // `plusmix` function for functional mixins, see Ch.7\n    var newCoffeeObj = plusMixin(current, mixin);\n    return new newCoffeeObj();\n  });\n  return previous.concat(newCoffee);\n},[]);\n\n// we've now defined how to get the price and label for each\n// coffee type and size combination, now we can just print them\ncoffees.forEach(function(coffee){\n  printPrice(coffee.getPrice(),coffee.getLabel());\n});\n```", "```js\nvar peruvian = function(){\n  this.name = 'peruvian'; \n  this.basePrice = 11;\n};\n\nvar extraLarge = {\n  getPrice: function(){return this.basePrice + 10},\n  getLabel: function(){return this.name + ' extra large'}\n};\n\ncoffeeTypes.push(Peruvian);\ncoffeeSizes.push(extraLarge);\n```", "```js\ncoffeeTypes.reduce(function(previous, current) {\n  var newCoffee = coffeeSizes.map(function(mixin) {\n    // `plusMixin` function for functional mixins, see Ch.7\n    var newCoffeeObj = plusMixin(current, mixin);\n    return new newCoffeeObj();\n  });\n  return previous.concat(newCoffee);\n},[]).forEach(function(coffee) {\n  printPrice(coffee.getPrice(),coffee.getLabel());\n});\n```"]