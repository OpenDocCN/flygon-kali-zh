- en: Running Docker in Public Clouds
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在公共云中运行Docker
- en: So far, we have been using Digital Ocean to launch containers on a cloud-based
    infrastructure. In this chapter, we will look at using the tools provided by Docker
    to launch a Docker Swarm cluster in Amazon Web Services and also Microsoft Azure.
    We will then look at the container solutions offered by Amazon Web Services, Microsoft
    Azure, and Google Cloud.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在使用Digital Ocean在基于云的基础设施上启动容器。在本章中，我们将研究使用Docker提供的工具在Amazon Web
    Services和Microsoft Azure中启动Docker Swarm集群。然后，我们将研究Amazon Web Services、Microsoft
    Azure和Google Cloud提供的容器解决方案。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Docker Cloud
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Cloud
- en: Amazon ECS and AWS Fargate
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon ECS和AWS Fargate
- en: Microsoft Azure App Services
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Azure应用服务
- en: Kubernetes in Microsoft Azure, Google Cloud, and Amazon Web Services
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Azure、Google Cloud和Amazon Web Services中的Kubernetes
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we will be using various cloud providers, so if you are following
    along, you will need active accounts with each. Again, the screenshots in this
    chapter will be from my preferred operating system, macOS. As before, the commands
    we will be running should work on all three of the operating systems we have targeted
    so far, unless otherwise stated.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用各种云提供商，因此如果您在跟进，您将需要在每个提供商上拥有活跃的账户。同样，本章中的截图将来自我首选的操作系统macOS。与以前一样，我们将运行的命令应该在我们迄今为止所针对的三个操作系统上都能工作，除非另有说明。
- en: We will also be looking at some of the command-line tools provided by the cloud
    providers to help manage their services – this chapter does not serve as a detailed
    how-to guide for these tools, though, and links to documentation will be provided
    in the *Further reading* section in this chapter for more detailed usage guides.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将研究云提供商提供的一些命令行工具，以帮助管理他们的服务-本章不作为这些工具的详细使用指南，但在本章的*进一步阅读*部分中将提供更详细的使用指南的链接。
- en: 'Check out the following video to see the Code in Action:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的运行情况：
- en: '[http://bit.ly/2Se544n](http://bit.ly/2Se544n)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://bit.ly/2Se544n](http://bit.ly/2Se544n)'
- en: Docker Cloud
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker Cloud
- en: Before we start looking at other services, I thought it would be good to quickly
    discuss Docker Cloud as there are still a lot of references to the cloud management
    services that were once provided by Docker.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始查看其他服务之前，我认为快速讨论一下Docker Cloud会是一个好主意，因为仍然有很多关于Docker曾经提供的云管理服务的参考资料。
- en: Docker Cloud was made up of several Docker services. These included SaaS offerings
    for building and hosting images, which was another one of the services offered application,
    node, and Docker Swarm cluster management. On May 21, 2018, all services that
    offered the management of remote nodes where closed down.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Cloud由几个Docker服务组成。这些包括用于构建和托管镜像的SaaS服务，这是另一项提供的服务，应用程序、节点和Docker Swarm集群管理。在2018年5月21日，所有提供远程节点管理的服务都已关闭。
- en: Docker recommended that Docker Cloud users who managed their nodes using this
    service should migrate those workloads to either Docker **Community Edition**
    (**CE**) or Docker **Enterprise Edition** (**EE**) and into the cloud of their
    own hardware. Docker also recommended the Azure Container Service and Google Kubernetes
    Engine.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Docker建议使用Docker Cloud的用户将其使用该服务管理节点的工作负载迁移到Docker **Community Edition** (**CE**)或Docker
    **Enterprise Edition** (**EE**)以及其自己硬件的云中。Docker还推荐了Azure容器服务和Google Kubernetes引擎。
- en: So, for this reason, we will not be discussing any Docker hosted services in
    this chapter like we did in previous editions of *Mastering Docker*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本章中，我们不会像在以前的*掌握Docker*版本中那样讨论任何Docker托管服务。
- en: However, considering what we have discussed, the next section may seem a little
    confusing. While Docker has stopped all hosted cloud management services, it still
    provides tools to help you manage your Docker Swarm clusters in two of the major
    public cloud providers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，考虑到我们所讨论的内容，下一节可能会有点令人困惑。虽然Docker已经停止了所有托管的云管理服务，但它仍然提供工具来帮助您在两个主要的公共云提供商中管理您的Docker
    Swarm集群。
- en: Docker on-cloud
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云上的Docker
- en: In this section, we are going to look at the two templated cloud offerings from
    Docker. These both launch Docker Swarm clusters that have deep levels of integration
    with their target platforms, and have also been built with Docker best practices
    in mind. Let's look at the Amazon Web Services template first.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看Docker提供的两个模板化云服务。这两个都会启动Docker Swarm集群，并且与目标平台有深度集成，并且还考虑了Docker的最佳实践。让我们先看看Amazon
    Web Services模板。
- en: Docker Community Edition for AWS
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker社区版适用于AWS
- en: Docker Community Edition for AWS (which we will call Docker for AWS from now
    on) is an Amazon CloudFormation template created by Docker that is designed to
    easily launch a Docker Swarm mode cluster in AWS with Docker best practices and
    recommendations applied.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Docker社区版适用于AWS（我们从现在开始称之为Docker for AWS）是由Docker创建的一个Amazon CloudFormation模板，旨在在AWS中轻松启动Docker
    Swarm模式集群，并应用了Docker的最佳实践和建议。
- en: '**CloudFormation** is a service that''s offered by Amazon that allows you to
    define how you would like your infrastructure to look in a template file that
    can then be shared or brought under version control.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**CloudFormation**是亚马逊提供的一项服务，允许您在一个模板文件中定义您希望您的基础架构看起来的方式，然后可以共享或纳入版本控制。'
- en: The first thing we need to do – and it's also the only thing we need to configure
    ahead of launching Docker for AWS—is to ensure that we have an SSH key assigned
    to our account in the region we will be launching our cluster. To do this, log
    in to the AWS Console at [https://console.aws.amazon.com/](https://console.aws.amazon.com/),
    or your organization's custom sign-in page if you use one. Once logged in, go
    to the Service menu, which can be found in the top-left of the page, and find
    the **EC2** service.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事 - 也是在启动Docker for AWS之前唯一需要配置的事情 - 是确保我们在将要启动集群的区域中为我们的帐户分配了SSH密钥。要做到这一点，请登录到AWS控制台[https://console.aws.amazon.com/](https://console.aws.amazon.com/)，或者如果您使用自定义登录页面，则登录到您的组织的自定义登录页面。登录后，转到页面左上角的服务菜单，找到**EC2**服务。
- en: To make sure that you are in your desired region, you can use the region switcher
    in the top right between your username and the support menu. Once you are in the
    right region, click on **Key Pairs**, which can be found under **Network & Security**
    in the left-hand menu. Once on the **Key Pairs** page, you should see a list of
    your current key pairs. If you have none listed or don't have access to them,
    you can either click on **Create Key Pair** or **Import Key Pair** and follow
    the onscreen prompts.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保您在所需的区域中，您可以在用户名和支持菜单之间的右上角使用区域切换器。一旦您在正确的区域中，点击**密钥对**，它可以在左侧菜单中的**网络和安全**下找到。进入**密钥对**页面后，您应该看到您当前密钥对的列表。如果没有列出或者您无法访问它们，您可以单击**创建密钥对**或**导入密钥对**，然后按照屏幕提示操作。
- en: 'Docker for AWS can be found in the Docker Store at [https://store.docker.com/editions/community/docker-ce-aws](https://store.docker.com/editions/community/docker-ce-aws).
    You have two choices of Docker for AWS: Stable and Edge version.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Docker for AWS可以在Docker Store中找到[https://store.docker.com/editions/community/docker-ce-aws](https://store.docker.com/editions/community/docker-ce-aws)。您可以选择Docker
    for AWS的两个版本：稳定版和Edge版本。
- en: The Edge version contains experimental features from upcoming versions of Docker;
    because of that, we are going to look at launching Docker for AWS (stable). To
    do that, just click on the button and you will be taken straight to CloudFormation
    in your AWS Console with the Docker template already loaded.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Edge版本包含来自即将推出的Docker版本的实验性功能；因此，我们将看看如何启动Docker for AWS（稳定版）。要做到这一点，只需点击按钮，您将直接进入AWS控制台中的CloudFormation，Docker模板已经加载。
- en: 'You can view the raw template, which is currently made up of 3,100 lines of
    code, by going to [https://editions-us-east-1.s3.amazonaws.com/aws/stable/Docker.tmpl](https://editions-us-east-1.s3.amazonaws.com/aws/stable/Docker.tmpl),
    or you can visualize the template in the CloudFormation designer. As you can see
    from the following visualization, there is a lot going on to launch the cluster:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以查看原始模板，目前由3100行代码组成，方法是转到[https://editions-us-east-1.s3.amazonaws.com/aws/stable/Docker.tmpl](https://editions-us-east-1.s3.amazonaws.com/aws/stable/Docker.tmpl)，或者您可以在CloudFormation设计师中可视化模板。如您从以下可视化中所见，有很多内容可以启动集群：
- en: '![](Images/94c34f21-31ad-4493-900c-293d3dcf0cd2.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/94c34f21-31ad-4493-900c-293d3dcf0cd2.png)'
- en: The beauty of this approach is that you don't have to worry about any of these
    complications. Docker has you covered and has taken on all of the work of worrying
    about how to launch the aforementioned infrastructure and services away from you.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的美妙之处在于，您不必担心任何这些复杂性。Docker已经为您考虑周全，并且已经承担了所有关于如何启动上述基础设施和服务的工作。
- en: 'The first step in launching the cluster has already been sorted for you. All
    you have to do is click on **Next** on the **Select Template** page:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 启动集群的第一步已经为您准备好了。您只需在**选择模板**页面上点击**下一步**：
- en: '![](Images/efd42eec-ca73-40ba-a7f0-10dfade0ac1e.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/efd42eec-ca73-40ba-a7f0-10dfade0ac1e.png)'
- en: 'Next up, we have to specify some details about our cluster. Other than the
    SSH key, we are going to be leaving everything at their default values:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们必须指定有关我们的集群的一些细节。除了SSH密钥，我们将保持一切默认值不变：
- en: '**Stack name**: `Docker`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**堆栈名称**：`Docker`'
- en: '**Number of Swarm managers**: `3`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Swarm管理器数量**：`3`'
- en: '**Number of Swarm worker nodes**: `5`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Swarm工作节点数量**：`5`'
- en: '**Which SSH key to use**: (Select your key from the list)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**要使用哪个SSH密钥**：（从列表中选择您的密钥）'
- en: '**Enable daily resource cleanup**: No'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用每日资源清理**：否'
- en: '**Use CloudWatch for container logging**: Yes'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用CloudWatch进行容器日志记录**：是'
- en: '**Create EFS prerequisites for CloudStore**: No'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为CloudStore创建EFS先决条件**：否'
- en: '**Swarm manager instance type**: t2.micro'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Swarm管理器实例类型**：t2.micro'
- en: '**Manager ephemeral storage volume size**: 20'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理器临时存储卷大小**：20'
- en: '**Manager ephemeral storage volume type**: Standard'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理器临时存储卷类型**：标准'
- en: '**Agent worker instance type**: t2.micro'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理工作实例类型**：t2.micro'
- en: '**Worker ephemeral storage volume size**: 20'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作实例临时存储卷大小**：20'
- en: '**Worker ephemeral storage volume type**: Standard'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作实例临时存储卷类型**：标准'
- en: '**Enable EBS I/O optimization?** No'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用EBS I/O优化？** 否'
- en: '**Encrypt EFS objects?** False'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密EFS对象？** 假'
- en: 'Once you have checked that everything is **OK**, click on the **Next** button.
    In the next step, we can leave everything as it is and click on the **Next** button
    to be taken to a review page. On the review page, you should find a link that
    gives you the estimated cost:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您确认一切**正常**，请点击**下一步**按钮。在下一步中，我们可以将一切保持不变，然后点击**下一步**按钮，进入审核页面。在审核页面上，您应该找到一个链接，给出了估算成本：
- en: '![](Images/d39ed962-001f-49a0-aa2a-210eb1bc50eb.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/d39ed962-001f-49a0-aa2a-210eb1bc50eb.png)'
- en: As you can see, the monthly estimate for my cluster is $113.46.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我的集群的月度估算为113.46美元。
- en: I have had varying success with the Estimate cost link—it may not appear each
    time you launch the template—if it doesn't and you have answered the questions
    as per the preceding list, then your costs will be similar to that of mine.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我对“估算成本”链接的成功率有所不同——如果它没有出现，并且您已根据上述列表回答了问题，那么您的成本将与我的相似。
- en: 'The final thing you need to do before launching the cluster is to tick the
    box that says **I acknowledge that AWS CloudFormation might create IAM resources**
    and click on the **Create** button. As you can imagine, it takes a while to launch
    the cluster; you can check on the status of the launch by selecting your CloudFormation
    stack in the AWS Console and selecting the **Events** tab:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动集群之前，您需要做的最后一件事是勾选“我承认AWS CloudFormation可能会创建IAM资源”的复选框，然后点击“创建”按钮。正如您所想象的那样，启动集群需要一些时间；您可以通过在AWS控制台中选择您的CloudFormation堆栈并选择“事件”选项卡来检查启动的状态：
- en: '![](Images/a8a82d94-d51e-4d61-82d9-e7ca88708725.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/a8a82d94-d51e-4d61-82d9-e7ca88708725.png)'
- en: 'After about 15 minutes, you should see the status change from **CREATE_IN_PROGRESS**
    to **CREATE_COMPLETE**. When you see this, click on the **Outputs** tab and you
    should see a list of URLs and links:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 大约15分钟后，您应该会看到状态从“CREATE_IN_PROGRESS”更改为“CREATE_COMPLETE”。当您看到这一点时，点击“输出”选项卡，您应该会看到一系列URL和链接：
- en: '![](Images/98e173dc-9ce2-48a0-9a5e-7e24156c1349.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/98e173dc-9ce2-48a0-9a5e-7e24156c1349.png)'
- en: 'To log in to our Swarm cluster, click on the link next to Managers to be taken
    to a list of EC2 instances, which are our manager nodes. Select one of the instances
    and then make a note of its public DNS address. In a terminal, SSH to the node,
    using docker as the username. For example, I ran the following commands to log
    in and get a list of all nodes:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要登录到我们的Swarm集群，点击“管理者”旁边的链接，进入EC2实例列表，这些是我们的管理节点。选择一个实例，然后记下其公共DNS地址。在终端中，使用docker作为用户名SSH到节点。例如，我运行以下命令登录并获取所有节点列表：
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you downloaded your SSH key from the AWS Console when you added a key, you
    should update the preceding command to include the path to your download key,
    for example, `ssh -i /path/to/private.key docker@ec2-34-245-167-38.eu-west-1.compute.amazonaws.com`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在添加密钥时从AWS控制台下载了您的SSH密钥，您应该更新上述命令以包括您下载密钥的路径，例如，`ssh -i /path/to/private.key
    docker@ec2-34-245-167-38.eu-west-1.compute.amazonaws.com`。
- en: 'The preceding commands to log in and get a list of all nodes are shown in the
    following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 登录并获取所有节点列表的先前命令显示在以下截图中：
- en: '![](Images/9198f5ee-5731-4b5f-b733-78de04e63158.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/9198f5ee-5731-4b5f-b733-78de04e63158.png)'
- en: 'From here, you can treat it like any other Docker Swarm cluster. For example,
    we can launch and scale the cluster service by running these commands:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，您可以像对待任何其他Docker Swarm集群一样对待它。例如，我们可以通过运行以下命令来启动和扩展集群服务：
- en: '[PRE1]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now that your service has been launched, you can view your application at the
    URL given as the **DefaultDNSTarget** in the **Outputs** tab of the CloudFormation
    page. This is an Amazon Elastic load balancer that has all of our nodes sat behind
    it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的服务已经启动，您可以在CloudFormation页面的“输出”选项卡中查看给定URL作为“DefaultDNSTarget”的应用程序。这是一个Amazon弹性负载均衡器，所有节点都在其后面。
- en: 'For example, my **DefaultDNSTarget** was `Docker-ExternalLoa-PCIAX1UI53AS-1796222965.eu-west-1.elb.amazonaws.com`.
    Putting this into my browser showed the clustered application:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我的“DefaultDNSTarget”是`Docker-ExternalLoa-PCIAX1UI53AS-1796222965.eu-west-1.elb.amazonaws.com`。将其放入浏览器中显示了集群应用程序：
- en: '![](Images/80e2bf26-45b2-4e45-a601-073052f7e191.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/80e2bf26-45b2-4e45-a601-073052f7e191.png)'
- en: Once you have finished with your cluster, return to the CloudFormation page
    within the AWS Console, select your stack, and then select **Delete Stack** from
    the **Actions** drop-down menu. This will remove all traces of your Docker from
    the Amazon Web Services cluster and stop you from getting any unexpected charges.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 完成集群后，返回到AWS控制台中的CloudFormation页面，选择您的堆栈，然后从“操作”下拉菜单中选择“删除堆栈”。这将删除Amazon Web
    Services集群中Docker的所有痕迹，并阻止您产生任何意外费用。
- en: Please make sure that you check that there have not been any problems with the
    deletion of the stack—if this process encounters any problems, any resources that
    have been left behind will be charged for.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保检查删除堆栈时没有出现任何问题——如果此过程遇到任何问题，任何留下的资源都将产生费用。
- en: Docker Community Edition for Azure
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker社区版Azure
- en: 'Next up, we have the Docker Community Edition for Azure, which I will refer
    to as Docker for Azure. This uses **Azure Resource Manager** (**ARM**) templates
    to define our Docker Swarm cluster. Using the ARMViz tool, we can visualize what
    the cluster will look like:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有Azure的Docker社区版，我将称之为Docker for Azure。这使用Azure资源管理器（ARM）模板来定义我们的Docker
    Swarm集群。使用ARMViz工具，我们可以可视化集群的外观：
- en: '![](Images/3c55ee06-9812-4e68-9646-2f31719b7fac.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/3c55ee06-9812-4e68-9646-2f31719b7fac.png)'
- en: 'As you can see, it will launch VMs, load balancers with public IP addresses
    attached, and storage. Before we launch our cluster, we need to find a few bits
    of information about our Azure account:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，它将启动虚拟机、带有公共IP地址的负载均衡器和存储。在启动我们的集群之前，我们需要找到有关我们的Azure帐户的一些信息：
- en: AD Service principle ID
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AD服务主体ID
- en: AD Service principle key
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AD服务主体密钥
- en: 'To generate the required information, we are going to use a helper script that
    runs inside of a container. To run the script, you will need admin access to a valid
    Azure subscription. To run the script, simply run the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成所需的信息，我们将使用一个在容器内运行的辅助脚本。要运行该脚本，您需要对有效的Azure订阅具有管理员访问权限。要运行脚本，只需运行以下命令：
- en: '[PRE2]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will give you a URL, [https://microsoft.com/devicelogin](https://microsoft.com/devicelogin),
    and also a code to enter. Go to the URL and enter the code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为您提供一个URL，[https://microsoft.com/devicelogin](https://microsoft.com/devicelogin)，还有一个要输入的代码。转到该URL并输入代码：
- en: '![](Images/72247725-713a-42ad-a02e-97369dde5f79.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/72247725-713a-42ad-a02e-97369dde5f79.png)'
- en: 'This will log you in to your account on the command-line and ask you which
    of your subscriptions you would like to use. The full output of the helper script
    can be found in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在命令行中登录您的帐户，并询问您想要使用哪个订阅。辅助脚本的完整输出可以在以下截图中找到：
- en: '![](Images/e996f939-d086-454c-805a-eddb97d1e319.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/e996f939-d086-454c-805a-eddb97d1e319.png)'
- en: At the very end of the output is the information you need, so please make a
    note of it.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出的最后，您将找到所需的信息，请记下来。
- en: At the time of writing this book, there is a known issue of using the **Docker
    for Azure (Stable)** button on the Docker Community Edition for Azure page in
    the Docker Store. For now, we need to use an older version of the template. You
    can do this by using the following link: [https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fdownload.docker.com%2Fazure%2Fstable%2F18.03.0%2FDocker.tmpl](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fdownload.docker.com%2Fazure%2Fstable%2F18.03.0%2FDocker.tmpl).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，已知在Docker Store的Docker社区版Azure页面上使用“Docker for Azure（稳定版）”按钮存在问题。目前，我们需要使用较旧版本的模板。您可以通过以下链接执行此操作：[https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fdownload.docker.com%2Fazure%2Fstable%2F18.03.0%2FDocker.tmpl](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fdownload.docker.com%2Fazure%2Fstable%2F18.03.0%2FDocker.tmpl)。
- en: 'This will open up the Azure portal and present you with a screen where you
    need to enter several bits of information:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开Azure门户，并呈现一个屏幕，您需要在其中输入一些信息：
- en: '**Subscription**: Select the subscription you would like to use from the drop-down
    list'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订阅**：从下拉列表中选择您想要使用的订阅'
- en: '**Resource group**: Select the resource group you would like to use or create
    a new one'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源组**：选择您想要使用或创建新的资源组'
- en: '**Location**: Select where you would like to launch you Docker Swarm cluster'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**位置**：选择您想要启动Docker Swarm集群的位置'
- en: '**Ad Service Principle App ID**: This was generated by the helper script we
    just ran'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广告服务原则应用程序ID**：这是由我们刚刚运行的辅助脚本生成的'
- en: '**Ad Service Principle App Secret**: This was generated by the helper script
    we just ran'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广告服务原则应用程序密钥**：这是由我们刚刚运行的辅助脚本生成的'
- en: '**Enable Ext Logs**: Yes'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用Ext日志**：是'
- en: '**Enable System Prune**: No'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用系统清理**：否'
- en: '**Linux SSH Public Key**: Enter the public portion of your local SSH key here'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux SSH公钥**：在此处输入本地SSH密钥的公共部分'
- en: '**Linux Worker Count**: 2'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux工作节点计数**：2'
- en: '**Linux Worker VM Size**: Standard_D2_v2'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux工作节点VM大小**：Standard_D2_v2'
- en: '**Manager Count**: 1'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理器计数**：1'
- en: '**Manager VM Size**: Standard_D2_v2'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理器VM大小**：Standard_D2_v2'
- en: '**Swarm Name**: dockerswarm'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Swarm名称**：dockerswarm'
- en: 'Agree to the terms and conditions and then click on the **Purchase** button
    at the bottom of the page. Once you view the progress of the launch by clicking
    on the Deployment in Progress link in the notification area on the top of the
    menu, you should see something like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 同意条款和条件，然后点击页面底部的**购买**按钮。一旦您通过点击菜单顶部通知区域的“部署中”链接查看启动的进度，您应该会看到类似以下内容：
- en: '![](Images/f8479606-7175-4d43-8c08-1cf260a92606.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f8479606-7175-4d43-8c08-1cf260a92606.png)'
- en: 'Once completed, you will see several services listed under the resource group
    that you chose or created. One of these will be `dockerswarm-externalSSHLoadBalancer-public-ip`. Drill-down
    into the resource and you will be given the IP address that you can use to SSH
    into your Swarm Manager. To do this, run the following command:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您将在您选择或创建的资源组下看到几个服务。其中一个将是`dockerswarm-externalSSHLoadBalancer-public-ip`。深入研究资源，您将获得可以用于SSH到您的Swarm
    Manager的IP地址。要做到这一点，请运行以下命令：
- en: '[PRE3]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Note that we are using port 5000 rather than the standard port 22\. You should
    see something like the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用的是端口5000，而不是标准端口22。您应该会看到类似以下内容：
- en: '![](Images/e2bf3c3a-b3ce-4fef-b867-45ca8f93d88d.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/e2bf3c3a-b3ce-4fef-b867-45ca8f93d88d.png)'
- en: 'Once you are logged in to the manager node, we can then use the following commands
    to launch an application:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您登录到管理节点，我们可以使用以下命令启动应用程序：
- en: '[PRE4]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once launched, going to `dockerswarm-externalLoadBalancer-public-ip`—this will
    show the application. Once you have finished with your cluster, I would recommend
    removing the resource group rather than trying to remove the individual resources:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 启动后，转到`dockerswarm-externalLoadBalancer-public-ip`—这将显示应用程序。完成集群后，我建议删除资源组，而不是尝试删除单个资源：
- en: '![](Images/097dd1a2-64c9-48e0-add1-51a68c786429.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/097dd1a2-64c9-48e0-add1-51a68c786429.png)'
- en: Remember, you will be charged for the resources while they are active, even
    if you are not using them.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，只要资源处于活动状态，您就会被收费，即使您没有使用它们。
- en: Like with the Amazon Web Services cluster, please make sure that the resources
    are removed fully, otherwise you may end up with an unexpected bill.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 与亚马逊网络服务集群一样，请确保资源完全被删除，否则您可能会收到意外的账单。
- en: Docker for Cloud summary
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云摘要Docker
- en: As you can see, it has been mostly straightforward to launch a Swarm cluster
    in both Azure as well as Amazon Web Services by using the templates provided by
    Docker. While these templates are great, if you are starting out, they get very
    little in the way of support from Docker. I would recommend that if you are looking
    at an easy way to launch containers that are running production workloads in public
    clouds, you can take a look at the some of the solutions that we are going to
    be discussing next.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，使用Docker提供的模板在Azure和亚马逊网络服务中启动Swarm集群大多是直截了当的。虽然这些模板很棒，但如果您刚开始使用，它们在Docker方面的支持很少。我建议，如果您正在寻找一种在公共云中运行生产工作负载的容器的简单方法，您可以看一下我们接下来要讨论的一些解决方案。
- en: Amazon ECS and AWS Fargate
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 亚马逊ECS和AWS Fargate
- en: Amazon Web Services offers a few different container solutions. The one we are
    going to look at in this section is part of the Amazon **Elastic Container Service**
    (**ECS**) and is called AWS Fargate.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊网络服务提供了几种不同的容器解决方案。我们将在本节中查看的是亚马逊**弹性容器服务**（**ECS**）的一部分，称为AWS Fargate。
- en: Traditionally, Amazon ECS launches EC2 instances. Once launched, an Amazon ECS
    agent is deployed alongside a container runtime that allows you to then manage
    your containers using the AWS Console and command-line tools. AWS Fargate removes
    the need to launch EC2 instances, allowing you to simply launch containers without
    having to worry about managing a cluster or having the expense of EC2 instances.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，亚马逊ECS启动EC2实例。一旦启动，亚马逊ECS代理会部署在容器运行时旁边，允许您使用AWS控制台和命令行工具来管理您的容器。AWS Fargate消除了启动EC2实例的需要，使您可以简单地启动容器，而无需担心管理集群或承担EC2实例的费用。
- en: We are going to cheat slightly and work through the **Amazon ECS first run process.** You
    can access this by going to the following URL: [https://console.aws.amazon.com/ecs/home#/firstRun.](https://console.aws.amazon.com/ecs/home#/firstRun) This
    will take us through the four steps we need to take to launch a container within
    a Fargate cluster.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将稍微作弊，并通过**Amazon ECS首次运行过程**进行操作。您可以通过以下网址访问：[https://console.aws.amazon.com/ecs/home#/firstRun.](https://console.aws.amazon.com/ecs/home#/firstRun)
    这将带领我们完成启动Fargate集群中容器所需的四个步骤。
- en: 'Amazon ECS uses the following components:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊ECS使用以下组件：
- en: Container definition
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器定义
- en: Task definition
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务定义
- en: Service
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务
- en: Cluster
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群
- en: The first step in launching our AWS Fargate hosted container is to actually
    configure the first two components, that is, the container and task definitions.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动我们的AWS Fargate托管容器的第一步是实际配置前两个组件，即容器和任务定义。
- en: The container definition is where the base configuration for the container is
    defined. Think of this as adding the flags you would use to launch a container
    using the Docker client on the command line—for example, you name the container,
    define the image to use, set the network, and so on.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 容器定义是容器的基本配置所在。可以将其视为在命令行上使用Docker客户端启动容器时添加的标志，例如，您可以命名容器，定义要使用的镜像，设置网络等等。
- en: 'For our example, there are three predefined options and a custom option. Click
    on the Configure button in the custom options and enter the following information:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的示例，有三个预定义选项和一个自定义选项。单击自定义选项中的“配置”按钮，并输入以下信息：
- en: '**Container name**: `cluster-container`'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器名称**：`cluster-container`'
- en: '**Image**: `russmckendrick/cluster:latest`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**镜像**：`russmckendrick/cluster:latest`'
- en: '**Memory Limits (MiB)**: Leave at the default'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存限制（MiB）**：保持默认值'
- en: '**Port mappings**: Enter `80` and leave `tcp` selected'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口映射**：输入`80`，并保留选择`tcp`'
- en: 'Then, click on the **Update** button. For the task definition, click on the
    **Edit** button and enter the following:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，单击**更新**按钮。对于任务定义，单击**编辑**按钮，并输入以下内容：
- en: '**Task definition name**: `cluster-task`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务定义名称**：`cluster-task`'
- en: '**Network mode**: Should be `awsvpc`; you can''t change this option'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络模式**：应该是`awsvpc`；您无法更改此选项'
- en: '**Task execution role**: Leave as `ecsTaskExecutionRole`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务执行角色**：保持为`ecsTaskExecutionRole`'
- en: '**Compatibilities**: This should default to FARGATE and you should not be able
    to edit it'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**兼容性**：这应该默认为FARGATE，您应该无法编辑它'
- en: '**Task memory** and **Task CPU**: Leave both at their default options'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务内存**和**任务CPU**：将两者都保留在它们的默认选项上'
- en: Once updated, click on the **Save** button. Now, you can click on the Next button
    at the bottom of the page. This will take us to the second step which is where
    the service is defined.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后，点击**保存**按钮。现在，您可以点击页面底部的下一步按钮。这将带我们到第二步，即定义服务的地方。
- en: A service runs tasks which in turn has a container associated with them. The
    default services are fine, so click on the **Next** button to proceed to the third
    step of the launch process. The first step is where the cluster is created. Again,
    the default values are fine, so click on the **Next** button to be taken to the
    review page.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一个服务运行任务，而任务又与一个容器相关联。默认服务是可以的，所以点击**下一步**按钮，继续启动过程的第三步。第一步是创建集群。同样，默认值是可以的，所以点击**下一步**按钮，进入审阅页面。
- en: 'This is your last chance to double check the task, service, and cluster definitions
    before any services are launched. If you are happy with everything, then click
    on the **Create** button. From here, you will be taken to a page where you can
    view the status of the various AWS services that make our AWS Fargate cluster:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您最后一次在启动任何服务之前仔细检查任务、服务和集群定义的机会。如果您对一切满意，然后点击**创建**按钮。从这里，您将被带到一个页面，您可以查看使我们的AWS
    Fargate集群的各种AWS服务的状态：
- en: '![](Images/b3ded49a-504d-40c2-b6ad-689bf2251a3d.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b3ded49a-504d-40c2-b6ad-689bf2251a3d.png)'
- en: 'Once everything has changed from **pending** to **co****mplete**, you will
    be able to click on the **View service** button to be taken to the Service overview
    page:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦一切从**待定**变为**完成**，您就可以点击**查看服务**按钮，进入服务概述页面：
- en: '![](Images/2a59d6e9-66b1-436b-8c41-a3c085ce0db7.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/2a59d6e9-66b1-436b-8c41-a3c085ce0db7.png)'
- en: 'Now, we just need to know the public IP address of our container. To find this,
    click on the **Task** tab, and then select the unique ID of the running task.
    In the Network section of the page, you should be able to find both the Private
    and Public IP addresses of the tasks. Entering the Public IP in your browser should
    bring up the now familiar cluster application:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需要知道容器的公共IP地址。要找到这个，点击**任务**选项卡，然后选择正在运行的任务的唯一ID。在页面的网络部分，您应该能够找到任务的私有和公共IP地址。在浏览器中输入公共IP地址应该会打开现在熟悉的集群应用程序：
- en: '![](Images/81f3646d-0867-437f-a2f6-f9cebb7b82ed.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/81f3646d-0867-437f-a2f6-f9cebb7b82ed.png)'
- en: 'You will notice that the container name that''s displayed is the hostname of
    the container, and includes the internal IP address. You can also view the logs
    from the container by click on the Logs tab:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到显示的容器名称是容器的主机名，并包括内部IP地址。您还可以通过点击日志选项卡查看容器的日志：
- en: '![](Images/da035de0-00f4-4c76-970e-d4b9dfd0f203.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/da035de0-00f4-4c76-970e-d4b9dfd0f203.png)'
- en: So, how much is this costing? To be able to run the container for an entire
    month would cost around $14, which works out at about $0.019 per hour.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这要花费多少钱呢？要能够运行容器一个整月大约需要花费14美元，这相当于每小时约0.019美元。
- en: This costing means that if you are going to be running a number of tasks 24/7,
    then Fargate may not be the most cost-effective way of running your containers.
    Instead, you may want to take the Amazon ECS EC2 option, where you can pack more
    containers onto your resource, or the Amazon EKS service, which we will look at
    later in this chapter. However, for quickly bringing up a container and then terminating
    it, Fargate is great—there is a low barrier to launching the containers and the
    number of supporting resources in small.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这种成本意味着，如果您要全天候运行多个任务，那么Fargate可能不是运行容器的最具成本效益的方式。相反，您可能希望选择Amazon ECS EC2选项，在那里您可以将更多的容器打包到您的资源上，或者Amazon
    EKS服务，我们将在本章后面讨论。然而，对于快速启动容器然后终止它，Fargate非常适用——启动容器的门槛很低，支持资源的数量也很少。
- en: Once you have finished with your Fargate container, you should delete the cluster.
    This will remove all of the services associated with the cluster. Once the cluster
    has been removed, go into the **Task Definitions** page and deregister them if
    needed.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 完成Fargate容器后，应删除集群。这将删除与集群关联的所有服务。一旦集群被移除，进入**任务定义**页面，如果需要，取消注册它们。
- en: Next, we are going to take a look at Azure App Services.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看一下Azure应用服务。
- en: Microsoft Azure App Services
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Microsoft Azure应用服务
- en: '**Microsoft Azure App Services** is a fully managed platform that allows you
    to deploy your application and let Azure worry about managing the platform they
    are running on. There are several options available when launching an App Service.
    You can run applications written in .NET, .NET Core, Ruby, Node.js, PHP, Python,
    and Ruby, or you can launch an image directly from a container image registry.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Azure应用服务**是一个完全托管的平台，允许您部署应用程序，并让Azure担心管理它们正在运行的平台。在启动应用服务时有几个选项可用。您可以运行用.NET、.NET
    Core、Ruby、Node.js、PHP、Python和Ruby编写的应用程序，或者您可以直接从容器镜像注册表启动镜像。'
- en: In this quick walkthrough, we are going to be launching the cluster image from
    the Docker Hub. To do this, login to the Azure portal at [https://portal.azure.com/](https://portal.azure.com/) and
    select App Services from the left-hand side menu.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个快速演示中，我们将从Docker Hub启动集群镜像。要做到这一点，请登录到Azure门户网站[https://portal.azure.com/](https://portal.azure.com/)，并从左侧菜单中选择应用服务。
- en: 'On the page that loads, click on the **+Add** button. You have several options
    to choose from here:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载的页面上，点击**+添加**按钮。您有几个选项可供选择：
- en: '![](Images/3917916c-1828-44cd-92f2-fe766b956704.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/3917916c-1828-44cd-92f2-fe766b956704.png)'
- en: We are going to launching a Web App, so click on the tile for that. Once the
    tile has expanded, click on the **Create** button.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要启动一个Web应用，所以点击相应的图块。一旦图块展开，点击**创建**按钮。
- en: 'On the page that opens, there are several options. Fill them in as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开的页面上，有几个选项。按以下方式填写它们：
- en: '**App Name**: Choose a unique name for the application.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用名称**：为应用程序选择一个唯一的名称。'
- en: '**Subscription**: Choose a valid subscription.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订阅**：选择有效的订阅。'
- en: '**Resource Group**: Leave the create new option selected.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源组**：保持选择创建新选项。'
- en: '**OS**: Leave as Linux.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：保持为Linux。'
- en: '**Publish**: Select Docker Image.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布**：选择Docker镜像。'
- en: '**App Service plan/location**: By default, the most expensive plan is selected,
    so clicking here will take you a page where you can create a new plan. To do this,
    click on **Create new**, name your plan and select a location, and then finally
    choose a Pricing tier. For our needs, the **Dev**/**Test** plan will be fine.
    Once selected, click on **Apply**.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用服务计划/位置**：默认情况下，选择最昂贵的计划，因此点击这里将带您到一个页面，您可以在其中创建一个新计划。要做到这一点，点击**创建新的**，命名您的计划并选择一个位置，最后选择一个定价层。对于我们的需求，**开发**/**测试**计划将很好。一旦选择，点击**应用**。'
- en: '**Configure container:** Clicking here will take you to the container options.
    Here, you have a few options: Single Container, Docker Compose, or Kubernetes.
    For now, we are going to launching a single container. Click on the **Docker Hub**
    option and enter `russmckendrick/cluster:latest`. Once entered, you will be able
    to click on the **Apply** button.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置容器：** 点击这里将带您到容器选项。在这里，您有几个选项：单个容器、Docker Compose 或 Kubernetes。现在，我们将启动一个单个容器。点击
    **Docker Hub** 选项并输入 `russmckendrick/cluster:latest`。输入后，您将能够点击 **应用** 按钮。'
- en: 'Once all of the information has been filled in, you will be able to then click
    on **Create** to launch the Web App Service. Once launched, you should be able
    to access the service via the URL provided by Azure, for example, mine was `https://masteringdocker.azurewebsites.net/`.
    Opening this a browser will display the cluster application:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有信息都填写完毕，您就可以点击 **创建** 来启动 Web 应用服务。一旦启动，您应该能够通过 Azure 提供的 URL 访问服务，例如，我的是
    `https://masteringdocker.azurewebsites.net/`。在浏览器中打开这个链接将显示集群应用程序：
- en: '![](Images/379ca74a-fc1d-4ccb-a7cb-24880887ae55.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/379ca74a-fc1d-4ccb-a7cb-24880887ae55.png)'
- en: As you can see, this time, we have the container ID rather than a full hostname
    like we got when launching the container on AWS Fargate. The container at this
    spec will cost us around $0.05 per hour, or $36.50 per month. To remove the container,
    simply remove the resource group.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，这一次我们有容器 ID 而不是像在 AWS Fargate 上启动容器时得到的完整主机名。这个规格的容器每小时大约会花费我们 0.05
    美元，或者每月 36.50 美元。要删除容器，只需删除资源组。
- en: Kubernetes in Microsoft Azure, Google Cloud, and Amazon Web Services
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Microsoft Azure、Google Cloud 和 Amazon Web Services 中的 Kubernetes
- en: The last thing we are going to take a look at is how easy is it to launch a
    Kubernetes cluster in the three main public clouds. In the previous chapter, we
    launched a Kubernetes cluster locally using the built-in functionality of the
    Docker Desktop applications. To start with, we are going to look at the quickest
    way to get started with Kubernetes on public clouds, starting with Microsoft Azure.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要看的最后一件事是在三个主要的公共云中启动 Kubernetes 集群有多容易。在上一章中，我们使用 Docker Desktop 应用程序的内置功能在本地启动了一个
    Kubernetes 集群。首先，我们将看一下在公共云上开始使用 Kubernetes 的最快方法，从 Microsoft Azure 开始。
- en: Azure Kubernetes Service
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Kubernetes Service
- en: The **Azure Kubernetes Service** (**AKS**), is an extremely simple service to
    launch and configure. I will be using the Azure command-line tools on my local
    machine; you will also be able to use the command-line tools by using the Azure
    Cloud Shell which is built into the Azure Portal.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**Azure Kubernetes Service**（**AKS**）是一个非常简单的服务，可以启动和配置。我将在本地机器上使用 Azure 命令行工具；您也可以使用内置在
    Azure 门户中的 Azure Cloud Shell 使用命令行工具。'
- en: 'The first thing we will need to do is create a resource group to launch our
    AKS cluster into. To create one called `MasteringDockerAKS`, run the following
    command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是创建一个资源组，将我们的 AKS 集群启动到其中。要创建一个名为 `MasteringDockerAKS` 的资源组，请运行以下命令：
- en: '[PRE5]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now that we have the resource group, we can launch a two node Kubernetes cluster
    by running the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了资源组，我们可以通过运行以下命令来启动一个两节点的 Kubernetes 集群：
- en: '[PRE6]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'It will take several minutes to launch the cluster. Once launched, we will
    need to copy the configuration so that we can interact with the cluster by using
    our local copy of `kubectl`. To do this, run the following command:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 启动集群需要几分钟时间。一旦启动，我们需要复制配置，以便我们可以使用本地的 `kubectl` 副本与集群进行交互。要做到这一点，请运行以下命令：
- en: '[PRE7]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will configure your local copy of `kubectl` to talk to the AKS cluster
    you have just launched. You should now see the cluster listed in the Docker menu
    under Kubernetes:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这将配置您本地的 `kubectl` 副本，以便与您刚刚启动的 AKS 集群进行通信。现在您应该在 Docker 菜单下的 Kubernetes 中看到集群列表：
- en: '![](Images/1eb9ae6d-7ee8-4742-9401-ab8de398248b.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/1eb9ae6d-7ee8-4742-9401-ab8de398248b.png)'
- en: 'Running the following commands will show you the version of the server that
    your `kubectl` client is talking to as well as details regarding the nodes:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将显示您的`kubectl`客户端正在与其交谈的服务器版本以及有关节点的详细信息：
- en: '[PRE8]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can see the output of the preceding commands in the following screenshot:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下截图中看到前面命令的输出：
- en: '![](Images/37a0e9be-d1de-4cf7-85aa-55b3529f2d03.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/37a0e9be-d1de-4cf7-85aa-55b3529f2d03.png)'
- en: 'Now that we have our cluster up and running, we need to launch something. Luckily,
    there is an excellent open source microservices demo from Weave which launches
    a demo shop that sell socks. To launch the demo, we simply need to run the following
    commands:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的集群已经正常运行，我们需要启动一些东西。幸运的是，Weave有一个出色的开源微服务演示，可以启动一个出售袜子的演示商店。要启动演示，我们只需要运行以下命令：
- en: '[PRE9]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'It will take about five minutes for the demo to launch. You can check the status
    of the `pods` by running the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 演示启动大约需要五分钟。您可以通过运行以下命令来检查`pods`的状态：
- en: '[PRE10]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once everything is up and running, you should see something like the following
    output:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都正常运行后，您应该看到类似以下的输出：
- en: '![](Images/7acc42f3-dfd4-4920-b859-73cb984930b4.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/7acc42f3-dfd4-4920-b859-73cb984930b4.png)'
- en: 'Now that our application has launched, we need a way to access it. Check the
    services by running the following command:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的应用程序已经启动，我们需要一种访问它的方式。通过运行以下命令来检查服务：
- en: '[PRE11]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This shows us that there is a service called `front-end`. We are going to create
    a Load Balancer and attach it to this service. To do this, run the following command:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这向我们展示了一个名为`front-end`的服务。我们将创建一个负载均衡器并将其附加到此服务。要做到这一点，请运行以下命令：
- en: '[PRE12]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can check the status of the Load Balancer by running the following commands:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行以下命令来检查负载均衡器的状态：
- en: '[PRE13]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Once launched, you should see something like the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 启动后，您应该看到类似以下的内容：
- en: '![](Images/de5124d9-7437-41de-a789-dd18f33e536f.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/de5124d9-7437-41de-a789-dd18f33e536f.png)'
- en: 'As you can see from the preceding output, for my store, the IP address was `104.211.63.146`
    and the port was `8079`. Opening `http://104.211.63.146:8079/` in a browser presented
    me with the following page:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中可以看出，对于我的商店，IP地址是`104.211.63.146`，端口是`8079`。在浏览器中打开`http://104.211.63.146:8079/`后，我看到了以下页面：
- en: '![](Images/635d767c-7e48-42f0-90fa-2d934c687d6f.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/635d767c-7e48-42f0-90fa-2d934c687d6f.png)'
- en: 'Once you have finished clicking around the store, you can remove it by running
    the following command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 完成商店浏览后，您可以通过运行以下命令将其删除：
- en: '[PRE14]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To remove the AKS cluster and resource group, run the following commands:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除AKS集群和资源组，请运行以下命令：
- en: '[PRE15]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Remember to check that everything has been removed from the Azure portal as
    expected to avoid any unexpected charges. Finally, you can remove the configuration
    from your local `kubectl` configuration by running the following:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住检查Azure门户中的所有内容是否按预期移除，以避免任何意外费用。最后，您可以通过运行以下命令从本地`kubectl`配置中删除配置：
- en: '[PRE16]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Next up, we are going to look at launching a similar cluster in Google Cloud.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何在Google Cloud中启动类似的集群。
- en: Google Kubernetes Engine
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Kubernetes Engine
- en: The **Google Kubernetes Engine**, as you may have already guessed, is very tightly
    integrated into Google's Cloud platform. Rather than going into more detail, let's
    dive straight in and launch a cluster. I am assuming that you already have a Google
    Cloud account, a project with billing enabled, and finally the Google Cloud SDK
    installed and configured to interact with your project.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经猜到的那样，**Google Kubernetes Engine**与Google的云平台紧密集成。而不是深入了解更多细节，让我们直接启动一个集群。我假设您已经拥有Google
    Cloud账户，一个启用了计费的项目，最后安装并配置了Google Cloud SDK以与您的项目进行交互。
- en: 'To launch the cluster, simply run the following command:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动集群，只需运行以下命令：
- en: '[PRE17]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once the cluster has been launched, your `kubectl` config will be automatically
    updated and the context will be set for the newly launched cluster. You can view
    information on the nodes by running the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦集群启动，您的`kubectl`配置将自动更新，并为新启动的集群设置上下文。您可以通过运行以下命令查看有关节点的信息：
- en: '[PRE18]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](Images/4b3bd18a-a747-4f9f-85ad-5c8c20d6efb2.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/4b3bd18a-a747-4f9f-85ad-5c8c20d6efb2.png)'
- en: 'Now that we have our cluster up and running, let''s launch the demo shop by
    repeating the commands we used last time:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的集群已经运行起来了，让我们通过重复上次使用的命令来启动演示商店：
- en: '[PRE19]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Again, once the `front-end-lb` service has been created, you should be able
    to find the external IP address port to use:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，一旦创建了`front-end-lb`服务，您应该能够找到要使用的外部IP地址端口：
- en: '![](Images/1b88a296-8862-4db4-9aee-417969dc98e4.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/1b88a296-8862-4db4-9aee-417969dc98e4.png)'
- en: 'Entering these into a browser will open the store:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些输入到浏览器中将打开商店：
- en: '![](Images/dc44d962-fe1e-4fdc-9903-74f85f5b7c90.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/dc44d962-fe1e-4fdc-9903-74f85f5b7c90.png)'
- en: 'To remove the cluster, simply run the following:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除集群，只需运行以下命令：
- en: '[PRE20]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will also remove the context and cluster from `kubectl`.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这也将从`kubectl`中删除上下文和集群。
- en: Amazon Elastic Container Service for Kubernetes
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 亚马逊弹性容器服务 for Kubernetes
- en: The final Kubernetes service we are going to take a look at is the **Amazon
    Elastic Container Service for Kubernetes**, or **Amazon EKS**, for short. This
    is the most recently launched service of the three services we are covering. In
    fact, you could say that Amazon was very late to the Kubernetes party.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要看的最后一个Kubernetes服务是**亚马逊弹性容器服务 for Kubernetes**，简称**Amazon EKS**。这是我们正在介绍的三项服务中最近推出的服务。事实上，你可以说亚马逊非常晚才加入Kubernetes的行列。
- en: Unfortunately, the command-line tools for Amazon are not as friendly as the
    ones we used for Microsoft Azure and Google Cloud. Because of this, I am going
    to be using a tool called `eksctl`, which was written by Weave, the same people
    who created the demo store we have been using. You can find details on `eksctl`
    and also the Amazon command-line tools in the *Further reading* section at the
    end of this chapter.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，亚马逊的命令行工具不像我们用于Microsoft Azure和Google Cloud的工具那样友好。因此，我将使用一个名为`eksctl`的工具，这个工具是由Weave编写的，他们也创建了我们一直在使用的演示商店。您可以在本章末尾的*进一步阅读*部分找到有关`eksctl`和亚马逊命令行工具的详细信息。
- en: 'To launch our Amazon EKS cluster, we need to run the following command:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动我们的Amazon EKS集群，我们需要运行以下命令：
- en: '[PRE21]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'It will take several minutes to launch the cluster, but you will receive feedback
    on the command line throughout the process. Also, as `eksctl` is using CloudFormation,
    you can also check its progress in the AWS Console. Once complete, you should
    see something like the following output:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 启动集群需要几分钟时间，但在整个过程中，您将在命令行中收到反馈。此外，由于`eksctl`正在使用CloudFormation，您还可以在AWS控制台中检查其进度。完成后，您应该会看到类似以下输出：
- en: '![](Images/4c382493-e1ee-4ea7-9599-6da285f0e2f8.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/4c382493-e1ee-4ea7-9599-6da285f0e2f8.png)'
- en: 'As part of the launch, `eksctl` will have configured your local `kubectl` context,
    meaning that you can run the following:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 作为启动的一部分，`eksctl`将配置您的本地`kubectl`上下文，这意味着您可以运行以下命令：
- en: '[PRE22]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](Images/59956609-90b8-468a-8db8-f878996e8997.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/59956609-90b8-468a-8db8-f878996e8997.png)'
- en: 'Now that we have the cluster up and running, we can launch the demo store,
    just like we did previously:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的集群已经运行起来了，我们可以像之前一样启动演示商店：
- en: '[PRE23]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You may notice that the external IP that''s listed when running that last command
    looks a little strange:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到在运行最后一个命令时列出的外部IP看起来有点奇怪：
- en: '![](Images/50a3cbee-1b92-4813-9307-2948a9b16d39.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/50a3cbee-1b92-4813-9307-2948a9b16d39.png)'
- en: 'That is because it is a DNS name rather than an IP address. To find the full
    URL, you can run the following command:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为它是一个 DNS 名称而不是 IP 地址。要找到完整的 URL，您可以运行以下命令：
- en: '[PRE24]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![](Images/c4d6c6ea-15b9-49e4-b88c-96a35fd6cae7.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/c4d6c6ea-15b9-49e4-b88c-96a35fd6cae7.png)'
- en: 'Entering the URL and porting into a browser will, as you might have guessed,
    show the demo store:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中输入 URL 和端口将会显示演示商店，正如您可能已经猜到的那样：
- en: '![](Images/08ad77e8-6b8f-4743-9bcf-130c42f9c263.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/08ad77e8-6b8f-4743-9bcf-130c42f9c263.png)'
- en: 'To remove the cluster, run the following commands:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除集群，请运行以下命令：
- en: '[PRE25]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This will return the names of the clusters that are running. Once you have
    the name, run the following command, making sure to reference your own cluster:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回正在运行的集群的名称。一旦您有了名称，运行以下命令，确保引用您自己的集群：
- en: '[PRE26]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Your terminal output should look as follows:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 您的终端输出应如下所示：
- en: '![](Images/fb0a673e-7663-483f-8b99-313189fbf179.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/fb0a673e-7663-483f-8b99-313189fbf179.png)'
- en: Kubernetes summary
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes 摘要
- en: This concludes our brief look at Kubernetes in Microsoft Azure, Google Cloud,
    and Amazon Web Services. We covered a few interesting points here. The first is
    that we managed to launch and manage our clusters using the command line with
    a few simple steps, although we did have to use a third-party tool for Amazon
    EKS.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了我们对 Microsoft Azure、Google Cloud 和 Amazon Web Services 中 Kubernetes 的简要介绍。我们在这里涵盖了一些有趣的观点。首先是，我们成功地使用命令行启动和管理了我们的集群，只需几个简单的步骤，尽管我们确实需要使用第三方工具来使用
    Amazon EKS。
- en: The second and most important point is that once we had access to the cluster
    using `kubectl`, the experience was exactly the same across all three platforms.
    At no point did we have to access the cloud provider's web-based control panel
    to tweak or review a setting. Everything was done using the same commands; deploying
    the same code and services was done with no thought or consideration on our part
    regarding any of the individual services offered by the cloud providers.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个最重要的观点是，一旦我们使用 `kubectl` 访问集群，体验在所有三个平台上都是完全相同的。在任何时候，我们都不需要访问云提供商的基于 web
    的控制面板来调整或审查设置。一切都是使用相同的命令完成的；部署相同的代码和服务都是毫不费力的，我们不需要考虑云提供商提供的任何个别服务。
- en: 'We can even run the demo store locally using Docker, with exactly the same
    commands. Just start your Kubernetes cluster up, make sure that you have the local
    Docker context selected, and then run the following commands:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以使用 Docker 在本地运行演示商店，使用完全相同的命令。只需启动您的 Kubernetes 集群，确保选择了本地 Docker 上下文，然后运行以下命令：
- en: '[PRE27]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'As you can see from the following output, the *load balanced* IP, in this case,
    is `localhost`. Opening your browser and entering `http://localhost:8079` will
    take you to the store:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从以下输出中所见，*负载均衡* IP，在这种情况下，是 `localhost`。打开浏览器并输入 `http://localhost:8079` 将带您进入商店：
- en: '![](Images/d8fe2e37-04a3-4b51-a7bb-7af5cae602f9.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/d8fe2e37-04a3-4b51-a7bb-7af5cae602f9.png)'
- en: 'You can remove the store by running the following command:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行以下命令删除商店：
- en: '[PRE28]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This level of consistency across multiple providers and even local machines
    hasn't really been achievable before without a lot of work and configuration or
    via a closed source subscription-based service.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在多个提供商甚至本地机器上实现这种一致性水平以前确实是不可行的，除非经过大量工作和配置，或者通过封闭源订阅服务。
- en: Summary
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have taken a look at how we can deploy Docker Swarm clusters
    into a cloud provider using the tools provided by Docker themselves. We have also
    taken a look at two of the services offered by public clouds to run containers
    away from the core Docker toolset.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看了一下如何使用 Docker 自己提供的工具将 Docker Swarm 集群部署到云提供商。我们还看了公共云提供的两项服务，以便远离核心
    Docker 工具集来运行容器。
- en: Finally, we looked at launching Kubernetes clusters in various clouds and running
    the same demo application in all of them. While it was clear from any of the commands
    we ran, all three of the public clouds were using various versions of Docker as
    the container engine. Though this could be subject to change by the time you read
    this, as in theory, they could switch to another engine with little impact.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们看了在各种云中启动Kubernetes集群，并在所有云中运行相同的演示应用程序。尽管从我们运行的任何命令中都很明显，所有三个公共云都使用各种版本的Docker作为容器引擎。尽管在您阅读本文时可能会发生变化，但理论上，它们可以切换到另一个引擎而几乎没有影响。
- en: In the next chapter, we are going to move back to working Docker and take a
    look at Portainer, a web-based interface for managing your Docker installation.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将回到使用Docker并查看Portainer，这是一个用于管理Docker安装的基于Web的界面。
- en: Questions
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'True or false: Docker for AWS and Docker for Azure launches Kubernetes clusters
    for you to launch your containers on.'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假：Docker for AWS和Docker for Azure为您启动Kubernetes集群，以便在其上启动容器。
- en: What Amazon service don't you have to directly manage if you're using Amazon
    Fargate?
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用Amazon Fargate，您不必直接管理哪种亚马逊服务？
- en: What type of application do we need to launch in Azure?
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要在Azure中启动什么类型的应用程序？
- en: Once launched, what is the command we need to run to create the namespace for
    the Sock Shop store?
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦启动，我们需要运行什么命令来为Sock Shop商店创建命名空间？
- en: How do you find out full details about the Load Balancer?
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何找到有关负载均衡器的详细信息？
- en: Further reading
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'You can find details of the Docker Cloud service closing down at the following
    links:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下链接找到有关Docker Cloud服务关闭的详细信息：
- en: 'Docker Cloud Migration Notification and FAQs: [https://success.docker.com/article/cloud-migration](https://success.docker.com/article/cloud-migration)'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Cloud迁移通知和常见问题解答：[https://success.docker.com/article/cloud-migration](https://success.docker.com/article/cloud-migration)
- en: 'Stuck! Docker Cloud Shutdown!: [https://blog.cloud66.com/stuck-docker-cloud-shutdown/](https://blog.cloud66.com/stuck-docker-cloud-shutdown/)'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡住了！Docker Cloud关闭！：[https://blog.cloud66.com/stuck-docker-cloud-shutdown/](https://blog.cloud66.com/stuck-docker-cloud-shutdown/)
- en: 'More details on the templating services using by Docker for AWS and Docker
    for Azure can be found at the following links:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Docker for AWS和Docker for Azure使用的模板服务的更多详细信息，请参阅以下链接：
- en: AWS CloudFormation: [https://aws.amazon.com/cloudformation/](https://aws.amazon.com/cloudformation/)
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CloudFormation：[https://aws.amazon.com/cloudformation/](https://aws.amazon.com/cloudformation/)
- en: Azure ARM templates: [https://azure.microsoft.com/en-gb/resources/templates/](https://docs.microsoft.com/en-gb/azure/azure-resource-manager/resource-group-overview)
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure ARM模板：[https://azure.microsoft.com/en-gb/resources/templates/](https://docs.microsoft.com/en-gb/azure/azure-resource-manager/resource-group-overview)
- en: ARM template Visualizer: [http://armviz.io/](http://armviz.io/)
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM模板可视化器：[http://armviz.io/](http://armviz.io/)
- en: 'The cloud services we used to launch containers can be found at the following
    links:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用来启动容器的云服务可以在以下链接找到：
- en: Amazon ECS: [https://aws.amazon.com/ecs/](https://aws.amazon.com/ecs/)
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon ECS：[https://aws.amazon.com/ecs/](https://aws.amazon.com/ecs/)
- en: AWS Fargate: [https://aws.amazon.com/fargate/](https://aws.amazon.com/fargate/)
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'AWS Fargate: [https://aws.amazon.com/fargate/](https://aws.amazon.com/fargate/)'
- en: Azure Web Apps: [https://azure.microsoft.com/en-gb/services/app-service/web/](https://azure.microsoft.com/en-gb/services/app-service/web/)
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Web Apps：[https://azure.microsoft.com/en-gb/services/app-service/web/](https://azure.microsoft.com/en-gb/services/app-service/web/)
- en: 'The three Kubernetes services can be found at the following links:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 三个Kubernetes服务可以在以下链接找到：
- en: Azure Kubernetes Service: [https://azure.microsoft.com/en-gb/services/kubernetes-service/](https://azure.microsoft.com/en-gb/services/kubernetes-service/)
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Kubernetes服务：[https://azure.microsoft.com/en-gb/services/kubernetes-service/](https://azure.microsoft.com/en-gb/services/kubernetes-service/)
- en: Google Kubernetes Engine: [https://cloud.google.com/kubernetes-engine/](https://cloud.google.com/kubernetes-engine/)
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Kubernetes Engine：[https://cloud.google.com/kubernetes-engine/](https://cloud.google.com/kubernetes-engine/)
- en: Amazon Elastic Container Service for Kubernetes: [https://aws.amazon.com/eks/](https://aws.amazon.com/eks/)
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊弹性容器服务 for Kubernetes：[https://aws.amazon.com/eks/](https://aws.amazon.com/eks/)
- en: 'Quick-starts for the various command-line tools used in the chapter can be
    found at the following links:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的各种命令行工具的快速入门可以在以下链接找到：
- en: Azure CLI: [https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest](https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest)
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure CLI：[https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest](https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest)
- en: Google Cloud SDK: [https://cloud.google.com/sdk/](https://cloud.google.com/sdk/)
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌云SDK：[https://cloud.google.com/sdk/](https://cloud.google.com/sdk/)
- en: AWS Command-Line Interface: [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS命令行界面：[https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)
- en: eksctl – a CLI for Amazon EKS: [https://eksctl.io/](https://eksctl.io/)
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: eksctl - 用于Amazon EKS的CLI：[https://eksctl.io/](https://eksctl.io/)
- en: 'Finally, for more details on the demo store, go to the following link:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，有关演示商店的更多详细信息，请访问以下链接：
- en: Sock Shop: [https://microservices-demo.github.io](https://microservices-demo.github.io)
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sock Shop：[https://microservices-demo.github.io](https://microservices-demo.github.io)
