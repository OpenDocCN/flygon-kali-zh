["```cs\ndotnet sdk check \n\n```", "```cs\n.NET SDKs:\nVersion                         Status\n-----------------------------------------------------------------------------\n3.1.412                         Up to date.\n5.0.202                         Patch 5.0.206 is available.\n... \n\n```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\"\n\n    >\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net6.0\n\n    </TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n      </PropertyGroup>\n    </Project> \n\n    ```", "```cs\n    XDocument doc = new\n\n    (); \n\n    ```", "```cs\n    The type or namespace name 'XDocument' could not be found (are you missing a using directive or an assembly reference?) \n\n    ```", "```cs\n using\n\n System.Xml.Linq; // XDocument \n\n```", "```cs\n     string\n\n     s1 = \"Hello\"\n\n    ; \n    String s2 = \"World\"\n\n    ;\n    WriteLine($\"\n\n    {s1}\n\n    {s2}\n\n    \"\n\n    ); \n\n    ```", "```cs\n    <ItemGroup>\n      <Using Remove=\"System\"\n\n     />\n    </ItemGroup> \n\n    ```", "```cs\n    The type or namespace name 'String' could not be found (are you missing a using directive or an assembly reference?) \n\n    ```", "```cs\n     using\n\n     System; // String \n\n    ```", "```cs\nWriteLine($\"int.MaxValue = \n\n{\n\nint\n\n.MaxValue:N0}\n\n\"\n\n);\nWriteLine($\"nint.MaxValue = \n\n{\n\nnint\n\n.MaxValue:N0}\n\n\"\n\n); \n\n```", "```cs\nint.MaxValue = 2,147,483,647\nnint.MaxValue = 9,223,372,036,854,775,807 \n\n```", "```cs\n    dotnet new classlib -f netstandard2.0 \n\n    ```", "```cs\n    dotnet new globaljson --sdk-version 3.1.412 \n\n    ```", "```cs\n    {\n      \"sdk\"\n\n    : {\n        \"version\"\n\n    : \"3.1.412\"\n\n      }\n    } \n\n    ```", "```cs\n    dotnet new classlib \n\n    ```", "```cs\n    Could not execute because the application was not found or a compatible .NET SDK is not installed. \n\n    ```", "```cs\n    WriteLine(\"I can run everywhere!\"\n\n    );\n    WriteLine($\"OS Version is \n\n    {Environment.OSVersion}\n\n    .\"\n\n    );\n    if\n\n     (OperatingSystem.IsMacOS())\n    {\n      WriteLine(\"I am macOS.\"\n\n    );\n    }\n    else\n\n     if\n\n     (OperatingSystem.IsWindowsVersionAtLeast(major: 10\n\n    ))\n    {\n      WriteLine(\"I am Windows 10 or 11.\"\n\n    );\n    }\n    else\n\n    {\n      WriteLine(\"I am some other mysterious OS.\"\n\n    );\n    }\n    WriteLine(\"Press ENTER to stop me.\"\n\n    );\n    ReadLine(); \n\n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\"\n\n    >\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net6.0\n\n    </TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n\n     **<RuntimeIdentifiers>**\n\n     **win10-x64;osx-x64;osx**\n\n    **.11.0**\n\n    **-arm64;linux-x64;linux-arm64**\n\n     **</RuntimeIdentifiers>**\n\n      </PropertyGroup>\n    </Project> \n\n    ```", "```cs\ndotnet --info \n\n```", "```cs\n.NET SDK (reflecting any global.json):\n Version:   6.0.100\n Commit:    22d70b47bc\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.19043\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100\\\nHost (useful for support):\n  Version: 6.0.0\n  Commit:  91ba01788d\n.NET SDKs installed:\n  3.1.412 [C:\\Program Files\\dotnet\\sdk]\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\n.NET runtimes installed:\n  Microsoft.AspNetCore.All 2.1.29 [...\\dotnet\\shared\\Microsoft.AspNetCore.All]\n... \n\n```", "```cs\n    dotnet publish -c Release -r win10-x64 \n\n    ```", "```cs\n    Microsoft (R) Build Engine version 17.0.0+073022eb4 for .NET\n    Copyright (C) Microsoft Corporation. All rights reserved.\n      Determining projects to restore...\n      Restored C:\\Code\\Chapter07\\DotNetEverywhere\\DotNetEverywhere.csproj (in 46.89 sec).\n      DotNetEverywhere -> C:\\Code\\Chapter07\\DotNetEverywhere\\bin\\Release\\net6.0\\win10-x64\\DotNetEverywhere.dll\n      DotNetEverywhere -> C:\\Code\\Chapter07\\DotNetEverywhere\\bin\\Release\\net6.0\\win10-x64\\publish\\ \n\n    ```", "```cs\n    dotnet publish -c Release -r osx-x64\n    dotnet publish -c Release -r osx.11.0-arm64\n    dotnet publish -c Release -r linux-x64\n    dotnet publish -c Release -r linux-arm64 \n\n    ```", "```cs\n    I can run everywhere!\n    OS Version is Microsoft Windows NT 10.0.19042.0.\n    I am Windows 10.\n    Press ENTER to stop me. \n\n    ```", "```cs\nI can run everywhere!\nOS Version is Unix 11.2.3\nI am macOS.\nPress ENTER to stop me. \n\n```", "```cs\ndotnet publish -r win10-x64 -c Release --self-contained=false\n/p:PublishSingleFile=true \n\n```", "```cs\n<PropertyGroup>\n  <OutputType>Exe</OutputType>\n  <TargetFramework>net6.0\n\n</TargetFramework>\n  <Nullable>enable</Nullable>\n  <ImplicitUsings>enable</ImplicitUsings>\n  <RuntimeIdentifiers>\n    win10-x64;osx-x64;osx.11.0\n\n-arm64;linux-x64;linux-arm64\n  </RuntimeIdentifiers>\n\n **<DebugType>embedded</DebugType>**\n\n</PropertyGroup> \n\n```", "```cs\n    dotnet publish -c Release -r win10-x64 /p:PublishSingleFile=true \n\n    ```", "```cs\n<PublishTrimmed>true\n\n</PublishTrimmed> \n\n```", "```cs\ndotnet publish ... \n**-p:PublishTrimmed=True** \n\n```", "```cs\n<PublishTrimmed>true\n\n</PublishTrimmed>\n<TrimMode>Link</TrimMode> \n\n```", "```cs\ndotnet publish ... \n**-p:PublishTrimmed=True -p:TrimMode=Link** \n\n```", "```cs\n    Code/Chapter07/DotNetEverywhere/bin/Release/net6.0\n\n    /linux-x64 \n\n    ```", "```cs\n    Code/Chapter07/DotNetEverywhere/bin/Release/net6.0\n\n    /linux-x64 \n\n    ```", "```cs\n    .module extern\n\n     libSystem.Native\n    .assembly extern\n\n     System.Runtime\n    {\n      .publickeytoken = (\n        b0 3f\n\n     5f\n\n     7f\n\n     11\n\n     d5 0\n\n    a 3\n\n    a\n      )\n      .ver 6\n\n    :0\n\n    :0\n\n    :0\n\n    } \n\n    ```", "```cs\n     public\n\n     static\n\n     DirectoryInfo? GetParent(string\n\n     path)\n    {\n      if\n\n     (path == null\n\n    )\n      {\n        throw\n\n     new\n\n     ArgumentNullException(\"path\"\n\n    );\n      }\n      if\n\n     (path.Length == 0\n\n    )\n      {\n        throw\n\n     new\n\n     ArgumentException(SR.Argument_PathEmpty, \"path\"\n\n    );\n      }\n      string\n\n     fullPath = Path.GetFullPath(path);\n      string\n\n     directoryName = Path.GetDirectoryName(fullPath);\n      if\n\n     (directoryName == null\n\n    )\n      {\n        return\n\n     null\n\n    ;\n      }\n      return\n\n     new\n\n     DirectoryInfo(directoryName);\n    } \n\n    ```", "```cs\n    .method /* 06000067 */\n\n     public\n\n     hidebysig static\n\n      class\n\n     System.IO.DirectoryInfo\n\n     GetParent\n\n     (\n        string\n\n     path\n\n      ) cil\n\n     managed\n\n    {\n      .param [0\n\n    ]\n        .custom instance void\n\n     System.Runtime.CompilerServices\n        .NullableAttribute::.ctor(uint8) = ( \n          01\n\n     00\n\n     02\n\n     00\n\n     00\n\n        )\n      // Method begins at RVA 0x62d4\n\n      // Code size 64 (0x40)\n\n      .maxstack 2\n\n      .locals /* 1100000E */\n\n     (\n        [0\n\n    ] string\n\n    ,\n        [1\n\n    ] string\n\n      )\n      IL_0000: ldarg.0\n\n      IL_0001: brtrue.s IL_000e\n      IL_0003: ldstr \"path\"\n\n     /* 700005CB */\n\n      IL_0008: newobj instance void\n\n     [System.Runtime]\n        System.ArgumentNullException::.ctor(string\n\n    ) /* 0A000035 */\n\n      IL_000d: throw\n\n      IL_000e: ldarg.0\n\n      IL_000f: callvirt instance int32 [System.Runtime]\n        System.String::get_Length() /* 0A000022 */\n\n      IL_0014: brtrue.s IL_0026\n      IL_0016: call string\n\n     System.SR::get_Argument_PathEmpty() /* 0600004C */\n\n      IL_001b: ldstr \"path\"\n\n     /* 700005CB */\n\n      IL_0020: newobj instance void\n\n     [System.Runtime]\n        System.ArgumentException::.ctor(string\n\n    , string\n\n    ) /* 0A000036 */\n\n      IL_0025: throw\n\n     IL_0026: ldarg.0\n\n      IL_0027: call string\n\n     [System.Runtime.Extensions]\n        System.IO.Path::GetFullPath(string\n\n    ) /* 0A000037 */\n\n      IL_002c: stloc.0\n\n     IL_002d: ldloc.0\n\n      IL_002e: call string\n\n     [System.Runtime.Extensions]\n        System.IO.Path::GetDirectoryName(string\n\n    ) /* 0A000038 */\n\n      IL_0033: stloc.1\n\n      IL_0034: ldloc.1\n\n      IL_0035: brtrue.s IL_0039 IL_0037: ldnull\n      IL_0038: ret IL_0039: ldloc.1\n\n      IL_003a: newobj instance void\n\n        System.IO.DirectoryInfo::.ctor(string\n\n    ) /* 06000097 */\n\n      IL_003f: ret\n    } // end of method Directory::GetParent \n\n    ```", "```cs\n    <ItemGroup>\n      <PackageReference Include=\"newtonsoft.json\"\n\n     Version=\"13.0.1\"\n\n     />\n    </ItemGroup> \n\n    ```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\"\n\n>\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net6.0\n\n</TargetFramework>\n  </PropertyGroup>\n  <ItemGroup>\n\n **<PackageReference**\n\n **Include=**\n\n**\"Microsoft.EntityFrameworkCore.Sqlite\"**\n\n **Version=**\n\n**\"6.0.0\"**\n\n **/>**\n\n  </ItemGroup>\n</Project> \n\n```", "```cs\n<PackageReference\n  Include=\"Microsoft.EntityFrameworkCore.Sqlite\"\n\n  Version=\"6.0.0-preview.*\"\n\n /> \n\n```", "```cs\n<PackageReference Include=\"System.Net.Http\"\n\n Version=\"4.1.0-*\"\n\n />\n<PackageReference Include=\"Newtonsoft.Json\"\n\n Version=\"12.0.3-beta1\"\n\n /> \n\n```", "```cs\n     using\n\n     System.Text.RegularExpressions;\n    namespace\n\n     Packt.Shared\n\n    {\n      public\n\n     static\n\n     class\n\n     StringExtensions\n\n      {\n        public\n\n    static\n\n    bool\n\n    IsValidXmlTag\n\n    (\n\n    this\n\n    string\n\n     input\n\n    )\n\n        {\n          return\n\n     Regex.IsMatch(input,\n            @\"^<([a-z]+)([^<]+)*(?:>(.*)<\\/\\1>|\\s+\\/>)$\"\n\n    );\n        }\n        public\n\n    static\n\n    bool\n\n    IsValidPassword\n\n    (\n\n    this\n\n    string\n\n     input\n\n    )\n\n        {\n          // minimum of eight valid characters\n\n          return\n\n     Regex.IsMatch(input, \"^[a-zA-Z0-9_-]{8,}$\"\n\n    );\n        }\n        public\n\n    static\n\n    bool\n\n    IsValidHex\n\n    (\n\n    this\n\n    string\n\n     input\n\n    )\n\n        {\n          // three or six valid hex number characters\n\n          return\n\n     Regex.IsMatch(input,\n            \"^#?([a-fA-F0-9]{3}|[a-fA-F0-9]{6})$\"\n\n    );\n        }\n      }\n    } \n\n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\"\n\n    >\n      <PropertyGroup>\n        <TargetFramework>netstandard2.0\n\n    </TargetFramework>\n\n     **<GeneratePackageOnBuild>**\n\n    **true**\n\n    **</GeneratePackageOnBuild>**\n\n     **<PackageId>Packt.CSdotnet.SharedLibrary</PackageId>**\n\n     **<PackageVersion>**\n\n    **6.0.0.0**\n\n    **</PackageVersion>**\n\n     **<Title>C**\n\n    **# 10 and .NET 6 Shared Library</Title>**\n\n     **<Authors>Mark J Price</Authors>**\n\n     **<PackageLicenseExpression>**\n\n     **MS-PL**\n\n     **</PackageLicenseExpression>**\n\n     **<PackageProjectUrl>**\n\n     **https:**\n\n    **//github.com/markjprice/cs10dotnet6**\n\n     **</PackageProjectUrl>**\n\n     **<PackageIcon>packt-csdotnet-sharedlibrary.png</PackageIcon>**\n\n     **<PackageRequireLicenseAcceptance>**\n\n    **true**\n\n    **</PackageRequireLicenseAcceptance>**\n\n     **<PackageReleaseNotes>**\n\n     **Example shared library packaged** \n\n    **for**\n\n     **NuGet.**\n\n     **</PackageReleaseNotes>**\n\n     **<Description>**\n\n     **Three extension methods to validate a** \n\n    **string**\n\n    **value**\n\n    **.**\n\n     **</Description>**\n\n     **<Copyright>**\n\n     **Copyright \u00a9** \n\n    **2016-2021**\n\n     **Packt Publishing Limited**\n\n     **</Copyright>**\n\n     **<PackageTags>**\n\n    **string**\n\n     **extensions packt csharp dotnet</PackageTags>**\n\n      </PropertyGroup>\n\n     **<ItemGroup>**\n\n     **<None Include=**\n\n    **\"packt-csdotnet-sharedlibrary.png\"**\n\n    **>**\n\n     **<Pack>True</Pack>**\n\n     **<PackagePath></PackagePath>**\n\n     **</None>**\n\n     **</ItemGroup>**\n\n    </Project> \n\n    ```", "```cs\n    <ItemGroup>\n      <PackageReference Include=\"newtonsoft.json\"\n\n     Version=\"13.0.1\"\n\n     />\n\n     **<PackageReference Include=**\n\n    **\"packt.csdotnet.sharedlibrary\"**\n\n     **Version=**\n\n    **\"6.0.0\"**\n\n     **/>**\n\n    </ItemGroup> \n\n    ```", "```cs\n    Write(\"Enter a color value in hex: \"\n\n    ); \n    string\n\n    ? hex = ReadLine(); // or \"00ffc8\"\n\n    WriteLine(\"Is {0} a valid color value? {1}\"\n\n    ,\n      arg0: hex, arg1: hex.IsValidHex());\n    Write(\"Enter a XML element: \"\n\n    ); \n    string\n\n    ? xmlTag = ReadLine(); // or \"<h1 class=\\\"<\\\" />\"\n\n    WriteLine(\"Is {0} a valid XML element? {1}\"\n\n    , \n      arg0: xmlTag, arg1: xmlTag.IsValidXmlTag());\n    Write(\"Enter a password: \"\n\n    ); \n    string\n\n    ? password = ReadLine(); // or \"secretsauce\"\n\n    WriteLine(\"Is {0} a valid password? {1}\"\n\n    ,\n      arg0: password, arg1: password.IsValidPassword()); \n\n    ```", "```cs\n    Enter a color value in hex: 00ffc8 \n    Is 00ffc8 a valid color value? True\n    Enter an XML element: <h1 class=\"<\" />\n    Is <h1 class=\"<\" /> a valid XML element? False \n    Enter a password: secretsauce\n    Is secretsauce a valid password? True \n\n    ```", "```cs\ndotnet tool install -g upgrade-assistant \n\n```", "```cs\n    <PackageReference\n      Include=\"dialectsoftware.collections.matrix\"\n\n      Version=\"1.0.0\"\n\n     /> \n\n    ```", "```cs\n    Axis x = new\n\n    (\"x\"\n\n    , 0\n\n    , 10\n\n    , 1\n\n    );\n    Axis y = new\n\n    (\"y\"\n\n    , 0\n\n    , 4\n\n    , 1\n\n    );\n    Matrix<long\n\n    > matrix = new\n\n    (new\n\n    [] { x, y });\n    for\n\n     (int\n\n     i = 0\n\n    ; i < matrix.Axes[0\n\n    ].Points.Length; i++)\n    {\n      matrix.Axes[0\n\n    ].Points[i].Label = \"x\"\n\n     + i.ToString();\n    }\n    for\n\n     (int\n\n     i = 0\n\n    ; i < matrix.Axes[1\n\n    ].Points.Length; i++)\n    {\n      matrix.Axes[1\n\n    ].Points[i].Label = \"y\"\n\n     + i.ToString();\n    }\n    foreach\n\n     (long\n\n    [] c in\n\n     matrix)\n    {\n      matrix[c] = c[0\n\n    ] + c[1\n\n    ];\n    }\n    foreach\n\n     (long\n\n    [] c in\n\n     matrix)\n    {\n      WriteLine(\"{0},{1} ({2},{3}) = {4}\"\n\n    ,\n        matrix.Axes[0\n\n    ].Points[c[0\n\n    ]].Label,\n        matrix.Axes[1\n\n    ].Points[c[1\n\n    ]].Label,\n        c[0\n\n    ], c[1\n\n    ], matrix[c]);\n    } \n\n    ```", "```cs\n    warning NU1701: Package 'DialectSoftware.Collections.Matrix\n    1.0.0' was restored using '.NETFramework,Version=v4.6.1,\n    .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7,\n    .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2,\n    .NETFramework,Version=v4.8' instead of the project target framework 'net6.0'. This package may not be fully compatible with your project.\n    x0,y0 (0,0) = 0\n    x0,y1 (0,1) = 1\n    x0,y2 (0,2) = 2\n    x0,y3 (0,3) = 3\n    ... \n\n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\"\n\n    >\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net6.0\n\n    </TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n\n     **<EnablePreviewFeatures>**\n\n    **true**\n\n    **</EnablePreviewFeatures>**\n\n     **<LangVersion>preview</LangVersion>**\n\n      </PropertyGroup>\n    </Project> \n\n    ```", "```cs\n     using\n\n     static\n\n     System.Console;\n    Doer.DoSomething();\n    public\n\n     interface\n\n     IWithStaticAbstract\n\n    {\n      static\n\n    abstract\n\n    void\n\n    DoSomething\n\n    ()\n\n    ;\n    }\n    public\n\n     class\n\n     Doer\n\n     : IWithStaticAbstract\n\n    {\n      public\n\n    static\n\n    void\n\n    DoSomething\n\n    ()\n\n      {\n        WriteLine(\"I am an implementation of a static abstract method.\"\n\n    );\n      }\n    } \n\n    ```"]