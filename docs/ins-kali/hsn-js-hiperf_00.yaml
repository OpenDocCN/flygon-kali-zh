- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Much of today's web environment has changed dramatically – not only in terms
    of creating web applications but also when it comes to creating server-side applications.
    A frontend ecosystem that was dominated by jQuery and CSS frameworks such as Bootstrap
    has been replaced with reactive, fully fledged applications that could be mistaken
    for an application running on the desktop.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的网络环境发生了巨大变化-不仅在创建Web应用程序方面，而且在创建服务器端应用程序方面也是如此。以jQuery和Bootstrap等CSS框架为主导的前端生态系统已经被具有响应性的完整应用程序所取代，这些应用程序可能被误认为是在桌面上运行的应用程序。
- en: The language we write these applications in has also changed in a dramatic fashion.
    What was once a mess of `var` and scope issues has turned into a fast and easy-to-program
    language. JavaScript has not only changed the way we write our frontend, it has
    also changed the backend programming experience.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写这些应用程序的语言也发生了戏剧性的变化。曾经是一团混乱的`var`和作用域问题已经变成了一种快速且易于编程的语言。JavaScript不仅改变了我们编写前端的方式，还改变了后端编程的体验。
- en: We are now able to write server-side applications in the language that we write
    our frontend in. JavaScript has also modernized, and possibly even popularized,
    the event-driven system with Node.js. We can now write code for both our frontend
    and backend in JavaScript and possibly even share the JavaScript files we generate
    between the two.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在能够用我们前端使用的语言来编写服务器端应用程序。JavaScript也现代化了，甚至可能通过Node.js推广了事件驱动系统。我们现在可以用JavaScript编写前端和后端的代码，甚至可能在两者之间共享我们生成的JavaScript文件。
- en: However, while the application landscape has evolved and many people have moved
    onto modern frameworks, such as React and Vue.js for the frontend and Express
    and Sails for the backend, many of these developers do not understand the inner
    workings. While this showcases just how simple it is to enter into the ecosystem,
    it also showcases how easy it is to not understand how to optimize our code bases.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管应用程序的格局已经发生了变化，许多人已经转向了现代框架，比如React和Vue.js用于前端，Express和Sails用于后端，但许多这些开发人员并不了解内部运作。虽然这展示了进入生态系统是多么简单，但也展示了我们如何不理解如何优化我们的代码库是多么容易。
- en: This book focuses on teaching highly performant JavaScript. This not only means
    fast execution speeds, but also a lower memory footprint. This means that any
    frontend system will get to the user faster, and we will be able to start our
    applications that much faster. On top of this, we have many new technologies that
    have moved the web forward, such as Web Workers.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专注于教授高性能JavaScript。这不仅意味着快速执行速度，还意味着更低的内存占用。这意味着任何前端系统都能更快地到达用户手中，我们也能更快地启动我们的应用程序。除此之外，我们还有许多新技术推动了网络的发展，比如Web
    Workers。
- en: Who this book is for
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书对象
- en: This book is for those who are interested in all the latest features of the
    modern web. On top of this, it's also for those with an interest in reducing memory
    costs while increasing speed. People who are interested in how a computer works
    and even how a JavaScript compiler works will be interested in the contents of
    this book. Finally, for those who are interested in WebAssembly but do not know
    where to start, this is a good jumping-off point in learning the essentials.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合那些对现代网络的最新功能感兴趣的人。除此之外，它也适合那些对减少内存成本并提高速度感兴趣的人。对计算机工作原理甚至JavaScript编译器工作原理感兴趣的人也会对本书内容感兴趣。最后，对于那些对WebAssembly感兴趣但不知道从何开始的人来说，这是学习基本知识的好起点。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](28196d54-886b-4b9c-9974-190c0800c971.xhtml), *Tools for High Performance
    on the Web*, will cover the various browsers that our applications can run on.
    We will also take a look at the various tools that help us to debug, profile,
    and even run ad hoc code to test the functionality of our JavaScript.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](28196d54-886b-4b9c-9974-190c0800c971.xhtml)，“网络高性能工具”，将介绍我们的应用程序可以运行的各种浏览器。我们还将介绍各种工具，帮助我们调试、分析，甚至运行临时代码来测试我们的JavaScript功能。'
- en: '[Chapter 2](513ba745-b44e-4a18-96f1-7cfbccd75ff9.xhtml), *Immutability versus
    Mutability – The Balance between Safety and Speed*, will take a look at the concepts
    of mutable/immutable state. We will cover when and where to use each. On top of
    this, we will cover how to create the illusion of immutability while having a
    mutable data structure.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](513ba745-b44e-4a18-96f1-7cfbccd75ff9.xhtml)，“不可变性与可变性-安全与速度之间的平衡”，将探讨可变/不可变状态的概念。我们将介绍何时何地使用每种状态。除此之外，我们还将介绍如何在拥有可变数据结构的同时创建不可变性的幻觉。'
- en: '[Chapter 3](da1a0a36-4261-43f1-a42b-a9d94284dc9f.xhtml), *Vanilla Land – Looking
    at the Modern Web*, will take a look at how far JavaScript has come and all of
    the new and notable features up to ECMAScript 2020\. On top of this, we will look
    at various advanced features, such as currying and writing in a functional manner.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](da1a0a36-4261-43f1-a42b-a9d94284dc9f.xhtml)，“原生之地-看看现代网络”，将介绍JavaScript的发展历程以及截至ECMAScript
    2020的所有新功能。除此之外，我们还将探讨各种高级功能，比如柯里化和以函数式方式编写。'
- en: '[Chapter 4](bbac23b7-12e2-412e-9aaa-f31b1c321dab.xhtml), *Practical Example –
    A Look at Svelte and Being Vanilla*, will cover a fairly new framework called
    Svelte. It will go over this compile to Vanilla JavaScript framework and explore
    how it achieves lightning-fast results with an intuitive framework.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章](bbac23b7-12e2-412e-9aaa-f31b1c321dab.xhtml)，“实际例子-看看Svelte和原生”，将介绍一个相当新的框架叫做Svelte。它将介绍这个编译成原生JavaScript的框架，并探讨它如何通过直观的框架实现闪电般快速的结果。'
- en: '[Chapter 5](6c403493-7028-408c-9da6-b6650ad6bfcb.xhtml), *Switching Contexts –
    No DOM, Different Vanilla*, will cover the low-level Node.js work. This means
    taking a look at the various modules available to us. We will also take a look
    at how we can achieve amazing results with no extra libraries.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第五章](6c403493-7028-408c-9da6-b6650ad6bfcb.xhtml)，“切换上下文-无DOM，不同的原生”，将介绍低级别的Node.js工作。这意味着我们将看看各种可用的模块。我们还将看看如何在没有额外库的情况下实现惊人的结果。'
- en: '[Chapter 6](7dc2a5fd-0c78-49e7-9e84-f789eab14ca5.xhtml), *Message Passing –
    Learning about the Different Types*, will take a look at different ways to talk
    among different processes. We will cover unnamed pipes, named pipes, sockets,
    and transmission via TCP/UDP. We will also take a look at HTTP/2 and briefly look
    at HTTP/3.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，*消息传递-了解不同类型*，将介绍不同进程之间交流的不同方式。我们将涵盖未命名管道，命名管道，套接字，以及通过TCP/UDP进行传输。我们还将简要介绍HTTP/2和HTTP/3。
- en: '[Chapter 7](81cf1aa1-6ded-4d94-8686-e2bd65db6a8c.xhtml), *Streams – Understanding
    Stream and Non-Blocking I/O*, will cover the Stream API and how to utilize it.
    We will cover each type of stream and the use cases for each. On top of this,
    we will implement some practical streams that, with some modification, could be
    used in other projects.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，*流-理解流和非阻塞I/O*，将介绍流API以及如何利用它。我们将介绍每种类型的流以及每种流的用例。除此之外，我们还将实现一些实用的流，经过一些修改后，可以在其他项目中使用。
- en: '[Chapter 8](dc96fd47-7979-4029-80dd-f42712a1d296.xhtml), *Data Formats – Looking
    at Different Data Types Other Than JSON*, will look into schema and schema-less
    data types. We will look into implementing a data format and then see popular
    data formats in action.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，*数据格式-查看除JSON之外的不同数据类型*，将研究模式和无模式数据类型。我们将研究实施数据格式，然后看看流行的数据格式是如何运作的。
- en: '[Chapter 9](59d1466a-ef4d-42f8-bc88-f3d364c3d23e.xhtml), *Practical Example
    – Building a Static Server*, will take the previous four chapters and apply these
    concepts and build a static site generator. While it may not be as powerful as
    GatsbyJS, it will have most of the features we expect from a static site generator.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，*实际示例-构建静态服务器*，将使用前面四章的概念构建一个静态站点生成器。虽然它可能没有GatsbyJS那么强大，但它将具有我们从静态站点生成器中期望的大多数功能。
- en: '[Chapter 10](d1a2a4d4-8ed1-4d82-a098-835d61c01b86.xhtml), *Workers – Learning
    about Dedicated and Shared Workers*, will move back to the frontend and take a
    look at two of the web worker types. We will utilize these to process data from
    the main thread. On top of this, we will take a look at how we can talk among
    our workers and the main process.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，*Workers-了解专用和共享工作者*，将回到前端，看看两种Web Worker类型。我们将利用这些来处理来自主线程的数据。除此之外，我们还将看看如何在工作者和主进程之间交流。
- en: '[Chapter 11](85fd3774-6bce-4d86-85f3-355d7f140b5b.xhtml), *Service Workers
    – Caching and Making Things Faster*, will look at the service worker and the life
    cycle of the service worker. On top of this, we will look at practical examples
    of how to utilize a service worker in a progressive web application.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，*Service Workers-缓存和加速*，将介绍服务工作者和服务工作者的生命周期。除此之外，我们还将看看如何在渐进式Web应用程序中利用服务工作者的实际示例。
- en: '[Chapter 12](6662ad13-783a-440b-9565-8a75223284da.xhtml), *Building and Deploying
    a Full Web Application*, will look at **continuous integration**/**continuous
    deployment** (**CI**/**CD**) with the tool CircleCI. We will see how we can use
    it to deploy our web application built in [Chapter 9](59d1466a-ef4d-42f8-bc88-f3d364c3d23e.xhtml),
    *Practical Example – Building a Static Server*,to a server. We will even take
    a look at adding some security checks to our application before deployment.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，*构建和部署完整的Web应用程序*，将使用CircleCI工具进行**持续集成**/**持续部署**（**CI**/**CD**）。我们将看到如何使用它来部署我们在第9章构建的Web应用程序，*实际示例-构建静态服务器*，到服务器上。我们甚至将在部署之前检查应用程序的一些安全性。
- en: '[Chapter 13](13ca1263-4202-4c5c-ab9f-3af4e92a00de.xhtml), *WebAssembly – A
    Brief Look into Native Code on the Web*,will look at this relatively new technology.
    We will see how to write low-level WebAssembly and how it runs on the web. We
    will then turn our attention to writing C++ for the browser. Finally, we will
    take a look at a ported application and the WebAssembly that is behind it.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，*WebAssembly-简要了解Web上的本机代码*，将介绍这项相对较新的技术。我们将看到如何编写低级WebAssembly以及它在Web上的运行方式。然后，我们将把注意力转向为浏览器编写C++。最后，我们将看看一个移植的应用程序以及背后的WebAssembly。
- en: To get the most out of this book
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: In general, the requirements to run most of the code are minimal. A computer
    that is capable of handling Chrome, Node.js, and a C compiler is needed. The C
    compiler that we will be utilizing near the end of this book will be CMake. These
    systems should work on all modern operating systems.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，运行大多数代码的要求是最低的。需要一台能够运行Chrome、Node.js和C编译器的计算机。我们将在本书的最后使用的C编译器将是CMake。这些系统应该在所有现代操作系统上都能运行。
- en: For Chrome, having the latest versions will be helpful as we will be utilizing
    some features that are either in the proposal stage or in ECMAScript 2020. We
    are using the latest LTS version of Node.js (v12.16.1), and are avoiding the use
    of Node.js 13 as it won't be promoted to LTS. On top of this, the command-line
    tool for Windows is not that great, so it is recommended to download Cmder, from [https://cmder.net/](https://cmder.net/),
    to have a Bash-like shell for Windows.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Chrome来说，拥有最新版本将是有帮助的，因为我们将利用一些提案阶段或ECMAScript 2020中的功能。我们正在使用最新的LTS版本的Node.js（v12.16.1），并且避免使用Node.js
    13，因为它不会被提升为LTS。除此之外，Windows的命令行工具并不是很好，因此建议下载Cmder，从[https://cmder.net/](https://cmder.net/)，以在Windows上拥有类似Bash的shell。
- en: Finally, a modern IDE or editor is needed. We will be utilizing Visual Studio
    Code throughout this book, but many other alternatives, such as Visual Studio,
    IntelliJ, Sublime Text 3, and so on, can be used.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，需要一个现代的集成开发环境或编辑器。我们将在整本书中使用Visual Studio Code，但也可以使用许多其他替代方案，比如Visual Studio、IntelliJ、Sublime
    Text 3等。
- en: '| **Software/hardware covered in the book** | **Operating system requirements**
    |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| **书中涉及的软件/硬件** | **操作系统要求** |'
- en: '| Svelte.js v3 | Windows 10/OSX/Linux |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| Svelte.js v3 | Windows 10/OSX/Linux |'
- en: '| ECMAScript 2020 | Windows 10/OSX/Linux |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| ECMAScript 2020 | Windows 10/OSX/Linux |'
- en: '| Node.js v12.16.1 LTS | Windows 10/OSX/Linux |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| Node.js v12.16.1 LTS | Windows 10/OSX/Linux |'
- en: '| WebAssembly | Windows 10/OSX/Linux |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| WebAssembly | Windows 10/OSX/Linux |'
- en: Download the example code files
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，可以访问[www.packtpub.com/support](https://www.packtpub.com/support)注册，文件将直接发送到您的邮箱。
- en: 'You can download the code files by following these steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packt.com](http://www.packt.com).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packt.com](http://www.packt.com)登录或注册。
- en: Select the Support tab.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择支持选项卡。
- en: Click on Code Downloads.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击代码下载。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，然后按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用最新版本的软件解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows系统使用WinRAR/7-Zip
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac系统使用Zipeg/iZip/UnRarX
- en: 7-Zip/PeaZip for Linux
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux系统使用7-Zip/PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-High-Performance-Web-Development-with-JavaScript](https://github.com/PacktPublishing/Hands-On-High-Performance-Web-Development-with-JavaScript). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Hands-On-High-Performance-Web-Development-with-JavaScript](https://github.com/PacktPublishing/Hands-On-High-Performance-Web-Development-with-JavaScript)。如果代码有更新，将在现有的GitHub存储库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他代码包，来自我们丰富的图书和视频目录，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**
    上找到。去看看吧！
- en: Conventions used
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "This is very similar to `console.time` and `timeEnd` but
    it should showcase what is available with generators."'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名。例如："这与`console.time`和`timeEnd`非常相似，但它应该展示生成器可用的内容。"'
- en: 'A block of code is set as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都是这样写的：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "If we open the DevTools by pressing *F12* in Windows, we may see
    the **Shader Editor** tab already."'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会以这种方式出现在文本中。例如："如果我们在Windows中按下*F12*打开DevTools，我们可能会看到**Shader
    Editor**选项卡已经打开。"'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会显示为这样。提示和技巧会显示为这样。
